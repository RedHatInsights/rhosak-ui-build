{"version":3,"file":"js/9993.cf024e97e5e14fddca50.js","mappings":"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","sources":["webpack:///./src/routes/control-plane/routesConsts.ts","webpack:///./src/routes/control-plane/DrawerProvider.tsx","webpack:///./src/routes/RedirectOnGateError.tsx","webpack:///./src/useUserControlGate.tsx","webpack:///./src/routes/control-plane/routes/KafkaInstancesRoute.tsx","webpack:///./src/routes/control-plane/routes/CreateKafkaInstanceRoute.tsx","webpack:///./src/routes/control-plane/routes/useCreateKafkaCallbacks.ts","webpack:///./src/routes/control-plane/routes/useSelfTermsReviewGate.tsx","webpack:///./src/routes/control-plane/useControlPlaneGate.tsx","webpack:///./src/routes/control-plane/routes/DeleteKafkaInstanceRoute.tsx","webpack:///./src/routes/control-plane/routes/TermsAndConditionsRoute.tsx","webpack:///./src/routes/control-plane/routes/ChangeOwnerRoute.tsx","webpack:///./src/routes/control-plane/ControlPlaneRoutes.tsx","webpack:///./src/routes/data-plane/routesConsts.ts","webpack:///./src/routes/data-plane/useDataPlaneGate.tsx","webpack:///./src/routes/data-plane/routes/DataPlaneHeaderConnected.tsx","webpack:///./src/routes/data-plane/routes/PermissionsRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicsRoute.tsx","webpack:///./src/routes/data-plane/routes/SettingsRoute.tsx","webpack:///./src/routes/data-plane/routes/DashboardRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupsRoute.tsx","webpack:///./src/routes/data-plane/useTopicGate.tsx","webpack:///./src/routes/data-plane/routes/DataPlaneTopicHeaderConnected.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupsRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicMessagesRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicPropertiesRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicSchemasRoute.tsx","webpack:///./src/routes/data-plane/useConsumerGroupGate.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupResetOffsetRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupViewPartitionRoute.tsx","webpack:///./src/routes/data-plane/useTopicConsumerGroupGate.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupResetOffsetRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupViewPartitionRoute.tsx","webpack:///../../packages/ui/src/components/DeleteKafkaTopic/DeleteKafkaTopic.tsx","webpack:///./src/routes/data-plane/routes/TopicDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicEditPropertiesRoute.tsx","webpack:///./src/routes/data-plane/routes/PermissionsEditRoute.tsx","webpack:///./src/routes/data-plane/routes/PermissionsSelectAccountRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicCreateRoute.tsx","webpack:///./src/routes/data-plane/DataPlaneRoutes.tsx","webpack:///./src/routes/overview/OverviewRoute.tsx","webpack:///./src/routes/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/QuickstartLoader.tsx","webpack:///./src/store/index.ts","webpack:///../../packages/consoledot-api/src/transformers/topicTransformer.ts","webpack:///../../packages/ui-models/src/models/kafka.ts","webpack:///../../packages/consoledot-api/src/transformers/ConsumerGroupTransformer.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaKpis.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/valuesToQuery.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkas.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchProviderRegionSizes.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchProvidersWithRegions.ts","webpack:///../../packages/consoledot-api/src/utilsAndConstants.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchStandardQuota.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopicsMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchUserAccounts.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchSelfTermsReview.ts","webpack:///../../packages/consoledot-api/src/ApiProvider.tsx","webpack:///../../packages/consoledot-api/src/queryKeys.ts","webpack:///../../packages/consoledot-api/src/useApi.ts","webpack:///../../packages/consoledot-api/src/queries/useConsumerGroups.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchConsumerGroups.ts","webpack:///../../packages/consoledot-api/src/transformers/kafkaRequestToKafkaInstanceEnhanched.ts","webpack:///../../packages/consoledot-api/src/queries/useCreateInstance.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkaInstanceTransformer.ts","webpack:///../../packages/consoledot-api/src/queries/useKafka.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkas.ts","webpack:///../../packages/consoledot-api/src/queries/useTopic.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopic.ts","webpack:///../../packages/consoledot-api/src/queries/useTopics.ts","webpack:///../../packages/consoledot-api/src/queries/useUserAccounts.ts","webpack:///../../packages/consoledot-api/src/queries/useConsumerGroup.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchConsumerGroup.ts","webpack:///../../packages/consoledot-api/src/queries/useAcls.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchPermissions.ts","webpack:///../../packages/consoledot-api/src/queries/useServiceAccounts.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchServiceAccounts.ts","webpack:///../../packages/consoledot-api/src/queries/useUser.ts","webpack:///../../packages/consoledot-api/src/queries/useSSOProvider.ts","webpack:///../../packages/consoledot-api/src/queries/useSelfTermsReview.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDeveloperInstanceAvailabilityFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaKpisFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useTopicsMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useTopicsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useMessagesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchMessages.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useProviderRegionSizesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useProvidersWithRegionsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useStandardQuotaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchOrganization.ts","webpack:///../../packages/consoledot-api/src/mutations/useCreateKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteTopicMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdateKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteConsumerGroupMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useResetConsumerGroupMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeletePermissionsMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdatePermissionsMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useCreateTopicMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdateTopicMutation.ts","webpack:///../../packages/consoledot-api/src/types.ts","webpack:///../../packages/local-storage-helpers/index.ts","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupPopover.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupState.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupByKafka.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupByTopic.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupDetails.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupEmptyState.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/OffsetSelect.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/TopicSelect.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupResetOffset.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/DeleteConsumerGroup.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupDrawer.tsx","webpack:///../../packages/ui/src/hooks/useKafkaLabels.ts","webpack:///../../packages/ui/src/hooks/useTopicLabels.ts","webpack:///../../packages/ui/src/hooks/useConsumerGroupLabels.ts","webpack:///../../packages/ui/src/components/ConsumerGroups/ConsumerGroups.tsx","webpack:///../../packages/ui/src/components/ControlPlaneHeader.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/shared.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/StandardPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/TrialPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateKafkaInstanceMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateKafkaInstanceProvider.tsx","webpack:///../../packages/ui/src/components/Logos/images.ts","webpack:///../../packages/ui/src/components/Logos/AWSLogo.tsx","webpack:///../../packages/ui/src/components/Logos/AzureLogo.tsx","webpack:///../../packages/ui/src/components/Logos/GCPLogo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/BillingTiles.tsx","webpack:///../../packages/ui/src/components/Logos/RedhatLogo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/CloudProviderTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/StandardInstanceForm.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceActions.tsx","webpack:///../../packages/ui/src/components/DataPlaneHeader.tsx","webpack:///../../packages/ui/src/components/DataPlaneTopicHeader.tsx","webpack:///../../packages/ui/src/components/DeleteKafKaInstance/DeleteKafkaInstance.tsx","webpack:///../../packages/ui/src/components/I18nProvider.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/DetailsTabAlert.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaDetailsTab.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/SuspendedConnection.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaConnectionTabP2.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/SampleCodeSnippet.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/CodeSnippets.ts","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaSampleCode.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/KafkaInstanceDrawer.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusLabel.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/types.ts","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusProgressStepper.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusPopoverContent.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusPopover.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/SuspendedPopover.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/KafkaInstanceStatus.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoInstances.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoResults.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/KafkaInstances.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/DateTimePicker.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/FilterGroup.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/LimitSelector.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/utils.ts","webpack:///../../packages/ui/src/components/KafkaTopics/types.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoDataCell.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/MessageDetails.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoDataEmptyState.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoResultsEmptyState.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/OffsetRange.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/PartitionSelector.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/UnknownValuePreview.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/MessageBrowserMachine.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/KafkaMessageBrowser.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceCapacityTable.tsx","webpack:///../../packages/ui/src/components/MarketingPage.tsx","webpack:///../../packages/ui/src/components/KafkaPageV3.tsx","webpack:///../../packages/ui/src/components/KafkaTopics/components/EmptyStateNoTopic.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/types.ts","webpack:///../../packages/ui/src/components/KafkaTopics/KafkaTopics.tsx","webpack:///../../packages/ui/src/components/Metrics/types.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PermissionsDropdown.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceTypeLabel.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/Cells.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/EmptyPermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/SelectAccount.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceName.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceOperation.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourcePermission.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourcePrefixRule.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceType.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ShortcutsTableHead.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/KafkaInstanceManualPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/AssignPermissionsManual.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ProduceTopicRow.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ConsumeTopicShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ManageAccessShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ProduceTopicShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/AssignPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PreCancelModal.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ReviewPermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ViewAccountDetails.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/utils.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/EditPermissions.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateInitialLoading.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateMetricsUnavailable.tsx","webpack:///../../packages/ui/src/components/Metrics/components/MetricsLayout.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardBodyLoading.tsx","webpack:///../../packages/ui/src/components/Metrics/consts.ts","webpack:///../../packages/ui/src/components/Metrics/components/ChartSkeletonLoader.tsx","webpack:///../../packages/ui/src/components/Metrics/components/useChartWidth.tsx","webpack:///../../packages/ui/src/components/Metrics/components/utils.ts","webpack:///../../packages/ui/src/components/Metrics/components/ChartLinearWithOptionalLimit.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartLogSizePerPartition.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartPopover.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartTotalBytes.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoMetricsData.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoMetricsDataForSelection.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoTopics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoTopicSelected.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTime.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTopic.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarRefresh.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarKafkaInstanceMetric.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardKafkaInstanceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardKpi.tsx","webpack:///../../packages/ui/src/components/Metrics/components/MetricsLagAlert.tsx","webpack:///../../packages/ui/src/components/Metrics/components/PartitionCard.tsx","webpack:///../../packages/ui/src/components/Metrics/machines/KafkaInstanceMetricsMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/TopicsMetricsMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/MetricsKpiMachine.ts","webpack:///../../packages/ui/src/components/Metrics/KafkaInstanceMetricsProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/MetricsKpiProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/TopicsMetricsProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/useKafkaInstanceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/useTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/Metrics.tsx","webpack:///../../packages/ui/src/components/Metrics/useMetricsKpi.tsx","webpack:///../../packages/ui/src/components/Settings/Settings.tsx","webpack:///../../packages/ui/src/components/Topic/components/types.ts","webpack:///../../packages/ui/src/components/Topic/components/CreateTopicHead.tsx","webpack:///../../packages/ui/src/components/Topic/components/PartitionLimitWarning.tsx","webpack:///../../packages/ui/src/components/Topic/components/retentionTimeTransformer.ts","webpack:///../../packages/ui/src/components/Topic/components/TextWithLabelPopover.tsx","webpack:///../../packages/ui/src/components/Topic/components/Cleanup.tsx","webpack:///../../packages/ui/src/components/Topic/components/CustomRetentionMessage.tsx","webpack:///../../packages/ui/src/components/Topic/components/CustomRetentionSize.tsx","webpack:///../../packages/ui/src/components/Topic/components/useValidateTopic.ts","webpack:///../../packages/ui/src/components/Topic/components/CoreConfiguration.tsx","webpack:///../../packages/ui/src/components/Topic/components/Flush.tsx","webpack:///../../packages/ui/src/components/Topic/components/Log.tsx","webpack:///../../packages/ui/src/components/Topic/components/Message.tsx","webpack:///../../packages/ui/src/components/Topic/components/Replication.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvanceIndex.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvanceJumpLinks.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvancePage.tsx","webpack:///../../packages/ui/src/components/Topic/components/retentionSizeTransformer.tsx","webpack:///../../packages/ui/src/components/Topic/components/CreateTopicWizard.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepMessageRetention.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepPartitions.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepReplicas.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepTopicName.tsx","webpack:///../../packages/ui/src/components/Topic/components/WizardCustomFooter.tsx","webpack:///../../packages/ui/src/components/Topic/CreateTopic/CreateTopic.tsx","webpack:///../../packages/ui/src/components/Topic/EditTopicProperties/EditTopicProperties.tsx","webpack:///../../packages/ui/src/components/Topic/TopicProperties/TopicProperties.tsx","webpack:///../../packages/ui/src/components/ChangeKafkaOwner/SelectOwner.tsx","webpack:///../../packages/ui/src/components/ChangeKafkaOwner/ChangeKafkaOwner.tsx","webpack:///../../packages/ui/src/components/TermsAndConditionsDialog/TermsAndConditionsDialog.tsx"],"sourcesContent":["export const ControlPlaneRouteRoot = \"/kafkas\" as const;\nconst NewInstanceSegment = \"create\";\nconst TermsAndConditionsSegment = \"terms-and-conditions\";\nexport const ControlPlaneSpecialSegments = [\n  NewInstanceSegment,\n  TermsAndConditionsSegment,\n];\n\nexport const ControlPlaneRoutePath =\n  `${ControlPlaneRouteRoot}/:id?/:section(delete|change-owner)?` as const;\nexport const ControlPlaneNewInstancePath = `${ControlPlaneRouteRoot}/${NewInstanceSegment}`;\nexport const ControlPlaneTermsAndConditionsPath = `${ControlPlaneRouteRoot}/${TermsAndConditionsSegment}`;\nexport const ControlPlaneDeleteInstancePath = `${ControlPlaneRouteRoot}/:id/delete`;\nexport const ControlPlaneChangeOwnerPath = `${ControlPlaneRouteRoot}/:id/change-owner`;\nexport type ControlPlaneRouteParams = {\n  id?: string;\n  section?: \"delete\" | \"change-owner\";\n};\n\nexport type ControlPlaneNavigationProps = {\n  instancesHref: string;\n};\n","import { useKafka, useSSOProvider } from \"consoledot-api\";\nimport type { FunctionComponent, MutableRefObject } from \"react\";\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { KafkaInstanceDrawerTab } from \"ui\";\nimport { KafkaInstanceDrawer } from \"ui\";\nimport type { ControlPlaneRouteParams } from \"./routesConsts\";\nimport {\n  ControlPlaneRoutePath,\n  ControlPlaneSpecialSegments,\n} from \"./routesConsts\";\n\ntype DrawerContextProps = {\n  selectedInstance: string | undefined;\n  activeTab: KafkaInstanceDrawerTab;\n  setActiveTab: (tab: KafkaInstanceDrawerTab) => void;\n  isExpanded: boolean;\n  toggleExpanded: (newState?: boolean) => void;\n  onClose: MutableRefObject<(() => void) | undefined>;\n};\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst DrawerContext = createContext<DrawerContextProps>(null!);\n\nexport const DrawerProvider: FunctionComponent = ({ children }) => {\n  const match = useRouteMatch<ControlPlaneRouteParams>(ControlPlaneRoutePath);\n  if (!match) {\n    throw Error(\"DrawerProvider used outside the expected route\");\n  }\n  const selectedInstance =\n    (match.params.id &&\n      ControlPlaneSpecialSegments.includes(match.params.id)) ||\n    match.params.section !== undefined\n      ? undefined\n      : match.params.id;\n  const { data: instance } = useKafka(selectedInstance);\n  const [isExpanded, setIsExpanded] = useState(\n    selectedInstance !== undefined && match.isExact\n  );\n  const [activeTab, setActiveTab] = useState<KafkaInstanceDrawerTab>(\"details\");\n  const onClose = useRef<() => void | undefined>();\n\n  const { data: tokenEndPointUrl } = useSSOProvider();\n\n  const toggleExpanded = useCallback((newValue: boolean | undefined) => {\n    setIsExpanded((prev) => {\n      const isExpanded = newValue !== undefined ? newValue : !prev;\n      if (isExpanded === false && onClose.current) {\n        onClose.current();\n      }\n      return isExpanded;\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!instance) {\n      setIsExpanded(false);\n    }\n  }, [instance]);\n\n  const value = useMemo(() => {\n    const shouldBeExpanded = selectedInstance !== undefined && isExpanded;\n\n    return {\n      selectedInstance,\n      activeTab,\n      setActiveTab,\n      isExpanded: shouldBeExpanded,\n      toggleExpanded,\n      onClose,\n    };\n  }, [activeTab, isExpanded, selectedInstance, toggleExpanded]);\n\n  return (\n    <DrawerContext.Provider value={value}>\n      <KafkaInstanceDrawer\n        instance={instance}\n        activeTab={activeTab}\n        onTabChange={setActiveTab}\n        isExpanded={isExpanded}\n        onClose={() => toggleExpanded(false)}\n        tokenEndpointUrl={tokenEndPointUrl}\n      >\n        {children}\n      </KafkaInstanceDrawer>\n    </DrawerContext.Provider>\n  );\n};\n\nexport function useDrawer(onClose?: () => void) {\n  const context = useContext(DrawerContext);\n  context.onClose.current = onClose;\n  return context;\n}\n","import { useQueryErrorResetBoundary } from \"consoledot-api\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useEffect } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { Redirect, useLocation } from \"react-router-dom\";\n\nexport const RedirectOnGateError: FunctionComponent<{\n  redirectUrl: string;\n}> = ({ children, redirectUrl }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const { key } = useLocation();\n\n  return (\n    <ErrorBoundary\n      resetKeys={[key]}\n      fallbackRender={() => <RedirectAndResetError redirectUrl={redirectUrl} />}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n};\n\nconst RedirectAndResetError: VoidFunctionComponent<{ redirectUrl: string }> = ({\n  redirectUrl,\n}) => {\n  const { reset } = useQueryErrorResetBoundary();\n  useEffect(() => reset, [reset]);\n  return <Redirect to={redirectUrl} />;\n};\n","import { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { useUser } from \"consoledot-api\";\nimport { useCallback } from \"react\";\n\nexport function useUserControlGate() {\n  const { auth } = useChrome();\n  const getUser = useCallback(async ()=> {\n    const user = await auth.getUser();\n    const username = user?.identity?.user?.username;\n    const isOrgAdmin = user?.identity?.user?.is_org_admin;\n    return {\n      username,\n      isOrgAdmin,\n    }\n  }, [auth]);\n  const { data: userData } = useUser({ getUser, suspense: true });\n  return { userData: userData as NonNullable<typeof userData> };\n}\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport { KafkaInstancesSortableColumns, useKafkas } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { KafkaInstanceDrawerTab, KafkaInstancesProps } from \"ui\";\nimport { ControlPlaneHeader, KafkaInstances, useKafkaLabels } from \"ui\";\nimport type { Kafka, SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport { useDrawer } from \"../DrawerProvider\";\nimport {\n  ControlPlaneNewInstancePath,\n  ControlPlaneRouteRoot,\n} from \"../routesConsts\";\nimport { useUserControlGate } from \"../../../useUserControlGate\";\n\nexport type KafkaInstancesRoute = Pick<\n  KafkaInstancesProps<Kafka>,\n  \"getUrlForInstance\"\n>;\n\nexport const KafkaInstancesRoute: FunctionComponent<KafkaInstancesRoute> = ({\n  getUrlForInstance,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveQuickStart } = useContext(QuickStartContext);\n\n  const { selectedInstance, toggleExpanded, setActiveTab, isExpanded } =\n    useDrawer(\n      useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(`${ControlPlaneRouteRoot}`);\n      }, [history])\n    );\n\n  const { userData } = useUserControlGate();\n\n  const labels = useKafkaLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const namesChips = useURLSearchParamsChips(\"names\", resetPaginationQuery);\n  const ownersChips = useURLSearchParamsChips(\"owners\", resetPaginationQuery);\n  const statusesChips = useURLSearchParamsChips<SimplifiedStatus>(\n    \"statuses\",\n    resetPaginationQuery\n  );\n\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaInstancesSortableColumns,\n    labels.fields,\n    \"createdAt\",\n    \"desc\"\n  );\n\n  const { data } = useKafkas({\n    page,\n    perPage,\n    name: namesChips.chips,\n    owner: ownersChips.chips,\n    status: statusesChips.chips,\n    sort: sort || \"createdAt\",\n    direction: sortDirection,\n  });\n\n  const onClearAllFilters = useCallback(() => {\n    namesChips.clearChained(\n      ownersChips.clearChained(\n        statusesChips.clearChained(setPaginationQuery(1, perPage))\n      ),\n      true\n    );\n  }, [namesChips, ownersChips, perPage, setPaginationQuery, statusesChips]);\n\n  const openDrawer = useCallback(\n    (id: string, tab: KafkaInstanceDrawerTab) => {\n      if (selectedInstance === id && isExpanded) {\n        toggleExpanded(false);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(`${ControlPlaneRouteRoot}/${id}`);\n        toggleExpanded(true);\n        setActiveTab(tab);\n      }\n    },\n    [history, isExpanded, selectedInstance, setActiveTab, toggleExpanded]\n  );\n\n  const onDetailsClick: KafkaInstancesProps[\"onDetails\"] = useCallback(\n    (instance) => {\n      openDrawer(instance.id, \"details\");\n    },\n    [openDrawer]\n  );\n\n  const onConnectionsClick: KafkaInstancesProps[\"onDetails\"] = useCallback(\n    (instance) => {\n      openDrawer(instance.id, \"connections\");\n    },\n    [openDrawer]\n  );\n\n  const onCreate = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${ControlPlaneNewInstancePath}`);\n  }, [history]);\n\n  const onDelete = useCallback<KafkaInstancesProps[\"onDelete\"]>(\n    ({ id }) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(`${ControlPlaneRouteRoot}/${id}/delete`);\n    },\n    [history]\n  );\n  const onChangeOwner = useCallback<KafkaInstancesProps[\"onChangeOwner\"]>(\n    ({ id }) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(`${ControlPlaneRouteRoot}/${id}/change-owner`);\n    },\n    [history]\n  );\n\n  const onQuickstartGuide = useCallback(\n    () => setActiveQuickStart && setActiveQuickStart(\"getting-started\"),\n    [setActiveQuickStart]\n  );\n\n  return (\n    <>\n      <ControlPlaneHeader />\n      <KafkaInstances\n        instances={data?.instances}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        names={namesChips.chips}\n        owners={ownersChips.chips}\n        statuses={statusesChips.chips}\n        isColumnSortable={isColumnSortable}\n        onPageChange={setPagination}\n        onSearchName={namesChips.add}\n        onRemoveNameChip={namesChips.remove}\n        onRemoveNameChips={namesChips.clear}\n        onSearchOwner={ownersChips.add}\n        onRemoveOwnerChip={ownersChips.remove}\n        onRemoveOwnerChips={ownersChips.clear}\n        onSearchStatus={statusesChips.toggle}\n        onRemoveStatusChip={statusesChips.remove}\n        onRemoveStatusChips={statusesChips.clear}\n        onClearAllFilters={onClearAllFilters}\n        onChangeOwner={onChangeOwner}\n        onDelete={onDelete}\n        onCreate={onCreate}\n        isRowSelected={({ row }) => row.id === selectedInstance}\n        getUrlForInstance={getUrlForInstance}\n        onDetails={onDetailsClick}\n        onConnection={onConnectionsClick}\n        onClickConnectionTabLink={() => {\n          /* TODO */\n        }}\n        onClickSupportLink={() => {\n          /* TODO */\n        }}\n        onInstanceLinkClick={() => {\n          /* TODO */\n        }}\n        onQuickstartGuide={onQuickstartGuide}\n        canHaveInstanceLink={({ status }) => ReadyStatuses.includes(status)}\n        canOpenConnection={(row) => userData.canOpenConnection(row)}\n        canChangeOwner={({ owner, status }) =>\n          userData.canChangeOwner(owner, status)\n        }\n        canDelete={({ owner }) => userData.isUserOwnerOrAdmin(owner)}\n      />\n    </>\n  );\n};\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport type { CreateKafkaInstanceServices } from \"@rhoas/app-services-ui-components\";\nimport { CreateKafkaInstance } from \"@rhoas/app-services-ui-components\";\nimport { useCreateKafkaMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { ControlPlaneRouteRoot } from \"../routesConsts\";\nimport { useCreateKafkaCallbacks } from \"./useCreateKafkaCallbacks\";\nimport { useSelfTermsReviewGate } from \"./useSelfTermsReviewGate\";\n\nexport const CreateKafkaInstanceRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const callbacks = useCreateKafkaCallbacks();\n  const createKafkaInstance = useCreateKafkaMutation();\n  const qsContext = useContext(QuickStartContext);\n  useSelfTermsReviewGate();\n\n  const onClickKafkaOverview = () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`overview`);\n  };\n\n  const onClickQuickStart = useCallback(() => {\n    qsContext.setActiveQuickStart &&\n      qsContext.setActiveQuickStart(\"getting-started\");\n  }, [qsContext]);\n\n  const onCreate = useCallback<CreateKafkaInstanceServices[\"onCreate\"]>(\n    function (instance, onSuccess, onError) {\n      const onOnSuccess = () => {\n        onSuccess();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.push(ControlPlaneRouteRoot);\n      };\n      void createKafkaInstance.mutateAsync({\n        instance,\n        onSuccess: onOnSuccess,\n        onError,\n      });\n    },\n    [createKafkaInstance, history]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  return (\n    <CreateKafkaInstance\n      {...callbacks}\n      isModalOpen={true}\n      onCancel={onCancel}\n      onClickContactUs={onClickKafkaOverview}\n      onClickKafkaOverview={onClickKafkaOverview}\n      onClickQuickStart={onClickQuickStart}\n      onCreate={onCreate}\n      onLearnHowToAddStreamingUnits={onClickKafkaOverview}\n      onLearnMoreAboutSizes={onClickKafkaOverview}\n      subscriptionOptionsHref={document.location.href + \"/../overview\"}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport {\n  useDeveloperInstanceAvailabilityFetchQuery,\n  useProviderRegionSizesFetchQuery,\n  useProvidersWithRegionsFetchQuery,\n  useStandardQuotaFetchQuery,\n} from \"consoledot-api\";\nimport { useCallback } from \"react\";\nimport type { CreateKafkaInstanceProps, StandardSizes } from \"ui\";\n\nexport function useCreateKafkaCallbacks() {\n  const { auth } = useChrome();\n\n  const getUsername = useCallback(async () => {\n    const username = (await auth.getUser())?.identity.user?.username;\n    if (!username) {\n      return Promise.reject(\"Invalid user\");\n    }\n    return username;\n  }, [auth]);\n\n  const checkDeveloperAvailabilityQuery =\n    useDeveloperInstanceAvailabilityFetchQuery();\n\n  const standardQuotaQuery = useStandardQuotaFetchQuery(true);\n  const providersWithRegionsQuery = useProvidersWithRegionsFetchQuery();\n  const getProvidersInfo = useProvidersWithRegionsFetchQuery();\n  const getProviderRegionsSizes = useProviderRegionSizesFetchQuery();\n\n  const checkDeveloperAvailability = useCallback<\n    CreateKafkaInstanceProps[\"checkDeveloperAvailability\"]\n  >(\n    async ({ onAvailable, onUsed, onUnavailable }) => {\n      try {\n        const available = await checkDeveloperAvailabilityQuery(getUsername);\n\n        if (available) {\n          onAvailable();\n        } else {\n          onUsed();\n        }\n      } catch {\n        onUnavailable();\n      }\n    },\n    [checkDeveloperAvailabilityQuery, getUsername]\n  );\n\n  const checkStandardQuota = useCallback<\n    CreateKafkaInstanceProps[\"checkStandardQuota\"]\n  >(\n    async ({ onQuotaAvailable, onNoQuotaAvailable, onOutOfQuota }) => {\n      try {\n        const {\n          hasTrialQuota,\n          remainingPrepaidQuota,\n          remainingMarketplaceQuota,\n          marketplaceSubscriptions,\n        } = await standardQuotaQuery();\n\n        if (\n          remainingMarketplaceQuota !== undefined ||\n          remainingPrepaidQuota !== undefined\n        ) {\n          if (\n            (remainingMarketplaceQuota || 0) === 0 &&\n            (remainingPrepaidQuota || 0) === 0\n          ) {\n            onOutOfQuota({\n              quota: {\n                marketplaceSubscriptions,\n              },\n            });\n          } else {\n            onQuotaAvailable({\n              quota: {\n                remainingPrepaidQuota,\n                remainingMarketplaceQuota,\n                marketplaceSubscriptions,\n              },\n            });\n          }\n        } else {\n          onNoQuotaAvailable({ hasTrialQuota });\n        }\n      } catch (e) {\n        onNoQuotaAvailable({ hasTrialQuota: false });\n      }\n    },\n    [standardQuotaQuery]\n  );\n\n  const fetchProvidersWithRegions = useCallback<\n    CreateKafkaInstanceProps[\"fetchProvidersWithRegions\"]\n  >(\n    async (plan, { onAvailable, onUnavailable }) => {\n      try {\n        const providers = await providersWithRegionsQuery(plan);\n        onAvailable(providers);\n      } catch {\n        onUnavailable();\n      }\n    },\n    [providersWithRegionsQuery]\n  );\n\n  const getStandardSizes = useCallback<\n    CreateKafkaInstanceProps[\"getStandardSizes\"]\n  >(\n    async (provider, region) => {\n      const providersInfo = await getProvidersInfo(\"standard\");\n      const providerInfo = providersInfo.providers.find(\n        (p) => p.id === provider\n      );\n      if (!providerInfo) {\n        return Promise.reject(\"Invalid cloud provider\");\n      }\n      return getProviderRegionsSizes(providerInfo, region, \"standard\");\n    },\n    [getProviderRegionsSizes, getProvidersInfo]\n  );\n\n  const getTrialSizes = useCallback<CreateKafkaInstanceProps[\"getTrialSizes\"]>(\n    async (provider, region) => {\n      let standardSizes: StandardSizes;\n\n      try {\n        standardSizes = await getStandardSizes(provider, region);\n        if (standardSizes.length === 0) {\n          throw new Error(\"No standard sizes found\");\n        }\n      } catch {\n        // It can happen that the selected provider doesn't support standard instances.\n        // In this case we provide a faux sample list of sizes just to make the slider happy.\n        standardSizes = [\n          { id: \"1\", displayName: \"1\", quota: 1 },\n          { id: \"2\", displayName: \"2\", quota: 2 },\n        ] as StandardSizes;\n      }\n      const providersInfo = await getProvidersInfo(\"developer\");\n      const providerInfo = providersInfo.providers.find(\n        (p) => p.id === provider\n      );\n      if (!providerInfo) {\n        return Promise.reject(\"Invalid cloud provider\");\n      }\n      const trialSizes = await getProviderRegionsSizes(\n        providerInfo,\n        region,\n        \"developer\"\n      );\n      return {\n        standard: standardSizes,\n        trial: trialSizes[0],\n      };\n    },\n    [getProviderRegionsSizes, getProvidersInfo, getStandardSizes]\n  );\n  return {\n    checkDeveloperAvailability,\n    checkStandardQuota,\n    fetchProvidersWithRegions,\n    getStandardSizes,\n    getTrialSizes,\n  };\n}\n","import { useSelfTermsReview } from \"consoledot-api\";\n\nexport function useSelfTermsReviewGate() {\n  const { data } = useSelfTermsReview(true);\n  const selfTermsReview = data as NonNullable<typeof data>;\n  if (selfTermsReview.areTermsAccepted === false) {\n    throw new Error(\"Terms and Conditions not accepted\");\n  }\n  return {\n    selfTermsReview,\n  };\n}\n","import { useKafka } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { ControlPlaneRouteParams } from \"./routesConsts\";\nimport { ControlPlaneRoutePath } from \"./routesConsts\";\n\nexport function useControlPlaneGate() {\n  const match = useRouteMatch<ControlPlaneRouteParams>(ControlPlaneRoutePath);\n  if (!match) {\n    throw Error(\"useControlPlaneGate used outside the expected route\");\n  }\n  const { data: instance } = useKafka(match.params.id, true);\n  return { instance: instance as NonNullable<typeof instance>, match };\n}\n","import { useDeleteKafkaMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteKafkaInstance } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { useControlPlaneGate } from \"../useControlPlaneGate\";\n\nexport const DeleteKafkaInstanceRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useControlPlaneGate();\n  const { mutateAsync, isLoading: isDeleting } = useDeleteKafkaMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      id: instance.id,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instancesHref);\n      },\n    });\n  }, [mutateAsync, history, instance?.id, instancesHref]);\n\n  return (\n    <DeleteKafkaInstance\n      isModalOpen={true}\n      isDeleting={isDeleting}\n      onCancel={onCancel}\n      onDelete={onDelete}\n      instanceName={\n        ReadyStatuses.includes(instance.status) ? instance.name : undefined\n      }\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useSelfTermsReview } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { TermsAndConditionsDialog } from \"ui\";\n\nexport const TermsAndConditionsRoute: FunctionComponent<{\n  createHref: string;\n  cancelHref: string;\n}> = ({ createHref, cancelHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { data: selfTermsReview } = useSelfTermsReview();\n  const baselinedCreateHref =\n    window.location.origin +\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n    (history.createHref({\n      pathname: createHref,\n    }) as string);\n  const baselinedCancelHref =\n    window.location.origin +\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n    (history.createHref({\n      pathname: cancelHref,\n    }) as string);\n  const termsUrl = selfTermsReview?.termsUrl(\n    baselinedCreateHref,\n    baselinedCancelHref\n  );\n  const onViewTerms = useCallback(\n    function () {\n      if (termsUrl !== undefined) {\n        window.location.href = termsUrl;\n      }\n    },\n    [termsUrl]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(cancelHref);\n  }, [history, cancelHref]);\n\n  return (\n    <TermsAndConditionsDialog\n      isOpen={true}\n      onViewTerms={onViewTerms}\n      onCancel={onCancel}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useUpdateKafkaMutation, useUserAccounts } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { ChangeKafkaOwnerProps } from \"ui\";\nimport { ChangeKafkaOwner } from \"ui\";\n\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { useControlPlaneGate } from \"../useControlPlaneGate\";\n\nexport const ChangeOwnerRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useControlPlaneGate();\n  const { data: accounts } = useUserAccounts({});\n  const updateInstance = useUpdateKafkaMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  const onConfirm = useCallback(\n    (newOwner: string) => {\n      updateInstance.mutate(\n        {\n          id: instance.id,\n          updates: { owner: newOwner },\n        },\n        {\n          onSuccess: () => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            history.replace(instancesHref);\n          },\n        }\n      );\n    },\n    [history, instance.id, instancesHref, updateInstance]\n  );\n\n  const savingState = ((): ChangeKafkaOwnerProps[\"savingState\"] => {\n    if (updateInstance.isLoading) return \"saving\";\n    if (updateInstance.isError) {\n      return updateInstance.error.type === \"invalid-user\"\n        ? \"invalid-user\"\n        : \"unknown-error\";\n    }\n    return \"idle\";\n  })();\n\n  return (\n    <ChangeKafkaOwner\n      currentOwner={instance.owner}\n      accounts={accounts?.accounts.map((a) => ({\n        id: a.username,\n        displayName: a.displayName,\n      }))}\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n      savingState={savingState}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  CreateKafkaInstanceRoute,\n  DeleteKafkaInstanceRoute,\n  KafkaInstancesRoute,\n  TermsAndConditionsRoute,\n} from \"./routes\";\nimport { ChangeOwnerRoute } from \"./routes/ChangeOwnerRoute\";\nimport {\n  ControlPlaneChangeOwnerPath,\n  ControlPlaneDeleteInstancePath,\n  ControlPlaneNewInstancePath,\n  ControlPlaneRoutePath,\n  ControlPlaneRouteRoot,\n  ControlPlaneTermsAndConditionsPath,\n} from \"./routesConsts\";\n\nexport const ControlPlaneRoutes: VoidFunctionComponent = () => {\n  return (\n    <Route path={ControlPlaneRoutePath} exact>\n      <Route path={ControlPlaneTermsAndConditionsPath}>\n        <TermsAndConditionsRoute\n          createHref={ControlPlaneNewInstancePath}\n          cancelHref={ControlPlaneRouteRoot}\n        />\n      </Route>\n      <RedirectOnGateError redirectUrl={ControlPlaneTermsAndConditionsPath}>\n        <Route path={ControlPlaneNewInstancePath}>\n          <CreateKafkaInstanceRoute instancesHref={ControlPlaneRouteRoot} />\n        </Route>\n      </RedirectOnGateError>\n      <RedirectOnGateError redirectUrl={ControlPlaneRouteRoot}>\n        <Route path={ControlPlaneDeleteInstancePath}>\n          <DeleteKafkaInstanceRoute instancesHref={ControlPlaneRouteRoot} />\n        </Route>\n        <Route path={ControlPlaneChangeOwnerPath}>\n          <ChangeOwnerRoute instancesHref={ControlPlaneRouteRoot} />\n        </Route>\n      </RedirectOnGateError>\n      <KafkaInstancesRoute\n        getUrlForInstance={(instance) => `/kafkas/${instance.id}/details`}\n      />\n    </Route>\n  );\n};\n","import type { ControlPlaneNavigationProps } from \"../control-plane/routesConsts\";\nimport { ControlPlaneRouteRoot } from \"../control-plane/routesConsts\";\n\nexport const DataPlaneRoutePath =\n  `${ControlPlaneRouteRoot}/:id/details` as const;\nexport type DataPlaneRouteParams = { id: string };\nexport type DataPlaneTopicRouteParams = { id: string; topicName: string };\nexport type DataPlaneConsumerGroupRouteParams = {\n  id: string;\n  consumerGroupId: string;\n};\n\nexport type DataPlaneTopicConsumerRouteParams = {\n  id: string;\n  topicName: string;\n  consumerGroupId: string;\n};\nexport const DataPlaneTopicRoutePath =\n  `${ControlPlaneRouteRoot}/:id/details/topics/:topicName` as const;\n\nexport const DataPlaneConsumerGroupRoutePath =\n  `${ControlPlaneRouteRoot}/:id/details/consumer-groups/:consumerGroupId` as const;\n\nexport type DataPlanePermissionsRouteParams = {\n  selectedAccount: string;\n};\n\nexport const DataPlaneTopicConsumerGroupRoutePath =\n  `${ControlPlaneRouteRoot}/:id/details/topics/:topicName/consumer-groups/:consumerGroupId` as const;\n\nexport const DataPlanePermissionsRoutePath =\n  `${ControlPlaneRouteRoot}/:id/details/acls/select-account/:selectedAccount` as const;\n\nexport type DataPlaneNavigationProps = {\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneTopicNavigationProps = {\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n  topicHref: (instanceId: string, topicName: string) => string;\n  deleteTopicHref: (instanceId: string, topicName: string) => string;\n  updateTopicHref: (instanceId: string, topicName: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneConsumerGroupNavigationsProps = {\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n  viewPartitionConsumerGroupHref: (\n    instanceId: string,\n    consumerGroupId: string\n  ) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneTopicConsumerGroupNavigationsProps = {\n  instanceTopicConsumerGroupsHref: (\n    instanceId: string,\n    topicName: string\n  ) => string;\n  viewTopicPartitionConsumerGroupHref: (\n    instanceId: string,\n    consumerGroupId: string,\n    topicName: string\n  ) => string;\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlanePermissionsNavigationProps = {\n  managePermissionsHref: (instanceId: string) => string;\n  editPermissionsHref: (instanceId: string, selectedAccount: string) => string;\n} & ControlPlaneNavigationProps;\n","import { useKafka } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { DataPlaneRouteParams } from \"./routesConsts\";\nimport { DataPlaneRoutePath } from \"./routesConsts\";\n\nexport function useDataPlaneGate() {\n  const match = useRouteMatch<DataPlaneRouteParams>(DataPlaneRoutePath);\n  if (!match) {\n    throw Error(\"useDataPlaneGate used outside the expected route\");\n  }\n  const { data: instance } = useKafka(match.params.id, true);\n  return { instance: instance as NonNullable<typeof instance>, match };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlaneHeaderProps } from \"ui\";\nimport { DataPlaneHeader } from \"ui\";\nimport { useDrawer } from \"../../control-plane\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { useUserControlGate } from \"../../../useUserControlGate\";\n\nexport const DataPlaneHeaderConnected: VoidFunctionComponent<\n  ControlPlaneNavigationProps & Pick<DataPlaneHeaderProps, \"activeSection\">\n> = ({ instancesHref, activeSection }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveTab, toggleExpanded } = useDrawer();\n\n  const { userData } = useUserControlGate();\n\n  const {\n    instance,\n    match: { url },\n  } = useDataPlaneGate();\n\n  const sectionsHref = {\n    dashboard: `${url}/dashboard`,\n    topics: `${url}/topics`,\n    consumer: `${url}/consumer-groups`,\n    permissions: `${url}/acls`,\n    settings: `${url}/settings`,\n  };\n\n  const onDelete = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/delete`);\n  }, [history, instance, instancesHref]);\n\n  const onChangeOwner = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/change-owner`);\n  }, [history, instance, instancesHref]);\n\n  return (\n    <DataPlaneHeader\n      instancesHref={instancesHref}\n      instanceName={instance?.name || \"\"}\n      activeSection={activeSection}\n      sectionsHref={sectionsHref}\n      onDetails={() => {\n        setActiveTab(\"details\");\n        toggleExpanded(true);\n      }}\n      onConnection={() => {\n        setActiveTab(\"connections\");\n        toggleExpanded(true);\n      }}\n      canOpenConnection={userData.canOpenConnection(instance)}\n      canChangeOwner={userData.canChangeOwner(instance.owner, instance.status)}\n      canDelete={userData.isUserOwnerOrAdmin(instance.owner)}\n      onChangeOwner={onChangeOwner}\n      onDelete={onDelete}\n    />\n  );\n};\n","import { usePaginationSearchParams } from \"@rhoas/app-services-ui-components\";\nimport { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { Account } from \"ui\";\nimport { PrincipalType } from \"ui\";\nimport { PermissionsTable } from \"ui\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport {\n  useAcls,\n  useDeletePermissionsMutation,\n  useServiceAccounts,\n  useUserAccounts,\n} from \"consoledot-api\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlanePermissionsNavigationProps } from \"../routesConsts\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { useDispatch } from \"react-redux\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\n\nexport const PermissionsRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ instancesHref, managePermissionsHref, editPermissionsHref }) => {\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const { instance } = useDataPlaneGate();\n  const { mutateAsync } = useDeletePermissionsMutation();\n  const dispatch = useDispatch();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { data: acls } = useAcls({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    page,\n    perPage,\n  });\n\n  const { data: accounts } = useUserAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: serviceAccounts } = useServiceAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const userAccounts: Account[] | undefined = accounts?.accounts.map(\n    (userAccount) => {\n      return {\n        id: userAccount.username,\n        displayName: userAccount.displayName,\n        email: userAccount.email,\n        principalType: PrincipalType.UserAccount,\n      };\n    }\n  );\n\n  const serviceAccountList: Account[] | undefined =\n    serviceAccounts?.serviceAccounts.map((serviceAccount) => {\n      return {\n        id: serviceAccount.id,\n        displayName: serviceAccount.displayName,\n        principalType: PrincipalType.ServiceAccount,\n      };\n    });\n\n  const allAccounts =\n    serviceAccountList != undefined && userAccounts != undefined\n      ? [...serviceAccountList, ...userAccounts]\n      : undefined;\n\n  const onDeleteSelected = useCallback(\n    (rowIndex: number[]) => {\n      rowIndex.map((value) => {\n        const rowToDelete = acls?.groups[value];\n        void mutateAsync({\n          instanceId: instance.id,\n          adminUrl: instance.adminUrl || \"\",\n          acl: {\n            patternType: rowToDelete?.resource.patternType,\n            permissionType: rowToDelete?.permission.permission,\n            principal: rowToDelete?.account,\n            resourceName: rowToDelete?.resource.resourceName,\n            operation: rowToDelete?.permission.operation,\n            resourceType: rowToDelete?.resource.resourceType,\n          },\n          onError: (_, message) => {\n            dispatch(\n              addNotification({\n                variant: \"danger\",\n                title: message,\n                dismissable: true,\n                id: \"delete-error\",\n              })\n            );\n          },\n          onSuccess: () => {\n            //We have no action yet to confirm if delete was successfull.\n          },\n        });\n      });\n    },\n    [acls?.groups, mutateAsync, instance.id, instance.adminUrl, dispatch]\n  );\n\n  const onDelete = useCallback(\n    (rowIndex: number) => {\n      const rowToDelete = acls?.groups[rowIndex];\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl || \"\",\n        acl: {\n          patternType: rowToDelete?.resource.patternType,\n          permissionType: rowToDelete?.permission.permission,\n          principal: rowToDelete?.account,\n          resourceName: rowToDelete?.resource.resourceName,\n          operation: rowToDelete?.permission.operation,\n          resourceType: rowToDelete?.resource.resourceType,\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"delete-error\",\n            })\n          );\n        },\n        onSuccess: () => {\n          // No action\n        },\n      });\n    },\n    [acls?.groups, mutateAsync, instance.id, instance.adminUrl, dispatch]\n  );\n\n  const onManagePermissionsActionItem = useCallback(\n    (account: string) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(editPermissionsHref(instance.id, account));\n    },\n    [history, instance.id, editPermissionsHref]\n  );\n  const onManagePermission = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"permissions\"}\n      />\n\n      <PermissionsTable\n        allAccounts={allAccounts}\n        permissions={acls?.groups}\n        onDelete={onDelete}\n        onDeleteSelected={onDeleteSelected}\n        onManagePermissions={onManagePermission}\n        onPerPageChange={setPaginationQuery}\n        itemCount={acls?.count}\n        page={page}\n        perPage={perPage}\n        onPageChange={setPagination}\n        onManagePermissionsActionItem={onManagePermissionsActionItem}\n      />\n    </>\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport { KafkaTopicsSortableColumns, useTopics } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { KafkaTopics, useTopicLabels } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { ControlPlaneRouteRoot } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const TopicsRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const labels = useTopicLabels();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useDataPlaneGate();\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const onCreate = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${ControlPlaneRouteRoot}/${instance.id}/details/topics/create-topic`\n    );\n  }, [history, instance.id]);\n\n  const topicChips = useURLSearchParamsChips(\"topic\", resetPaginationQuery);\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaTopicsSortableColumns,\n    labels.fields\n  );\n  const { data } = useTopics({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    filter: topicChips.chips[0],\n    plan: instance.plan,\n  });\n\n  const onDeleteTopic = useCallback(\n    (topicName: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topicName}/delete`\n      );\n    },\n    [history, instance.id]\n  );\n\n  const onEditTopic = useCallback(\n    (topicName: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topicName}/edit`\n      );\n    },\n    [history, instance.id]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"topics\"}\n      />\n      <KafkaTopics\n        topics={data?.topics}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        topicName={topicChips.chips}\n        getUrlFortopic={(row) => `./topics/${row.name}`}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeleteTopic(row.name)}\n        onEdit={(row) => onEditTopic(row.name)}\n        onSearchTopic={(value) => {\n          topicChips.clear();\n          topicChips.toggle(value);\n        }}\n        onClearAllFilters={topicChips.clear}\n        onCreateTopic={onCreate}\n        onPageChange={setPagination}\n        onRemoveTopicChip={topicChips.clear}\n        onRemoveTopicChips={topicChips.clear}\n      />\n    </>\n  );\n};\n","import { useUpdateKafkaMutation } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { SettingsProps } from \"ui\";\nimport { Settings as SettingsComp } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const SettingsRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const { instance } = useDataPlaneGate();\n  const updateInstance = useUpdateKafkaMutation();\n\n  const onSubmitReAuthentication = useCallback<\n    SettingsProps[\"onSubmitReAuthentication\"]\n  >(\n    async (reauthenticationEnabled) => {\n      try {\n        await updateInstance.mutateAsync({\n          id: instance.id,\n          updates: { reauthentication_enabled: reauthenticationEnabled },\n        });\n        return reauthenticationEnabled;\n      } catch {\n        return instance.request.reauthentication_enabled;\n      }\n    },\n    [instance, updateInstance]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"settings\"}\n      />\n      <SettingsComp\n        onSubmitReAuthentication={onSubmitReAuthentication}\n        reauthenticationEnabled={instance.request.reauthentication_enabled}\n      />\n    </>\n  );\n};\n","import {\n  useKafkaFetchQuery,\n  useKafkaKpisFetchQuery,\n  useKafkaMetricsFetchQuery,\n  useTopicsFetchQuery,\n  useTopicsMetricsFetchQuery,\n} from \"consoledot-api\";\nimport {\n  metricsDismissLagAlerts,\n  metricsIsLagAlertsDismissed,\n} from \"local-storage-helpers\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport type { MetricsProps } from \"ui\";\nimport { Metrics } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const DashboardRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const {\n    instance,\n    match: { params },\n  } = useDataPlaneGate();\n  const [hasUserAlreadyClosedAlert, setHasUserAlreadyClosedAlert] = useState(\n    metricsIsLagAlertsDismissed()\n  );\n\n  const onAlertClose = useCallback(() => {\n    setHasUserAlreadyClosedAlert(true);\n    metricsDismissLagAlerts();\n  }, []);\n\n  const queryInstance = useKafkaFetchQuery();\n  const queryKpisMetrics = useKafkaKpisFetchQuery();\n  const queryInstanceMetrics = useKafkaMetricsFetchQuery();\n  const queryTopicMetrics = useTopicsMetricsFetchQuery();\n  const queryTopics = useTopicsFetchQuery();\n\n  const getMetricsKpi: MetricsProps[\"getMetricsKpi\"] = useCallback(async () => {\n    const kpis = await queryKpisMetrics(params.id);\n    return {\n      ...kpis,\n      topicPartitionsLimit: instance.maxPartitions || 0,\n    };\n  }, [instance, params.id, queryKpisMetrics]);\n\n  const getKafkaInstanceMetrics: MetricsProps[\"getKafkaInstanceMetrics\"] =\n    useCallback(\n      async ({ interval, duration }) => {\n        const [instance, metrics] = await Promise.all([\n          queryInstance(params.id),\n          queryInstanceMetrics({ id: params.id, duration, interval }),\n        ]);\n        if (!instance) {\n          return Promise.reject(\"Can't retrieve instance\");\n        }\n        return {\n          ...metrics,\n          diskSpaceLimit:\n            (instance.request.max_data_retention_size?.bytes || 0) / 1073741824,\n          connectionsLimit: instance.connections || 0,\n          connectionRateLimit: instance.connectionRate || 0,\n        };\n      },\n      [params.id, queryInstance, queryInstanceMetrics]\n    );\n\n  const getTopicsMetrics: MetricsProps[\"getTopicsMetrics\"] = useCallback(\n    async ({ interval, duration, selectedTopic }) => {\n      const [instance, metrics] = await Promise.all([\n        queryInstance(params.id),\n        queryTopicMetrics({ id: params.id, duration, interval, selectedTopic }),\n      ]);\n      if (!instance || !instance.adminUrl) {\n        return Promise.reject(\"Can't retrieve instance\");\n      }\n      const kafkaTopics = (\n        await queryTopics({\n          id: instance.id,\n          adminUrl: instance.adminUrl,\n          page: 1,\n          perPage: 1000,\n          plan: instance.plan,\n        })\n      ).topics.map((t) => t.name);\n      return {\n        ...metrics,\n        kafkaTopics,\n      };\n    },\n    [params.id, queryInstance, queryTopicMetrics, queryTopics]\n  );\n\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"dashboard\"}\n      />\n      <Metrics\n        onCreateTopic={() => {\n          /* TODO */\n        }}\n        onAlertClose={onAlertClose}\n        hasUserAlreadyClosedAlert={hasUserAlreadyClosedAlert}\n        getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n        getTopicsMetrics={getTopicsMetrics}\n        getMetricsKpi={getMetricsKpi}\n      />\n    </>\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaConsumerGroupSortableColumns,\n  useConsumerGroups,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { ConsumerGroups, useConsumerGroupLabels } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport { useHistory } from \"react-router-dom\";\nimport { instanceConsumerGroupsHref } from \"../DataPlaneRoutes\";\n\nexport const ConsumerGroupsRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const { instance } = useDataPlaneGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const labels = useConsumerGroupLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const name = labels.fields.groupId;\n\n  const consumerName = useURLSearchParamsChips(\n    \"consumer\",\n    resetPaginationQuery\n  );\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaConsumerGroupSortableColumns,\n    { name }\n  );\n  const { data } = useConsumerGroups({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    groupId: consumerName.chips[0],\n  });\n\n  const onDeletConsumerGroup = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/delete`\n      );\n    },\n    [history, instance.id]\n  );\n\n  const onViewPartition = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/view-partition`\n      );\n    },\n    [history, instance.id]\n  );\n\n  const onClickResetOffset = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/reset-offset`\n      );\n    },\n    [history, instance.id]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"consumer\"}\n      />\n      <ConsumerGroups\n        consumers={data?.groups}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        consumerName={consumerName.chips}\n        isRowSelected={() => false}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeletConsumerGroup(row.groupId)}\n        onSearchConsumer={(value) => {\n          consumerName.clear();\n          consumerName.toggle(value);\n        }}\n        onClearAllFilters={consumerName.clear}\n        onPageChange={setPagination}\n        onRemoveConsumerChip={consumerName.clear}\n        onRemoveConsumerChips={consumerName.clear}\n        onViewPartition={(row) => onViewPartition(row.groupId)}\n        onViewResetOffset={(row) => onClickResetOffset(row.groupId)}\n      />\n    </>\n  );\n};\n","import { useTopic } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { DataPlaneTopicRouteParams } from \"./routesConsts\";\nimport { DataPlaneTopicRoutePath } from \"./routesConsts\";\nimport { useDataPlaneGate } from \"./useDataPlaneGate\";\n\nexport function useTopicGate() {\n  const { instance } = useDataPlaneGate();\n  const match = useRouteMatch<DataPlaneTopicRouteParams>(\n    DataPlaneTopicRoutePath\n  );\n  if (!match) {\n    throw Error(\"useDataPlaneGate used outside the expected route\");\n  }\n  const { data: topic } = useTopic(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      topicName: match.params.topicName,\n      plan: instance.plan,\n    },\n    true\n  );\n\n  return {\n    instance,\n    topic: topic as NonNullable<typeof topic>,\n    match,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlaneTopicHeaderProps } from \"ui\";\nimport { DataPlaneTopicHeader } from \"ui\";\nimport { useDrawer } from \"../../control-plane\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { useUserControlGate } from \"../../../useUserControlGate\";\n\nexport const DataPlaneTopicHeaderConnected: VoidFunctionComponent<\n  DataPlaneNavigationProps & Pick<DataPlaneTopicHeaderProps, \"activeSection\">\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  activeSection,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveTab, toggleExpanded } = useDrawer();\n  const { userData } = useUserControlGate();\n  const {\n    instance,\n    topic,\n    match: { url },\n  } = useTopicGate();\n\n  const tabsHref = {\n    consumer: `${url}/consumer-groups`,\n    messages: `${url}/messages`,\n    properties: `${url}/properties`,\n    schemas: `${url}/schemas`,\n  };\n\n  const onDelete = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/delete`);\n  }, [history, instance, instancesHref]);\n\n  const onChangeOwner = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/change-owner`);\n  }, [history, instance, instancesHref]);\n\n  return (\n    <DataPlaneTopicHeader\n      instancesHref={instancesHref}\n      instanceName={instance.name}\n      instanceDetailHref={instanceDetailsHref(instance.id)}\n      instanceTopicsHref={instanceTopicsHref(instance.id)}\n      activeSection={activeSection}\n      topicName={topic.name}\n      tabsHref={tabsHref}\n      onDetails={() => {\n        setActiveTab(\"details\");\n        toggleExpanded(true);\n      }}\n      onConnection={() => {\n        setActiveTab(\"connections\");\n        toggleExpanded(true);\n      }}\n      canOpenConnection={userData.canOpenConnection(instance)}\n      canChangeOwner={userData.canChangeOwner(instance.owner, instance.status)}\n      canDelete={userData.isUserOwnerOrAdmin(instance.owner)}\n      onChangeOwner={onChangeOwner}\n      onDelete={onDelete}\n    />\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaConsumerGroupSortableColumns,\n  useConsumerGroups,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { ConsumerGroups, useConsumerGroupLabels } from \"ui\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\nimport { ControlPlaneRouteRoot } from \"../../control-plane/routesConsts\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const TopicConsumerGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instanceDetailsHref, instanceTopicsHref, instancesHref }) => {\n  const { instance, topic } = useTopicGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const labels = useConsumerGroupLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const name = labels.fields.groupId;\n\n  const consumerName = useURLSearchParamsChips(\n    \"consumer\",\n    resetPaginationQuery\n  );\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaConsumerGroupSortableColumns,\n    { name }\n  );\n\n  const { data } = useConsumerGroups({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    groupId: consumerName.chips[0],\n    topic: topic.name,\n  });\n\n  const onDeletConsumerGroup = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/delete`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  const onViewPartition = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/view-partition`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  const onClickResetOffset = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/reset-offset`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        activeSection={\"consumer\"}\n      />\n      <ConsumerGroups\n        consumers={data?.groups}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        consumerName={consumerName.chips}\n        isRowSelected={() => false}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeletConsumerGroup(row.groupId)}\n        onSearchConsumer={(value) => {\n          consumerName.clear();\n          consumerName.toggle(value);\n        }}\n        onClearAllFilters={consumerName.clear}\n        onPageChange={setPagination}\n        onRemoveConsumerChip={consumerName.clear}\n        onRemoveConsumerChips={consumerName.clear}\n        onViewPartition={(row) => onViewPartition(row.groupId)}\n        onViewResetOffset={(row) => onClickResetOffset(row.groupId)}\n      />\n    </>\n  );\n};\n","import { useMessagesFetchQuery } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { KafkaMessageBrowserProps } from \"ui\";\nimport { KafkaMessageBrowser } from \"ui\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicMessagesGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instanceDetailsHref, instanceTopicsHref, instancesHref }) => {\n  const { instance, topic } = useTopicGate();\n  const kafkaTopicMessagesFetchQuery = useMessagesFetchQuery();\n\n  const getMessages = useCallback<KafkaMessageBrowserProps[\"getMessages\"]>(\n    async (params) => {\n      if (!instance.adminUrl) {\n        throw Error(\"Invalid instance adminUrl\");\n      }\n      const messages = await kafkaTopicMessagesFetchQuery({\n        ...params,\n        id: instance.id,\n        adminUrl: instance.adminUrl,\n        topicName: topic.name,\n      });\n      return {\n        messages,\n        partitions: topic.partitions.length,\n      };\n    },\n    [\n      instance.adminUrl,\n      instance.id,\n      kafkaTopicMessagesFetchQuery,\n      topic.name,\n      topic.partitions.length,\n    ]\n  );\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        activeSection={\"messages\"}\n      />\n      <KafkaMessageBrowser getMessages={getMessages} />\n    </>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { TopicProperties } from \"ui\";\nimport type { DataPlaneTopicNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicPropertiesRoute: VoidFunctionComponent<\n  DataPlaneTopicNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  deleteTopicHref,\n  updateTopicHref,\n}) => {\n  const { instance, topic } = useTopicGate();\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        activeSection={\"properties\"}\n      />\n      <TopicProperties\n        topic={topic}\n        deleteTopicHref={deleteTopicHref(instance.id, topic.name)}\n        updateTopicHref={updateTopicHref(instance.id, topic.name)}\n      />\n    </>\n  );\n};\n","/* eslint-disable */\n// @ts-nocheck\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { I18nProvider } from \"@rhoas/app-services-ui-components\";\nimport type { Auth, Config } from \"@rhoas/app-services-ui-shared\";\nimport { AuthContext, ConfigContext } from \"@rhoas/app-services-ui-shared\";\n/* tslint:disable */\nimport type { Registry } from \"@rhoas/registry-management-sdk\";\nimport type { ScalprumComponentProps } from \"@scalprum/react-core\";\nimport { ScalprumComponent } from \"@scalprum/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicSchemasRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instanceDetailsHref, instanceTopicsHref, instancesHref }) => {\n  const chrome = useChrome();\n  const { topic } = useTopicGate();\n  const processor = (([_, m]: [string, { entry: string[] }]) =>\n    m.entry.map(\n      (e) => `/beta/apps/srs-ui-build${e}`\n    )) as unknown as ScalprumComponentProps[\"processor\"];\n  const processor2 = (([_, m]: [string, { entry: string[] }]) =>\n    m.entry.map(\n      (e) => `/beta/apps/sr-ui-build${e}`\n    )) as unknown as ScalprumComponentProps[\"processor\"];\n  const basename = \"/service-registry\";\n  const auth: Auth = {\n    srs: { getToken: chrome.auth.getToken },\n  };\n  const config: Config = {\n    srs: { apiBasePath: process.env.API_URL },\n  };\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        activeSection={\"schemas\"}\n      />\n      <AuthContext.Provider value={auth}>\n        <ConfigContext.Provider value={config}>\n          <I18nProvider\n            lng={\"en\"}\n            resources={{\n              en: {\n                common: () =>\n                  import(\n                    \"@rhoas/app-services-ui-components/locales/en/common.json\"\n                  ),\n                \"service-registry\": () =>\n                  import(\n                    \"@rhoas/app-services-ui-components/locales/en/service-registry.json\"\n                  ),\n                srsTemporaryFixMe: () => import(\"./srs-locales.json\"),\n              },\n            }}\n            debug={true}\n          >\n            <ScalprumComponent\n              appName=\"srs\"\n              module=\"./ServiceRegistryMapping\"\n              scope=\"srs\"\n              ErrorComponent={<div>opsie</div>}\n              processor={processor}\n              basename={basename}\n              topicName={topic.name}\n              renderSchema={(registry: Registry) => {\n                return (\n                  <ScalprumComponent\n                    appName=\"ar\"\n                    scope=\"ar\"\n                    ErrorComponent={<div>opsie</div>}\n                    processor={processor2}\n                    module=\"./FederatedSchemaMapping\"\n                    registry={registry}\n                    topicName={topic.name}\n                    groupId={null}\n                    version={\"latest\"}\n                    registryId={registry?.id}\n                    basename={basename}\n                  />\n                );\n              }}\n            />\n          </I18nProvider>\n        </ConfigContext.Provider>\n      </AuthContext.Provider>\n    </>\n  );\n};\n","import { useConsumerGroup } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { DataPlaneConsumerGroupRoutePath } from \"./routesConsts\";\nimport type { DataPlaneConsumerGroupRouteParams } from \"./routesConsts\";\nimport { useDataPlaneGate } from \"./useDataPlaneGate\";\n\nexport function useConsumerGroupGate() {\n  const { instance } = useDataPlaneGate();\n  const match = useRouteMatch<DataPlaneConsumerGroupRouteParams>(\n    DataPlaneConsumerGroupRoutePath\n  );\n  if (!match) {\n    throw Error(\"useConsumerGroupGate used outside the expected route\");\n  }\n  const { data: consumerGroup } = useConsumerGroup(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      consumerGroupId: match.params.consumerGroupId,\n    },\n    true\n  );\n\n  return {\n    instance,\n    consumerGroup: consumerGroup as NonNullable<typeof consumerGroup>,\n    match,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteConsumerGroup } from \"ui\";\nimport { useDeleteConsumerGroupMutation } from \"consoledot-api\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\n\nexport const ConsumerGroupDeleteRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({ instanceConsumerGroupsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  const { mutateAsync } = useDeleteConsumerGroupMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl!,\n      consumerGroupId: consumerGroup.groupId,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceConsumerGroupsHref(instance.id));\n      },\n    });\n  }, [\n    mutateAsync,\n    history,\n    instance?.id,\n    instanceConsumerGroupsHref,\n    consumerGroup.groupId,\n    instance.adminUrl,\n  ]);\n\n  return (\n    <DeleteConsumerGroup\n      isModalOpen={true}\n      onClose={onCancel}\n      onDeleteConsumer={onDelete}\n      state={consumerGroup.state}\n      consumerName={consumerGroup.groupId}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupResetOffset } from \"ui\";\nimport type { OffsetValue } from \"ui\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useResetConsumerGroupMutation } from \"consoledot-api\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\n\nexport const ConsumerGroupResetOffsetRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({ instanceConsumerGroupsHref }) => {\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  const { mutateAsync } = useResetConsumerGroupMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const getTopics = () => {\n    const topics = (consumerGroup.consumers || []).map(\n      (consumer) => consumer.topic\n    );\n    const distinctTopics = Array.from(new Set(topics));\n    return distinctTopics;\n  };\n\n  const onConfirmResetOffset = useCallback(\n    (\n      topic: string,\n      offset: OffsetValue,\n      partitions: number[],\n      customOffsetValue: string\n    ) => {\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl!,\n        consumerGroupId: consumerGroup.groupId,\n        topic: topic,\n        offset: offset,\n        partitions: partitions,\n        value: customOffsetValue,\n        onError: () => {\n          // TODO: alert\n        },\n        onSuccess: () => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.replace(instanceConsumerGroupsHref(instance.id));\n        },\n      });\n    },\n    [\n      mutateAsync,\n      history,\n      instance?.id,\n      instanceConsumerGroupsHref,\n      instance.adminUrl,\n      consumerGroup.groupId,\n    ]\n  );\n\n  return (\n    <ConsumerGroupResetOffset\n      isModalOpen={true}\n      state={consumerGroup.state}\n      groupId={consumerGroup.groupId}\n      topics={getTopics()}\n      consumers={consumerGroup.consumers}\n      onClickClose={onCancel}\n      onClickResetOffset={onConfirmResetOffset}\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupDrawer } from \"ui\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroupsRoute } from \"./ConsumerGroupsRoute\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\n\nexport const ConsumerGroupViewPartitionRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({\n  instanceConsumerGroupsHref,\n  viewPartitionConsumerGroupHref,\n  instancesHref,\n}) => {\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewPartitionConsumerGroupHref(\n        instance.id,\n        consumerGroup.groupId\n      )}/delete`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.groupId,\n    viewPartitionConsumerGroupHref,\n  ]);\n\n  const onClickResetOffset = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewPartitionConsumerGroupHref(\n        instance.id,\n        consumerGroup.groupId\n      )}/reset-offset`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.groupId,\n    viewPartitionConsumerGroupHref,\n  ]);\n\n  return (\n    <ConsumerGroupDrawer\n      consumerGroupByTopic={false}\n      state={consumerGroup.state}\n      activeMembers={consumerGroup.activeConsumers!}\n      partitionsWithLag={consumerGroup.laggingPartitions!}\n      consumers={consumerGroup.consumers}\n      groupId={consumerGroup.groupId}\n      onSelectDeleteConsumerGroup={onDelete}\n      onSelectResetOffsetConsumerGroup={onClickResetOffset}\n      isExpanded={true}\n      onClickClose={onCancel}\n    >\n      <ConsumerGroupsRoute instancesHref={instancesHref} />\n    </ConsumerGroupDrawer>\n  );\n};\n","import { useConsumerGroup } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { DataPlaneTopicConsumerGroupRoutePath } from \"./routesConsts\";\nimport type { DataPlaneTopicConsumerRouteParams } from \"./routesConsts\";\nimport { useTopicGate } from \"./useTopicGate\";\n\nexport function useTopicConsumerGroupGate() {\n  const { instance, topic } = useTopicGate();\n  const match = useRouteMatch<DataPlaneTopicConsumerRouteParams>(\n    DataPlaneTopicConsumerGroupRoutePath\n  );\n  if (!match) {\n    throw Error(\"useTopicConsumerGroupGate used outside the expected route\");\n  }\n  const { data: consumerGroup } = useConsumerGroup(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      consumerGroupId: match.params.consumerGroupId,\n    },\n    true\n  );\n\n  return {\n    instance,\n    consumerGroup: consumerGroup as NonNullable<typeof consumerGroup>,\n    match,\n    topic,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteConsumerGroup } from \"ui\";\nimport { useDeleteConsumerGroupMutation } from \"consoledot-api\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\n\nexport const TopicConsumerGroupDeleteRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({ instanceTopicConsumerGroupsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance, consumerGroup, topic } = useTopicConsumerGroupGate();\n\n  const { mutateAsync } = useDeleteConsumerGroupMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl!,\n      consumerGroupId: consumerGroup.groupId,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(\n          instanceTopicConsumerGroupsHref(instance.id, topic.name)\n        );\n      },\n    });\n  }, [\n    mutateAsync,\n    history,\n    instance?.id,\n    instanceTopicConsumerGroupsHref,\n    topic.name,\n    consumerGroup.groupId,\n    instance?.adminUrl,\n  ]);\n\n  return (\n    <DeleteConsumerGroup\n      isModalOpen={true}\n      onClose={onCancel}\n      onDeleteConsumer={onDelete}\n      state={consumerGroup.state}\n      consumerName={consumerGroup.groupId}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupResetOffset } from \"ui\";\nimport type { OffsetValue } from \"ui\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useResetConsumerGroupMutation } from \"consoledot-api\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\n\nexport const TopicConsumerGroupResetOffsetRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({ instanceTopicConsumerGroupsHref }) => {\n  const { instance, topic, consumerGroup } = useTopicConsumerGroupGate();\n\n  const { mutateAsync } = useResetConsumerGroupMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const getTopics = () => {\n    const topics = (consumerGroup.consumers || []).map(\n      (consumer) => consumer.topic\n    );\n    const distinctTopics = Array.from(new Set(topics));\n    return distinctTopics;\n  };\n\n  const onConfirmResetOffset = useCallback(\n    (\n      topicName: string,\n      offset: OffsetValue,\n      partitions: number[],\n      customOffsetValue: string\n    ) => {\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl!,\n        consumerGroupId: consumerGroup.groupId,\n        topic: topicName,\n        offset: offset,\n        partitions: partitions,\n        value: customOffsetValue,\n        onError: () => {\n          // TODO: alert\n        },\n        onSuccess: () => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.replace(\n            instanceTopicConsumerGroupsHref(instance.id, topic.name)\n          );\n        },\n      });\n    },\n    [\n      mutateAsync,\n      history,\n      instance?.id,\n      topic.name,\n      instanceTopicConsumerGroupsHref,\n      instance.adminUrl,\n      consumerGroup.groupId,\n    ]\n  );\n\n  return (\n    <ConsumerGroupResetOffset\n      isModalOpen={true}\n      state={consumerGroup.state}\n      groupId={consumerGroup.groupId}\n      topics={getTopics()}\n      consumers={consumerGroup.consumers}\n      onClickClose={onCancel}\n      onClickResetOffset={onConfirmResetOffset}\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupDrawer } from \"ui\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\nimport { TopicConsumerGroupsRoute } from \"./TopicConsumerGroupsRoute\";\n\nexport const TopicConsumerGroupViewPartitionRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({\n  instanceTopicConsumerGroupsHref,\n  instancesHref,\n  viewTopicPartitionConsumerGroupHref,\n  instanceDetailsHref,\n  instanceTopicsHref,\n}) => {\n    const { instance, topic, consumerGroup } = useTopicConsumerGroupGate();\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const history = useHistory();\n\n    const onCancel = useCallback(() => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n    }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n    const onDelete = useCallback(() => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${viewTopicPartitionConsumerGroupHref(\n          instance.id,\n          topic.name,\n          consumerGroup.groupId\n        )}/delete`\n      );\n    }, [\n      history,\n      instance.id,\n      consumerGroup.groupId,\n      topic.name,\n      viewTopicPartitionConsumerGroupHref,\n    ]);\n\n    const onClickResetOffset = useCallback(() => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${viewTopicPartitionConsumerGroupHref(\n          instance.id,\n          topic.name,\n          consumerGroup.groupId\n        )}/reset-offset`\n      );\n    }, [\n      history,\n      instance.id,\n      topic.name,\n      consumerGroup.groupId,\n      viewTopicPartitionConsumerGroupHref,\n    ]);\n\n    return (\n      <ConsumerGroupDrawer\n        consumerGroupByTopic={false}\n        state={consumerGroup.state}\n        activeMembers={consumerGroup.activeConsumers!}\n        partitionsWithLag={consumerGroup.laggingPartitions!}\n        consumers={consumerGroup.consumers}\n        groupId={consumerGroup.groupId}\n        onSelectDeleteConsumerGroup={onDelete}\n        onSelectResetOffsetConsumerGroup={onClickResetOffset}\n        isExpanded={true}\n        onClickClose={onCancel}\n      >\n        <TopicConsumerGroupsRoute\n          instancesHref={instancesHref}\n          instanceDetailsHref={instanceDetailsHref}\n          instanceTopicsHref={instanceTopicsHref}\n        />\n      </ConsumerGroupDrawer>\n    );\n  };\n","import type { DeleteModalProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  DeleteModal,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type DeleteKafkaTopicProps = {\n  topicName: string;\n} & Omit<\n  DeleteModalProps,\n  \"title\" | \"variant\" | \"confirmationValue\" | \"children\"\n>;\n\nexport const DeleteKafkaTopic: VoidFunctionComponent<DeleteKafkaTopicProps> = ({\n  topicName,\n  ...props\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <DeleteModal\n      {...props}\n      variant={\"destructive\"}\n      title={t(\"delete_topic_title\")}\n      confirmationValue={topicName}\n    >\n      <Trans\n        ns={\"kafka\"}\n        i18nKey={\"delete_topic_message\"}\n        components={[<strong />]}\n        values={{\n          topicName,\n        }}\n      />\n    </DeleteModal>\n  );\n};\n","import { useDeleteTopicMutation } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteKafkaTopic } from \"ui/src/components/DeleteKafkaTopic\";\nimport type { DataPlaneTopicNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\n\nexport const TopicDeleteRoute: VoidFunctionComponent<\n  DataPlaneTopicNavigationProps\n> = ({ instanceTopicsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance, topic } = useTopicGate();\n  const { mutateAsync, isLoading: isDeleting } = useDeleteTopicMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicsHref(instance.id));\n  }, [history, instance.id, instanceTopicsHref]);\n\n  const onDelete = useCallback(() => {\n    if (!instance.adminUrl) {\n      throw Error(\"Invalid instance adminUrl\");\n    }\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl,\n      name: topic.name,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceTopicsHref(instance.id));\n      },\n    });\n  }, [\n    instance.adminUrl,\n    instance.id,\n    mutateAsync,\n    topic.name,\n    history,\n    instanceTopicsHref,\n  ]);\n\n  return (\n    <DeleteKafkaTopic\n      topicName={topic.name}\n      isModalOpen={true}\n      isDeleting={isDeleting}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n      onDelete={onDelete}\n      onCancel={onCancel}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { useUpdateTopicMutation } from \"consoledot-api\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\nimport { EditTopicProperties } from \"ui\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\n\nexport const TopicEditPropertiesRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instanceDetailsHref, instanceTopicsHref, instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { instance, topic } = useTopicGate();\n\n  if (instance.maxPartitions === undefined) {\n    throw new Error(\n      `CreateTopicRoute, unexpected maxPartition undefined for instance ${instance.name}`\n    );\n  }\n\n  const dispatch = useDispatch();\n\n  const updateTopic = useUpdateTopicMutation();\n\n  const onSave = useCallback(\n    (topicData: Topic) => {\n      if (instance.adminUrl === undefined) {\n        throw new Error(\n          `EditTopicRoute, adminUrl undefined for instance ${instance.name}`\n        );\n      }\n      void updateTopic.mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl,\n        topic: topicData,\n\n        onSuccess: () => {\n          //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.push(instanceTopicsHref(instance.id));\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"save-error\",\n            })\n          );\n        },\n      });\n    },\n    [\n      instance.adminUrl,\n      instance.id,\n      instance.name,\n      updateTopic,\n      history,\n      instanceTopicsHref,\n      dispatch,\n    ]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicsHref(instance.id));\n  }, [history, instance.id, instanceTopicsHref]);\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        activeSection={\"properties\"}\n      />\n      <EditTopicProperties\n        topic={topic}\n        onCancel={onCancel}\n        onSave={onSave}\n        availablePartitionLimit={instance.maxPartitions}\n      />\n    </>\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { EditPermissions } from \"ui\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  useAcls,\n  useConsumerGroups,\n  useDeletePermissionsMutation,\n  useTopics,\n  useUpdatePermissionsMutation,\n} from \"consoledot-api\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport type {\n  DataPlanePermissionsNavigationProps,\n  DataPlanePermissionsRouteParams,\n} from \"../routesConsts\";\nimport { DataPlanePermissionsRoutePath } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\n\nexport const PermissionsEditRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ managePermissionsHref }) => {\n  const { instance } = useDataPlaneGate();\n  const match = useRouteMatch<DataPlanePermissionsRouteParams>(\n    DataPlanePermissionsRoutePath\n  );\n  if (!match) {\n    throw Error(\"EditPermissions used outside the expected route\");\n  }\n\n  const { data: acls } = useAcls({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: topics } = useTopics({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    plan: instance.plan,\n  });\n\n  const { data: consumerGroups } = useConsumerGroups({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const dispatch = useDispatch();\n\n  const consumerGroupsList = consumerGroups?.groups.map(\n    (consumer) => consumer.groupId\n  );\n  const topicsList = topics?.topics.map((topic) => topic.name);\n  const { mutateAsync } = useDeletePermissionsMutation();\n  const updatePermissions = useUpdatePermissionsMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onSaveAcls = useCallback(\n    (\n      aclPermission: AclBinding[] | undefined,\n      deletedPermissions: AclBinding[] | undefined\n    ) => {\n      if (aclPermission != undefined && aclPermission.length > 0) {\n        aclPermission.map(\n          (aclData) =>\n            void updatePermissions.mutateAsync({\n              instanceId: instance.id,\n              adminUrl: instance?.adminUrl || \"\",\n              acl: {\n                patternType: aclData.patternType,\n                permission: aclData.permission,\n                principal: aclData.principal,\n                operation: aclData.operation,\n                resourceName: aclData.resourceName,\n                resourceType: aclData.resourceType,\n              },\n\n              onSuccess: () => {\n                //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n                history.push(managePermissionsHref(instance.id));\n              },\n              onError: (_, message) => {\n                dispatch(\n                  addNotification({\n                    variant: \"danger\",\n                    title: message,\n                    dismissable: true,\n                    id: \"save-error\",\n                  })\n                );\n              },\n            })\n        );\n      }\n\n      if (deletedPermissions != undefined && deletedPermissions.length > 0) {\n        deletedPermissions.map((aclToDelete) => {\n          void mutateAsync({\n            instanceId: instance.id,\n            adminUrl: instance.adminUrl || \"\",\n            acl: {\n              patternType: aclToDelete.patternType,\n              permissionType: aclToDelete.permission,\n              principal: aclToDelete.principal,\n              resourceName: aclToDelete.resourceName,\n              operation: aclToDelete.operation,\n              resourceType: aclToDelete.resourceType,\n            },\n            onError: (_, message) => {\n              dispatch(\n                addNotification({\n                  variant: \"danger\",\n                  title: message,\n                  dismissable: true,\n                  id: \"delete-error\",\n                })\n              );\n            },\n            onSuccess: () => {\n              //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n              history.push(managePermissionsHref(instance.id));\n            },\n          });\n        });\n      }\n    },\n    [\n      dispatch,\n      history,\n      instance.adminUrl,\n      instance.id,\n      managePermissionsHref,\n      mutateAsync,\n      updatePermissions,\n    ]\n  );\n\n  const existingAcls: AclBinding[] | undefined = acls?.groups.map((acl) => {\n    return {\n      resourceName: acl.resource.resourceName,\n      patternType: acl.resource.patternType,\n      permission: acl.permission.permission,\n      operation: acl.permission.operation,\n      principal: acl.account,\n      resourceType: acl.resource.resourceType,\n    };\n  });\n\n  const aclsForSelectedAccount = existingAcls?.filter(\n    (value) =>\n      value.principal == `User:${match.params.selectedAccount}` ||\n      value.principal == \"User:*\"\n  );\n\n  const onClose = useCallback(() => {\n    //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <EditPermissions\n      onCancel={onClose}\n      kafkaName={instance.name}\n      onSave={onSaveAcls}\n      topicsList={topicsList || []}\n      consumerGroupsList={consumerGroupsList || []}\n      selectedAccount={\n        match.params.selectedAccount == \"all-accounts\"\n          ? \"All accounts\"\n          : match.params.selectedAccount\n      }\n      acls={aclsForSelectedAccount || []}\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { Account } from \"ui\";\nimport { PrincipalType } from \"ui\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlanePermissionsNavigationProps } from \"../routesConsts\";\nimport { SelectAccount } from \"ui\";\nimport { useServiceAccounts, useUserAccounts } from \"consoledot-api\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { useUserControlGate } from \"../../../useUserControlGate\";\n\nexport const PermissionsSelectAccountRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ managePermissionsHref, editPermissionsHref }) => {\n  const { instance } = useDataPlaneGate();\n  const { data: accounts } = useUserAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: serviceAccounts } = useServiceAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { userData } = useUserControlGate();\n  const userAccounts: Account[] | undefined = accounts?.accounts.map(\n    (userAccount) => {\n      return {\n        displayName: userAccount.displayName,\n        id: userAccount.username,\n        principalType: PrincipalType.UserAccount,\n      };\n    }\n  );\n\n  const serviceAccountList: Account[] | undefined =\n    serviceAccounts?.serviceAccounts.map((userAccount) => {\n      return {\n        displayName: userAccount.displayName,\n        id: userAccount.id,\n        principalType: PrincipalType.ServiceAccount,\n      };\n    });\n\n  const allAccounts =\n    userAccounts != undefined && serviceAccountList != undefined\n      ? [...serviceAccountList, ...userAccounts]\n      : undefined;\n  const filteredAccounts = allAccounts?.filter(\n    (value) => value.id !== instance.owner && value.id !== userData.username\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onNext = useCallback(\n    (selectedAccount: string | undefined) => {\n      //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        editPermissionsHref(\n          instance.id,\n          selectedAccount === \"All accounts\"\n            ? \"all-accounts\"\n            : selectedAccount || \"\"\n        )\n      );\n    },\n    [history, instance.id, editPermissionsHref]\n  );\n\n  const onClose = useCallback(() => {\n    //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <SelectAccount\n      accounts={filteredAccounts}\n      kafkaName={instance.name}\n      onNext={onNext}\n      onClose={onClose}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport type { CreateTopicPageProps } from \"ui\";\nimport { CreateTopic } from \"ui\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { useHistory } from \"react-router-dom\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { useDispatch } from \"react-redux\";\nimport { useCreateTopicMutation, useTopics } from \"consoledot-api\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport {\n  developerDefaults,\n  standardDefaults,\n} from \"consoledot-api/src/transformers/topicTransformer\";\n\nexport const TopicCreateRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instancesHref, instanceTopicsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { instance } = useDataPlaneGate();\n  const createTopic = useCreateTopicMutation();\n  const dispatch = useDispatch();\n  const availabilityZone = instance.az;\n  const { data: topics } = useTopics({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    plan: instance.plan,\n  });\n\n  if (instance.maxPartitions === undefined) {\n    throw new Error(\n      `CreateTopicRoute, unexpected maxPartition undefined for instance ${instance.name}`\n    );\n  }\n\n  const checkTopicName: CreateTopicPageProps[\"checkTopicName\"] = useCallback(\n    (topicName) => {\n      const selectedTopic = topics?.topics.filter(\n        (topic) => topic.name === topicName\n      );\n      if (selectedTopic && selectedTopic?.length > 0) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    [topics?.topics]\n  );\n\n  const onCloseCreateTopic = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicsHref(instance.id));\n  }, [history, instance.id, instanceTopicsHref]);\n\n  const onSave = useCallback(\n    (topicData: Topic) => {\n      void createTopic.mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance?.adminUrl || \"\",\n        topic: topicData,\n\n        onSuccess: () => {\n          //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.push(instanceTopicsHref(instance.id));\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"save-error\",\n            })\n          );\n        },\n      });\n    },\n    [\n      createTopic,\n      dispatch,\n      history,\n      instance?.adminUrl,\n      instance.id,\n      instanceTopicsHref,\n    ]\n  );\n\n  const initialTopicValues = useMemo(() => {\n    return instance.plan === \"developer\"\n      ? {\n          name: \"\",\n          partitions: [{ partition: 1, id: 1 }],\n          ...developerDefaults,\n        }\n      : {\n          name: \"\",\n          partitions: [{ partition: 1, id: 1 }],\n          ...standardDefaults,\n        };\n  }, [instance.plan]);\n\n  return (\n    <>\n      <CreateTopic\n        kafkaName={instance.name}\n        kafkaPageLink={instanceTopicsHref(instance.id)}\n        kafkaInstanceLink={instancesHref}\n        onSave={onSave}\n        initialTopicValues={initialTopicValues}\n        onCloseCreateTopic={onCloseCreateTopic}\n        checkTopicName={checkTopicName}\n        availablePartitionLimit={instance.maxPartitions}\n        availabilityZone={availabilityZone}\n      />\n    </>\n  );\n};\n","import { InvalidObject } from \"@redhat-cloud-services/frontend-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ControlPlaneRouteRoot } from \"../control-plane/routesConsts\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  PermissionsRoute,\n  ConsumerGroupsRoute,\n  DashboardRoute,\n  SettingsRoute,\n  TopicConsumerGroupsRoute,\n  TopicMessagesGroupsRoute,\n  TopicPropertiesRoute,\n  TopicSchemasRoute,\n  TopicsRoute,\n  ConsumerGroupDeleteRoute,\n  ConsumerGroupResetOffsetRoute,\n  ConsumerGroupViewPartitionRoute,\n  TopicConsumerGroupDeleteRoute,\n  TopicConsumerGroupResetOffsetRoute,\n  TopicConsumerGroupViewPartitionRoute,\n  TopicDeleteRoute,\n  TopicEditPropertiesRoute,\n  PermissionsEditRoute,\n  PermissionsSelectAccountRoute,\n  TopicCreateRoute,\n} from \"./routes\";\nimport { DataPlaneRoutePath, DataPlaneTopicRoutePath } from \"./routesConsts\";\n\nconst instanceDetailsHref = (id: string) =>\n  `${ControlPlaneRouteRoot}/${id}/details`;\n\nconst instanceTopicsHref = (id: string) =>\n  `${ControlPlaneRouteRoot}/${id}/details/topics`;\n\nconst topicPropertyHref = (id: string, topic: string) =>\n  `${instanceDetailsHref(id)}/topics/${topic}/properties`;\n\nconst topicHref = (id: string, topic: string) =>\n  `${instanceDetailsHref(id)}/topics/${topic}`;\n\nconst updateTopicHref = (id: string, topic: string) =>\n  `${topicHref(id, topic)}/edit`;\n\nconst deleteTopicHref = (id: string, topic: string) =>\n  `${topicHref(id, topic)}/delete`;\n\nexport const instanceConsumerGroupsHref = (id: string) =>\n  `${instanceDetailsHref(id)}/consumer-groups`;\n\nconst viewPartitionConsumerGroupHref = (id: string, consumerGroupId: string) =>\n  `${instanceDetailsHref(\n    id\n  )}/consumer-groups/${consumerGroupId}/view-partition`;\n\nconst instanceTopicConsumerGroupHref = (id: string, topic: string) =>\n  `${instanceDetailsHref(id)}/topics/${topic}/consumer-groups`;\n\nconst viewTopicPartitionConsumerGroupHref = (\n  id: string,\n  topic: string,\n  consumerGroupId: string\n) =>\n  `${instanceDetailsHref(\n    id\n  )}/topics/${topic}/consumer-groups/${consumerGroupId}/view-partition`;\nexport const managePermissionsHref = (id: string) =>\n  `${instanceDetailsHref(id)}/acls/select-account`;\n\nconst editPermissionsHref = (id: string, selectedAccount: string) =>\n  `${instanceDetailsHref(\n    id\n  )}/acls/select-account/${selectedAccount}/edit-permissions`;\n\nexport const permissionsModalHref = (id: string) =>\n  `${instanceDetailsHref(id)}/acls`;\n\nexport const DataPlaneRoutes: VoidFunctionComponent = () => {\n  return (\n    <Route path={DataPlaneRoutePath}>\n      <RedirectOnGateError redirectUrl={\"/kafkas\"}>\n        <Switch>\n          <Route path={`${DataPlaneRoutePath}/dashboard`} exact>\n            <DashboardRoute instancesHref={\"/kafkas\"} />\n          </Route>\n\n          <Route path={`${DataPlaneRoutePath}/topics`} exact>\n            <TopicsRoute instancesHref={\"/kafkas\"} />\n          </Route>\n\n          <Route path={`${DataPlaneRoutePath}/consumer-groups`} exact>\n            <ConsumerGroupsRoute instancesHref={\"/kafkas\"} />\n          </Route>\n\n          <Route path={`${DataPlaneRoutePath}/acls`}>\n            <Route path={`${DataPlaneRoutePath}/acls/select-account`}>\n              <PermissionsSelectAccountRoute\n                editPermissionsHref={editPermissionsHref}\n                instancesHref={\"/kafkas\"}\n                managePermissionsHref={permissionsModalHref}\n              />\n            </Route>\n            <Route\n              path={`${DataPlaneRoutePath}/acls/select-account/:selectedAccount/edit-permissions`}\n            >\n              <PermissionsEditRoute\n                editPermissionsHref={editPermissionsHref}\n                instancesHref={\"/kafkas\"}\n                managePermissionsHref={permissionsModalHref}\n              />\n            </Route>\n            <PermissionsRoute\n              instancesHref={\"/kafkas\"}\n              managePermissionsHref={managePermissionsHref}\n              editPermissionsHref={editPermissionsHref}\n            />\n          </Route>\n\n          <Route path={`${DataPlaneRoutePath}/settings`} exact>\n            <SettingsRoute instancesHref={\"/kafkas\"} />\n          </Route>\n          <Route\n            path={`${DataPlaneRoutePath}/topics`}\n            render={({ match }) => (\n              <RedirectOnGateError\n                redirectUrl={instanceTopicsHref(match.params.id)}\n              >\n                <Switch>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/create-topic`}\n                    exact\n                  >\n                    <TopicCreateRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/consumer-groups`}\n                  >\n                    <RedirectOnGateError\n                      redirectUrl={instanceTopicsHref(match.params.id)}\n                    >\n                      <Switch>\n                        <Route\n                          path={`${DataPlaneTopicRoutePath}/consumer-groups/:consumerGroupId/view-partition`}\n                        >\n                          <Route\n                            path={`${DataPlaneTopicRoutePath}/consumer-groups/:consumerGroupId/view-partition/delete`}\n                          >\n                            <TopicConsumerGroupDeleteRoute\n                              instancesHref={\"/kafkas\"}\n                              instanceTopicConsumerGroupsHref={\n                                instanceTopicConsumerGroupHref\n                              }\n                              viewTopicPartitionConsumerGroupHref={\n                                viewTopicPartitionConsumerGroupHref\n                              }\n                              instanceDetailsHref={instanceDetailsHref}\n                              instanceTopicsHref={instanceTopicsHref}\n                            />\n                          </Route>\n                          <Route\n                            path={`${DataPlaneTopicRoutePath}/consumer-groups/:consumerGroupId/view-partition/reset-offset`}\n                          >\n                            <TopicConsumerGroupResetOffsetRoute\n                              instancesHref={\"/kafkas\"}\n                              instanceTopicConsumerGroupsHref={\n                                instanceTopicConsumerGroupHref\n                              }\n                              viewTopicPartitionConsumerGroupHref={\n                                viewTopicPartitionConsumerGroupHref\n                              }\n                              instanceDetailsHref={instanceDetailsHref}\n                              instanceTopicsHref={instanceTopicsHref}\n                            />\n                          </Route>\n                          <TopicConsumerGroupViewPartitionRoute\n                            instancesHref={\"/kafkas\"}\n                            instanceTopicConsumerGroupsHref={\n                              instanceTopicConsumerGroupHref\n                            }\n                            viewTopicPartitionConsumerGroupHref={\n                              viewTopicPartitionConsumerGroupHref\n                            }\n                            instanceDetailsHref={instanceDetailsHref}\n                            instanceTopicsHref={instanceTopicsHref}\n                          />\n                        </Route>\n                        <Route\n                          path={`${DataPlaneTopicRoutePath}/consumer-groups/:consumerGroupId/reset-offset`}\n                        >\n                          <TopicConsumerGroupResetOffsetRoute\n                            instancesHref={\"/kafkas\"}\n                            instanceTopicConsumerGroupsHref={\n                              instanceTopicConsumerGroupHref\n                            }\n                            viewTopicPartitionConsumerGroupHref={\n                              viewTopicPartitionConsumerGroupHref\n                            }\n                            instanceDetailsHref={instanceDetailsHref}\n                            instanceTopicsHref={instanceTopicsHref}\n                          />\n                        </Route>\n                        <Route\n                          path={`${DataPlaneTopicRoutePath}/consumer-groups/:consumerGroupId/delete`}\n                        >\n                          <TopicConsumerGroupDeleteRoute\n                            instancesHref={\"/kafkas\"}\n                            instanceTopicConsumerGroupsHref={\n                              instanceTopicConsumerGroupHref\n                            }\n                            viewTopicPartitionConsumerGroupHref={\n                              viewTopicPartitionConsumerGroupHref\n                            }\n                            instanceDetailsHref={instanceDetailsHref}\n                            instanceTopicsHref={instanceTopicsHref}\n                          />\n                        </Route>\n                      </Switch>\n                    </RedirectOnGateError>\n                    <TopicConsumerGroupsRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/messages`}\n                    exact\n                  >\n                    <TopicMessagesGroupsRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                    />\n                  </Route>\n\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/properties/edit`}\n                    exact\n                  >\n                    <TopicEditPropertiesRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/properties`}\n                  >\n                    <Route\n                      path={`${DataPlaneRoutePath}/topics/:topicName/properties/delete`}\n                    >\n                      <TopicDeleteRoute\n                        instancesHref={\"/kafkas\"}\n                        instanceDetailsHref={instanceDetailsHref}\n                        instanceTopicsHref={instanceTopicsHref}\n                        topicHref={topicHref}\n                        updateTopicHref={updateTopicHref}\n                        deleteTopicHref={deleteTopicHref}\n                      />\n                    </Route>\n                    <TopicPropertiesRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                      topicHref={topicPropertyHref}\n                      updateTopicHref={updateTopicHref}\n                      deleteTopicHref={deleteTopicHref}\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/schemas`}\n                    exact\n                  >\n                    <TopicSchemasRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/delete`}\n                    exact\n                  >\n                    <TopicDeleteRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                      topicHref={topicHref}\n                      updateTopicHref={updateTopicHref}\n                      deleteTopicHref={deleteTopicHref}\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/edit`}\n                    exact\n                  >\n                    <TopicEditPropertiesRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                    />\n                  </Route>\n                  <Redirect\n                    from={`${DataPlaneRoutePath}/topics/:topicName/`}\n                    to={`${DataPlaneRoutePath}/topics/:topicName/consumer-groups`}\n                    exact\n                  />\n                </Switch>\n              </RedirectOnGateError>\n            )}\n          />\n          <Route\n            path={`${DataPlaneRoutePath}/consumer-groups`}\n            render={({ match }) => (\n              <RedirectOnGateError\n                redirectUrl={instanceConsumerGroupsHref(match.params.id)}\n              >\n                <Switch>\n                  <Route\n                    path={`${DataPlaneRoutePath}/consumer-groups/:consumerGroupId/view-partition`}\n                  >\n                    <Route\n                      path={`${DataPlaneRoutePath}/consumer-groups/:consumerGroupId/view-partition/delete`}\n                    >\n                      <ConsumerGroupDeleteRoute\n                        instancesHref={\"/kafkas\"}\n                        instanceDetailsHref={instanceDetailsHref}\n                        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                        viewPartitionConsumerGroupHref={\n                          viewPartitionConsumerGroupHref\n                        }\n                      />\n                    </Route>\n                    <Route\n                      path={`${DataPlaneRoutePath}/consumer-groups/:consumerGroupId/view-partition/reset-offset`}\n                    >\n                      <ConsumerGroupResetOffsetRoute\n                        instancesHref={\"/kafkas\"}\n                        instanceDetailsHref={instanceDetailsHref}\n                        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                        viewPartitionConsumerGroupHref={\n                          viewPartitionConsumerGroupHref\n                        }\n                      />\n                    </Route>\n                    <ConsumerGroupViewPartitionRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      viewPartitionConsumerGroupHref={\n                        viewPartitionConsumerGroupHref\n                      }\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/consumer-groups/:consumerGroupId/reset-offset`}\n                  >\n                    <ConsumerGroupResetOffsetRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      viewPartitionConsumerGroupHref={\n                        viewPartitionConsumerGroupHref\n                      }\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/consumer-groups/:consumerGroupId/delete`}\n                  >\n                    <ConsumerGroupDeleteRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      viewPartitionConsumerGroupHref={\n                        viewPartitionConsumerGroupHref\n                      }\n                    />\n                  </Route>\n                </Switch>\n              </RedirectOnGateError>\n            )}\n          />\n          <Redirect\n            from={`${DataPlaneRoutePath}`}\n            to={`${DataPlaneRoutePath}/dashboard`}\n            exact\n          />\n\n          <Route>\n            <InvalidObject />\n          </Route>\n        </Switch>\n      </RedirectOnGateError>\n    </Route>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { KafkaPageV3 } from \"ui\";\n\nexport const OverviewRoute: VoidFunctionComponent = () => {\n  return <KafkaPageV3 />;\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ControlPlaneRoutes, DrawerProvider } from \"./control-plane\";\nimport { DataPlaneRoutes } from \"./data-plane\";\nimport { OverviewRoute } from \"./overview\";\n\nexport const Routes: VoidFunctionComponent = () => {\n  return (\n    <Switch>\n      <Route path={\"/overview\"} exact>\n        <OverviewRoute />\n      </Route>\n      <Redirect from={\"/\"} to={\"/kafkas\"} exact />\n      <Route path={\"/kafkas\"}>\n        <DrawerProvider>\n          {/* don't move these routes around! the order is important */}\n          <ControlPlaneRoutes />\n          <DataPlaneRoutes />\n        </DrawerProvider>\n      </Route>\n      <Route path={\"\"} exact></Route>\n    </Switch>\n  );\n};\n","import NotificationsPortal from \"@redhat-cloud-services/frontend-components-notifications/NotificationPortal\";\nimport { notificationsReducer } from \"@redhat-cloud-services/frontend-components-notifications/redux\";\nimport { getRegistry } from \"@redhat-cloud-services/frontend-components-utilities/Registry\";\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { memo, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { Reducer } from \"redux\";\n\nimport \"./App.scss\";\n\nimport { Routes } from \"./routes/Routes\";\n\nconst App = memo(() => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { updateDocumentTitle, on } = useChrome();\n\n  const { t } = useTranslation();\n  const title = t(\"kafka:rhosakTitle\");\n\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer as Reducer });\n\n    updateDocumentTitle(title);\n\n    const unregister = on(\"APP_NAVIGATION\", (event) => {\n      console.dir(event);\n      if (event.navId) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.push(\"/\" + event.navId === \"/\" ? \"\" : event.navId);\n      }\n    });\n    return () => {\n      if (unregister) {\n        unregister();\n      }\n    };\n  }, [history, on, title, updateDocumentTitle]);\n\n  return (\n    <>\n      <NotificationsPortal />\n      <Routes />\n    </>\n  );\n});\n\nexport default App;\n","/* eslint-disable */\n// @ts-nocheck\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { AssetsContext } from \"@rhoas/app-services-ui-shared\";\nimport { ScalprumComponent } from \"@scalprum/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nexport const appIdentifier = \"applicationServices\";\n\nconst basePath = \"/apps/rhoas-guides-build\";\nconst getPath = () => {\n  return basePath;\n};\n\nexport const QuickstartLoader: VoidFunctionComponent = () => {\n  const [loaded, setLoaded] = useState(false);\n  const chrome = useChrome();\n  const { quickStarts } = chrome;\n\n  const onLoad = (qs: unknown) => {\n    if (quickStarts) {\n      setLoaded(true); // unload federated module\n      quickStarts.set(appIdentifier, qs);\n    }\n  };\n\n  const processor = (item) => {\n    const fixPath = (e) => `${basePath}${e}`;\n    return item.guides.entry.map(fixPath);\n  };\n\n  return (\n    <ErrorBoundary fallbackRender={() => null}>\n      <AssetsContext.Provider value={{ getPath }}>\n        {!loaded ? (\n          <ScalprumComponent\n            appName=\"guides\"\n            scope=\"guides\"\n            module=\"./QuickStartLoader\"\n            ErrorComponent={<div>opsie</div>}\n            processor={processor}\n            showDrafts={false}\n            onLoad={onLoad}\n          />\n        ) : null}\n      </AssetsContext.Provider>\n    </ErrorBoundary>\n  );\n};\n","import notificationsMiddleware from \"@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware\";\nimport type ReducerRegistry from \"@redhat-cloud-services/frontend-components-utilities/ReducerRegistry\";\nimport { getRegistry } from \"@redhat-cloud-services/frontend-components-utilities/Registry\";\nimport type { Middleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise-middleware\";\n\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nexport let registry: ReducerRegistry<any>;\n\nexport function init(...middleware: Middleware[]) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: [\"detail\", \"stack\"] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n","import type { Topic as ApiTopic } from \"@rhoas/kafka-instance-sdk/dist/generated/model/topic\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type {\n  TopicConfig,\n  TopicConfigField,\n} from \"ui-models/src/models/topic-config\";\nimport type { Bytes, Milliseconds } from \"ui-models/src/types\";\nimport type { TopicSettings } from \"@rhoas/kafka-instance-sdk\";\n\nexport type UserEditable = Pick<\n  TopicConfig,\n  \"retention.ms\" | \"retention.bytes\" | \"cleanup.policy\"\n>;\n\nexport const developerDefaults: TopicConfig = {\n  \"cleanup.policy\": \"delete\",\n  \"delete.retention.ms\": { type: \"ms\", value: BigInt(\"86400000\") },\n  \"max.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"max.message.bytes\": { type: \"bytes\", value: BigInt(\"1048588\") },\n  \"message.downconversion.enable\": true,\n  \"message.timestamp.difference.max.ms\": {\n    type: \"ms\",\n    value: BigInt(\"9223372036854775807\"),\n  },\n  \"message.timestamp.type\": \"CreateTime\",\n  \"min.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"retention.bytes\": { type: \"bytes\", value: BigInt(\"-1\") },\n  \"retention.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"segment.bytes\": { type: \"bytes\", value: BigInt(\"1073741824\") },\n  \"segment.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"compression.type\": \"producer\",\n  \"file.delete.delay.ms\": { type: \"ms\", value: BigInt(\"60000\") },\n  \"flush.messages\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"flush.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"index.interval.bytes\": { type: \"bytes\", value: BigInt(\"4096\") },\n  \"message.format.version\": \"3.0-IV1\",\n  \"min.cleanable.dirty.ratio\": 0.5,\n  \"min.insync.replicas\": 1,\n  \"segment.index.bytes\": { type: \"bytes\", value: BigInt(\"10485760\") },\n  \"segment.jitter.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"unclean.leader.election.enable\": false,\n  preallocate: false,\n} as const;\n\nexport const standardDefaults: TopicConfig = {\n  \"cleanup.policy\": \"delete\",\n  \"delete.retention.ms\": { type: \"ms\", value: BigInt(\"86400000\") },\n  \"max.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"max.message.bytes\": { type: \"bytes\", value: BigInt(\"1048588\") },\n  \"message.downconversion.enable\": true,\n  \"message.timestamp.difference.max.ms\": {\n    type: \"ms\",\n    value: BigInt(\"9223372036854775807\"),\n  },\n  \"message.timestamp.type\": \"CreateTime\",\n  \"min.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"retention.bytes\": { type: \"bytes\", value: BigInt(\"-1\") },\n  \"retention.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"segment.bytes\": { type: \"bytes\", value: BigInt(\"1073741824\") },\n  \"segment.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"compression.type\": \"producer\",\n  \"file.delete.delay.ms\": { type: \"ms\", value: BigInt(\"60000\") },\n  \"flush.messages\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"flush.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"index.interval.bytes\": { type: \"bytes\", value: BigInt(\"4096\") },\n  \"message.format.version\": \"3.0-IV1\",\n  \"min.cleanable.dirty.ratio\": 0.5,\n  \"min.insync.replicas\": 2,\n  \"segment.index.bytes\": { type: \"bytes\", value: BigInt(\"10485760\") },\n  \"segment.jitter.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"unclean.leader.election.enable\": false,\n  preallocate: false,\n} as const;\n\nexport function topicTransformerFactory(plan: Plan) {\n  const d = plan === \"developer\" ? developerDefaults : standardDefaults;\n\n  return function topicTransformer(t: ApiTopic): Topic {\n    if (!t.name) {\n      throw new Error(`Invalid topic, name is empty: ${JSON.stringify(t)}`);\n    }\n    const cm = Object.fromEntries<string>(\n      t.config?.map((c) => [c.key as TopicConfigField, c.value]) || []\n    );\n    const config: TopicConfig = {\n      \"cleanup.policy\": cm[\"cleanup.policy\"] as TopicConfig[\"cleanup.policy\"],\n      \"delete.retention.ms\": configValueToMilliseconds(\n        cm[\"delete.retention.ms\"],\n        d[\"delete.retention.ms\"]\n      ),\n      \"max.compaction.lag.ms\": configValueToMilliseconds(\n        cm[\"max.compaction.lag.ms\"],\n        d[\"max.compaction.lag.ms\"]\n      ),\n      \"max.message.bytes\": configValueToBytes(\n        cm[\"max.message.bytes\"],\n        d[\"max.message.bytes\"]\n      ),\n      \"message.downconversion.enable\": configValueToBoolean(\n        cm[\"message.downconversion.enable\"],\n        d[\"message.downconversion.enable\"]\n      ),\n      \"message.timestamp.difference.max.ms\": configValueToMilliseconds(\n        cm[\"message.timestamp.difference.max.ms\"],\n        d[\"message.timestamp.difference.max.ms\"]\n      ),\n      \"message.timestamp.type\": cm[\n        \"message.timestamp.type\"\n      ] as TopicConfig[\"message.timestamp.type\"],\n      \"min.compaction.lag.ms\": configValueToMilliseconds(\n        cm[\"min.compaction.lag.ms\"],\n        d[\"min.compaction.lag.ms\"]\n      ),\n      \"retention.bytes\": configValueToBytes(\n        cm[\"retention.bytes\"],\n        d[\"retention.bytes\"]\n      ),\n      \"retention.ms\": configValueToMilliseconds(\n        cm[\"retention.ms\"],\n        d[\"retention.ms\"]\n      ),\n      \"segment.bytes\": configValueToBytes(\n        cm[\"segment.bytes\"],\n        d[\"segment.bytes\"]\n      ),\n      \"segment.ms\": configValueToMilliseconds(\n        cm[\"segment.ms\"],\n        d[\"segment.ms\"]\n      ),\n      \"compression.type\": cm[\n        \"compression.type\"\n      ] as TopicConfig[\"compression.type\"],\n      \"file.delete.delay.ms\": configValueToMilliseconds(\n        cm[\"file.delete.delay.ms\"],\n        d[\"file.delete.delay.ms\"]\n      ),\n      \"flush.messages\": configValueToMilliseconds(\n        cm[\"flush.messages\"],\n        d[\"flush.messages\"]\n      ),\n      \"flush.ms\": configValueToMilliseconds(cm[\"flush.ms\"], d[\"flush.ms\"]),\n      \"follower.replication.throttled.replicas\":\n        cm[\"follower.replication.throttled.replicas\"],\n      \"index.interval.bytes\": configValueToBytes(\n        cm[\"index.interval.bytes\"],\n        d[\"index.interval.bytes\"]\n      ),\n      \"leader.replication.throttled.replicas\":\n        cm[\"leader.replication.throttled.replicas\"],\n      \"message.format.version\": cm[\"message.format.version\"],\n      \"min.cleanable.dirty.ratio\": configValueToNumber(\n        cm[\"min.cleanable.dirty.ratio\"],\n        d[\"min.cleanable.dirty.ratio\"]\n      ),\n      \"min.insync.replicas\": configValueToNumber(\n        cm[\"min.insync.replicas\"],\n        d[\"min.insync.replicas\"]\n      ),\n      \"segment.index.bytes\": configValueToBytes(\n        cm[\"segment.index.bytes\"],\n        d[\"segment.index.bytes\"]\n      ),\n      \"segment.jitter.ms\": configValueToMilliseconds(\n        cm[\"segment.jitter.ms\"],\n        d[\"segment.jitter.ms\"]\n      ),\n      \"unclean.leader.election.enable\": configValueToBoolean(\n        cm[\"unclean.leader.election.enable\"],\n        d[\"unclean.leader.election.enable\"]\n      ),\n      preallocate: configValueToBoolean(cm[\"preallocate\"], d[\"preallocate\"]),\n    };\n    return {\n      name: t.name,\n      partitions: t.partitions || [],\n      ...config,\n    };\n  };\n}\n\nfunction configValueToMilliseconds(\n  value: string,\n  defaultIfEmpty: Milliseconds\n): Milliseconds {\n  return value && value.trim().length > 0\n    ? { type: \"ms\", value: BigInt(value.trim()) }\n    : defaultIfEmpty;\n}\n\nfunction configValueToBytes(value: string, defaultIfEmpty: Bytes): Bytes {\n  return value && value.trim().length > 0\n    ? { type: \"bytes\", value: BigInt(value.trim()) }\n    : defaultIfEmpty;\n}\n\nfunction configValueToNumber(value: string, defaultIfError: number): number {\n  return parseInt(value, 10) || defaultIfError;\n}\n\nfunction configValueToBoolean(value: string, defaultIfError: boolean): boolean {\n  try {\n    const v: unknown = JSON.parse(value);\n    if (typeof v === \"boolean\") {\n      return v;\n    }\n  } catch {\n    // not a boolean, fallback to the default\n  }\n  return defaultIfError;\n}\n\nexport const convertToKeyValuePairs = (inputObj: UserEditable) => {\n  const keyValuePairs: Array<{ key: string; value: string }> = [];\n  if (inputObj[\"retention.ms\"]) {\n    keyValuePairs.push({\n      key: \"retention.ms\",\n      value: inputObj[\"retention.ms\"].value.toString(),\n    });\n  }\n\n  if (inputObj[\"retention.bytes\"]) {\n    keyValuePairs.push({\n      key: \"retention.bytes\",\n      value: inputObj[\"retention.bytes\"].value.toString(),\n    });\n  }\n\n  if (inputObj[\"cleanup.policy\"]) {\n    keyValuePairs.push({\n      key: \"cleanup.policy\",\n      value: inputObj[\"cleanup.policy\"],\n    });\n  }\n\n  return keyValuePairs;\n};\n\nexport const convertToTopicSettings = (topic: Topic): TopicSettings => {\n  const { partitions, ...config } = topic;\n  const configEntries = convertToKeyValuePairs(config);\n  const topicSettings: TopicSettings = {\n    numPartitions: partitions.length,\n    config: configEntries,\n  };\n  return topicSettings;\n};\n","import type { Bytes, DateIsoString } from \"../types\";\n\n/**\n * All the details abut a Kafka instance.\n *\n * Unless differently specified, the values marked as accepting `undefined`\n * will come from extra API calls.\n */\nexport type Kafka = {\n  id: string;\n  name: string;\n  createdAt: DateIsoString;\n  updatedAt: DateIsoString;\n  expiryDate: DateIsoString | undefined;\n  owner: string;\n  provider: CloudProvider;\n  region: CloudRegion;\n  status: Status;\n  plan: Plan;\n  size: string | undefined;\n  ingress: number | undefined;\n  egress: number | undefined;\n  storage: Bytes | undefined;\n  maxPartitions: number | undefined;\n  connections: number | undefined;\n  connectionRate: number | undefined;\n  messageSize: Bytes | undefined;\n  billing: \"prepaid\" | MarketplaceSubscription | undefined;\n  az: AZ;\n\n  version: string;\n\n  bootstrapUrl: string | undefined;\n  adminUrl: string | undefined;\n};\nexport type KafkaField = keyof Kafka;\n\n/**\n * Supported Cloud Providers. Extend this to add a new provider, then follow\n * Typescript errors to find where extra information need to be added (images,\n * translations).\n */\nexport type CloudProvider = \"aws\" | \"gcp\" | \"azure\";\n\n/**\n * A Cloud Region. Since this varies between Cloud Providers and has no extra\n * visual attached, we take its name from the API and do no further\n * transformation.\n */\nexport type CloudRegion = string;\n/**\n * Cloud provider multi availability zone\n */\nexport type AZ = \"single\" | \"multi\";\n/**\n * A number that describes how much does an instance cost to create\n */\nexport type Quota = number;\n/**\n * The capabilities of an instance, and its quota cost. Some sizes might not be\n * enabled, eg. because temporarily out of capacity\n */\nexport type Size = {\n  id: string;\n  displayName: string;\n  status: \"stable\" | \"preview\";\n  quota: Quota;\n  ingress: number;\n  egress: number;\n  storage: number;\n  connections: number;\n  connectionRate: number;\n  maxPartitions: number;\n  messageSize: number;\n  isDisabled: boolean;\n};\n/**\n * Paid for instances are `standard`, evaluation instances are `developer`.\n * `standard` instances have a `Quota` associated, and bigger sizes.\n * `developer` instances are free to be created (up to 1 per user), have a\n * single, smaller size option than `standard` ones, and they expire after a\n * few hours.\n *\n * Note: a new kind of evaluation instance is being studied. They will have a\n * long expiration period and bigger sizes.\n */\nexport type Plan = \"standard\" | \"developer\";\n/**\n * All the statuses an instance can be. If new statuses are added, ensure to\n * add them to the relevant status group (`ReadyStatuses` etc.).\n */\nexport const Statuses = [\n  \"ready\",\n  \"degraded\",\n  \"accepted\",\n  \"provisioning\",\n  \"preparing\",\n  \"deprovision\",\n  \"deleting\",\n  \"suspended\",\n  \"suspending\",\n  \"resuming\",\n] as const;\n\nexport type Status = (typeof Statuses)[number];\n\nexport const CreatingStatuses: readonly Status[] = [\n  \"accepted\",\n  \"provisioning\",\n  \"preparing\",\n];\nexport const ReadyStatuses: readonly Status[] = [\"ready\"];\nexport const DegradedStatuses: readonly Status[] = [\"degraded\"];\nexport const SuspendingStatuses: readonly Status[] = [\"suspending\"];\nexport const SuspendedStatuses: readonly Status[] = [\"suspended\"];\nexport const DeletingStatuses: readonly Status[] = [\"deleting\", \"deprovision\"];\nexport const ResumingStatuses: readonly Status[] = [\"resuming\"];\n\nexport const SimplifiedStatuses = {\n  creating: CreatingStatuses,\n  ready: ReadyStatuses,\n  degraded: DegradedStatuses,\n  suspended: SuspendedStatuses,\n  deleting: DeletingStatuses,\n  resuming: ResumingStatuses,\n  suspending: SuspendingStatuses,\n} as const;\nexport type SimplifiedStatus = keyof typeof SimplifiedStatuses;\n\n/**\n * A list of marketplaces where an instance can be billed to\n */\nexport type MarketPlace = CloudProvider | \"rhm\";\n/**\n * List of marketplaces where a user has some subscription\n */\nexport type MarketPlaceSubscriptions = {\n  marketplace: MarketPlace;\n  subscriptions: string[];\n};\n/**\n * A specific marketplace's subscription, assigned as billing option to an\n * instance.\n *\n * Note: the API will provide only the `subscription`; the `MarketPlace` will\n * have to be fetched querying for the `subscription`.\n */\nexport type MarketplaceSubscription = {\n  marketplace: MarketPlace;\n  subscription: string;\n};\n","import type {\n  ConsumerGroup as ConsumerGroupApi,\n  ConsumerGroupState,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type {\n  Consumer,\n  ConsumerGroup,\n} from \"ui-models/src/models/consumer-group\";\n\nexport function consumerGroupTransformer(t: ConsumerGroupApi): ConsumerGroup {\n  const state = stateMapping[t.state as ConsumerGroupState];\n  return {\n    groupId: t.groupId,\n    state: state,\n    consumers: t.consumers.map<Consumer>((consumer) => ({\n      groupId: consumer.groupId,\n      topic: consumer.topic,\n      lag: consumer.lag,\n      memberId: consumer.memberId,\n      partition: consumer.partition,\n      offset: consumer.offset,\n      logEndOffset: consumer.logEndOffset,\n    })),\n    activeConsumers: t.metrics?.activeConsumers,\n    laggingPartitions: t.metrics?.laggingPartitions,\n    unassignedPartitions: t.metrics?.unassignedPartitions,\n  };\n}\n\nexport const stateMapping: {\n  [state in ConsumerGroupState]: ConsumerGroup[\"state\"];\n} = {\n  DEAD: \"Dead\",\n  EMPTY: \"Empty\",\n  STABLE: \"Stable\",\n  UNKNOWN: \"Unknown\",\n  COMPLETING_REBALANCE: \"CompletingRebalance\",\n  PREPARING_REBALANCE: \"PreparingRebalance\",\n};\n","import type { DefaultApi, InstantQuery } from \"@rhoas/kafka-management-sdk\";\nimport type { NoUndefinedField } from \"../types\";\n\nexport async function fetchKafkaKpis(\n  getMetricsByInstantQuery: DefaultApi[\"getMetricsByInstantQuery\"],\n  id: string\n) {\n  let topics = 0,\n    topicPartitions = 0,\n    consumerGroups = 0;\n\n  const response = await getMetricsByInstantQuery(id, [\n    \"kafka_topic:kafka_topic_partitions:sum\", // (Number of topic partitions)\n    \"kafka_topic:kafka_topic_partitions:count\", // (Number of topics)\n    \"consumergroup:kafka_consumergroup_members:count\", // (number of consumer groups - note that this metric will appear after a consumer group is created. There should be handled by the UI in a way that the metric isn't visible if no consumer groups are created)\n  ]);\n\n  const safeMetrics: NoUndefinedField<InstantQuery[]> = (response.data.items ||\n    []) as NoUndefinedField<InstantQuery[]>;\n\n  safeMetrics.forEach(({ metric, value }) => {\n    const { __name__: name } = metric;\n\n    switch (name) {\n      case \"kafka_topic:kafka_topic_partitions:sum\":\n        topicPartitions = value;\n        break;\n      case \"kafka_topic:kafka_topic_partitions:count\":\n        topics = value;\n        break;\n      case \"consumergroup:kafka_consumergroup_members:count\":\n        consumerGroups = value;\n        break;\n    }\n  });\n  return {\n    consumerGroups,\n    topicPartitions,\n    topics,\n  };\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { GetKafkaInstanceMetricsResponse, TimeSeriesMetrics } from \"ui\";\nimport type { SafeRangeQuery } from \"../types\";\n\nexport type FetchKafkaMetricsProps = {\n  getMetricsByRangeQuery: DefaultApi[\"getMetricsByRangeQuery\"];\n  id: string;\n  duration: number;\n  interval: number;\n};\n\nexport async function fetchKafkaMetrics({\n  getMetricsByRangeQuery,\n  id,\n  duration,\n  interval,\n}: FetchKafkaMetricsProps): Promise<GetKafkaInstanceMetricsResponse> {\n  const response = await getMetricsByRangeQuery(id, duration, interval, [\n    \"kubelet_volume_stats_used_bytes\",\n    \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\",\n    \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\",\n  ]);\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(\n        m.values &&\n        m.metric &&\n        m.metric.topic &&\n        m.metric.name &&\n        m.metric.persistentvolumeclaim &&\n        m.metric.persistentvolumeclaim.includes(\"zookeeper\")\n      )\n  ) as SafeRangeQuery[];\n\n  const usedDiskSpaceMetrics: TimeSeriesMetrics = {};\n  const connectionAttemptRateMetrics: TimeSeriesMetrics = {};\n  const clientConnectionsMetrics: TimeSeriesMetrics = {};\n\n  const connectionRateLimit = 0,\n    connectionsLimit = 0,\n    diskSpaceLimit = 0;\n\n  safeMetrics.forEach((m) => {\n    const { __name__: name } = m.metric;\n\n    function addAggregatedValuesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    switch (name) {\n      case \"kubelet_volume_stats_used_bytes\":\n        addAggregatedValuesTo(usedDiskSpaceMetrics);\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\":\n        addAggregatedValuesTo(connectionAttemptRateMetrics);\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\":\n        addAggregatedValuesTo(clientConnectionsMetrics);\n        break;\n    }\n  });\n\n  return {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionRateLimit,\n    connectionsLimit,\n  };\n}\n","export function valuesToQuery(\n  field: string,\n  values: string[],\n  comparison: \"%\" | \"=\"\n): string | undefined {\n  return values\n    .map((v) =>\n      comparison === \"%\"\n        ? `${field} like %${v.trim()}%`\n        : `${field} = ${v.trim()}`\n    )\n    .join(\" or \");\n}\n","import type { DefaultApi, KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport type { SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { SimplifiedStatuses } from \"ui-models/src/models/kafka\";\nimport type { KafkaInstanceEnhanced } from \"../transformers/kafkaRequestToKafkaInstanceEnhanched\";\nimport type { KafkaInstancesSortableColumn } from \"../types\";\nimport { valuesToQuery } from \"./valuesToQuery\";\n\nconst uiColumnMapping: {\n  [key in KafkaInstancesSortableColumn]: keyof KafkaRequest;\n} = {\n  name: \"name\",\n  owner: \"owner\",\n  provider: \"cloud_provider\",\n  region: \"region\",\n  createdAt: \"created_at\",\n};\nexport type FetchKafkasParams = {\n  getKafkas: DefaultApi[\"getKafkas\"];\n  dataMapper: (data: KafkaRequest) => Promise<KafkaInstanceEnhanced>;\n  page: number;\n  perPage: number;\n  name: string[];\n  owner: string[];\n  status: SimplifiedStatus[];\n  sort: KafkaInstancesSortableColumn;\n  direction: \"asc\" | \"desc\";\n};\n\nexport async function fetchKafkas(params: FetchKafkasParams): Promise<{\n  instances: KafkaInstanceEnhanced[];\n  count: number;\n}> {\n  const {\n    name,\n    status,\n    owner,\n    sort,\n    direction,\n    page,\n    perPage,\n    dataMapper,\n    getKafkas,\n  } = params;\n  const search = filtersToSearch(name, owner, status);\n\n  const res = await getKafkas(\n    page.toString(10),\n    perPage.toString(10),\n    sort ? `${uiColumnMapping[sort]} ${direction}` : undefined,\n    search\n  );\n  const rawInstances = res.data.items;\n  const count = res.data.total;\n  const instances = await Promise.all(rawInstances.map(dataMapper));\n  return {\n    instances,\n    count,\n  };\n}\n\nexport function filtersToSearch(\n  name: string[],\n  owner: string[],\n  status: SimplifiedStatus[]\n): string {\n  const querystring = [\n    valuesToQuery(\"name\", name, \"%\"),\n    valuesToQuery(\"owner\", owner, \"%\"),\n    valuesToQuery(\n      \"status\",\n      status.flatMap((s) => SimplifiedStatuses[s]),\n      \"=\"\n    ),\n  ]\n    .filter(Boolean)\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    .map((q) => `(${q!})`)\n    .join(\" and \");\n  return querystring;\n}\n","import type {\n  DefaultApi,\n  SupportedKafkaSize,\n} from \"@rhoas/kafka-management-sdk\";\nimport type { Plan, Size } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfoWithRegionsCapacity } from \"./fetchProvidersWithRegions\";\n\nexport type SizeWithLimits = Size & { trialDurationHours: number };\n\nexport async function fetchProviderRegionSizes(\n  api: DefaultApi[\"getInstanceTypesByCloudProviderAndRegion\"],\n  providerInfo: CloudProviderInfoWithRegionsCapacity,\n  region: string,\n  instanceType: Plan\n) {\n  const regions = providerInfo.regions;\n  const regionInfo = regions.find((r) => r.id === region);\n  const availableSizes =\n    regionInfo?.capacity.flatMap((c) =>\n      c.available_sizes.map((s) => `${c.instance_type}.${s}`)\n    ) || [];\n  const sizes = await api(providerInfo.id, region);\n  if (!sizes?.data?.instance_types) {\n    throw new Error(`No instance_types from backend`);\n  }\n\n  const standardSizes =\n    sizes?.data?.instance_types.find((i) => i.id === instanceType)?.sizes || [];\n\n  return standardSizes.map(\n    apiSizeToComponentSize.bind(\n      undefined,\n      (id) => !availableSizes.includes(`${instanceType}.${id}`)\n    )\n  );\n}\n\n//\n// export async function fetchProviderRegionSizesForPlanStandard (\n//   api: DefaultApi['getInstanceTypesByCloudProviderAndRegion'], providerInfo: CloudProviderInfoWithRegionsCapacity, region: string\n// )  {\n//   return fetchProviderRegionSizes(api, providerInfo, region, \"standard\");\n// };\n//\n// export const fetchProviderRegionSizesForPlanDeveloper = (\n//   api: DefaultApi['getInstanceTypesByCloudProviderAndRegion'], providerInfo: CloudProviderInfoWithRegionsCapacity, region: string\n//\n// ) => {\n//   const { data: standardSizes, isError } = await fetchProviderRegionSizes(\n//     provider,\n//     region,\n//     \"standard\"\n//   );\n//   const { data: developerSizes } = fetchProviderRegionSizes(\n//     provider,\n//     region,\n//     \"developer\"\n//   );\n//   return useQuery({\n//     queryKey: [],\n//     queryFn: () => {\n//       return {\n//         standard:\n//           standardSizes ||\n//           ([\n//             { id: \"1\", displayName: \"1\" },\n//             { id: \"2\", displayName: \"2\" },\n//           ] as StandardSizes),\n//         trial: developerSizes![0],\n//       };\n//     },\n//     enabled: (!!standardSizes || isError) && !!developerSizes,\n//   });\n// };\n\nfunction apiSizeToComponentSize(\n  isDisabled: (id: string) => boolean,\n  apiSize: SupportedKafkaSize\n): SizeWithLimits {\n  const s = apiSize as Required<SupportedKafkaSize>;\n  return {\n    id: s.id,\n    displayName: s.display_name,\n    quota: s.quota_consumed,\n    ingress: (s.ingress_throughput_per_sec.bytes || 0) / 1048576,\n    egress: (s.egress_throughput_per_sec.bytes || 0) / 1048576,\n    storage: Math.round((s.max_data_retention_size.bytes || 0) / 1073741824),\n    connections: s.total_max_connections,\n    connectionRate: s.max_connection_attempts_per_sec,\n    maxPartitions: s.max_partitions,\n    messageSize: (s.max_message_size.bytes || 0) / 1048576,\n    status: s.maturity_status === \"stable\" ? \"stable\" : \"preview\",\n    trialDurationHours: s.lifespan_seconds ? s.lifespan_seconds / 60 / 60 : 0,\n    isDisabled: isDisabled(s.id),\n  };\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { CloudProviderInfo } from \"ui\";\nimport type { CloudProvider, Plan } from \"ui-models/src/models/kafka\";\n\nexport type CloudProviderInfoWithRegionsCapacity = Omit<\n  CloudProviderInfo,\n  \"regions\"\n> & {\n  regions: Awaited<ReturnType<typeof fetchProviderRegions>>;\n};\n\nexport async function fetchProvidersWithRegions(\n  getCloudProviders: DefaultApi[\"getCloudProviders\"],\n  getCloudProviderRegions: DefaultApi[\"getCloudProviderRegions\"],\n  plan: Plan\n) {\n  const res = await getCloudProviders();\n  const allProviders = res?.data?.items || [];\n\n  const providers = (\n    await Promise.all(\n      allProviders\n        .filter((p) => p.enabled)\n        .map(async (provider) => {\n          const regions = await fetchProviderRegions(\n            getCloudProviderRegions,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            provider.id!,\n            plan\n          );\n          const providerInfo: CloudProviderInfoWithRegionsCapacity = {\n            id: provider.id as CloudProvider,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            displayName: provider.display_name!,\n            regions,\n          };\n          return regions.length > 0 ? providerInfo : null;\n        })\n    )\n  ).filter((p) => Boolean(p)) as CloudProviderInfoWithRegionsCapacity[];\n  if (providers.length === 0) {\n    throw new Error(\"No cloud providers with capacity found\");\n  }\n  const firstProvider = providers[0];\n  return { providers, defaultProvider: firstProvider?.id };\n}\n\nexport async function fetchProviderRegions(\n  getCloudProviderRegions: DefaultApi[\"getCloudProviderRegions\"],\n  provider: string,\n  instanceType: Plan\n) {\n  const res = await getCloudProviderRegions(provider);\n\n  if (!res?.data?.items) {\n    return Promise.reject(\"Invalid provider\");\n  }\n\n  const regionsForInstance = res.data.items.filter(\n    (region) =>\n      region.enabled &&\n      region.capacity.some((c) => c.instance_type === instanceType)\n  );\n\n  return regionsForInstance.map((r) => {\n    const max_capacity_reached = r.capacity?.some(\n      (c) => c.instance_type === instanceType && c.available_sizes?.length === 0\n    );\n\n    return {\n      id: r.id as CloudProvider,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      displayName: r.display_name!,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      isDisabled: max_capacity_reached,\n      capacity: r.capacity,\n    };\n  });\n}\n","import type { QuotaCost } from \"@rhoas/account-management-sdk\";\n\nexport const standardId = \"RHOSAK\" as const;\nexport const developerId = \"RHOSAKTrial\" as const;\nexport const resourceName = \"rhosak\" as const;\n\nexport function isStandardQuota(q: QuotaCost) {\n  return q.related_resources?.find((r) => r.billing_model === \"standard\");\n}\n\nexport function isMarketplaceQuota(q: QuotaCost) {\n  return q.related_resources?.find((r) => r.billing_model === \"marketplace\");\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport type {\n  MarketPlace,\n  MarketPlaceSubscriptions,\n} from \"ui-models/src/models/kafka\";\nimport {\n  developerId,\n  isMarketplaceQuota,\n  isStandardQuota,\n  resourceName,\n  standardId,\n} from \"../utilsAndConstants\";\n\nexport type StandardQuota = {\n  hasTrialQuota: boolean;\n  remainingPrepaidQuota: number | undefined;\n  remainingMarketplaceQuota: number | undefined;\n  marketplaceSubscriptions: MarketPlaceSubscriptions[];\n};\nexport const fetchStandardQuota = async (\n  api: AppServicesApi[\"apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet\"],\n  organizationId: string\n) => {\n  const quotaResponse = await api(\n    organizationId,\n    undefined,\n    true,\n    undefined,\n    true\n  );\n  if (quotaResponse.status !== 200) {\n    throw new Error(quotaResponse.statusText);\n  }\n  const standardQuotas = quotaResponse.data.items?.filter((q) =>\n    q.related_resources?.find(\n      (r) => r.resource_name === resourceName && r.product === standardId\n    )\n  );\n\n  const prepaidQuota = standardQuotas?.find(isStandardQuota);\n\n  const marketplaceQuotas = standardQuotas?.some(isMarketplaceQuota)\n    ? standardQuotas?.filter(isMarketplaceQuota)\n    : undefined;\n\n  const hasTrialQuota =\n    (prepaidQuota === undefined &&\n      marketplaceQuotas === undefined &&\n      quotaResponse.data.items?.some((q) =>\n        q.related_resources?.find(\n          (r) => r.resource_name === resourceName && r.product === developerId\n        )\n      )) ||\n    false;\n\n  const remainingPrepaidQuota = prepaidQuota\n    ? prepaidQuota.allowed - prepaidQuota.consumed\n    : undefined;\n  const remainingMarketplaceQuota = marketplaceQuotas\n    ? marketplaceQuotas.reduce((agg, q) => q.allowed - q.consumed + agg, 0)\n    : undefined;\n  const unaggregatedSubscriptions = marketplaceQuotas\n    ?.filter((q) => q.cloud_accounts !== undefined)\n    .flatMap((q) => q.cloud_accounts || []);\n  const subscriptionMarketplaces = Array.from(\n    new Set(\n      unaggregatedSubscriptions?.map((s) => s.cloud_provider_id as MarketPlace)\n    )\n  );\n  const marketplaceSubscriptions: MarketPlaceSubscriptions[] =\n    unaggregatedSubscriptions\n      ? subscriptionMarketplaces.map((marketplace) => ({\n          marketplace,\n          subscriptions: unaggregatedSubscriptions\n            .filter((s) => s.cloud_provider_id === marketplace)\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            .map((s) => s.cloud_account_id!),\n        }))\n      : [];\n\n  return {\n    hasTrialQuota,\n    remainingPrepaidQuota,\n    remainingMarketplaceQuota,\n    marketplaceSubscriptions,\n  };\n};\n","import type { SortDirection, TopicsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { topicTransformerFactory } from \"../transformers/topicTransformer\";\nimport type { KafkaTopicsSortableColumn } from \"../types\";\n\nexport type FetchTopicsParams = {\n  getTopics: TopicsApi[\"getTopics\"];\n  page?: number;\n  perPage?: number;\n  sort?: KafkaTopicsSortableColumn;\n  direction?: SortDirection;\n  filter?: string;\n  plan: Plan;\n};\n\nexport async function fetchTopics({\n  getTopics,\n  page,\n  perPage,\n  filter,\n  sort,\n  direction,\n  plan,\n}: FetchTopicsParams): Promise<{ topics: Topic[]; count: number }> {\n  const response = await getTopics(\n    undefined,\n    undefined,\n    perPage,\n    filter,\n    page,\n    direction,\n    sort\n  );\n  const topics = (response.data.items || []).map<Topic>(\n    topicTransformerFactory(plan)\n  );\n  const count = response.data.total;\n  return { count, topics };\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"ui\";\nimport type { SafeRangeQuery } from \"../types\";\n\nexport type FetchTopicsMetricsProps = {\n  getMetricsByRangeQuery: DefaultApi[\"getMetricsByRangeQuery\"];\n  id: string;\n  duration: number;\n  interval: number;\n  selectedTopic: string | undefined;\n};\n\nexport async function fetchTopicsMetrics({\n  getMetricsByRangeQuery,\n  id,\n  duration,\n  interval,\n  selectedTopic,\n}: FetchTopicsMetricsProps): Promise<\n  Omit<GetTopicsMetricsResponse, \"kafkaTopics\">\n> {\n  const response = await getMetricsByRangeQuery(id, duration, interval, [\n    \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\",\n    \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\",\n    \"kafka_topic:kafka_log_log_size:sum\",\n    \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\",\n  ]);\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(m.values && m.metric && m.metric.topic && m.metric.name)\n  ) as SafeRangeQuery[];\n\n  // Also filter for metrics about the selectedTopic, if specified\n  const filteredMetrics = safeMetrics.filter((m) =>\n    // filter for metrics for the selectedTopic, if needed\n    selectedTopic !== undefined ? m.metric?.topic === selectedTopic : true\n  );\n\n  // get the unique topics we have metrics for in the selected time range\n  const topics = Array.from(new Set(safeMetrics.map((m) => m.metric.topic)));\n\n  const bytesIncoming: TimeSeriesMetrics = {};\n  const bytesOutgoing: TimeSeriesMetrics = {};\n  const bytesPerPartition: PartitionBytesMetric = {};\n  const incomingMessageRate: TimeSeriesMetrics = {};\n\n  filteredMetrics.forEach((m) => {\n    const { __name__: name, topic } = m.metric;\n\n    function addAggregatedTotalBytesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    function addAggregatePartitionBytes() {\n      const partition = bytesPerPartition[topic] || {};\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (partition[timestamp] = value + (partition[timestamp] || 0))\n      );\n      bytesPerPartition[topic] = partition;\n    }\n\n    switch (name) {\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesIncoming);\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesOutgoing);\n        break;\n      case \"kafka_topic:kafka_log_log_size:sum\":\n        addAggregatePartitionBytes();\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\":\n        addAggregatedTotalBytesTo(incomingMessageRate);\n        break;\n    }\n  });\n\n  return {\n    metricsTopics: topics,\n    bytesOutgoing,\n    bytesIncoming,\n    bytesPerPartition,\n    incomingMessageRate,\n  };\n}\n","import type {\n  Principal,\n  PrincipalApi,\n} from \"@redhat-cloud-services/rbac-client\";\nimport type { UserAccount } from \"ui-models/src/models/user-account\";\n\nexport type FetchUserAccountsParams = {\n  getUserAccounts: PrincipalApi[\"listPrincipals\"];\n};\n\nexport async function fetchUserAccounts({\n  getUserAccounts,\n}: FetchUserAccountsParams): Promise<{\n  accounts: UserAccount[];\n  count: number;\n}> {\n  const response = await getUserAccounts(-1);\n  const accounts = response.data.data.map<UserAccount>((p) => {\n    const fullObject = p as Principal;\n    return {\n      username: fullObject.username,\n      displayName: `${fullObject.first_name || \"\"} ${\n        fullObject.last_name || \"\"\n      }`.trim(),\n      email: fullObject.email,\n      isOrgAdmin: fullObject.is_org_admin || false,\n    };\n  });\n  const count = accounts.length;\n  return { count, accounts };\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\n\nexport async function fetchSelfTermsReview(\n  api: AppServicesApi[\"apiAuthorizationsV1SelfTermsReviewPost\"]\n) {\n  const response = await api({\n    event_code: \"register\",\n    site_code: \"ocm\",\n  });\n  const { terms_required, terms_available, redirect_url } = response.data;\n  const areTermsAccepted =\n    terms_required === false && terms_available === false;\n  if (areTermsAccepted === false && redirect_url === undefined) {\n    throw new Error(\"Invalid Terms and Conditions \");\n  }\n  return {\n    areTermsAccepted,\n    termsUrl: (createHref: string, cancelHref: string) => {\n      if (redirect_url === undefined) {\n        throw new Error(\"Invalid Terms and Conditions \");\n      }\n      const url = new URL(redirect_url);\n      url.searchParams.set(\"redirect\", createHref);\n      url.searchParams.set(\"cancelRedirect\", cancelHref);\n      return url.href;\n    },\n  };\n}\n","import { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { ReactQueryDevtools } from \"@tanstack/react-query-devtools\";\nimport { isReactQueryDevToolsEanbled } from \"local-storage-helpers\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext, lazy, Suspense, useContext } from \"react\";\n\nconst ReactQueryDevtoolsProduction = lazy(() =>\n  import(\"@tanstack/react-query-devtools/build/lib/index.prod.js\").then(\n    (d) => ({\n      default: d.ReactQueryDevtools,\n    })\n  )\n);\n\ntype ApiContextProps = {\n  accessToken: () => Promise<string>;\n  basePath: string;\n  refetchInterval: number;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst ApiContext = createContext<ApiContextProps>(null!);\n\nconst queryClient = new QueryClient();\n\nexport const ApiProvider: FunctionComponent<ApiContextProps> = ({\n  children,\n  ...context\n}) => {\n  const showDevTools = isReactQueryDevToolsEanbled();\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ApiContext.Provider value={context}>\n        {children}\n        <ReactQueryDevtools initialIsOpen />\n        {showDevTools && (\n          <Suspense fallback={null}>\n            <ReactQueryDevtoolsProduction />\n          </Suspense>\n        )}\n      </ApiContext.Provider>\n    </QueryClientProvider>\n  );\n};\n\nexport function useApiConfiguration() {\n  return useContext(ApiContext);\n}\n\nexport { useQueryErrorResetBoundary } from \"@tanstack/react-query\";\n","import type {\n  FetchConsumerGroupParams,\n  FetchConsumerGroupsParams,\n  FetchKafkaMetricsProps,\n  FetchKafkasParams,\n  FetchMessagesParams,\n  FetchPermissionsParams,\n  FetchServiceAccountsParams,\n  FetchTopicParams,\n  FetchTopicsMetricsProps,\n  FetchTopicsParams,\n  FetchUserAccountsParams,\n} from \"./fetchers\";\n\nexport const masQueries = {\n  _root: () => ({ scope: \"mas\" } as const),\n  organization: () =>\n    [{ ...masQueries._root(), entity: \"organization\" }] as const,\n  selfTermsReview: () =>\n    [{ ...masQueries._root(), entity: \"selfTermsReview\" }] as const,\n  userAccounts: (params: Omit<FetchUserAccountsParams, \"getUserAccounts\">) =>\n    [{ ...masQueries._root(), entity: \"userAccounts\" }, params] as const,\n  user: () => [{ ...masQueries._root(), entity: \"user\" }] as const,\n  tokenEndPointUrl: () =>\n    [{ ...masQueries._root(), entity: \"tokenEndPointUrl\" }] as const,\n\n  quota: {\n    _root: () => ({ ...masQueries._root(), entity: \"quota\" } as const),\n    available: (params: { organization?: string }) =>\n      [\n        { ...masQueries.quota._root(), subentity: \"available\", ...params },\n      ] as const,\n    developerAvailability: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"developerAvailability\" },\n      ] as const,\n    standardAvailability: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"standardAvailability\" },\n      ] as const,\n  },\n} as const;\n\nexport const kafkaQueries = {\n  _root: () => ({ scope: \"kafka\" } as const),\n  list: (params: Omit<FetchKafkasParams, \"dataMapper\" | \"getKafkas\">) =>\n    [\n      {\n        ...kafkaQueries._root(),\n        entity: \"list\",\n      },\n      params,\n    ] as const,\n  instance: {\n    _root: ({ id, adminUrl }: { id?: string; adminUrl?: string }) =>\n      ({ ...kafkaQueries._root(), entity: \"instance\", id, adminUrl } as const),\n    details: (params: { id?: string }) =>\n      [\n        { ...kafkaQueries.instance._root(params), subentity: \"details\" },\n      ] as const,\n    topics: ({\n      id,\n      adminUrl,\n      ...params\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchTopicsParams,\n      \"getTopics\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topics\",\n        },\n        params,\n      ] as const,\n    topic: ({\n      id,\n      adminUrl,\n      topicName,\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchTopicParams,\n      \"getTopic\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topic\",\n        },\n        { topicName },\n      ] as const,\n    topicMessages: ({\n      id,\n      adminUrl,\n      topicName,\n      ...params\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchMessagesParams,\n      \"consumeRecords\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topicMessages\",\n        },\n        { topicName, ...params },\n      ] as const,\n    consumerGroups: (\n      params: { id?: string; adminUrl?: string } & Omit<\n        FetchConsumerGroupsParams,\n        \"getConsumerGroups\"\n      >\n    ) =>\n      [\n        {\n          ...kafkaQueries.instance._root(params),\n          subentity: \"consumer-groups\",\n        },\n        params,\n      ] as const,\n    consumerGroup: ({\n      id,\n      adminUrl,\n      consumerGroupId,\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchConsumerGroupParams,\n      \"getConsumerGroupById\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"consumerGroup\",\n        },\n        { consumerGroupId },\n      ] as const,\n    serviceAccounts: (\n      params: Omit<FetchServiceAccountsParams, \"getServiceAccounts\">\n    ) =>\n      [{ ...masQueries._root(), entity: \"serviceAccounts\" }, params] as const,\n    permissions: (\n      params: { id?: string; adminUrl?: string } & Omit<\n        FetchPermissionsParams,\n        \"getAcls\"\n      >\n    ) =>\n      [\n        {\n          ...kafkaQueries.instance._root(params),\n          subentity: \"acls\",\n        },\n        params,\n      ] as const,\n    metrics: {\n      _root: ({ id }: { id: string }) =>\n        ({\n          ...kafkaQueries.instance._root({ id }),\n          subentity: \"metrics\",\n          id,\n        } as const),\n      kpi: (params: { id: string }) =>\n        [{ ...kafkaQueries.instance._root(params), type: \"kpi\" }] as const,\n      instance: ({\n        id,\n        ...params\n      }: Omit<FetchKafkaMetricsProps, \"getMetricsByRangeQuery\">) =>\n        [\n          {\n            ...kafkaQueries.instance._root({ id }),\n            type: \"instance\",\n          },\n          params,\n        ] as const,\n      topic: ({\n        id,\n        ...params\n      }: Omit<FetchTopicsMetricsProps, \"getMetricsByRangeQuery\">) =>\n        [\n          {\n            ...kafkaQueries.instance._root({ id }),\n            type: \"topic\",\n          },\n          params,\n        ] as const,\n    },\n  },\n} as const;\n\nexport const providerQueries = {\n  _root: () => ({ scope: \"providers\" }),\n  list: (params: { plan?: string }) =>\n    [{ ...providerQueries._root(), entity: \"list\", ...params }] as const,\n  limits: {\n    _root: ({ provider }: { provider?: string }) =>\n      ({\n        ...providerQueries._root(),\n        entity: \"limits\",\n        provider,\n      } as const),\n    standard: ({ provider, region }: { provider?: string; region: string }) => [\n      {\n        ...providerQueries.limits._root({ provider }),\n        plan: \"standard\",\n        region,\n      },\n    ],\n    developer: ({\n      provider,\n      region,\n    }: {\n      provider?: string;\n      region: string;\n    }) => [\n      {\n        ...providerQueries.limits._root({ provider }),\n        plan: \"developer\",\n        region,\n      },\n    ],\n  },\n} as const;\n","import { PrincipalApi } from \"@redhat-cloud-services/rbac-client\";\nimport { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport {\n  Configuration,\n  DefaultApi,\n  SecurityApi,\n} from \"@rhoas/kafka-management-sdk\";\nimport {\n  GroupsApi,\n  RecordsApi,\n  TopicsApi,\n  AclsApi,\n} from \"@rhoas/kafka-instance-sdk\";\nimport { useCallback } from \"react\";\nimport { useApiConfiguration } from \"./ApiProvider\";\n\nexport const useApi = () => {\n  const { basePath, accessToken } = useApiConfiguration();\n\n  const kafkasFleet = useCallback(\n    () =>\n      new DefaultApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const userAccounts = useCallback(async () => {\n    const token = await accessToken();\n    return new PrincipalApi({\n      accessToken: token,\n      basePath: `/api/rbac/v1`,\n    });\n  }, [accessToken]);\n\n  const serviceAccount = useCallback(\n    () =>\n      new SecurityApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const account = useCallback(\n    () =>\n      new AppServicesApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const topics = useCallback(\n    (adminUrl: string) =>\n      new TopicsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const consumerGroups = useCallback(\n    (adminUrl: string) =>\n      new GroupsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const acls = useCallback(\n    (adminUrl: string) =>\n      new AclsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const records = useCallback(\n    (adminUrl: string) =>\n      new RecordsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  return {\n    kafkasFleet,\n    account,\n    topics,\n    consumerGroups,\n    records,\n    userAccounts,\n    acls,\n    serviceAccount,\n  };\n};\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchConsumerGroupsParams } from \"../fetchers\";\nimport { fetchConsumerGroups } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useConsumerGroups(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchConsumerGroupsParams,\n    \"getConsumerGroups\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { consumerGroups } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.consumerGroups(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = consumerGroups(params.adminUrl);\n\n      return fetchConsumerGroups({\n        getConsumerGroups: (...args) => api.getConsumerGroups(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl) && Boolean(params.id),\n    refetchInterval,\n    suspense,\n  });\n}\n","import type {\n  ConsumerGroupState,\n  GroupsApi,\n  SortDirection,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { ConsumerGroup } from \"ui-models/src/models/consumer-group\";\nimport type { KafkaConsumerGroupSortableColumn } from \"../types\";\nimport { stateMapping } from \"../transformers/ConsumerGroupTransformer\";\n\nexport type FetchConsumerGroupsParams = {\n  getConsumerGroups: GroupsApi[\"getConsumerGroups\"];\n  page?: number;\n  perPage?: number;\n  sort?: KafkaConsumerGroupSortableColumn;\n  direction?: SortDirection;\n  topic?: string;\n  groupId?: string;\n};\n\nexport async function fetchConsumerGroups({\n  getConsumerGroups,\n  page,\n  perPage,\n  topic,\n  groupId,\n  sort,\n  direction,\n}: FetchConsumerGroupsParams): Promise<{\n  groups: ConsumerGroup[];\n  count: number;\n}> {\n  const response = await getConsumerGroups(\n    undefined,\n    undefined,\n    perPage,\n    page,\n    topic,\n    groupId,\n    direction,\n    sort\n  );\n  const groups = (response.data.items || []).map<ConsumerGroup>((t) => ({\n    groupId: t.groupId || \"\",\n    state: stateMapping[t.state as ConsumerGroupState],\n    consumers: t.consumers,\n    activeConsumers: t.metrics?.activeConsumers,\n    laggingPartitions: t.metrics?.laggingPartitions,\n    unassignedPartitions: t.metrics?.unassignedPartitions,\n  }));\n  const count = response.data.total;\n\n  return { count, groups };\n}\n","import type { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  CloudProvider,\n  Kafka,\n  MarketPlaceSubscriptions,\n  Plan,\n  Status,\n} from \"ui-models/src/models/kafka\";\nimport type { DateIsoString } from \"ui-models/src/types\";\n\nimport type { SizeWithLimits } from \"../fetchers\";\n\nexport type KafkaInstanceEnhanced = Required<Kafka> & {\n  request: KafkaRequest;\n};\n\nexport function kafkaRequestToKafkaInstanceEnhanched(\n  instance: KafkaRequest,\n  marketplaceSubscriptions: MarketPlaceSubscriptions[],\n  developerPlanInstanceLimits: SizeWithLimits[],\n  standardPlanInstanceLimits: SizeWithLimits[]\n): KafkaInstanceEnhanced {\n  const enhancedInstance: KafkaInstanceEnhanced = {\n    billing: undefined,\n    connectionRate: 0,\n    connections: 0,\n    createdAt: (instance.created_at ||\n      new Date().toISOString()) as DateIsoString,\n    egress: 0,\n    expiryDate: instance.expires_at as DateIsoString | undefined,\n    id: instance.id,\n    ingress: 0,\n    maxPartitions: 0,\n    messageSize: { type: \"bytes\", value: BigInt(0) },\n    name: instance.name || \"\",\n    owner: instance.owner || \"\",\n    plan: instance.instance_type as Plan,\n    provider: instance.cloud_provider as CloudProvider,\n    region: instance.region || \"\",\n    size: \"1\",\n    status: apiStatusToUIStatus(instance.status || \"\"),\n    storage: { type: \"bytes\", value: BigInt(0) },\n    updatedAt: (instance.updated_at ||\n      new Date().toISOString()) as DateIsoString,\n    request: instance,\n    version: instance.version || \"\",\n    bootstrapUrl: instance.bootstrap_server_host,\n    adminUrl: instance.admin_api_server_url,\n    az: instance.multi_az == true ? \"multi\" : \"single\",\n  };\n\n  // update the billing info\n  try {\n    const marketplaceForBilling = marketplaceSubscriptions.find((ms) =>\n      ms.subscriptions.find((s) => s === instance.billing_cloud_account_id)\n    )?.marketplace;\n\n    const billing: KafkaInstanceEnhanced[\"billing\"] =\n      instance.billing_model === \"standard\"\n        ? \"prepaid\"\n        : marketplaceForBilling && instance.billing_cloud_account_id\n        ? {\n            marketplace: marketplaceForBilling,\n            subscription: instance.billing_cloud_account_id,\n          }\n        : undefined;\n    enhancedInstance.billing = billing;\n  } catch (e) {\n    console.warn(\n      \"kafkaRequestToKafkaInstance\",\n      `couldn't retrieve the billing info for`,\n      instance\n    );\n  }\n\n  // update the limits\n  try {\n    const limits =\n      instance.instance_type === \"developer\"\n        ? developerPlanInstanceLimits\n        : standardPlanInstanceLimits;\n    const thisInstanceLimits = limits.find((l) => l.id === instance.size_id);\n    if (thisInstanceLimits) {\n      enhancedInstance.size = thisInstanceLimits.displayName;\n      enhancedInstance.ingress = thisInstanceLimits.ingress;\n      enhancedInstance.egress = thisInstanceLimits.egress;\n      enhancedInstance.storage = {\n        type: \"bytes\",\n        value: BigInt(instance.max_data_retention_size?.bytes || 0),\n      };\n      enhancedInstance.connections = thisInstanceLimits.connections;\n      enhancedInstance.connectionRate = thisInstanceLimits.connectionRate;\n      enhancedInstance.maxPartitions = thisInstanceLimits.maxPartitions;\n      enhancedInstance.messageSize = {\n        type: \"bytes\",\n        value: BigInt(thisInstanceLimits.messageSize),\n      };\n    }\n  } catch (e) {\n    console.warn(\n      \"kafkaRequestToKafkaInstance\",\n      `couldn't retrieve the limits info for`,\n      instance\n    );\n  }\n\n  return enhancedInstance;\n}\n\nfunction apiStatusToUIStatus(status: string): Status {\n  const mapping: { [key: string]: Status } = {\n    accepted: \"accepted\",\n    preparing: \"preparing\",\n    provisioning: \"provisioning\",\n    ready: \"ready\",\n    failed: \"degraded\",\n    deprovision: \"deprovision\",\n    deleting: \"deleting\",\n  };\n  return mapping[status] || \"degraded\";\n}\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport type { CreateKafkaInstanceServices } from \"ui\";\nimport { useApi } from \"../useApi\";\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n};\n\n/**\n * Create Kafka instance hook that creates kafka instance\n */\nexport const useCreateInstance =\n  (): CreateKafkaInstanceServices[\"onCreate\"] => {\n    const { kafkasFleet } = useApi();\n\n    return (data, onSuccess, onError) => {\n      const runner = async () => {\n        const apisService = kafkasFleet();\n\n        try {\n          const kafkaRequest = {} as KafkaRequestPayload;\n          kafkaRequest.name = data.name;\n          kafkaRequest.cloud_provider = data.provider;\n          kafkaRequest.region = data.region;\n          kafkaRequest.plan = data.plan + \".\" + data.sizeId;\n          kafkaRequest.billing_model =\n            data.billing === \"prepaid\"\n              ? \"standard\"\n              : data.billing !== undefined\n              ? \"marketplace\"\n              : null;\n          kafkaRequest.billing_cloud_account_id =\n            data.billing && data.billing !== \"prepaid\"\n              ? data.billing.subscription\n              : null;\n          await apisService.createKafka(true, kafkaRequest);\n          onSuccess();\n        } catch (error) {\n          if (isServiceApiError(error)) {\n            const { code } = error?.response?.data || {};\n\n            switch (data.plan) {\n              case \"developer\":\n                switch (code) {\n                  case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                    onError(\"name-taken\");\n                    break;\n\n                  // regardless of the error, let's not give too many details to trial users\n                  default:\n                    onError(\"developer-unavailable\");\n                    break;\n                }\n                break;\n\n              case \"standard\":\n                switch (code) {\n                  case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                    onError(\"name-taken\");\n                    break;\n\n                  case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                    onError(\"region-unavailable\");\n                    break;\n\n                  case ErrorCodes.INSUFFICIENT_QUOTA:\n                    onError(\"insufficient-quota\");\n                    break;\n\n                  default:\n                    console.error(\n                      \"useAvailableProvidersAndDefault\",\n                      \"createKafka unknown error\",\n                      error\n                    );\n                    onError(\"unknown\");\n                }\n                break;\n            }\n          } else {\n            console.error(\n              \"useAvailableProvidersAndDefault\",\n              \"createKafka unexpected error\",\n              error\n            );\n          }\n        }\n      };\n      void runner();\n    };\n  };\n","import type { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport {\n  useProviderRegionSizesFetchQuery,\n  useProvidersWithRegionsFetchQuery,\n  useStandardQuotaFetchQuery,\n} from \"../fetchQueries\";\nimport { kafkaRequestToKafkaInstanceEnhanched } from \"../transformers/kafkaRequestToKafkaInstanceEnhanched\";\n\nexport function useKafkaInstanceTransformer() {\n  const getStandardQuotaQuery = useStandardQuotaFetchQuery();\n  const getProvidersInfo = useProvidersWithRegionsFetchQuery();\n  const getProviderRegionsSizes = useProviderRegionSizesFetchQuery();\n\n  return async function kafkaInstanceTransformer(instance: KafkaRequest) {\n    if (!instance.region) {\n      throw new Error(\n        `Invalid KafkaRequest, empty region: ${JSON.stringify(instance)}`\n      );\n    }\n    const standardQuota = await getStandardQuotaQuery();\n\n    const providersInfo = await getProvidersInfo(\n      instance.billing_model !== \"standard\" ? \"developer\" : \"standard\"\n    );\n    const providerInfo = providersInfo.providers.find(\n      (p) => p.id === instance.cloud_provider\n    );\n    if (!providerInfo) {\n      return Promise.reject(\"Invalid cloud provider\");\n    }\n    const standardPlanLimitsQuery = getProviderRegionsSizes(\n      providerInfo,\n      instance.region,\n      \"standard\"\n    );\n    const developerPlanLimitsQuery = getProviderRegionsSizes(\n      providerInfo,\n      instance.region,\n      \"developer\"\n    );\n    const [standardPlanLimits, developerPlanLimits] = await Promise.all([\n      standardPlanLimitsQuery,\n      developerPlanLimitsQuery,\n    ]);\n    return kafkaRequestToKafkaInstanceEnhanched(\n      instance,\n      standardQuota.marketplaceSubscriptions,\n      developerPlanLimits,\n      standardPlanLimits\n    );\n  };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport { useKafkaInstanceTransformer } from \"./useKafkaInstanceTransformer\";\n\nexport function useKafka(id: string | undefined, suspense = false) {\n  const { refetchInterval } = useApiConfiguration();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  const api = kafkasFleet();\n\n  return useQuery({\n    enabled: Boolean(id),\n    queryKey: kafkaQueries.instance.details({ id }),\n    queryFn: async () => {\n      if (!id) {\n        return Promise.reject(\"Invalid Kafka instance id\");\n      }\n      const instance = await api.getKafkaById(id);\n      return dataMapper(instance.data);\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchKafkasParams } from \"../fetchers\";\nimport { fetchKafkas } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport { useKafkaInstanceTransformer } from \"./useKafkaInstanceTransformer\";\n\nexport function useKafkas(\n  params: Omit<FetchKafkasParams, \"dataMapper\" | \"getKafkas\">\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const queryClient = useQueryClient();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  const api = kafkasFleet();\n\n  return useQuery({\n    queryKey: kafkaQueries.list(params),\n    queryFn: async () => {\n      const res = await fetchKafkas({\n        getKafkas: (...args) => api.getKafkas(...args),\n        dataMapper,\n        ...params,\n      });\n      res.instances.forEach((i) =>\n        queryClient.setQueryData(kafkaQueries.instance.details({ id: i.id }), i)\n      );\n      return res;\n    },\n    refetchInterval,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchTopicParams } from \"../fetchers\";\nimport { fetchTopic } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopic(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchTopicParams,\n    \"getTopic\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { topics } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.topic(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = topics(params.adminUrl);\n\n      return fetchTopic({\n        getTopic: (...args) => api.getTopic(...args),\n        ...params,\n      });\n    },\n    enabled:\n      Boolean(params.adminUrl) &&\n      Boolean(params.id) &&\n      Boolean(params.topicName),\n    refetchInterval,\n    suspense,\n  });\n}\n","import type { TopicsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { topicTransformerFactory } from \"../transformers/topicTransformer\";\n\nexport type FetchTopicParams = {\n  getTopic: TopicsApi[\"getTopic\"];\n  topicName: string;\n  plan: Plan;\n};\n\nexport async function fetchTopic({\n  getTopic,\n  topicName,\n  plan,\n}: FetchTopicParams): Promise<Topic> {\n  const response = await getTopic(topicName);\n  return topicTransformerFactory(plan)(response.data);\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchTopicsParams } from \"../fetchers\";\nimport { fetchTopics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopics(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchTopicsParams,\n    \"getTopics\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { topics } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.topics(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = topics(params.adminUrl);\n\n      return fetchTopics({\n        getTopics: (...args) => api.getTopics(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl) && Boolean(params.id),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchUserAccountsParams } from \"../fetchers\";\nimport { fetchUserAccounts } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useUserAccounts(\n  params: Omit<FetchUserAccountsParams, \"getUserAccounts\">,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { userAccounts } = useApi();\n\n  return useQuery({\n    queryKey: masQueries.userAccounts(params),\n    queryFn: async () => {\n      const api = await userAccounts();\n\n      return fetchUserAccounts({\n        getUserAccounts: (...args) => api.listPrincipals(...args),\n        ...params,\n      });\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { FetchConsumerGroupParams } from \"../fetchers\";\nimport { fetchConsumerGroup } from \"../fetchers\";\n\nexport function useConsumerGroup(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchConsumerGroupParams,\n    \"getConsumerGroupById\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { consumerGroups } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.consumerGroup(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      if (!params.consumerGroupId) {\n        return Promise.reject(\"Invalid consumerGroupId\");\n      }\n      const api = consumerGroups(params.adminUrl);\n\n      return fetchConsumerGroup({\n        getConsumerGroupById: (...args) => api.getConsumerGroupById(...args),\n        ...params,\n      });\n    },\n    enabled:\n      Boolean(params.adminUrl) &&\n      Boolean(params.id) &&\n      Boolean(params.consumerGroupId),\n    refetchInterval,\n    suspense,\n  });\n}\n","import type { GroupsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { ConsumerGroup } from \"ui-models/src/models/consumer-group\";\nimport { consumerGroupTransformer } from \"../transformers/ConsumerGroupTransformer\";\n\nexport type FetchConsumerGroupParams = {\n  getConsumerGroupById: GroupsApi[\"getConsumerGroupById\"];\n  consumerGroupId: string;\n};\n\nexport async function fetchConsumerGroup({\n  getConsumerGroupById,\n  consumerGroupId,\n}: FetchConsumerGroupParams): Promise<ConsumerGroup> {\n  const response = await getConsumerGroupById(consumerGroupId);\n  return consumerGroupTransformer(response.data);\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchPermissionsParams } from \"../fetchers\";\nimport { fetchPermissions } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useAcls(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchPermissionsParams,\n    \"getAcls\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { acls } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.permissions(params),\n    queryFn: () => {\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      const api = acls(params.adminUrl);\n\n      return fetchPermissions({\n        getAcls: (...args) => api.getAcls(...args),\n      });\n    },\n    enabled: Boolean(params.adminUrl),\n    refetchInterval,\n    suspense,\n  });\n}\n","import type { AclsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Permissions } from \"../../../ui\";\n\nexport type FetchPermissionsParams = {\n  getAcls: AclsApi[\"getAcls\"];\n  page?: number;\n  perPage?: number;\n};\n\nexport async function fetchPermissions({\n  getAcls,\n  page,\n  perPage,\n}: FetchPermissionsParams): Promise<{\n  groups: Permissions[];\n  count: number;\n}> {\n  const response = await getAcls(\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    page,\n    perPage\n  );\n  const groups = (response.data.items || []).map<Permissions>((t) => ({\n    account: t.principal || \"\",\n    permission: { permission: t.permission, operation: t.operation },\n    resource: {\n      resourceName: t.resourceName,\n      patternType: t.patternType,\n      resourceType: t.resourceType,\n    },\n  }));\n  const count = response.data.total;\n  return { count, groups };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchServiceAccountsParams } from \"../fetchers\";\nimport { fetchServiceAccounts } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useServiceAccounts(\n  params: Omit<FetchServiceAccountsParams, \"getServiceAccounts\">,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { serviceAccount } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.serviceAccounts(params),\n    queryFn: () => {\n      const api = serviceAccount();\n\n      return fetchServiceAccounts({\n        getServiceAccounts: (...args) => api.getServiceAccounts(...args),\n        ...params,\n      });\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import type { SecurityApi } from \"@rhoas/kafka-management-sdk\";\nimport type { Account } from \"ui\";\nimport { PrincipalType } from \"ui\";\n\nexport type FetchServiceAccountsParams = {\n  getServiceAccounts: SecurityApi[\"getServiceAccounts\"];\n};\n\nexport async function fetchServiceAccounts({\n  getServiceAccounts,\n}: FetchServiceAccountsParams): Promise<{\n  serviceAccounts: Account[];\n}> {\n  const response = await getServiceAccounts();\n  const data = response.data.items;\n  const serviceAccounts: Account[] = data.map((t) => {\n    return {\n      principalType: PrincipalType.ServiceAccount,\n      id: t.id || \"\",\n      displayName: t.name || \"\",\n    };\n  });\n  return { serviceAccounts };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { masQueries } from \"../queryKeys\";\nimport type { KafkaInstanceEnhanced } from \"consoledot-api/src/transformers/kafkaRequestToKafkaInstanceEnhanched\";\nimport { ReadyStatuses, SuspendedStatuses } from \"ui-models/src/models/kafka\";\nimport type { Status } from \"ui-models/src/models/kafka\";\n\nexport function useUser({getUser, suspense}:{getUser:() => Promise<{username: string | undefined, isOrgAdmin:boolean | undefined}>, suspense: boolean}) {\n\n  return useQuery({\n    queryKey: masQueries.user(),\n    queryFn: async () => {\n      const { username, isOrgAdmin } = await getUser();\n\n      if (username === undefined) {\n        return Promise.reject(\"Invalid username\");\n      }\n\n      if (isOrgAdmin === undefined) {\n        return Promise.reject(\"Invalid username\");\n      }\n\n      const canOpenConnection = (instance: KafkaInstanceEnhanced): boolean => {\n        return instance ? ReadyStatuses.includes(instance.status) : false;\n      };\n\n      const isUserOwnerOrAdmin = (owner: string) => {\n        return owner === username || isOrgAdmin;\n      };\n\n      const canChangeOwner = (owner: string, status: Status) => {\n        return (\n          owner === username ||\n          (isOrgAdmin && !SuspendedStatuses.includes(status))\n        );\n      };\n\n      return {\n        username,\n        isOrgAdmin,\n        canOpenConnection,\n        isUserOwnerOrAdmin,\n        canChangeOwner,\n      };\n    },\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { masQueries } from \"../queryKeys\";\n\nexport const useSSOProvider = () => {\n  const { basePath } = useApiConfiguration();\n\n  return useQuery({\n    queryKey: masQueries.tokenEndPointUrl(),\n    queryFn: async () => {\n      const response = await fetch(\n        `${basePath}/api/kafkas_mgmt/v1/sso_providers`\n      );\n      const providers = (await response.json()) as { token_url?: string };\n      const { token_url } = providers;\n      if (token_url === undefined || token_url === \"\") {\n        return Promise.reject(\"Invalid SSO token URL\");\n      }\n      return token_url;\n    },\n  });\n};\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { fetchSelfTermsReview } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useSelfTermsReview(suspense = false) {\n  const { refetchInterval } = useApiConfiguration();\n  const { account } = useApi();\n\n  return useQuery({\n    queryKey: masQueries.selfTermsReview(),\n    queryFn: async () => {\n      const api = account();\n\n      return fetchSelfTermsReview((...args) =>\n        api.apiAuthorizationsV1SelfTermsReviewPost(...args)\n      );\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchKafkas } from \"../fetchers\";\nimport { useKafkaInstanceTransformer } from \"../queries\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport const useDeveloperInstanceAvailabilityFetchQuery = () => {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n  const dataMapper = useKafkaInstanceTransformer();\n\n  return (getUsername: () => Promise<string>) => {\n    const api = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.developerAvailability(),\n      queryFn: async () => {\n        const username = await getUsername();\n        if (!username) {\n          return Promise.reject(new Error(\"Invalid username\"));\n        }\n\n        const { instances } = await queryClient.fetchQuery({\n          queryKey: kafkaQueries.list({\n            direction: \"desc\",\n            sort: \"createdAt\",\n            name: [],\n            status: [],\n            owner: [username],\n            perPage: 1000,\n            page: 1,\n          }),\n          queryFn: () =>\n            fetchKafkas({\n              getKafkas: (...args) => api.getKafkas(...args),\n              dataMapper,\n              direction: \"desc\",\n              sort: \"createdAt\",\n              name: [],\n              status: [],\n              owner: [username],\n              perPage: 1000,\n              page: 1,\n            }),\n          staleTime: Infinity,\n        });\n\n        return instances.some((k) => k?.plan !== \"standard\") !== true;\n      },\n    });\n  };\n};\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { useKafkaInstanceTransformer } from \"../queries\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaFetchQuery() {\n  const queryClient = useQueryClient();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  return async (id: string) => {\n    const api = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.details({ id }),\n      queryFn: async () => {\n        const instance = await api.getKafkaById(id);\n        return dataMapper(instance.data);\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchKafkaKpis } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaKpisFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (id: string) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.kpi({ id }),\n      queryFn: async () => {\n        return fetchKafkaKpis(\n          (...args) => api.getMetricsByInstantQuery(...args),\n          id\n        );\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchKafkaMetricsProps } from \"../fetchers\";\nimport { fetchKafkaMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (params: Omit<FetchKafkaMetricsProps, \"getMetricsByRangeQuery\">) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.instance(params),\n      queryFn: async () => {\n        return fetchKafkaMetrics({\n          getMetricsByRangeQuery: (...args) =>\n            api.getMetricsByRangeQuery(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchTopicsMetricsProps } from \"../fetchers\";\nimport { fetchTopicsMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopicsMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (params: Omit<FetchTopicsMetricsProps, \"getMetricsByRangeQuery\">) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.topic(params),\n      queryFn: async () => {\n        return fetchTopicsMetrics({\n          getMetricsByRangeQuery: (...args) =>\n            api.getMetricsByRangeQuery(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchTopicsParams } from \"../fetchers\";\nimport { fetchTopics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopicsFetchQuery() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return (\n    params: Omit<FetchTopicsParams, \"getTopics\"> & {\n      id: string;\n      adminUrl: string;\n    }\n  ) => {\n    const api = topics(params.adminUrl);\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.topics(params),\n      queryFn: async () => {\n        return fetchTopics({\n          getTopics: (...args) => api.getTopics(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchMessagesParams } from \"../fetchers\";\nimport { fetchMessages } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useMessagesFetchQuery() {\n  const { records } = useApi();\n  const queryClient = useQueryClient();\n\n  return (\n    params: { id: string; adminUrl: string } & Omit<\n      FetchMessagesParams,\n      \"consumeRecords\"\n    >\n  ) => {\n    const api = records(params.adminUrl);\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.topicMessages(params),\n      queryFn: () => {\n        if (!params.id) {\n          return Promise.reject(\"Invalid id\");\n        }\n        if (!params.adminUrl) {\n          return Promise.reject(\"Invalid adminUrl\");\n        }\n\n        return fetchMessages({\n          consumeRecords: (...args) => api.consumeRecords(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import type { Record, RecordsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport type { DateIsoString } from \"../../../ui-models/src/types\";\n\nexport type FetchMessagesParams = {\n  consumeRecords: RecordsApi[\"consumeRecords\"];\n  topicName: string;\n  partition?: number;\n  offset?: number;\n  timestamp?: DateIsoString;\n  limit: number;\n};\n\nexport async function fetchMessages({\n  topicName,\n  consumeRecords,\n  partition,\n  offset,\n  timestamp,\n  limit,\n}: FetchMessagesParams): Promise<Message[]> {\n  const response = await consumeRecords(\n    topicName,\n    undefined,\n    limit,\n    undefined,\n    offset,\n    partition,\n    timestamp\n  );\n  return response.data.items.map((m: Record) => ({\n    partition: m.partition,\n    offset: m.offset,\n    timestamp: m.timestamp as DateIsoString,\n    key: m.key,\n    value: m.value,\n    headers: m.headers || {},\n  }));\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfoWithRegionsCapacity } from \"../fetchers\";\nimport { fetchProviderRegionSizes } from \"../fetchers\";\nimport { providerQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useProviderRegionSizesFetchQuery() {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n\n  return (\n    provider: CloudProviderInfoWithRegionsCapacity,\n    region: string,\n    plan: Plan\n  ) => {\n    const kms = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: providerQueries.limits[\n        plan === \"standard\" ? \"standard\" : \"developer\"\n      ]({ provider: provider.id, region }),\n      queryFn: () =>\n        fetchProviderRegionSizes(\n          (...args) => kms.getInstanceTypesByCloudProviderAndRegion(...args),\n          provider,\n          region,\n          plan\n        ),\n      staleTime: Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport { fetchProvidersWithRegions } from \"../fetchers\";\nimport { providerQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useProvidersWithRegionsFetchQuery() {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n\n  return (plan: Plan) => {\n    const kms = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: providerQueries.list({ plan }),\n      queryFn: () =>\n        fetchProvidersWithRegions(\n          (...args) => kms.getCloudProviders(...args),\n          (...args) => kms.getCloudProviderRegions(...args),\n          plan\n        ),\n      staleTime: Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchOrganization, fetchStandardQuota } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useStandardQuotaFetchQuery(skipCache = false) {\n  const queryClient = useQueryClient();\n  const { account } = useApi();\n  const ams = account();\n\n  return async () => {\n    const organization = await queryClient.fetchQuery({\n      queryKey: masQueries.organization(),\n      queryFn: () =>\n        fetchOrganization((...args) =>\n          ams.apiAccountsMgmtV1CurrentAccountGet(...args)\n        ),\n      staleTime: Infinity,\n    });\n    if (!organization) {\n      return Promise.reject(\"Missing organization id\");\n    }\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.available({ organization }),\n      queryFn: () =>\n        fetchStandardQuota(\n          (...args) =>\n            ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(...args),\n          organization\n        ),\n      staleTime: skipCache ? undefined : Infinity,\n    });\n  };\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\n\nexport async function fetchOrganization(\n  api: AppServicesApi[\"apiAccountsMgmtV1CurrentAccountGet\"]\n) {\n  const account = await api();\n  const orgId = account?.data?.organization?.id;\n  return orgId;\n}\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type { CreateKafkaFormData, CreateKafkaInstanceError } from \"ui\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useCreateKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      instance: CreateKafkaFormData;\n      onSuccess: () => void;\n      onError: (error: CreateKafkaInstanceError) => void;\n    }) {\n      const { instance, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      const kafkaRequest: KafkaRequestPayload = {\n        name: instance.name,\n        cloud_provider: instance.provider,\n        region: instance.region,\n      };\n      kafkaRequest.plan = instance.plan + \".\" + instance.sizeId;\n      kafkaRequest.billing_model =\n        instance.billing === \"prepaid\"\n          ? \"standard\"\n          : instance.billing !== undefined\n          ? \"marketplace\"\n          : null;\n      kafkaRequest.billing_cloud_account_id =\n        instance.billing && instance.billing !== \"prepaid\"\n          ? instance.billing.subscription\n          : null;\n      try {\n        await api.createKafka(true, kafkaRequest);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const { code } = error?.response?.data || {};\n\n          switch (instance.plan) {\n            case \"developer\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                // regardless of the error, let's not give too many details to trial users\n                default:\n                  onError(\"developer-unavailable\");\n                  break;\n              }\n              break;\n\n            case \"standard\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                  onError(\"region-unavailable\");\n                  break;\n\n                case ErrorCodes.INSUFFICIENT_QUOTA:\n                  onError(\"insufficient-quota\");\n                  break;\n\n                default:\n                  console.error(\n                    \"useKafkaCreateInstanceMutation\",\n                    \"createKafka unknown error\",\n                    error\n                  );\n                  onError(\"unknown\");\n              }\n              break;\n          }\n        } else {\n          console.error(\n            \"useKafkaCreateInstanceMutation\",\n            \"createKafka unexpected error\",\n            error\n          );\n          onError(\"unknown\");\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n      },\n    }\n  );\n}\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n} as const;\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      id: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { id, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      try {\n        await api.deleteKafkaById(id, true);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance({\n      adminUrl,\n      name,\n      onSuccess,\n      onError,\n    }: {\n      instanceId: string;\n      adminUrl: string;\n      name: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const api = topics(adminUrl);\n      try {\n        await api.deleteTopic(name);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type {\n  KafkaRequest,\n  KafkaUpdateRequest,\n} from \"@rhoas/kafka-management-sdk\";\nimport { getErrorCode, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type { AxiosResponse } from \"axios\";\nimport { AxiosError } from \"axios\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\ntype Errors = \"invalid-user\" | \"other\" | \"unknown\";\n\nexport function useUpdateKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation<\n    AxiosResponse<KafkaRequest>,\n    { type: Errors; message?: string },\n    { id: string; updates: KafkaUpdateRequest },\n    unknown\n  >(\n    async function kafkaCreateInstance({ id, updates }) {\n      const api = kafkasFleet();\n      try {\n        return await api.updateKafkaById(id, updates);\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const code = getErrorCode(error);\n\n          switch (code) {\n            case \"KAFKAS-MGMT-21\": {\n              return Promise.reject({\n                type: \"invalid-user\",\n                message: error.response?.data.reason,\n              });\n            }\n            default: {\n              return Promise.reject({\n                type: \"other\",\n                message: error.response?.data.reason,\n              });\n            }\n          }\n        } else if (error instanceof AxiosError) {\n          return Promise.reject({ type: \"unknown\", message: error.message });\n        } else {\n          return Promise.reject({ type: \"unknown\", message: \"unknown\" });\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteConsumerGroupMutation() {\n  const { consumerGroups } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function deleteConsumerGroup(props: {\n      instanceId: string;\n      adminUrl: string;\n      consumerGroupId: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { instanceId, adminUrl, consumerGroupId, onSuccess, onError } =\n        props;\n      const api = consumerGroups(adminUrl);\n      try {\n        await api.deleteConsumerGroupById(consumerGroupId);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useApi } from \"../useApi\";\nimport type { OffsetValue } from \"ui\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\n\nexport function useResetConsumerGroupMutation() {\n  const { consumerGroups } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function consumerGroupResetOffset(props: {\n      instanceId: string;\n      adminUrl: string;\n      consumerGroupId: string;\n      offset: OffsetValue;\n      topic: string;\n      partitions: number[];\n      value?: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const {\n        instanceId,\n        adminUrl,\n        consumerGroupId,\n        offset,\n        topic,\n        partitions,\n        value,\n        onSuccess,\n        onError,\n      } = props;\n      const api = consumerGroups(adminUrl);\n      try {\n        await api.resetConsumerGroupOffset(consumerGroupId, {\n          value,\n          offset,\n          topics: [{ topic, partitions }],\n        });\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport type { AclFilter } from \"../types\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeletePermissionsMutation() {\n  const { acls } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function deletePermissions(props: {\n      instanceId: string;\n      adminUrl: string;\n      acl: AclFilter;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, acl, onSuccess, onError } = props;\n      const api = acls(adminUrl);\n      try {\n        await api.deleteAcls(\n          acl.resourceType,\n          acl.resourceName,\n          acl.patternType,\n          acl.principal,\n          acl.operation,\n          acl.permissionType\n        );\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason || \"\";\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance.permissions({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useUpdatePermissionsMutation() {\n  const { acls } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function updatePermissionsPermissions(props: {\n      instanceId: string;\n      adminUrl: string;\n      acl: AclBinding;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, acl, onSuccess, onError } = props;\n      const api = acls(adminUrl);\n      try {\n        await api.createAcl({\n          resourceName: acl.resourceName,\n          resourceType: acl.resourceType,\n          patternType: acl.patternType,\n          permission: acl.permission,\n          principal: acl.principal,\n          operation: acl.operation,\n        });\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type { NewTopicInput, TopicSettings } from \"@rhoas/kafka-instance-sdk\";\nimport {\n  UserEditable,\n  convertToTopicSettings,\n} from \"consoledot-api/src/transformers/topicTransformer\";\nimport { convertToKeyValuePairs } from \"consoledot-api/src/transformers/topicTransformer\";\n\nexport function useCreateTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function createTopic(props: {\n      instanceId: string;\n      adminUrl: string;\n      topic: Topic;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, topic, onSuccess, onError } = props;\n      const api = topics(adminUrl);\n\n      const createTopic = (topic: Topic): NewTopicInput => {\n        const { name } = topic;\n        const topicSettings = convertToTopicSettings(topic);\n        return {\n          name,\n          settings: topicSettings,\n        };\n      };\n\n      try {\n        await api.createTopic(createTopic(topic));\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message || \"?\");\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { TopicSettings } from \"@rhoas/kafka-instance-sdk\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport {\n  convertToKeyValuePairs,\n  convertToTopicSettings,\n} from \"consoledot-api/src/transformers/topicTransformer\";\n\nexport function useUpdateTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function UpdateTopicMutation({\n      adminUrl,\n      topic,\n      onSuccess,\n      onError,\n    }: {\n      instanceId: string;\n      adminUrl: string;\n      topic: Topic;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const api = topics(adminUrl);\n\n      const updateTopic = (topic: Topic) => {\n        const topicSettings = convertToTopicSettings(topic);\n        return topicSettings;\n      };\n\n      try {\n        await api.updateTopic(topic.name || \"\", updateTopic(topic));\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message || \"?\");\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type {\n  AclOperationFilter,\n  AclPatternTypeFilter,\n  AclPermissionTypeFilter,\n  AclResourceTypeFilter,\n} from \"@rhoas/kafka-instance-sdk\";\nimport {\n  ConsumerGroupOrderKey,\n  TopicOrderKey,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { RangeQuery } from \"@rhoas/kafka-management-sdk\";\n\nexport type NoUndefinedField<T> = {\n  [P in keyof T]-?: NoUndefinedField<NonNullable<T[P]>>;\n};\n\nexport type SafeRangeQuery = NoUndefinedField<RangeQuery>;\n\nexport const KafkaInstancesSortableColumns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"provider\",\n  \"region\",\n] as const;\n\nexport type KafkaInstancesSortableColumn =\n  (typeof KafkaInstancesSortableColumns)[number];\n\nexport const KafkaTopicsSortableColumns = [\n  ...Object.values(TopicOrderKey),\n] as const;\n\nexport type KafkaTopicsSortableColumn =\n  (typeof KafkaTopicsSortableColumns)[number];\n\nexport const KafkaConsumerGroupSortableColumns = [\n  ...Object.values(ConsumerGroupOrderKey),\n] as const;\n\nexport type KafkaConsumerGroupSortableColumn =\n  (typeof KafkaConsumerGroupSortableColumns)[number];\n\nexport type AclFilter = {\n  resourceType?: AclResourceTypeFilter;\n  resourceName?: string;\n  patternType?: AclPatternTypeFilter;\n  principal?: string;\n  operation?: AclOperationFilter;\n  permissionType?: AclPermissionTypeFilter;\n};\n","const REACT_QUERY_DEVTOOLS = \"mas.devtools\";\nconst METRICS_LAG_ALERT = \"mas.rhosak.metrics.lag-alert-closed\";\n\nexport function isReactQueryDevToolsEanbled() {\n  return localStorage.getItem(REACT_QUERY_DEVTOOLS) === \"true\";\n}\n\nexport function metricsIsLagAlertsDismissed() {\n  return localStorage.getItem(METRICS_LAG_ALERT) === \"true\";\n}\n\nexport function metricsDismissLagAlerts() {\n  return localStorage.setItem(METRICS_LAG_ALERT, \"true\");\n}\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\n\ntype ConsumerGroupPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ConsumerGroupPopover: FunctionComponent<\n  ConsumerGroupPopoverProps\n> = ({ title, description }) => {\n  return (\n    <Popover\n      aria-label=\"Consumer groups popover\"\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon />\n    </Popover>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type ConsumerGroupStateLabelProps = {\n  state: State;\n};\n\nexport const ConsumerGroupStateLabel: FunctionComponent<\n  ConsumerGroupStateLabelProps\n> = ({ state }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  switch (state) {\n    case \"Stable\":\n      return t(\"consumerGroup.state.stable\");\n    case \"Empty\":\n      return t(\"consumerGroup.state.empty\");\n    case \"Dead\":\n      return t(\"consumerGroup.state.dead\");\n    case \"CompletingRebalance\":\n      return t(\"consumerGroup.state.completing_rebalance\");\n    case \"PreparingRebalance\":\n      return t(\"consumerGroup.state.preparing_rebalance\");\n    case \"Unknown\":\n      return t(\"consumerGroup.state.unknown\");\n    default:\n      return null;\n  }\n};\n","import {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Stack,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupPopover } from \"./ConsumerGroupPopover\";\nimport { ConsumerGroupStateLabel } from \"./ConsumerGroupState\";\n\nexport type ConsumerGroupByKafkaProps = {\n  state: State;\n  consumers: Consumer[];\n  activeMembers: number;\n  partitionsWithLag: number;\n};\n\nexport const ConsumerGroupByKafka: FunctionComponent<\n  ConsumerGroupByKafkaProps\n> = ({ state, consumers, activeMembers, partitionsWithLag }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const columnNames = {\n    topic: t(\"topic.topic\"),\n    partition: t(\"consumerGroup.partition\"),\n    consumer_id: t(\"consumerGroup.consumer_id\"),\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n  };\n\n  return (\n    <Stack hasGutter>\n      <DescriptionList\n        columnModifier={{ lg: \"3Col\" }}\n        className={\"pf-m-display-2xl\"}\n      >\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.active_members\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {activeMembers}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.partitions_with_lag\")}{\" \"}\n            <ConsumerGroupPopover\n              title={t(\"consumerGroup.partitions_with_lag_name\")}\n              description={t(\"consumerGroup.partitions_with_lag_description\")}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {partitionsWithLag}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.state_header\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <ConsumerGroupStateLabel state={state} />\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TableComposable\n        aria-label={t(\"consumerGroup.consumer_group_info_table_aria\")}\n        variant={TableVariant.compact}\n      >\n        <Thead noWrap>\n          <Tr>\n            <Th width={20}>{columnNames.topic}</Th>\n            <Th width={20}>{columnNames.partition}</Th>\n            <Th width={20}>{columnNames.consumer_id}</Th>\n            <Th width={20}>{columnNames.current_offset}</Th>\n            <Th width={20}>{columnNames.log_end_offset}</Th>\n            <Th width={20}>{columnNames.offset_lag}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {consumers.map(\n            ({\n              groupId,\n              partition,\n              topic,\n              memberId,\n              offset,\n              logEndOffset,\n              lag,\n            }) => {\n              return (\n                <Tr key={groupId}>\n                  <Td dataLabel={columnNames.topic}>{topic}</Td>\n                  <Td dataLabel={columnNames.partition}>{partition}</Td>\n                  <Td dataLabel={columnNames.consumer_id}>\n                    {memberId ? (\n                      `${groupId}\\n${memberId}`\n                    ) : (\n                      <i>{t(\"consumerGroup.unassigned\")}</i>\n                    )}\n                  </Td>\n                  <Td dataLabel={columnNames.current_offset}>{offset}</Td>\n                  <Td dataLabel={columnNames.log_end_offset}>{logEndOffset}</Td>\n                  <Td dataLabel={columnNames.offset_lag}>{lag}</Td>\n                </Tr>\n              );\n            }\n          )}\n        </Tbody>\n      </TableComposable>\n    </Stack>\n  );\n};\n","import {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Stack,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupPopover } from \"./ConsumerGroupPopover\";\nimport { ConsumerGroupStateLabel } from \"./ConsumerGroupState\";\n\nexport type ConsumerGroupByTopicProps = {\n  state: State;\n  consumers: Consumer[];\n  activeMembers: number;\n  partitionsWithLag: number;\n};\n\nexport const ConsumerGroupByTopic: FunctionComponent<\n  ConsumerGroupByTopicProps\n> = ({ state, consumers, activeMembers, partitionsWithLag }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const columnNames = {\n    partition: t(\"consumerGroup.partition\"),\n    consumer_id: t(\"consumerGroup.consumer_id\"),\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n  };\n\n  return (\n    <Stack hasGutter>\n      <DescriptionList\n        columnModifier={{ lg: \"3Col\" }}\n        className={\"pf-m-display-2xl\"}\n      >\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.active_members_for_topic\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {activeMembers}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.partitions_with_lag_for_topic\")}{\" \"}\n            <ConsumerGroupPopover\n              title={t(\"consumerGroup.partitions_with_lag_name\")}\n              description={t(\"consumerGroup.partitions_with_lag_description\")}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {partitionsWithLag}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.state_header\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {<ConsumerGroupStateLabel state={state} />}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TableComposable\n        aria-label={t(\"consumerGroup.consumer_group_info_table_aria\")}\n        variant={TableVariant.compact}\n      >\n        <Thead noWrap>\n          <Tr>\n            <Th key={columnNames.partition} width={20}>\n              {columnNames.partition}\n            </Th>\n            <Th key={columnNames.consumer_id} width={20}>\n              {columnNames.consumer_id}\n            </Th>\n            <Th key={columnNames.current_offset} width={20}>\n              {columnNames.current_offset}\n            </Th>\n            <Th key={columnNames.log_end_offset} width={20}>\n              {columnNames.log_end_offset}\n            </Th>\n            <Th key={columnNames.offset_lag} width={20}>\n              {columnNames.offset_lag}\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {consumers.map(\n            ({ groupId, partition, memberId, offset, logEndOffset, lag }) => {\n              return (\n                <Tr key={groupId}>\n                  <Td dataLabel={columnNames.partition}>{partition}</Td>\n                  <Td dataLabel={columnNames.consumer_id}>\n                    {memberId ? (\n                      `${groupId}\\n${memberId}`\n                    ) : (\n                      <i>{t(\"consumerGroup.unassigned\")}</i>\n                    )}{\" \"}\n                  </Td>\n                  <Td dataLabel={columnNames.current_offset}>{offset}</Td>\n                  <Td dataLabel={columnNames.log_end_offset}>{logEndOffset}</Td>\n                  <Td dataLabel={columnNames.offset_lag}>{lag}</Td>\n                </Tr>\n              );\n            }\n          )}\n        </Tbody>\n      </TableComposable>\n    </Stack>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupByKafka } from \"./ConsumerGroupByKafka\";\nimport { ConsumerGroupByTopic } from \"./ConsumerGroupByTopic\";\n\nexport type ConsumerGroupDetailsProps = {\n  consumerGroupByTopic: boolean;\n  state: State;\n  activeMembers: number;\n  partitionsWithLag: number;\n  consumers: Consumer[];\n};\n\nexport const ConsumerGroupDetails: FunctionComponent<\n  ConsumerGroupDetailsProps\n> = ({\n  consumerGroupByTopic,\n  state,\n  consumers,\n  activeMembers,\n  partitionsWithLag,\n}) => {\n  return (\n    <div>\n      {consumerGroupByTopic ? (\n        <ConsumerGroupByTopic\n          state={state}\n          consumers={consumers}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n        />\n      ) : (\n        <ConsumerGroupByKafka\n          state={state}\n          consumers={consumers}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n        />\n      )}\n    </div>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ConsumerGroupEmptyState: FunctionComponent = () => {\n  const { t } = useTranslation([\"kafka\"]);\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel={\"h1\"} size={TitleSizes.lg}>\n        {t(\"consumerGroup.empty_consumer_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"consumerGroup.empty_consumer_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { OffsetValue } from \"../types\";\n\nexport type OffsetSelectProps = {\n  value: OffsetValue;\n  onChange: (value: OffsetValue) => void;\n};\n\nexport const OffsetSelect: FunctionComponent<OffsetSelectProps> = ({\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const offsetValueOption: { [key in OffsetValue]: string } = {\n    absolute: t(\"consumerGroup.offset.absolute\"),\n    latest: t(\"consumerGroup.offset.latest\"),\n    earliest: t(\"consumerGroup.offset.earliest\"),\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChange(selection as OffsetValue);\n    setIsOpen(false);\n  };\n\n  const makeOptions = () => {\n    return Object.entries(offsetValueOption).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <Select\n      aira-label={t(\"consumerGroup.reset_offset_new_offset_label\")}\n      toggleAriaLabel={t(\"consumerGroup.reset_offset_new_offset_label\")}\n      id={\"offset-select\"}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      variant={SelectVariant.single}\n      isOpen={isOpen}\n      placeholderText={t(\"consumerGroup.select_offset\")}\n      selections={value}\n      menuAppendTo={\"parent\"}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type TopicSelectProps = {\n  value: string;\n  topics: string[];\n  onChange: (topic: string) => void;\n};\n\nexport const TopicSelect: FunctionComponent<TopicSelectProps> = ({\n  topics,\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, topic) => {\n    onChange(topic as string);\n    setIsOpen(false);\n  };\n\n  return (\n    <Select\n      aira-label={t(\"consumerGroup.reset_offset_topic_label\")}\n      toggleAriaLabel={t(\"consumerGroup.reset_offset_topic_label\")}\n      id={\"topic-select\"}\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      selections={value}\n      placeholderText={t(\"consumerGroup.select_topic\")}\n      menuAppendTo={\"parent\"}\n      isDisabled={topics.length <= 0}\n    >\n      {topics.map((topic, index) => (\n        <SelectOption key={index} value={topic}>\n          {topic}\n        </SelectOption>\n      ))}\n    </Select>\n  );\n};\n","import {\n  Alert,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n  TextInput,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport { useCallback, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer } from \"ui-models/src/models/consumer-group\";\nimport \"../ConsumerGroup.css\";\nimport type { OffsetValue } from \"../types\";\nimport { OffsetSelect } from \"./OffsetSelect\";\nimport { TopicSelect } from \"./TopicSelect\";\nimport type { FunctionComponent } from \"react\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type ConsumerGroupResetOffsetProps = {\n  isModalOpen: boolean;\n  state: State;\n  groupId: string;\n  topics: string[];\n  consumers: Consumer[];\n  onClickClose: () => void;\n  onClickResetOffset: (\n    topic: string,\n    offset: OffsetValue,\n    partitions: number[],\n    customOffset: string\n  ) => void;\n  disableFocusTrap?: boolean;\n  appendTo?: () => HTMLElement;\n};\n\nexport const ConsumerGroupResetOffset: FunctionComponent<\n  ConsumerGroupResetOffsetProps\n> = ({\n  groupId,\n  topics,\n  onClickClose,\n  isModalOpen,\n  onClickResetOffset,\n  disableFocusTrap,\n  appendTo,\n  consumers,\n  state,\n}) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const [selectedTopic, setSelectedTopic] = useState<string>(\"\");\n  const [selectedOffset, setSelectedOffset] = useState<OffsetValue>(\"absolute\");\n  const [customOffsetValue, setcustomOffsetValue] = useState<string>();\n\n  const [isResetAccepted, setIsResetAccepted] = useState<boolean>(false);\n\n  const [selectedConsumer, setSelectedConsumer] = useState<Consumer[]>([]);\n\n  const isDisconnected = state !== \"Stable\";\n\n  const consumerList =\n    consumers.filter((consumer) => consumer.topic === selectedTopic) || [];\n\n  const isResetOffsetDisabled =\n    !selectedTopic ||\n    !selectedOffset ||\n    !isResetAccepted ||\n    !isDisconnected ||\n    selectedConsumer.length === 0;\n\n  const tableColumns = {\n    partition: t(\"consumerGroup.partition\"),\n    clientId: `${t(\"consumerGroup.client_id\")} + ${t(\n      \"consumerGroup.member_id\"\n    )}`,\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n    new_offset: t(\"consumerGroup.new_offset\"),\n  };\n\n  const areAllConsumerSelected =\n    selectedConsumer.length === consumerList.length;\n\n  const onSelectAllConsumer = (isSelecting = true) => {\n    setSelectedConsumer(isSelecting ? consumerList : []);\n  };\n\n  const isConsumerSelected = (consumer: Consumer) => {\n    return selectedConsumer.includes(consumer);\n  };\n  const onSelect = (consumer: Consumer, isSelecting = true) => {\n    setSelectedConsumer(\n      isSelecting\n        ? [...selectedConsumer, consumer]\n        : selectedConsumer.filter((r) => r !== consumer)\n    );\n  };\n\n  const onResetOffset = useCallback(() => {\n    const partitions = selectedConsumer.map(({ partition }) => partition);\n    onClickResetOffset(\n      selectedTopic,\n      selectedOffset,\n      partitions,\n      customOffsetValue || \"0\"\n    );\n  }, [\n    onClickResetOffset,\n    selectedTopic,\n    selectedOffset,\n    selectedConsumer,\n    customOffsetValue,\n  ]);\n\n  return (\n    <Modal\n      variant={ModalVariant.large}\n      isOpen={isModalOpen}\n      aria-label={t(\"consumerGroup.reset_offset_modal_label\")}\n      title={t(\"consumerGroup.reset_offset\")}\n      showClose={true}\n      onClose={onClickClose}\n      aria-describedby=\"modal-message\"\n      disableFocusTrap={disableFocusTrap}\n      appendTo={appendTo}\n      position=\"top\"\n      actions={[\n        <Button\n          variant=\"danger\"\n          key={1}\n          isDisabled={isResetOffsetDisabled}\n          onClick={onResetOffset}\n        >\n          {t(\"consumerGroup.reset_offset\")}\n        </Button>,\n        <Button variant=\"link\" key={2} onClick={onClickClose}>\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <Form isHorizontal>\n            <FormGroup\n              className=\"mas--ConsumerGroupResetOffset-form-group--readonly\"\n              label={t(\"consumerGroup.reset_offset_consumer_group_label\")}\n              fieldId=\"consumer-group-input\"\n            >\n              <TextInput\n                readOnlyVariant={\"default\"}\n                type=\"text\"\n                name={t(\"consumerGroup.reset_offset_consumer_group_label\")}\n                id={\"consumer-group-input\"}\n                value={groupId}\n              />\n            </FormGroup>\n            {isDisconnected && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_topic_label\")}\n                fieldId=\"topic-select\"\n              >\n                <TopicSelect\n                  value={selectedTopic}\n                  topics={topics}\n                  onChange={setSelectedTopic}\n                />\n              </FormGroup>\n            )}\n            {isDisconnected && selectedTopic && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_new_offset_label\")}\n                fieldId=\"offset-select\"\n              >\n                <OffsetSelect\n                  value={selectedOffset}\n                  onChange={setSelectedOffset}\n                />\n              </FormGroup>\n            )}\n            {isDisconnected &&\n              selectedTopic &&\n              selectedOffset === \"absolute\" && (\n                <FormGroup\n                  label={t(\"consumerGroup.reset_offset_custom_offset_label\")}\n                  fieldId=\"custom-offset-input\"\n                >\n                  <TextInput\n                    id=\"custom-offset-input\"\n                    name={t(\"consumerGroup.reset_offset_custom_offset_label\")}\n                    value={customOffsetValue}\n                    onChange={setcustomOffsetValue}\n                    type=\"number\"\n                  />\n                </FormGroup>\n              )}\n          </Form>\n        </StackItem>\n        <StackItem>\n          {!isDisconnected && (\n            <Alert\n              className=\"modal-alert\"\n              variant=\"danger\"\n              isInline\n              title={t(\"consumerGroup.reset_offset_connected_alert_title\")}\n            >\n              <p>{t(\"consumerGroup.reset_offset_connected_alert_body\")}</p>\n            </Alert>\n          )}\n        </StackItem>\n        <StackItem>\n          {isDisconnected && consumerList.length > 0 && selectedTopic && (\n            <Stack hasGutter>\n              <StackItem>\n                <TableComposable\n                  aria-label={t(\"consumerGroup.reset_offset_selectable table\")}\n                  className=\"consumer-table\"\n                >\n                  <Thead>\n                    <Tr>\n                      <Th\n                        select={{\n                          onSelect: (_event, isSelecting) =>\n                            onSelectAllConsumer(isSelecting),\n                          isSelected: areAllConsumerSelected,\n                        }}\n                      />\n                      <Th>{tableColumns.partition}</Th>\n                      <Th>{tableColumns.clientId}</Th>\n                      <Th>{tableColumns.current_offset}</Th>\n                      <Th>{tableColumns.log_end_offset}</Th>\n                      <Th>{tableColumns.offset_lag}</Th>\n                      <Th>{tableColumns.new_offset}</Th>\n                    </Tr>\n                  </Thead>\n                  <Tbody>\n                    {consumerList.map((consumer, index) => {\n                      return (\n                        <Tr key={index}>\n                          <Td\n                            select={{\n                              rowIndex: index,\n                              isSelected: isConsumerSelected(consumer),\n                              onSelect: (_event, isSelecting) =>\n                                onSelect(consumer, isSelecting),\n                            }}\n                          />\n                          <Td dataLabel={tableColumns.partition}>\n                            {consumer.partition}\n                          </Td>\n                          <Td dataLabel={tableColumns.clientId}>\n                            {String(consumer.groupId)}\n                            {String(consumer.memberId)}\n                          </Td>\n                          <Td dataLabel={tableColumns.current_offset}>\n                            {consumer.offset}\n                          </Td>\n                          <Td dataLabel={tableColumns.log_end_offset}>\n                            {consumer.logEndOffset}\n                          </Td>\n                          <Td dataLabel={tableColumns.offset_lag}>\n                            {consumer.lag}\n                          </Td>\n                          <Td dataLabel={tableColumns.offset_lag}>\n                            {isConsumerSelected(consumer) && selectedOffset\n                              ? selectedOffset === \"absolute\"\n                                ? customOffsetValue || 0\n                                : selectedOffset\n                              : \"-\"}\n                          </Td>\n                        </Tr>\n                      );\n                    })}\n                  </Tbody>\n                </TableComposable>\n              </StackItem>\n              <StackItem>\n                <Checkbox\n                  label={t(\"consumerGroup.reset_offset_accept\")}\n                  id=\"resetoffset-checkbox\"\n                  isChecked={isResetAccepted}\n                  onChange={setIsResetAccepted}\n                />\n              </StackItem>\n            </Stack>\n          )}\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n","import { Alert, Text } from \"@patternfly/react-core\";\nimport { DeleteModal } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type DeleteConsumerGroupProps = {\n  isModalOpen: boolean;\n  onClose: () => void;\n  onDeleteConsumer: () => void;\n  state: State;\n  consumerName: string;\n  appendTo: () => HTMLElement;\n  disableFocusTrap?: boolean;\n};\n\nexport const DeleteConsumerGroup: FunctionComponent<\n  DeleteConsumerGroupProps\n> = ({\n  isModalOpen,\n  onClose,\n  onDeleteConsumer,\n  state,\n  consumerName,\n  appendTo,\n  disableFocusTrap,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const isConsumerConnected = state === \"Stable\";\n\n  return (\n    <div>\n      <DeleteModal\n        isDeleting={false}\n        isModalOpen={isModalOpen}\n        title={t(\"consumerGroup.delete\")}\n        onCancel={onClose}\n        onDelete={onDeleteConsumer}\n        variant={\"non-destructive\"}\n        appendTo={appendTo}\n        disableFocusTrap={disableFocusTrap}\n        isDisabled={isConsumerConnected}\n      >\n        {isConsumerConnected ? (\n          <Alert\n            className=\"modal-alert\"\n            variant=\"danger\"\n            isInline\n            title={t(\"consumerGroup.delete_consumer_connected_alert_title\", {\n              name: consumerName,\n            })}\n          >\n            {t(\"consumerGroup.delete_consumer_connected_alert_body\")}\n          </Alert>\n        ) : (\n          <Text id=\"modal-message\">\n            <Trans\n              ns={\"kafka\"}\n              i18nKey={\"consumerGroup.consumer_group_delete_message\"}\n              values={{\n                name: consumerName,\n              }}\n            />\n          </Text>\n        )}\n      </DeleteModal>\n    </div>\n  );\n};\n","import {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent, ReactNode } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport \"./ConsumerGroup.css\";\nimport { ConsumerGroupDetails } from \"./ConsumerGroupDetails\";\n\nexport type ConsumerGroupDrawerProps = {\n  children: ReactNode;\n  consumerGroupByTopic: boolean;\n  state: State;\n  activeMembers: number;\n  partitionsWithLag: number;\n  consumers: Consumer[];\n  groupId: string;\n  onSelectDeleteConsumerGroup: () => void;\n  onSelectResetOffsetConsumerGroup: () => void;\n  isExpanded: boolean;\n  onClickClose: () => void;\n};\n\nexport const ConsumerGroupDrawer: FunctionComponent<\n  ConsumerGroupDrawerProps\n> = ({\n  children,\n  consumerGroupByTopic,\n  state,\n  activeMembers,\n  partitionsWithLag,\n  consumers,\n  groupId,\n  onSelectDeleteConsumerGroup,\n  onSelectResetOffsetConsumerGroup,\n  isExpanded,\n  onClickClose,\n}) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n  const onSelect = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const dropdownItems = [\n    <DropdownItem key=\"reset offset\" onClick={onSelectResetOffsetConsumerGroup}>\n      {t(\"consumerGroup.reset_offset\")}\n    </DropdownItem>,\n    <DropdownItem key=\"delete\" onClick={onSelectDeleteConsumerGroup}>\n      {t(\"common:delete\")}\n    </DropdownItem>,\n  ];\n\n  const panelContent = (\n    <DrawerPanelContent widths={{ default: \"width_50\" }}>\n      <DrawerHead>\n        <TextContent>\n          <Text\n            component={TextVariants.small}\n            className={\"consumer-group-drawer__top-label\"}\n          >\n            {t(\"consumerGroup.consumer_group_id\")}\n          </Text>\n          <Title headingLevel={\"h1\"} className={\"consumer-group-drawer__title\"}>\n            {groupId}\n          </Title>\n        </TextContent>\n        <DrawerActions>\n          <Dropdown\n            onSelect={onSelect}\n            toggle={<KebabToggle onToggle={onToggle} id=\"toggle-data-plane\" />}\n            dropdownItems={dropdownItems}\n            isOpen={isOpen}\n            isPlain\n            position={DropdownPosition.right}\n          />\n          <DrawerCloseButton onClick={onClickClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <ConsumerGroupDetails\n          consumerGroupByTopic={consumerGroupByTopic}\n          state={state}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n          consumers={consumers}\n        />\n      </DrawerPanelBody>\n    </DrawerPanelContent>\n  );\n\n  return (\n    <Drawer\n      isExpanded={isExpanded}\n      data-ouia-app-id={\"dataPlane-consumerGroupDetails\"}\n      isInline={true}\n    >\n      <DrawerContent panelContent={panelContent}>\n        <DrawerContentBody className=\"consumer-group-drawer__drawer-content-body\">\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type {\n  CloudProvider,\n  KafkaField,\n  SimplifiedStatus,\n  Status,\n} from \"ui-models/src/models/kafka\";\n\nexport function useKafkaLabels() {\n  const { t } = useTranslation(\"kafka\");\n\n  const statuses: { [status in Status]: string } = {\n    ready: t(\"statuses.ready\"),\n    degraded: t(\"statuses.degraded\"),\n    accepted: t(\"statuses.accepted\"),\n    provisioning: t(\"statuses.provisioning\"),\n    preparing: t(\"statuses.preparing\"),\n    deprovision: t(\"statuses.deprovision\"),\n    deleting: t(\"statuses.deleting\"),\n    suspended: t(\"statuses.suspended\"),\n    suspending: t(\"statuses.suspending\"),\n    resuming: t(\"statuses.resuming\"),\n  };\n  const statusesSimplified: { [status in SimplifiedStatus]: string } = {\n    creating: t(\"statusesSimplified.creating\"),\n    ready: t(\"statusesSimplified.ready\"),\n    degraded: t(\"statusesSimplified.degraded\"),\n    deleting: t(\"statusesSimplified.deleting\"),\n    suspended: t(\"statusesSimplified.suspended\"),\n    suspending: t(\"statusesSimplified.suspending\"),\n    resuming: t(\"statusesSimplified.resuming\"),\n  };\n  const providers: { [provider in CloudProvider]: string } = {\n    aws: t(\"common:cloudProviders.aws\"),\n    gcp: t(\"common:cloudProviders.gcp\"),\n    azure: t(\"common:cloudProviders.azure\"),\n  };\n  const providerRegions: {\n    [provider in CloudProvider]: { [region: string]: string };\n  } = {\n    aws: {},\n    gcp: {},\n    azure: {},\n  };\n  const fields: {\n    [field in KafkaField]: string;\n  } = {\n    id: t(\"fields.id\"),\n    name: t(\"fields.name\"),\n    createdAt: t(\"fields.createdAt\"),\n    updatedAt: t(\"fields.updatedAt\"),\n    expiryDate: t(\"fields.expiryDate\"),\n    owner: t(\"fields.owner\"),\n    provider: t(\"fields.provider\"),\n    region: t(\"fields.region\"),\n    status: t(\"fields.status\"),\n    plan: t(\"fields.plan\"),\n    size: t(\"fields.size\"),\n    ingress: t(\"fields.ingress\"),\n    egress: t(\"fields.egress\"),\n    storage: t(\"fields.storage\"),\n    maxPartitions: t(\"fields.maxPartitions\"),\n    connections: t(\"fields.connections\"),\n    connectionRate: t(\"fields.connectionRate\"),\n    messageSize: t(\"fields.messageSize\"),\n    billing: t(\"fields.billing\"),\n    adminUrl: t(\"fields.adminUrl\"),\n    bootstrapUrl: t(\"fields.bootstrapUrl\"),\n    version: t(\"fields.version\"),\n    az: t(\"fields.availabilityZone\"),\n  };\n  return {\n    fields,\n    statuses,\n    statusesSimplified,\n    providers,\n    providerRegions,\n  };\n}\n","import { useTranslation } from \"react-i18next\";\nimport type { TopicField } from \"ui-models/src/models/topic\";\n\nexport function useTopicLabels() {\n  const { t } = useTranslation(\"topic\");\n\n  const fields: {\n    [field in TopicField]: string;\n  } = {\n    name: t(\"fields.name\"),\n    partitions: t(\"fields.partitions\"),\n    \"cleanup.policy\": t(\"fields.cleanup_policy\"),\n    \"delete.retention.ms\": t(\"fields.delete_retention_ms\"),\n    \"max.compaction.lag.ms\": t(\"fields.max_compaction_lag_ms\"),\n    \"max.message.bytes\": t(\"fields.max_message_bytes\"),\n    \"message.downconversion.enable\": t(\"fields.message_downconversion_enable\"),\n    \"message.timestamp.difference.max.ms\": t(\n      \"fields.message_timestamp_difference_max_ms\"\n    ),\n    \"message.timestamp.type\": t(\"fields.message_timestamp_type\"),\n    \"min.compaction.lag.ms\": t(\"fields.min_compaction_lag_ms\"),\n    \"retention.bytes\": t(\"fields.retention_bytes\"),\n    \"retention.ms\": t(\"fields.retention_ms\"),\n    \"segment.bytes\": t(\"fields.segment_bytes\"),\n    \"segment.ms\": t(\"fields.segment_ms\"),\n    \"compression.type\": t(\"fields.compression_type\"),\n    \"file.delete.delay.ms\": t(\"fields.file_delete_delay_ms\"),\n    \"flush.messages\": t(\"fields.flush_messages\"),\n    \"flush.ms\": t(\"fields.flush_ms\"),\n    \"follower.replication.throttled.replicas\": t(\n      \"fields.follower_replication_throttled_replicas\"\n    ),\n    \"index.interval.bytes\": t(\"fields.index_interval_bytes\"),\n    \"leader.replication.throttled.replicas\": t(\n      \"fields.leader_replication_throttled_replicas\"\n    ),\n    \"message.format.version\": t(\"fields.message_format_version\"),\n    \"min.cleanable.dirty.ratio\": t(\"fields.min_cleanable_dirty_ratio\"),\n    \"min.insync.replicas\": t(\"fields.min_insync_replicas\"),\n    \"segment.index.bytes\": t(\"fields.segment_index_bytes\"),\n    \"segment.jitter.ms\": t(\"fields.segment_jitter_ms\"),\n    \"unclean.leader.election.enable\": t(\n      \"fields.unclean_leader_election_enable\"\n    ),\n    preallocate: t(\"fields.preallocate\"),\n  };\n  return {\n    fields,\n  };\n}\n","import { useTranslation } from \"react-i18next\";\nimport type { ConsumerGroupField } from \"ui-models/src/models/consumer-group\";\n\nexport function useConsumerGroupLabels() {\n  const { t } = useTranslation(\"kafka\");\n\n  const fields: {\n    [field in ConsumerGroupField]: string;\n  } = {\n    groupId: t(\"consumerGroup.consumer_group_id\"),\n    activeConsumers: t(\"consumerGroup.active_members\"),\n    laggingPartitions: t(\"consumerGroup.partitions_with_lag\"),\n    state: t(\"consumerGroup.state_header\"),\n  };\n  return {\n    fields,\n  };\n}\n","import { PageSection } from \"@patternfly/react-core\";\nimport { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  EmptyStateNoResults,\n  TableView,\n} from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport type {\n  ConsumerGroup,\n  ConsumerGroupField,\n} from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupEmptyState, ConsumerGroupStateLabel } from \"./components\";\nimport { useConsumerGroupLabels } from \"../../hooks\";\n\ntype SubUnion<T, U extends T> = U;\n\nconst Columns: SubUnion<\n  ConsumerGroupField,\n  \"groupId\" | \"activeConsumers\" | \"laggingPartitions\" | \"state\"\n>[] = [\"groupId\", \"activeConsumers\", \"laggingPartitions\", \"state\"];\n\nexport type ConsumerGroupsProps<T extends ConsumerGroup> = {\n  consumers: Array<T> | undefined;\n  onDelete: (row: T) => void;\n  onViewPartition: (row: T) => void;\n  onViewResetOffset: (row: T) => void;\n  consumerName: string[];\n  onSearchConsumer: (value: string) => void;\n  onRemoveConsumerChip: (value: string) => void;\n  onRemoveConsumerChips: () => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n>;\n\nexport const ConsumerGroups = <T extends ConsumerGroup>({\n  consumers,\n  onDelete,\n  onViewPartition,\n  isColumnSortable,\n  itemCount,\n  onViewResetOffset,\n  onClearAllFilters,\n  page,\n  perPage,\n  onPageChange,\n  consumerName,\n  onSearchConsumer,\n  onRemoveConsumerChip,\n  onRemoveConsumerChips,\n}: ConsumerGroupsProps<T>) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const labels = useConsumerGroupLabels();\n\n  const isFiltered = consumerName.length > 0;\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"consumerGroup.consumer_group_list\")}\n        data={consumers}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th\n            key={key}\n            info={\n              column === \"laggingPartitions\"\n                ? {\n                    popover: (\n                      <div>\n                        {t(\"consumerGroup.partitions_with_lag_description\")}\n                      </div>\n                    ),\n                    ariaLabel: \"partitions with lag\",\n                    popoverProps: {\n                      headerContent: t(\n                        \"consumerGroup.partitions_with_lag_name\"\n                      ),\n                    },\n                  }\n                : undefined\n            }\n          >\n            {labels.fields[column]}\n          </Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"groupId\":\n                    return row.groupId;\n                  case \"activeConsumers\":\n                    return row.activeConsumers;\n                  case \"laggingPartitions\":\n                    return row.laggingPartitions;\n                  case \"state\":\n                    return <ConsumerGroupStateLabel state={row.state} />;\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row, ActionsColumn }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"consumerGroup.view_partitions_offsets\"),\n                onClick: () => onViewPartition(row),\n              },\n              {\n                title: t(\"consumerGroup.reset_offset\"),\n                onClick: () => onViewResetOffset(row),\n              },\n              {\n                title: t(\"common:delete\"),\n                onClick: () => onDelete(row),\n              },\n            ]}\n          />\n        )}\n        isColumnSortable={isColumnSortable}\n        filters={{\n          [labels.fields.groupId]: {\n            type: \"search\",\n            chips: consumerName,\n            onSearch: onSearchConsumer,\n            onRemoveChip: onRemoveConsumerChip,\n            onRemoveGroup: onRemoveConsumerChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"input_field_invalid_message\"),\n          },\n        }}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        isFiltered={isFiltered}\n        onClearAllFilters={onClearAllFilters}\n        emptyStateNoData={<ConsumerGroupEmptyState />}\n        emptyStateNoResults={<EmptyStateNoResults />}\n      />\n    </PageSection>\n  );\n};\n","import {\n  Level,\n  LevelItem,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const ControlPlaneHeader: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n\n  return (\n    <PageSection\n      variant={PageSectionVariants.light}\n      hasShadowBottom={true}\n      stickyOnBreakpoint={{ default: \"top\" }}\n    >\n      <Level>\n        <LevelItem>\n          <TextContent>\n            <Text component=\"h1\">{t(\"kafka:table.title\")}</Text>\n          </TextContent>\n        </LevelItem>\n      </Level>\n    </PageSection>\n  );\n};\n","import type { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfo } from \"../types\";\n\nexport function onProviderChange(\n  providers: CloudProviderInfo[],\n  provider: CloudProvider\n): { provider: CloudProvider; region: CloudRegion | undefined } {\n  const selectedProvider = providers.find((p) => p.id === provider);\n  const region =\n    selectedProvider?.defaultRegion ||\n    selectedProvider?.regions.filter((r) => !!r.isDisabled === false)[0]?.id;\n  return { provider, region };\n}\n","import {\n  CloudProvider,\n  CloudRegion,\n  MarketplaceSubscription,\n  Size,\n} from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateKafkaFormData,\n  CreateKafkaInstanceError,\n  StandardPlanInitializationData,\n  StandardSizes,\n} from \"../types\";\nimport { onProviderChange } from \"./shared\";\n\nexport type StandardPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: StandardPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    provider?: CloudProvider;\n    region?: CloudRegion;\n    size?: Size;\n    billing?: MarketplaceSubscription | \"prepaid\";\n  };\n\n  // based on the form.provider selection\n\n  // based on the form.provider and form.region selection\n  sizes: StandardSizes | undefined;\n\n  creationError: CreateKafkaInstanceError | undefined;\n};\n\nexport const StandardPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5SwC4EMB2E0CcIAUAbTAWTQGMALASwzADoA3MHagMwE8BBRta4gEb9qKDgGJEoAA4B7WCOoyMkkAA9EAZgAcARnoBOfQAYdOrQHYArABYNAJnMAaEB0Q6j++reuXL5k3bWWpY65gC+Yc6omNh4RKQUNHT05Eps1FAArqwYUPTRKJmwYuQ4YGgoYCqy8iiKykhqmjp29OYW5hpGQYG+zq4Ilvoa9KZGlh4a5joAbPqBEVHoWLgExBhkVLQMqRjpWTl5bDI4ALZMaITUEGLpYIQQAJIYvFcQ1XIKSirqCKGG9Ds+ksU1m5n0M2s1n0-UQdgmllGdjsOj8QJm7ihixA0RWcXWmySOzSGWytCOJ3Or2uYlgmQEpxEH1q9R+bmMnnMnRR9n8di0RjssIQ-MFo2sgQ81lCGjm2NxsTWCS2yV2+zJuXoxzO+TQjHJJTKFTAAGVMuRyHB4I0al8GqBfoEZlp6FpISYdBp7PprFZhaK9JDAuDproQfLlor4htEtsUiSDuStZTdfrcobypUAKI4HAnZl2tkinn0WVTFFQrS+mb+jEzehzMz84btazjCMxVbRwlxtWkw7Js63aj3J4vS7XAt1b6NR0+etaWXzPmQmsuOGmRGWfmWRchbctGYdvFKmMq4l7ftJu4PWD0DBoU4ManYSoSG2faf2poIIL15GmDo+iLkBdhGOYa4DLMUKjKCljOkYbrDFox5RgSsaqgmGpHCOt73o+YAZsaU6srObj2F45gSn4UIaDY7QaMKMouohVgzNuHhgRoOioV26HnvGl6JpqN4QHeD5PmIElgAAwpQmAwCRM4OuRrS+tRVG2PRi5MexrSojM9iIW2VgSrx+LKkSgnqgOol3lIeb6hALAXG8xrvtIn6kSpgxAm00IosiEEzDMTjriKHj1hMEIoqE1iGeYdjmaePaYUJ2FarhYn0A5MhOSwRGVEp36-J6alUfCml0b6Onhci8UGJxnoSuBGj6Ml3YYReNnXll9mOdcBW5flOByQpVQfiyyk-mVlEabR2mMXVUr0EYgo+qGQHtJYHX8VZfbCTho53mUUD1K51zucVRYHl4hg6EEPisdYTHwkYgLDNKRjsSF0I7ZEOKRnxlm9lhtl9fQp31IVE2eVNJWqXNlULTVS1QXR5iAqidgzCYApui0u0g2lPUiRDUNKGIw2DaN8m5LDIC2l+RazepyNaajTFdJ4OM8hBnRejxAMKsDZ77WDvXHZDYBnZTFMYGN9PXWRfwUWzNEcwxTEGaWvgWA9Gg+P41hE2LoPpeDUvyAAXs+E6voRys+b6gbcW7czQu4tUDA44KrZCsogfyXqm6l3VXmTVvULb9CEDIaAQAaEBKAwtCMDIADWDAixZZskxHR14TbDBxwn5IIGnMjkBU9QANpGAAuk7P6gvQNi6HY2gPVCwr2HRbS6PoVG7lYQyh111kF5lUcx6XifpiweY4DlxAoNq5w5ylE8HRldn5NHJfx-PUAVy8Vc10o9dN5NhYq9uLqBMiwEWBKneWL3vKrSEiHDOBILDOPASO9LZFwPjDZujpQq6wAuxYwoEpj+n-qMT0254KG3ig9QB4sLaS1AbbKmA1nK03GhAtwi4sYeisPMQw9hay4wML6RKhhvrgiFksTsucw6T0OtPPBhF5aK0UjfZmKtcYuh9GBQwGIUS1kNgYT6Ewfqd26Fg82pNC7ZWLrSA+giGZM28j+KiLopjbkhPrcCuhaweGgT4Ux-hZj-XYSeTqQCJaRz4WIIQhAri5F0aQ388E26NnYuCZcEEXp1VxpjAmVYqKsOBEeYWQNOHbzcRou8XifF5BfFdYRBjfjbhGFoAUZjZjLj8L3YpmM1pWHCZVGYONVH5x4XvTJSYlCEA4GaAQsBSjUCkF+YosB7hgHICgbpvTWADIMfo6apU1rWDaO6EKa0goNMqfoPQ-gbC4x9MBQUGgmnhxaRDNpmoHJgCkHwCAXAsATL6dMpQQyRljPuVMkRcNb4+UPIiYpQI9y7ngsBYU3hFlrU9GYjwIRwhJI4VvVxOD3HZTOXkC5Vzri3IgG8-pgzaQvJQPgMo6L3h5LmW4IwUxXS7i9L4KwswtAgr7m3FEQxEq6EhEc7hu9Tn8CyQQvKNM-GkoRqres3FURxPsMiIEvdAUD0XIhHG8VEKOMBnClx2D1G8LEmIZOyQCjZ2SfCzVU87L+NmOMNo7hxjlgaYbd+kT+6aWCG-XcSrOXAKTinfI6BKg+vVXtNRBd-H8hxq6aUxtfQmCkf6WU9YWhgUqiETEEQAYYBkM5a0yAjUarjMwVgnAeB8EEMIUQ-iQjhtCm1WUEofTjGFFYAw3oQj2p9NRTleUWAAEVMgyHQP4gUIxOLQh8FoX2DLwoJtLI9cFWg63TESU4tCxNU4YFxJaAAqg+Xg-A0ACEIHoryZKEBcnep0NtwQuTSIdT7ClrpQoonmC0XQa1F1qucYG5I8tYBbr1MWvdB7-FckWdCYpD1+RujHTCOqVZSwB3GMiRcwxZgerSf6wod5MhrvpIyFAlQSWfI+TNRCpY2pVhCI+jmwohg8zilRA2Y7fSocRXkAoRR8g4ZEPh-x84DBmGlPjLko8IkDAXatLoi54Sd3hPBZjWq2NZsZkekVsGvTAR8C0ICVHwoTBdKYUKLbkSsQhHJ01KY0723NeCRZnpNkmFCqEMdsaUSrWYd0LkgcTOwo-SurltkUwvis8BUY4EMQ-3cA9G9cJcYjFCmtYIQRhhzEOd55dedjm7xTLAPU5IQ0oIbBYDw4x5wojCj7Kw+lZScV8PCT0pmWlZb1JAENCUDDhOs8CYI-pwSIgabFHGHtMGpdFlwz1IlKRWf8LBOzYJHNCmWl0Nura51uu+vV7lUtpL0DAKcAZAxCP5MQEw0YhS2xoJqhOqCiUh3OmleMCEKWl0jdSSx7V4kCL0As28c1asKoa2qlrSd4J6zdG+h0MEXoTbDZSQirVe8tuBeFSzKiDYfT0UMqYkETFNkg4Mu0aY4xFxQ6ezDk1JzNsfZyUVJHKtDYjDavMKTc6vSdyYtd-2Y6jNDEMutkB2VpLmpI+rKqi0mK+E8AbX0QJWXGCStD41Qbyd4WpkQi6Dt-HaHrMubiHmTJukghuaEXhdzPo8BCFbvPcHZRVy5L7k4affJsICbQSrDBAiHlFkUXRFluk7nReYY7nQwpJwr5pG3leEJcojg7x6Kv+yCBYEEtWuT+gep4UdpupEW-l7msPfP+oCqIYLl0wuUaA9vdYta8xDJei6EYy3SKToy3OlTw98MixTBdKFAWLQbBlTK+RO9gR+NfW4vFFCOfP0Zfz9LWWGBPvjm+w7maExkG8lCCCQUtimLSkRPSl3zokNDZD7n6fVum9z7V0BxbDnBQNOdEBSEXMh8CahO4MfzoG-pNnzM5TLMhd-Yi6cyTrgR6CygoiJ7BAhQhRf5vb7wxyt4a7tANidD6bDwPrzY+wOYNiBCc4hTNiPbvppajZoZ7zFyfYQCAbL6lQUQgiGygFuztDwjdYQjiZQiigZ5vqbyn5+bn7wEMCJzZb7rNbUGIAdBeC6DcRVheiSGYFwjAh6DAgmCKJWDaA+CwFkEHz0AADufAdQuQAAYicD2n2mgD9q0HQVMLyNMDjAguFDSnoOMF7L-KoQApPr5mNt-uQZ2jgCYf2qIarBYZDgwZ6EwZ7l0HeozoqkEBYhPiflPrwY3vwVfgEZspyPZohuxN6HIQgBJmAdIdtA5tCMHkQc9rDqahDOQYvPmAEbNJYdyFyIeHYQMM2qtG2GVDaozhoZUVoXPLlgERBLFtoPfAKFCEMCJs0MMG0IlNuCGIuJ-u4elokV4QfMXktl6A0TYQlP6D4DZkBH3uBMPKqtwQkZ4XASimrsRLUdoI1J0IZBSn4HAuEZIf5C1O4EMJ3GwqUaToruHsirykmOmiaPivUAAEpgAACOmQ1AZQBGSm7eKs+WEw6+OuVe4RChro1mI6iE0a3RUsFxHSXS9IkyOK9Qd4ducJsyKmKOFiEq0wPQNglSwQowwQ0EYE-GcR3xoeZ+SRBJGAnS2Kjya6KRMeIqkWmMf4-IwOdqD0vcGJ0IkObq7Q4wXBOapxpBPK3i7S-JRJPSDygyA6q+tJfg9JY6jJ9hFUWMkIoQDEDSnJJxHhGp+JAJ5yRK1ymKgpgy22u2ZaARFgIw8IxgGmFKDgoQjKoQq0AQ9qjmwIeJeEFxaK7pdyxJ+pZJHGep7yv+CJ3yfIXgtmfeW0Y6l2iAb+Yq7QAo2y7g8IcZ-xWprplySZWKKZmZTyOUbp9uopRYzCroHgi4i4dKesIKtg6egoxSJSbU0wNZGSLpqK7ZNyyZGZpJTyA6RugZ3Q386+A+v4qIQ6r8hsVZvIU59AKK5qpgbcIZ0wqJUKsqa0bQPo7EFiEoKGixJBr2ZqfpIGgBZe3siAhgxizoY+-Ib+xSX+-i9Cam5GmmPo1UjKe+iGypYEVYJgnK2WzAlJf+Ks-yUUmyJp9Bl5saQwDYJgTCa0Y+boRyIa0S8U56NaQIZ2ORrQwwaR3oNewEz5EQQAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as StandardPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./StandardPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as StandardPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"providerChange\"; provider: CloudProvider }\n          | { type: \"regionChange\"; region: CloudRegion }\n          | { type: \"sizeChange\"; size: Size }\n          | {\n              type: \"selectSubscription\";\n              subscription: MarketplaceSubscription;\n            }\n          | { type: \"selectPrepaid\" }\n          | { type: \"billingChange\" }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: StandardSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"standardPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isOverQuota\",\n              target: \"overQuota\",\n            },\n            {\n              cond: \"isInstanceUnavailable\",\n              target: \"instanceUnavailable\",\n            },\n            {\n              cond: \"isRegionsUnavailable\",\n              target: \"regionsUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        overQuota: {\n          tags: \"blocked\",\n        },\n        instanceUnavailable: {\n          tags: \"blocked\",\n        },\n        regionsUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitted: {\n                  entry: \"triggerSubmit\",\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitted\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  tags: \"creatable\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                provider: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"providerIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"providerInvalid\",\n                    },\n                    valid: {\n                      tags: \"providerValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      actions: \"setProvider\",\n                      cond: \"didProviderChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                region: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"regionIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"regionInvalid\",\n                    },\n                    valid: {\n                      tags: \"regionValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      actions: \"setRegion\",\n                      cond: \"didRegionChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noProviderOrRegion\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          cond: \"sizeIsDisabled\",\n                          target: \"disabled\",\n                        },\n                        {\n                          cond: \"billingRequiredButNotSelected\",\n                          target: \"waitingForQuota\",\n                        },\n                        {\n                          cond: \"sizeIsOverQuota\",\n                          target: \"overQuota\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    disabled: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeDisabled\",\n                    },\n                    waitingForQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeWaitingForQuota\",\n                    },\n                    overQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeOverQuota\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      target: \".validate\",\n                    },\n                    sizeChange: {\n                      actions: \"setSize\",\n                      cond: \"didSizeChange\",\n                      target: \".validate\",\n                    },\n                    billingChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n                billing: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"onlyPrepaid\",\n                          target: \"prepaidOnly\",\n                        },\n                        {\n                          cond: \"singleSubscription\",\n                          target: \"singleSubscription\",\n                        },\n                        {\n                          cond: \"onlySubscriptions\",\n                          target: \"onlySubscriptions\",\n                        },\n                        {\n                          description:\n                            \"user has both prepaid and marketplace subscriptions\",\n                          target: \"prepaidAndSubscriptions\",\n                        },\n                      ],\n                    },\n                    prepaidOnly: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\"],\n                      entry: \"setBillingToPrepaid\",\n                      type: \"final\",\n                    },\n                    singleSubscription: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\", \"singleSubscription\"],\n                      entry: \"setBillingToSubscription\",\n                      type: \"final\",\n                    },\n                    onlySubscriptions: {\n                      description:\n                        \"More than one subscription exist. The user needs to select one to procede.\",\n                      initial: \"invalid\",\n                      type: \"final\",\n                      states: {\n                        invalid: {},\n                        valid: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                      },\n                      on: {\n                        selectSubscription: [\n                          {\n                            actions: \"setBillingToSubscription\",\n                            cond: \"matchesSelectedProviderOrRHMarketplaceAndHasQuota\",\n                            target: \".valid\",\n                          },\n                          {\n                            cond: \"noSelectedProvider\",\n                            target: \".valid\",\n                          },\n                        ],\n                      },\n                    },\n                    prepaidAndSubscriptions: {\n                      description:\n                        \"The user has both prepaid quota and one or more subscription to a marketplace. The user needs to select one to procede.\",\n                      initial: \"empty\",\n                      type: \"final\",\n                      states: {\n                        empty: {},\n                        subscription: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                        prepaid: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                      },\n                      on: {\n                        selectSubscription: [\n                          {\n                            actions: \"setBillingToSubscription\",\n                            cond: \"matchesSelectedProviderOrRHMarketplaceAndHasQuota\",\n                            target: \".subscription\",\n                          },\n                          {\n                            cond: \"noSelectedProvider\",\n                            target: \".subscription\",\n                          },\n                        ],\n                        selectPrepaid: {\n                          actions: \"setBillingToPrepaid\",\n                          cond: \"hasPrepaidQuota\",\n                          target: \".prepaid\",\n                        },\n                      },\n                    },\n                  },\n                  on: {\n                    providerChange: {\n                      actions: \"unsetSubscription\",\n                      description:\n                        \"If a new provider is selected, deselect any previously selected billing option.\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#standardPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              ...(context.capabilities.defaultProvider\n                ? onProviderChange(\n                    context.capabilities.availableProviders,\n                    context.capabilities.defaultProvider\n                  )\n                : {}),\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setProvider: assign((context, { provider }) => {\n          return {\n            form: {\n              ...context.form,\n              ...onProviderChange(\n                context.capabilities.availableProviders,\n                provider\n              ),\n            },\n            sizes: undefined,\n          };\n        }),\n        setRegion: assign((context, { region }) => {\n          if (context.creationError === \"region-unavailable\") {\n            return {\n              form: { ...context.form, region },\n              sizes: undefined,\n              creationError: undefined,\n            };\n          }\n          return {\n            form: {\n              ...context.form,\n              region,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSize: assign((context, { size }) => ({\n          form: {\n            ...context.form,\n            size,\n          },\n        })),\n        setSizes: assign((context, event) => {\n          const sizes = event.data;\n          const smallestSize = sizes.sort((a, b) => a.quota - b.quota)[0];\n          return {\n            sizes,\n            form: {\n              ...context.form,\n              size: smallestSize,\n            },\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => {\n          return {\n            creationError: error,\n          };\n        }),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form> &\n            Pick<typeof context.form, \"billing\">;\n          const data: CreateKafkaFormData = {\n            plan: \"standard\",\n            name: form.name,\n            provider: form.provider,\n            region: form.region,\n            sizeId: form.size.id,\n            billing: form.billing,\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n        triggerBillingChange: send(\"billingChange\"),\n        setBillingToPrepaid: assign((context) => {\n          const form = { ...context.form };\n          form.billing = \"prepaid\";\n          return { form };\n        }),\n        setBillingToSubscription: assign((context, event) => {\n          const form = { ...context.form };\n          if (event.type === \"selectSubscription\") {\n            form.billing = event.subscription;\n          } else {\n            // single subscription, take it from the context\n            const ms = context.capabilities.marketplaceSubscriptions[0];\n            form.billing = {\n              marketplace: ms.marketplace,\n              subscription: ms.subscriptions[0],\n            };\n          }\n          return { form };\n        }),\n        unsetSubscription: assign((context) => {\n          const form = { ...context.form };\n          form.billing = undefined;\n          return { form };\n        }),\n      },\n      guards: {\n        isOverQuota: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"out-of-quota\",\n        isInstanceUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"instance-unavailable\",\n        isRegionsUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"regions-unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        providerIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableProviders || []).length > 0 &&\n            // must have selected a provider\n            selectedProviderInfo !== undefined\n          );\n        },\n        regionIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have selected a region\n            form.region !== undefined &&\n            // the region must be included in the capabilities for the provider\n            selectedProviderInfo?.regions.find((r) => r.id === form.region) !==\n              undefined\n          );\n        },\n        noProviderOrRegion: ({ form }) =>\n          form.provider === undefined || form.region === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) => sizes !== undefined && sizes.length === 0,\n        sizeIsDisabled: ({ form, capabilities }) => {\n          if (capabilities === undefined) return true;\n          return form.size?.isDisabled === true;\n        },\n        billingRequiredButNotSelected: ({ form }, _, meta) => {\n          if (meta.state.hasTag(\"noBilling\")) {\n            return false;\n          }\n          return form.billing === undefined;\n        },\n        sizeIsOverQuota: ({ form, capabilities }) => {\n          if (capabilities === undefined || !form.size) return true;\n          const availableQuota =\n            form.billing === \"prepaid\" || form.billing === undefined\n              ? capabilities.remainingPrepaidQuota\n              : capabilities.remainingMarketplaceQuota;\n          if (!availableQuota) return true;\n          return form.size.quota > availableQuota;\n        },\n        didProviderChange: (context, event) =>\n          context.form.provider !== event.provider,\n        didRegionChange: (context, event) =>\n          context.form.region !== event.region,\n        didSizeChange: (context, event) =>\n          context.form.size?.id !== event.size.id,\n        onlyPrepaid: (context) =>\n          context.capabilities.marketplaceSubscriptions.length === 0,\n        singleSubscription: (context) =>\n          context.capabilities.remainingPrepaidQuota === undefined &&\n          context.capabilities.marketplaceSubscriptions.flatMap(\n            (m) => m.subscriptions\n          ).length === 1,\n        onlySubscriptions: (context) =>\n          context.capabilities.remainingPrepaidQuota === undefined &&\n          context.capabilities.marketplaceSubscriptions.length > 0,\n        matchesSelectedProviderOrRHMarketplaceAndHasQuota: (\n          { form, capabilities },\n          { subscription }\n        ) =>\n          capabilities.remainingMarketplaceQuota !== undefined &&\n          capabilities.remainingMarketplaceQuota > 0 &&\n          (subscription.marketplace === \"rhm\" ||\n            form.provider === subscription.marketplace),\n        hasPrepaidQuota: (context) =>\n          context.capabilities.remainingPrepaidQuota !== undefined &&\n          context.capabilities.remainingPrepaidQuota > 0,\n        noSelectedProvider: ({ form }) => form.provider === undefined,\n      },\n    }\n  );\n","import { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateKafkaFormData,\n  CreateKafkaInstanceError,\n  TrialPlanInitializationData,\n  TrialSizes,\n} from \"../types\";\nimport { onProviderChange } from \"./shared\";\n\nexport type TrialPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: TrialPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    provider?: CloudProvider;\n    region?: CloudRegion;\n  };\n\n  // based on the form.provider and form.region selection\n  sizes: TrialSizes | undefined;\n\n  creationError: CreateKafkaInstanceError | undefined;\n};\n\nexport const TrialPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QBUBOBLAhgGwArcwDsBZTAYwAt1CwA6ANzAwDMBPAQXs3QICMf0AF1YBiRKAAOAe1hD0UwuJAAPRACYAbAA4AnLQ0AGNQBYArBo0BmHQHYNNywBoQrRDoO1bARjWmv54y8DY18AX1DnNCw8AhJyKhpaMgVmdCgAVwxCKFpYQUxBdNgRMlQwArAlaVlBeUUkFUQgtWdXBFNLY1o7LRDTG1NTLVNjG3DIjBx8IlJKajpkwlSMrJzmKVQAWwYcdAgRVLBsCABJQi5sPaqZOQUlVQQvLRs9NR1TI1Mdey0tNS1Wk1nqZaJodIEbEYTAZ7OMQFEprFZgkFik0plqGsNtsLnsSmUKtcanV7kCXqD3p9vjZfv9AQg1AYhrQDF4fH9jJ0aVo4QiYjN4vMkmiVpjaOstrlMPRMfjyoIwABldJkMhweANaq3eqgB5qSxqGwsgwmgzPHRBGxeemMrQeCwfAY6NT6s2mXmTflxOaJRbLDHZcXYqUy7JyioAUVQqA2RO1pIZBqNppN5st1pcTR04O6gX+9hMefdEXhnum3pRwqW6NWQa2B3QR1O512EDjtTuDQe-i+tD+Jpdxm0NhdpnpXlGXTNnIt-RCnOLE2i5eRQr9NbFh2OsFohEwmzouIgFTEmpuHZ1jQQxmG3VHfjUE7Zb3HGlGoK8Vo0-ksli0Vh0D1lyRQVfRFAM1kbbdd33MADmxZVeE2IR2xJLsmgNccbECWgvAsGwBkhBwb0sIDEQFH1UWrUVAy3CAdz3A8REYsAAGEKCIGBUM7XUMJaTNHg0QZQU5Axf0MYxRmwsivVXMDqIg8UoPo2gJBjGUICYHZLmPBVT0kc80N49o3lBQxgnBLkmQBATH20Wghy8WxnS0IJLA0GSV1Aqj-VrOidzUqQNKYeCtkQ5DBG4y9u0w2zLCePs33cxkmW0IdPJAyiq18zdlIC9S9hCwLgtQdjOMqM9iR4q8vFito7JBd4XhpGF-FGDKKMrdcaMgpsdzKKA6m0vYTyihNTEfY0TH-aFzGCccni6G8DGzf9WSE9KSz5Lysu6xT-NoAa6lCzZwpQyr43Qx46qaN4vFoawR1HT8Jv6DqKzXcC-Lyw6wEGhQRGKwrSo47IKoMqror48cTEsByOhItlLD8P93rknyN1on6joBnHCDKsGxqu2r+LaIJ3FoEYRytYYkZCNHvOyzHeug2QAC9D1bUaLovBNnjh2xnn-A1hgmmz6rtLRugMZrhhvJzF1LYDOs+hTvr63J0A52hsCkTAIFlCAFDoah6CkABrOhtsyrqvtyjX2boXX9cxBBTakMgCjqABtAwAF0ieM4x3k8O0jCc2qNDum0Bg0bpKXihxvmsYwGd2u2sYdrWnb1g2wyYGNUFUghBAlbZrZV+Scsz1ns513PXfdz2L19gOeaMq9g8asPHwtZKLRjs0+xRv5DHJzQ09ttX7drjmTrOyL2+qmLSfUC0uhMDRsysbRNH8SfVerlmVMdwGCs0kHysDmqboQSxgnuvD9THq1szCLayxtw-maUrO57xgmXEl5Q2uqvO+Zo9BBCsJCSwI5rA8g-srD6Vcf7+REEbRIeQKi0ArsgjGPVf7bmvt2QI90-BCx0PFWBXcbQPweoMLeidHyfAPignq6Dja5HyAqHBn9K74IgsQ9Q2g9CGBMOYACdgHBYU5KHay2FkbOhdOEEshApCaQ1CgPheCGBMHQGwTg3A+ACGEEI68YC8J6AtBHew35-wWDUKwugghPQAFVYCQDMW8ewuE+hsjZIMXwr4rFsgtLYp4Fgo5ONoC46Iri9xcB4JgXg2BwYgC1LzK6IQbR-j7FoJMYkhIRxpNEvGsB4nSiMck1JZjskCSCB4cEMtOQiNGDLLw0S9q1iwYUHc6RCCwHSEhIQCo2zAITM0ekQ4QTNSfhCbM9NEHkR0V0sUPSii5CGRFUZXj8mUwaayP4eFkb9HpNoOGkIVodBePYMSitcHoyZgQ9Zmj0mGWXogGk9I-weD+EMbMZpWTiVTks2SjNVm0WDKbVsXjg5xxlv+Zyj4CIWMRaCBhgwmQjD+KRUFO0p5HzrDiGF4ziaDD0P2KEQ5nijloStRKMIvjDmGMjTpGcsSSlgNKTEXiTRGleiaCaFprF0qlhNBWLomTHI8nir+bD9rBi5YwMZENLrGRMN8FkNIt4vGRSOWh2F9Ao1qu8Do+SZVLmWY8iFHLNhmJ-CCSlg5hy0vqX+SBtV2TPz-G8Nl08a4qRYrQfpggpAqgoJ40lxl-BqFBLoWBFhYEwn1E4epLwPVYr+K5dN9ztHWvZYQwNsFaBgE2BIUxUarwjilkJAYmh7DIxTVhTQuF+gcjsJQ38YxZX8KeftH6QboU6XtbfJysCWQdGnE1CaMs-WEoOkGo89rDUumZdmfof48Ljn-FLM0Tw7JOQsHO1BA7i1HkJJWh4nRY0WgGHhXQxhpzGGbXHfwNITAdt-LA49BCF2wXtWacc5hY3iPBEK5ovQf39o1kDC+wbCChvDZG1VmTo2Gusj4OcDghh2ByXYPse6wl3u-N2y1YL07+uPvlIKwNhq6TSRkjuV7-zww+P4NkQ4CKpvqi6e6IRmm6EZOu0jSsrXgoLQdWDWkh1XEvU0Do3RhzBzZEYb4ZgbSSRmS8MwbH77KJ7SsiTP0pNFyXXJhAd7KYOA5OSnQdowEukmvx7CgmVpNSg+raCJmAPi3UIC0O2gLK6HYx5meKk8bwcQ5QZDbzIYTK3p4N4nRAgfHzDCccQ5XjYW0AreKPxQsBv6n9Ia56FRmNgVLJy2E-DOiZPFHQMNx0zhHBxoSD6CtUd+v9QgtAZMqti2qmqwd9DWGpCjF0sCxxuuG50Fa35nQ-mkgZ-NlHC1Fe63RsxDgPB4Q+H+ecjIXz1P1EaGctigXDBEw88Tq2Dp4x8+OQVVnzK0yTO5Dra3Nba1Kwx95ID7CiPyXYL4wdDTfBtH3EbFlvxfsZLisj+Lv6-p+o7XrEAanmY4yCMehoTCHqEjaX4lXQeb38NvD7B1UdmZQ0x9QCnfCuXih8QYQQOgQ5HLhC0JohLaHwrmpBK350o7rgXWM5mLC7u-GCTkkltBTfqvYI0yMALzmnVdvNN2hd-xzi7bII6HP2C6GlTk+S-k+Ap8LjmD3bL-O6J6gYwRpn72W5rk9fUzG9HpJQ2NElqsvUCPD0T5GCXMzMSMb5Mth5Dn1N8Wm2holKpi4xj5DJ7OeEKbobT2ExJYXHd8XeIwRG2HVwL7y9rfOPAQeEIAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as TrialPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./TrialPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as TrialPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"providerChange\"; provider: CloudProvider }\n          | { type: \"regionChange\"; region: CloudRegion }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: TrialSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"TrialPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isTrialUsed\",\n              target: \"trialUsed\",\n            },\n            {\n              cond: \"isTrialUnavailable\",\n              target: \"trialUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        trialUsed: {\n          tags: \"blocked\",\n        },\n        trialUnavailable: {\n          tags: \"blocked\",\n        },\n        regionsUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitted: {\n                  entry: \"triggerSubmit\",\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitted\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                provider: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"providerIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"providerInvalid\",\n                    },\n                    valid: {\n                      tags: \"providerValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      actions: \"setProvider\",\n                      cond: \"didProviderChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                region: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"regionIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"regionInvalid\",\n                    },\n                    valid: {\n                      tags: \"regionValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      actions: \"setRegion\",\n                      cond: \"didRegionChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noProviderAndRegion\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#TrialPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              ...(context.capabilities.defaultProvider\n                ? onProviderChange(\n                    context.capabilities.availableProviders,\n                    context.capabilities.defaultProvider\n                  )\n                : {}),\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setProvider: assign((context, { provider }) => {\n          return {\n            form: {\n              ...context.form,\n              ...onProviderChange(\n                context.capabilities.availableProviders,\n                provider\n              ),\n            },\n            sizes: undefined,\n          };\n        }),\n        setRegion: assign((context, { region }) => {\n          if (context.creationError === \"region-unavailable\") {\n            return {\n              form: { ...context.form, region },\n              sizes: undefined,\n              creationError: undefined,\n            };\n          }\n          return {\n            form: {\n              ...context.form,\n              region,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSizes: assign((_context, event) => {\n          const sizes = event.data;\n          return {\n            sizes,\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => ({\n          creationError: error,\n        })),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form>;\n          const data: CreateKafkaFormData = {\n            plan: \"developer\",\n            name: form.name,\n            provider: form.provider,\n            region: form.region,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            sizeId: context.sizes!.trial.id,\n            billing: undefined,\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n      },\n      guards: {\n        isTrialUsed: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"used\",\n        isTrialUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        providerIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableProviders || []).length > 0 &&\n            // must have selected a provider\n            selectedProviderInfo !== undefined\n          );\n        },\n        regionIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have selected a region\n            form.region !== undefined &&\n            // the region must be included in the capabilities for the provider\n            selectedProviderInfo?.regions.find((r) => r.id === form.region) !==\n              undefined\n          );\n        },\n        noProviderAndRegion: ({ form }) =>\n          form.provider === undefined || form.region === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) =>\n          sizes !== undefined && sizes.standard.length === 0,\n        didProviderChange: (context, event) =>\n          context.form.provider !== event.provider,\n        didRegionChange: (context, event) =>\n          context.form.region !== event.region,\n      },\n    }\n  );\n","import type { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, EventFrom, forwardTo, send } from \"xstate\";\nimport type {\n  CloudProvidersInfo,\n  CreateKafkaFormData,\n  CreateKafkaInitializationData,\n  CreateKafkaInstanceError,\n  StandardPlanInitializationData,\n  StandardSizes,\n  TrialPlanInitializationData,\n  TrialSizes,\n} from \"../types\";\nimport {\n  StandardPlanMachine,\n  StandardPlanMachineContext,\n} from \"./StandardPlanMachine\";\nimport { TrialPlanMachine, TrialPlanMachineContext } from \"./TrialPlanMachine\";\n\ntype Quota =\n  | Pick<\n      StandardPlanInitializationData,\n      | \"plan\"\n      | \"remainingPrepaidQuota\"\n      | \"marketplaceSubscriptions\"\n      | \"remainingMarketplaceQuota\"\n      | \"instanceAvailability\"\n    >\n  | Pick<TrialPlanInitializationData, \"plan\" | \"instanceAvailability\">;\n\nexport type CreateKafkaInstanceMachineContext = {\n  quota: Quota | undefined;\n  providers: CloudProvidersInfo | undefined;\n  defaultProvider: CloudProvider | undefined;\n  capabilities: CreateKafkaInitializationData | undefined;\n};\n\nconst CreateKafkaInstanceMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMBOYCGAXMBpDAZgNYYCSAdrFhucmAHQA2A9hhAJblT0COArs2r1kACzDIinKAAIqNCBlQRp-QRgDEYVKmap6AB0bYCugLbD02PIRIU5tBizZTeAoaPGSus6uQVKVNwwETgA3ZmRsdmZyAG0ABgBdRFB9Zlh2LGjyFJAAD0QAFniAJnp4gGYAdkKATgAOeqr4qvrCgFYAGhAAT0QANir++n769tqq2sKARhKKjsKAX0XutEwcfGIySl86JlYOLlc1YTEJKR95RWVVanV7fxug6QxQjHYjACNGMFy0jKyMVyBQQxTKlRqDSaLTaXV6iHG8XoVXahX6UyqJVqJX6-WWq0sGxs23seych24twwp08Fwe10CanUzD4WGkzAIlz8DKpf3SmWywKKpXK1TqjWarQ63T6CHa8UK9Hqcw6JUK6palXxIDWVk2th2NDJBxcVJp5289ICVPU5GYXMejOoLzeHww31+SBA-wFQK9ILBoshEph0vhoPaw2hFRKasKbQa0yWKx1hOsWzsu0cJqOZqtEHUfIBgv9iCTU2RkZj03RYsjMoGyvo0yG40KJSq0wq02m9W1uqJGcNDn2zlzQXoEDAoTALH0WkLXp9gJypYQ5cVKP61drNXr4faFSRJVmdUmasjvf7af1JKzo4px3cZy8MinM7nWhd7y+H0yPU0bRdAMIwsBMVBzAHdMDVJbMx0pCcPAtN9p1nZh51Qb83U+P8sB6EJyHCSIVwSZIl35FchQQWpanaeh4y7JN5gqbFZgbOU1WRE96m3Bp+lRKoKmvdZoLvI04MfM0kNfaR3zQjCsN-Rh-3UOTP0wvhYEgItfVXUAQRouiGO7QpmNYkp2NMqolXqWZcSPCpRn6NFhL1YlM3Eh9TUQl8LjU9Cv1eH93VwgD-IUoLsJ+HTKLXQz6NskyzJPCzwwqdppnoWj4niaZ2kPepaiTaZXMHGD73JFwCDALBRAufQdFCdgp1QWB1Aa5gmpa2AXj8aR0CgbIesir5ovI4s-X0staNqegjzGcZ+hKHjeyqdj2jGcplu4moFSqKpStEjyR0qo5qtqkR6sa5qtDarQdD0QxjDMCwRNvY7jXg+hzrq7wOq626CKIqIYlImKSym9cMRsiY0RmaYFXiOFZUKfa5rqRy5mmWp4kGdpDve4dPsfH7Lr+67uvainbvZTCBqG6Q+HIEb3TG1IKIh-Jpsjeh2k7XHOw7QqWnY0Z6mbapakGNVqgR-GUygwnYK8rhVJiBg5BwV63KHZXTqgcHJq5hASlROj+lKCp6kqdUVvYq3Mr3ds0UaPLZgJ9yiY13xHSe8h6Gan57leT12YmvTjaxbd6NM+NDIVdLCkskUFmxyZt2cwYPd1+982kP36FgV4pHUKCAGU+GQOhYHgcbdKoxOjKR0p6nmYXlvt1Fyn6Lt1W7E9Jkc7Pys8vOC6LprVaggBRIDUENiOQSjioY7b+PTNRe2a152NbLy03M7y4exJHcKvwLwOwGDmcF6orFWl5i2Nt7toEYqUWpayrt5SW+z4ls4+H0GBn0wuPYuU80wVyrnAWuYd65rkbvRBUtQ6x9zaKLeMO8WhDB7PEKEtRAFe0nKhdS+cjD+wniXGec9b5rnvuLSMSNErxhmJUUWCMsrKmWngsEuJ5YpjtFOWBqY3qez1jmBCJxpJ0h9jyIItDIYI1SrKSM4tW6dmVB0TsaISoKxvGIiqEinzUnzAo42zRxYojmD3FEtk+bTFFkMZskYcS9mfiwwh4ivpmhAWYkEswGg2RwSxJosxSjrU4tjAePcEY8SKp4wx3ifK0m8CAxSIVlJ4T8QMfic1lrFVaMqeYDjwztjojxHhsYOxW1ssmAkoic6eX1sY7JCBWjsQ7LNKWjRKiLRxmieW9SdYjxOkY0mV1Oo3Vaq0msCoY7FCGOlWMsxkYIkxMiHh7RYyMPjEJPRDSRnExcJYCAso4GxUhrGQY5QMpjCSpedaExkRND5jorEFQ9lDLKifI5XBWmb3DC2TKlRGLVCxBeDoCTR49CoGAUwjNmaulGqHb0HMjYgkciiLK+UUFWRxt2VZbT1mt1GK0Fo-EOx4n2cMn53srgBAvhANmqLw53yaIqfi4xsQdnyu2d+aVqjONbmna2OJuxQpHGPchhdwEGzrhc42MZBXYwmD3CE-F+j21jCMZy8Ytxdlom0CVewpU0FacteUIwcXcpRKiOY7FsYrzBdbeMhUWJt2NcAkhAVQHSsvuaxos19rzUxelFsyiBjdhGC2UYLY4k9l0V8o6RC0lgMnnK85nMMVVPKJo2GbiirsOsrMd1uU1SWzqSImlQDiEfh9WQs18qs2IGWrk4N-9Q0ZUxJZJoSolWVBylYwqnrhDMFMIYGqKLlzNoQNUf+SomFoP2p2Ht1lcZ5Roj2IW4rqXfKAa0o87EaI3JyhtQS2Ntyo2WMsIAA */\n  createMachine(\n    {\n      context: {\n        providers: undefined,\n        defaultProvider: undefined,\n        quota: undefined,\n        capabilities: undefined,\n      },\n      predictableActionArguments: true,\n      tsTypes: {} as import(\"./CreateKafkaInstanceMachine.typegen\").Typegen0,\n      schema: {\n        context: {} as CreateKafkaInstanceMachineContext,\n        events: {} as\n          | {\n              type: \"standard quota available\";\n              quota: Pick<\n                StandardPlanInitializationData,\n                | \"remainingPrepaidQuota\"\n                | \"remainingMarketplaceQuota\"\n                | \"marketplaceSubscriptions\"\n              >;\n            }\n          | {\n              type: \"out of standard quota\";\n              quota: Pick<\n                StandardPlanInitializationData,\n                \"marketplaceSubscriptions\"\n              >;\n            }\n          | {\n              type: \"no standard quota available\";\n              hasTrialQuota: boolean;\n            }\n          | {\n              type: \"trial available\";\n              capabilities: TrialPlanInitializationData;\n            }\n          | { type: \"trial used\" }\n          | { type: \"developer available\" }\n          | { type: \"developer used\" }\n          | { type: \"developer unavailable\" }\n          | {\n              type: \"providers and regions available\";\n              providers: CloudProvidersInfo;\n              defaultProvider: CloudProvider | undefined;\n            }\n          | { type: \"providers or regions unavailable\" }\n          | { type: \"save\"; data: CreateKafkaFormData }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          checkStandardQuota: {\n            data: never;\n          };\n          checkDeveloperAvailability: {\n            data: never;\n          };\n          fetchProvidersWithRegions: {\n            data: never;\n          };\n          standardPlan: {\n            data: StandardPlanMachineContext;\n          };\n          trialPlan: {\n            data: TrialPlanMachineContext;\n          };\n        },\n      },\n      id: \"createKafkaInstance\",\n      initial: \"loading\",\n      states: {\n        loading: {\n          description: \"Fetch the data required to drive the creation flow\",\n          tags: \"loading\",\n          initial: \"quota\",\n          states: {\n            quota: {\n              initial: \"checking standard quota\",\n              states: {\n                \"checking standard quota\": {\n                  invoke: {\n                    src: \"checkStandardQuota\",\n                    onError: [\n                      {\n                        actions: \"setStandardUnavailable\",\n                        target: \"standard\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"standard quota available\": {\n                      actions: \"setStandardAvailable\",\n                      target: \"standard\",\n                    },\n                    \"out of standard quota\": {\n                      actions: \"setStandardOutOfQuota\",\n                      target: \"standard\",\n                    },\n                    \"no standard quota available\": {\n                      target: \"checking developer availability\",\n                    },\n                  },\n                },\n                standard: {\n                  type: \"final\",\n                  always: {\n                    target: \"#createKafkaInstance.loading.fetching providers\",\n                  },\n                },\n                developer: {\n                  type: \"final\",\n                  always: {\n                    target: \"#createKafkaInstance.loading.fetching providers\",\n                  },\n                },\n                \"checking developer availability\": {\n                  invoke: {\n                    src: \"checkDeveloperAvailability\",\n                    onError: [\n                      {\n                        actions: \"setDeveloperUnavailable\",\n                        target: \"developer\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"developer used\": {\n                      actions: \"setDeveloperUsed\",\n                      target: \"developer\",\n                    },\n                    \"developer available\": {\n                      actions: \"setDeveloperAvailable\",\n                      target: \"developer\",\n                    },\n                    \"developer unavailable\": {\n                      actions: \"setDeveloperUnavailable\",\n                      target: \"developer\",\n                    },\n                  },\n                },\n              },\n            },\n            \"fetching providers\": {\n              invoke: {\n                src: \"fetchProvidersWithRegions\",\n                onError: [\n                  {\n                    actions: \"setProvidersOrRegionsUnavailable\",\n                    target: \"ready\",\n                  },\n                ],\n              },\n              on: {\n                \"providers and regions available\": {\n                  actions: \"setProviders\",\n                  target: \"ready\",\n                },\n                \"providers or regions unavailable\": {\n                  actions: \"setProvidersOrRegionsUnavailable\",\n                  target: \"ready\",\n                },\n              },\n            },\n            ready: {\n              type: \"final\",\n              entry: \"setCapabilities\",\n            },\n          },\n          onDone: [\n            {\n              cond: \"standard plan\",\n              target: \"standard plan\",\n            },\n            {\n              cond: \"developer plan\",\n              target: \"developer plan\",\n            },\n            {\n              target: \"system unavailable\",\n            },\n          ],\n        },\n        \"system unavailable\": {\n          tags: \"systemUnavailable\",\n          type: \"final\",\n        },\n        \"standard plan\": {\n          invoke: {\n            src: \"standardPlan\",\n            id: \"standardPlanService\",\n          },\n          tags: \"standardPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToStandardPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        \"developer plan\": {\n          invoke: {\n            src: \"trialPlan\",\n            id: \"trialPlanService\",\n          },\n          tags: \"trialPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToTrialPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        complete: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        setDeveloperAvailable: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"available\" as const,\n          },\n        })),\n        setDeveloperUnavailable: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"unavailable\" as const,\n          },\n        })),\n        setDeveloperUsed: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"used\" as const,\n          },\n        })),\n        setStandardAvailable: assign((_, event) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"available\" as const,\n            remainingPrepaidQuota: event.quota.remainingPrepaidQuota,\n            marketplaceSubscriptions: event.quota.marketplaceSubscriptions,\n            remainingMarketplaceQuota: event.quota.remainingMarketplaceQuota,\n          },\n        })),\n        setStandardOutOfQuota: assign((_, event) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"out-of-quota\" as const,\n            marketplaceSubscriptions: event.quota.marketplaceSubscriptions,\n            remainingMarketplaceQuota: 0,\n            remainingPrepaidQuota: 0,\n          },\n        })),\n        setStandardUnavailable: assign((_) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"instance-unavailable\" as const,\n            marketplaceSubscriptions: [],\n            remainingMarketplaceQuota: 0,\n            remainingPrepaidQuota: 0,\n          },\n        })),\n        setProviders: assign((_, event) => {\n          return {\n            providers: event.providers,\n            defaultProvider: event.defaultProvider,\n          };\n        }),\n        setProvidersOrRegionsUnavailable: assign((context) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const quota = context.quota!;\n          if (quota.plan === \"standard\") {\n            quota.instanceAvailability = \"regions-unavailable\";\n          } else {\n            quota.instanceAvailability = \"unavailable\";\n          }\n          return {\n            providers: [],\n            quota,\n          };\n        }),\n        setCapabilities: assign((context) => {\n          const { providers, defaultProvider, quota } = context;\n          if (!providers || !quota) {\n            throw new Error(\"unexpected condition, no providers or quota\");\n          }\n          if (quota.plan === \"standard\") {\n            const capabilities: StandardPlanInitializationData = {\n              plan: \"standard\",\n              availableProviders: providers,\n              defaultProvider,\n              instanceAvailability: quota.instanceAvailability,\n              marketplaceSubscriptions: quota.marketplaceSubscriptions,\n              remainingMarketplaceQuota: quota.remainingMarketplaceQuota,\n              remainingPrepaidQuota: quota.remainingPrepaidQuota,\n            };\n            return { capabilities };\n          } else {\n            const capabilities: TrialPlanInitializationData = {\n              plan: \"developer\",\n              availableProviders: providers,\n              defaultProvider,\n              instanceAvailability: quota.instanceAvailability,\n            };\n            return { capabilities };\n          }\n        }),\n        notifyCreateErrorToStandardPlan: forwardTo(\"standardPlanService\"),\n        notifyCreateErrorToTrialPlan: send(\n          (_, event) => {\n            return { type: \"createError\", error: event.error };\n          },\n          { to: \"trialPlanService\" }\n        ),\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n      },\n      guards: {\n        \"standard plan\": (context) => context.quota?.plan === \"standard\",\n        \"developer plan\": (context) => context.quota?.plan === \"developer\",\n      },\n    }\n  );\n\ntype EventTypes = Pick<\n  EventFrom<typeof CreateKafkaInstanceMachine>,\n  \"type\"\n>[\"type\"];\n\ntype EventOptions<E extends EventTypes> = Omit<\n  EventFrom<typeof CreateKafkaInstanceMachine, E>,\n  \"type\"\n>;\n\nexport type CreateKafkaInstanceServices = {\n  checkStandardQuota: (events: {\n    onOutOfQuota: (p: EventOptions<\"out of standard quota\">) => void;\n    onQuotaAvailable: (p: EventOptions<\"standard quota available\">) => void;\n    onNoQuotaAvailable: (\n      p: EventOptions<\"no standard quota available\">\n    ) => void;\n  }) => void;\n  checkDeveloperAvailability: (events: {\n    onUsed: () => void;\n    onAvailable: () => void;\n    onUnavailable: () => void;\n  }) => void;\n  fetchProvidersWithRegions: (\n    plan: \"standard\" | \"developer\",\n    events: {\n      onAvailable: (p: EventOptions<\"providers and regions available\">) => void;\n      onUnavailable: () => void;\n    }\n  ) => void;\n  getStandardSizes: (\n    provider: CloudProvider,\n    region: CloudRegion\n  ) => Promise<StandardSizes>;\n  getTrialSizes: (\n    provider: CloudProvider,\n    region: CloudRegion\n  ) => Promise<TrialSizes>;\n  onCreate: (\n    data: CreateKafkaFormData,\n    onSuccess: () => void,\n    onError: (error: CreateKafkaInstanceError) => void\n  ) => void;\n};\n\nexport function makeCreateKafkaInstanceMachine({\n  checkStandardQuota: checkStandardQuotaCb,\n  checkDeveloperAvailability: checkDeveloperAvailabilityCb,\n  fetchProvidersWithRegions: fetchProvidersWithRegionsCb,\n  getStandardSizes: getStandardSizesCb,\n  getTrialSizes: getTrialSizesCb,\n  onCreate,\n}: CreateKafkaInstanceServices) {\n  return CreateKafkaInstanceMachine.withConfig({\n    services: {\n      checkStandardQuota: () => {\n        return (send) =>\n          checkStandardQuotaCb({\n            onNoQuotaAvailable: ({ hasTrialQuota }) => {\n              send({ type: \"no standard quota available\", hasTrialQuota });\n            },\n            onOutOfQuota: ({ quota }) => {\n              send({ type: \"out of standard quota\", quota });\n            },\n            onQuotaAvailable: ({ quota }) => {\n              send({ type: \"standard quota available\", quota });\n            },\n          });\n      },\n      checkDeveloperAvailability: () => {\n        return (send) => {\n          checkDeveloperAvailabilityCb({\n            onAvailable: () => send(\"developer available\"),\n            onUsed: () => send(\"developer used\"),\n            onUnavailable: () => send(\"developer unavailable\"),\n          });\n        };\n      },\n      fetchProvidersWithRegions: (context) => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const instanceType = context.quota!.plan;\n        return (send) => {\n          fetchProvidersWithRegionsCb(instanceType, {\n            onAvailable: ({ providers, defaultProvider }) =>\n              send({\n                type: \"providers and regions available\",\n                providers,\n                defaultProvider,\n              }),\n            onUnavailable: () => send(\"providers or regions unavailable\"),\n          });\n        };\n      },\n      createInstance: (_context, event) => {\n        const form = event.data;\n\n        return (send) => {\n          function onSuccess() {\n            send(\"createSuccess\");\n          }\n\n          function onError(error: CreateKafkaInstanceError) {\n            send({ type: \"createError\", error });\n          }\n\n          onCreate(\n            {\n              plan: form.plan,\n              name: form.name,\n              provider: form.provider,\n              region: form.region,\n              sizeId: form.sizeId,\n              billing: form.billing,\n            },\n            onSuccess,\n            onError\n          );\n        };\n      },\n      standardPlan: (context) => {\n        return StandardPlanMachine.withContext({\n          capabilities: context.capabilities as StandardPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getStandardSizesCb(form.provider, form.region);\n            },\n          },\n        });\n      },\n      trialPlan: (context) => {\n        return TrialPlanMachine.withContext({\n          capabilities: context.capabilities as TrialPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getTrialSizesCb(form.provider, form.region);\n            },\n          },\n        });\n      },\n    },\n  });\n}\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { CreateKafkaInstanceServices } from \"./CreateKafkaInstanceMachine\";\nimport { makeCreateKafkaInstanceMachine } from \"./CreateKafkaInstanceMachine\";\n\nexport const CreateKafkaInstanceContext = createContext<{\n  service: ActorRefFrom<ReturnType<typeof makeCreateKafkaInstanceMachine>>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport const CreateKafkaInstanceProvider: FunctionComponent<\n  CreateKafkaInstanceServices\n> = ({\n  onCreate,\n  checkStandardQuota,\n  checkDeveloperAvailability,\n  fetchProvidersWithRegions,\n  getStandardSizes,\n  getTrialSizes,\n  children,\n}) => {\n  const service = useInterpret(\n    () =>\n      makeCreateKafkaInstanceMachine({\n        checkStandardQuota,\n        checkDeveloperAvailability,\n        fetchProvidersWithRegions,\n        getStandardSizes,\n        getTrialSizes,\n        onCreate,\n      }),\n    { devTools: true }\n  );\n  return (\n    <CreateKafkaInstanceContext.Provider value={{ service }}>\n      {children}\n    </CreateKafkaInstanceContext.Provider>\n  );\n};\n","export const LogoAWS = new URL(\"./Logo-AWS.svg\", import.meta.url)\n  .href;\nexport const LogoAzure = new URL(\n  \"./Logo-Azure.svg\",\n  import.meta.url\n).href;\nexport const LogoGCP = new URL(\"./Logo-GCP.svg\", import.meta.url)\n  .href;\nexport const LogoRedhat = new URL(\n  \"./Logo-Redhat.svg\",\n  import.meta.url\n).href;","import type { FunctionComponent } from \"react\";\nimport { LogoAWS } from \"./images\";\n\nexport const AWSLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoAWS} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoAzure } from \"./images\";\n\nexport const AzureLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoAzure} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoGCP } from \"./images\";\n\nexport const GCPLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoGCP} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Gallery,\n  GalleryItem,\n  HelperText,\n  HelperTextItem,\n  Tile,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { MarketPlace } from \"ui-models/src/models/kafka\";\nimport { AWSLogo, AzureLogo, GCPLogo, RedhatLogo } from \"../../Logos\";\n\nexport type BillingTilesProps = {\n  value: \"prepaid\" | string | undefined;\n  hasPrepaid: boolean;\n  subscriptions: {\n    marketplace: MarketPlace;\n    subscription: string;\n    isDisabled: boolean;\n  }[];\n  isPrepaidOverQuota: boolean;\n  prepaidQuota: number;\n  isMarketplaceOverQuota: boolean;\n  marketplaceQuota: number;\n  onPrepaid: () => void;\n  onSubscription: (marketplace: MarketPlace, subscription: string) => void;\n  validated?: SelectProps[\"validated\"];\n};\nexport const BillingTiles: VoidFunctionComponent<BillingTilesProps> = ({\n  value,\n  hasPrepaid,\n  subscriptions,\n  isPrepaidOverQuota,\n  prepaidQuota,\n  isMarketplaceOverQuota,\n  marketplaceQuota,\n  onPrepaid,\n  onSubscription,\n  validated,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const marketplaces: { [key in MarketPlace]: string } = {\n    aws: t(\"billing.marketplace_aws\"),\n    azure: t(\"billing.marketplace_azure\"),\n    gcp: t(\"billing.marketplace_gcp\"),\n    rhm: t(\"billing.marketplace_rh\"),\n  };\n  return (\n    <>\n      <Flex\n        role=\"listbox\"\n        aria-label={t(\"select_billing\")}\n        direction={{ default: \"column\", md: \"row\" }}\n      >\n        {hasPrepaid && (\n          <Flex\n            flex={{ default: \"flex_1\" }}\n            direction={{ default: \"column\" }}\n            spaceItems={{ default: \"spaceItemsSm\" }}\n          >\n            <span className=\"pf-c-form__label\">\n              <span className=\"pf-c-form__label-text\">\n                {t(\"billing.prepaid\")}\n              </span>\n            </span>\n            <FlexItem flex={{ default: \"flex_1\" }}>\n              <Tile\n                className={\"pf-u-w-100\"}\n                title={t(\"billing.prepaid_option\")}\n                icon={tiles[\"rhm\"]}\n                isDisabled={isPrepaidOverQuota}\n                isStacked={true}\n                isSelected={value === \"prepaid\"}\n                onClick={onPrepaid}\n              >\n                &nbsp;\n              </Tile>\n            </FlexItem>\n            {isPrepaidOverQuota && prepaidQuota > 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.prepaid_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {isPrepaidOverQuota && prepaidQuota === 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.prepaid_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </Flex>\n        )}\n        {subscriptions.length > 0 && (\n          <Flex\n            flex={{ default: \"flex_1\" }}\n            direction={{ default: \"column\" }}\n            spaceItems={{ default: \"spaceItemsSm\" }}\n          >\n            {hasPrepaid && (\n              <span className=\"pf-c-form__label\">\n                <span className=\"pf-c-form__label-text\">\n                  {t(\"billing.marketplace\")}\n                </span>\n              </span>\n            )}\n            <Gallery hasGutter={true}>\n              {subscriptions.map(\n                ({ marketplace, subscription, isDisabled }) => (\n                  <GalleryItem key={`tile-${subscription}`}>\n                    <Tile\n                      className={\"pf-u-w-100\"}\n                      title={marketplaces[marketplace]}\n                      icon={tiles[marketplace]}\n                      isStacked={true}\n                      isSelected={value === subscription}\n                      isDisabled={isDisabled || isMarketplaceOverQuota}\n                      onClick={() => onSubscription(marketplace, subscription)}\n                    >\n                      {subscription}\n                    </Tile>\n                  </GalleryItem>\n                )\n              )}\n            </Gallery>\n            {isMarketplaceOverQuota && marketplaceQuota > 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.marketplace_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {isMarketplaceOverQuota && marketplaceQuota === 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.marketplace_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </Flex>\n        )}\n      </Flex>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-billing-option\"\n        name=\"billing\"\n        validated={validated}\n        onChange={(value) => {\n          if (value === \"prepaid\") {\n            onPrepaid();\n          } else {\n            const s = subscriptions.find((s) => s.marketplace === value);\n            if (s) {\n              onSubscription(s.marketplace, s.subscription);\n            }\n          }\n        }}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_billing\")}\n          />,\n          hasPrepaid ? (\n            <FormSelectOption\n              key={\"prepaid\"}\n              value={\"prepaid\"}\n              label={`prepaid`}\n            />\n          ) : null,\n          subscriptions.map(({ marketplace, subscription, isDisabled }) => {\n            return (\n              <FormSelectOption\n                key={`select-option-${subscription}`}\n                value={subscription}\n                label={`${marketplace} - ${subscription}`}\n                isDisabled={isDisabled}\n              />\n            );\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n\nconst tiles: { [id in MarketPlace]: JSX.Element } = {\n  aws: <AWSLogo />,\n  gcp: <GCPLogo />,\n  azure: <AzureLogo />,\n  rhm: <RedhatLogo />,\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoRedhat } from \"./images\";\n\nexport const RedhatLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoRedhat} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Skeleton,\n  Tile,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { CloudProvider } from \"ui-models/src/models/kafka\";\nimport { AWSLogo, AzureLogo, GCPLogo } from \"../../Logos\";\nimport type { CloudProviderInfo } from \"../types\";\n\nexport type CloudProvidersTilesProps = {\n  providers: (CloudProviderInfo & { isDisabled?: boolean })[];\n  value: CloudProvider | undefined;\n  onChange: (provider: CloudProvider) => void;\n  isDisabled: boolean;\n  validated?: SelectProps[\"validated\"];\n};\nexport const CloudProvidersTiles: VoidFunctionComponent<\n  CloudProvidersTilesProps\n> = ({ providers, value, onChange, isDisabled, validated }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      {providers.length === 0 && (\n        <Skeleton\n          className=\"pf-m-text-4xl\"\n          screenreaderText=\"Loading contents\"\n        />\n      )}\n      <div role=\"listbox\" aria-label={t(\"select_cloud_provider\")}>\n        <Flex\n          justifyContent={{ default: \"justifyContentSpaceBetween\" }}\n          spacer={{ default: \"spacerNone\" }}\n          spaceItems={{ default: \"spaceItemsXs\" }}\n        >\n          {providers.map(\n            ({ id, displayName, isDisabled: providerDisabled }) => (\n              <FlexItem grow={{ default: \"grow\" }} key={id}>\n                <Tile\n                  className={\"pf-u-w-100\"}\n                  title={displayName}\n                  icon={tiles[id]}\n                  isStacked={true}\n                  isSelected={value === id}\n                  isDisabled={providerDisabled || isDisabled}\n                  onClick={() => onChange(id)}\n                >\n                  {(providerDisabled || isDisabled) &&\n                    t(\"billing.provider_incompatible_with_current_billing\")}\n                  &nbsp;\n                </Tile>\n              </FlexItem>\n            )\n          )}\n        </Flex>\n      </div>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-cloud-provider-option\"\n        name=\"cloud-provider\"\n        isDisabled={isDisabled}\n        validated={validated}\n        onChange={(value) => onChange(value as CloudProvider)}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_cloud_provider\")}\n          />,\n          providers.map(({ id, displayName }, index) => {\n            return (\n              <FormSelectOption key={index} value={id} label={displayName} />\n            );\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n\nconst tiles: { [id in CloudProvider]: JSX.Element } = {\n  aws: <AWSLogo />,\n  gcp: <GCPLogo />,\n  azure: <AzureLogo />,\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { FormEvent, VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { CloudProvider, MarketPlace } from \"ui-models/src/models/kafka\";\nimport type {\n  FieldInstanceNameProps,\n  FieldSizeProps,\n  InstanceInfoProps,\n} from \"./components\";\nimport {\n  FieldAZ,\n  FieldBillingTiles,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldInstanceName,\n  FieldSize,\n  FormAlerts,\n  InstanceInfo,\n  InstanceInfoSkeleton,\n  ModalAlertsStandardPlan,\n} from \"./components\";\nimport { useStandardPlanMachine } from \"./machines\";\n\nexport type StandardInstanceFormProps = {\n  formId: string;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n  subscriptionOptionsHref: string;\n};\n\nexport const StandardInstanceForm: VoidFunctionComponent<\n  StandardInstanceFormProps\n> = ({\n  formId,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n  subscriptionOptionsHref,\n}) => {\n  const {\n    isBillingSelectionRequired,\n    isBillingSingleMarketplace,\n    capabilities,\n    selectedSize,\n    billingType,\n    error,\n    onCreate,\n  } = useStandardPlanMachine();\n\n  const onSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      onCreate();\n    },\n    [onCreate]\n  );\n\n  const instanceInfoBilling: InstanceInfoProps[\"billing\"] = (() => {\n    if (!isBillingSelectionRequired) {\n      if (isBillingSingleMarketplace === false) {\n        return {\n          value: \"prepaid\",\n          subscriptionOptionsHref,\n          type: billingType,\n        };\n      } else {\n        return {\n          value: isBillingSingleMarketplace,\n          subscriptionOptionsHref,\n          type: billingType,\n        };\n      }\n    }\n    return undefined;\n  })();\n\n  return (\n    <>\n      <ModalAlertsStandardPlan\n        instanceAvailability={capabilities.instanceAvailability}\n        onClickContactUs={onClickContactUs}\n      />\n\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <FormAlerts error={error} onClickContactUS={onClickContactUs} />\n          <Form onSubmit={onSubmit} id={formId}>\n            <ConnectedFieldInstanceName />\n            <ConnectedFieldCloudProvider />\n            <ConnectedFieldCloudRegion />\n            <ConnectedFieldAZ />\n            <ConnectedFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n            {isBillingSelectionRequired && (\n              <ConnectedBillingTiles\n                subscriptionOptionsHref={subscriptionOptionsHref}\n              />\n            )}\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          {selectedSize === undefined ? (\n            <InstanceInfoSkeleton\n              isTrial={false}\n              onClickQuickStart={onClickQuickStart}\n            />\n          ) : (\n            <InstanceInfo\n              isTrial={false}\n              trialDurationInHours={undefined}\n              ingress={selectedSize.ingress}\n              egress={selectedSize.egress}\n              storage={selectedSize.storage}\n              maxPartitions={selectedSize.maxPartitions}\n              connections={selectedSize.connections}\n              connectionRate={selectedSize.connectionRate}\n              messageSize={selectedSize.messageSize}\n              onClickQuickStart={onClickQuickStart}\n              streamingUnits={selectedSize.displayName}\n              billing={instanceInfoBilling}\n            />\n          )}\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const ConnectedFieldInstanceName: VoidFunctionComponent = () => {\n  const {\n    form,\n    isNameTaken,\n    isNameInvalid,\n    isNameEmpty,\n    isNameError,\n    isFormEnabled,\n    setName,\n  } = useStandardPlanMachine();\n\n  const validity: FieldInstanceNameProps[\"validity\"] = (() => {\n    if (isNameTaken) {\n      return \"taken\";\n    } else if (isNameInvalid) {\n      return \"invalid\";\n    } else if (isNameEmpty && isNameError) {\n      return \"required\";\n    }\n    return \"valid\";\n  })();\n\n  return (\n    <FieldInstanceName\n      value={form.name || \"\"}\n      validity={validity}\n      isDisabled={!isFormEnabled}\n      onChange={setName}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudProvider: VoidFunctionComponent = () => {\n  const {\n    form,\n    capabilities,\n    isProviderError,\n    isFormEnabled,\n    isBillingSingleMarketplace,\n    setProvider,\n  } = useStandardPlanMachine();\n\n  const providers =\n    isBillingSingleMarketplace &&\n    isBillingSingleMarketplace.marketplace !== \"rhm\"\n      ? capabilities.availableProviders.map((p) => ({\n          ...p,\n          isDisabled: p.id !== isBillingSingleMarketplace.marketplace,\n        }))\n      : capabilities.availableProviders;\n\n  return (\n    <FieldCloudProvider\n      isValid={!isProviderError}\n      providers={providers}\n      value={form.provider}\n      isDisabled={!isFormEnabled}\n      onChange={setProvider}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudRegion: VoidFunctionComponent = () => {\n  const {\n    form,\n    selectedProvider,\n    selectedSize,\n    isRegionError,\n    isFormEnabled,\n    capabilities,\n    error,\n    setRegion,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldCloudRegion\n      validity={\n        isRegionError\n          ? \"required\"\n          : error === \"region-unavailable\" ||\n            capabilities.instanceAvailability === \"regions-unavailable\"\n          ? \"region-unavailable\"\n          : \"valid\"\n      }\n      regions={selectedProvider?.regions}\n      value={form.region}\n      isDisabled={!isFormEnabled}\n      isSizeUnavailable={selectedSize?.isDisabled || false}\n      onChange={setRegion}\n    />\n  );\n};\n\nexport const ConnectedFieldAZ: VoidFunctionComponent = () => {\n  const { isFormEnabled } = useStandardPlanMachine();\n\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={!isFormEnabled}\n      onChange={() => false} // AZ is defined by the backend, we just visualize the value here\n    />\n  );\n};\n\nexport const ConnectedFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  const {\n    form,\n    sizes,\n    isSizeOverQuota,\n    isSizeDisabled,\n    isSizeError,\n    isSizeLoadingError,\n    isBillingSelectionRequired,\n    isFormEnabled,\n    isLoadingSizes,\n    isLoading,\n    setSize,\n    remainingQuota,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldSize\n      value={form.size?.quota}\n      sizes={sizes}\n      remainingQuota={isBillingSelectionRequired ? undefined : remainingQuota}\n      isDisabled={!isFormEnabled || sizes === undefined}\n      isLoading={isLoading || isLoadingSizes}\n      isError={isSizeError}\n      isLoadingError={isSizeLoadingError}\n      validity={\n        isSizeOverQuota ? \"out-of-quota\" : isSizeDisabled ? \"required\" : \"valid\"\n      }\n      onChange={setSize}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n\nfunction isMarketplaceDisabled(\n  marketplace: MarketPlace,\n  selectedProvider: CloudProvider | undefined\n) {\n  if (marketplace === \"rhm\") {\n    return false;\n  } else if (selectedProvider) {\n    return marketplace !== selectedProvider;\n  }\n  return false;\n}\n\nexport const ConnectedBillingTiles: VoidFunctionComponent<{\n  subscriptionOptionsHref: string;\n}> = ({ subscriptionOptionsHref }) => {\n  const {\n    form,\n    capabilities,\n    selectedBilling,\n    billingType,\n    isBillingPrepaidAvailable,\n    isSizeOverQuota,\n    isBillingError,\n    isBillingPrepaidOverQuota,\n    isBillingMarketplaceOverQuota,\n    setBillingPrepaid,\n    setBillingSubscription,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldBillingTiles\n      value={\n        selectedBilling === \"prepaid\"\n          ? \"prepaid\"\n          : selectedBilling?.subscription\n      }\n      hasPrepaid={isBillingPrepaidAvailable}\n      subscriptions={capabilities.marketplaceSubscriptions.flatMap((mq) =>\n        mq.subscriptions.map((subscription) => ({\n          marketplace: mq.marketplace,\n          subscription,\n          isDisabled: isMarketplaceDisabled(mq.marketplace, form.provider),\n        }))\n      )}\n      isPrepaidOverQuota={isBillingPrepaidOverQuota}\n      prepaidQuota={capabilities.remainingPrepaidQuota || 0} // we can default to 0 here just to make TS happy, we will have the info here\n      isMarketplaceOverQuota={isBillingMarketplaceOverQuota}\n      marketplaceQuota={capabilities.remainingMarketplaceQuota || 0} // we can default to 0 here just to make TS happy, we will have the info here\n      onPrepaid={setBillingPrepaid}\n      onSubscription={setBillingSubscription}\n      isValid={!isSizeOverQuota && !isBillingError}\n      billingType={billingType}\n      subscriptionOptionsHref={subscriptionOptionsHref}\n    />\n  );\n};\n","import { DropdownGroup } from \"@patternfly/react-core\";\nimport { ActionsColumn } from \"@patternfly/react-table\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type KafkaInstanceActionsProps = {\n  onDetails: () => void;\n  onConnection: () => void;\n  canOpenConnection: boolean;\n  canChangeOwner: boolean;\n  onChangeOwner: () => void;\n  canDelete: boolean;\n  onDelete: () => void;\n};\n\nexport const KafkaInstanceActions: VoidFunctionComponent<\n  KafkaInstanceActionsProps\n> = ({\n  onDetails,\n  onConnection,\n  canOpenConnection,\n  canChangeOwner,\n  onChangeOwner,\n  canDelete,\n  onDelete,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <ActionsColumn\n      rowData={hackZIndex}\n      items={[\n        {\n          customChild: (\n            <DropdownGroup\n              label={t(\"table.actions.view-instance-information\")}\n            />\n          ),\n        },\n        {\n          title: t(\"table.actions.details\"),\n          onClick: onDetails,\n        },\n        {\n          title: t(\"table.actions.connection\"),\n          ...(!canOpenConnection\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_see_connections\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onConnection,\n              }),\n        },\n        {\n          isSeparator: true,\n        },\n        {\n          title: t(\"table.actions.change-owner\"),\n          ...(!canChangeOwner\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_change_owner\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onChangeOwner,\n              }),\n        },\n        {\n          title: t(\"table.actions.delete\"),\n          ...(!canDelete\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_delete_kafka\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onDelete,\n              }),\n        },\n      ]}\n    />\n  );\n};\n\nconst hackZIndex = {\n  actionProps: {\n    style: { zIndex: 9999 },\n  },\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { KafkaInstanceActionsProps } from \"./KafkaInstanceActions\";\nimport { KafkaInstanceActions } from \"./KafkaInstanceActions\";\n\ntype Sections =\n  | \"dashboard\"\n  | \"topics\"\n  | \"consumer\"\n  | \"permissions\"\n  | \"settings\";\n\nexport type DataPlaneHeaderProps = {\n  instancesHref: string;\n  instanceName: string;\n  activeSection: Sections;\n  sectionsHref: { [key in Sections]: string };\n} & KafkaInstanceActionsProps;\n\nexport const DataPlaneHeader: VoidFunctionComponent<DataPlaneHeaderProps> = ({\n  instancesHref,\n  instanceName,\n  activeSection,\n  sectionsHref,\n  ...actionsProps\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <Breadcrumb ouiaId={\"breadcrumb\"}>\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instancesHref}>{t(\"common:kafka_instance\")}</Link>\n            )}\n          />\n          <BreadcrumbItem isActive={true}>{instanceName}</BreadcrumbItem>\n        </Breadcrumb>\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <LevelItem>\n            <TextContent>\n              <Text component=\"h1\">{instanceName}</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <KafkaInstanceActions {...actionsProps} />\n          </LevelItem>\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        className=\"pf-c-page__main-tabs\"\n        hasShadowBottom={true}\n      >\n        <Nav\n          variant=\"tertiary\"\n          data-testid=\"pageKafka-tabProperties\"\n          className=\"pf-u-px-sm-on-xl\"\n        >\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabDashboard\"\n              id=\"dashboard-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.dashboard\")}\n              ouiaId={\"tab-Dashboard\"}\n              isActive={activeSection === \"dashboard\"}\n            >\n              <Link to={sectionsHref[\"dashboard\"]}>\n                {t(\"dataPlaneNavigation.dashboard\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabTopics\"\n              id=\"topics-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.topics\")}\n              ouiaId={\"tab-Topics\"}\n              isActive={activeSection === \"topics\"}\n            >\n              <Link to={sectionsHref[\"topics\"]}>\n                {t(\"dataPlaneNavigation.topics\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabConsumers\"\n              id=\"consumer-groups-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.consumer_groups\")}\n              ouiaId={\"tab-Consumers\"}\n              isActive={activeSection === \"consumer\"}\n            >\n              <Link to={sectionsHref[\"consumer\"]}>\n                {t(\"dataPlaneNavigation.consumer_groups\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabPermissions\"\n              id=\"permissions-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.permissions\")}\n              ouiaId={\"tab-Permissions\"}\n              isActive={activeSection === \"permissions\"}\n            >\n              <Link to={sectionsHref[\"permissions\"]}>\n                {t(\"dataPlaneNavigation.permissions\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabSettings\"\n              id=\"settings-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.settings\")}\n              ouiaId={\"tab-Settings\"}\n              isActive={activeSection === \"settings\"}\n            >\n              <Link to={sectionsHref[\"settings\"]}>\n                {t(\"dataPlaneNavigation.settings\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n      </PageSection>\n    </>\n  );\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { KafkaInstanceActionsProps } from \"./KafkaInstanceActions\";\nimport { KafkaInstanceActions } from \"./KafkaInstanceActions\";\n\ntype Sections = \"consumer\" | \"messages\" | \"properties\" | \"schemas\";\n\nexport type DataPlaneTopicHeaderProps = {\n  instancesHref: string;\n  instanceName: string;\n  instanceDetailHref: string;\n  instanceTopicsHref: string;\n  topicName: string;\n  activeSection: Sections;\n  tabsHref: { [key in Sections]: string };\n} & KafkaInstanceActionsProps;\n\nexport const DataPlaneTopicHeader: VoidFunctionComponent<\n  DataPlaneTopicHeaderProps\n> = ({\n  instancesHref,\n  instanceName,\n  instanceDetailHref,\n  instanceTopicsHref,\n  topicName,\n  activeSection,\n  tabsHref,\n  ...actionsProps\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <Breadcrumb ouiaId={\"breadcrumb\"}>\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instancesHref}>{t(\"common:kafka_instance\")}</Link>\n            )}\n          />\n          <BreadcrumbItem\n            render={() => <Link to={instanceDetailHref}>{instanceName}</Link>}\n          />\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instanceTopicsHref}>\n                {t(\"dataPlaneNavigation.topics\")}\n              </Link>\n            )}\n          />\n          <BreadcrumbItem isActive={true}>{topicName}</BreadcrumbItem>\n        </Breadcrumb>\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <LevelItem>\n            <TextContent>\n              <Text component=\"h1\">{topicName}</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <KafkaInstanceActions {...actionsProps} />\n          </LevelItem>\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        className=\"pf-c-page__main-tabs\"\n        hasShadowBottom={true}\n      >\n        <Nav variant=\"tertiary\" className=\"pf-u-px-sm-on-xl\">\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.consumer_groups\")}\n              ouiaId={\"tab-Dashboard\"}\n              isActive={activeSection === \"consumer\"}\n            >\n              <Link to={tabsHref[\"consumer\"]}>\n                {t(\"dataPlaneTopicNavigation.consumer_groups\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.messages\")}\n              ouiaId={\"tab-Topics\"}\n              isActive={activeSection === \"messages\"}\n            >\n              <Link to={tabsHref[\"messages\"]}>\n                {t(\"dataPlaneTopicNavigation.messages\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.properties\")}\n              ouiaId={\"tab-Permissions\"}\n              isActive={activeSection === \"properties\"}\n            >\n              <Link to={tabsHref[\"properties\"]}>\n                {t(\"dataPlaneTopicNavigation.properties\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.schemas\")}\n              ouiaId={\"tab-Settings\"}\n              isActive={activeSection === \"schemas\"}\n            >\n              <Link to={tabsHref[\"schemas\"]}>\n                {t(\"dataPlaneTopicNavigation.schemas\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n      </PageSection>\n    </>\n  );\n};\n","import type { DeleteModalProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  DeleteModal,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type DeleteKafkaInstanceProps = {\n  instanceName: string | undefined;\n} & Omit<\n  DeleteModalProps,\n  \"title\" | \"variant\" | \"confirmationValue\" | \"children\"\n>;\n\nexport const DeleteKafkaInstance: VoidFunctionComponent<\n  DeleteKafkaInstanceProps\n> = ({ instanceName, ...props }) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <DeleteModal\n      {...props}\n      variant={\"destructive\"}\n      title={t(\"delete_instance_title\")}\n      confirmationValue={instanceName}\n    >\n      <Trans\n        ns={\"kafka\"}\n        i18nKey={\"delete_instance_message\"}\n        components={[<strong />]}\n        values={{\n          instanceName,\n        }}\n      />\n    </DeleteModal>\n  );\n};\n","import type { I18nProviderProps } from \"@rhoas/app-services-ui-components\";\nimport { I18nProvider as UiComponentsI18nProvider } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\n\nexport const I18nProvider: FunctionComponent<\n  Omit<I18nProviderProps, \"resources\">\n> = ({ lng, debug, children }) => {\n  return (\n    <UiComponentsI18nProvider\n      lng={lng}\n      resources={{\n        en: {\n          common: () =>\n            import(\"@rhoas/app-services-ui-components/locales/en/common.json\"),\n          \"create-kafka-instance\": () =>\n            import(\"locales/en/create-kafka-instance.json\"),\n          kafka: () => import(\"locales/en/kafka.json\"),\n          \"kafkaoverview-v3\": () => import(\"locales/en/kafkaoverview-v3.json\"),\n          metrics: () => import(\"locales/en/metrics.json\"),\n          topic: () => import(\"locales/en/topic.json\"),\n          \"manage-kafka-permissions\": () =>\n            import(\"locales/en/manage-kafka-permissions.json\"),\n          \"create-topic\": () => import(\"locales/en/create-topic.json\"),\n          \"message-browser\": () => import(\"locales/en/message-browser.json\"),\n          \"connection-tab\": () => import(\"locales/en/connection-tab.json\"),\n          \"connection-tab-p1\": () =>\n            import(\"locales/en/connection-tab-p1.json\"),\n          \"terms-and-conditions\": () =>\n            import(\"locales/en/terms-and-conditions.json\"),\n        },\n        it: {\n          common: () => Promise.resolve({ delete: \"Elimina\" }),\n        },\n      }}\n      debug={debug}\n    >\n      {children}\n    </UiComponentsI18nProvider>\n  );\n};\n","import { Alert } from \"@patternfly/react-core\";\nimport { differenceInHours } from \"date-fns\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate } from \"@rhoas/app-services-ui-components\";\n\ntype DetailsTabAlertProps = {\n  expiryDate: Date;\n};\n\nexport const DetailsTabAlert: FunctionComponent<DetailsTabAlertProps> = ({\n  expiryDate,\n}) => {\n  const hoursLeft = expiryDate ? differenceInHours(expiryDate, Date.now()) : 0;\n  return (\n    <Alert\n      variant={\n        hoursLeft > 24\n          ? \"info\"\n          : hoursLeft < 24 && hoursLeft > 5\n          ? \"warning\"\n          : \"danger\"\n      }\n      title={\n        <Trans\n          i18nKey=\"kafka:will_expire\"\n          components={{\n            time: <FormatDate date={expiryDate} format=\"expiration\" />,\n          }}\n        />\n      }\n      aria-live=\"polite\"\n      isInline\n      className=\"pf-u-mb-lg\"\n    />\n  );\n};\n","import {\n  Skeleton,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from \"@patternfly/react-core\";\nimport { FormatDate, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { ReactChild, VoidFunctionComponent } from \"react\";\nimport type { MarketplaceSubscription, Plan } from \"ui-models/src/models/kafka\";\nimport type { Bytes } from \"../../../../../ui-models/src/types\";\nimport { DetailsTabAlert } from \"./DetailsTabAlert\";\n\n/**\n * All fields marked as accepting undefined will show a skeleton loader until the value is available.\n * This is to support fetching the data from different APIs.\n */\nexport type KafkaDetailsTabProps = {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n  expiryDate: Date | undefined;\n  owner: string;\n  provider: string;\n  region: string;\n  instanceType: Plan;\n  size: string | undefined;\n  ingress: number | undefined;\n  egress: number | undefined;\n  storage: Bytes | undefined;\n  maxPartitions: number | undefined;\n  connections: number | undefined;\n  connectionRate: number | undefined;\n  messageSize: Bytes | undefined;\n  billing: \"prepaid\" | MarketplaceSubscription | undefined;\n  kafkaVersion: string;\n};\n\nexport const KafkaDetailsTab: VoidFunctionComponent<KafkaDetailsTabProps> = ({\n  id,\n  createdAt,\n  updatedAt,\n  owner,\n  provider,\n  region,\n  expiryDate,\n  instanceType,\n  size,\n  ingress,\n  egress,\n  storage,\n  maxPartitions,\n  connections,\n  connectionRate,\n  messageSize,\n  billing,\n  kafkaVersion,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const renderTextListItem = (title: string, value: ReactChild | undefined) => (\n    <>\n      <TextListItem component={TextListItemVariants.dt}>{title}</TextListItem>\n      {value ? (\n        <TextListItem component={TextListItemVariants.dd}>{value}</TextListItem>\n      ) : (\n        <Skeleton\n          width=\"50%\"\n          screenreaderText={t(\"common:skeleton_loader_screenreader_text\", {\n            contentName: title,\n          })}\n        />\n      )}\n    </>\n  );\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      {instanceType !== \"standard\" && expiryDate && (\n        <DetailsTabAlert expiryDate={expiryDate} />\n      )}\n      <TextContent>\n        <TextList component={TextListVariants.dl}>\n          {instanceType === \"standard\" &&\n            renderTextListItem(\n              t(\"common:size\"),\n              size\n                ? t(\"create-kafka-instance:streaming_size_value\", {\n                    value: size,\n                  })\n                : undefined\n            )}\n          {renderTextListItem(\n            t(\"ingress\"),\n            ingress\n              ? t(\"create-kafka-instance:ingress_value\", {\n                  value: ingress,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"egress\"),\n            egress\n              ? t(\"create-kafka-instance:egress_value\", {\n                  value: egress,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"storage\"),\n            storage?.value\n              ? t(\"create-kafka-instance:storage_value\", {\n                  value: storage.value,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"partitions\"),\n            maxPartitions\n              ? t(\"create-kafka-instance:partitions_value\", {\n                  value: maxPartitions,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"client_connections\"),\n            connections\n              ? t(\"create-kafka-instance:client_connections_value\", {\n                  value: connections,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"connection_rate\"),\n            connectionRate\n              ? t(\"create-kafka-instance:connection_rate_value\", {\n                  value: connectionRate,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"message_size\"),\n            messageSize?.value\n              ? t(\"create-kafka-instance:message_size_value\", {\n                  value: messageSize.value,\n                })\n              : undefined\n          )}\n\n          {renderTextListItem(t(\"common:id\"), id)}\n          {renderTextListItem(t(\"common:kafka_version\"), kafkaVersion)}\n          {renderTextListItem(t(\"common:owner\"), owner)}\n          {renderTextListItem(\n            t(\"common:time_created\"),\n            <FormatDate date={createdAt} format={\"long\"} />\n          )}\n          {renderTextListItem(\n            t(\"common:time_updated\"),\n            <FormatDate date={updatedAt} format={\"long\"} />\n          )}\n          {renderTextListItem(t(\"common:cloud_provider\"), provider)}\n          {renderTextListItem(t(\"common:region\"), region)}\n          {renderTextListItem(\n            t(\"create-kafka-instance:billing.field_label\"),\n            (() => {\n              if (billing === undefined) {\n                return undefined;\n              } else if (billing === \"prepaid\") {\n                return t(\"create-kafka-instance:billing.prepaid_option\");\n              } else {\n                switch (billing.marketplace) {\n                  case \"aws\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_aws\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"azure\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_azure\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"gcp\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_gcp\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"rhm\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_rh\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                }\n              }\n            })()\n          )}\n        </TextList>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const SuspendedConnection: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.small}>\n      <EmptyStateIcon icon={ExclamationTriangleIcon} color={\"#f0ab00\"} />\n      <Title headingLevel={\"h1\"} size={TitleSizes.lg}>\n        {t(\"suspend_empty_state_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"suspend_empty_state_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  ClipboardCopy,\n  ExpandableSection,\n  Label,\n  Popover,\n  Skeleton,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport {\n  ExternalLink,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SuspendedConnection } from \"./SuspendedConnection\";\n\nexport type KafkaConnectionTabP2Props = {\n  isKafkaSuspended?: boolean;\n  isKafkaPending?: boolean;\n  externalServer?: string;\n  tokenEndPointUrl: string | undefined;\n  linkToServiceAccount: string;\n  linkToAccessTab: string;\n  adminAPIUrl: string | undefined;\n  showCreateServiceAccountModal: () => void;\n  kafkaFleetManagerUrl: string;\n};\n\nexport const KafkaConnectionTabP2: FunctionComponent<\n  KafkaConnectionTabP2Props\n> = ({\n  isKafkaSuspended,\n  isKafkaPending,\n  externalServer,\n  tokenEndPointUrl,\n  linkToServiceAccount,\n  linkToAccessTab,\n  adminAPIUrl,\n  kafkaFleetManagerUrl,\n  showCreateServiceAccountModal,\n}) => {\n  const { t } = useTranslation();\n\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n\n  const onChangeExpandedSection = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return isKafkaSuspended ? (\n    <SuspendedConnection />\n  ) : (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:drawer_resource_tab_body_description_1\")}\n        </Text>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:bootstrap_server\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:bootstrap_server_description\")}\n        </Text>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            data-testid=\"drawerStreams-copyBootstrapURL\"\n            textAriaLabel={t(\"connection-tab:bootstrap_server\")}\n            isReadOnly\n          >\n            {externalServer}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:service_accounts_small\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\n                \"connection-tab:create_service_account_to_generate_credentials\"\n              }\n              components={{\n                value: (\n                  <Link\n                    to={linkToServiceAccount}\n                    data-testid=\"tableStreams-linkKafka\"\n                  ></Link>\n                ),\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <Button\n        variant={ButtonVariant.secondary}\n        isInline\n        onClick={showCreateServiceAccountModal}\n        data-testid=\"drawerStreams-buttonCreateServiceAccount\"\n      >\n        {t(\"connection-tab:create_service_account\")}\n      </Button>\n      <TextContent className=\"pf-u-pt-sm\">\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\"connection-tab:current_instance\"}\n              components={{\n                value: <Link to={linkToAccessTab}></Link>,\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <ExpandableSection\n          toggleContent={\n            <div className=\"pf-c-content\">\n              <Text component={TextVariants.h3} className={\"pf-c-content\"}>\n                {t(\"connection-tab:rest_api_header\")}\n              </Text>\n            </div>\n          }\n          isExpanded={isExpanded}\n          onToggle={onChangeExpandedSection}\n          className=\"pf-u-mt-lg\"\n        >\n          <TextContent className=\"pf-u-pb-sm\">\n            <Text component={TextVariants.small}>\n              {t(\"connection-tab:rest_api_description\")}\n            </Text>\n          </TextContent>\n          <TextContent>\n            <strong>\n              {t(\"connection-tab:kafka_instance_url_label\")}\n              <Popover\n                headerContent={\n                  <div>\n                    {t(\"connection-tab:kafka_instance_url_popover_label\")}\n                  </div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"connection-tab:kafka_instance_url_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkainstance?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kafka-admin-rest.yaml%3Fref%3Ddoc-portal&readonly=true\"\n                          />,\n                          <ExternalLink\n                            testId={\"customerPortal-link\"}\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_openshift_application_services/1/guide/2409253a-45ee-470e-bdc9-5db4bfcf9d0f\"\n                            className={\"pf-u-ml-xs\"}\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\n                    \"connection-tab:kafka_instance_url_button_aria_label\"\n                  )}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {adminAPIUrl ? (\n              <ClipboardCopy\n                textAriaLabel={t(\"connection-tab:kafka_instance_url_label\")}\n                isReadOnly\n              >\n                {adminAPIUrl}\n              </ClipboardCopy>\n            ) : (\n              <Skeleton fontSize=\"2xl\" />\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"connection-tab:kafka_instance_url_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n          <TextContent className=\"pf-u-mt-md\">\n            <strong>\n              {t(\"connection-tab:kafka_management_url\")}\n              <Popover\n                headerContent={\n                  <div>\n                    {t(\"connection-tab:kafka_management_popover_header\")}\n                  </div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"connection-tab:kafka_management_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkamgmt?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kas-fleet-manager.yaml%3Fref%3Ddoc-portal\"\n                          />,\n                          <ExternalLink\n                            testId={\"customerPortal-link\"}\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_openshift_application_services/1/guide/2409253a-45ee-470e-bdc9-5db4bfcf9d0f\"\n                            className={\"pf-u-ml-xs\"}\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\n                    \"connection-tab:kafka_management_button_aria_label\"\n                  )}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {isKafkaPending ? (\n              <Skeleton fontSize=\"2xl\" />\n            ) : (\n              <ClipboardCopy\n                textAriaLabel={t(\"connection-tab:kafka_management_url\")}\n                isReadOnly\n              >\n                {kafkaFleetManagerUrl}\n              </ClipboardCopy>\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"connection-tab:kafka_management_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n        </ExpandableSection>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:authentication_method\")}\n        </Text>\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"connection-tab:sasl_oauthbearer\")}{\" \"}\n          <Label color=\"green\">{t(\"connection-tab:recommended\")}</Label>\n          <Popover\n            aria-label={t(\"connection-tab:sasl_oauthbearer\")}\n            bodyContent={\n              <div>{t(\"connection-tab:sasl_oauthbearer_popover_content\")}</div>\n            }\n          >\n            <Button\n              variant={ButtonVariant.plain}\n              aria-label={t(\"connection-tab:more_info_about_sasl_oauthbearer\")}\n            >\n              <HelpIcon />\n            </Button>\n          </Popover>\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:sasl_oauthbearer_description\")}\n        </Text>\n        <strong>{t(\"connection-tab:token_endpoint_url\")}</strong>\n        {tokenEndPointUrl === undefined ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            textAriaLabel={t(\"connection-tab:token_endpoint_url\")}\n            isReadOnly\n          >\n            {tokenEndPointUrl}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"connection-tab:sasl_plain\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:sasl_plain_description\")}\n        </Text>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  ClipboardCopyButton,\n  CodeBlock,\n  CodeBlockAction,\n  CodeBlockCode,\n  ExpandableSection,\n  ExpandableSectionToggle,\n} from \"@patternfly/react-core\";\nimport { useEffect, useState } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type ClientType = \"java\" | \"python\" | \"quarkus\" | \"springboot\";\n\nexport type SampleCodeSnippetProps = {\n  expandableCode?: string;\n  codeBlockCode: string;\n  codeSnippet?: ClientType;\n};\n\nexport const SampleCodeSnippet: VoidFunctionComponent<\n  SampleCodeSnippetProps\n> = ({ expandableCode, codeBlockCode, codeSnippet }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const [copied, setCopied] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsExpanded(false);\n  }, [codeSnippet]);\n\n  const clipboardCopyFunc = (_event: any, text: string) => {\n    navigator.clipboard\n      .writeText(text.toString())\n      .then(() => {\n        setCopied(true);\n      })\n      .catch(() => {\n        setCopied(false);\n      });\n  };\n\n  const onToggle = (isExpanded: boolean) => {\n    setIsExpanded(isExpanded);\n  };\n\n  const copyCode = expandableCode\n    ? codeBlockCode + \"\\n\" + expandableCode\n    : codeBlockCode;\n\n  const actions = (\n    <CodeBlockAction>\n      <ClipboardCopyButton\n        id=\"basic-copy-button\"\n        textId=\"code-content\"\n        aria-label=\"Copy to clipboard\"\n        exitDelay={600}\n        maxWidth=\"110px\"\n        variant=\"plain\"\n        onClick={(e) => clipboardCopyFunc(e, copyCode)}\n      >\n        {copied ? \"Successfully copied to clipboard!\" : \"Copy to clipboard\"}\n      </ClipboardCopyButton>\n    </CodeBlockAction>\n  );\n\n  return (\n    <CodeBlock actions={actions}>\n      <CodeBlockCode id=\"code-content\">\n        {codeBlockCode}\n\n        <ExpandableSection\n          isExpanded={isExpanded}\n          isDetached\n          contentId=\"code-block-expand\"\n        >\n          {expandableCode}\n        </ExpandableSection>\n      </CodeBlockCode>\n      {expandableCode ? (\n        <ExpandableSectionToggle\n          isExpanded={isExpanded}\n          onToggle={onToggle}\n          contentId=\"code-block-expand\"\n          direction=\"up\"\n        >\n          {isExpanded ? \"Show Less\" : \"Show More\"}\n        </ExpandableSectionToggle>\n      ) : null}\n    </CodeBlock>\n  );\n};\n","export const javaConfigCodeBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `package org.example;\nimport org.apache.kafka.clients.producer.ProducerConfig;  \nimport java.util.Properties;\n    \npublic class KafkaConfig {\n    \n    static Properties properties() {\n    \n        String kafkaHost = \"${kafkaBootstrapUrl}\";\n        String rhoasClientID = \"<client_id>\";\n        String rhoasClientSecret = \"<client_secret>\";\n        String rhoasOauthTokenUrl = \"${tokenEndpointUrl}\";`;\n};\n\nexport const javaConfigExpandabledBlock = `\n        var properties= new Properties();\n\n        properties.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, kafkaHost);\n        properties.setProperty(\"security.protocol\", \"SASL_SSL\");\n        properties.setProperty(\"sasl.mechanism\", \"OAUTHBEARER\");\n\n        properties.setProperty(\"sasl.jaas.config\", \"org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId=\\\\\"\" + rhoasClientID + \"\\\\\" clientSecret=\\\\\"\" + rhoasClientSecret + \"\\\\\" oauth.token.endpoint.uri=\\\\\"\" + rhoasOauthTokenUrl + \"\\\\\";\");\n\n        properties.setProperty(\"sasl.login.callback.handler.class\", \"org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler\");\n        properties.setProperty(\"sasl.oauthbearer.token.endpoint.url\", rhoasOauthTokenUrl);\n        properties.setProperty(\"sasl.oauthbearer.scope.claim.name\", \"api.iam.service_accounts\");\n\n        return properties;\n    }\n}`;\n\nexport const javaProducerCodeBlock = `package org.example;\n \nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.clients.producer.ProducerRecord;\nimport org.apache.kafka.clients.producer.KafkaProducer;\nimport org.apache.kafka.common.serialization.StringSerializer;\n \npublic class ProducerExample {\n \n   public static void main(String[] args) {`;\n\nexport const javaProducerExpandableBlock = `\n   //Creating producer properties\n   var properties= KafkaConfig.properties();\n   properties.setProperty(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n   properties.setProperty(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n\n   KafkaProducer<String,String> producer= new KafkaProducer<String,String>(properties);\n\n   producer.send(new ProducerRecord<>(<\"topic\">, \"Test Message\"));\n   producer.flush();\n   producer.close();\n  }\n}`;\n\nexport const javaConsumerCodeBlock = `package org.example;\n \nimport java.util.Arrays;\n\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.clients.consumer.KafkaConsumer;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.apache.kafka.clients.consumer.ConsumerRecord;\nimport org.apache.kafka.clients.consumer.ConsumerRecords;\nimport java.time.Duration;`;\n\nexport const javaConsumerExpandableBlock = `\npublic class ConsumerExample {\n\n    public static void main(String[] args) {\n\n        var properties= KafkaConfig.properties();\n\n        properties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n        properties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n        properties.setProperty(ConsumerConfig.GROUP_ID_CONFIG,\"test_group_2\");\n        properties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n\n        KafkaConsumer<String,String> consumer = new KafkaConsumer<String,String>(properties);\n\n        //Subscribing\n        consumer.subscribe(Arrays.asList(\"<topic>\"));\n\n        //polling\n        while(true){\n            ConsumerRecords<String,String> records=consumer.poll(Duration.ofMillis(100));\n            for(ConsumerRecord<String,String> record: records) {\n                System.out.println(\"Key: \"+ record.key() + \", Value:\" +record.value());\n                System.out.println(\"Partition:\" + record.partition()+\",Offset:\"+record.offset());\n            }\n        }\n    }\n}`;\n\nexport const pythonConfigCodeBlock = (tokenEndpointUrl: string) => {\n  return `import time\nimport requests\n    \ndef _get_token(config):\n    payload = {\"grant_type\": \"client_credentials\", \"scope\": \"api.iam.service_accounts\"}\n    resp = requests.post(\n        \"${tokenEndpointUrl}\",\n        auth=(\n            <client_id>,\n            <client_secret>,\n        ),\n        data=payload,\n    )`;\n};\n\nexport const pythonConfigExpandabledBlock = (kafkaBootstrapUrl: string) => {\n  return `\n    token = resp.json()\n    return token[\"access_token\"], time.time() + float(token[\"expires_in\"])\n    \n    common_config = {\n    'bootstrap.servers': \"${kafkaBootstrapUrl}\",\n    'security.protocol': 'SASL_SSL',\n    'sasl.mechanisms': 'OAUTHBEARER',\n    'oauth_cb': _get_token,\n    }\n    \n    topic=<topic>`;\n};\n\nexport const pythonProducer = `from confluent_kafka import Producer\n \nproducer = Producer(common_config)\n \nproducer.produce(topic=<topic>, value=b\"Sample Message\")\nproducer.flush()`;\n\nexport const pythonConsumerCodeBlock = `from confluent_kafka import Consumer\n \nconsumer_config = {\n    \"group.id\": \"test-group\",\n    'session.timeout.ms': 6000,\n    'auto.offset.reset': 'earliest',\n}\n\nconsumer = Consumer({ **consumer_config, **common_config })\n\nconsumer.subscribe([<topic>])`;\n\nexport const pythonConsumerExpandableBlock = `while True:\ntry:\n    msg = consumer.poll(1.0)\n    if msg is None:\n        continue\n\n    print(msg.value())\nexcept KeyboardInterrupt:\n    break\n\nconsumer.close()`;\n\nexport const quarkusConfigCodeBlock = `# Quarkus config\nquarkus.ssl.native=true\n\n# Configure the Kafka sink (we write to it)\nmp.messaging.outgoing.generated-price.connector=smallrye-kafka\nmp.messaging.outgoing.generated-price.topic=<topic>\nmp.messaging.outgoing.generated-price.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer\n\n# Configure the Kafka source (we read from it)\nmp.messaging.incoming.prices.connector=smallrye-kafka\nmp.messaging.incoming.prices.topic=<topic>\nmp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer`;\n\nexport const quarkusConfigExpandableBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `\n# Configure docker config\nquarkus.container-image.builder=jib\nquarkus.kubernetes.deployment-target=kubernetes\nquarkus.container-image.build=false\nquarkus.container-image.push=false\n    \n## dev profile using user defined environment variables that uses SASL/OAUTHBEARER\n## ./mvnw quarkus:dev\n## ./mvnw package -Dquarkus.profile=dev\n    \n%dev.kafka.bootstrap.servers=\\${\"${kafkaBootstrapUrl}\"}\n%dev.kafka.security.protocol=SASL_SSL\n    \n%dev.kafka.sasl.mechanism=OAUTHBEARER\n%dev.kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \\\\\n    oauth.client.id=\"\\${<client_id>}\" \\\\\n    oauth.client.secret=\"\\${<client_secret>}\" \\\\\n    oauth.token.endpoint.uri=\"\\${\"${tokenEndpointUrl}\"}\" ;\n%dev.kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler`;\n};\n\nexport const quarkusProducerCodeBlock = `package org.acme.kafka;\nimport java.time.Duration;\nimport java.util.Random;\n\nimport javax.enterprise.context.ApplicationScoped;\n\nimport io.smallrye.mutiny.Multi;\nimport org.eclipse.microprofile.reactive.messaging.Outgoing;`;\n\nexport const quarkusProducerExpandableBlock = `\n/**\n* A bean producing random prices every 5 seconds.\n* The prices are written to a Kafka topic (prices). The Kafka configuration is specified in the application configuration.\n*/\n@ApplicationScoped\npublic class PriceGenerator {\n\n   private Random random = new Random();\n\n   @Outgoing(\"generated-price\")\n   public Multi<Integer> generate() {\n       return Multi.createFrom().ticks().every(Duration.ofSeconds(5))\n               .onOverflow().drop()\n               .map(tick -> random.nextInt(100));\n   }\n\n}`;\n\nexport const quarkusConsumerCodeBlock = `package org.acme.kafka;\nimport javax.enterprise.context.ApplicationScoped;\n\nimport org.eclipse.microprofile.reactive.messaging.Acknowledgment;\nimport org.eclipse.microprofile.reactive.messaging.Incoming;\nimport org.eclipse.microprofile.reactive.messaging.Outgoing;\n\nimport io.smallrye.reactive.messaging.annotations.Broadcast;\n\n/**\n * A bean consuming data from the \"prices\" Kafka topic and applying some conversion.\n * The result is pushed to the \"my-data-stream\" stream which is an in-memory stream.\n */\n@ApplicationScoped`;\n\nexport const quarkusConsumerExpandableBlock = `public class PriceConverter {\n\n    private static final double CONVERSION_RATE = 0.88;\n\n    // Consume from the \\`prices\\` channel and produce to the \\`my-data-stream\\` channel\n    @Incoming(\"prices\")\n    @Outgoing(\"my-data-stream\")\n    // Send to all subscribers\n    @Broadcast\n    // Acknowledge the messages before calling this method.\n    @Acknowledgment(Acknowledgment.Strategy.PRE_PROCESSING)\n    public double process(int priceInUsd) {\n        return priceInUsd * CONVERSION_RATE;\n    }\n\n}`;\n\nexport const springBootConfigCodeBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `package com.example.kafkaconfig;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class KafkaConfig {\n\n   public static Map<String, Object> Config() {\n\n       Map<String, Object> config = new HashMap<>();\n\n       String kafkaHost = \"${kafkaBootstrapUrl}\";\n       String rhoasClientID = \"<client_id>\";\n       String rhoasClientSecret = \"<client_secret>\";\n       String rhoasOauthTokenUrl = \"${tokenEndpointUrl}\";`;\n};\n\nexport const springBootConfigExpandableBlock = `\n    config.put(\"bootstrap.servers\", kafkaHost);\n\n    config.put(\"security.protocol\", \"SASL_SSL\");\n    config.put(\"sasl.mechanism\", \"OAUTHBEARER\");\n\n    config.put(\"sasl.jaas.config\", \"org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId=\\\\\"\" + rhoasClientID + \"\\\\\" clientSecret=\\\\\"\" + rhoasClientSecret + \"\\\\\" oauth.token.endpoint.uri=\\\\\"\" + rhoasOauthTokenUrl + \"\\\\\";\");\n    config.put(\"sasl.login.callback.handler.class\", \"org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler\");\n    config.put(\"sasl.oauthbearer.token.endpoint.url\", rhoasOauthTokenUrl);\n    config.put(\"sasl.oauthbearer.scope.claim.name\", \"api.iam.service_accounts\");\n\n    return config;\n   }\n}`;\n\nexport const springBootProducerCodeBlock = `package com.example.kafkademo;\nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.common.serialization.StringSerializer;\nimport org.springframework.boot.ApplicationRunner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.kafka.core.DefaultKafkaProducerFactory;\nimport org.springframework.kafka.core.KafkaTemplate;\nimport org.springframework.kafka.core.ProducerFactory;\nimport com.example.kafkaconfig.KafkaConfig;\n\nimport java.util.Map;`;\n\nexport const springBootProducerExpandableBlock = `\n@SpringBootApplication\npublic class KafkaProducerExample {\n\n  public static void main(String[] args) throws Exception {\n    SpringApplication.run(KafkaProducerExample.class, args);\n  }\n\n  @Bean\n  public ProducerFactory<String, String> producerFactory() {\n    Map<String, Object> config = KafkaConfig.Config();\n\n    config.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n    config.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n\n    return new DefaultKafkaProducerFactory<String, String>(config);\n  }\n\n  @Bean\n  public KafkaTemplate<String, String> kafkaTemplate() {\n    return new KafkaTemplate<>(producerFactory());\n  }\n\n  @Bean\n  public ApplicationRunner runner(KafkaTemplate<String, String> template) {\n    return args -> {\n      template.send(<\"topic\">, \"Test Message\");\n    };\n  }\n\n}`;\n\nexport const springBootListenerCodeBlock = `package com.example.kafkaconsumer.listener;\n\nimport com.example.kafkaconfig.KafkaConfig;\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.kafka.annotation.KafkaListener;\nimport org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;\nimport org.springframework.kafka.core.ConsumerFactory;\nimport org.springframework.kafka.core.DefaultKafkaConsumerFactory;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Map;`;\n\nexport const springBootListenerExpandableBlock = `@Component\npublic class Listener {\n\n    @KafkaListener(topics = <\"topic\">,\n            containerFactory = \"concurrentKafkaListenerContainerFactory\",\n            groupId = \"test_group\")\n\n    // Method\n    public void consume(String message)\n    {\n        // Print statement\n        System.out.println(message);\n    }\n}`;\n\nexport const springBootConsumerConfigCodeBlock = `package com.example.kafkaconsumer.config;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport com.example.kafkaconfig.KafkaConfig;\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.kafka.annotation.EnableKafka;\nimport org.springframework.kafka.core.ConsumerFactory;\nimport org.springframework.kafka.core.DefaultKafkaConsumerFactory;\nimport org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;`;\n\nexport const springBootConsumerConfigExpandableBlock = `// Annotations\n@EnableKafka\n@Configuration\n\npublic class KafkaConsumerConfig {\n\n    @Bean\n    public ConsumerFactory<String, String> consumerFactory() {\n        Map<String, Object> config = KafkaConfig.Config();\n\n        config.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\n        config.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\n\n        return new DefaultKafkaConsumerFactory<>(config);\n    }\n\n    @Bean\n    public ConcurrentKafkaListenerContainerFactory concurrentKafkaListenerContainerFactory() {\n        ConcurrentKafkaListenerContainerFactory<\n                String, String> factory\n                = new ConcurrentKafkaListenerContainerFactory<>();\n        factory.setConsumerFactory(consumerFactory());\n        return factory;\n    }\n}`;\n\nexport const springBootConsumerExampleCodeBlock = `\npackage com.example.kafkaconsumer;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;`;\n\nexport const springBootConsumerExampleExpandableBlock = `\n@SpringBootApplication\npublic class KafkaConsumerExample {\n\n    public static void main(String[] args) {\n        SpringApplication.run(KafkaConsumerExample.class, args);\n    }\n\n}`;\n","import {\n  TextContent,\n  TextVariants,\n  Text,\n  ToggleGroup,\n  ToggleGroupItem,\n  Skeleton,\n} from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { SampleCodeSnippet } from \"./SampleCodeSnippet\";\nimport {\n  javaConfigCodeBlock,\n  javaConfigExpandabledBlock,\n  javaConsumerCodeBlock,\n  javaConsumerExpandableBlock,\n  javaProducerCodeBlock,\n  javaProducerExpandableBlock,\n  pythonConfigCodeBlock,\n  pythonConfigExpandabledBlock,\n  pythonConsumerCodeBlock,\n  pythonConsumerExpandableBlock,\n  pythonProducer,\n  quarkusConfigCodeBlock,\n  quarkusConfigExpandableBlock,\n  quarkusConsumerCodeBlock,\n  quarkusConsumerExpandableBlock,\n  quarkusProducerCodeBlock,\n  quarkusProducerExpandableBlock,\n  springBootConfigCodeBlock,\n  springBootConfigExpandableBlock,\n  springBootConsumerConfigCodeBlock,\n  springBootConsumerConfigExpandableBlock,\n  springBootConsumerExampleCodeBlock,\n  springBootConsumerExampleExpandableBlock,\n  springBootListenerCodeBlock,\n  springBootListenerExpandableBlock,\n  springBootProducerCodeBlock,\n  springBootProducerExpandableBlock,\n} from \"./CodeSnippets\";\n\nexport type ClientType = \"java\" | \"python\" | \"quarkus\" | \"springboot\";\n\nexport type KafkaSampleCodeProps = {\n  kafkaBootstrapUrl: string;\n  tokenEndpointUrl: string | undefined;\n};\n\nexport const KafkaSampleCode: VoidFunctionComponent<KafkaSampleCodeProps> = ({\n  kafkaBootstrapUrl,\n  tokenEndpointUrl,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const [clientSelect, setClientSelect] = useState<ClientType>(\"java\");\n\n  const clientProvider: { [provider in ClientType]: string } = {\n    java: t(\"sample_code.clients.java\"),\n    python: t(\"sample_code.clients.python\"),\n    quarkus: t(\"sample_code.clients.quarkus\"),\n    springboot: t(\"sample_code.clients.spring_boot\"),\n  };\n\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.code_snippet_description_1\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.code_snippet_description_2\")}\n        </Text>\n        <ToggleGroup>\n          <ToggleGroupItem\n            text={clientProvider[\"java\"]}\n            value=\"java\"\n            buttonId=\"java\"\n            isSelected={clientSelect === \"java\"}\n            onChange={() => setClientSelect(\"java\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"python\"]}\n            value=\"python\"\n            buttonId=\"python\"\n            isSelected={clientSelect === \"python\"}\n            onChange={() => setClientSelect(\"python\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"quarkus\"]}\n            value=\"quarkus\"\n            buttonId=\"quarkus\"\n            isSelected={clientSelect === \"quarkus\"}\n            onChange={() => setClientSelect(\"quarkus\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"springboot\"]}\n            value=\"springboot\"\n            buttonId=\"springboot\"\n            isSelected={clientSelect === \"springboot\"}\n            onChange={() => setClientSelect(\"springboot\")}\n          />\n        </ToggleGroup>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_configuration_code\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.sample_configuration_code_description\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.bracket_text\")}\n        </Text>\n        {(() => {\n          switch (clientSelect) {\n            case \"java\":\n              return tokenEndpointUrl ? (\n                <SampleCodeSnippet\n                  codeBlockCode={javaConfigCodeBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  expandableCode={javaConfigExpandabledBlock}\n                  codeSnippet={clientSelect}\n                />\n              ) : (\n                <Skeleton fontSize=\"4xl\" />\n              );\n            case \"python\":\n              return tokenEndpointUrl ? (\n                <SampleCodeSnippet\n                  codeBlockCode={pythonConfigCodeBlock(tokenEndpointUrl)}\n                  expandableCode={pythonConfigExpandabledBlock(\n                    kafkaBootstrapUrl\n                  )}\n                  codeSnippet={clientSelect}\n                />\n              ) : (\n                <Skeleton fontSize=\"4xl\" />\n              );\n            case \"quarkus\":\n              return tokenEndpointUrl ? (\n                <SampleCodeSnippet\n                  codeBlockCode={quarkusConfigCodeBlock}\n                  expandableCode={quarkusConfigExpandableBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  codeSnippet={clientSelect}\n                />\n              ) : (\n                <Skeleton fontSize=\"4xl\" />\n              );\n            case \"springboot\":\n              return tokenEndpointUrl ? (\n                <SampleCodeSnippet\n                  codeBlockCode={springBootConfigCodeBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  expandableCode={springBootConfigExpandableBlock}\n                  codeSnippet={clientSelect}\n                />\n              ) : (\n                <Skeleton fontSize=\"4xl\" />\n              );\n            default:\n              return null;\n          }\n        })()}\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_producer_code\")}\n        </Text>\n        {clientSelect === \"quarkus\" ? (\n          <>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.sample_producer_code_quarkus_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={quarkusProducerCodeBlock}\n              expandableCode={quarkusProducerExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n          </>\n        ) : (\n          <>\n            <Text component={TextVariants.small}>\n              <Trans\n                ns={\"kafka\"}\n                i18nKey={\"sample_code.sample_producer_code_description\"}\n                values={{\n                  client_type: clientProvider[clientSelect],\n                }}\n              />\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.bracket_text\")}\n            </Text>\n            {(() => {\n              switch (clientSelect) {\n                case \"java\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={javaProducerCodeBlock}\n                      expandableCode={javaProducerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"python\":\n                  return <SampleCodeSnippet codeBlockCode={pythonProducer} />;\n                case \"springboot\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={springBootProducerCodeBlock}\n                      expandableCode={springBootProducerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                default:\n                  return null;\n              }\n            })()}\n          </>\n        )}\n\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_consumer_code\")}\n        </Text>\n        {clientSelect === \"springboot\" ? (\n          <>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_sample_consumer_code_description\")}\n            </Text>\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_consumer_configuration\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_consumer_configuration_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootConsumerConfigCodeBlock}\n              expandableCode={springBootConsumerConfigExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_listener\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_listener_description\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.bracket_text\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootListenerCodeBlock}\n              expandableCode={springBootListenerExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_consumer\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_consumer_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootConsumerExampleCodeBlock}\n              expandableCode={springBootConsumerExampleExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n          </>\n        ) : (\n          <>\n            <Text component={TextVariants.small}>\n              <Trans\n                ns={\"kafka\"}\n                i18nKey={\"sample_code.sample_consumer_code_description\"}\n                values={{\n                  client_type: clientProvider[clientSelect],\n                }}\n              />\n            </Text>\n            {clientSelect === \"quarkus\" ? null : (\n              <Text component={TextVariants.small}>\n                {t(\"sample_code.bracket_text\")}\n              </Text>\n            )}\n            {(() => {\n              switch (clientSelect) {\n                case \"java\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={javaConsumerCodeBlock}\n                      expandableCode={javaConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"python\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={pythonConsumerCodeBlock}\n                      expandableCode={pythonConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"quarkus\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={quarkusConsumerCodeBlock}\n                      expandableCode={quarkusConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                default:\n                  return null;\n              }\n            })()}\n          </>\n        )}\n      </TextContent>\n    </div>\n  );\n};\n","import type { TabsProps } from \"@patternfly/react-core\";\nimport {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport type { Kafka } from \"ui-models/src/models/kafka\";\nimport { CreatingStatuses } from \"ui-models/src/models/kafka\";\nimport { useKafkaLabels } from \"../../hooks\";\nimport {\n  KafkaConnectionTabP2,\n  KafkaDetailsTab,\n  KafkaSampleCode,\n} from \"./components\";\n\nexport type KafkaInstanceDrawerProps = {\n  instance?: Kafka;\n  isExpanded: boolean;\n  activeTab: KafkaInstanceDrawerTab;\n  onTabChange: (tab: KafkaInstanceDrawerTab) => void;\n  tokenEndpointUrl: string | undefined;\n  onClose: () => void;\n};\n\nexport const KafkaInstanceDrawer: FunctionComponent<\n  KafkaInstanceDrawerProps\n> = ({\n  instance,\n  activeTab,\n  isExpanded,\n  onTabChange,\n  onClose,\n  children,\n  tokenEndpointUrl,\n}) => {\n  const content = useMemo(() => {\n    return (\n      <DrawerPanelContent>\n        {instance ? (\n          <KafkaInstanceDrawerPanel\n            instance={instance}\n            activeTab={activeTab}\n            onTabChange={onTabChange}\n            onClose={onClose}\n            tokenEndpointUrl={tokenEndpointUrl}\n          />\n        ) : null}\n      </DrawerPanelContent>\n    );\n  }, [activeTab, instance, onClose, onTabChange, tokenEndpointUrl]);\n  return (\n    <Drawer isExpanded={isExpanded} isInline={true}>\n      <DrawerContent panelContent={content}>\n        <DrawerContentBody\n          className={\"pf-u-display-flex pf-u-flex-direction-column\"}\n        >\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nexport type KafkaInstanceDrawerTab = \"details\" | \"connections\";\n\nexport const KafkaInstanceDrawerPanel: VoidFunctionComponent<\n  Required<Omit<KafkaInstanceDrawerProps, \"isExpanded\">> & {\n    activeTab: KafkaInstanceDrawerTab;\n  }\n> = ({ instance, activeTab, onTabChange, onClose, tokenEndpointUrl }) => {\n  const { t } = useTranslation([\"kafka\"]);\n  const labels = useKafkaLabels();\n\n  const handleSelect: TabsProps[\"onSelect\"] = useCallback(\n    (_, tab) => {\n      const t = tab as KafkaInstanceDrawerTab;\n      onTabChange(t);\n    },\n    [onTabChange]\n  );\n\n  const isKafkaPending = CreatingStatuses.includes(instance.status);\n\n  return (\n    <>\n      <DrawerHead>\n        <TextContent>\n          <Text component={TextVariants.small} className={\"pf-u-mb-0\"}>\n            {t(\"common:name\")}\n          </Text>\n          <Title\n            headingLevel={\"h1\"}\n            size={TitleSizes[\"xl\"]}\n            className={\"pf-u-mt-0\"}\n          >\n            {instance.name}\n          </Title>\n        </TextContent>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <Tabs activeKey={activeTab} onSelect={handleSelect}>\n          <Tab\n            eventKey={\"details\"}\n            title={<TabTitleText>{t(\"drawer-tabs.details\")}</TabTitleText>}\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaDetailsTab\n                id={instance.id}\n                owner={instance.owner}\n                createdAt={parseISO(instance.createdAt)}\n                updatedAt={parseISO(instance.updatedAt)}\n                expiryDate={\n                  instance.expiryDate\n                    ? parseISO(instance.expiryDate)\n                    : undefined\n                }\n                size={instance.size}\n                ingress={instance.ingress}\n                egress={instance.egress}\n                storage={instance.storage}\n                maxPartitions={instance.maxPartitions}\n                connections={instance.connections}\n                connectionRate={instance.connectionRate}\n                messageSize={instance.messageSize}\n                provider={\n                  labels.providers[instance.provider] || instance.provider\n                }\n                region={\n                  labels.providerRegions[instance.provider][instance.region] ||\n                  instance.region\n                }\n                instanceType={instance.plan}\n                billing={instance.billing}\n                kafkaVersion={instance.version}\n              />\n            </div>\n          </Tab>\n          <Tab\n            eventKey={\"connections\"}\n            title={<TabTitleText>{t(\"drawer-tabs.connections\")}</TabTitleText>}\n            data-testid=\"drawerStreams-tabConnect\"\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaConnectionTabP2\n                isKafkaPending={isKafkaPending}\n                externalServer={getExternalServer(instance.bootstrapUrl)}\n                tokenEndPointUrl={tokenEndpointUrl}\n                linkToServiceAccount={\"service-accounts\"}\n                linkToAccessTab={`TODO/acls`}\n                adminAPIUrl={getAdminServerUrl(instance.adminUrl)}\n                showCreateServiceAccountModal={() => {\n                  /* TODO */\n                }}\n                kafkaFleetManagerUrl={\n                  \"https://api.openshift.com/api/kafkas_mgmt/v1/openapi\"\n                }\n              />\n            </div>\n          </Tab>\n          <Tab\n            eventKey={\"samplecode\"}\n            title={<TabTitleText>{t(\"drawer-tabs.sample-code\")}</TabTitleText>}\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaSampleCode\n                kafkaBootstrapUrl={getExternalServer(instance.bootstrapUrl)!}\n                tokenEndpointUrl={tokenEndpointUrl}\n              />\n            </div>\n          </Tab>\n        </Tabs>\n      </DrawerPanelBody>\n    </>\n  );\n};\n\nconst getExternalServer = (bootstrapUrl: string | undefined) => {\n  if (!bootstrapUrl) {\n    return undefined;\n  }\n  return bootstrapUrl?.endsWith(\":443\") ? bootstrapUrl : `${bootstrapUrl}:443`;\n};\n\nconst getAdminServerUrl = (adminUrl: string | undefined) => {\n  return adminUrl ? `${adminUrl}/openapi` : undefined;\n};\n","import {\n  Alert,\n  Button,\n  Flex,\n  FlexItem,\n  HelperText,\n  HelperTextItem,\n  Spinner,\n  Split,\n  SplitItem,\n} from \"@patternfly/react-core\";\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { forwardRef } from \"react\";\nimport type { Status } from \"ui-models/src/models/kafka\";\nimport {\n  CreatingStatuses,\n  DegradedStatuses,\n  DeletingStatuses,\n  ReadyStatuses,\n  ResumingStatuses,\n  SuspendedStatuses,\n  SuspendingStatuses,\n} from \"ui-models/src/models/kafka\";\nimport \"./StatusLabel.css\";\n\ntype StatusLabelProps = {\n  value: Status;\n  showWarning?: boolean;\n  showError?: boolean;\n  withPopover?: boolean;\n};\n\n/**\n *<strong> Introduction </strong>\n *These are the various statuses that can show in the Kafka instances table under the \"Status\" header.\n */\nexport const StatusLabel = forwardRef<HTMLButtonElement, StatusLabelProps>(\n  (\n    { value, showWarning = false, showError = false, withPopover = false },\n    ref\n  ) => {\n    const { t } = useTranslation(\"kafka\");\n\n    const buttonVariant = withPopover ? \"link\" : \"plain\";\n\n    switch (true) {\n      case ReadyStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <CheckCircleIcon className=\"mas-m-ready\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.ready\")}</SplitItem>\n            </Split>\n          </div>\n        );\n\n      case CreatingStatuses.includes(value):\n        switch (true) {\n          case showWarning:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                  </SplitItem>\n                </Split>\n                <Alert\n                  variant=\"warning\"\n                  isInline\n                  isPlain\n                  title=\"This is taking longer than expected.\"\n                />\n              </div>\n            );\n          case showError:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                  </SplitItem>\n                </Split>\n                <Alert\n                  variant=\"danger\"\n                  isInline\n                  isPlain\n                  title={t(\"status_warning_or_error_title\")}\n                />\n              </div>\n            );\n          default:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                    <Flex>\n                      <FlexItem>\n                        <HelperText>\n                          <HelperTextItem variant=\"indeterminate\">\n                            {t(\"status_created_shortly_help\")}\n                          </HelperTextItem>\n                        </HelperText>\n                      </FlexItem>\n                    </Flex>\n                  </SplitItem>\n                </Split>\n              </div>\n            );\n        }\n\n      case DegradedStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <ExclamationTriangleIcon className=\"mas-m-degraded\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.degraded\")}</SplitItem>\n            </Split>\n          </div>\n        );\n\n      case SuspendingStatuses.includes(value):\n        return (\n          <div>\n            <p className=\"mas-m-deleting\"> {t(\"statuses.suspending\")}</p>\n          </div>\n        );\n      case SuspendedStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <ExclamationTriangleIcon className=\"mas-m-degraded\" />\n              </SplitItem>\n              <SplitItem>\n                <Button ref={ref} variant={buttonVariant} isInline>\n                  {t(\"statuses.suspended\")}\n                </Button>\n              </SplitItem>\n            </Split>\n          </div>\n        );\n      case ResumingStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <Spinner size=\"md\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.resuming\")}</SplitItem>\n            </Split>\n          </div>\n        );\n      case DeletingStatuses.includes(value):\n        return (\n          <div>\n            <p className=\"mas-m-deleting\"> {t(\"statuses.deleting\")}</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  }\n);\n","export type KafkaStatus =\n  | \"ready\"\n  | \"degraded\"\n  | \"accepted\"\n  | \"provisioning\"\n  | \"preparing\"\n  | \"deprovision\"\n  | \"deleting\"\n  | \"suspended\"\n  | \"suspending\"\n  | \"resuming\";\n\nexport type PopoverStatus =\n  | \"pending\"\n  | \"provisioning\"\n  | \"preparing\"\n  | \"ready\"\n  | \"suspended\";\n\nexport const PopoverStatusOrder: PopoverStatus[] = [\n  \"pending\",\n  \"preparing\",\n  \"provisioning\",\n];\n\nexport const KafkaToPopoverMapping: {\n  [status in KafkaStatus]: PopoverStatus | null;\n} = {\n  ready: null,\n  degraded: null,\n  accepted: \"pending\",\n  provisioning: \"provisioning\",\n  preparing: \"preparing\",\n  deprovision: null,\n  deleting: null,\n  suspended: \"suspended\",\n  suspending: null,\n  resuming: null,\n};\n","import { ProgressStep, ProgressStepper } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport { PopoverStatusOrder } from \"../types\";\n\ntype StatusProgressStepperProps = {\n  currentStatus: PopoverStatus;\n};\n\nexport const StatusProgressStepper: VoidFunctionComponent<\n  StatusProgressStepperProps\n> = ({ currentStatus }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const currentStep = PopoverStatusOrder.findIndex((s) => s === currentStatus);\n\n  const getVariant = (index: number) =>\n    (currentStep === index && \"info\") ||\n    (currentStep > index && \"success\") ||\n    \"default\";\n\n  return (\n    <ProgressStepper isVertical={true}>\n      <ProgressStep\n        id={\"pending\"}\n        titleId={\"pending\"}\n        isCurrent={currentStatus === \"pending\"}\n        description={t(\"kafka_status_popover.pending.description\")}\n        aria-label={t(\"kafka_status_popover.pending.description\")}\n        variant={getVariant(0)}\n      >\n        {t(\"kafka_status_popover.pending.title\")}\n      </ProgressStep>\n\n      <ProgressStep\n        id={\"provisioning\"}\n        titleId={\"provisioning\"}\n        isCurrent={currentStatus === \"provisioning\"}\n        description={t(\"kafka_status_popover.provisioning.description\")}\n        aria-label={t(\"kafka_status_popover.provisioning.description\")}\n        variant={getVariant(1)}\n      >\n        {t(\"kafka_status_popover.provisioning.title\")}\n      </ProgressStep>\n      <ProgressStep\n        id={\"preparing\"}\n        titleId={\"preparing\"}\n        isCurrent={currentStatus === \"preparing\"}\n        description={t(\"kafka_status_popover.preparing.description\")}\n        aria-label={t(\"kafka_status_popover.preparing.description\")}\n        variant={getVariant(2)}\n      >\n        {t(\"kafka_status_popover.preparing.title\")}\n      </ProgressStep>\n    </ProgressStepper>\n  );\n};\n","import {\n  Alert,\n  Button,\n  ButtonVariant,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport { PopoverStatusOrder } from \"../types\";\nimport { StatusProgressStepper } from \"./StatusProgressStepper\";\n\nexport type StatusPopoverContentProps = {\n  currentStatus: PopoverStatus;\n  showWarning?: boolean;\n  showError?: boolean;\n  onClickConnectionTabLink: () => void;\n  onClickSupportLink: () => void;\n};\n\nexport const StatusPopoverContent: VoidFunctionComponent<\n  StatusPopoverContentProps\n> = ({\n  currentStatus,\n  showWarning = false,\n  showError = false,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const currentStep = PopoverStatusOrder.findIndex((s) => s === currentStatus);\n\n  return (\n    <div>\n      <Stack hasGutter>\n        <StackItem>\n          {showWarning && (\n            <Alert\n              variant=\"warning\"\n              isInline\n              isPlain\n              title={t(\"kafka_status_popover.warning_or_error_title\")}\n            >\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  <Trans\n                    ns={[\"create-kafka-instance\"]}\n                    i18nKey=\"kafka_status_popover.header_content_with_warning\"\n                    components={[\n                      <Button\n                        key=\"btn-connetcion-tab\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickConnectionTabLink}\n                        isInline\n                      />,\n                    ]}\n                  />\n                </Text>\n              </TextContent>\n            </Alert>\n          )}\n          {showError && (\n            <Alert\n              variant=\"danger\"\n              isInline\n              isPlain\n              title={t(\"kafka_status_popover.warning_or_error_title\")}\n            >\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  <Trans\n                    ns={[\"create-kafka-instance\"]}\n                    i18nKey=\"kafka_status_popover.header_content_with_error\"\n                    components={[\n                      <Button\n                        key=\"btn-connetcion-tab\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickConnectionTabLink}\n                        isInline\n                      />,\n                      <Button\n                        key=\"btn-support-case\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickSupportLink}\n                        isInline\n                      />,\n                    ]}\n                  />\n                </Text>\n              </TextContent>\n            </Alert>\n          )}\n          {!showError && !showWarning && (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey=\"kafka_status_popover.header_content\"\n                  components={[\n                    <Button\n                      key=\"btn-connetcion-tab\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickConnectionTabLink}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Text>\n            </TextContent>\n          )}\n        </StackItem>\n        <StackItem>\n          {t(\"common:progress_stepper_current_step\", {\n            currentStep,\n            total: PopoverStatusOrder.length,\n          })}\n        </StackItem>\n        <StackItem>\n          <StatusProgressStepper currentStatus={currentStatus} />\n        </StackItem>\n      </Stack>\n    </div>\n  );\n};\n","import type { PopoverProps } from \"@patternfly/react-core\";\nimport { Popover } from \"@patternfly/react-core\";\nimport type { RefObject, VoidFunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport type { StatusPopoverContentProps } from \"./StatusPopoverContent\";\nimport { StatusPopoverContent } from \"./StatusPopoverContent\";\n\nexport type StatusPopoverProps = {\n  status: PopoverStatus;\n  initialOpen?: boolean;\n  showWarning?: boolean;\n  showError?: boolean;\n  children?: PopoverProps[\"children\"];\n  onClickConnectionTabLink: StatusPopoverContentProps[\"onClickConnectionTabLink\"];\n  onClickSupportLink: StatusPopoverContentProps[\"onClickSupportLink\"];\n  reference?: RefObject<HTMLButtonElement>;\n};\n\n/**\n * ## Introduction\n *\n * This is a popover that can be reached from the Kafka Instance table while the status of the instance in question is “Creating”.\n * A Kafka instance usually takes a few minutes to create. The purpose of this popover is to give the user some insights into\n * the creation process of their instance while they wait for it to be available to use.\n *\n * - The text at the top explains that the instance will be ready shortly & suggests that the user creates a service account while they wait.\n *  (Provides a link to the “Connections tab\" where this is done).\n *\n * - The steps shown in the progress stepper are statuses that show in the api. They have been grouped together under the one overall\n * “Creating status” in the table.There is some descriptive text accompanying each step too. When these steps are complete the instance will be ready for use\n *\n * - The popover is only available while instance creation is in progress.\n * - After creation is complete the table displays the ready status and the popover is no longer available.\n *\n */\nexport const StatusPopover: VoidFunctionComponent<StatusPopoverProps> = ({\n  initialOpen = false,\n  status,\n  showWarning = false,\n  showError = false,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n  reference,\n  children,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const [isVisible, setIsVisible] = useState(initialOpen);\n  const onClose = () => setIsVisible(false);\n\n  const handleClickConnectionTabLink = useCallback(() => {\n    onClose();\n    onClickConnectionTabLink();\n  }, [onClickConnectionTabLink]);\n\n  const handleClickSupportLink = useCallback(() => {\n    onClose();\n    onClickSupportLink();\n  }, [onClickSupportLink]);\n\n  return (\n    <Popover\n      headerContent={t(\"kafka_status_popover.title\")}\n      bodyContent={\n        <StatusPopoverContent\n          currentStatus={status}\n          showWarning={showWarning}\n          showError={showError}\n          onClickConnectionTabLink={handleClickConnectionTabLink}\n          onClickSupportLink={handleClickSupportLink}\n        />\n      }\n      isVisible={isVisible}\n      shouldOpen={() => setIsVisible(true)}\n      shouldClose={() => setIsVisible(false)}\n      position={\"right\"}\n      enableFlip={true}\n      reference={reference}\n    >\n      {children}\n    </Popover>\n  );\n};\n","import type { PopoverProps } from \"@patternfly/react-core\";\nimport { Popover, TextContent } from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { RefObject, VoidFunctionComponent } from \"react\";\n\nexport type SuspendedPopoverProps = {\n  children?: PopoverProps[\"children\"];\n  reference?: RefObject<HTMLButtonElement>;\n};\n\nexport const SuspendedPopover: VoidFunctionComponent<SuspendedPopoverProps> = ({\n  children,\n  reference,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <Popover\n      alertSeverityVariant={\"warning\"}\n      headerIcon={<ExclamationTriangleIcon />}\n      headerContent={t(\"suspend_popover_title\")}\n      bodyContent={\n        <TextContent>\n          <p>{t(\"suspend_popover_body_1\")}</p>\n        </TextContent>\n      }\n      position={\"right\"}\n      reference={reference}\n    >\n      {children}\n    </Popover>\n  );\n};\n","import { useInterval } from \"@rhoas/app-services-ui-components\";\nimport { differenceInMinutes } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport type { Status } from \"ui-models/src/models/kafka\";\nimport type { StatusPopoverProps } from \"./components\";\nimport { StatusLabel, StatusPopover, SuspendedPopover } from \"./components\";\nimport { KafkaToPopoverMapping } from \"./types\";\n\nexport type KafkaInstanceStatusProps = {\n  status: Status;\n  createdAt: Date;\n  warningAfterMinutes?: number;\n  errorAfterMinutes?: number;\n} & Pick<StatusPopoverProps, \"onClickConnectionTabLink\" | \"onClickSupportLink\">;\n\n/**\n * A component to show the status of a Kafka instance combining the\n * `StatusPopover` with the `StatusLabel`, with automatic handling of which\n * statuses should have a companion popover.\n */\nexport const KafkaInstanceStatus: VoidFunctionComponent<\n  KafkaInstanceStatusProps\n> = ({\n  status,\n  createdAt,\n  warningAfterMinutes = 15,\n  errorAfterMinutes = 30,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n}) => {\n  const popoverStatus = KafkaToPopoverMapping[status];\n  const [alert, setAlert] = useState<\"warning\" | \"error\" | false>(false);\n  const labelRef = useRef<HTMLButtonElement>(null);\n\n  const checkCreatedAt = useCallback(() => {\n    const elapsed = differenceInMinutes(new Date(), createdAt);\n    if (elapsed > errorAfterMinutes) {\n      setAlert(\"error\");\n    } else if (elapsed > warningAfterMinutes) {\n      setAlert(\"warning\");\n    } else {\n      setAlert(false);\n    }\n  }, [createdAt, errorAfterMinutes, warningAfterMinutes]);\n\n  useInterval(checkCreatedAt, 5000);\n  const showWarning = alert === \"warning\";\n  const showError = alert === \"error\";\n  return (\n    <>\n      {popoverStatus === \"suspended\" ? (\n        <SuspendedPopover reference={labelRef} />\n      ) : (\n        popoverStatus && (\n          <StatusPopover\n            status={popoverStatus}\n            showWarning={showWarning}\n            showError={showError}\n            onClickConnectionTabLink={onClickConnectionTabLink}\n            onClickSupportLink={onClickSupportLink}\n            reference={labelRef}\n          />\n        )\n      )}\n      <StatusLabel\n        value={status}\n        showWarning={showWarning}\n        showError={showError}\n        withPopover={popoverStatus !== undefined}\n        ref={labelRef}\n      />\n    </>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type EmptyStateNoInstancesProps = {\n  onCreate: () => void;\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoInstances: VoidFunctionComponent<\n  EmptyStateNoInstancesProps\n> = ({ onCreate, onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_instances_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_instances_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button ouiaId=\"button-create\" variant=\"primary\" onClick={onCreate}>\n        {t(\"empty_state_no_instances_create_instance\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type EmptyStateNoResultsProps = {\n  onClearAllFilters: () => void;\n};\n\nexport const EmptyStateNoResults: VoidFunctionComponent<\n  EmptyStateNoResultsProps\n> = ({ onClearAllFilters }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_results_found_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_results_found_body\"}\n          components={[<a onClick={onClearAllFilters} />]}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { Button, PageSection, Stack, StackItem } from \"@patternfly/react-core\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  FormatDate,\n  TableView,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport type { Kafka, SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { DeletingStatuses } from \"ui-models/src/models/kafka\";\nimport { useKafkaLabels } from \"../../hooks\";\nimport { KafkaInstanceActions } from \"../KafkaInstanceActions\";\nimport { KafkaInstanceStatus } from \"../KafkaInstanceStatus\";\nimport type {\n  EmptyStateNoInstancesProps,\n  EmptyStateNoResultsProps,\n} from \"./components\";\nimport { EmptyStateNoInstances, EmptyStateNoResults } from \"./components\";\n\nconst Columns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"provider\",\n  \"region\",\n  \"status\",\n] as const;\n\nexport type KafkaInstancesProps<T extends Kafka = Kafka> = {\n  instances: Array<T> | undefined | null;\n  getUrlForInstance: (row: T) => string;\n  names: string[];\n  owners: string[];\n  statuses: string[];\n  onCreate: () => void;\n  onSearchName: (value: string) => void;\n  onRemoveNameChip: (value: string) => void;\n  onRemoveNameChips: () => void;\n  onSearchOwner: (value: string) => void;\n  onRemoveOwnerChip: (value: string) => void;\n  onRemoveOwnerChips: () => void;\n  onSearchStatus: (value: SimplifiedStatus) => void;\n  onRemoveStatusChip: (value: SimplifiedStatus) => void;\n  onRemoveStatusChips: () => void;\n  onDetails: (row: T) => void;\n  onConnection: (row: T) => void;\n  canChangeOwner: (row: T) => boolean;\n  onChangeOwner: (row: T) => void;\n  canDelete: (row: T) => boolean;\n  onDelete: (row: T) => void;\n  onClickConnectionTabLink: (row: T) => void;\n  onClickSupportLink: () => void;\n  onInstanceLinkClick: (row: T) => void;\n  canHaveInstanceLink: (row: T) => boolean;\n  canOpenConnection: (row: T) => boolean;\n} & Pick<\n  TableViewProps<T, typeof Columns[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n> &\n  EmptyStateNoInstancesProps &\n  EmptyStateNoResultsProps;\n\nexport const KafkaInstances = <T extends Kafka>({\n  instances,\n  itemCount,\n  page,\n  perPage,\n  names,\n  owners,\n  statuses,\n  getUrlForInstance,\n  isRowSelected,\n  isColumnSortable,\n  onPageChange,\n  onDetails,\n  onConnection,\n  canChangeOwner,\n  onChangeOwner,\n  canDelete,\n  onDelete,\n  onCreate,\n  onQuickstartGuide,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n  onInstanceLinkClick,\n  onSearchName,\n  onRemoveNameChip,\n  onRemoveNameChips,\n  onSearchOwner,\n  onRemoveOwnerChip,\n  onRemoveOwnerChips,\n  onSearchStatus,\n  onRemoveStatusChip,\n  onRemoveStatusChips,\n  onClearAllFilters,\n\n  canHaveInstanceLink,\n  canOpenConnection,\n}: KafkaInstancesProps<T>) => {\n  const { t } = useTranslation(\"kafka\");\n  const labels = useKafkaLabels();\n  const breakpoint = \"lg\";\n\n  const isFiltered =\n    names.length > 0 || owners.length > 0 || statuses.length > 0;\n\n  return (\n    <PageSection isFilled={true}>\n      <TableView\n        data={instances}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          const timeCreatedDate = parseISO(row.createdAt);\n          const instanceLinkEnable = canHaveInstanceLink(row);\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"name\":\n                    return (\n                      <Button\n                        variant=\"link\"\n                        component={(props) => (\n                          <Link to={getUrlForInstance(row)} {...props}>\n                            {row.name}\n                          </Link>\n                        )}\n                        isInline={true}\n                        isAriaDisabled={!instanceLinkEnable}\n                        isDisabled={!instanceLinkEnable}\n                        onClick={() => onInstanceLinkClick(row)}\n                      />\n                    );\n                  case \"provider\":\n                    return labels.providers[row.provider];\n                  case \"createdAt\":\n                    return (\n                      <Stack>\n                        <StackItem>\n                          <FormatDate\n                            date={timeCreatedDate}\n                            format={\"distanceToNowWithAgo\"}\n                          />\n                        </StackItem>\n                        {row.expiryDate && (\n                          <StackItem>\n                            <Trans\n                              i18nKey=\"will_expire_short\"\n                              ns={[\"kafka\"]}\n                              components={{\n                                time: (\n                                  <FormatDate\n                                    date={parseISO(row.expiryDate)}\n                                    format=\"expiration\"\n                                  />\n                                ),\n                              }}\n                            />\n                          </StackItem>\n                        )}\n                      </Stack>\n                    );\n                  case \"status\":\n                    return (\n                      <KafkaInstanceStatus\n                        status={row[\"status\"]}\n                        createdAt={timeCreatedDate}\n                        onClickConnectionTabLink={() =>\n                          onClickConnectionTabLink(row)\n                        }\n                        onClickSupportLink={onClickSupportLink}\n                      />\n                    );\n                  default:\n                    return row[column];\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row }) => {\n          const changeOwnerEnabled = canChangeOwner(row);\n          const deleteEnabled = canDelete(row);\n          const openConnectionEnabled = canOpenConnection(row);\n          return (\n            <KafkaInstanceActions\n              onDetails={() => onDetails(row)}\n              onConnection={() => onConnection(row)}\n              canOpenConnection={openConnectionEnabled}\n              canChangeOwner={changeOwnerEnabled}\n              onChangeOwner={() => onChangeOwner(row)}\n              canDelete={deleteEnabled}\n              onDelete={() => onDelete(row)}\n            />\n          );\n        }}\n        onRowClick={({ row }) => onDetails(row)}\n        isColumnSortable={isColumnSortable}\n        isRowSelected={isRowSelected}\n        isRowDeleted={({ row }) => DeletingStatuses.includes(row[\"status\"])}\n        toolbarBreakpoint={breakpoint}\n        filters={{\n          [labels.fields.name]: {\n            type: \"search\",\n            chips: names,\n            onSearch: onSearchName,\n            onRemoveChip: onRemoveNameChip,\n            onRemoveGroup: onRemoveNameChips,\n            validate: (value) => /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(value),\n            errorMessage: t(\"kafka:input_field_invalid_message\"),\n          },\n          [labels.fields.owner]: {\n            type: \"search\",\n            chips: owners,\n            onSearch: onSearchOwner,\n            onRemoveChip: onRemoveOwnerChip,\n            onRemoveGroup: onRemoveOwnerChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"kafka:input_field_invalid_message\"),\n          },\n          [labels.fields.status]: {\n            type: \"checkbox\",\n            chips: statuses,\n            options: labels.statusesSimplified,\n            onToggle: onSearchStatus,\n            onRemoveChip: onRemoveStatusChip,\n            onRemoveGroup: onRemoveStatusChips,\n          },\n        }}\n        actions={[\n          {\n            label: t(\"create_instance\"),\n            onClick: onCreate,\n            isPrimary: true,\n          },\n        ]}\n        itemCount={itemCount}\n        page={page}\n        perPage={perPage}\n        onPageChange={onPageChange}\n        onClearAllFilters={onClearAllFilters}\n        ariaLabel={t(\"table.title\")}\n        isFiltered={isFiltered}\n        emptyStateNoData={\n          <EmptyStateNoInstances\n            onCreate={onCreate}\n            onQuickstartGuide={onQuickstartGuide}\n          />\n        }\n        emptyStateNoResults={\n          <EmptyStateNoResults onClearAllFilters={onClearAllFilters} />\n        }\n      />\n    </PageSection>\n  );\n};\n","import type { DatePickerProps, TimePickerProps } from \"@patternfly/react-core\";\nimport { DatePicker, InputGroup, TimePicker } from \"@patternfly/react-core\";\nimport { formatISO, parseISO, setHours, setMinutes } from \"date-fns\";\nimport { formatInTimeZone } from \"date-fns-tz\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { DateIsoString } from \"../../../../../ui-models/src/types\";\n\nexport type DateTimePickerProps = {\n  isDisabled: boolean;\n  value: DateIsoString | undefined;\n  onChange: (value: DateIsoString) => void;\n};\nexport const DateTimePicker: VoidFunctionComponent<DateTimePickerProps> = ({\n  isDisabled,\n  value,\n  onChange,\n}) => {\n  const [timeSelected, setIsTimeSelected] = useState(false);\n  const date = value ? parseISO(value) : undefined;\n\n  const onSelectCalendar: DatePickerProps[\"onChange\"] = (_, newDate) => {\n    if (newDate) {\n      onChange(formatISO(newDate) as DateIsoString);\n    }\n  };\n\n  const onSelectTime: TimePickerProps[\"onChange\"] = (\n    time,\n    hour,\n    minute,\n    __,\n    isValid\n  ) => {\n    if (\n      isValid &&\n      date &&\n      hour != undefined &&\n      hour > 0 &&\n      (time.includes(\"AM\") || time.includes(\"PM\"))\n    ) {\n      let newDate = date;\n      if (hour !== undefined) {\n        newDate = setHours(newDate, hour);\n      }\n      if (minute !== undefined) {\n        newDate = setMinutes(newDate, minute);\n      }\n\n      onChange(formatISO(newDate) as DateIsoString);\n      setIsTimeSelected(true);\n    }\n  };\n\n  return (\n    <InputGroup>\n      <DatePicker\n        isDisabled={isDisabled}\n        value={date ? formatInTimeZone(date, \"UTC\", \"yyyy-MM-dd\") : undefined}\n        onChange={onSelectCalendar}\n      />\n      <TimePicker\n        isDisabled={!date || isDisabled}\n        time={timeSelected ? date : undefined}\n        onChange={onSelectTime}\n      />\n    </InputGroup>\n  );\n};\n","import {\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  DropdownSeparator,\n  DropdownToggle,\n  InputGroup,\n  TextInput,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { DateIsoString } from \"../../../../../ui-models/src/types\";\nimport { DateTimePicker } from \"./DateTimePicker\";\n\ntype Category = \"offset\" | \"timestamp\" | \"epoch\" | \"latest\";\nexport type FilterGroupProps = {\n  isDisabled: boolean;\n  offset: number | undefined;\n  epoch: number | undefined;\n  timestamp: DateIsoString | undefined;\n  onOffsetChange: (value: number | undefined) => void;\n  onTimestampChange: (value: DateIsoString | undefined) => void;\n  onEpochChange: (value: number | undefined) => void;\n  onLatest: () => void;\n};\nexport const FilterGroup: VoidFunctionComponent<FilterGroupProps> = ({\n  isDisabled,\n  offset,\n  epoch,\n  timestamp,\n  onOffsetChange,\n  onTimestampChange,\n  onEpochChange,\n  onLatest,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [currentCategory, setCurrentCategory] = useState<Category>(\"latest\");\n  const [isOpen, setIsOpen] = useState(false);\n  const labels: { [key in Category]: string } = {\n    offset: t(\"filter.offset\"),\n    timestamp: t(\"filter.timestamp\"),\n    epoch: t(\"filter.epoch\"),\n    latest: t(\"filter.latest\"),\n  };\n  return (\n    <ToolbarItem>\n      <InputGroup>\n        <Dropdown\n          data-testid={\"filter-group-dropdown\"}\n          toggle={\n            <DropdownToggle\n              onToggle={setIsOpen}\n              isDisabled={isDisabled}\n              data-testid={\"filter-group\"}\n            >\n              {labels[currentCategory]}\n            </DropdownToggle>\n          }\n          position={DropdownPosition.left}\n          isOpen={isOpen}\n          onSelect={() => setIsOpen(false)}\n          dropdownItems={[\n            <DropdownItem\n              key=\"offset\"\n              value=\"offset\"\n              autoFocus={currentCategory === \"offset\"}\n              onClick={() => setCurrentCategory(\"offset\")}\n            >\n              {labels[\"offset\"]}\n            </DropdownItem>,\n            <DropdownItem\n              key=\"timestamp\"\n              value=\"timestamp\"\n              autoFocus={currentCategory === \"timestamp\"}\n              onClick={() => setCurrentCategory(\"timestamp\")}\n            >\n              {labels[\"timestamp\"]}\n            </DropdownItem>,\n            <DropdownItem\n              key=\"epoch\"\n              value=\"epoch\"\n              autoFocus={currentCategory === \"epoch\"}\n              onClick={() => setCurrentCategory(\"epoch\")}\n            >\n              {labels[\"epoch\"]}\n            </DropdownItem>,\n            <DropdownSeparator key={\"divider\"} />,\n            <DropdownItem\n              key=\"latest\"\n              value=\"latest\"\n              autoFocus={currentCategory === \"latest\"}\n              onClick={() => {\n                setCurrentCategory(\"latest\");\n                onLatest();\n              }}\n            >\n              {labels[\"latest\"]}\n            </DropdownItem>,\n          ]}\n        />\n        {currentCategory === \"offset\" && (\n          <TextInput\n            isDisabled={isDisabled}\n            type={\"number\"}\n            aria-label={t(\"filter.offset_aria_label\")}\n            placeholder={t(\"filter.offset_placeholder\")}\n            onChange={(value) => {\n              if (value !== \"\") {\n                const newOffset = parseInt(value, 10);\n                if (Number.isInteger(newOffset)) {\n                  onOffsetChange(newOffset);\n                }\n              } else {\n                onOffsetChange(undefined);\n              }\n            }}\n            value={offset === undefined ? \"\" : offset}\n          />\n        )}\n        {currentCategory === \"timestamp\" && (\n          <DateTimePicker\n            isDisabled={isDisabled}\n            value={timestamp}\n            onChange={onTimestampChange}\n          />\n        )}\n        {currentCategory === \"epoch\" && (\n          <TextInput\n            isDisabled={isDisabled}\n            type={\"number\"}\n            aria-label={t(\"filter.epoch_aria_label\")}\n            placeholder={t(\"filter.epoch_placeholder\")}\n            className=\"pf-u-flex-basis-auto pf-u-flex-grow-0 pf-u-w-initial\"\n            size={t(\"filter.epoch_placeholder\").length}\n            onChange={(value) => {\n              if (value !== \"\" && Number(value) >= 0)\n                onEpochChange(Number(value));\n              else onEpochChange(undefined);\n            }}\n            value={epoch == undefined ? \"\" : epoch}\n          />\n        )}\n      </InputGroup>\n    </ToolbarItem>\n  );\n};\n","import {\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type LimitSelectorProps = {\n  value: number;\n  isDisabled: boolean;\n  onChange: (value: number) => void;\n};\nexport const LimitSelector: VoidFunctionComponent<LimitSelectorProps> = ({\n  value,\n  isDisabled,\n  onChange,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = (isOpen: boolean) => setIsOpen(isOpen);\n  const titleId = \"limit-selector\";\n\n  return (\n    <InputGroup>\n      <InputGroupText className=\"pf-c-content\">\n        {t(\"limit_label\")}\n      </InputGroupText>\n      <div>\n        <span id={titleId} hidden>\n          Select a state\n        </span>\n\n        <Select\n          aria-label={t(\"per_page_aria_label\")}\n          onToggle={toggleOpen}\n          selections={value !== undefined ? [t(\"limit\", { value })] : undefined}\n          isOpen={isOpen}\n          isDisabled={isDisabled}\n          onSelect={() => setIsOpen(false)}\n          data-testid={\"limit-selector\"}\n        >\n          {[10, 20, 50].map((value, idx) => (\n            <SelectOption\n              key={idx}\n              value={t(\"limit\", { value })}\n              onClick={() => onChange(value)}\n            />\n          ))}\n        </Select>\n      </div>\n    </InputGroup>\n  );\n};\n","import type { Message } from \"ui-models/src/models/message\";\n\nexport function isSameMessage(m1: Message, m2: Message) {\n  return JSON.stringify(m1) === JSON.stringify(m2);\n}\n\nexport function beautifyUnknownValue(value: string): string {\n  try {\n    return JSON.stringify(JSON.parse(value), null, 2);\n  } catch (e) {\n    // noop\n  }\n  return value;\n}\n\nexport function truncate(value: string, length: number): [string, boolean] {\n  const shouldTruncate = value.length > length;\n  return [\n    shouldTruncate ? `${value.substring(0, length)}...` : value,\n    shouldTruncate,\n  ];\n}\n","export enum RetentionTimeUnits {\n  MILLISECOND = \"milliseconds\",\n  SECOND = \"seconds\",\n  MINUTE = \"minutes\",\n  HOUR = \"hours\",\n  DAY = \"days\",\n  WEEK = \"weeks\",\n  CUSTOM = \"custom\",\n  UNLIMITED = \"unlimited\",\n}\n\nexport enum RetentionSizeUnits {\n  BYTE = \"bytes\",\n  KIBIBYTE = \"kibibytes\",\n  MEBIBYTE = \"mebibytes\",\n  GIBIBYTE = \"gibibytes\",\n  TEBIBYTE = \"tebibytes\",\n  CUSTOM = \"custom\",\n  UNLIMITED = \"unlimited\",\n}\n\nexport const unitsToBytes = {\n  [RetentionSizeUnits.BYTE]: BigInt(\"1\"),\n  [RetentionSizeUnits.KIBIBYTE]: BigInt(\"1024\"),\n  [RetentionSizeUnits.MEBIBYTE]: BigInt(\"1048576\"),\n  [RetentionSizeUnits.GIBIBYTE]: BigInt(\"1073741824\"),\n  [RetentionSizeUnits.TEBIBYTE]: BigInt(\"1099511627776\"),\n};\n\nexport const unitsToMilliSecond = {\n  [RetentionTimeUnits.MILLISECOND]: BigInt(\"1\"),\n  [RetentionTimeUnits.SECOND]: BigInt(\"1000\"),\n  [RetentionTimeUnits.MINUTE]: BigInt(\"60000\"),\n  [RetentionTimeUnits.HOUR]: BigInt(\"3600000\"),\n  [RetentionTimeUnits.DAY]: BigInt(\"86400000\"),\n};\n\ntype ConversionUnit = {\n  value: bigint;\n  unit: string;\n};\n\nexport const millisecondsToTime = (value: bigint): ConversionUnit => {\n  if (value) {\n    if (value % unitsToMilliSecond.days == BigInt(0))\n      return { value: value / unitsToMilliSecond.days, unit: \"days\" };\n    if (value % unitsToMilliSecond.hours == BigInt(0))\n      return { value: value / unitsToMilliSecond.hours, unit: \"hours\" };\n    if (value % unitsToMilliSecond.minutes == BigInt(0))\n      return { value: value / unitsToMilliSecond.minutes, unit: \"minutes\" };\n    if (value % unitsToMilliSecond.seconds == BigInt(0))\n      return { value: value / unitsToMilliSecond.seconds, unit: \"seconds\" };\n  }\n\n  return { value, unit: \"milliseconds\" };\n};\n\nexport const formattedRetentionTime = (time: bigint): string => {\n  const { unit, value } = millisecondsToTime(time);\n  return Number(value) === -1 ? \"Unlimited\" : `${time} ms (${value} ${unit})`;\n};\n\nexport const formattedRetentionSize = (size: bigint): string => {\n  const { unit, value } = bytesToMemorySize(size);\n  return Number(value) === -1\n    ? \"Unlimited\"\n    : `${size} bytes (${value} ${unit})`;\n};\n\nexport const bytesToMemorySize = (value: bigint): ConversionUnit => {\n  if (value) {\n    if (value % unitsToBytes.tebibytes == BigInt(0))\n      return { value: value / unitsToBytes.tebibytes, unit: \"tebibytes\" };\n    if (value % unitsToBytes.gibibytes == BigInt(0))\n      return { value: value / unitsToBytes.gibibytes, unit: \"gibibytes\" };\n    if (value % unitsToBytes.mebibytes == BigInt(0))\n      return { value: value / unitsToBytes.mebibytes, unit: \"mebibytes\" };\n    if (value % unitsToBytes.kibibytes == BigInt(0))\n      return { value: value / unitsToBytes.kibibytes, unit: \"kibibytes\" };\n  }\n\n  return { value, unit: \"bytes\" };\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type NoDataCellProps = {\n  columnLabel: string;\n};\nexport const NoDataCell: VoidFunctionComponent<NoDataCellProps> = ({\n  columnLabel,\n}) => {\n  const { t } = useTranslation(\"common\");\n  return (\n    <span className=\"pf-u-color-400\">\n      {t(\"table_cell_no_data\", { column: columnLabel })}\n    </span>\n  );\n};\n","import {\n  ClipboardCopy,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelContent,\n  Flex,\n  FlexItem,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { FormatDate, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport { beautifyUnknownValue } from \"../utils\";\nimport { NoDataCell } from \"./NoDataCell\";\n\nexport type MessageDetailsProps = {\n  onClose: () => void;\n  defaultTab: MessageDetailsBodyProps[\"defaultTab\"];\n  message: Message | undefined;\n};\nexport const MessageDetails: VoidFunctionComponent<MessageDetailsProps> = ({\n  onClose,\n  defaultTab,\n  message,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n\n  return (\n    <DrawerPanelContent isResizable={true} minSize={\"400px\"}>\n      <DrawerHead>\n        <TextContent>\n          <Text component={TextVariants.h2}>{t(\"message\")}</Text>\n        </TextContent>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerContentBody>\n        {message && (\n          <MessageDetailsBody\n            defaultTab={defaultTab}\n            messageKey={message.key}\n            {...message}\n          />\n        )}\n      </DrawerContentBody>\n    </DrawerPanelContent>\n  );\n};\n\nexport type MessageDetailsBodyProps = {\n  defaultTab: \"value\" | \"headers\";\n  messageKey: Message[\"key\"];\n} & Omit<Message, \"key\">;\n\nexport const MessageDetailsBody: VoidFunctionComponent<\n  MessageDetailsBodyProps\n> = ({ defaultTab, ...message }) => {\n  const { t } = useTranslation(\"message-browser\");\n\n  return (\n    <Flex direction={{ default: \"column\" }} data-testid={\"message-details\"}>\n      <FlexItem>\n        <DescriptionList isHorizontal isCompact>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.partition\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.partition}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.offset\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.offset}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.timestamp\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.timestamp ? (\n                <FormatDate\n                  date={parseISO(message.timestamp)}\n                  format={\"longWithMilliseconds\"}\n                />\n              ) : (\n                <NoDataCell columnLabel={t(\"field.timestamp\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.epoch\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.timestamp ? (\n                <FormatDate\n                  date={parseISO(message.timestamp)}\n                  format={\"epoch\"}\n                />\n              ) : (\n                <NoDataCell columnLabel={t(\"field.epoch\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.key\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.messageKey ? (\n                message.messageKey\n              ) : (\n                <NoDataCell columnLabel={t(\"field.key\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n        </DescriptionList>\n      </FlexItem>\n      <FlexItem>\n        {/* set key to be a random number to force redraw the tabs in order to change the active tab from the outside */}\n        <Tabs defaultActiveKey={defaultTab} key={Math.random()}>\n          <Tab\n            eventKey={\"value\"}\n            title={<TabTitleText>{t(\"field.value\")}</TabTitleText>}\n          >\n            <ClipboardCopy isCode={true} isExpanded={true} isReadOnly={true}>\n              {beautifyUnknownValue(message.value || \"\")}\n            </ClipboardCopy>\n          </Tab>\n          <Tab\n            eventKey={\"headers\"}\n            title={<TabTitleText>{t(\"field.headers\")}</TabTitleText>}\n          >\n            <ClipboardCopy isCode={true} isExpanded={true} isReadOnly={true}>\n              {beautifyUnknownValue(JSON.stringify(message.headers) || \"\")}\n            </ClipboardCopy>\n          </Tab>\n        </Tabs>\n      </FlexItem>\n    </Flex>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const NoDataEmptyState: VoidFunctionComponent<{\n  onRefresh: () => void;\n}> = ({ onRefresh }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {t(\"no_data_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_data_body\")}</EmptyStateBody>\n      <Button onClick={onRefresh}>{t(\"no_data_refresh\")}</Button>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const NoResultsEmptyState: VoidFunctionComponent<{\n  onReset: () => void;\n}> = ({ onReset }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {t(\"no_results_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_results_body\")}</EmptyStateBody>\n      <Button variant={\"link\"} onClick={onReset}>\n        {t(\"no_results_reset\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { Text, TextContent } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const OffsetRange: VoidFunctionComponent<{\n  min: number;\n  max: number;\n}> = ({ min, max }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <TextContent className=\"pf-u-font-size\">\n      <Text>\n        {t(\"offset\")} <span className=\"custom-text\">{min}</span> -{\" \"}\n        <span className=\"custom-text\">{max}</span>\n      </Text>\n    </TextContent>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  InputGroup,\n  InputGroupText,\n  InputGroupTextVariant,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nconst MAX_OPTIONS = 20;\n\nexport type PartitionSelectorProps = {\n  value: number | undefined;\n  partitions: number | undefined;\n  isDisabled: boolean;\n  onChange: (value: number | undefined) => void;\n};\nexport const PartitionSelector: VoidFunctionComponent<\n  PartitionSelectorProps\n> = ({ value, partitions, isDisabled, onChange }) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = (isOpen: boolean) => setIsOpen(isOpen);\n  const titleId = \"partition-selector\";\n\n  const handleChange = useCallback(\n    (value: string) => {\n      if (value !== \"\") {\n        const valueAsNum = parseInt(value, 10);\n        if (Number.isInteger(valueAsNum)) {\n          onChange(valueAsNum);\n        }\n      }\n      setIsOpen(false);\n    },\n    [onChange]\n  );\n\n  const allPartitions = useMemo(() => {\n    return new Array(partitions).fill(0).map((_, index) => index.toString());\n  }, [partitions]);\n\n  const makeOptions = useCallback(\n    (values: string[]) => {\n      const options = values\n        .slice(0, MAX_OPTIONS)\n        .map((v) => <SelectOption key={v} value={v} />);\n      const hiddenOptionsCount = values.length - options.length;\n      return hiddenOptionsCount\n        ? [\n            ...options,\n            <SelectOption\n              key={\"more-info\"}\n              isDisabled={true}\n              description={t(\"partitions_hidden\", {\n                count: hiddenOptionsCount,\n              })}\n            />,\n          ]\n        : options;\n    },\n    [t]\n  );\n\n  const options = useMemo(() => {\n    return makeOptions(allPartitions);\n  }, [allPartitions, makeOptions]);\n\n  const handleFilter: SelectProps[\"onFilter\"] = useCallback(\n    (_, filter: string) => {\n      if (filter !== \"\") {\n        return makeOptions(\n          allPartitions.filter((partition) => partition.includes(filter))\n        );\n      }\n      return options;\n    },\n    [allPartitions, makeOptions, options]\n  );\n\n  return (\n    <InputGroup>\n      <InputGroupText className=\"pf-c-content\">\n        {t(\"field.partition\")}\n      </InputGroupText>\n      <div>\n        <span id={titleId} hidden>\n          {t(\"select_partition_aria_label\")}\n        </span>\n        <Select\n          variant={SelectVariant.typeahead}\n          typeAheadAriaLabel={t(\"select_partition_typeahead\")}\n          onToggle={toggleOpen}\n          onSelect={(_, value) => handleChange(value as string)}\n          selections={value !== undefined ? [`${value}`] : undefined}\n          isOpen={isOpen}\n          aria-labelledby={titleId}\n          maxHeight={200}\n          width={150}\n          onFilter={handleFilter}\n          isInputValuePersisted={false}\n          isDisabled={isDisabled}\n          placeholderText={t(\"partition_placeholder\")}\n          onClear={() => onChange(undefined)}\n          data-testid={\"partition-selector\"}\n        >\n          {options}\n        </Select>\n      </div>\n      <InputGroupText\n        id={`${titleId}-input`}\n        variant={InputGroupTextVariant.plain}\n        className=\"pf-c-content\"\n      >\n        {t(\"select_partition_of_count\", { partitions })}\n      </InputGroupText>\n    </InputGroup>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { truncate } from \"../utils\";\nimport { Flex, FlexItem } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nconst PREVIEW_LENGTH = 170;\n\nexport type UnknownValuePreviewProps = {\n  value: string;\n  truncateAt?: number;\n  onClick?: () => void;\n};\nexport const UnknownValuePreview: VoidFunctionComponent<\n  UnknownValuePreviewProps\n> = ({ value, truncateAt = PREVIEW_LENGTH, onClick }) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [preview, truncated] = truncate(value, truncateAt);\n  return (\n    <Flex\n      direction={{ default: \"column\" }}\n      spaceItems={{ default: \"spaceItemsXs\" }}\n    >\n      <FlexItem>{preview}</FlexItem>\n      {truncated && (\n        <FlexItem>\n          <a\n            onClick={\n              onClick\n                ? (e) => {\n                    e.stopPropagation();\n                    onClick();\n                  }\n                : undefined\n            }\n          >\n            {t(\"show_more\")}\n          </a>\n        </FlexItem>\n      )}\n    </Flex>\n  );\n};\n","import type { Message } from \"ui-models/src/models/message\";\nimport { assign, createMachine } from \"xstate\";\nimport type { DateIsoString } from \"../../../../ui-models/src/types\";\nimport { isSameMessage } from \"./utils\";\n\nexport type MessageApiResponse = {\n  lastUpdated: Date;\n  messages: Message[];\n  partitions: number;\n  offsetMin: number;\n  offsetMax: number;\n\n  filter: {\n    partition: number | undefined;\n    offset: number | undefined;\n    timestamp: DateIsoString | undefined;\n    limit: number | undefined;\n    epoch: number | undefined;\n  };\n};\n\nexport const MessageBrowserMachine = createMachine(\n  {\n    id: \"message-browser\",\n    predictableActionArguments: true,\n    tsTypes: {} as import(\"./MessageBrowserMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as {\n        // response\n        response: MessageApiResponse | undefined;\n\n        limit: number;\n        // optional input\n        partition: number | undefined;\n        offset: number | undefined;\n        epoch: number | undefined;\n        timestamp: DateIsoString | undefined;\n        selectedMessage: Message | undefined;\n      },\n      events: {} as\n        | {\n            type: \"fetchSuccess\";\n            messages: Message[];\n            partitions: number;\n            offsetMin: number;\n            offsetMax: number;\n          }\n        | { type: \"fetchFail\" }\n        | { type: \"refresh\" }\n        | { type: \"setPartition\"; value: number | undefined }\n        | { type: \"setOffset\"; value: number | undefined }\n        | { type: \"setTimestamp\"; value: DateIsoString | undefined }\n        | { type: \"setEpoch\"; value: number | undefined }\n        | { type: \"setLatest\" }\n        | { type: \"setLimit\"; value: number }\n        | { type: \"selectMessage\"; message: Message }\n        | { type: \"deselectMessage\" },\n    },\n    initial: \"initialLoading\",\n    context: {\n      // response\n      response: undefined,\n\n      limit: 10,\n      // optional input\n      partition: undefined,\n      offset: undefined,\n      timestamp: undefined,\n      selectedMessage: undefined,\n      epoch: undefined,\n    },\n    states: {\n      initialLoading: {\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMessages\",\n            target: \"verifyMessages\",\n          },\n          fetchFail: \"error\",\n        },\n      },\n      verifyMessages: {\n        always: [{ cond: \"noMessages\", target: \"noData\" }, { target: \"ready\" }],\n      },\n      noData: {\n        on: {\n          refresh: \"initialLoading\",\n        },\n      },\n      error: {\n        on: {\n          refresh: \"initialLoading\",\n        },\n      },\n      ready: {\n        initial: \"pristine\",\n        states: {\n          pristine: {},\n          dirty: {\n            tags: \"dirty\",\n          },\n          shouldSearch: {\n            always: [\n              {\n                cond: \"areFiltersChanged\",\n                target: \"dirty\",\n              },\n              { target: \"pristine\" },\n            ],\n          },\n        },\n        always: [\n          {\n            cond: \"selectedMessageNotAvailable\",\n            actions: \"deselectMessage\",\n          },\n        ],\n        on: {\n          refresh: \"refreshing\",\n          setPartition: {\n            target: \".shouldSearch\",\n            actions: \"setPartition\",\n          },\n          setEpoch: {\n            actions: \"setEpoch\",\n            target: \".shouldSearch\",\n          },\n          setTimestamp: {\n            target: \".shouldSearch\",\n            actions: \"setTimestamp\",\n          },\n          setOffset: {\n            target: \".shouldSearch\",\n            actions: \"setOffset\",\n          },\n          setLatest: {\n            target: \".shouldSearch\",\n            actions: \"setLatest\",\n          },\n          setLimit: {\n            target: \".shouldSearch\",\n            actions: \"setLimit\",\n          },\n          selectMessage: {\n            actions: \"selectMessage\",\n          },\n          deselectMessage: {\n            actions: \"deselectMessage\",\n          },\n        },\n      },\n      refreshing: {\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMessages\",\n            target: \"ready\",\n          },\n          fetchFail: {\n            target: \"ready\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setMessages: assign(\n        (context, { messages, partitions, offsetMin, offsetMax }) => ({\n          response: {\n            lastUpdated: new Date(),\n            messages,\n            partitions,\n            offsetMin,\n            offsetMax,\n            filter: {\n              partition: context.partition,\n              timestamp: context.timestamp,\n              offset: context.offset,\n              limit: context.limit,\n              epoch: context.epoch,\n            },\n          },\n        })\n      ),\n      setPartition: assign((_, { value }) => ({ partition: value })),\n      setEpoch: assign((_, { value }) => ({\n        epoch: value,\n      })),\n      setTimestamp: assign((_, { value }) => ({\n        timestamp: value,\n      })),\n      setOffset: assign((_, { value }) => ({\n        offset: value,\n      })),\n      setLimit: assign((_, { value }) => ({\n        limit: value,\n      })),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      setLatest: assign((_) => ({\n        timestamp: undefined,\n        offset: undefined,\n      })),\n      selectMessage: assign((_, { message }) => ({ selectedMessage: message })),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      deselectMessage: assign((_) => ({ selectedMessage: undefined })),\n    },\n    guards: {\n      noMessages: ({ response }) =>\n        response === undefined || response.messages.length === 0,\n      selectedMessageNotAvailable: ({ response, selectedMessage }) =>\n        selectedMessage !== undefined &&\n        response?.messages.find((m) => isSameMessage(m, selectedMessage)) ===\n          undefined,\n      areFiltersChanged: (context) =>\n        context.response?.filter.limit !== context.limit ||\n        context.response?.filter.offset !== context.offset ||\n        context.response?.filter.partition !== context.partition ||\n        context.response?.filter.timestamp !== context.timestamp ||\n        context.response?.filter.epoch !== context.epoch,\n    },\n  }\n);\n","import {\n  Button,\n  Drawer,\n  DrawerContent,\n  PageSection,\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup,\n} from \"@patternfly/react-core\";\nimport { FilterIcon, SearchIcon } from \"@patternfly/react-icons\";\nimport type { BaseCellProps } from \"@patternfly/react-table\";\nimport {\n  InnerScrollContainer,\n  OuterScrollContainer,\n} from \"@patternfly/react-table\";\nimport {\n  FormatDate,\n  Loading,\n  RefreshButton,\n  ResponsiveTable,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport { useMachine } from \"@xstate/react\";\nimport { parseISO } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useMemo, useState } from \"react\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport type { DateIsoString } from \"../../../../ui-models/src/types\";\nimport type { MessageDetailsProps } from \"./components\";\nimport {\n  FilterGroup,\n  LimitSelector,\n  MessageDetails,\n  NoDataCell,\n  NoDataEmptyState,\n  NoResultsEmptyState,\n  OffsetRange,\n  PartitionSelector,\n  UnknownValuePreview,\n} from \"./components\";\nimport \"./KafkaMessageBrowser.css\";\nimport type { MessageApiResponse } from \"./MessageBrowserMachine\";\nimport { MessageBrowserMachine } from \"./MessageBrowserMachine\";\nimport { beautifyUnknownValue, isSameMessage } from \"./utils\";\n\nconst columns = [\n  \"partition\",\n  \"offset\",\n  \"timestamp\",\n  \"key\",\n  \"headers\",\n  \"value\",\n] as const;\n\nconst columnWidths: BaseCellProps[\"width\"][] = [10, 10, 15, 10, undefined, 30];\n\nexport type KafkaMessageBrowserProps = {\n  getMessages: (props: {\n    partition?: number;\n    offset?: number;\n    timestamp?: DateIsoString;\n    limit: number;\n  }) => Promise<{ messages: Message[]; partitions: number }>;\n};\nexport const KafkaMessageBrowser: VoidFunctionComponent<\n  KafkaMessageBrowserProps\n> = ({ getMessages }) => {\n  const [state, send] = useMachine(() => MessageBrowserMachine, {\n    devTools: true,\n    services: {\n      api: (context) => {\n        return (send) => {\n          getMessages({\n            partition: context.partition,\n            offset: context.offset,\n            timestamp: context.timestamp,\n            limit: context.limit,\n          })\n            .then(({ messages, partitions }) =>\n              send({\n                type: \"fetchSuccess\",\n                messages,\n                partitions,\n                offsetMin: context.offset || 0,\n                offsetMax: messages.reduce(\n                  (max, m) => Math.max(max, m.offset || 0),\n                  0\n                ),\n              })\n            )\n            .catch(() => send({ type: \"fetchFail\" }));\n        };\n      },\n    },\n  });\n\n  return (\n    <KafkaMessageBrowserConnected\n      isFirstLoad={state.matches(\"initialLoading\")}\n      isNoData={state.matches(\"noData\") || state.matches(\"error\")}\n      isRefreshing={state.matches(\"refreshing\")}\n      requiresSearch={state.hasTag(\"dirty\")}\n      selectedMessage={state.context.selectedMessage}\n      response={state.context.response}\n      lastUpdated={state.context.response?.lastUpdated}\n      partition={state.context.partition}\n      limit={state.context.limit}\n      filterOffset={state.context.offset}\n      filterEpoch={state.context.epoch}\n      filterTimestamp={state.context.timestamp}\n      setPartition={(value: number | undefined) =>\n        send({ type: \"setPartition\", value })\n      }\n      setOffset={(value: number | undefined) =>\n        send({ type: \"setOffset\", value })\n      }\n      setTimestamp={(value: DateIsoString | undefined) =>\n        send({ type: \"setTimestamp\", value })\n      }\n      setEpoch={(value: number | undefined) =>\n        send({ type: \"setEpoch\", value })\n      }\n      setLatest={() => send({ type: \"setLatest\" })}\n      setLimit={(value: number) => send({ type: \"setLimit\", value })}\n      refresh={() => send({ type: \"refresh\" })}\n      selectMessage={(message: Message) =>\n        send({ type: \"selectMessage\", message })\n      }\n      deselectMessage={() => send({ type: \"deselectMessage\" })}\n    />\n  );\n};\n\nexport type KafkaMessageBrowserConnectedProps = {\n  isFirstLoad: boolean;\n  isNoData: boolean;\n  isRefreshing: boolean;\n  requiresSearch: boolean;\n  selectedMessage: Message | undefined;\n  lastUpdated: Date | undefined;\n  response: MessageApiResponse | undefined;\n  partition: number | undefined;\n  limit: number;\n  filterOffset: number | undefined;\n  filterEpoch: number | undefined;\n  filterTimestamp: DateIsoString | undefined;\n  setPartition: (value: number | undefined) => void;\n  setOffset: (value: number | undefined) => void;\n  setTimestamp: (value: DateIsoString | undefined) => void;\n  setEpoch: (value: number | undefined) => void;\n  setLatest: () => void;\n  setLimit: (value: number) => void;\n  refresh: () => void;\n  selectMessage: (message: Message) => void;\n  deselectMessage: () => void;\n};\nexport const KafkaMessageBrowserConnected: VoidFunctionComponent<\n  KafkaMessageBrowserConnectedProps\n> = ({\n  isFirstLoad,\n  isNoData,\n  isRefreshing,\n  requiresSearch,\n  selectedMessage,\n  response,\n  partition,\n  limit,\n  filterOffset,\n  filterEpoch,\n  filterTimestamp,\n  setPartition,\n  setOffset,\n  setTimestamp,\n  setEpoch,\n  setLatest,\n  setLimit,\n  refresh,\n  selectMessage,\n  deselectMessage,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [defaultTab, setDefaultTab] =\n    useState<MessageDetailsProps[\"defaultTab\"]>(\"value\");\n\n  const columnLabels: { [key in typeof columns[number]]: string } = useMemo(\n    () =>\n      ({\n        partition: t(\"field.partition\"),\n        offset: t(\"field.offset\"),\n        timestamp: t(\"field.timestamp\"),\n        key: t(\"field.key\"),\n        value: t(\"field.value\"),\n        headers: t(\"field.headers\"),\n      } as const),\n    [t]\n  );\n\n  switch (true) {\n    case isFirstLoad:\n      return <Loading />;\n    case isNoData:\n      return <NoDataEmptyState onRefresh={refresh} />;\n    default:\n      return (\n        <PageSection\n          isFilled={true}\n          hasOverflowScroll={true}\n          aria-label={\"TODO\"}\n        >\n          <Drawer isInline={true} isExpanded={selectedMessage !== undefined}>\n            <DrawerContent\n              panelContent={\n                <MessageDetails\n                  message={selectedMessage}\n                  defaultTab={defaultTab}\n                  onClose={deselectMessage}\n                />\n              }\n            >\n              <OuterScrollContainer>\n                <Toolbar\n                  className={\"mas-KafkaMessageBrowser-Toolbar\"}\n                  data-testid={\"message-browser-toolbar\"}\n                >\n                  <ToolbarContent>\n                    <ToolbarToggleGroup\n                      toggleIcon={<FilterIcon />}\n                      breakpoint=\"2xl\"\n                    >\n                      <ToolbarGroup variant=\"filter-group\">\n                        <ToolbarItem>\n                          <PartitionSelector\n                            value={partition}\n                            partitions={response?.partitions || 0}\n                            onChange={setPartition}\n                            isDisabled={isRefreshing}\n                          />\n                        </ToolbarItem>\n                      </ToolbarGroup>\n                      <ToolbarGroup variant=\"filter-group\">\n                        <FilterGroup\n                          isDisabled={isRefreshing}\n                          offset={filterOffset}\n                          epoch={filterEpoch}\n                          timestamp={filterTimestamp}\n                          onOffsetChange={setOffset}\n                          onTimestampChange={setTimestamp}\n                          onEpochChange={setEpoch}\n                          onLatest={setLatest}\n                        />\n                      </ToolbarGroup>\n                      <ToolbarGroup>\n                        <LimitSelector\n                          value={limit}\n                          onChange={setLimit}\n                          isDisabled={isRefreshing}\n                        />\n                      </ToolbarGroup>\n                    </ToolbarToggleGroup>\n                    <ToolbarGroup>\n                      <ToolbarItem>\n                        <Button\n                          variant={\"plain\"}\n                          isDisabled={!requiresSearch || isRefreshing}\n                          aria-label={t(\"common:search_button_label\")}\n                          onClick={refresh}\n                        >\n                          <SearchIcon />\n                        </Button>\n                      </ToolbarItem>\n                      <ToolbarItem>\n                        <RefreshButton\n                          onClick={refresh}\n                          isRefreshing={isRefreshing}\n                          isDisabled={requiresSearch}\n                        />\n                      </ToolbarItem>\n                    </ToolbarGroup>\n                    <ToolbarGroup alignment={{ default: \"alignRight\" }}>\n                      {response?.filter.partition !== undefined &&\n                        response?.messages.length > 0 && (\n                          <OffsetRange\n                            min={response?.offsetMin || 0}\n                            max={response?.offsetMax || 0}\n                          />\n                        )}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n                <InnerScrollContainer>\n                  <ResponsiveTable\n                    ariaLabel={t(\"table_aria_label\")}\n                    columns={columns}\n                    data={response?.messages}\n                    expectedLength={response?.messages?.length}\n                    renderHeader={({ column, Th, key }) => (\n                      <Th key={key}>{columnLabels[column]}</Th>\n                    )}\n                    renderCell={({ column, row, colIndex, Td, key }) => (\n                      <Td\n                        key={key}\n                        dataLabel={columnLabels[column]}\n                        width={columnWidths[colIndex]}\n                      >\n                        {(() => {\n                          const empty = (\n                            <NoDataCell columnLabel={columnLabels[column]} />\n                          );\n                          switch (column) {\n                            case \"partition\":\n                              return row.partition;\n                            case \"offset\":\n                              return row.offset;\n                            case \"timestamp\":\n                              return row.timestamp ? (\n                                <FormatDate\n                                  date={parseISO(row.timestamp)}\n                                  format={\"longWithMilliseconds\"}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"key\":\n                              return row.key ? (\n                                <UnknownValuePreview\n                                  value={row.key}\n                                  truncateAt={40}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"headers\":\n                              return Object.keys(row.headers).length > 0 ? (\n                                <UnknownValuePreview\n                                  value={beautifyUnknownValue(\n                                    JSON.stringify(row.headers)\n                                  )}\n                                  onClick={() => {\n                                    setDefaultTab(\"headers\");\n                                    selectMessage(row);\n                                  }}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"value\":\n                              return row.value ? (\n                                <UnknownValuePreview\n                                  value={beautifyUnknownValue(row.value || \"\")}\n                                  onClick={() => {\n                                    setDefaultTab(\"value\");\n                                    selectMessage(row);\n                                  }}\n                                />\n                              ) : (\n                                empty\n                              );\n                          }\n                        })()}\n                      </Td>\n                    )}\n                    isRowSelected={({ row }) =>\n                      selectedMessage !== undefined &&\n                      isSameMessage(row, selectedMessage)\n                    }\n                    onRowClick={({ row }) => {\n                      setDefaultTab(\"value\");\n                      selectMessage(row);\n                    }}\n                  >\n                    <NoResultsEmptyState\n                      onReset={() => {\n                        setLatest();\n                        setPartition(undefined);\n                        refresh();\n                      }}\n                    />\n                  </ResponsiveTable>\n                </InnerScrollContainer>\n              </OuterScrollContainer>\n            </DrawerContent>\n          </Drawer>\n        </PageSection>\n      );\n  }\n};\n","import {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface CapacityTable {\n  name: string;\n  firstStreamingUnit: string;\n  secondStreamingUnit: string;\n}\n\nexport const KafkaInstanceCapacityTable: FunctionComponent = () => {\n  const { t } = useTranslation(\"kafkaoverview-v2\");\n\n  const capacityTable: CapacityTable[] = [\n    {\n      name: \"Ingress (MB/second)\",\n      firstStreamingUnit: \"up to 50\",\n      secondStreamingUnit: \"up to 100\",\n    },\n    {\n      name: \"Egress (MB/second)\",\n      firstStreamingUnit: \"up to 100\",\n      secondStreamingUnit: \"up to 200\",\n    },\n    {\n      name: \"Storage* (GB)\",\n      firstStreamingUnit: \"up to 1000\",\n      secondStreamingUnit: \"up to 2000\",\n    },\n    {\n      name: \"Topic partitions\",\n      firstStreamingUnit: \"up to 1500\",\n      secondStreamingUnit: \"up to 3000\",\n    },\n    {\n      name: \"Client connections\",\n      firstStreamingUnit: \"up to 3000\",\n      secondStreamingUnit: \"up to 6000\",\n    },\n    {\n      name: \"Connection rate (connections/second)\",\n      firstStreamingUnit: \"up to 100\",\n      secondStreamingUnit: \"up to 200\",\n    },\n    {\n      name: \"Message size (MB)\",\n      firstStreamingUnit: \"up to 1\",\n      secondStreamingUnit: \"up to 1\",\n    },\n  ];\n\n  const columnNames = {\n    name: \"\",\n    firstStreamingUnit: t(\"firstStreamingUnit\"),\n    secondStreamingUnit: t(\"secondStreamingUnit\"),\n  };\n\n  return (\n    <TableComposable>\n      <Thead>\n        <Tr>\n          <Th>{columnNames.name}</Th>\n          <Th>{columnNames.firstStreamingUnit}</Th>\n          <Th>{columnNames.secondStreamingUnit}</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {capacityTable.map((table) => {\n          return (\n            <Tr key={table.name}>\n              <Td dataLabel={columnNames.name}>{table.name}</Td>\n              <Td dataLabel={columnNames.firstStreamingUnit}>\n                {table.firstStreamingUnit}\n              </Td>\n              <Td dataLabel={columnNames.secondStreamingUnit}>\n                {table.secondStreamingUnit}\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </TableComposable>\n  );\n};\n","import {\n  Bullseye,\n  Card,\n  PageSection,\n  PageSectionVariants,\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport classNames from \"classnames\";\nimport type {\n  CSSProperties,\n  FunctionComponent,\n  ReactNode,\n  VoidFunctionComponent,\n} from \"react\";\nimport \"./MarketingPage.css\";\n\nexport type MarketingPageHeroProps = {\n  title: string;\n  tagLine: string;\n  description: string;\n  description2?: string;\n  heroImage: string;\n  heroImageSize: number;\n  heroImageCanRepeat?: boolean;\n  heroImagePositionY?: number;\n  cta?: ReactNode;\n  variant?: \"light\" | \"dark\";\n};\n\nexport const MarketingPageHero: VoidFunctionComponent<\n  MarketingPageHeroProps\n> = ({\n  title,\n  tagLine,\n  description,\n  description2,\n  heroImage,\n  heroImageSize,\n  heroImageCanRepeat = true,\n  heroImagePositionY = 0,\n  cta,\n  variant = \"light\",\n}) => {\n  const style = {\n    \"--appsrv-marketing--banner--before--BackgroundImage\": `url(${heroImage})`,\n    \"--appsrv-marketing--banner--before--BackgroundSize\": `${heroImageSize}px`,\n    \"--appsrv-marketing--banner--before--BackgroundRepeat\": heroImageCanRepeat\n      ? \"repeat\"\n      : \"no-repeat\",\n    \"--appsrv-marketing--banner--before--BackgroundPositionY\": `${heroImagePositionY}px`,\n  } as CSSProperties;\n  return (\n    <PageSection\n      className={classNames(\"appsrv-marketing--banner\", {\n        \"pf-u-background-color-dark-100\": variant === \"dark\",\n        \"pf-u-background-color-100\": variant === \"light\",\n      })}\n      variant={\n        variant === \"dark\"\n          ? PageSectionVariants.dark\n          : PageSectionVariants.light\n      }\n      style={style}\n    >\n      <Stack hasGutter>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          {title}\n        </Title>\n        <Text\n          className={`appsrv-marketing--banner__tagline ${\n            variant === \"dark\" ? \"\" : \"pf-u-color-200\"\n          }`}\n        >\n          {tagLine}\n        </Text>\n        <Text component={TextVariants.p}>{description}</Text>\n        {description2 && (\n          <Text component={TextVariants.p} className=\"pf-u-mt-md\">\n            {description2}\n          </Text>\n        )}\n        {cta && <StackItem>{cta}</StackItem>}\n      </Stack>\n    </PageSection>\n  );\n};\n\nexport const MarketingPageBanner: FunctionComponent = ({ children }) => {\n  return (\n    <PageSection\n      variant={PageSectionVariants.light}\n      className=\"appsrv-marketing--page-section--marketing pf-u-background-color-100\"\n    >\n      <Bullseye>\n        <Text\n          component={TextVariants.p}\n          className=\"appsrv-marketing--banner--text-only\"\n        >\n          {children}\n        </Text>\n      </Bullseye>\n    </PageSection>\n  );\n};\n\nexport type MarketingPageSectionProps = {\n  className?: string;\n};\n\nexport const MarketingPageSection: FunctionComponent<\n  MarketingPageSectionProps & {\n    variant?: \"dark\" | \"light\" | \"default\";\n  }\n> = ({\n  className = \"appsrv-marketing--page-section--marketing\",\n  variant = \"default\",\n  children,\n}) => (\n  <PageSection\n    isWidthLimited\n    className={classNames(className, {\n      \"pf-u-background-color-dark-100\": variant === \"dark\",\n      \"pf-u-background-color-100\": variant === \"light\",\n    })}\n    variant={\n      variant === \"dark\"\n        ? PageSectionVariants.dark\n        : variant === \"light\"\n        ? PageSectionVariants.light\n        : PageSectionVariants.default\n    }\n  >\n    {children}\n  </PageSection>\n);\n\nexport const MarketingPageVideoCard: VoidFunctionComponent<{\n  src: string;\n  title: string;\n}> = ({ src, title }) => (\n  <Card className=\"appsrv-marketing--video\">\n    <div className=\"appsrv-marketing--video__wrapper\">\n      <iframe\n        src={src}\n        title={title}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  </Card>\n);\n","import {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Divider,\n  Flex,\n  FlexItem,\n  Grid,\n  Split,\n  SplitItem,\n  Stack,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport {\n  AppSpeedKeyArt,\n  ExternalLink,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { KafkaInstanceCapacityTable } from \"./KafkaInstanceCapacityTable\";\nimport { LogoAWS, LogoAzure, LogoGCP } from \"./Logos/images\";\nimport { MarketingPageHero, MarketingPageSection } from \"./MarketingPage\";\n\nexport const KafkaPageV3: FunctionComponent = () => {\n  const { t } = useTranslation([\"kafkaoverview-v3\"]);\n  return (\n    <>\n      <MarketingPageHero\n        title={t(\"heroTitle\")}\n        tagLine={t(\"heroTagline\")}\n        description={t(\"heroDescription\")}\n        heroImage={AppSpeedKeyArt}\n        heroImageSize={478}\n        heroImageCanRepeat={false}\n        heroImagePositionY={-99}\n      />\n      <MarketingPageSection>\n        <Grid hasGutter lg={6}>\n          <Card\n            ouiaId=\"card-overview-purchase-now\"\n            aria-label={t(\"kafkaoverview:purchaseCardTitle\")}\n          >\n            <CardHeader>\n              <CardHeaderMain>\n                <CardTitle>\n                  <Title headingLevel=\"h2\">\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardTitle\"}\n                    >\n                      <span className=\"pf-u-color-200 pf-u-font-size-sm\"></span>\n                    </Trans>\n                  </Title>\n                </CardTitle>\n              </CardHeaderMain>\n            </CardHeader>\n            <CardBody>{t(\"purchaseCardMainText\")}</CardBody>\n            <CardFooter>\n              <Flex spaceItems={{ default: \"spaceItems2xl\" }}>\n                <FlexItem>\n                  <ExternalLink\n                    href={\n                      \"https://marketplace.redhat.com/en-us/products/red-hat-openshift-streams-for-apache-kafka\"\n                    }\n                    testId={\"cardPurchase-buttonRH\"}\n                    className={\"pf-u-ml-md \"}\n                  >\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardCallToActionButtonRedHat\"}\n                      components={{\n                        bold: <strong />,\n                        size: <span className=\"pf-u-font-size-lg\" />,\n                      }}\n                    />\n                  </ExternalLink>\n                </FlexItem>\n\n                <FlexItem>\n                  <ExternalLink\n                    href={\n                      \"https://aws.amazon.com/marketplace/pp/prodview-3xohcoyuwkumc\"\n                    }\n                    testId={\"cardPurchase-buttonAWS\"}\n                    className={\"pf-u-ml-md\"}\n                  >\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardCallToActionButtonAWS\"}\n                      components={{\n                        bold: <strong />,\n                        size: <span className=\"pf-u-font-size-lg\" />,\n                      }}\n                    />\n                  </ExternalLink>\n                </FlexItem>\n              </Flex>\n            </CardFooter>\n          </Card>\n          <Card\n            ouiaId=\"card-overview-contact-sales\"\n            aria-label={t(\"kafkaoverview:contactSalesCardTitle\")}\n          >\n            <CardHeader>\n              <CardTitle>\n                <Title headingLevel=\"h2\">\n                  <Trans\n                    ns={\"kafkaoverview-v3\"}\n                    i18nKey={\"contactSalesCardTitle\"}\n                  >\n                    <span className=\"pf-u-color-200 pf-u-font-size-sm\"></span>\n                  </Trans>\n                </Title>\n              </CardTitle>\n            </CardHeader>\n            <CardBody>{t(\"contactSalesCardMainText\")}</CardBody>\n            <CardFooter>\n              <ExternalLink\n                href={\n                  \"https://www.redhat.com/en/technologies/cloud-computing/openshift/openshift-streams-for-apache-kafka#contact-us\"\n                }\n                testId={\"cardContactSales-buttonCTA\"}\n                className={\"pf-u-ml-md\"}\n              >\n                <Trans\n                  ns={\"kafkaoverview-v3\"}\n                  i18nKey={\"contactSalesCardCallToActionButton\"}\n                  components={{\n                    bold: <strong />,\n                    size: <span className=\"pf-u-font-size-lg\" />,\n                  }}\n                />\n              </ExternalLink>\n            </CardFooter>\n          </Card>\n        </Grid>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"pricingModalTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Flex spaceItems={{ default: \"spaceItemsXl\" }}>\n              <Flex\n                alignSelf={{ default: \"alignSelfCenter\" }}\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <DescriptionList isHorizontal>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"steamingUnit\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"streamingUnit_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"dataTransfer\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"dataTransfer_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>{t(\"storage\")}</DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"storage_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                  </DescriptionList>\n                </FlexItem>\n              </Flex>\n              <Divider isVertical />\n              <FlexItem flex={{ default: \"flex_1\" }}>\n                <TextContent>\n                  <Text component={TextVariants.p}>\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"streamingUnitText\"}\n                      components={{ bold: <strong /> }}\n                    />\n                  </Text>\n                </TextContent>\n              </FlexItem>\n            </Flex>\n          </CardBody>\n        </Card>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"kafkaInstanceCapacityTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Stack hasGutter>\n              <Text component={TextVariants.p}>\n                {t(\"kafkaInstanceCapacityDescription\")}\n              </Text>\n              <KafkaInstanceCapacityTable />\n            </Stack>\n          </CardBody>\n          <CardFooter>\n            <TextContent className={\"pf-u-font-size-sm\"}>\n              <Trans\n                ns={\"kafkaoverview-v3\"}\n                i18nKey={\"kafkaInstanceCapacityfooter\"}\n                components={[\n                  <ExternalLink\n                    href={\"https://access.redhat.com/support\"}\n                    testId={\"SupportLink\"}\n                    className={\"pf-u-ml-xs\"}\n                  />,\n                  <ExternalLink\n                    href={\n                      \"https://access.redhat.com/documentation/en-us/red_hat_openshift_streams_for_apache_kafka/1/guide/aced8e5e-8229-4cb2-82f9-87a8caa24bb3\"\n                    }\n                    testId={\"MonitoringDiskSpaceLink\"}\n                    className={\"pf-u-ml-xs\"}\n                  />,\n                ]}\n              />\n            </TextContent>\n          </CardFooter>\n        </Card>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"cloudProvidersTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Flex\n              spaceItems={{ default: \"spaceItemsXl\" }}\n              direction={{ default: \"column\", xl: \"row\" }}\n            >\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img src={LogoAWS} alt={\"\"} style={{ height: \"60px\" }} />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"awsWebServiceTitle\")}\n                      </Title>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n              <Divider\n                orientation={{ default: \"horizontal\", xl: \"vertical\" }}\n              />\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img src={LogoGCP} alt={\"\"} style={{ height: \"60px\" }} />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"googleCloudProviderTitle\")}\n                      </Title>\n                      <Text\n                        component={TextVariants.p}\n                        className={\"pf-u-color-200\"}\n                      >\n                        {t(\"googleCloudProviderDescription\")}\n                      </Text>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n              <Divider\n                orientation={{ default: \"horizontal\", xl: \"vertical\" }}\n              />\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img\n                        src={LogoAzure}\n                        alt={\"\"}\n                        style={{ height: \"60px\" }}\n                      />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"microsoftAzureTitle\")}\n                      </Title>\n                      <Text\n                        component={TextVariants.p}\n                        className={\"pf-u-color-200\"}\n                      >\n                        {t(\"microsoftAzureDescription\")}\n                      </Text>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n            </Flex>\n          </CardBody>\n        </Card>\n      </MarketingPageSection>\n    </>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type EmptyStateNoTopicProps = {\n  onCreateTopic: () => void;\n};\n\nexport const EmptyStateNoTopic: VoidFunctionComponent<\n  EmptyStateNoTopicProps\n> = ({ onCreateTopic }) => {\n  const { t } = useTranslation(\"topic\");\n\n  return (\n    <EmptyState\n      data-ouia-page-id=\"emptyStateTopics\"\n      variant={EmptyStateVariant.large}\n    >\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_topics_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"empty_topics_body\")}</EmptyStateBody>\n      <Button\n        data-testid=\"actionCreateTopic\"\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={onCreateTopic}\n      >\n        {t(\"create_topic\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import type { ResourceOperationValue } from \"./components/ResourceOperation\";\nimport type { ResourcePermissionValue } from \"./components/ResourcePermission\";\nimport type { ResourcePrefixRuleValue } from \"./components/ResourcePrefixRule\";\nimport type { ResourceTypeValue } from \"./components/ResourceType\";\n\nexport type AclOperation =\n  | \"ALL\"\n  | \"READ\"\n  | \"WRITE\"\n  | \"CREATE\"\n  | \"DELETE\"\n  | \"ALTER\"\n  | \"DESCRIBE\"\n  | \"DESCRIBE_CONFIGS\"\n  | \"ALTER_CONFIGS\";\n\nexport type AclResourceType =\n  | \"GROUP\"\n  | \"TOPIC\"\n  | \"CLUSTER\"\n  | \"TRANSACTIONAL_ID\";\n\nexport type AclPatternType = \"LITERAL\" | \"PREFIXED\";\n\nexport type AclPermissionType = \"ALLOW\" | \"DENY\";\n\nexport interface AclBinding {\n  /**\n   *\n   * @type {AclResourceType}\n   * @memberof AclBinding\n   */\n  resourceType: AclResourceType;\n  /**\n   *\n   * @type {string}\n   * @memberof AclBinding\n   */\n  resourceName: string;\n  /**\n   *\n   * @type {AclPatternType}\n   * @memberof AclBinding\n   */\n  patternType: AclPatternType;\n  /**\n   * Identifies the user or service account to which an ACL entry is bound. The literal prefix value of `User:` is required. May be used to specify all users with value `User:*`.\n   * @type {string}\n   * @memberof AclBinding\n   */\n  principal: string;\n  /**\n   *\n   * @type {AclOperation}\n   * @memberof AclBinding\n   */\n  operation: AclOperation;\n  /**\n   *\n   * @type {AclPermissionType}\n   * @memberof AclBinding\n   */\n  permission: AclPermissionType;\n}\nexport type AclTablePermissionsType = {\n  permission: AclPermissionType;\n  operation: AclOperation;\n};\nexport type AclTableResourceType = {\n  resourceType: AclResourceType;\n  resourceName: string;\n  patternType: AclPatternType;\n};\nexport type Permissions = {\n  account: string;\n  permission: AclTablePermissionsType;\n  resource: AclTableResourceType;\n};\nexport enum PrincipalType {\n  UserAccount = \"USER_ACCOUNT\",\n  ServiceAccount = \"SERVICE_ACCOUNT\",\n}\n\nexport type Account = {\n  id: string;\n  principalType: PrincipalType;\n  displayName: string;\n  email?: string;\n};\n\ntype ManualAcl = {\n  resourceType: ResourceTypeValue | undefined;\n  resourcePrefix: ResourcePrefixRuleValue;\n  resourceName: string | undefined;\n  resourcePermission: ResourcePermissionValue;\n  resourceOperation: ResourceOperationValue | undefined;\n};\n\ntype ProduceTopicTemplate = {\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n};\n\ntype ConsumeTopicTemplate = {\n  consumerResourceName: string | undefined;\n  consumerResourcePrefixRule: ResourcePrefixRuleValue;\n  topicResourceName: string | undefined;\n  topicResourcePrefixRule: ResourcePrefixRuleValue;\n};\n\ntype ManageAccessTemplate = {\n  instanceName: string;\n};\nexport type AddAclType =\n  | ({ type: \"manual\" } & ManualAcl)\n  | ({ type: \"consume-topic\" } & ConsumeTopicTemplate)\n  | ({ type: \"produce-topic\" } & ProduceTopicTemplate)\n  | ({ type: \"manage-access\" } & ManageAccessTemplate);\n\nexport const createEmptyManualAcl = (): AddAclType => {\n  return {\n    type: \"manual\",\n    resourceName: undefined,\n    resourceType: undefined,\n    resourceOperation: undefined,\n    resourcePrefix: \"Is\",\n    resourcePermission: \"allow\",\n  };\n};\nexport const createEmptyProduceTopicAcl = (): AddAclType => {\n  return {\n    type: \"produce-topic\",\n    prefixRuleValue: \"Is\",\n    resourceNameValue: undefined,\n  };\n};\nexport const createEmptyConsumeTopicAcl = (): AddAclType => {\n  return {\n    type: \"consume-topic\",\n    consumerResourceName: undefined,\n    consumerResourcePrefixRule: \"Is\",\n    topicResourceName: undefined,\n    topicResourcePrefixRule: \"Is\",\n  };\n};\nexport const createEmptyManageAccessAcl = (kafkaName: string): AddAclType => {\n  return {\n    type: \"manage-access\",\n    instanceName: kafkaName,\n  };\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  EmptyStateNoResults,\n  TableView,\n} from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport type { Topic, TopicField } from \"ui-models/src/models/topic\";\nimport { useTopicLabels } from \"../../hooks\";\nimport type { EmptyStateNoTopicProps } from \"./components\";\nimport { EmptyStateNoTopic } from \"./components\";\nimport { formattedRetentionSize, formattedRetentionTime } from \"./types\";\n\ntype SubUnion<T, U extends T> = U;\n\nconst Columns: SubUnion<\n  TopicField,\n  \"name\" | \"partitions\" | \"retention.ms\" | \"retention.bytes\"\n>[] = [\"name\", \"partitions\", \"retention.ms\", \"retention.bytes\"];\n\nexport type KafkaTopicsProps<T extends Topic> = {\n  topics: Array<T> | undefined;\n  getUrlFortopic: (row: T) => string;\n  onDelete: (row: T) => void;\n  onEdit: (row: T) => void;\n  topicName: string[];\n  onSearchTopic: (value: string) => void;\n  onRemoveTopicChip: (value: string) => void;\n  onRemoveTopicChips: () => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n> &\n  EmptyStateNoTopicProps;\n\nexport const KafkaTopics = <T extends Topic>({\n  topics,\n  onDelete,\n  onEdit,\n  isColumnSortable,\n  itemCount,\n  onSearchTopic,\n  topicName,\n  onClearAllFilters,\n  onCreateTopic,\n  page,\n  perPage,\n  onPageChange,\n  onRemoveTopicChip,\n  onRemoveTopicChips,\n  getUrlFortopic,\n}: KafkaTopicsProps<T>) => {\n  const { t } = useTranslation(\"topic\");\n\n  const labels = useTopicLabels();\n\n  const isFiltered = topicName.length > 0;\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"topic_list_table\")}\n        data={topics}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"name\":\n                    return (\n                      <Link\n                        to={getUrlFortopic(row)}\n                        data-testid=\"tableTopics-linkTopic\"\n                        data-ouia-component-id=\"table-link\"\n                      >\n                        {row.name}\n                      </Link>\n                    );\n                  case \"partitions\":\n                    return row.partitions.length;\n                  case \"retention.ms\":\n                    return formattedRetentionTime(row[\"retention.ms\"].value);\n                  case \"retention.bytes\":\n                    return formattedRetentionSize(row[\"retention.bytes\"].value);\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row, ActionsColumn }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"table.actions.edit\"),\n                onClick: () => onEdit(row),\n              },\n              {\n                title: t(\"table.actions.delete\"),\n                onClick: () => onDelete(row),\n              },\n            ]}\n          />\n        )}\n        isColumnSortable={isColumnSortable}\n        filters={{\n          [labels.fields.name]: {\n            type: \"search\",\n            chips: topicName,\n            onSearch: onSearchTopic,\n            onRemoveChip: onRemoveTopicChip,\n            onRemoveGroup: onRemoveTopicChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"input_field_invalid_message\"),\n          },\n        }}\n        actions={[\n          {\n            label: t(\"create_topic\"),\n            onClick: onCreateTopic,\n            isPrimary: true,\n          },\n        ]}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        isFiltered={isFiltered}\n        onClearAllFilters={onClearAllFilters}\n        emptyStateNoData={<EmptyStateNoTopic onCreateTopic={onCreateTopic} />}\n        emptyStateNoResults={<EmptyStateNoResults />}\n      />\n    </PageSection>\n  );\n};\n","import type { CardKafkaInstanceMetricsLimits } from \"./components\";\n\nexport type TimeSeriesMetrics = { [timestamp: string]: number };\nexport type PartitionBytesMetric = { [partition: string]: TimeSeriesMetrics };\n\nexport enum DurationOptions {\n  Last5minutes = 5,\n  Last15minutes = 15,\n  Last30minutes = 30,\n  Last1hour = 60,\n  Last3hours = 3 * 60,\n  Last6hours = 6 * 60,\n  Last12hours = 12 * 60,\n  Last24hours = 24 * 60,\n  Last2days = 2 * 24 * 60,\n  Last7days = 7 * 24 * 60,\n}\n\nexport type GetTopicsMetricsResponse = {\n  kafkaTopics: string[];\n  metricsTopics: string[];\n  bytesOutgoing: TimeSeriesMetrics;\n  bytesIncoming: TimeSeriesMetrics;\n  bytesPerPartition: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n};\n\nexport type GetKafkaInstanceMetricsResponse = {\n  usedDiskSpaceMetrics: TimeSeriesMetrics;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n} & CardKafkaInstanceMetricsLimits;\n\nexport type GetMetricsKpiResponse = {\n  topics: number;\n  topicPartitions: number;\n  consumerGroups: number;\n  topicPartitionsLimit: number;\n};\n","import type { MenuProps } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  Dropdown,\n  DropdownToggle,\n  DropdownToggleAction,\n  Menu,\n  MenuContent,\n  MenuGroup,\n  MenuItem,\n  MenuList,\n  Popper,\n} from \"@patternfly/react-core\";\nimport type {\n  MouseEvent as ReactMouseEvent,\n  VoidFunctionComponent,\n} from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type PermissionsDropdownProps = {\n  onAddPermission: () => void;\n  onShortcutConsumeTopic: () => void;\n  onShortcutProduceTopic: () => void;\n  onShortcutManageAccess: () => void;\n};\n\nexport const PermissionsDropdown: VoidFunctionComponent<\n  PermissionsDropdownProps\n> = ({\n  onAddPermission,\n  onShortcutConsumeTopic,\n  onShortcutProduceTopic,\n  onShortcutManageAccess,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  const [isOpen, setIsOpen] = useState(false);\n  useState<string | number | undefined>(0);\n\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const handleMenuKeys = useCallback(\n    (event: KeyboardEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        event.target &&\n        menuRef.current.contains(event.target as Node)\n      ) {\n        if (event.key === \"Escape\" || event.key === \"Tab\") {\n          setIsOpen(!isOpen);\n        }\n      }\n    },\n    [isOpen]\n  );\n\n  const handleClickOutside = useCallback(\n    (event: MouseEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        !menuRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleMenuKeys);\n    window.addEventListener(\"click\", handleClickOutside);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleMenuKeys);\n      window.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, [handleClickOutside, handleMenuKeys, isOpen, menuRef]);\n\n  const onToggleClick = useCallback((open: boolean, ev: ReactMouseEvent) => {\n    ev.stopPropagation(); // Stop handleClickOutside from handling\n    setTimeout(() => {\n      if (menuRef.current) {\n        const firstElement = menuRef.current.querySelector(\n          \"li > button,input:not(:disabled)\"\n        );\n        firstElement && (firstElement as HTMLElement).focus();\n      }\n    }, 0);\n    setIsOpen(open);\n  }, []);\n\n  const handleSelect: MenuProps[\"onSelect\"] = (_event, itemId) => {\n    setIsOpen(false);\n    switch (itemId) {\n      case \"add_permission\":\n        onAddPermission();\n        break;\n      case \"shortcut_consume_topic\":\n        onShortcutConsumeTopic();\n        break;\n      case \"shortcut_produce_topic\":\n        onShortcutProduceTopic();\n        break;\n      case \"shortcut_manage_access\":\n        onShortcutManageAccess();\n        break;\n    }\n  };\n\n  const onActionClick = (\n    event: ReactMouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    onAddPermission();\n  };\n\n  const menu = (\n    <Menu onSelect={handleSelect} key=\"acls-menu\" ref={menuRef}>\n      <MenuContent>\n        <MenuList>\n          <MenuGroup>\n            <MenuList>\n              <MenuItem itemId={\"add_permission\"}>\n                {t(\"permissions_dropdown.add_permission\")}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n\n          <Divider />\n          <MenuGroup label={t(\"permissions_dropdown.task_based_permission\")}>\n            <MenuList>\n              <MenuItem\n                itemId={\"shortcut_consume_topic\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_consume_topic_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_consume_topic\")}\n              </MenuItem>\n              <MenuItem\n                itemId={\"shortcut_produce_topic\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_produce_topic_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_produce_topic\")}\n              </MenuItem>\n              <MenuItem\n                itemId={\"shortcut_manage_access\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_manage_access_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_manage_access\")}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n        </MenuList>\n      </MenuContent>\n    </Menu>\n  );\n\n  const toggle = (\n    <Dropdown\n      toggle={\n        <DropdownToggle\n          data-testid={\"permissions-dropdown-toggle\"}\n          splitButtonItems={[\n            <DropdownToggleAction\n              key=\"cog-action\"\n              aria-label={t(\"permissions_dropdown.add_permission\")}\n              onClick={onActionClick}\n            >\n              {t(\"permissions_dropdown.add_permission\")}\n            </DropdownToggleAction>,\n          ]}\n          splitButtonVariant=\"action\"\n          onToggle={onToggleClick}\n        />\n      }\n    />\n  );\n\n  return (\n    <Popper\n      trigger={toggle}\n      popper={menu}\n      isVisible={isOpen}\n      popperMatchesTriggerWidth={false}\n    />\n  );\n};\n","import type { VFC } from \"react\";\nimport type { LabelProps } from \"@patternfly/react-core\";\nimport { Label } from \"@patternfly/react-core\";\nimport type { AclResourceType } from \"../types\";\nimport \"./ResourceTypeLabel.css\";\n\nexport type SolidLabelProps = {\n  variant: AclResourceType;\n};\n\ntype Variant = {\n  labelColor: LabelProps[\"color\"];\n  content: string;\n};\n\nexport const ResourceTypeLabel: VFC<SolidLabelProps> = ({ variant }) => {\n  const getVariant = (): Variant => {\n    switch (variant) {\n      case \"GROUP\":\n        return { labelColor: \"green\", content: \"G\" };\n      case \"CLUSTER\":\n        return { labelColor: \"grey\", content: \"KI\" };\n      case \"TOPIC\":\n        return { labelColor: \"blue\", content: \"T\" };\n      case \"TRANSACTIONAL_ID\":\n        return { labelColor: \"orange\", content: \"TI\" };\n    }\n  };\n\n  const { labelColor, content } = getVariant() || {};\n\n  return (\n    <Label isCompact color={labelColor} className={`mas-m-solid`}>\n      {content}\n    </Label>\n  );\n};\n","import type { FunctionComponent, VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Label, LabelGroup, Tooltip } from \"@patternfly/react-core\";\n\nimport type {\n  Account,\n  AclOperation,\n  AclPatternType,\n  AclPermissionType,\n  AclResourceType,\n} from \"../types\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { InfoCircleIcon } from \"@patternfly/react-icons\";\nimport { PrincipalType } from \"..\";\n\nexport const DisplayResourceName: VFC<{ resourceType: AclResourceType }> = ({\n  resourceType,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  switch (resourceType) {\n    case \"GROUP\":\n      return t(\"resourceTypes.consumer_group\");\n    case \"TOPIC\":\n      return t(\"resourceTypes.topic\");\n    case \"CLUSTER\":\n      return t(\"resourceTypes.kafka_instance\");\n    case \"TRANSACTIONAL_ID\":\n      return t(\"resourceTypes.transactional_id\");\n  }\n};\n\nconst PatternType: VFC<{ patternType: AclPatternType }> = ({ patternType }) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  if (patternType === \"PREFIXED\") {\n    return t(\"pattern_type_prefixed\");\n  } else {\n    return t(\"pattern_type_literal\");\n  }\n};\n\nexport type ResourceCellProps = {\n  resourceType: AclResourceType;\n  patternType: AclPatternType;\n  resourceName: string;\n};\n\nexport const ResourceCell: FunctionComponent<ResourceCellProps> = ({\n  resourceType,\n  patternType,\n  resourceName,\n}) => {\n  if (resourceType === \"CLUSTER\") {\n    return (\n      <>\n        <ResourceTypeLabel variant={resourceType} />{\" \"}\n        <DisplayResourceName resourceType={resourceType} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ResourceTypeLabel variant={resourceType} />{\" \"}\n      <DisplayResourceName resourceType={resourceType} />{\" \"}\n      <PatternType patternType={patternType} /> \"{resourceName}\"\n    </>\n  );\n};\n\nexport type PermissionOperationCellProps = {\n  permission: AclPermissionType;\n  operation: AclOperation | AclOperation[];\n};\n\nexport const PermissionOperationCell: FunctionComponent<\n  PermissionOperationCellProps\n> = ({ permission, operation }) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const permissions: { [key in AclPermissionType]: string } = {\n    ALLOW: t(\"permissions.allow\"),\n    DENY: t(\"permissions.deny\"),\n  };\n  const operations: { [key in AclOperation]: string } = {\n    ALL: t(\"operations.all\"),\n    READ: t(\"operations.read\"),\n    WRITE: t(\"operations.write\"),\n    CREATE: t(\"operations.create\"),\n    DELETE: t(\"operations.delete\"),\n    ALTER: t(\"operations.alter\"),\n    DESCRIBE: t(\"operations.describe\"),\n    DESCRIBE_CONFIGS: t(\"operations.describe_configs\"),\n    ALTER_CONFIGS: t(\"operations.alter_configs\"),\n  };\n  return (\n    <LabelGroup numLabels={4}>\n      {permission && (\n        <Label\n          variant=\"outline\"\n          color={permission === \"DENY\" ? \"red\" : undefined}\n        >\n          {permissions[permission]}\n        </Label>\n      )}\n      {Array.isArray(operation) ? (\n        operation.map((value, key) => (\n          <Label key={key} variant=\"outline\">\n            {operations[value]}\n          </Label>\n        ))\n      ) : (\n        <Label variant=\"outline\">{operations[operation]}</Label>\n      )}\n    </LabelGroup>\n  );\n};\n\nexport type PrincipalCellProps = {\n  isDeleteEnabled: boolean;\n  isAllAccounts?: boolean;\n  onRemoveAcl?: () => void;\n  isReviewTable?: boolean;\n  principal?: string;\n  allAccounts?: Account;\n};\n\nexport const PrincipalCell: VFC<PrincipalCellProps> = ({\n  isDeleteEnabled,\n  isAllAccounts,\n  onRemoveAcl,\n  isReviewTable = true,\n  principal,\n  allAccounts,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  const principalWithTooltip = () => {\n    return allAccounts?.principalType == PrincipalType.ServiceAccount &&\n      !isReviewTable ? (\n      <Tooltip\n        content={\n          <div>\n            Type: {allAccounts && allAccounts.principalType} <br />\n          </div>\n        }\n      >\n        <span tabIndex={0}>\n          {\" \"}\n          {principal?.split(\":\")[1]} <InfoCircleIcon color=\"grey\" />\n        </span>\n      </Tooltip>\n    ) : (\n      !isReviewTable && (\n        <Tooltip\n          content={\n            <div>\n              Type: {allAccounts?.principalType} <br />\n              Name: {allAccounts?.displayName} <br />\n              Email: {allAccounts?.email}\n            </div>\n          }\n        >\n          <span tabIndex={0}>\n            {principal?.split(\":\")[1]} <InfoCircleIcon color=\"grey\" />\n          </span>\n        </Tooltip>\n      )\n    );\n  };\n\n  return (\n    <div\n      className={\n        isReviewTable\n          ? \"pf-u-display-flex pf-u-justify-content-space-between pf-u-justify-content-flex-end-on-lg pf-u-align-items-center\"\n          : \"\"\n      }\n    >\n      {isAllAccounts && isReviewTable ? (\n        <Label variant=\"outline\">{t(\"table.all_accounts\")}</Label>\n      ) : !isReviewTable && principal == \"User:*\" ? (\n        <Label variant={\"outline\"}>{t(\"table.all_accounts\")}</Label>\n      ) : (\n        principalWithTooltip()\n      )}\n\n      {isDeleteEnabled && onRemoveAcl != undefined && (\n        <RemoveButton\n          variant=\"link\"\n          tooltip={t(\"remove_permission_tooltip\")}\n          onClick={onRemoveAcl}\n          ariaLabel={t(\"operations.delete\")}\n        />\n      )}\n    </div>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type PermissionsTableEmptyStateProps = {\n  openManagePermissions: () => void;\n};\nexport const PermissionsTableEmptyState: React.FunctionComponent<\n  PermissionsTableEmptyStateProps\n> = ({ openManagePermissions }) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  return (\n    <EmptyState\n      data-ouia-page-id=\"emptyStateTopics\"\n      variant={EmptyStateVariant.large}\n    >\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"no_results_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_results_body\")}</EmptyStateBody>\n      <Button\n        data-testid=\"actionManagePermissions\"\n        ouiaId=\"button-manage-permissions\"\n        variant=\"primary\"\n        onClick={openManagePermissions}\n      >\n        {t(\"dialog_title\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport { TableView } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Account, Permissions } from \"../types\";\nimport { PrincipalCell, PermissionOperationCell, ResourceCell } from \"./Cells\";\nimport { useEffect, useState } from \"react\";\nimport { PageSection } from \"@patternfly/react-core\";\nimport { PermissionsTableEmptyState } from \"./EmptyPermissionsTable\";\n\ntype SubUnion<T, U extends T> = U;\nexport type PermissionsField = keyof Permissions;\nconst Columns: SubUnion<\n  PermissionsField,\n  \"account\" | \"permission\" | \"resource\"\n>[] = [\"account\", \"permission\", \"resource\"];\n\nexport type PermissionsTableProps<T extends Permissions> = {\n  allAccounts: Account[] | undefined;\n  permissions: Array<T> | undefined;\n  onDelete: (rowIndex: number) => void;\n  onDeleteSelected: (rowIndex: number[]) => void;\n  onManagePermissions: () => void;\n  onManagePermissionsActionItem: (account: string) => void;\n  onPerPageChange: (page: number, perPage: number) => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"onClearAllFilters\"\n>;\n\nexport const PermissionsTable = <T extends Permissions>({\n  allAccounts,\n  permissions,\n  onDelete,\n  itemCount,\n  page,\n  perPage,\n  onDeleteSelected,\n  onPageChange,\n  onManagePermissions,\n  onManagePermissionsActionItem,\n}: PermissionsTableProps<T>) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const [checkedRows, setCheckedRows] = useState<number[]>([]);\n\n  useEffect(() => {\n    //Only clear all the checked row when they are deleted\n    setCheckedRows([]);\n  }, [permissions]);\n\n  const labels: { [field in (typeof Columns)[number]]: string } = {\n    account: t(\"account_id_title\"),\n    permission: t(\"table.permissions_column_title\"),\n    resource: t(\"table.resource_column_title\"),\n  };\n  const onCheck = (isSelecting: boolean, rowIndex: number) => {\n    if (rowIndex != undefined) {\n      setCheckedRows(\n        isSelecting\n          ? [...checkedRows, rowIndex]\n          : checkedRows.filter((row) => row !== rowIndex)\n      );\n    }\n  };\n\n  const isRowChecked = (rowIndex: number) => {\n    return checkedRows.includes(rowIndex);\n  };\n\n  const onBulkDelete = () => {\n    onDeleteSelected(checkedRows);\n  };\n\n  return (\n    <PageSection hasOverflowScroll={true}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"consumerGroup.consumer_group_list\")}\n        actions={[\n          {\n            onClick: onManagePermissions,\n            label: t(\"dialog_title\"),\n            isPrimary: true,\n          },\n        ]}\n        kebabActions={[\n          {\n            onClick: onBulkDelete,\n            label: t(\"delete_selected\"),\n            isDisabled: checkedRows.length > 0 ? false : true,\n          },\n        ]}\n        data={permissions}\n        columns={Columns}\n        onCheck={onCheck}\n        isRowChecked={({ rowIndex }) => isRowChecked(rowIndex)}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels[column]}>\n              {(() => {\n                switch (column) {\n                  case \"account\":\n                    return (\n                      <PrincipalCell\n                        isReviewTable={false}\n                        principal={row.account}\n                        isDeleteEnabled={false}\n                        allAccounts={\n                          allAccounts?.filter(\n                            (value) => `User:${value.id}` == row.account\n                          )[0]\n                        }\n                      />\n                    );\n                  case \"permission\":\n                    return (\n                      <PermissionOperationCell\n                        permission={row.permission.permission}\n                        operation={row.permission.operation}\n                      />\n                    );\n                  case \"resource\":\n                    return (\n                      <ResourceCell\n                        patternType={row.resource.patternType}\n                        resourceType={row.resource.resourceType}\n                        resourceName={row.resource.resourceName}\n                      />\n                    );\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ ActionsColumn, rowIndex, row }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"manage\"),\n                onClick: () =>\n                  onManagePermissionsActionItem(\n                    row.account == \"User:*\"\n                      ? \"all-accounts\"\n                      : row.account?.split(\":\")[1]\n                  ),\n              },\n              {\n                title: t(\"common:delete\"),\n                onClick: () => onDelete(rowIndex),\n              },\n            ]}\n          />\n        )}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        emptyStateNoData={\n          <PermissionsTableEmptyState\n            openManagePermissions={onManagePermissions}\n          />\n        }\n        emptyStateNoResults={\n          <PermissionsTableEmptyState\n            openManagePermissions={onManagePermissions}\n          />\n        }\n      />\n    </PageSection>\n  );\n};\n","import type React from \"react\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Account } from \"../types\";\nimport { PrincipalType } from \"../types\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { Button, Form, Modal } from \"@patternfly/react-core\";\nimport { Skeleton } from \"@patternfly/react-core\";\nimport { FormGroup, Popover } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\n\nexport type SelectAccountProps = {\n  accounts: Account[] | undefined;\n  initialOpen?: boolean;\n  kafkaName: string;\n  id?: string;\n  onNext: (selectedAccount: string | undefined) => void;\n  onClose: () => void;\n};\n\nexport const SelectAccount: React.VFC<SelectAccountProps> = ({\n  accounts,\n  initialOpen = false,\n  kafkaName,\n  id,\n  onNext,\n  onClose,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [isDirty, setIsDirty] = useState<boolean>(false);\n  const [selectedAccount, setSelectedAccount] = useState<string>();\n\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const onToggle = (newState: boolean) => {\n    setIsOpen(newState);\n  };\n\n  const clearSelection = () => {\n    setSelectedAccount(undefined);\n    setIsDirty(true);\n    setIsOpen(false);\n  };\n\n  const noServiceAccounts = [\n    <SelectOption\n      isNoResultsOption={true}\n      isDisabled={true}\n      key={t(\"no_results_found\")}\n    >\n      {t(\"no_results_found\")}\n    </SelectOption>,\n  ];\n  const noUserAccounts = [\n    <SelectOption\n      isNoResultsOption={true}\n      isDisabled={true}\n      key={\"no_user_accounts\"}\n    >\n      {t(\"no_results_found\")}\n    </SelectOption>,\n  ];\n\n  function makeOptions(filterValue = \"\") {\n    const filter = filterValue.toLowerCase();\n    const filteredAccounts =\n      filter !== \"\"\n        ? accounts?.filter(\n            (principal) =>\n              principal.displayName.toLowerCase().includes(filter) ||\n              principal.id.includes(filter)\n          )\n        : accounts;\n\n    const serviceAccountOptions = filteredAccounts\n      ?.filter(\n        (principal) => principal.principalType === PrincipalType.ServiceAccount\n      )\n      .sort((a, b) =>\n        a.displayName && b.displayName\n          ? a.displayName.localeCompare(b.displayName)\n          : -1\n      )\n      .map((principal, index) => (\n        <SelectOption\n          key={index}\n          value={principal.id}\n          description={principal.displayName}\n        >\n          {principal.id}\n        </SelectOption>\n      ));\n\n    const userAccountOperations = filteredAccounts\n      ?.filter(\n        (principal) => principal.principalType === PrincipalType.UserAccount\n      )\n      .map((principal, index) => (\n        <SelectOption\n          key={index}\n          value={principal.id}\n          description={principal.displayName}\n        >\n          {principal.id}\n        </SelectOption>\n      ));\n\n    return [\n      <SelectGroup key=\"all_accounts_group\">\n        <SelectOption\n          key={t(\"all_accounts_title\")}\n          value={t(\"all_accounts_title\")}\n          description={t(\"all_accounts_description\")}\n        >\n          {t(\"all_accounts_title\")}\n        </SelectOption>\n      </SelectGroup>,\n\n      <Divider key=\"all_accounts_divider\" />,\n      <SelectGroup\n        label={t(\"all_accounts_service_account_group\")}\n        key=\"service_accounts_group\"\n      >\n        {serviceAccountOptions?.length\n          ? serviceAccountOptions\n          : noServiceAccounts}\n      </SelectGroup>,\n      <Divider key=\"user_account_divider2\" />,\n      <SelectGroup\n        label={t(\"all_accounts_user_account_group\")}\n        key=\"user_accounts_group\"\n      >\n        {userAccountOperations?.length ? userAccountOperations : noUserAccounts}\n      </SelectGroup>,\n    ];\n  }\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, value) => {\n    setSelectedAccount(value as string);\n    setIsDirty(false);\n    setIsOpen(false);\n  };\n\n  const validated: ValidatedOptions = isDirty\n    ? ValidatedOptions.error\n    : ValidatedOptions.default;\n\n  return (\n    <Modal\n      id=\"manage-permissions-modal\"\n      variant={\"large\"}\n      isOpen={true}\n      aria-label={t(\"dialog_aria_label\")}\n      position=\"top\"\n      title={t(\"dialog_title\")}\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={onClose}\n      onEscapePress={onClose}\n      appendTo={() =>\n        id ? document.getElementById(id) || document.body : document.body\n      }\n      actions={[\n        <Button\n          key={1}\n          variant=\"primary\"\n          isDisabled={\n            selectedAccount == \"\" || selectedAccount == undefined ? true : false\n          }\n          onClick={() => onNext(selectedAccount)}\n          aria-label={t(\"step_1_submit_button\")}\n        >\n          {t(\"step_1_submit_button\")}\n        </Button>,\n        <Button\n          onClick={onClose}\n          key={2}\n          variant=\"secondary\"\n          aria-label={t(\"common:cancel\")}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <FormGroup\n          fieldId=\"kafka-instance-name\"\n          label={t(\"kafka_instance\")}\n          id=\"modal-message\"\n        >\n          {kafkaName}\n        </FormGroup>\n\n        <FormGroup\n          fieldId=\"account-name\"\n          validated={validated}\n          helperTextInvalid={t(\"common:required\")}\n          isRequired\n          label={t(\"account_id_title\")}\n          labelIcon={\n            <Popover bodyContent={t(\"account_id_help\")}>\n              <button\n                type=\"button\"\n                onClick={(e) => e.preventDefault()}\n                className=\"pf-c-form__group-label-help\"\n                aria-label={t(\"account_help\")}\n              >\n                <HelpIcon noVerticalAlign />\n              </button>\n            </Popover>\n          }\n        >\n          {accounts ? (\n            <Select\n              id={\"account-id\"}\n              data-testid=\"acls-select-account\"\n              className=\"kafka-ui--select--limit-height\"\n              variant={SelectVariant.typeahead}\n              typeAheadAriaLabel={t(\"account_id_title\")}\n              maxHeight={400}\n              onToggle={onToggle}\n              onSelect={onSelect}\n              onClear={clearSelection}\n              selections={selectedAccount}\n              onFilter={(_, value) => makeOptions(value)}\n              isOpen={isOpen}\n              placeholderText={t(\"account_id_typeahead_placeholder\")}\n              isCreatable\n              menuAppendTo=\"parent\"\n              validated={validated}\n              createText={t(\"resourcePrefix.create_text\")}\n              isGrouped\n              onCreateOption={() => {\n                setIsOpen(false);\n                setIsDirty(false);\n              }}\n            >\n              {makeOptions()}\n            </Select>\n          ) : (\n            <Skeleton width={\"100%\"} />\n          )}\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { AsyncTypeaheadSelect } from \"@rhoas/app-services-ui-components\";\n\ntype ResourceNameProps = {\n  value: string | undefined;\n  onChangeValue: (value: string | undefined) => void;\n  onFetchOptions: (filter: string) => string[];\n  submitted: boolean;\n  resourceType: ResourceTypeValue | undefined;\n  resourcePrefixRule: ResourcePrefixRuleValue;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const ResourceName: React.VFC<ResourceNameProps> = ({\n  value,\n  onChangeValue,\n  submitted,\n  resourceType,\n  resourcePrefixRule,\n  onFetchOptions,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const validationCheck = (\n    resourceType: ResourceTypeValue | undefined,\n    resourcePreixCondition: \"Starts with\" | \"Is\",\n    filter: string | undefined\n  ) => {\n    const regExp = new RegExp(\"^[0-9A-Za-z_.-]+$\");\n\n    if (filter === undefined || filter === \"\" || filter == \"*\")\n      return { isValid: true, message: undefined };\n    if (resourcePreixCondition == \"Is\" && resourceType == \"topic\") {\n      if (filter == \".\" || filter == \"..\")\n        return {\n          isValid: false,\n          message: t(\"resourcePrefix.invalid_topic_name\"),\n        };\n    }\n\n    if (resourceType == \"topic\" && !regExp.test(filter))\n      return {\n        isValid: false,\n        message: t(\"resourcePrefix.invalid_topic\"),\n      };\n\n    if (resourceType == \"consumer-group\" && !regExp.test(filter))\n      return {\n        isValid: false,\n        message: t(\"resourcePrefix.invalid_consumer_group\"),\n      };\n    if (filter.length > 32)\n      return { isValid: false, message: t(\"resourcePrefix.invalid_length\") };\n\n    return { isValid: true, message: undefined };\n  };\n\n  const onValidation = (filter: string | undefined) => {\n    const validationMessage = validationCheck(\n      resourceType,\n      resourcePrefixRule,\n      filter\n    );\n    setIsNameValid(validationMessage.isValid);\n    return validationMessage;\n  };\n\n  return (\n    <AsyncTypeaheadSelect\n      id=\"resource-name\"\n      ariaLabel={\n        resourcePrefixRule === \"Is\"\n          ? t(\"resourcePrefix.aria_label_name_is\", { value: resourceType })\n          : t(\"resourcePrefix.aria_label_name_starts_with\", {\n              value: resourceType,\n            })\n      }\n      value={value}\n      placeholderText={\n        resourcePrefixRule === \"Is\"\n          ? t(\"resourcePrefix.placeholder_name_is\")\n          : t(\"resourcePrefix.placeholder_name_starts_with\")\n      }\n      onChange={onChangeValue}\n      required={true}\n      submitted={submitted}\n      onFetchOptions={onFetchOptions}\n      onValidationCheck={onValidation}\n    />\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\n\nexport type ResourceOperationValue =\n  | \"All\"\n  | \"Read\"\n  | \"Write\"\n  | \"Create\"\n  | \"Delete\"\n  | \"Alter\"\n  | \"Describe\"\n  | \"Describe configs\"\n  | \"Alter configs\";\n\ntype ResourceOperationProps = {\n  value: ResourceOperationValue | undefined;\n  onChangeValue: (value: ResourceOperationValue | undefined) => void;\n  initialOpen?: boolean;\n  invalid: boolean;\n  resourceTypeOptions: string[];\n};\n\nexport const ResourceOperation: React.VFC<ResourceOperationProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n  invalid,\n  resourceTypeOptions,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourceOperationValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return resourceTypeOptions.map((value, index) => (\n      <SelectOption key={index} value={value}>\n        {value}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <FormGroup\n      validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n      helperTextInvalid={t(\"common:required\")}\n      fieldId={\"resource-operation-select\"}\n    >\n      <Select\n        id={\"resource-operation-select\"}\n        aria-label={t(\"operations.aria_label\", value)}\n        data-testid=\"acls-resource-operation-select\"\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        isOpen={isOpen}\n        width={200}\n        placeholderText={t(\"operations.placeholder_text\")}\n        validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n        selections={value}\n        menuAppendTo={document.body}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroup>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\n\nexport type ResourcePermissionValue = \"allow\" | \"deny\";\n\ntype ResourcePermissionProps = {\n  value: ResourcePermissionValue;\n  onChangeValue: (value: ResourcePermissionValue) => void;\n  initialOpen?: boolean;\n};\n\nexport const ResourcePermission: React.VFC<ResourcePermissionProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourcePermissionOptions: {\n    [key in ResourcePermissionValue]: string;\n  } = {\n    allow: t(\"permissions.allow\"),\n    deny: t(\"permissions.deny\"),\n  };\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourcePermissionValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourcePermissionOptions).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <Select\n      id={\"resource-permission-select\"}\n      aria-label={t(\"permissions.aria_label\", { value })}\n      data-testid=\"acls-resource-permission-select\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      width={150}\n      selections={value}\n      menuAppendTo={document.body}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type ResourcePrefixRuleValue = \"Is\" | \"Starts with\";\n\ntype ResourcePrefixRuleProps = {\n  value: ResourcePrefixRuleValue;\n  onChangeValue: (value: ResourcePrefixRuleValue) => void;\n  initialOpen?: boolean;\n};\n\nexport const ResourcePrefixRule: React.VFC<ResourcePrefixRuleProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourcePrefixRuleOptions: {\n    [key in ResourcePrefixRuleValue]: { label: string; description: string };\n  } = {\n    \"Starts with\": {\n      label: t(\"resource_prefix_rule.starts_with\"),\n      description: t(\"resource_prefix_rule.starts_with_description\"),\n    },\n    Is: {\n      label: t(\"resource_prefix_rule.is\"),\n      description: t(\"resource_prefix_rule.is_description\"),\n    },\n  };\n\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourcePrefixRuleValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourcePrefixRuleOptions).map(\n      ([key, { label, description }]) => (\n        <SelectOption key={key} value={key} description={description}>\n          {label}\n        </SelectOption>\n      )\n    );\n  };\n\n  return (\n    <Select\n      id={\"resource-prefix-rule-select\"}\n      aria-label={t(\"resource_prefix_rule.aria_label\", { value })}\n      data-testid=\"acls-resource-prefix-rule-select\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      width={150}\n      selections={value}\n      menuAppendTo={document.body}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\n\nexport type ResourceTypeValue =\n  | \"topic\"\n  | \"consumer-group\"\n  | \"kafka-instance\"\n  | \"transactional-id\";\n\ntype ResourceTypeProps = {\n  value: ResourceTypeValue | undefined;\n  onChangeValue: (value: ResourceTypeValue | undefined) => void;\n  initialOpen?: boolean;\n  invalid: boolean;\n};\n\nexport const ResourceType: React.VFC<ResourceTypeProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n  invalid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourceTypeOptions: { [key in ResourceTypeValue]: string } = {\n    \"consumer-group\": t(\"resourceTypes.consumer_group\"),\n    topic: t(\"resourceTypes.topic\"),\n    \"kafka-instance\": t(\"resourceTypes.kafka_instance\"),\n    \"transactional-id\": t(\"resourceTypes.transactional_id\"),\n  };\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourceTypeValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourceTypeOptions).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <FormGroup\n      validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n      helperTextInvalid={t(\"common:required\")}\n      fieldId={\"resource-type-select\"}\n    >\n      <Select\n        id={\"resource-type-select\"}\n        aria-label={\n          value != undefined\n            ? t(\"resourceTypes.resource_type_selected\", { value: value })\n            : t(\"resourceTypes.resource_type\")\n        }\n        data-testid=\"acls-resource-type-select\"\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        isOpen={isOpen}\n        width={200}\n        placeholderText={t(\"resourceTypes.placeholder_text\")}\n        validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n        selections={value}\n        menuAppendTo={document.body}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroup>\n  );\n};\n","import { Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ShortcutsTableHead: React.FC = () => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Thead>\n      <Tr>\n        <Th>{t(\"table.resource_column_title\")}</Th>\n        <Th />\n\n        <Th />\n\n        <Th>{t(\"table.permissions_column_title\")}</Th>\n        <Th />\n        <Th />\n      </Tr>\n    </Thead>\n  );\n};\n","import { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { ResourceType } from \"./ResourceType\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport { ResourcePermission } from \"./ResourcePermission\";\nimport type { ResourcePermissionValue } from \"./ResourcePermission\";\nimport { ResourceOperation } from \"./ResourceOperation\";\nimport type { ResourceOperationValue } from \"./ResourceOperation\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nexport type KafkaInstanceManualPermissions = {\n  resourceType: ResourceTypeValue | undefined;\n  onChangeResourceType: (value: ResourceTypeValue | undefined) => void;\n  submitted: boolean;\n  resourcePermission: ResourcePermissionValue;\n  onChangeResourcePermission: (value: ResourcePermissionValue) => void;\n  resourceOperation: ResourceOperationValue | undefined;\n  onChangeResourceOperation: (\n    value: ResourceOperationValue | undefined\n  ) => void;\n  row: number;\n  onDelete: (row: number) => void;\n};\n\nexport const KafkaInstanceManualPermissions: React.FC<\n  KafkaInstanceManualPermissions\n> = ({\n  resourceType,\n  resourceOperation,\n  resourcePermission,\n  submitted,\n  onChangeResourceOperation,\n  onChangeResourcePermission,\n  onChangeResourceType,\n  row,\n  onDelete,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Tbody>\n      <Tr>\n        <Td width={60}>\n          <ResourceType\n            value={resourceType}\n            onChangeValue={onChangeResourceType}\n            invalid={submitted && resourceType === undefined}\n          />\n        </Td>\n\n        <Td />\n        <Td />\n\n        <Td>\n          <ResourcePermission\n            value={resourcePermission}\n            onChangeValue={onChangeResourcePermission}\n          />\n        </Td>\n        <Td>\n          <ResourceOperation\n            value={resourceOperation}\n            onChangeValue={onChangeResourceOperation}\n            resourceTypeOptions={[\n              t(\"operations.alter\"),\n              t(\"operations.describe\"),\n            ]}\n            invalid={submitted && resourceOperation === undefined}\n          />\n        </Td>\n        <Td>\n          <RemoveButton\n            variant=\"link\"\n            onClick={() => onDelete(row)}\n            tooltip={t(\"operations.delete\")}\n          />\n        </Td>\n      </Tr>\n    </Tbody>\n  );\n};\n","import { Tbody, Tr, Td } from \"@patternfly/react-table\";\nimport { ResourceName } from \"./ResourceName\";\nimport { ResourceOperation } from \"./ResourceOperation\";\nimport type { ResourceOperationValue } from \"./ResourceOperation\";\nimport { ResourcePermission } from \"./ResourcePermission\";\nimport type { ResourcePermissionValue } from \"./ResourcePermission\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { ResourceType } from \"./ResourceType\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\nimport { useTranslation } from \"react-i18next\";\nimport { KafkaInstanceManualPermissions } from \"./KafkaInstanceManualPermissions\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\n\nexport type AssignPermissionsManualProps = {\n  resourceType: ResourceTypeValue | undefined;\n  onChangeResourceType: (value: ResourceTypeValue | undefined) => void;\n  submitted: boolean;\n  resourcePrefix: ResourcePrefixRuleValue;\n  onChangeResourcePrefix: (value: ResourcePrefixRuleValue) => void;\n  resourceName: string | undefined;\n  onChangeResource: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  resourcePermission: ResourcePermissionValue;\n  onChangeResourcePermission: (value: ResourcePermissionValue) => void;\n  resourceOperation: ResourceOperationValue | undefined;\n  onChangeResourceOperation: (\n    value: ResourceOperationValue | undefined\n  ) => void;\n  multipleShorctutPermissions?: boolean;\n  row: number;\n  onDelete: (row: number) => void;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const AssignPermissionsManual: React.FC<\n  AssignPermissionsManualProps\n> = ({\n  resourceType,\n  onChangeResourceType,\n  submitted,\n  resourcePrefix,\n  onChangeResourcePrefix,\n  resourceName,\n  onChangeResource,\n  onFetchResourceNameOptions,\n  resourcePermission,\n  resourceOperation,\n  onChangeResourceOperation,\n  onChangeResourcePermission,\n  multipleShorctutPermissions = true,\n  row,\n  onDelete,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const resourceTypeOptions = () => {\n    switch (resourceType) {\n      case \"consumer-group\":\n        return [\n          t(\"operations.all\"),\n          t(\"operations.read\"),\n          t(\"operations.delete\"),\n          t(\"operations.describe\"),\n        ];\n      case \"kafka-instance\":\n        return [t(\"operations.alter\"), t(\"operations.describe\")];\n      case \"transactional-id\":\n        return [\n          t(\"operations.all\"),\n          t(\"operations.write\"),\n          t(\"operations.describe\"),\n        ];\n      default:\n        return [\n          t(\"operations.all\"),\n          t(\"operations.read\"),\n          t(\"operations.write\"),\n          t(\"operations.create\"),\n          t(\"operations.delete\"),\n          t(\"operations.alter\"),\n          t(\"operations.describe\"),\n          t(\"operations.describe_configs\"),\n          t(\"operations.alter_configs\"),\n        ];\n    }\n  };\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n      {resourceType === \"kafka-instance\" ? (\n        <KafkaInstanceManualPermissions\n          resourceOperation={resourceOperation}\n          resourcePermission={resourcePermission}\n          resourceType={resourceType}\n          submitted={submitted}\n          onChangeResourceOperation={onChangeResourceOperation}\n          onChangeResourcePermission={onChangeResourcePermission}\n          onChangeResourceType={onChangeResourceType}\n          onDelete={onDelete}\n          row={row}\n        />\n      ) : (\n        <Tbody>\n          <Tr>\n            <Td>\n              <ResourceType\n                value={resourceType}\n                onChangeValue={onChangeResourceType}\n                invalid={submitted && resourceType === undefined}\n              />\n            </Td>\n            <Td>\n              <ResourcePrefixRule\n                value={resourcePrefix}\n                onChangeValue={onChangeResourcePrefix}\n              />\n            </Td>\n            <Td>\n              <ResourceName\n                value={resourceName}\n                onChangeValue={onChangeResource}\n                onFetchOptions={onFetchResourceNameOptions}\n                submitted={submitted}\n                resourceType={resourceType}\n                resourcePrefixRule={resourcePrefix}\n                setIsNameValid={setIsNameValid}\n              />\n            </Td>\n            <Td>\n              <ResourcePermission\n                value={resourcePermission}\n                onChangeValue={onChangeResourcePermission}\n              />\n            </Td>\n            <Td>\n              <ResourceOperation\n                resourceTypeOptions={resourceTypeOptions()}\n                value={resourceOperation}\n                onChangeValue={onChangeResourceOperation}\n                invalid={\n                  submitted && resourceOperation === undefined ? true : false\n                }\n              />\n            </Td>\n            <Td>\n              <RemoveButton\n                variant=\"link\"\n                onClick={() => onDelete(row)}\n                tooltip={t(\"remove_permission_tooltip\")}\n                ariaLabel={t(\"manual_delete\")}\n              />\n            </Td>\n          </Tr>\n        </Tbody>\n      )}\n    </>\n  );\n};\n","import { Tr, Td } from \"@patternfly/react-table\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ResourceName } from \"./ResourceName\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\n\nexport type ProduceTopicRowProps = {\n  onChange: (value: ResourcePrefixRuleValue) => void;\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n  onChangeResourceName: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  isConsumeTopicShortcut?: boolean;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ProduceTopicRow: React.FC<ProduceTopicRowProps> = ({\n  onChange,\n  prefixRuleValue,\n  resourceNameValue,\n  onChangeResourceName,\n  onFetchResourceNameOptions,\n  submitted,\n  isConsumeTopicShortcut,\n  setIsNameValid,\n}) => {\n  return (\n    <Tr style={{ borderBottom: isConsumeTopicShortcut ? \"none\" : \"\" }}>\n      <Td>\n        {\" \"}\n        <ResourceTypeLabel variant={\"TOPIC\"} />{\" \"}\n        <DisplayResourceName resourceType={\"TOPIC\"} />{\" \"}\n      </Td>\n      <Td>\n        {\n          <ResourcePrefixRule\n            value={prefixRuleValue}\n            onChangeValue={onChange}\n          />\n        }\n      </Td>\n      <Td>\n        <ResourceName\n          value={resourceNameValue}\n          onChangeValue={onChangeResourceName}\n          onFetchOptions={onFetchResourceNameOptions}\n          submitted={submitted}\n          resourceType={\"topic\"}\n          resourcePrefixRule={prefixRuleValue}\n          setIsNameValid={setIsNameValid}\n        />\n      </Td>\n      <Td colSpan={2}>\n        <PermissionOperationCell\n          permission={\"ALLOW\"}\n          operation={\n            isConsumeTopicShortcut\n              ? [\"READ\", \"DESCRIBE\"]\n              : [\"WRITE\", \"CREATE\", \"DESCRIBE\"]\n          }\n        />\n      </Td>\n    </Tr>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\n\nimport { ResourceName } from \"./ResourceName\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ProduceTopicRow } from \"./ProduceTopicRow\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\n\nexport type ConsumeTopicShortcutProps = {\n  onChangeConsumerResourcePrefixRule: (value: ResourcePrefixRuleValue) => void;\n  onChangeTopicResourcePrefixRule: (value: ResourcePrefixRuleValue) => void;\n  consumerPrefixRuleValue: ResourcePrefixRuleValue;\n  topicPrefixRuleValue: ResourcePrefixRuleValue;\n  consumerResourceNameValue: string | undefined;\n  topicResourceNameValue: string | undefined;\n  onChangeConsumerResourceName: (value: string | undefined) => void;\n  onChangeTopicResourceName: (value: string | undefined) => void;\n  onFetchConsumerResourceNameOptions: (filter: string) => string[];\n  onFetchTopicResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  multipleShorctutPermissions?: boolean;\n  onDelete: (row: number) => void;\n  row: number;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ConsumeTopicShortcut: React.FC<ConsumeTopicShortcutProps> = ({\n  onChangeConsumerResourceName,\n  topicPrefixRuleValue,\n  topicResourceNameValue,\n  consumerPrefixRuleValue,\n  consumerResourceNameValue,\n  submitted,\n  onChangeConsumerResourcePrefixRule,\n  onChangeTopicResourceName,\n  onChangeTopicResourcePrefixRule,\n  onFetchConsumerResourceNameOptions,\n  onFetchTopicResourceNameOptions,\n  onDelete,\n  multipleShorctutPermissions = true,\n  row,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_consume_topic\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_consume_topic\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_consume_topic_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_consumer\")}\n            />\n          </Td>\n        </Tr>\n        <ProduceTopicRow\n          setIsNameValid={setIsNameValid}\n          isConsumeTopicShortcut={true}\n          onChange={onChangeTopicResourcePrefixRule}\n          prefixRuleValue={topicPrefixRuleValue}\n          resourceNameValue={topicResourceNameValue}\n          onChangeResourceName={onChangeTopicResourceName}\n          onFetchResourceNameOptions={onFetchTopicResourceNameOptions}\n          submitted={submitted}\n        />\n        <Tr>\n          <Td>\n            {\" \"}\n            <ResourceTypeLabel variant={\"GROUP\"} />{\" \"}\n            <DisplayResourceName resourceType={\"GROUP\"} />{\" \"}\n          </Td>\n          <Td>\n            <ResourcePrefixRule\n              value={consumerPrefixRuleValue}\n              onChangeValue={onChangeConsumerResourcePrefixRule}\n            />\n          </Td>\n          <Td>\n            {\n              <ResourceName\n                value={consumerResourceNameValue}\n                onChangeValue={onChangeConsumerResourceName}\n                onFetchOptions={onFetchConsumerResourceNameOptions}\n                submitted={submitted}\n                resourceType={\"topic\"}\n                resourcePrefixRule={consumerPrefixRuleValue}\n                setIsNameValid={setIsNameValid}\n              />\n            }\n          </Td>\n          <Td>\n            <PermissionOperationCell\n              permission={\"ALLOW\"}\n              operation={[\"READ\"]}\n            />\n          </Td>\n        </Tr>\n      </Tbody>\n    </>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type ManageAccessShortcutProps = {\n  onDelete: (row: number) => void;\n  multipleShorctutPermissions?: boolean;\n  instanceName: string;\n  row: number;\n};\nexport const ManageAccessShortcut: React.FC<ManageAccessShortcutProps> = ({\n  onDelete,\n  multipleShorctutPermissions = true,\n  instanceName,\n  row,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_manage_access\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_manage_access\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_manage_access_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_access\")}\n            />\n          </Td>\n        </Tr>\n\n        <Tr>\n          <Td colSpan={2}>\n            <ResourceTypeLabel variant={\"CLUSTER\"} />{\" \"}\n            <DisplayResourceName resourceType={\"CLUSTER\"} />{\" \"}\n            {t(\"is_kafka_instance\", { value: instanceName })}\n          </Td>\n\n          <Td />\n\n          <Td>\n            <PermissionOperationCell\n              permission={\"ALLOW\"}\n              operation={[\"ALTER\"]}\n            />\n          </Td>\n        </Tr>\n      </Tbody>\n    </>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nimport { ProduceTopicRow } from \"./ProduceTopicRow\";\n\nexport type ProduceTopicShortcutProps = {\n  onChange: (value: ResourcePrefixRuleValue) => void;\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n  onChangeResourceName: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  onDelete: (row: number) => void;\n  multipleShorctutPermissions?: boolean;\n  row: number;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ProduceTopicShortcut: React.FC<ProduceTopicShortcutProps> = ({\n  onChange,\n  onDelete,\n  prefixRuleValue,\n  onChangeResourceName,\n  resourceNameValue,\n  submitted,\n  onFetchResourceNameOptions,\n  multipleShorctutPermissions = true,\n  row,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_produce_topic\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_produce_topic\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_produce_topic_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_producer\")}\n            />\n          </Td>\n        </Tr>\n\n        <ProduceTopicRow\n          onChange={onChange}\n          prefixRuleValue={prefixRuleValue}\n          resourceNameValue={resourceNameValue}\n          onChangeResourceName={onChangeResourceName}\n          onFetchResourceNameOptions={onFetchResourceNameOptions}\n          submitted={submitted}\n          setIsNameValid={setIsNameValid}\n        />\n      </Tbody>\n    </>\n  );\n};\n","import { ActionList, ActionListItem } from \"@patternfly/react-core\";\nimport { TableComposable } from \"@patternfly/react-table\";\nimport { PermissionsDropdown } from \"./PermissionsDropdown\";\nimport type { AddAclType } from \"../types\";\nimport { AssignPermissionsManual } from \"./AssignPermissionsManual\";\nimport { ConsumeTopicShortcut } from \"./ConsumeTopicShortcut\";\nimport { ManageAccessShortcut } from \"./ManageAccessShortcut\";\nimport { ProduceTopicShortcut } from \"./ProduceTopicShortcut\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type AssignPermissionsProps = {\n  submitted: boolean;\n  onDelete: (index: number) => void;\n  topicNameOptions: (filter: string) => string[];\n  consumerGroupNameOptions: (filter: string) => string[];\n  addedAcls?: AddAclType[];\n  onAddManualPermissions: () => void;\n  onAddProduceTopicShortcut: () => void;\n  onConsumeTopicShortcut: () => void;\n  onManageAccessShortcut: () => void;\n  kafkaName: string;\n  setAddedAcls: (value: AddAclType[]) => void;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const AssignPermissions: React.VFC<AssignPermissionsProps> = ({\n  submitted,\n  onDelete,\n  topicNameOptions,\n  consumerGroupNameOptions,\n  onAddManualPermissions,\n  onAddProduceTopicShortcut,\n  onConsumeTopicShortcut,\n  onManageAccessShortcut,\n  addedAcls,\n  kafkaName,\n  setAddedAcls,\n  setIsNameValid,\n}) => {\n  return (\n    <>\n      <TableComposable variant=\"compact\">\n        {addedAcls && addedAcls.length > 0 && <ShortcutsTableHead />}\n        {addedAcls &&\n          addedAcls.map((aclTemplate, idx) => {\n            switch (aclTemplate.type) {\n              case \"manual\":\n                return (\n                  <AssignPermissionsManual\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    resourceType={aclTemplate.resourceType}\n                    onChangeResourceType={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourceType: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    submitted={submitted}\n                    resourcePrefix={aclTemplate.resourcePrefix}\n                    onChangeResourcePrefix={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourcePrefix: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    resourceName={aclTemplate.resourceName}\n                    onChangeResource={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourceName: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchResourceNameOptions={topicNameOptions}\n                    resourcePermission={aclTemplate.resourcePermission}\n                    onChangeResourcePermission={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourcePermission: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    resourceOperation={aclTemplate.resourceOperation}\n                    onChangeResourceOperation={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourceOperation: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    row={idx}\n                    onDelete={onDelete}\n                  />\n                );\n\n              case \"consume-topic\":\n                return (\n                  <ConsumeTopicShortcut\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    onChangeConsumerResourcePrefixRule={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                consumerResourcePrefixRule: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onChangeTopicResourcePrefixRule={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                topicResourcePrefixRule: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    consumerPrefixRuleValue={\n                      aclTemplate.consumerResourcePrefixRule\n                    }\n                    topicPrefixRuleValue={aclTemplate.topicResourcePrefixRule}\n                    consumerResourceNameValue={aclTemplate.consumerResourceName}\n                    topicResourceNameValue={aclTemplate.topicResourceName}\n                    onChangeConsumerResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                consumerResourceName: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onChangeTopicResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                topicResourceName: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchConsumerResourceNameOptions={\n                      consumerGroupNameOptions\n                    }\n                    onFetchTopicResourceNameOptions={topicNameOptions}\n                    submitted={submitted}\n                    onDelete={onDelete}\n                    row={idx}\n                  />\n                );\n\n              case \"produce-topic\":\n                return (\n                  <ProduceTopicShortcut\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    onChange={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, prefixRuleValue: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    prefixRuleValue={aclTemplate.prefixRuleValue}\n                    resourceNameValue={aclTemplate.resourceNameValue}\n                    onChangeResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourceNameValue: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchResourceNameOptions={topicNameOptions}\n                    submitted={submitted}\n                    onDelete={onDelete}\n                    row={idx}\n                  />\n                );\n\n              case \"manage-access\":\n                return (\n                  <ManageAccessShortcut\n                    key={idx}\n                    row={idx}\n                    instanceName={kafkaName}\n                    onDelete={onDelete}\n                  />\n                );\n            }\n          })}\n      </TableComposable>\n      <ActionList>\n        <ActionListItem style={{ paddingTop: \"20px\" }}>\n          <PermissionsDropdown\n            onAddPermission={onAddManualPermissions}\n            onShortcutConsumeTopic={onConsumeTopicShortcut}\n            onShortcutProduceTopic={onAddProduceTopicShortcut}\n            onShortcutManageAccess={onManageAccessShortcut}\n          />\n        </ActionListItem>\n      </ActionList>\n    </>\n  );\n};\n","import type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Modal,\n  ModalVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\n\nexport type PreCancelModalProps = {\n  isOpen: boolean;\n  closeModal: () => void;\n  resumeEditing: () => void;\n};\n\nconst PreCancelModal: React.FC<PreCancelModalProps> = ({\n  isOpen,\n  closeModal,\n  resumeEditing,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Modal\n      id=\"manage-permissions-precancel-modal\"\n      variant={ModalVariant.small}\n      isOpen={isOpen}\n      aria-label={t(\"pre_cancel_label\")}\n      title={t(\"pre_cancel_title\")}\n      titleIconVariant=\"warning\"\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={resumeEditing}\n      onEscapePress={closeModal}\n      actions={[\n        <Button onClick={closeModal} key={1} variant={ButtonVariant.primary}>\n          {t(\"discard_changes\")}\n        </Button>,\n        <Button\n          onClick={resumeEditing}\n          key={2}\n          variant={ButtonVariant.secondary}\n        >\n          {t(\"resume_editing\")}\n        </Button>,\n      ]}\n    >\n      {t(\"cancel_description\")}\n    </Modal>\n  );\n};\n\nexport { PreCancelModal };\n","import type { VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\n\nimport type { AclBinding } from \"../types\";\nimport { PermissionOperationCell, PrincipalCell, ResourceCell } from \"./Cells\";\n\nexport type ReviewPermissionsTableProps = {\n  acls: AclBinding[];\n  selectedAccountId: string;\n  onRemoveAcl: (idx: number) => void;\n};\n\nexport const ReviewPermissionsTable: VFC<ReviewPermissionsTableProps> = ({\n  selectedAccountId,\n  acls = [],\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <TableComposable\n      variant={TableVariant.compact}\n      aria-label={t(\"review_permissions_table\")}\n    >\n      <Thead noWrap>\n        <Tr>\n          <Th width={60}>{t(\"table.resource_column_title\")}</Th>\n          <Th width={20}>{t(\"table.permissions_column_title\")}</Th>\n          <Th width={20} />\n        </Tr>\n      </Thead>\n      <Tbody>\n        {acls.map((acl, idx) => {\n          const {\n            patternType,\n            resourceType,\n            resourceName,\n            operation,\n            permission,\n            principal,\n          } = acl;\n          const isDeleteEnabled =\n            selectedAccountId === \"All accounts\" ||\n            principal === `User:${selectedAccountId}` ||\n            principal != `User:*`;\n          const isAllAccounts = principal === \"User:*\";\n\n          return (\n            <Tr key={idx}>\n              <Td>\n                <ResourceCell\n                  patternType={patternType}\n                  resourceType={resourceType}\n                  resourceName={resourceName}\n                />\n              </Td>\n              <Td>\n                <PermissionOperationCell\n                  permission={permission}\n                  operation={operation}\n                />\n              </Td>\n              <Td>\n                <PrincipalCell\n                  isDeleteEnabled={isDeleteEnabled}\n                  isAllAccounts={isAllAccounts}\n                  onRemoveAcl={() => onRemoveAcl(idx)}\n                />\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </TableComposable>\n  );\n};\n","import { Text, TextContent, TextVariants } from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { AclBinding } from \"../types\";\nimport { ReviewPermissionsTable } from \"./ReviewPermissionsTable\";\n\nexport type ViewAccountDetailsProps = {\n  accountId: string | undefined;\n  existingAcls: AclBinding[];\n  onRemoveAcl: (index: number) => void;\n};\n\nexport const ViewAccountDetails: React.VFC<ViewAccountDetailsProps> = ({\n  accountId,\n  existingAcls,\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const HelperText: React.FunctionComponent = () => {\n    if (accountId === \"All accounts\") {\n      return t(\"all_accounts_help\");\n    }\n    return (\n      <Trans ns={[\"manage-kafka-permissions\"]} i18nKey=\"selected_account_help\">\n        Review the list of existing permissions for the selected account. The\n        list includes account-specific permissions and permissions applied to\n        all accounts within this Kafka instance. Permissions labeled\n        <strong>All accounts</strong> cannot be removed when an individual\n        account ID is selected.\n      </Trans>\n    );\n  };\n  return (\n    <>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          <HelperText />\n        </Text>\n      </TextContent>\n      <ReviewPermissionsTable\n        acls={existingAcls}\n        selectedAccountId={accountId ? accountId : \"\"}\n        onRemoveAcl={onRemoveAcl}\n      />\n    </>\n  );\n};\n","import type { ResourceOperationValue } from \"./components/ResourceOperation\";\nimport type { ResourceTypeValue } from \"./components/ResourceType\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport { AclResourceType } from \"@rhoas/kafka-instance-sdk\";\nimport type { AddAclType } from \"./types\";\n\nexport const transformPermissions = (\n  transformAclData: AclBinding[],\n  newAcls?: AddAclType[],\n  selectedAccount?: string\n) => {\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  const selectedAccountName = `User:${selectedAccount}`;\n  newAcls?.map((value) => {\n    switch (value.type) {\n      case \"manual\": {\n        transformAclData.push({\n          resourceName:\n            value.resourceType == \"kafka-instance\"\n              ? \"kafka-cluster\"\n              : value.resourceName\n              ? value.resourceName\n              : \"\",\n          resourceType: transformResourceType(value.resourceType),\n          patternType: value.resourcePrefix == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n          operation: transformResourceOperation(value.resourceOperation),\n          permission: value.resourcePermission == \"allow\" ? \"ALLOW\" : \"DENY\",\n          principal:\n            selectedAccount == \"All accounts\" ? `User:*` : selectedAccountName,\n        });\n        break;\n      }\n      case \"manage-access\":\n        {\n          transformAclData.push({\n            resourceName: \"kafka-cluster\",\n            resourceType: \"CLUSTER\",\n            patternType: \"LITERAL\",\n            operation: \"ALTER\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          });\n        }\n        break;\n      case \"consume-topic\":\n        {\n          transformAclData.push(\n            {\n              resourceName: value.topicResourceName || \"\",\n              resourceType: \"TOPIC\",\n              patternType:\n                value.topicResourcePrefixRule == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n              operation: \"READ\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            },\n            {\n              resourceName: value.topicResourceName || \"\",\n              resourceType: \"TOPIC\",\n              patternType:\n                value.topicResourcePrefixRule == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n              operation: \"DESCRIBE\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            },\n            {\n              resourceName: value.consumerResourceName || \"\",\n              resourceType: \"GROUP\",\n              patternType:\n                value.consumerResourcePrefixRule == \"Is\"\n                  ? \"LITERAL\"\n                  : \"PREFIXED\",\n              operation: \"READ\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            }\n          );\n        }\n        break;\n      case \"produce-topic\": {\n        transformAclData.push(\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"WRITE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          },\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"CREATE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          },\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"DESCRIBE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          }\n        );\n      }\n    }\n  });\n};\n\nexport const transformResourceType = (value: ResourceTypeValue | undefined) => {\n  switch (value) {\n    case \"consumer-group\":\n      return AclResourceType.Group;\n    case \"kafka-instance\":\n      return AclResourceType.Cluster;\n    case \"topic\":\n      return AclResourceType.Topic;\n    default:\n      return AclResourceType.TransactionalId;\n  }\n};\nexport const transformResourceOperation = (\n  value: ResourceOperationValue | undefined\n) => {\n  switch (value) {\n    case \"All\":\n      return \"ALL\";\n    case \"Alter\":\n      return \"ALTER\";\n    case \"Alter configs\":\n      return \"ALTER_CONFIGS\";\n    case \"Create\":\n      return \"CREATE\";\n    case \"Delete\":\n      return \"DELETE\";\n    case \"Describe\":\n      return \"DESCRIBE\";\n    case \"Describe configs\":\n      return \"DESCRIBE_CONFIGS\";\n    case \"Read\":\n      return \"READ\";\n    default:\n      return \"WRITE\";\n  }\n};\n","import {\n  Button,\n  ExpandableSection,\n  Form,\n  FormGroup,\n  Modal,\n  TextContent,\n  TextVariants,\n  Text,\n  Badge,\n  Alert,\n  Popover,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AssignPermissions } from \"./AssignPermissions\";\nimport { PreCancelModal } from \"./PreCancelModal\";\nimport { ViewAccountDetails } from \"./ViewAccountDetails\";\nimport type { AddAclType } from \"../types\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport type { Permissions } from \"ui\";\nimport {\n  createEmptyConsumeTopicAcl,\n  createEmptyManageAccessAcl,\n  createEmptyManualAcl,\n  createEmptyProduceTopicAcl,\n} from \"../types\";\nimport { transformPermissions } from \"../utils\";\n\nexport type AclType = {\n  groups: Permissions[];\n  count: number;\n};\n\nexport type EditPermissionsProps = {\n  onCancel: () => void;\n  kafkaName: string;\n  onSave: (\n    acls: AclBinding[] | undefined,\n    deletedAcls: AclBinding[] | undefined\n  ) => void;\n  acls: AclBinding[];\n  topicsList: string[];\n  consumerGroupsList: string[];\n  id?: string;\n  selectedAccount: string | undefined;\n};\n\nexport const EditPermissions: React.FC<EditPermissionsProps> = ({\n  onCancel,\n  kafkaName,\n  acls,\n  onSave,\n  topicsList,\n  consumerGroupsList,\n  selectedAccount,\n  id,\n}) => {\n  const { t } = useTranslation([\n    \"manage-kafka-permissions\",\n    \"create-kafka-instance\",\n  ]);\n\n  const escapeClosesModal = useRef<boolean>(true);\n  const [\n    isExpandedExistingPermissionSection,\n    setIsExpandedExistingPermissionSection,\n  ] = useState<boolean>(false);\n  const [isAclDeleted, setIsAclDeleted] = useState<boolean>(false);\n  const [\n    isExpandedAssignPermissionsSection,\n    setIsExpandedAssignPermissionsSection,\n  ] = useState<boolean>(true);\n  const [isNameValid, setIsNameValid] = useState<boolean>(true);\n  const [canSave, setCanSave] = useState<boolean>(false);\n  const [submitted, setSubmitted] = useState<boolean>(false);\n  const [isOpenPreCancelModal, setIsOpenPreCancelModal] =\n    useState<boolean>(false);\n  const [existingAcls, setExistingAcls] = useState<AclBinding[]>(acls);\n  const [newAcls, setNewAcls] = useState<AddAclType[]>();\n  const [deletedAcls, setDeletedAcls] = useState<AclBinding[] | undefined>(\n    undefined\n  );\n\n  const checkValidation = useCallback(() => {\n    if (newAcls) {\n      const isRowInvalid = newAcls?.map((value) =>\n        value.type == \"manual\" &&\n        value.resourceType == \"kafka-instance\" &&\n        value.resourceOperation != undefined\n          ? false\n          : Object.values(value).includes(undefined)\n      );\n      isRowInvalid.includes(true) ? setCanSave(false) : setCanSave(true);\n      if (canSave == true && isNameValid) return true;\n      else return false;\n    }\n    if (deletedAcls && deletedAcls.length > 0) {\n      setCanSave(true);\n      return true;\n    } else return false;\n  }, [canSave, deletedAcls, isNameValid, newAcls]);\n\n  useEffect(() => {\n    checkValidation();\n  }, [checkValidation, newAcls]);\n\n  useEffect(() => {\n    //Fetch the latest table for exiting acls, only when no row is scheduled for deletion\n    if (deletedAcls == undefined) setExistingAcls(acls);\n  }, [acls, deletedAcls]);\n\n  const onEscapePress = () => {\n    if (escapeClosesModal.current) {\n      onCancel();\n    }\n  };\n  const topicFilter = (filter: string) => {\n    if (filter == \"\" || filter == undefined) return topicsList;\n    else return topicsList.filter((v) => v.includes(filter));\n  };\n\n  const consumerGroupsFilter = (filter: string) => {\n    if (filter == \"\" || filter == undefined) return consumerGroupsList;\n    else return consumerGroupsList.filter((v) => v.includes(filter));\n  };\n\n  const aclsToSave: AclBinding[] = [];\n\n  const onClickSubmit = () => {\n    if (\n      (newAcls && newAcls.length > 0) ||\n      (deletedAcls && deletedAcls.length > 0)\n    ) {\n      setSubmitted(true);\n      const isAclValid = checkValidation();\n      transformPermissions(aclsToSave, newAcls, selectedAccount);\n      isAclValid && onSave(aclsToSave, deletedAcls);\n    }\n  };\n\n  const onAddManualPermissions = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyManualAcl()]\n        : [createEmptyManualAcl()]\n    );\n  };\n  const onAddProduceTopicShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyProduceTopicAcl()]\n        : [createEmptyProduceTopicAcl()]\n    );\n  };\n  const onConsumeTopicShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyConsumeTopicAcl()]\n        : [createEmptyConsumeTopicAcl()]\n    );\n  };\n  const onManageAccessShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyManageAccessAcl(kafkaName)]\n        : [createEmptyManageAccessAcl(kafkaName)]\n    );\n  };\n\n  const onDeleteNewAcl = (row: number) => {\n    setNewAcls(\n      (prevState) => prevState && prevState.filter((_, index) => index !== row)\n    );\n  };\n\n  const onChangeExpandedExistingPermissionsSection = (value: boolean) => {\n    setIsExpandedExistingPermissionSection(value);\n  };\n  const onChangeExpandedAssignPermissionsSection = (value: boolean) => {\n    setIsExpandedAssignPermissionsSection(value);\n  };\n\n  const isDisabled =\n    (submitted && !canSave) ||\n    ((newAcls == undefined || newAcls.length < 1) && !isAclDeleted) ||\n    !isNameValid\n      ? true\n      : false;\n  const onClose = () => {\n    !isDisabled || (newAcls && newAcls?.length > 0)\n      ? setIsOpenPreCancelModal(true)\n      : onCancel();\n  };\n\n  const closePreCancelModal = () => {\n    setIsOpenPreCancelModal(false);\n    onCancel();\n  };\n\n  const resumeEditingPermissions = () => {\n    setIsOpenPreCancelModal(false);\n  };\n\n  const updateExistingAcls = (row: number) => {\n    setExistingAcls((existingAcls || []).filter((_, index) => index != row));\n  };\n\n  const onRemoveAcls = (row: number) => {\n    setDeletedAcls((prevState) =>\n      existingAcls && prevState != undefined\n        ? [...prevState, existingAcls[row]]\n        : existingAcls && [existingAcls[row]]\n    );\n    setIsAclDeleted(true);\n    updateExistingAcls(row);\n  };\n  //The value received will have a prefix 'User:'.Remove the prefix when displaying value\n  const accountDisplayName =\n    selectedAccount === \"All accounts\"\n      ? t(\"all_accounts_title\")\n      : selectedAccount?.includes(\"User:\")\n      ? selectedAccount?.split(\":\")[1]\n      : selectedAccount;\n  return (\n    <Modal\n      id=\"manage-permissions-modal\"\n      variant={\"large\"}\n      isOpen={true}\n      aria-label={t(\"dialog_aria_label\")}\n      position=\"top\"\n      title={t(\"dialog_title\")}\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={onClose}\n      onEscapePress={onEscapePress}\n      appendTo={() =>\n        id ? document.getElementById(id) || document.body : document.body\n      }\n      actions={[\n        <Button\n          key={1}\n          variant=\"primary\"\n          isDisabled={isDisabled}\n          onClick={onClickSubmit}\n          aria-label={t(\"step_2_submit_button\")}\n        >\n          {t(\"step_2_submit_button\")}\n        </Button>,\n        <Button\n          onClick={onClose}\n          key={2}\n          variant=\"secondary\"\n          aria-label={t(\"common:cancel\")}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <PreCancelModal\n        isOpen={isOpenPreCancelModal}\n        closeModal={closePreCancelModal}\n        resumeEditing={resumeEditingPermissions}\n      />\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <FormGroup\n          fieldId=\"kafka-instance-name\"\n          label={t(\"kafka_instance\")}\n          id=\"modal-message\"\n        >\n          {kafkaName}\n        </FormGroup>\n\n        <FormGroup\n          fieldId=\"account-name\"\n          label={t(\"account_id_title\")}\n          labelIcon={\n            <Popover bodyContent={t(\"account_id_help\")}>\n              <button\n                type=\"button\"\n                onClick={(e) => e.preventDefault()}\n                className=\"pf-c-form__group-label-help\"\n                aria-label={t(\"account_help\")}\n              >\n                <HelpIcon noVerticalAlign />\n              </button>\n            </Popover>\n          }\n        >\n          {accountDisplayName}\n        </FormGroup>\n        {(!canSave || !isNameValid) && submitted && (\n          <Alert\n            isInline\n            title={t(\"create-kafka-instance:form_errors.form_invalid\")}\n            variant={\"danger\"}\n          />\n        )}\n        <ExpandableSection\n          isIndented={true}\n          isExpanded={isExpandedExistingPermissionSection}\n          onToggle={onChangeExpandedExistingPermissionsSection}\n          toggleContent={\n            <div>\n              <span>{t(\"review_existing_title\")}</span>{\" \"}\n              <Badge isRead={existingAcls.length == 0 ? true : false}>\n                {existingAcls.length}\n              </Badge>\n            </div>\n          }\n        >\n          <ViewAccountDetails\n            accountId={selectedAccount}\n            existingAcls={existingAcls}\n            onRemoveAcl={onRemoveAcls}\n          />\n        </ExpandableSection>\n        <FormGroup>\n          <ExpandableSection\n            toggleText={t(\"assign_permissions_title\")}\n            isIndented={true}\n            isExpanded={isExpandedAssignPermissionsSection}\n            onToggle={onChangeExpandedAssignPermissionsSection}\n          >\n            <FormGroup>\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  {selectedAccount === \"All accounts\"\n                    ? t(\"assign_permissions_all_description\")\n                    : t(\"assign_permissions_description\", {\n                        value: accountDisplayName,\n                      })}\n                </Text>\n                {newAcls && newAcls?.length > 0 && (\n                  <Text component={TextVariants.small}>\n                    {t(\"all_fields_required\")}\n                  </Text>\n                )}\n              </TextContent>\n            </FormGroup>\n            <AssignPermissions\n              setIsNameValid={setIsNameValid}\n              submitted={submitted}\n              onAddManualPermissions={onAddManualPermissions}\n              onAddProduceTopicShortcut={onAddProduceTopicShortcut}\n              onConsumeTopicShortcut={onConsumeTopicShortcut}\n              onManageAccessShortcut={onManageAccessShortcut}\n              onDelete={onDeleteNewAcl}\n              topicNameOptions={topicFilter}\n              consumerGroupNameOptions={consumerGroupsFilter}\n              addedAcls={newAcls}\n              kafkaName={kafkaName}\n              setAddedAcls={setNewAcls}\n            />\n          </ExpandableSection>\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const EmptyStateInitialLoading: VoidFunctionComponent = () => {\n  return (\n    <PageSection isFilled={true}>\n      <EmptyState variant={EmptyStateVariant.xs}>\n        <EmptyStateBody data-chromatic=\"ignore\">\n          <AppServicesLoading />\n        </EmptyStateBody>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  PageSection,\n  Title,\n} from \"@patternfly/react-core\";\nimport { TachometerAltIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\n\nexport const EmptyStateMetricsUnavailable: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <PageSection isFilled={true}>\n      <EmptyState variant={EmptyStateVariant.xs}>\n        <EmptyStateIcon icon={TachometerAltIcon} />\n        <Title headingLevel=\"h3\" size=\"lg\">\n          {t(\"metrics:empty_state_no_data_title\")}\n        </Title>\n        <EmptyStateBody>{t(\"metrics:empty_state_no_data_body\")}</EmptyStateBody>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import { Grid, GridItem, PageSection } from \"@patternfly/react-core\";\nimport type { FunctionComponent, ReactElement } from \"react\";\n\ntype MetricsLayoutProps = {\n  metricsLagAlert: ReactElement;\n  topicsKpi: ReactElement;\n  topicPartitionsKpi: ReactElement;\n  consumerGroupKpi: ReactElement;\n  diskSpaceMetrics: ReactElement;\n  topicMetrics: ReactElement;\n};\nexport const MetricsLayout: FunctionComponent<MetricsLayoutProps> = ({\n  metricsLagAlert,\n  topicsKpi,\n  topicPartitionsKpi,\n  consumerGroupKpi,\n  diskSpaceMetrics,\n  topicMetrics,\n}) => {\n  return (\n    <PageSection\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n      padding={{ default: \"noPadding\" }}\n      className={\n        \"pf-u-px-lg-on-xl pf-u-pt-sm-on-xl pf-u-pb-lg-on-xl pf-u-px-md pf-u-pb-md\"\n      }\n    >\n      <Grid hasGutter>\n        <GridItem>{metricsLagAlert}</GridItem>\n        <GridItem sm={4}>{topicsKpi}</GridItem>\n        <GridItem sm={4}>{topicPartitionsKpi}</GridItem>\n        <GridItem sm={4}>{consumerGroupKpi}</GridItem>\n        <GridItem lg={6}>{diskSpaceMetrics}</GridItem>\n        <GridItem lg={6}>{topicMetrics}</GridItem>\n      </Grid>\n    </PageSection>\n  );\n};\n","import { CardBody, Bullseye, Spinner } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\n\nexport const CardBodyLoading: FunctionComponent = () => (\n  <CardBody>\n    <Bullseye>\n      <Spinner isSVG data-chromatic=\"ignore\" />\n    </Bullseye>\n  </CardBody>\n);\n","import { DurationOptions } from \"./types\";\n\nexport const timeIntervalsMapping = {\n  [DurationOptions.Last5minutes]: {\n    interval: 1 * 60,\n    ticks: 6,\n    showDate: false,\n  },\n  [DurationOptions.Last15minutes]: {\n    interval: 3 * 60,\n    ticks: 6,\n    showDate: false,\n  },\n  [DurationOptions.Last30minutes]: {\n    interval: 5 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last1hour]: { interval: 10 * 60, ticks: 6, showDate: false },\n  [DurationOptions.Last3hours]: {\n    interval: 30 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last6hours]: {\n    interval: 1 * 60 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last12hours]: {\n    interval: 2 * 60 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last24hours]: {\n    interval: 4 * 60 * 60,\n    ticks: 7,\n    showDate: true,\n  },\n  [DurationOptions.Last2days]: {\n    interval: 8 * 60 * 60,\n    ticks: 7,\n    showDate: true,\n  },\n  [DurationOptions.Last7days]: {\n    interval: 24 * 60 * 60,\n    ticks: 8,\n    showDate: true,\n  },\n} as const;\n\nexport const chartHeight = 350;\nexport const chartPadding = {\n  bottom: 110, // Adjusted to accomodate legend\n  left: 120,\n  right: 40,\n  top: 10,\n};\n","import { Flex, FlexItem, Skeleton } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ChartSkeletonLoader: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <Flex direction={{ default: \"column\" }} data-chromatic=\"ignore\">\n      <FlexItem>\n        <Skeleton\n          height={`${chartHeight - chartPadding.bottom}px`}\n          screenreaderText={t(\"common:skeleton_loader_screenreader_text\")}\n        />\n      </FlexItem>\n      <FlexItem>\n        <Skeleton height={`${chartPadding.bottom / 2 - 12.5}px`} width=\"20%\" />\n      </FlexItem>\n      <FlexItem>\n        <Skeleton height={`${chartPadding.bottom / 2 - 12.5}px`} width=\"40%\" />\n      </FlexItem>\n    </Flex>\n  );\n};\n","import type { RefObject } from \"react\";\nimport { useEffect, useLayoutEffect, useRef, useState } from \"react\";\n\nexport function useChartWidth(): [RefObject<HTMLDivElement>, number] {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number>(0);\n\n  const handleResize = () =>\n    containerRef.current && setWidth(containerRef.current.clientWidth);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return [containerRef, width];\n}\n","import byteSize from \"byte-size\";\nimport { fromUnixTime, sub } from \"date-fns\";\nimport { formatInTimeZone } from \"date-fns-tz\";\nimport { timeIntervalsMapping } from \"../consts\";\nimport type { DurationOptions } from \"../types\";\n\nexport function formatBytes(bytes: number): string {\n  return byteSize(bytes, { units: \"iec\" }).toString();\n}\n\nexport const shouldShowDate = (timeDuration: DurationOptions): boolean => {\n  return timeIntervalsMapping[timeDuration].showDate;\n};\n\nexport const dateToChartValue = (\n  timestamp: number,\n  { showDate }: { showDate: boolean } = { showDate: false }\n): string => {\n  const date = fromUnixTime(timestamp / 1000);\n  return formatInTimeZone(date, \"utc\", showDate ? \"HH:mm'\\n'MMM dd\" : \"HH:mm\");\n};\n\nexport function timestampsToTicks(\n  timestamps: string[],\n  duration: DurationOptions\n): number[] {\n  const allTimestamps = [...timestamps];\n  allTimestamps.sort();\n  const mostRecentTs =\n    parseInt(allTimestamps[allTimestamps.length - 1]) || Date.now();\n  return new Array(\n    Math.max(timeIntervalsMapping[duration].ticks, allTimestamps.length)\n  )\n    .fill(mostRecentTs)\n    .map((d: number, index) =>\n      sub(new Date(d), {\n        seconds: timeIntervalsMapping[duration].interval * index,\n      }).getTime()\n    );\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartArea,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartThreshold,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_black_500,\n  chart_color_blue_300,\n} from \"@patternfly/react-tokens\";\nimport type { ReactElement, VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { DurationOptions, TimeSeriesMetrics } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport { dateToChartValue, shouldShowDate, timestampsToTicks } from \"./utils\";\n\ntype ChartData = {\n  areaColor: string;\n  softLimitColor: string;\n  area: BrokerChartData[];\n  softLimit: BrokerChartData[];\n};\n\ntype BrokerChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol?: {\n    fill?: string;\n    type?: string;\n  };\n};\n\ntype ChartLinearWithOptionalLimitProps = {\n  metrics: TimeSeriesMetrics;\n  duration: DurationOptions;\n  chartName: string;\n  xLabel?: string;\n  yLabel?: string;\n  usageLimit?: number;\n  formatValue?: (d: number) => string;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\n\nexport const ChartLinearWithOptionalLimit: VoidFunctionComponent<\n  ChartLinearWithOptionalLimitProps\n> = ({\n  metrics,\n  duration,\n  chartName,\n  xLabel,\n  yLabel,\n  usageLimit,\n  formatValue = (d) => `${d}`,\n  isLoading,\n  emptyState,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getChartData(\n    metrics,\n    duration,\n    chartName,\n    t(\"metrics:limit\"),\n    usageLimit\n  );\n\n  const hasMetrics = Object.keys(metrics).length > 0;\n  const showDate = shouldShowDate(duration);\n\n  switch (true) {\n    case isLoading:\n      return <ChartSkeletonLoader />;\n    case !hasMetrics:\n      return emptyState;\n    default: {\n      const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n        `${datum.name}: ${formatValue(datum.y)}`;\n      return (\n        <div ref={containerRef}>\n          <Chart\n            ariaTitle={chartName}\n            containerComponent={\n              <ChartVoronoiContainer labels={labels} constrainToVisibleArea />\n            }\n            legendPosition=\"bottom-left\"\n            legendComponent={\n              <ChartLegend\n                orientation={\"horizontal\"}\n                data={legendData}\n                itemsPerRow={itemsPerRow}\n              />\n            }\n            height={chartHeight}\n            padding={chartPadding}\n            themeColor={ChartThemeColor.multiUnordered}\n            width={width}\n            legendAllowWrap={true}\n          >\n            <ChartAxis\n              label={\"\\n\" + (xLabel || t(\"metrics:axis-label-time\") || \"\")}\n              tickValues={tickValues}\n              tickFormat={(d: number) =>\n                dateToChartValue(d, {\n                  showDate,\n                })\n              }\n            />\n            <ChartAxis\n              label={\"\\n\\n\\n\\n\\n\" + (yLabel || chartName)}\n              dependentAxis\n              tickFormat={formatValue}\n            />\n            <ChartGroup>\n              {chartData.map((value, index) => (\n                <ChartArea\n                  key={`chart-area-${index}`}\n                  data={value.area}\n                  style={{\n                    data: {\n                      // TODO: check if this is needed\n                      // stroke: value.color,\n                    },\n                  }}\n                />\n              ))}\n            </ChartGroup>\n            <ChartThreshold\n              key={`chart-softlimit`}\n              data={chartData[0].softLimit}\n              style={{\n                data: {\n                  stroke: chartData[0].softLimitColor,\n                },\n              }}\n            />\n          </Chart>\n        </div>\n      );\n    }\n  }\n};\n\nfunction getChartData(\n  metrics: TimeSeriesMetrics,\n  duration: number,\n  lineLabel: string,\n  limitLabel: string,\n  usageLimit?: number\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData = [\n    usageLimit\n      ? {\n          name: limitLabel,\n          symbol: { fill: chart_color_black_500.value, type: \"threshold\" },\n        }\n      : undefined,\n    { name: lineLabel, symbol: { fill: chart_color_blue_300.value } },\n  ].filter((d) => !!d) as Array<LegendData>;\n\n  const areaColor = chart_color_blue_300.value;\n  const softLimitColor = chart_color_black_500.value;\n  const chartData: Array<ChartData> = [];\n  const area: Array<BrokerChartData> = [];\n  const softLimit: Array<BrokerChartData> = [];\n\n  Object.entries(metrics).map(([timestamp, bytes]) => {\n    area.push({ name: lineLabel, x: parseInt(timestamp, 10), y: bytes });\n  });\n  chartData.push({ areaColor, softLimitColor, area, softLimit });\n\n  const tickValues = timestampsToTicks(Object.keys(metrics), duration);\n\n  if (usageLimit) {\n    tickValues.forEach((timestamp) =>\n      softLimit.push({\n        name: limitLabel,\n        x: timestamp,\n        y: usageLimit,\n      })\n    );\n  }\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartArea,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_cyan_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { PartitionBytesMetric } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\nconst colors = [chart_color_cyan_300.value, chart_color_blue_300.value];\n\ntype ChartData = {\n  color: string;\n  area: PartitionChartData[];\n};\n\ntype PartitionChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n};\n\nexport type ChartLogSizePerPartitionProps = {\n  partitions: PartitionBytesMetric;\n  topic: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\nexport const ChartLogSizePerPartition: FunctionComponent<\n  ChartLogSizePerPartitionProps\n> = ({ partitions, topic, duration, isLoading, emptyState }) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getChartData(\n    partitions,\n    topic,\n    duration\n  );\n\n  const hasMetrics = Object.keys(partitions).length > 0;\n\n  const showDate = shouldShowDate(duration);\n\n  return (\n    <div ref={containerRef}>\n      {(() => {\n        switch (true) {\n          case isLoading:\n            return <ChartSkeletonLoader />;\n          case !hasMetrics:\n            return emptyState;\n          default: {\n            const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n              `${datum.name}: ${formatBytes(datum.y)}`;\n\n            return (\n              <Chart\n                ariaTitle={t(\"metrics:log_size_per_partition\")}\n                containerComponent={\n                  <ChartVoronoiContainer\n                    labels={labels}\n                    constrainToVisibleArea\n                  />\n                }\n                legendPosition=\"bottom-left\"\n                legendComponent={\n                  <ChartLegend data={legendData} itemsPerRow={itemsPerRow} />\n                }\n                height={chartHeight}\n                padding={chartPadding}\n                themeColor={ChartThemeColor.multiOrdered}\n                width={width}\n                legendAllowWrap={true}\n              >\n                <ChartAxis\n                  label={\"\\n\" + t(\"metrics:axis-label-time\")}\n                  tickValues={tickValues}\n                  tickFormat={(d: number) =>\n                    dateToChartValue(d, {\n                      showDate,\n                    })\n                  }\n                />\n                <ChartAxis\n                  label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n                  dependentAxis\n                  tickFormat={formatBytes}\n                />\n                <ChartGroup>\n                  {chartData.map((value, index) => (\n                    <ChartArea key={`chart-area-${index}`} data={value.area} />\n                  ))}\n                </ChartGroup>\n              </Chart>\n            );\n          }\n        }\n      })()}\n    </div>\n  );\n};\n\nexport function getChartData(\n  partitions: PartitionBytesMetric,\n  topic: string | undefined,\n  duration: number\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n  Object.entries(partitions).map(([partition, dataMap], index) => {\n    const name = topic ? `${topic}: ${partition}` : partition;\n    const color = colors[index];\n    legendData.push({\n      name,\n    });\n    const area: Array<PartitionChartData> = [];\n\n    Object.entries(dataMap).map(([timestamp, value]) => {\n      area.push({ name, x: parseInt(timestamp, 10), y: value });\n    });\n    chartData.push({ color, area });\n  });\n\n  const allTimestamps = Array.from(\n    new Set(Object.values(partitions).flatMap((m) => Object.keys(m)))\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\ntype ChartPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ChartPopover: VoidFunctionComponent<ChartPopoverProps> = ({\n  title,\n  description,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Popover\n      aria-label={title}\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon\n        aria-label={t(\"metrics:chart-popover-icon-screenreader-text\", {\n          title,\n        })}\n      />\n    </Popover>\n  );\n};\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartLine,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_green_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding, timeIntervalsMapping } from \"../consts\";\nimport type { TimeSeriesMetrics } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\ntype ChartData = {\n  color: string;\n  line: TopicChartData[];\n};\n\ntype TopicChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol: {\n    fill: string;\n    type?: string;\n  };\n};\n\ntype ChartTotalBytesProps = {\n  incomingTopicsData: TimeSeriesMetrics;\n  outgoingTopicsData: TimeSeriesMetrics;\n  selectedTopic: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\nexport const ChartTotalBytes: FunctionComponent<ChartTotalBytesProps> = ({\n  incomingTopicsData,\n  outgoingTopicsData,\n  selectedTopic,\n  duration,\n  isLoading,\n  emptyState,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getBytesChartData(\n    incomingTopicsData,\n    outgoingTopicsData,\n    duration,\n    selectedTopic\n      ? t(\"metrics:incoming_bytes\", {\n          topic: selectedTopic,\n        })\n      : t(\"metrics:incoming_bytes_all_topics\"),\n    selectedTopic\n      ? t(\"metrics:outgoing_bytes\", {\n          topic: selectedTopic,\n        })\n      : t(\"metrics:outgoing_bytes_all_topics\")\n  );\n\n  const hasMetrics =\n    Object.keys(incomingTopicsData).length > 0 ||\n    Object.keys(outgoingTopicsData).length > 0;\n\n  const showDate = shouldShowDate(duration);\n\n  switch (true) {\n    case isLoading:\n      return <ChartSkeletonLoader />;\n    case !hasMetrics:\n      return emptyState;\n    default: {\n      const labels: ChartVoronoiContainerProps[\"labels\"] =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n        ({ datum }) => `${datum.name}: ${formatBytes(datum.y)}`;\n      return (\n        <div ref={containerRef}>\n          <Chart\n            ariaTitle={t(\"metrics:total_bytes\")}\n            containerComponent={\n              <ChartVoronoiContainer labels={labels} constrainToVisibleArea />\n            }\n            legendAllowWrap={true}\n            legendPosition=\"bottom-left\"\n            legendComponent={\n              <ChartLegend data={legendData} itemsPerRow={itemsPerRow} />\n            }\n            height={chartHeight}\n            padding={chartPadding}\n            themeColor={ChartThemeColor.multiUnordered}\n            width={width}\n          >\n            <ChartAxis\n              label={\"\\n\" + t(\"metrics:axis-label-time\")}\n              tickValues={tickValues}\n              tickCount={timeIntervalsMapping[duration].ticks}\n              tickFormat={(d: number) =>\n                dateToChartValue(d, {\n                  showDate,\n                })\n              }\n            />\n            <ChartAxis\n              label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n              dependentAxis\n              tickFormat={formatBytes}\n            />\n            <ChartGroup>\n              {chartData.map((value, index) => (\n                <ChartLine\n                  key={`chart-line-${index}`}\n                  data={value.line}\n                  style={{\n                    data: {\n                      stroke: value.color,\n                    },\n                  }}\n                />\n              ))}\n            </ChartGroup>\n          </Chart>\n        </div>\n      );\n    }\n  }\n};\n\nexport function getBytesChartData(\n  incomingTopic: TimeSeriesMetrics,\n  outgoingTopic: TimeSeriesMetrics,\n  duration: number,\n  incomingTopicName: string,\n  outgoingTopicName: string\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n\n  const incomingLine = metricsToLine(incomingTopic, incomingTopicName);\n  if (incomingLine.length > 0) {\n    const color = chart_color_blue_300.value;\n    chartData.push({ color, line: incomingLine });\n    legendData.push({\n      name: incomingTopicName,\n      symbol: {\n        fill: color,\n      },\n    });\n  }\n\n  const outgoingLine = metricsToLine(outgoingTopic, outgoingTopicName);\n  if (outgoingLine.length > 0) {\n    const color = chart_color_green_300.value;\n    chartData.push({ color, line: outgoingLine });\n    legendData.push({\n      name: outgoingTopicName,\n      symbol: {\n        fill: color,\n      },\n    });\n  }\n  const allTimestamps = Array.from(\n    new Set([...Object.keys(incomingTopic), ...Object.keys(outgoingTopic)])\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n\nexport function metricsToLine(\n  metrics: TimeSeriesMetrics,\n  name: string\n): Array<TopicChartData> {\n  const line: Array<TopicChartData> = [];\n\n  Object.entries(metrics).map(([timestamp, bytes]) => {\n    line.push({ name, x: parseInt(timestamp, 10), y: bytes });\n  });\n  return line;\n}\n","import {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateNoMetricsData: FunctionComponent = () => {\n  const { t } = useTranslation([\"metrics\"]);\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon\n        icon={ExclamationTriangleIcon}\n        color=\"var(--pf-global--warning-color--100)\"\n      />\n      <Title headingLevel=\"h3\" size=\"md\">\n        {t(\"metric_not_available\")}\n      </Title>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateNoMetricsDataForSelection: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_metrics_data_title\")}\n      </Title>\n      <EmptyStateBody>\n        {t(\"metrics:empty_state_no_metrics_data_body\")}\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { WrenchIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\ntype EmptyStateNoTopicsProps = {\n  onCreateTopic?: () => void;\n};\nexport const EmptyStateNoTopics: FunctionComponent<EmptyStateNoTopicsProps> = ({\n  onCreateTopic,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={WrenchIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_topics_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"metrics:empty_state_no_topics_body\")}</EmptyStateBody>\n      {onCreateTopic && (\n        <Button\n          ouiaId=\"button-create\"\n          variant=\"primary\"\n          onClick={onCreateTopic}\n        >\n          {t(\"metrics:empty_state_no_topics_create_topic\")}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const EmptyStateNoTopicSelected: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={FilterIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_filter_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"metrics\"}\n          i18nKey={\"empty_state_no_filter_body\"}\n          components={{ bold: <strong /> }}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  ToolbarItem,\n  Select,\n  SelectVariant,\n  SelectGroup,\n  SelectOption,\n} from \"@patternfly/react-core\";\nimport { DurationOptions } from \"../types\";\n\nexport const DurationOptionsMap = {\n  [DurationOptions.Last5minutes]: \"Last 5 minutes\",\n  [DurationOptions.Last15minutes]: \"Last 15 minutes\",\n  [DurationOptions.Last30minutes]: \"Last 30 minutes\",\n  [DurationOptions.Last1hour]: \"Last 1 hour\",\n  [DurationOptions.Last3hours]: \"Last 3 hours\",\n  [DurationOptions.Last6hours]: \"Last 6 hours\",\n  [DurationOptions.Last12hours]: \"Last 12 hours\",\n  [DurationOptions.Last24hours]: \"Last 24 hours\",\n  [DurationOptions.Last2days]: \"Last 2 days\",\n  [DurationOptions.Last7days]: \"Last 7 days\",\n} as const;\n\ntype FilterByTimeProps = {\n  duration: DurationOptions;\n  onDurationChange: (value: DurationOptions) => void;\n  keyText: string;\n  ariaLabel: string;\n  disableToolbar: boolean;\n};\n\nexport const FilterByTime: VoidFunctionComponent<FilterByTimeProps> = ({\n  duration,\n  keyText,\n  ariaLabel,\n  disableToolbar,\n  onDurationChange,\n}) => {\n  const [isTimeSelectOpen, setIsTimeSelectOpen] = useState<boolean>(false);\n\n  const onTimeToggle = (isTimeSelectOpen: boolean) => {\n    setIsTimeSelectOpen(isTimeSelectOpen);\n  };\n\n  const onTimeSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    const mapping = Object.entries(DurationOptionsMap).find(\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ([_, value]) => value === selection\n    );\n    if (mapping) {\n      onDurationChange(parseInt(mapping[0], 10) as DurationOptions);\n    }\n    setIsTimeSelectOpen(false);\n  };\n\n  const timeOptions = (keyText: string) => [\n    <SelectGroup label=\"Relative time ranges\" key={`${keyText}-group`}>\n      {Object.values(DurationOptionsMap).map((label, idx) => (\n        <SelectOption key={`${keyText}-${idx}`} value={label} />\n      ))}\n    </SelectGroup>,\n  ];\n  const ariaId = `filter-by-time-${Date.now()}`;\n  return (\n    <ToolbarItem>\n      <label hidden id={ariaId}>\n        {ariaLabel}\n      </label>\n      <Select\n        variant={SelectVariant.single}\n        aria-labelledby={ariaId}\n        onToggle={onTimeToggle}\n        onSelect={onTimeSelect}\n        selections={DurationOptionsMap[duration]}\n        isOpen={isTimeSelectOpen}\n        isDisabled={disableToolbar}\n      >\n        {timeOptions(keyText)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport \"./FilterByTopic.css\";\n\nconst widths = {\n  default: \"150px\",\n  sm: \"150px\",\n  md: \"150px\",\n  lg: \"200px\",\n  xl: \"200px\",\n  \"2xl\": \"200px\",\n};\n\ntype FilterByTopicProps = {\n  selectedTopic: string | undefined;\n  topicList: string[];\n  disableToolbar: boolean;\n  ariaLabel: string;\n  onSetSelectedTopic: (value: string | undefined) => void;\n};\n\nexport const FilterByTopic: VoidFunctionComponent<FilterByTopicProps> = ({\n  selectedTopic,\n  topicList = [],\n  disableToolbar,\n  ariaLabel,\n  onSetSelectedTopic,\n}) => {\n  const { t } = useTranslation();\n  const [isTopicSelectOpen, setIsTopicSelectOpen] = useState<boolean>(false);\n  const [selectKey, setSelectKey] = useState(Math.random());\n\n  useEffect(() => setSelectKey(Math.random()), [topicList]);\n\n  const allTopicsLabel = t(\"metrics:all_topics\");\n\n  const onTopicToggle = (isTopicSelectOpen: boolean) => {\n    setIsTopicSelectOpen(isTopicSelectOpen);\n  };\n\n  const onTopicSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    selection !== allTopicsLabel\n      ? onSetSelectedTopic(selection as string)\n      : onSetSelectedTopic(undefined);\n    setIsTopicSelectOpen(false);\n  };\n\n  const onTopicFilter = (_: unknown, textInput: string) => {\n    const filteredTopics =\n      topicList.filter((topic) => topic.indexOf(textInput) != -1) || [];\n    return topicOptions(filteredTopics);\n  };\n\n  const topicOptions = (topicList: string[]) => [\n    <SelectOption key={\"topic-filter-0\"} value={allTopicsLabel} />,\n    <SelectGroup label=\"Filter by topic\" key=\"topic-filter-group\">\n      {topicList.map((topic, index) => (\n        <SelectOption\n          key={`topic-filter-${index + 1}`}\n          value={topic}\n          title={topic}\n        />\n      ))}\n    </SelectGroup>,\n  ];\n\n  const isDisabled = disableToolbar || topicList.length === 0;\n  const ariaId = `filter-by-topic-${Date.now()}`;\n\n  return (\n    <ToolbarItem widths={widths}>\n      <label hidden id={ariaId}>\n        {ariaLabel}\n      </label>\n      <Select\n        key={selectKey}\n        variant={SelectVariant.single}\n        onToggle={onTopicToggle}\n        onSelect={onTopicSelect}\n        selections={selectedTopic || allTopicsLabel}\n        isOpen={isTopicSelectOpen}\n        placeholderText={\n          <>\n            <FilterIcon /> {allTopicsLabel}\n          </>\n        }\n        aria-labelledby={ariaId}\n        onFilter={onTopicFilter}\n        isGrouped\n        hasInlineFilter\n        isDisabled={isDisabled}\n        position=\"left\"\n        className={\"appserv-metrics-filterbytopic\"}\n      >\n        {topicOptions(topicList)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import { ToolbarItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate, RefreshButton } from \"@rhoas/app-services-ui-components\";\n\nexport type ToolbarRefreshProps = {\n  isRefreshing: boolean;\n  lastUpdated: Date | undefined;\n  ariaLabel: string;\n  onRefresh: () => void;\n};\n\nexport const ToolbarRefresh: VoidFunctionComponent<ToolbarRefreshProps> = ({\n  isRefreshing,\n  lastUpdated = new Date(),\n  ariaLabel,\n  onRefresh,\n}) => {\n  const { t } = useTranslation([\"metrics\"]);\n\n  return (\n    <>\n      <ToolbarItem>\n        <RefreshButton\n          ariaLabel={ariaLabel}\n          onClick={onRefresh}\n          isRefreshing={isRefreshing}\n        />\n      </ToolbarItem>\n      <ToolbarItem\n        alignment={{ default: \"alignRight\" }}\n        style={{ color: \"var(--pf-global--Color--200)\" }}\n      >\n        <div className=\"pf-u-font-size-xs\">\n          {isRefreshing ? (\n            t(\"metrics:refreshing\")\n          ) : (\n            <>\n              {t(\"metrics:last-refresh\")}\n              <br />\n              <FormatDate date={lastUpdated} format=\"distanceToNow\" />\n              {t(\"metrics:last-refresh-distance\")}\n            </>\n          )}\n        </div>\n      </ToolbarItem>\n    </>\n  );\n};\n","import {\n  CardHeader,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { DurationOptions } from \"../types\";\nimport { FilterByTime } from \"./FilterByTime\";\nimport { FilterByTopic } from \"./FilterByTopic\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarRefresh } from \"./ToolbarRefresh\";\n\ntype ToolbarTopicsMetricsProps = {\n  title: string;\n  selectedTopic: string | undefined;\n  topicList: string[];\n  duration: DurationOptions;\n  isDisabled: boolean;\n  onSetTimeDuration: (value: DurationOptions) => void;\n  onSetSelectedTopic: (value: string | undefined) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\nexport const ToolbarTopicsMetrics: FunctionComponent<\n  ToolbarTopicsMetricsProps\n> = ({\n  title,\n  selectedTopic,\n  topicList,\n  duration,\n  isDisabled,\n  isRefreshing,\n  lastUpdated,\n  onSetTimeDuration,\n  onRefresh,\n  onSetSelectedTopic,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <CardHeader>\n        <CardTitle component=\"h2\">{title}</CardTitle>\n      </CardHeader>\n      <Divider />\n      <Toolbar>\n        <ToolbarContent>\n          <FilterByTopic\n            ariaLabel={t(\"metrics:topics_filter_by_topic\")}\n            selectedTopic={selectedTopic}\n            onSetSelectedTopic={onSetSelectedTopic}\n            topicList={topicList}\n            disableToolbar={isDisabled}\n          />\n          <FilterByTime\n            ariaLabel={t(\"metrics:topics_filter_by_time\")}\n            duration={duration}\n            onDurationChange={onSetTimeDuration}\n            disableToolbar={isDisabled}\n            keyText={\"topic-metrics-time-filter\"}\n          />\n          <ToolbarRefresh\n            isRefreshing={isRefreshing}\n            lastUpdated={lastUpdated}\n            onRefresh={onRefresh}\n            ariaLabel={t(\"metrics:topics_refresh\")}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <Divider />\n    </>\n  );\n};\n","import { Card, CardBody, CardTitle, Divider } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type {\n  DurationOptions,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { CardBodyLoading } from \"./CardBodyLoading\";\nimport { ChartLinearWithOptionalLimit } from \"./ChartLinearWithOptionalLimit\";\nimport { ChartLogSizePerPartition } from \"./ChartLogSizePerPartition\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { ChartTotalBytes } from \"./ChartTotalBytes\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\nimport { EmptyStateNoMetricsDataForSelection } from \"./EmptyStateNoMetricsDataForSelection\";\nimport { EmptyStateNoTopics } from \"./EmptyStateNoTopics\";\nimport { EmptyStateNoTopicSelected } from \"./EmptyStateNoTopicSelected\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarTopicsMetrics } from \"./ToolbarTopicsMetrics\";\n\ntype CardTopicsMetricsProps = {\n  topics: string[];\n  incomingTopicsData: TimeSeriesMetrics;\n  outgoingTopicsData: TimeSeriesMetrics;\n  partitions: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n  duration: DurationOptions;\n  backendUnavailable: boolean;\n  isInitialLoading: boolean;\n  isLoading: boolean;\n  isJustCreated: boolean;\n  selectedTopic: string | undefined;\n  onCreateTopic: () => void;\n  onSelectedTopic: (topic: string | undefined) => void;\n  onDurationChange: (duration: DurationOptions) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\n\nexport const CardTopicsMetrics: FunctionComponent<CardTopicsMetricsProps> = ({\n  topics,\n  incomingTopicsData,\n  outgoingTopicsData,\n  incomingMessageRate,\n  selectedTopic,\n  duration,\n  partitions,\n  backendUnavailable,\n  isInitialLoading,\n  isLoading,\n  isRefreshing,\n  isJustCreated,\n  lastUpdated,\n  onCreateTopic,\n  onRefresh,\n  onSelectedTopic,\n  onDurationChange,\n}) => {\n  const { t } = useTranslation();\n  const noTopics = topics.length === 0;\n  const selectedTopicNotInList =\n    selectedTopic !== undefined &&\n    topics.find((t) => t === selectedTopic) === undefined;\n  const chartEmptyState = selectedTopicNotInList ? (\n    <EmptyStateNoMetricsDataForSelection />\n  ) : (\n    <EmptyStateNoMetricsData />\n  );\n  return (\n    <Card data-testid={\"metrics-topics\"}>\n      <ToolbarTopicsMetrics\n        title={t(\"metrics:topic_metrics\")}\n        duration={duration}\n        onSetTimeDuration={onDurationChange}\n        isDisabled={\n          backendUnavailable || isJustCreated || noTopics || isLoading\n        }\n        isRefreshing={isRefreshing}\n        selectedTopic={selectedTopic}\n        onSetSelectedTopic={onSelectedTopic}\n        onRefresh={onRefresh}\n        topicList={topics}\n        lastUpdated={lastUpdated}\n      />\n      {(() => {\n        switch (true) {\n          case isInitialLoading:\n            return <CardBodyLoading />;\n\n          case backendUnavailable:\n            return (\n              <CardBody>\n                <EmptyStateNoMetricsData />\n              </CardBody>\n            );\n\n          case isJustCreated && !noTopics:\n            return (\n              <CardBody>\n                <EmptyStateNoTopics />\n              </CardBody>\n            );\n\n          case isJustCreated && noTopics:\n            return (\n              <CardBody>\n                <EmptyStateNoTopics onCreateTopic={onCreateTopic} />\n              </CardBody>\n            );\n\n          case selectedTopic !== undefined:\n            return (\n              <>\n                <TotalBytesTitle />\n                <CardBody>\n                  <ChartTotalBytes\n                    incomingTopicsData={incomingTopicsData}\n                    outgoingTopicsData={outgoingTopicsData}\n                    selectedTopic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <IncomingMessageRate />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"metrics:topic_incoming_message_rate\")}\n                    yLabel={t(\"metrics:topic_incoming_message_rate_y_axis\")}\n                    metrics={incomingMessageRate}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <PartitionSizeTitle />\n                <CardBody>\n                  <ChartLogSizePerPartition\n                    partitions={partitions}\n                    topic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n              </>\n            );\n\n          default:\n            return (\n              <>\n                <TotalBytesTitle />\n                <CardBody>\n                  <ChartTotalBytes\n                    incomingTopicsData={incomingTopicsData}\n                    outgoingTopicsData={outgoingTopicsData}\n                    selectedTopic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <IncomingMessageRate />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"metrics:topic_incoming_message_rate\")}\n                    yLabel={t(\"metrics:topic_incoming_message_rate_y_axis\")}\n                    metrics={incomingMessageRate}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <PartitionSizeTitle />\n                <CardBody>\n                  <EmptyStateNoTopicSelected />\n                </CardBody>\n              </>\n            );\n        }\n      })()}\n    </Card>\n  );\n};\n\nconst TotalBytesTitle: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:total_bytes\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:total_bytes_popover_header\")}\n        description={t(\"metrics:topic_metrics_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n\nconst PartitionSizeTitle: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:topic_partition_size\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:topic_partition_size_popover_header\")}\n        description={t(\"metrics:topic_partition_size_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n\nconst IncomingMessageRate: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:topic_incoming_message_rate\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:topic_incoming_message_rate_popover_header\")}\n        description={t(\"metrics:topic_incoming_message_rate_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport {\n  CardHeader,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport { FilterByTime } from \"./FilterByTime\";\nimport type { DurationOptions } from \"../types\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarRefresh } from \"./ToolbarRefresh\";\n\ntype ToolbarKafkaInstanceMetricProps = {\n  title: string;\n  isDisabled: boolean;\n  duration: DurationOptions;\n  onSetTimeDuration: (value: DurationOptions) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\nexport const ToolbarKafkaInstanceMetric: FunctionComponent<\n  ToolbarKafkaInstanceMetricProps\n> = ({\n  title,\n  isDisabled,\n  isRefreshing,\n  lastUpdated,\n  duration,\n  onSetTimeDuration,\n  onRefresh,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <CardHeader>\n        <CardTitle component=\"h2\">{title}</CardTitle>\n      </CardHeader>\n      <Divider />\n      <Toolbar>\n        <ToolbarContent>\n          <FilterByTime\n            ariaLabel={t(\"metrics:kafka_instance_filter_by_time\")}\n            duration={duration}\n            onDurationChange={onSetTimeDuration}\n            keyText={\"kafka-metrics-time-filter\"}\n            disableToolbar={isDisabled}\n          />\n          <ToolbarRefresh\n            isRefreshing={isRefreshing}\n            lastUpdated={lastUpdated}\n            onRefresh={onRefresh}\n            ariaLabel={t(\"metrics:kafka_instance_refresh\")}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <Divider />\n    </>\n  );\n};\n","import { Card, CardBody, CardTitle, Divider } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { DurationOptions, TimeSeriesMetrics } from \"../types\";\nimport { CardBodyLoading } from \"./CardBodyLoading\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { ChartLinearWithOptionalLimit } from \"./ChartLinearWithOptionalLimit\";\nimport { EmptyStateMetricsUnavailable } from \"./EmptyStateMetricsUnavailable\";\nimport { ToolbarKafkaInstanceMetric } from \"./ToolbarKafkaInstanceMetric\";\nimport { formatBytes } from \"./utils\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\n\nexport type CardKafkaInstanceMetricsLimits = {\n  diskSpaceLimit: number;\n  connectionsLimit: number;\n  connectionRateLimit: number;\n};\n\nexport type CardKafkaInstanceMetricsProps = {\n  usedDiskMetrics: TimeSeriesMetrics;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n  duration: DurationOptions;\n  lastUpdated: Date | undefined;\n  backendUnavailable: boolean;\n  isInitialLoading: boolean;\n  isLoading: boolean;\n  isJustCreated: boolean;\n  onDurationChange: (duration: DurationOptions) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\"> &\n  CardKafkaInstanceMetricsLimits;\n\ntype ChartTitleProps = {\n  title: string;\n  helperText: string;\n};\n\nexport const CardKafkaInstanceMetrics: FunctionComponent<\n  CardKafkaInstanceMetricsProps\n> = ({\n  usedDiskMetrics,\n  clientConnectionsMetrics,\n  connectionAttemptRateMetrics,\n  duration,\n  lastUpdated,\n  backendUnavailable,\n  isInitialLoading,\n  isLoading,\n  isRefreshing,\n  isJustCreated,\n  diskSpaceLimit,\n  connectionsLimit,\n  connectionRateLimit,\n  onRefresh,\n  onDurationChange,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  return (\n    <Card data-testid={\"metrics-kafka-instance\"}>\n      <ToolbarKafkaInstanceMetric\n        title={t(\"kafka_instance_metrics\")}\n        duration={duration}\n        lastUpdated={lastUpdated}\n        onSetTimeDuration={onDurationChange}\n        isDisabled={backendUnavailable || isJustCreated || isLoading}\n        isRefreshing={isRefreshing}\n        onRefresh={onRefresh}\n      />\n      {(() => {\n        switch (true) {\n          case isInitialLoading:\n            return <CardBodyLoading />;\n\n          case backendUnavailable:\n            return (\n              <CardBody>\n                <EmptyStateNoMetricsData />\n              </CardBody>\n            );\n\n          case isJustCreated:\n            return (\n              <CardBody>\n                <EmptyStateMetricsUnavailable />\n              </CardBody>\n            );\n\n          default:\n            return (\n              <>\n                <ChartTitle\n                  title={t(\"used_disk_space\")}\n                  helperText={t(\"used_disk_space_help_text\")}\n                />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"used_disk_space\")}\n                    yLabel={t(\"axis-label-bytes\")}\n                    metrics={usedDiskMetrics}\n                    duration={duration}\n                    formatValue={formatBytes}\n                    usageLimit={diskSpaceLimit}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                  />\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"client_connections\")}\n                  helperText={t(\"client_connections_helper_text\")}\n                />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"client_connections\")}\n                    yLabel={t(\"client_connections_y_axis\")}\n                    metrics={clientConnectionsMetrics}\n                    duration={duration}\n                    usageLimit={connectionsLimit}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                  />\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"connection_attempt_rate\")}\n                  helperText={t(\"connection_attempt_rate_help_text\")}\n                />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"connection_attempt_rate\")}\n                    yLabel={t(\"connection_attempt_rate_yaxis\")}\n                    metrics={connectionAttemptRateMetrics}\n                    duration={duration}\n                    usageLimit={connectionRateLimit}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                  />\n                </CardBody>\n              </>\n            );\n        }\n      })()}\n    </Card>\n  );\n};\n\nexport const ChartTitle: FunctionComponent<ChartTitleProps> = ({\n  title,\n  helperText,\n}) => {\n  return (\n    <CardTitle component=\"h3\">\n      {title} <ChartPopover title={title} description={helperText} />\n    </CardTitle>\n  );\n};\n","import {\n  Bullseye,\n  Card,\n  CardBody,\n  CardTitle,\n  Skeleton,\n  Title,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\n\ntype CardKpiProps = {\n  metric: string | number | undefined;\n  name: string;\n  popover: string;\n  isLoading: boolean;\n};\n\nexport const CardKpi: VoidFunctionComponent<CardKpiProps> = ({\n  metric,\n  name,\n  popover,\n  isLoading,\n}) => {\n  return (\n    <Card isFullHeight data-testid={name}>\n      <CardTitle component=\"h3\">\n        {name} <ChartPopover title={name} description={popover} />\n      </CardTitle>\n      <CardBody>\n        {!isLoading &&\n          (metric === undefined ? (\n            <Bullseye>\n              <EmptyStateNoMetricsData />\n            </Bullseye>\n          ) : (\n            <Title\n              headingLevel=\"h3\"\n              size=\"4xl\"\n              aria-valuetext={`${metric} ${name}`}\n            >\n              {metric}\n            </Title>\n          ))}\n        {isLoading && <Skeleton width=\"50px\" shape=\"square\" />}\n      </CardBody>\n    </Card>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Alert, AlertActionCloseButton } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type MetricsLagAlertProps = {\n  isClosed: boolean;\n  onClickClose: () => void;\n};\n\nexport const MetricsLagAlert: VoidFunctionComponent<MetricsLagAlertProps> = ({\n  isClosed,\n  onClickClose,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  if (!isClosed) {\n    return (\n      <Alert\n        isInline\n        variant=\"info\"\n        title={t(\"metrics_lag_title\")}\n        actionClose={<AlertActionCloseButton onClose={onClickClose} />}\n      >\n        <p>{t(\"metrics_lag_description\")}</p>\n      </Alert>\n    );\n  } else {\n    return <> </>;\n  }\n};\n","import {\n  Alert,\n  AlertVariant,\n  Bullseye,\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Skeleton,\n  Text,\n  TextContent,\n  Title,\n} from \"@patternfly/react-core\";\nimport {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\n\ntype PartitionCardProps = {\n  metric: number | undefined;\n  isLoading: boolean;\n  topicPartitionsLimit: number | undefined;\n};\n\nexport const PartitionCard: VoidFunctionComponent<PartitionCardProps> = ({\n  metric,\n  isLoading,\n  topicPartitionsLimit = 0,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Card\n      isFullHeight\n      data-testid={t(\"metrics:metric_kpi_topicPartitions_name\")}\n    >\n      <CardTitle component=\"h3\">\n        {t(\"metrics:metric_kpi_topicPartitions_name\")}{\" \"}\n        <ChartPopover\n          title={t(\"metrics:metric_kpi_topicPartitions_name\")}\n          description={t(\"metrics:metric_kpi_topicPartitions_description\")}\n        />\n      </CardTitle>\n      <CardBody>\n        {!isLoading &&\n          (metric === undefined ? (\n            <Bullseye>\n              <EmptyStateNoMetricsData />\n            </Bullseye>\n          ) : (\n            <>\n              <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                aria-valuetext={`${metric} ${t(\n                  \"metrics:metric_kpi_topicPartitions_name\"\n                )}`}\n              >\n                {metric}{\" \"}\n                {(() => {\n                  if (metric >= topicPartitionsLimit) {\n                    return (\n                      <ExclamationCircleIcon color=\"var(--pf-global--danger-color--100)\" />\n                    );\n                  } else if (metric >= topicPartitionsLimit * 0.95) {\n                    return (\n                      <ExclamationTriangleIcon color=\"var(--pf-global--warning-color--100)\" />\n                    );\n                  } else {\n                    return \"\";\n                  }\n                })()}\n              </Title>\n              <TextContent>\n                <Text>\n                  {t(\"metrics:partition_limit\", {\n                    topic: topicPartitionsLimit,\n                  })}\n                </Text>\n              </TextContent>\n            </>\n          ))}\n        {isLoading && <Skeleton width=\"50px\" shape=\"square\" />}\n      </CardBody>\n      {(() => {\n        if (metric && metric >= topicPartitionsLimit) {\n          return (\n            <CardFooter>\n              <Alert\n                isExpandable\n                isInline\n                variant={AlertVariant.danger}\n                title={t(\"metrics:partition_limit_reached_title\")}\n              >\n                <p>{t(\"metrics:partition_limit_reached_description_1\")}</p>\n                <p>{t(\"metrics:partition_limit_reached_description_2\")}</p>\n              </Alert>\n            </CardFooter>\n          );\n        } else if (metric && metric >= topicPartitionsLimit * 0.95) {\n          return (\n            <CardFooter>\n              <Alert\n                role={\"alert\"}\n                isExpandable\n                isInline\n                variant={AlertVariant.warning}\n                title={t(\"metrics:partition_limit_approaching_title\")}\n              >\n                <p>\n                  {t(\"metrics:partition_limit_approaching_description_1\", {\n                    limit: topicPartitionsLimit,\n                  })}\n                </p>\n                <p>{t(\"metrics:partition_limit_approaching_description_2\")}</p>\n              </Alert>\n            </CardFooter>\n          );\n        } else {\n          return \" \";\n        }\n      })()}\n    </Card>\n  );\n};\n","import { assign, createMachine } from \"xstate\";\nimport type {\n  GetKafkaInstanceMetricsResponse,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { DurationOptions } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#kafkaInstanceMetrics.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type KafkaInstanceMetricsMachineContext = {\n  lastUpdated: Date | undefined;\n\n  // from the UI elements\n  duration: DurationOptions;\n\n  // from the api\n  usedDiskSpaceMetrics: TimeSeriesMetrics;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n  diskSpaceLimit: number | undefined;\n  connectionsLimit: number | undefined;\n  connectionRateLimit: number | undefined;\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const KafkaInstanceMetricsMachine = createMachine(\n  {\n    predictableActionArguments: true,\n    tsTypes: {} as import(\"./KafkaInstanceMetricsMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as KafkaInstanceMetricsMachineContext,\n      events: {} as\n        | ({ type: \"fetchSuccess\" } & GetKafkaInstanceMetricsResponse)\n        | { type: \"fetchFail\" }\n        // to refresh the data\n        | { type: \"refresh\" }\n        // from the UI elements\n        | { type: \"selectTopic\"; topic: string | undefined }\n        | { type: \"selectDuration\"; duration: DurationOptions },\n    },\n    id: \"kafkaInstanceMetrics\",\n    context: {\n      lastUpdated: undefined,\n      duration: DurationOptions.Last1hour,\n      usedDiskSpaceMetrics: {},\n      clientConnectionsMetrics: {},\n      connectionAttemptRateMetrics: {},\n      diskSpaceLimit: undefined,\n      connectionsLimit: undefined,\n      connectionRateLimit: undefined,\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#kafkaInstanceMetrics.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#kafkaInstanceMetrics.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        on: {\n          refresh: {\n            target: \"refreshing\",\n          },\n          selectDuration: {\n            actions: \"setDuration\",\n            target: \"callApi\",\n          },\n        },\n      },\n      refreshing: {\n        tags: \"refreshing\",\n        entry: \"setFetchTimestamp\",\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"withResponse\",\n          },\n          fetchFail: {\n            // 👀 we silently ignore this happened and go back to the right\n            // state depending on the previous data\n            target: \"withResponse\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setFetchTimestamp: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        lastUpdated: (_context) => new Date(),\n      }),\n      setMetrics: assign((_, event) => {\n        const {\n          usedDiskSpaceMetrics,\n          clientConnectionsMetrics,\n          connectionAttemptRateMetrics,\n          diskSpaceLimit,\n          connectionsLimit,\n          connectionRateLimit,\n        } = event;\n        return {\n          usedDiskSpaceMetrics,\n          clientConnectionsMetrics,\n          connectionAttemptRateMetrics,\n          diskSpaceLimit: diskSpaceLimit * 1024 ** 3, // convert it to GiB\n          connectionsLimit,\n          connectionRateLimit,\n        };\n      }),\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n      setDuration: assign((_context, event) => ({\n        duration: event.duration,\n        usedDiskSpaceMetrics: {},\n        clientConnectionsMetrics: {},\n        connectionAttemptRateMetrics: {},\n      })),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            Object.keys(event.clientConnectionsMetrics).length > 0 ||\n            Object.keys(event.connectionAttemptRateMetrics).length > 0 ||\n            Object.keys(event.usedDiskSpaceMetrics).length > 0\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type KafkaInstanceMetricsMachineType =\n  typeof KafkaInstanceMetricsMachine;\n","import { assign, createMachine } from \"xstate\";\nimport type {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { DurationOptions } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#topicsMetrics.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type TopicsMetricsMachineContext = {\n  lastUpdated: Date | undefined;\n\n  // from the UI elements\n  selectedTopic: string | undefined;\n  duration: DurationOptions;\n\n  // from the api\n  kafkaTopics: string[];\n  metricsTopics: string[];\n  bytesOutgoing: TimeSeriesMetrics;\n  bytesIncoming: TimeSeriesMetrics;\n  bytesPerPartition: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const TopicsMetricsMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./TopicsMetricsMachine.typegen\").Typegen0,\n    predictableActionArguments: true,\n    schema: {\n      context: {} as TopicsMetricsMachineContext,\n      events: {} as  // called when a new kafka id has been specified\n        | ({ type: \"fetchSuccess\" } & GetTopicsMetricsResponse)\n        | { type: \"fetchFail\" }\n\n        // to refresh the data\n        | { type: \"refresh\" }\n\n        // from the UI elements\n        | { type: \"selectTopic\"; topic: string | undefined }\n        | { type: \"selectDuration\"; duration: DurationOptions },\n    },\n    id: \"topicsMetrics\",\n    context: {\n      lastUpdated: undefined,\n\n      // from the UI elements\n      selectedTopic: undefined,\n      duration: DurationOptions.Last1hour,\n\n      // from the api\n      kafkaTopics: [],\n      metricsTopics: [],\n      bytesOutgoing: {},\n      bytesIncoming: {},\n      bytesPerPartition: {},\n      incomingMessageRate: {},\n\n      // how many time did we try a fetch (that combines more api)\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#topicsMetrics.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#topicsMetrics.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        initial: \"idle\",\n        states: {\n          idle: {},\n          refreshing: {\n            tags: \"refreshing\",\n            entry: \"setFetchTimestamp\",\n            invoke: {\n              src: \"api\",\n            },\n            on: {\n              fetchSuccess: {\n                actions: \"setMetrics\",\n                target: \"#topicsMetrics.withResponse\",\n              },\n              fetchFail: {\n                // 👀 we silently ignore this happened\n                target: \"#topicsMetrics.withResponse\",\n              },\n            },\n          },\n        },\n        on: {\n          refresh: {\n            target: \"#topicsMetrics.withResponse.refreshing\",\n          },\n          selectTopic: {\n            actions: \"setTopic\",\n            target: \"callApi\",\n          },\n          selectDuration: {\n            actions: \"setDuration\",\n            target: \"callApi\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setFetchTimestamp: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        lastUpdated: (_context) => new Date(),\n      }),\n      setMetrics: assign((_context, event) => {\n        const {\n          kafkaTopics,\n          metricsTopics,\n          bytesPerPartition,\n          bytesIncoming,\n          bytesOutgoing,\n          incomingMessageRate,\n        } = event;\n        return {\n          kafkaTopics,\n          metricsTopics,\n          bytesPerPartition,\n          bytesIncoming,\n          bytesOutgoing,\n          incomingMessageRate,\n        };\n      }),\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n      setTopic: assign({\n        selectedTopic: (_context, event) => event.topic,\n      }),\n      setDuration: assign({\n        duration: (_, event) => event.duration,\n      }),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            Object.keys(event.bytesIncoming).length > 0 ||\n            Object.keys(event.bytesOutgoing).length > 0 ||\n            Object.keys(event.bytesPerPartition).length > 0 ||\n            Object.keys(event.incomingMessageRate).length > 0\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type TopicsMetricsMachineType = typeof TopicsMetricsMachine;\n","import { assign, createMachine } from \"xstate\";\nimport type { GetMetricsKpiResponse } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#kpis.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type MetricsKpiMachineContext = {\n  // from the api\n  topics: number | undefined;\n  topicPartitions: number | undefined;\n  consumerGroups: number | undefined;\n  topicPartitionsLimit: number | undefined;\n\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const MetricsKpiMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./MetricsKpiMachine.typegen\").Typegen0,\n    predictableActionArguments: true,\n    schema: {\n      context: {} as MetricsKpiMachineContext,\n      events: {} as\n        | { type: \"fetch\" }\n        | ({ type: \"fetchSuccess\" } & GetMetricsKpiResponse)\n        | { type: \"fetchFail\" }\n        | { type: \"refresh\" },\n    },\n    id: \"kpis\",\n    context: {\n      topics: undefined,\n      topicPartitions: undefined,\n      consumerGroups: undefined,\n      topicPartitionsLimit: undefined,\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#kpis.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#kpis.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        initial: \"idle\",\n        states: {\n          idle: {},\n          refreshing: {\n            tags: \"refreshing\",\n            invoke: {\n              src: \"api\",\n            },\n            on: {\n              fetchSuccess: {\n                actions: \"setMetrics\",\n                target: \"#kpis.withResponse\",\n              },\n              fetchFail: {\n                // 👀 we silently ignore this happened\n                target: \"#kpis.withResponse\",\n              },\n            },\n          },\n        },\n        on: {\n          refresh: {\n            target: \"#kpis.withResponse.refreshing\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setMetrics: assign((_, event) => {\n        const {\n          topics,\n          topicPartitions,\n          consumerGroups,\n          topicPartitionsLimit,\n        } = event;\n        return {\n          topics,\n          topicPartitions,\n          consumerGroups,\n          topicPartitionsLimit,\n        };\n      }),\n\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            event.topics !== undefined ||\n            event.topicPartitions !== undefined ||\n            event.consumerGroups !== undefined ||\n            event.topicPartitionsLimit !== undefined\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type MetricsKpiMachineType = typeof MetricsKpiMachine;\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { timeIntervalsMapping } from \"./consts\";\nimport type { KafkaInstanceMetricsMachineType } from \"./machines\";\nimport { KafkaInstanceMetricsMachine } from \"./machines\";\nimport type { DurationOptions, GetKafkaInstanceMetricsResponse } from \"./types\";\n\nexport const KafkaInstanceMetricsContext = createContext<{\n  service: ActorRefFrom<KafkaInstanceMetricsMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type KafkaInstanceMetricsProviderProps = {\n  getKafkaInstanceMetrics: (options: {\n    duration: DurationOptions;\n    interval: number;\n  }) => Promise<GetKafkaInstanceMetricsResponse>;\n};\nexport const KafkaInstanceMetricsProvider: FunctionComponent<\n  KafkaInstanceMetricsProviderProps\n> = ({ children, getKafkaInstanceMetrics }) => {\n  const service = useInterpret(\n    () =>\n      KafkaInstanceMetricsMachine.withConfig({\n        services: {\n          api: (context) => {\n            return (callback) => {\n              getKafkaInstanceMetrics({\n                duration: context.duration,\n                interval: timeIntervalsMapping[context.duration].interval,\n              })\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <KafkaInstanceMetricsContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </KafkaInstanceMetricsContext.Provider>\n  );\n};\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { MetricsKpiMachineType } from \"./machines\";\nimport { MetricsKpiMachine } from \"./machines\";\nimport type { GetMetricsKpiResponse } from \"./types\";\n\nexport const MetricsKpiContext = createContext<{\n  service: ActorRefFrom<MetricsKpiMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type MetricsKpiProviderProps = {\n  getMetricsKpi: () => Promise<GetMetricsKpiResponse>;\n};\nexport const MetricsKpiProvider: FunctionComponent<MetricsKpiProviderProps> = ({\n  children,\n  getMetricsKpi,\n}) => {\n  const service = useInterpret(\n    () =>\n      MetricsKpiMachine.withConfig({\n        services: {\n          api: () => {\n            return (callback) => {\n              getMetricsKpi()\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <MetricsKpiContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </MetricsKpiContext.Provider>\n  );\n};\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { timeIntervalsMapping } from \"./consts\";\nimport type { TopicsMetricsMachineType } from \"./machines\";\nimport { TopicsMetricsMachine } from \"./machines\";\nimport type { DurationOptions, GetTopicsMetricsResponse } from \"./types\";\n\nexport const TopicsMetricsContext = createContext<{\n  service: ActorRefFrom<TopicsMetricsMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type TopicsMetricsProviderProps = {\n  getTopicsMetrics: (options: {\n    duration: DurationOptions;\n    interval: number;\n    selectedTopic: string | undefined;\n  }) => Promise<GetTopicsMetricsResponse>;\n};\nexport const TopicsMetricsProvider: FunctionComponent<\n  TopicsMetricsProviderProps\n> = ({ children, getTopicsMetrics }) => {\n  const service = useInterpret(\n    () =>\n      TopicsMetricsMachine.withConfig({\n        services: {\n          api: (context) => {\n            return (callback) => {\n              getTopicsMetrics({\n                selectedTopic: context.selectedTopic,\n                duration: context.duration,\n                interval: timeIntervalsMapping[context.duration].interval,\n              })\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <TopicsMetricsContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </TopicsMetricsContext.Provider>\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport { KafkaInstanceMetricsContext } from \"./KafkaInstanceMetricsProvider\";\nimport type { KafkaInstanceMetricsMachineContext } from \"./machines\";\nimport type { DurationOptions } from \"./types\";\n\ntype SeletorReturn = KafkaInstanceMetricsMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useKafkaInstanceMetrics() {\n  const { service } = useContext(KafkaInstanceMetricsContext);\n\n  const {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    duration,\n    lastUpdated,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n  } = useSelector<typeof service, SeletorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onDurationChange = useCallback(\n    (duration: DurationOptions) =>\n      service.send({ type: \"selectDuration\", duration }),\n    [service]\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  return {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    lastUpdated,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    duration,\n    onDurationChange,\n    onRefresh,\n  };\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport type { TopicsMetricsMachineContext } from \"./machines\";\nimport { TopicsMetricsContext } from \"./TopicsMetricsProvider\";\nimport type { DurationOptions } from \"./types\";\n\ntype SelectorReturn = TopicsMetricsMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useTopicsMetrics() {\n  const { service } = useContext(TopicsMetricsContext);\n\n  const {\n    selectedTopic,\n    duration,\n    kafkaTopics,\n    metricsTopics,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n  } = useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onTopicChange = useCallback(\n    (topic: string | undefined) => service.send({ type: \"selectTopic\", topic }),\n    [service]\n  );\n\n  const onDurationChange = useCallback(\n    (duration: DurationOptions) =>\n      service.send({ type: \"selectDuration\", duration }),\n    [service]\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  const mergedTopics = useMemo((): string[] => {\n    const topics = Array.from(\n      new Set<string>([...kafkaTopics, ...metricsTopics])\n    );\n    topics.sort((a, b) => a.localeCompare(b));\n    return topics;\n  }, [kafkaTopics, metricsTopics]);\n\n  return {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    topics: mergedTopics,\n    selectedTopic,\n    duration,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    onTopicChange,\n    onDurationChange,\n    onRefresh,\n  };\n}\n","import { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport {\n  CardKafkaInstanceMetrics,\n  CardTopicsMetrics,\n  EmptyStateInitialLoading,\n  EmptyStateMetricsUnavailable,\n  MetricsLayout,\n} from \"./components\";\nimport { CardKpi } from \"./components/CardKpi\";\nimport { MetricsLagAlert } from \"./components/MetricsLagAlert\";\nimport { PartitionCard } from \"./components/PartitionCard\";\nimport type { KafkaInstanceMetricsProviderProps } from \"./KafkaInstanceMetricsProvider\";\nimport { KafkaInstanceMetricsProvider } from \"./KafkaInstanceMetricsProvider\";\nimport type { MetricsKpiProviderProps } from \"./MetricsKpiProvider\";\nimport { MetricsKpiProvider } from \"./MetricsKpiProvider\";\nimport type { TopicsMetricsProviderProps } from \"./TopicsMetricsProvider\";\nimport { TopicsMetricsProvider } from \"./TopicsMetricsProvider\";\nimport { useKafkaInstanceMetrics } from \"./useKafkaInstanceMetrics\";\nimport { useMetricsKpi } from \"./useMetricsKpi\";\nimport { useTopicsMetrics } from \"./useTopicsMetrics\";\n\nexport type MetricsProps = {\n  onCreateTopic: () => void;\n  onAlertClose: () => void;\n  hasUserAlreadyClosedAlert: boolean;\n} & KafkaInstanceMetricsProviderProps &\n  TopicsMetricsProviderProps &\n  MetricsKpiProviderProps;\n\nexport const Metrics: VoidFunctionComponent<MetricsProps> = ({\n  getKafkaInstanceMetrics,\n  getTopicsMetrics,\n  getMetricsKpi,\n  onCreateTopic,\n  onAlertClose,\n  hasUserAlreadyClosedAlert,\n}) => {\n  return (\n    <TopicsMetricsProvider getTopicsMetrics={getTopicsMetrics}>\n      <KafkaInstanceMetricsProvider\n        getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n      >\n        <MetricsKpiProvider getMetricsKpi={getMetricsKpi}>\n          <ConnectedMetrics\n            onCreateTopic={onCreateTopic}\n            onClickClose={onAlertClose}\n            isClosed={hasUserAlreadyClosedAlert}\n          />\n        </MetricsKpiProvider>\n      </KafkaInstanceMetricsProvider>\n    </TopicsMetricsProvider>\n  );\n};\n\ntype ConnectedMetricsProps = {\n  onCreateTopic: () => void;\n  onClickClose: () => void;\n  isClosed: boolean;\n};\nconst ConnectedMetrics: VoidFunctionComponent<ConnectedMetricsProps> = ({\n  onCreateTopic,\n  onClickClose,\n  isClosed,\n}) => {\n  const { t } = useTranslation();\n  const kafkaInstanceMetrics = useKafkaInstanceMetrics();\n  const topicsMetrics = useTopicsMetrics();\n  const metricsKpi = useMetricsKpi();\n\n  switch (true) {\n    case kafkaInstanceMetrics.isInitialLoading ||\n      topicsMetrics.isInitialLoading ||\n      metricsKpi.isInitialLoading:\n      return <EmptyStateInitialLoading />;\n    case kafkaInstanceMetrics.isFailed &&\n      topicsMetrics.isFailed &&\n      topicsMetrics.isFailed:\n    case kafkaInstanceMetrics.isJustCreated &&\n      topicsMetrics.isJustCreated &&\n      metricsKpi.isJustCreated:\n      return <EmptyStateMetricsUnavailable />;\n    default:\n      return (\n        <MetricsLayout\n          metricsLagAlert={\n            <MetricsLagAlert onClickClose={onClickClose} isClosed={isClosed} />\n          }\n          topicsKpi={\n            <CardKpi\n              metric={metricsKpi.topics}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              name={t(\"metrics:metric_kpi_topics_name\")}\n              popover={t(\"metrics:metric_kpi_topics_description\")}\n            />\n          }\n          topicPartitionsKpi={\n            <PartitionCard\n              metric={metricsKpi.topicPartitions}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              topicPartitionsLimit={metricsKpi.topicPartitionsLimit}\n            />\n          }\n          consumerGroupKpi={\n            <CardKpi\n              metric={metricsKpi.consumerGroups}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              name={t(\"metrics:metric_kpi_consumerGroup_name\")}\n              popover={t(\"metrics:metric_kpi_consumerGroup_description\")}\n            />\n          }\n          diskSpaceMetrics={<ConnectedKafkaInstanceMetrics />}\n          topicMetrics={\n            <ConnectedTopicsMetrics onCreateTopic={onCreateTopic} />\n          }\n        />\n      );\n  }\n};\n\nconst ConnectedKafkaInstanceMetrics: VoidFunctionComponent = () => {\n  const {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    duration,\n    lastUpdated,\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    onDurationChange,\n    onRefresh,\n  } = useKafkaInstanceMetrics();\n\n  return (\n    <CardKafkaInstanceMetrics\n      usedDiskMetrics={usedDiskSpaceMetrics}\n      clientConnectionsMetrics={clientConnectionsMetrics}\n      connectionAttemptRateMetrics={connectionAttemptRateMetrics}\n      duration={duration}\n      backendUnavailable={isFailed}\n      isInitialLoading={isInitialLoading}\n      isLoading={isLoading}\n      isRefreshing={isRefreshing}\n      isJustCreated={isJustCreated}\n      lastUpdated={lastUpdated}\n      onRefresh={onRefresh}\n      onDurationChange={onDurationChange}\n      diskSpaceLimit={diskSpaceLimit || 0}\n      connectionsLimit={connectionsLimit || 0}\n      connectionRateLimit={connectionRateLimit || 0}\n    />\n  );\n};\n\ntype ConnectedTopicsMetricsProps = {\n  onCreateTopic: () => void;\n};\nconst ConnectedTopicsMetrics: VoidFunctionComponent<\n  ConnectedTopicsMetricsProps\n> = ({ onCreateTopic }) => {\n  const {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    selectedTopic,\n    duration,\n    topics,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    onDurationChange,\n    onTopicChange,\n    onRefresh,\n  } = useTopicsMetrics();\n\n  return (\n    <CardTopicsMetrics\n      backendUnavailable={isFailed}\n      topics={topics}\n      incomingTopicsData={bytesIncoming}\n      outgoingTopicsData={bytesOutgoing}\n      partitions={bytesPerPartition}\n      incomingMessageRate={incomingMessageRate}\n      duration={duration}\n      isInitialLoading={isInitialLoading}\n      isLoading={isLoading}\n      isRefreshing={isRefreshing}\n      isJustCreated={isJustCreated}\n      lastUpdated={lastUpdated}\n      selectedTopic={selectedTopic}\n      onRefresh={onRefresh}\n      onSelectedTopic={onTopicChange}\n      onDurationChange={onDurationChange}\n      onCreateTopic={onCreateTopic}\n    />\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport type { MetricsKpiMachineContext } from \"./machines\";\nimport { MetricsKpiContext } from \"./MetricsKpiProvider\";\n\ntype SelectorReturn = MetricsKpiMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useMetricsKpi() {\n  const { service } = useContext(MetricsKpiContext);\n\n  const {\n    topics,\n    topicPartitions,\n    topicPartitionsLimit,\n    consumerGroups,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n  } = useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  return {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    topics,\n    topicPartitions,\n    consumerGroups,\n    topicPartitionsLimit,\n    onRefresh,\n  };\n}\n","import {\n  Button,\n  Card,\n  CardBody,\n  Flex,\n  FlexItem,\n  Modal,\n  ModalVariant,\n  PageSection,\n  Spinner,\n  Stack,\n  StackItem,\n  Switch,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport \"./Settings.css\";\nimport type { SettingsStatus } from \"./types\";\n\nexport type SettingsProps = {\n  onSubmitReAuthentication: (\n    reauthenticationEnabled: boolean\n  ) => Promise<boolean>;\n  reauthenticationEnabled: boolean;\n};\n\nexport const Settings: FunctionComponent<SettingsProps> = ({\n  onSubmitReAuthentication,\n  reauthenticationEnabled,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  //states\n  const [connectionStatus, setConnectionStatus] = useState<SettingsStatus>(\n    reauthenticationEnabled ? \"On\" : \"Off\"\n  );\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  const onClose = () => {\n    setIsModalOpen(false);\n  };\n\n  const onChangeSwitch = (checked: boolean) => {\n    if (connectionStatus === \"On\") {\n      setIsModalOpen(true);\n    } else {\n      handleReAuthentication(checked);\n    }\n  };\n\n  const handleReAuthentication = (reAuthValue: boolean) => {\n    setConnectionStatus(reAuthValue ? \"TurningOn\" : \"TurningOff\");\n\n    onSubmitReAuthentication(reAuthValue)\n      .then((reauthentication) => {\n        setConnectionStatus(reauthentication ? \"On\" : \"Off\");\n\n        // TODO: send notification\n        // addAlert({\n        //   variant: \"success\",\n        //   title: t(\"settings.success_alert\", {\n        //     status: reauthentication ? \"on\" : \"off\",\n        //   }),\n        // });\n      })\n      .catch(() => {\n        setConnectionStatus(!reAuthValue ? \"On\" : \"Off\");\n\n        // TODO: send notification\n        // addAlert({\n        //   variant: \"danger\",\n        //   title: t(\"settings.error_alert_title\"),\n        //   description: t(\"settings.error_alert_title_description\"),\n        // });\n      });\n  };\n\n  const onTurnOff = () => {\n    setIsModalOpen(false);\n    handleReAuthentication(false);\n  };\n\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <Stack hasGutter>\n        <StackItem>\n          <Card>\n            <CardBody>{t(\"settings.kafka_instance_settings_label\")}</CardBody>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <Card className={\"mas--settings__card\"}>\n            <CardBody>\n              <Flex flexWrap={{ default: \"nowrap\" }}>\n                <FlexItem grow={{ default: \"grow\" }}>\n                  <Flex>\n                    <FlexItem\n                      component={\"span\"}\n                      spacer={{ default: \"spacerSm\" }}\n                    >\n                      <strong>\n                        {t(\"settings.connection_re_authentication_label\")}\n                        {\":\"}\n                      </strong>\n                    </FlexItem>\n                    <FlexItem>\n                      {(() => {\n                        switch (connectionStatus) {\n                          case \"On\":\n                            return t(\n                              \"settings.Connection_re_authentication_states.on\"\n                            );\n                          case \"TurningOff\":\n                            return (\n                              <>\n                                <Spinner\n                                  size=\"md\"\n                                  aria-valuetext={t(\n                                    \"settings.Connection_re_authentication_states.turning_off\"\n                                  )}\n                                  aria-label={t(\n                                    \"settings.connection_re_authentication_label\"\n                                  )}\n                                />{\" \"}\n                                {t(\n                                  \"settings.Connection_re_authentication_states.turning_off\"\n                                )}\n                              </>\n                            );\n                          case \"Off\":\n                            return t(\n                              \"settings.Connection_re_authentication_states.off\"\n                            );\n                          case \"TurningOn\":\n                            return (\n                              <>\n                                <Spinner\n                                  size=\"md\"\n                                  aria-valuetext={\n                                    \"settings.Connection_re_authentication_states.turning_on\"\n                                  }\n                                  aria-label={t(\n                                    \"settings.connection_re_authentication_label\"\n                                  )}\n                                />{\" \"}\n                                {t(\n                                  \"settings.Connection_re_authentication_states.turning_on\"\n                                )}\n                              </>\n                            );\n                          default:\n                            return null;\n                        }\n                      })()}\n                    </FlexItem>\n                  </Flex>\n                </FlexItem>\n                <FlexItem>\n                  <Switch\n                    id=\"Connection-re-authentication-switch\"\n                    aria-label={t(\n                      \"settings.connection_re_authentication_label\"\n                    )}\n                    isChecked={\n                      connectionStatus === \"On\" ||\n                      connectionStatus === \"TurningOff\"\n                    }\n                    isDisabled={\n                      connectionStatus === \"TurningOff\" ||\n                      connectionStatus === \"TurningOn\"\n                    }\n                    onChange={onChangeSwitch}\n                  />\n                </FlexItem>\n                <Modal\n                  variant={ModalVariant.small}\n                  isOpen={isModalOpen}\n                  title={t(\"settings.warning_title\")}\n                  titleIconVariant={\"warning\"}\n                  actions={[\n                    <Button\n                      key={\"confirm\"}\n                      variant=\"primary\"\n                      onClick={onTurnOff}\n                    >\n                      {t(\"settings.turn_off_button_label\")}\n                    </Button>,\n                    <Button key={\"cancel\"} variant=\"link\" onClick={onClose}>\n                      {t(\"common:cancel\")}\n                    </Button>,\n                  ]}\n                  onClose={onClose}\n                >\n                  {t(\"settings.warning_description\")}\n                </Modal>\n              </Flex>\n            </CardBody>\n          </Card>\n        </StackItem>\n      </Stack>\n    </PageSection>\n  );\n};\n","export type SelectOptions = {\n  key: string;\n  value: string;\n  isPlaceholder?: boolean;\n  isDisabled?: boolean;\n};\n\nexport const retentionTimeSelectOptions: SelectOptions[] = [\n  { key: \"days\", value: \"days\", isPlaceholder: true },\n  { key: \"hours\", value: \"hours\" },\n  { key: \"minutes\", value: \"minutes\" },\n  { key: \"seconds\", value: \"seconds\" },\n  { key: \"milliseconds\", value: \"milliseconds\" },\n];\n\nexport const retentionSizeSelectOptions: SelectOptions[] = [\n  { key: \"bytes\", value: \"bytes\", isPlaceholder: true },\n  { key: \"kibibytes\", value: \"kibibytes\" },\n  { key: \"mebibytes\", value: \"mebibytes\" },\n  { key: \"gibibytes\", value: \"gibibytes\" },\n  { key: \"tebibytes\", value: \"tebibytes\" },\n];\n\nexport type IDropdownOption = {\n  value?: string;\n  label?: string;\n  key?: string;\n  isDisabled?: boolean;\n};\n\nexport type TimeUnit =\n  | \"days\"\n  | \"hours\"\n  | \"minutes\"\n  | \"seconds\"\n  | \"milliseconds\"\n  | \"weeks\"\n  | \"unlimited\";\n\nexport type CustomSelect = {\n  unit: TimeUnit;\n  value: number;\n};\n\nexport type CustomRetentionSizeSelect = {\n  unit: CustomRetentionUnit;\n  value: number;\n};\n\nexport type CustomRetentionUnit =\n  | \"bytes\"\n  | \"kibibytes\"\n  | \"mebibytes\"\n  | \"gibibytes\"\n  | \"tebibytes\"\n  | \"unlimited\";\n\nexport type RadioSelectType = \"day\" | \"week\" | \"custom\" | \"unlimited\";\n\nexport type RetentionSizeRadioSelect = \"unlimited\" | \"custom\";\n","import type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport {\n  PageSection,\n  PageSectionVariants,\n  Title,\n  Switch,\n  Breadcrumb,\n  BreadcrumbItem,\n} from \"@patternfly/react-core\";\nimport { Link } from \"react-router-dom\";\n\nexport type CreateTopicHeadProps = {\n  showAllOptions: boolean;\n  kafkaName: string;\n  onShowAllOptions: (value: boolean) => void;\n  kafkaInstanceLink: string;\n  kafkaPageLink: string;\n};\n\nexport const CreateTopicHead: VoidFunctionComponent<CreateTopicHeadProps> = ({\n  showAllOptions,\n  onShowAllOptions,\n  kafkaName,\n  kafkaInstanceLink,\n  kafkaPageLink,\n}) => {\n  const { t } = useTranslation([\"common\", \"topic\"]);\n\n  const mainBreadcrumbs = (\n    <Breadcrumb ouiaId={\"breadcrumb\"}>\n      <BreadcrumbItem\n        render={() => (\n          <Link to={kafkaInstanceLink}>{t(\"common:kafka_instance\")}</Link>\n        )}\n      />\n      <BreadcrumbItem\n        render={() => <Link to={kafkaPageLink}>{kafkaName}</Link>}\n      />\n      <BreadcrumbItem isActive>{t(\"topic:create_topic\")}</BreadcrumbItem>\n    </Breadcrumb>\n  );\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        {mainBreadcrumbs}\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          {t(\"topic:create_topic\")}\n        </Title>\n        <br />\n        <Switch\n          ouiaId={\"toggle-switch-off\"}\n          id=\"id-show-all-options\"\n          label={t(\"topic:show_all_options\")}\n          labelOff={t(\"topic:show_all_options\")}\n          isChecked={showAllOptions}\n          onChange={onShowAllOptions}\n          className=\"create-topic-wizard\"\n        />\n      </PageSection>\n    </>\n  );\n};\n","import { Button, Modal } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { Topic } from \"ui-models/src/models/topic\";\n\nexport type PartitionLimitWarningProps = {\n  topicData: Topic;\n  onSave: (topicData: Topic) => void;\n  isModalOpen: boolean;\n  setIsModalOpen: (value: boolean) => void;\n};\n\nexport const PartitionLimitWarning: React.FC<PartitionLimitWarningProps> = ({\n  topicData,\n  onSave,\n  isModalOpen,\n  setIsModalOpen,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  const handleModalToggle = () => {\n    setIsModalOpen(false);\n  };\n  const onConfirm = () => {\n    setIsModalOpen(false);\n    onSave(topicData);\n  };\n  return (\n    <Modal\n      title={t(\"increase_partitions\")}\n      variant={\"small\"}\n      titleIconVariant=\"warning\"\n      aria-describedby=\"modal-title-icon-description\"\n      isOpen={isModalOpen}\n      onClose={handleModalToggle}\n      actions={[\n        <Button key=\"confirm\" variant=\"primary\" onClick={onConfirm}>\n          {t(\"common:yes\")}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={handleModalToggle}>\n          {t(\"no_return\")}\n        </Button>,\n      ]}\n    >\n      {t(\"partition_warning_modal\")}\n    </Modal>\n  );\n};\n","import { convert } from \"convert\";\nimport type { CustomSelect } from \"./types\";\n\nexport const retentionTimeTransformer = (value: CustomSelect) => {\n  if (value.value != null)\n    switch (value.unit) {\n      case \"days\": {\n        const convertedValue = convert(BigInt(value.value), \"days\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"weeks\": {\n        const convertedValue = convert(BigInt(value.value), \"weeks\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"seconds\": {\n        const convertedValue = convert(BigInt(value.value), \"seconds\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"hours\": {\n        const convertedValue = convert(BigInt(value.value), \"hours\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"minutes\": {\n        const convertedValue = convert(BigInt(value.value), \"minutes\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"unlimited\": {\n        return BigInt(value.value);\n      }\n      case \"milliseconds\": {\n        return BigInt(value.value);\n      }\n    }\n};\n","import { FormGroup, Popover, TextInput } from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\n\nexport interface TextWithLabelPopoverProps {\n  fieldId: string;\n  fieldLabel: string;\n  fieldValue?: string;\n  popoverHeader: string;\n  popoverBody: string;\n  btnAriaLabel: string;\n  showUnlimited?: boolean;\n}\n\nexport const TextWithLabelPopover: FunctionComponent<\n  TextWithLabelPopoverProps\n> = ({\n  fieldId,\n  fieldLabel,\n  btnAriaLabel,\n  fieldValue,\n  popoverBody,\n  popoverHeader,\n  showUnlimited,\n}) => {\n  let displayText = \"-\";\n\n  if (\n    showUnlimited === true &&\n    fieldValue !== undefined &&\n    parseInt(fieldValue) < 0\n  ) {\n    displayText = \"Unlimited\"; // TODO i18n\n  } else if (fieldValue) {\n    displayText = fieldValue;\n  }\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={fieldLabel}\n      className=\"kafka-ui-form-group--readonly\"\n      labelIcon={\n        <Popover\n          headerContent={<div>{popoverHeader}</div>}\n          bodyContent={<div>{popoverBody}</div>}\n        >\n          <button\n            aria-label={btnAriaLabel}\n            onClick={(event) => event.preventDefault()}\n            className=\"pf-c-form__group-label-help\"\n          >\n            <HelpIcon noVerticalAlign />\n          </button>\n        </Popover>\n      }\n    >\n      <TextInput\n        readOnlyVariant={\"plain\"}\n        type=\"text\"\n        id={fieldId}\n        name={fieldId}\n        value={displayText}\n      />\n    </FormGroup>\n  );\n};\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype CleanupProps = {\n  defaultLogSegmentSize: bigint;\n  defaultSegmentTime: bigint;\n  defaultSegmentJitterTime: bigint;\n  defaultFileDeleteDelay: bigint;\n};\n\nconst Cleanup: React.FC<CleanupProps> = ({\n  defaultFileDeleteDelay,\n  defaultLogSegmentSize,\n  defaultSegmentJitterTime,\n  defaultSegmentTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <FormSection title={t(\"cleanup\")} id=\"cleanup\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"cleanup_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"log-segment-size\"\n        btnAriaLabel={t(\"log_segment_size\")}\n        fieldLabel={t(\"log_segment_size\")}\n        fieldValue={t(\"bytes_to_gibibyte\", {\n          bytes: defaultLogSegmentSize,\n          gibibyte: convert(Number(defaultLogSegmentSize), \"bytes\").to(\n            \"gibibytes\"\n          ),\n        })}\n        popoverBody={t(\"log_segment_size\")}\n        popoverHeader={t(\"log_segment_size_description\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segement-time\"\n        btnAriaLabel={t(\"segement_time\")}\n        fieldLabel={t(\"segement_time\")}\n        fieldValue={t(\"milliseconds_to_days\", {\n          milliseconds: defaultSegmentTime,\n          days: convert(Number(defaultSegmentTime), \"milliseconds\").to(\"days\"),\n        })}\n        popoverBody={t(\"segement_time_description\")}\n        popoverHeader={t(\"segement_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segment-jitter-time\"\n        btnAriaLabel={t(\"segment_jitter_time\")}\n        fieldLabel={t(\"segment_jitter_time\")}\n        fieldValue={t(\"milliseconds_time\", { value: defaultSegmentJitterTime })}\n        popoverBody={t(\"segment_jitter_time_description\")}\n        popoverHeader={t(\"segment_jitter_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"file-delete-delay\"\n        btnAriaLabel={t(\"file_delete_delay\")}\n        fieldLabel={t(\"file_delete_delay\")}\n        fieldValue={t(\"milliseconds_to_minute\", {\n          milliseconds: defaultFileDeleteDelay,\n          minute: convert(Number(defaultFileDeleteDelay), \"milliseconds\").to(\n            \"minutes\"\n          ),\n        })}\n        popoverBody={t(\"file_delete_delay_description\")}\n        popoverHeader={t(\"file_delete_delay\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"preallocate-log-segment-files\"\n        btnAriaLabel={t(\"preallocate_log_segment_files\")}\n        fieldLabel={t(\"preallocate_log_segment_files\")}\n        fieldValue={t(\"common:disabled\")}\n        popoverBody={t(\"preallocate_log_segment_files_description\")}\n        popoverHeader={t(\"preallocate_log_segment_files\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Cleanup };\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { TextInput } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { CustomSelect, TimeUnit } from \"./types\";\nimport { retentionTimeSelectOptions } from \"./types\";\n\nexport type CustomRetentionMessageProps = {\n  id?: string;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n};\n\nconst CustomRetentionMessage: React.FC<CustomRetentionMessageProps> = ({\n  customTimeValue,\n  setCustomTimeValue,\n}) => {\n  const [isRetentionTimeSelectOpen, setIsRetentionTimeSelectOpen] =\n    useState<boolean>(false);\n\n  const onRetentionTimeToggle = (isOpen: boolean) => {\n    setIsRetentionTimeSelectOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (event, value) => {\n    const inputUnit: CustomSelect = {\n      unit: value as TimeUnit,\n      value: 1,\n    };\n    setCustomTimeValue(inputUnit);\n\n    onRetentionTimeToggle(false);\n  };\n\n  const onChange = (input: string) => {\n    const inputValue: CustomSelect = {\n      ...customTimeValue,\n      value: Number(input),\n    };\n    if (inputValue.value > -1) setCustomTimeValue(inputValue);\n  };\n\n  return (\n    <div className=\"kafka-ui--radio__parameters\">\n      <Flex>\n        <FlexItem>\n          <TextInput\n            aria-label={\"Retention time\"}\n            type=\"number\"\n            value={customTimeValue.value == 0 ? \"\" : customTimeValue.value}\n            onChange={onChange}\n            min={1}\n          />\n        </FlexItem>\n        <FlexItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={onRetentionTimeToggle}\n            onSelect={(event, value) => onSelect(event, value as string)}\n            placeholder=\"days\"\n            selections={customTimeValue.unit}\n            isOpen={isRetentionTimeSelectOpen}\n          >\n            {retentionTimeSelectOptions?.map((s) => (\n              <SelectOption\n                key={s.key}\n                value={s.value}\n                isPlaceholder={s.isPlaceholder}\n              >\n                {s.value}\n              </SelectOption>\n            ))}\n          </Select>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n\nexport { CustomRetentionMessage };\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { TextInput } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport type { CustomRetentionSizeSelect, CustomRetentionUnit } from \"./types\";\nimport { retentionSizeSelectOptions } from \"./types\";\nimport { useState } from \"react\";\n\nexport type CustomRetentionSizeProps = {\n  id?: string;\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n};\n\nconst CustomRetentionSize: React.FC<CustomRetentionSizeProps> = ({\n  customRetentionSizeValue,\n  setCustomRetentionSizeValue,\n}) => {\n  const [isRetentionSizeSelectOpen, setIsRetentionSizeSelectOpen] =\n    useState<boolean>(false);\n\n  const onRetentionSizeToggle = (isOpen: boolean) => {\n    setIsRetentionSizeSelectOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (event, value) => {\n    const inputUnit: CustomRetentionSizeSelect = {\n      unit: value as CustomRetentionUnit,\n      value: 1,\n    };\n    setCustomRetentionSizeValue(inputUnit);\n    onRetentionSizeToggle(false);\n  };\n\n  const onChange = (input: string) => {\n    const inputValue: CustomRetentionSizeSelect = {\n      ...customRetentionSizeValue,\n      value: Number(input),\n    };\n    if (inputValue.value > -1) setCustomRetentionSizeValue(inputValue);\n  };\n  return (\n    <div className=\"kafka-ui--radio__parameters\">\n      <Flex>\n        <FlexItem>\n          <TextInput\n            aria-label=\"Retention size\"\n            type=\"number\"\n            value={\n              customRetentionSizeValue.value == 0\n                ? \"\"\n                : customRetentionSizeValue.value\n            }\n            onChange={onChange}\n            min={1}\n          />\n        </FlexItem>\n        <FlexItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={onRetentionSizeToggle}\n            onSelect={onSelect}\n            selections={customRetentionSizeValue.unit}\n            isOpen={isRetentionSizeSelectOpen}\n          >\n            {retentionSizeSelectOptions?.map((s) => (\n              <SelectOption\n                key={s.key}\n                value={s.value}\n                isPlaceholder={s.isPlaceholder}\n              />\n            ))}\n          </Select>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n\nexport { CustomRetentionSize };\n","import { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { useCallback } from \"react\";\n\nexport const useValidateTopic = (): {\n  validateName: (name: string) => string | undefined;\n} => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return {\n    validateName: useCallback(\n      (name) => {\n        const legalNameChars = new RegExp(\"^[a-zA-Z0-9._-]+$\");\n        if (name.length && !legalNameChars.test(name)) {\n          return t(\"topic_name_helper_text\");\n        } else if (name.length > 249) {\n          return t(\"cannot_exceed_characters\");\n        } else if (name === \".\" || name === \"..\") {\n          return t(\"invalid_name_with_dot\");\n        }\n        return undefined;\n      },\n      [t]\n    ),\n  };\n};\n","import type { NumberInputProps } from \"@patternfly/react-core\";\nimport {\n  FormSection,\n  NumberInput,\n  Radio,\n  Stack,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport {\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useCallback } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type { TopicPartition } from \"ui-models/src/models/topic-partition\";\nimport { CustomRetentionMessage } from \"./CustomRetentionMessage\";\nimport { CustomRetentionSize } from \"./CustomRetentionSize\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"./types\";\nimport { useValidateTopic } from \"./useValidateTopic\";\n\nexport type CoreConfigurationProps = {\n  isCreate?: boolean;\n  topicData: Topic;\n  setTopicData: (data: Topic) => void;\n  invalidText: string;\n  setInvalidText: (message: string) => void;\n  setTopicValidated: (error: ValidatedOptions) => void;\n  topicValidated: ValidatedOptions;\n  setWarning: (isWarning: boolean) => void;\n  warning: boolean;\n  availablePartitionLimit: number;\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n  radioTimeSelectValue: RadioSelectType;\n  setRadioTimeSelectValue: (value: RadioSelectType) => void;\n  radioSizeSelectValue: RetentionSizeRadioSelect;\n  setRadioSizeSelectValue: (data: RetentionSizeRadioSelect) => void;\n};\n\nconst CoreConfiguration: FunctionComponent<CoreConfigurationProps> = ({\n  isCreate,\n  topicData,\n  setTopicData,\n  invalidText,\n  setInvalidText,\n  setTopicValidated,\n  topicValidated,\n  availablePartitionLimit,\n  customTimeValue,\n  setCustomTimeValue,\n  radioTimeSelectValue,\n  setRadioTimeSelectValue,\n  setCustomRetentionSizeValue,\n  customRetentionSizeValue,\n  radioSizeSelectValue,\n  setRadioSizeSelectValue,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  const [initialPartitions] = useState<TopicPartition[]>(topicData.partitions);\n  const { validateName } = useValidateTopic();\n  const validationCheck = useCallback(\n    (value: string) => {\n      const errorMessage = validateName(value);\n      if (errorMessage) {\n        setInvalidText(errorMessage);\n        setTopicValidated(ValidatedOptions.error);\n      } else {\n        setTopicValidated(ValidatedOptions.default);\n      }\n    },\n    [setInvalidText, setTopicValidated, validateName]\n  );\n\n  const handleRetentionMessageTime = (value: RadioSelectType) => {\n    if (value === \"unlimited\") {\n      setCustomTimeValue({ value: -1, unit: \"unlimited\" });\n      setRadioTimeSelectValue(value);\n    } else {\n      setCustomTimeValue({ value: 7, unit: \"days\" });\n      setRadioTimeSelectValue(value);\n    }\n  };\n\n  const handleRetentionMessageSize = (value: RetentionSizeRadioSelect) => {\n    if (value === \"unlimited\") {\n      setRadioSizeSelectValue(value);\n      setCustomRetentionSizeValue({ value: -1, unit: \"unlimited\" });\n    } else {\n      setCustomRetentionSizeValue({ value: 1, unit: \"bytes\" });\n      setRadioSizeSelectValue(value);\n    }\n  };\n  const handleTextInputChange = (value: string) => {\n    validationCheck(value);\n    setTopicData({ ...topicData, name: value });\n  };\n\n  const onPartitionsChange: NumberInputProps[\"onChange\"] = (event) => {\n    const partitions = Number((event.target as HTMLInputElement).value);\n\n    const updatedPartitions = Array(partitions)\n      .fill(null)\n      .map((_, index) => ({ partition: index }));\n    //Donot allow to set a value below original value in case of edit topic\n    setTopicData({\n      ...topicData,\n      partitions: isCreate\n        ? updatedPartitions\n        : updatedPartitions.length > initialPartitions.length\n        ? updatedPartitions\n        : initialPartitions,\n    });\n  };\n\n  const handleOnPlus = () => {\n    const currentPartitions = topicData.partitions;\n    const updatedPartitions = [\n      ...currentPartitions,\n      { partition: currentPartitions.length },\n    ];\n    setTopicData({\n      ...topicData,\n      partitions: updatedPartitions,\n    });\n  };\n\n  const handleOnMinus = () => {\n    const { partitions } = topicData;\n    const newPartitions = partitions.slice(0, partitions.length - 1);\n    setTopicData({\n      ...topicData,\n      partitions: newPartitions,\n    });\n  };\n\n  const retentionTimeInput = (\n    <CustomRetentionMessage\n      customTimeValue={customTimeValue}\n      setCustomTimeValue={setCustomTimeValue}\n    />\n  );\n\n  const retentionSizeInput = (\n    <CustomRetentionSize\n      customRetentionSizeValue={customRetentionSizeValue}\n      setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n    />\n  );\n\n  return (\n    <FormSection\n      title={t(\"core_configuration\")}\n      id=\"core-configuration\"\n      titleElement={\"h2\"}\n    >\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"core_config_info\")}\n        </Text>\n      </TextContent>\n      {isCreate ? (\n        <FormGroupWithPopover\n          labelHead={t(\"topic_name\")}\n          fieldId=\"create-topic-name\"\n          fieldLabel={t(\"topic_name\")}\n          labelBody={t(\"topic_name_description\")}\n          buttonAriaLabel=\"More info for topic name field\"\n          helperTextInvalid={invalidText}\n          validated={topicValidated}\n          isRequired={true}\n          helperText={t(\"topic_name_helper_text\")}\n        >\n          <TextInput\n            isRequired\n            type=\"text\"\n            id=\"create-topic-name\"\n            name=\"name\"\n            value={topicData.name}\n            onChange={handleTextInputChange}\n            label={t(\"topic_name\")}\n            placeholder={t(\"enter_name\")}\n            validated={topicValidated}\n          />\n        </FormGroupWithPopover>\n      ) : (\n        <TextWithLabelPopover\n          fieldId=\"topic-name\"\n          btnAriaLabel=\"topic detail name\"\n          fieldLabel=\"Name\"\n          fieldValue={topicData.name}\n          popoverBody={t(\"topic_name_description\")}\n          popoverHeader={t(\"topic_name\")}\n        />\n      )}\n\n      <FormGroupWithPopover\n        fieldId=\"create-topic-partitions\"\n        fieldLabel=\"Partitions\"\n        labelHead={t(\"partitions\")}\n        labelBody={t(\"partitions_description\")}\n        buttonAriaLabel=\"More info for partitions field\"\n        helperText={\n          topicData.partitions.length >= availablePartitionLimit\n            ? t(\"partitions_warning\")\n            : t(\"partition_helper_text\")\n        }\n        validated={\n          topicData.partitions.length >= availablePartitionLimit\n            ? \"warning\"\n            : \"default\"\n        }\n      >\n        <NumberInput\n          id=\"create-topic-partitions\"\n          inputName=\"num-partitions\"\n          onChange={onPartitionsChange}\n          data-testid={t(\"partitions\")}\n          onPlus={handleOnPlus}\n          onMinus={handleOnMinus}\n          value={\n            topicData.partitions.length == 0 ? \"\" : topicData.partitions.length\n          }\n          plusBtnProps={{ name: \"num-partitions\" }}\n          minusBtnProps={{ name: \"num-partitions\" }}\n          min={isCreate ? 1 : initialPartitions.length}\n        />\n      </FormGroupWithPopover>\n\n      {/*<TextWithLabelPopover\n        fieldId=\"replicas\"\n        btnAriaLabel={t(\"replicas\")}\n        fieldLabel={t(\"replicas\")}\n        popoverBody={t(\"replicas_description\")}\n        popoverHeader={t(\"replicas\")}\n      />*/}\n      <TextWithLabelPopover\n        fieldId=\"min-insync-replicas\"\n        btnAriaLabel=\"topic detail min-in-sync replica\"\n        fieldLabel=\"Minimum in-sync replicas\"\n        fieldValue={topicData[\"min.insync.replicas\"].toString()}\n        popoverBody={t(\"min_insync_replicas_description\")}\n        popoverHeader={t(\"min_insync_replicas\")}\n      />\n      <FormGroupWithPopover\n        fieldId=\"retention\"\n        fieldLabel=\"Retention time\"\n        labelHead={t(\"retention_time\")}\n        labelBody={t(\"retention_time_description\")}\n        buttonAriaLabel=\"More info for retention time field\"\n      >\n        <Stack hasGutter>\n          <Radio\n            isChecked={radioTimeSelectValue === \"custom\"}\n            name=\"custom-retention-time\"\n            onChange={() => handleRetentionMessageTime(\"custom\")}\n            label={retentionTimeInput}\n            className=\"kafka-ui--radio-label__number-input\"\n            aria-label=\"custom duration\"\n            id=\"custom-retention-time\"\n            value={radioTimeSelectValue}\n          />\n          <Radio\n            isChecked={radioTimeSelectValue === \"unlimited\"}\n            name=\"unlimited-retention-time\"\n            onChange={() => handleRetentionMessageTime(\"unlimited\")}\n            label=\"Unlimited time\"\n            aria-label=\"Unlimited\"\n            id=\"unlimited-retention-time\"\n            value={radioTimeSelectValue}\n          />\n        </Stack>\n      </FormGroupWithPopover>\n      <FormGroupWithPopover\n        fieldId=\"retention-size\"\n        fieldLabel=\"Retention size\"\n        labelHead={t(\"retention_size\")}\n        labelBody={t(\"retention_size_description\")}\n        buttonAriaLabel=\"More info for retention size field\"\n      >\n        <Stack hasGutter>\n          <Radio\n            isChecked={radioSizeSelectValue === \"custom\"}\n            name=\"custom-retention-size\"\n            onChange={() => handleRetentionMessageSize(\"custom\")}\n            label={retentionSizeInput}\n            className=\"kafka-ui--radio-label__number-input\"\n            aria-label=\"custom size\"\n            id=\"custom-retention-size\"\n            value={radioSizeSelectValue}\n          />\n          <Radio\n            isChecked={radioSizeSelectValue === \"unlimited\"}\n            name=\"unlimited-retention-size\"\n            onChange={() => handleRetentionMessageSize(\"unlimited\")}\n            label=\"Unlimited size\"\n            aria-label=\"Unlimited\"\n            id=\"unlimited-retention-size\"\n            value={radioSizeSelectValue}\n          />\n        </Stack>\n      </FormGroupWithPopover>\n    </FormSection>\n  );\n};\n\nexport { CoreConfiguration };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype FlushProps = {\n  defaultFlushIntervalMessages: bigint;\n  defaultFlushIntervalTime: bigint;\n};\n\nconst Flush: React.FC<FlushProps> = ({\n  defaultFlushIntervalMessages,\n  defaultFlushIntervalTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"flush\")} id=\"flush\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"flush_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"flush-interval-messages\"\n        btnAriaLabel={t(\"flush_interval_messages\")}\n        fieldLabel={t(\"flush_interval_messages\")}\n        fieldValue={t(\"messages_time\", {\n          value: defaultFlushIntervalMessages,\n        })}\n        popoverBody={t(\"flush_interval_messages_description\")}\n        popoverHeader={t(\"flush_interval_messages\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"flush-interval-time\"\n        btnAriaLabel={t(\"flush_interval_time\")}\n        fieldLabel={t(\"flush_interval_time\")}\n        fieldValue={t(\"milliseconds_time\", { value: defaultFlushIntervalTime })}\n        popoverBody={t(\"flush_interval_time_description\")}\n        popoverHeader={t(\"flush_interval_time\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Flush };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport {\n  DropdownWithToggle,\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\nimport type { IDropdownOption } from \"./types\";\nimport { TopicConfig } from \"ui-models/src/models/topic-config\";\n\nexport type LogProps = {\n  topicData: Topic;\n  setTopicData: (data: Topic) => void;\n  defaultDeleteRetentionTime: bigint;\n  defaultMinCleanbleRatio: number;\n  defaultMinimumCompactionLagTime: bigint;\n};\n\nconst Log: React.FC<LogProps> = ({\n  topicData,\n  setTopicData,\n  defaultDeleteRetentionTime,\n  defaultMinCleanbleRatio,\n  defaultMinimumCompactionLagTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  const cleanupPolicyOptions: IDropdownOption[] = [\n    {\n      key: \"compact\",\n      value: \"compact\",\n      label: t(\"compact\"),\n      isDisabled: false,\n    },\n    {\n      key: \"delete\",\n      value: \"delete\",\n      label: t(\"common:delete\"),\n      isDisabled: false,\n    },\n    {\n      key: \"delete, compact\",\n      value: \"compact,delete\",\n      label: `${t(\"compact\")},${t(\"common:delete\")}`,\n      isDisabled: false,\n    },\n  ];\n\n  const onSelectOption = (value: string) => {\n    setTopicData({\n      ...topicData,\n      \"cleanup.policy\": value as TopicConfig[\"cleanup.policy\"],\n    });\n  };\n\n  return (\n    <FormSection title={t(\"log\")} id=\"log\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p}>{t(\"log_section_info\")}</Text>\n        <Text component={TextVariants.small}>{t(\"log_section_info_note\")}</Text>\n      </TextContent>\n\n      <FormGroupWithPopover\n        fieldId=\"cleanup-policy\"\n        fieldLabel={t(\"cleanup_policy\")}\n        labelHead={t(\"cleanup_policy\")}\n        labelBody={t(\"cleanup_policy_description\")}\n        buttonAriaLabel={t(\"cleanup_policy\")}\n      >\n        <DropdownWithToggle\n          id=\"log-section-policy-type-dropdown\"\n          toggleId=\"log-section-policy-type-dropdowntoggle\"\n          ariaLabel={t(\"select_policy\")}\n          onSelectOption={onSelectOption}\n          items={cleanupPolicyOptions}\n          name=\"cleanup-policy\"\n          value={topicData[\"cleanup.policy\"]}\n          isLabelAndValueNotSame={true}\n          key={topicData[\"cleanup.policy\"]}\n        />\n      </FormGroupWithPopover>\n\n      <TextWithLabelPopover\n        fieldId=\"delete-retention-time\"\n        btnAriaLabel={t(\"delete_retention_time\")}\n        fieldLabel={t(\"delete_retention_time\")}\n        fieldValue={t(\"milliseconds_time_to_day\", {\n          value: defaultDeleteRetentionTime,\n          days: convert(Number(defaultDeleteRetentionTime), \"milliseconds\").to(\n            \"days\"\n          ),\n        })}\n        popoverBody={t(\"delete_retention_time_description\")}\n        popoverHeader={t(\"delete_retention_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"min-cleanable-ratio\"\n        btnAriaLabel={t(\"min_cleanable_ratio\")}\n        fieldLabel={t(\"min_cleanable_ratio\")}\n        fieldValue={String(defaultMinCleanbleRatio)}\n        popoverBody={t(\"min_cleanable_ratio_description\")}\n        popoverHeader={t(\"min_cleanable_ratio\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"min-compaction-lag-time-description\"\n        btnAriaLabel={t(\"min_compaction_lag_time\")}\n        fieldLabel={t(\"min_compaction_lag_time\")}\n        fieldValue={t(\"milliseconds_time\", {\n          value: defaultMinimumCompactionLagTime,\n        })}\n        popoverBody={t(\"min_compaction_lag_time_description\")}\n        popoverHeader={t(\"min_compaction_lag_time\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Log };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype MessageProps = {\n  defaultMaximumMessageBytes: bigint;\n  defaultMessageTimestampType: string;\n  defaultMaxMessageTimestampDiff: bigint;\n};\n\nconst Message: React.FC<MessageProps> = ({\n  defaultMaximumMessageBytes,\n  defaultMessageTimestampType,\n  defaultMaxMessageTimestampDiff,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"messages\")} id=\"messages\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"message_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"max-message-size\"\n        btnAriaLabel={t(\"max_message_size\")}\n        fieldLabel={t(\"max_message_size\")}\n        fieldValue={t(\"bytes_size\", { value: defaultMaximumMessageBytes })}\n        popoverBody={t(\"max_message_size_description\")}\n        popoverHeader={t(\"max_message_size\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"message-timestamp-type\"\n        btnAriaLabel={t(\"message_timestamp_type\")}\n        fieldLabel={t(\"message_timestamp_type\")}\n        fieldValue={String(defaultMessageTimestampType)}\n        popoverBody={t(\"message_timestamp_type_description\")}\n        popoverHeader={t(\"message_timestamp_type\")}\n      />\n      <TextWithLabelPopover\n        fieldId=\"max-message-timestamp-diff\"\n        btnAriaLabel={t(\"max_message_timestamp_diff\")}\n        fieldLabel={t(\"max_message_timestamp_diff\")}\n        fieldValue={t(\"milliseconds_time\", {\n          value: defaultMaxMessageTimestampDiff,\n        })}\n        popoverBody={t(\"max_message_timestamp_diff_description\")}\n        popoverHeader={t(\"max_message_timestamp_diff\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"compression-type\"\n        btnAriaLabel={t(\"compression_type\")}\n        fieldLabel={t(\"compression_type\")}\n        fieldValue={\"Producer\"}\n        popoverBody={t(\"compression_type_description\")}\n        popoverHeader={t(\"compression_type\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"message-format\"\n        btnAriaLabel={t(\"message_format\")}\n        fieldLabel={t(\"message_format\")}\n        fieldValue={\"2.7-IV2\"}\n        popoverBody={t(\"message_format_description\")}\n        popoverHeader={t(\"message_format\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Message };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\nconst Replication: React.FC = () => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <FormSection title={t(\"replication\")} id=\"replication\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {t(\"replication_section_info\")}\n          <Text component={TextVariants.small}>\n            {t(\"replication_section_info_note\")}\n          </Text>\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"unclean-leader-election\"\n        btnAriaLabel={t(\"unclean_leader_election\")}\n        fieldLabel={t(\"unclean_leader_election\")}\n        fieldValue={t(\"common:disabled\")}\n        popoverBody={t(\"unclean_leader_election_description\")}\n        popoverHeader={t(\"unclean_leader_election\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Replication };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype TopicAdavanceIndexProps = {\n  defaultIndexIntervalSize: bigint;\n  defaultSegmentIndexSize: bigint;\n};\n\nconst TopicAdvanceIndex: React.FC<TopicAdavanceIndexProps> = ({\n  defaultIndexIntervalSize,\n  defaultSegmentIndexSize,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"index\")} id=\"index\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"index_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"index-interval-size\"\n        btnAriaLabel={t(\"index_interval_size\")}\n        fieldLabel={t(\"index_interval_size\")}\n        fieldValue={t(\"bytes_to_kibibytes\", {\n          bytes: defaultIndexIntervalSize,\n          kibibytes: convert(Number(defaultIndexIntervalSize), \"bytes\").to(\n            \"kibibytes\"\n          ),\n        })}\n        popoverBody={t(\"index_interval_size_description\")}\n        popoverHeader={t(\"index_interval_size\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segment-index-size\"\n        btnAriaLabel={t(\"segment_index_size\")}\n        fieldLabel={t(\"segment_index_size\")}\n        fieldValue={t(\"bytes_to_mebibytes\", {\n          bytes: defaultSegmentIndexSize,\n          mebibytes: convert(Number(defaultIndexIntervalSize), \"bytes\").to(\n            \"mebibytes\"\n          ),\n        })}\n        popoverBody={t(\"segment_index_size_description\")}\n        popoverHeader={t(\"segment_index_size\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { TopicAdvanceIndex };\n","import { JumpLinks, JumpLinksItem, SidebarPanel } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\n\nexport type TopicAdvanceJumpLinksProps = {\n  canHaveDelete?: boolean;\n};\nconst TopicAdvanceJumpLinks: React.FC<TopicAdvanceJumpLinksProps> = ({\n  canHaveDelete,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <SidebarPanel variant=\"sticky\">\n      <JumpLinks\n        isVertical\n        label={t(\"jump_to_section\")}\n        scrollableSelector=\".topic-properties\"\n        style={{ position: \"sticky\" }}\n        // offset={-164} // for header\n      >\n        <JumpLinksItem key={0} href=\"#core-configuration\">\n          {t(\"core_configuration\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={1} href=\"#messages\">\n          {t(\"messages\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={2} href=\"#log\">\n          {t(\"log\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={3} href=\"#replication\">\n          {t(\"replication\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={4} href=\"#cleanup\">\n          {t(\"cleanup\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={5} href=\"#index\">\n          {t(\"index\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={6} href=\"#flush\">\n          {t(\"flush\")}\n        </JumpLinksItem>\n        {canHaveDelete ? (\n          <JumpLinksItem key={7} href=\"#delete\">\n            {t(\"delete\")}\n          </JumpLinksItem>\n        ) : (\n          <></>\n        )}\n      </JumpLinks>\n    </SidebarPanel>\n  );\n};\n\nexport { TopicAdvanceJumpLinks };\n","import {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  PageGroup,\n  PageSection,\n  Sidebar,\n  SidebarContent,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"..\";\nimport { Cleanup } from \"./Cleanup\";\nimport { CoreConfiguration } from \"./CoreConfiguration\";\nimport { Flush } from \"./Flush\";\nimport { Log } from \"./Log\";\nimport { Message } from \"./Message\";\nimport { Replication } from \"./Replication\";\nimport { TopicAdvanceIndex } from \"./TopicAdvanceIndex\";\nimport { TopicAdvanceJumpLinks } from \"./TopicAdvanceJumpLinks\";\n\nexport type TopicAdvancePageProps = {\n  isCreate: boolean;\n  onConfirm: (data: Topic) => void;\n  handleCancel?: () => void;\n  topicData: Topic;\n  setTopicData: (val: Topic) => void;\n  checkTopicName?: (value: string) => boolean;\n  availablePartitionLimit: number;\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n  radioTimeSelectValue: RadioSelectType;\n  setRadioTimeSelectValue: (value: RadioSelectType) => void;\n  radioSizeSelectValue: RetentionSizeRadioSelect;\n  setRadioSizeSelectValue: (data: RetentionSizeRadioSelect) => void;\n};\n\nexport const TopicAdvancePage: React.FunctionComponent<\n  TopicAdvancePageProps\n> = ({\n  isCreate,\n  onConfirm,\n  handleCancel,\n  topicData,\n  setTopicData,\n  checkTopicName,\n  availablePartitionLimit,\n  customTimeValue,\n  setCustomTimeValue,\n  radioTimeSelectValue,\n  setRadioTimeSelectValue,\n  setCustomRetentionSizeValue,\n  customRetentionSizeValue,\n  radioSizeSelectValue,\n  setRadioSizeSelectValue,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n  const actionText = isCreate ? t(\"create_topic\") : t(\"common:save\");\n\n  //states\n\n  const [topicValidated, setTopicValidated] = useState<ValidatedOptions>(\n    ValidatedOptions.default\n  );\n  const [invalidText, setInvalidText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [warning, setWarning] = useState<boolean>(false);\n  const onValidateTopic = () => {\n    if (isCreate) {\n      if (topicData?.name.length < 1) {\n        setInvalidText(t(\"common:required\"));\n        setTopicValidated(ValidatedOptions.error);\n      } else {\n        setIsLoading(true);\n\n        const isTopicNameValid =\n          checkTopicName && checkTopicName(topicData?.name);\n        if (!isTopicNameValid) {\n          setIsLoading(false);\n          setInvalidText(t(\"already_exists\", { name: topicData?.name })),\n            setTopicValidated(ValidatedOptions.error);\n        } else onConfirm(topicData);\n      }\n    } else {\n      onConfirm(topicData);\n    }\n  };\n  return (\n    <PageSection padding={{ default: \"noPadding\" }}>\n      <Sidebar hasGutter>\n        <TopicAdvanceJumpLinks />\n        <SidebarContent>\n          <PageGroup\n            hasOverflowScroll={true}\n            id=\"topic-detail-view\"\n            aria-label={\"TODO\"}\n          >\n            <PageSection padding={{ default: \"noPadding\" }}>\n              <Form>\n                <CoreConfiguration\n                  isCreate={isCreate}\n                  topicData={topicData}\n                  setTopicData={setTopicData}\n                  availablePartitionLimit={availablePartitionLimit}\n                  invalidText={invalidText}\n                  setInvalidText={setInvalidText}\n                  setTopicValidated={setTopicValidated}\n                  topicValidated={topicValidated}\n                  setWarning={setWarning}\n                  warning={warning}\n                  customRetentionSizeValue={customRetentionSizeValue}\n                  setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n                  customTimeValue={customTimeValue}\n                  setCustomTimeValue={setCustomTimeValue}\n                  radioTimeSelectValue={radioTimeSelectValue}\n                  setRadioTimeSelectValue={setRadioTimeSelectValue}\n                  radioSizeSelectValue={radioSizeSelectValue}\n                  setRadioSizeSelectValue={setRadioSizeSelectValue}\n                />\n                <Message\n                  defaultMaximumMessageBytes={\n                    topicData[\"max.message.bytes\"].value\n                  }\n                  defaultMessageTimestampType={\n                    topicData[\"message.timestamp.type\"]\n                  }\n                  defaultMaxMessageTimestampDiff={\n                    topicData[\"message.timestamp.difference.max.ms\"].value\n                  }\n                />\n                <Log\n                  topicData={topicData}\n                  setTopicData={setTopicData}\n                  defaultDeleteRetentionTime={topicData[\"retention.ms\"].value}\n                  defaultMinCleanbleRatio={\n                    topicData[\"min.cleanable.dirty.ratio\"]\n                  }\n                  defaultMinimumCompactionLagTime={\n                    topicData[\"min.compaction.lag.ms\"].value\n                  }\n                />\n                <Replication />\n                <Cleanup\n                  defaultLogSegmentSize={topicData[\"segment.bytes\"].value}\n                  defaultSegmentTime={topicData[\"segment.ms\"].value}\n                  defaultSegmentJitterTime={\n                    topicData[\"segment.jitter.ms\"].value\n                  }\n                  defaultFileDeleteDelay={\n                    topicData[\"file.delete.delay.ms\"].value\n                  }\n                />\n                <TopicAdvanceIndex\n                  defaultIndexIntervalSize={\n                    topicData[\"index.interval.bytes\"].value\n                  }\n                  defaultSegmentIndexSize={\n                    topicData[\"segment.index.bytes\"].value\n                  }\n                />\n                <Flush\n                  defaultFlushIntervalMessages={\n                    topicData[\"flush.messages\"].value\n                  }\n                  defaultFlushIntervalTime={topicData[\"flush.ms\"].value}\n                />\n              </Form>\n\n              <ActionGroup className=\"kafka-ui--sticky-footer\">\n                <Divider className=\"kafka-ui--divider--FlexShrink\" />\n                <Button\n                  isLoading={isLoading}\n                  onClick={onValidateTopic}\n                  variant=\"primary\"\n                  data-testid={\n                    isCreate\n                      ? \"topicAdvanceCreate-actionCreate\"\n                      : \"tabProperties-actionSave\"\n                  }\n                  isDisabled={topicValidated !== \"default\"}\n                >\n                  {actionText}\n                </Button>\n                <Button\n                  onClick={handleCancel}\n                  variant=\"link\"\n                  data-testid={\n                    isCreate\n                      ? \"topicAdvanceCreate-actionCancel\"\n                      : \"tabProperties-actionCancel\"\n                  }\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </ActionGroup>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import { convert } from \"convert\";\nimport type { CustomRetentionSizeSelect } from \"./types\";\n\nexport const retentionSizeTransformer = (size: CustomRetentionSizeSelect) => {\n  switch (size.unit) {\n    case \"bytes\":\n      return BigInt(size.value);\n    case \"kibibytes\":\n      return convert(BigInt(size.value), \"kibibytes\").to(\"bytes\");\n    case \"mebibytes\":\n      return convert(BigInt(size.value), \"mebibytes\").to(\"bytes\");\n    case \"gibibytes\":\n      return convert(BigInt(size.value), \"gibibytes\").to(\"bytes\");\n    case \"tebibytes\":\n      return convert(BigInt(size.value), \"tebibytes\").to(\"bytes\");\n    case \"unlimited\":\n      return BigInt(size.value);\n  }\n};\n","import type { WizardStep } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  PageSection,\n  PageSectionTypes,\n  PageSectionVariants,\n  ValidatedOptions,\n  Wizard,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type { IWizardFooter } from \"./index\";\nimport {\n  StepMessageRetention,\n  StepPartitions,\n  StepReplicas,\n  StepTopicName,\n  WizardCustomFooter,\n} from \"./index\";\nimport { PartitionLimitWarning } from \"./PartitionLimitWarning\";\nimport { retentionTimeTransformer } from \"./retentionTimeTransformer\";\nimport { TopicAdvancePage } from \"./TopicAdvancePage\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"./types\";\nimport { retentionSizeTransformer } from \"./retentionSizeTransformer\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\n\nexport type CreateTopicWizardProps = {\n  isSwitchChecked: boolean;\n  setIsCreateTopic?: (value: boolean) => void;\n  onCloseCreateTopic: () => void;\n  onSave: (topicData: Topic) => void;\n  initialFieldsValue: Topic;\n  checkTopicName: (value: string) => boolean;\n  availablePartitionLimit: number;\n  availabilityZone: AZ;\n};\n\nexport const CreateTopicWizard: React.FC<CreateTopicWizardProps> = ({\n  isSwitchChecked,\n  onCloseCreateTopic,\n  onSave,\n  initialFieldsValue,\n  checkTopicName,\n  availablePartitionLimit,\n  availabilityZone,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  const [customTimeValue, setCustomTimeValue] = useState<CustomSelect>({\n    unit: \"days\",\n    value: 7,\n  });\n\n  const [customRetentionSizeValue, setCustomRetentionSizeValue] =\n    useState<CustomRetentionSizeSelect>({ unit: \"unlimited\", value: -1 });\n\n  const [topicNameValidated, setTopicNameValidated] =\n    useState<ValidatedOptions>(ValidatedOptions.default);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [invalidText, setInvalidText] = useState<string>(\"\");\n  const [topicData, setTopicData] = useState<Topic>(initialFieldsValue);\n  const [warningModalOpen, setWarningModalOpen] = useState<boolean>(false);\n  const [radioTimeSelectValue, setRadioTimeSelectValue] =\n    useState<RadioSelectType>(\"week\");\n\n  const [radioSizeSelectValue, setRadioSizeSelectValue] =\n    useState<RetentionSizeRadioSelect>(\"unlimited\");\n\n  const closeWizard = () => {\n    onCloseCreateTopic && onCloseCreateTopic();\n  };\n\n  const steps: WizardStep[] = [\n    {\n      name: t(\"topic_name\"),\n      enableNext:\n        topicData?.name.trim() !== \"\" &&\n        topicNameValidated === ValidatedOptions.default,\n      component: (\n        <StepTopicName\n          newTopicData={topicData}\n          onTopicNameChange={setTopicData}\n          topicNameValidated={topicNameValidated}\n          onValidationCheck={setTopicNameValidated}\n          invalidText={invalidText}\n          setInvalidText={setInvalidText}\n        />\n      ),\n    },\n    {\n      name: t(\"partitions\"),\n      canJumpTo: topicData?.name.trim() !== \"\",\n      component: (\n        <StepPartitions\n          newTopicData={topicData}\n          onPartitionsChange={setTopicData}\n          availablePartitionLimit={availablePartitionLimit}\n        />\n      ),\n    },\n    {\n      name: t(\"message_retention\"),\n      canJumpTo: topicData?.name.trim() !== \"\",\n      component: (\n        <StepMessageRetention\n          customRetentionSizeValue={customRetentionSizeValue}\n          setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n          customTimeValue={customTimeValue}\n          setCustomTimeValue={setCustomTimeValue}\n          radioTimeSelectValue={radioTimeSelectValue}\n          setRadioTimeSelectValue={setRadioTimeSelectValue}\n          radioSizeSelectValue={radioSizeSelectValue}\n          setRadioSizeSelectValue={setRadioSizeSelectValue}\n        />\n      ),\n    },\n    {\n      name: t(\"replicas\"),\n      canJumpTo: topicData?.name.trim() !== \"\",\n      component: (\n        <StepReplicas\n          minInSyncReplica={topicData[\"min.insync.replicas\"]}\n          availabilityZone={availabilityZone}\n        />\n      ),\n      nextButtonText: t(\"finish\"),\n    },\n  ];\n\n  const title = t(\"wizard_title\");\n\n  const onTransform = () => {\n    const tranformedValueInMilliseconds =\n      retentionTimeTransformer(customTimeValue);\n    const tranformedValueInBytes = retentionSizeTransformer(\n      customRetentionSizeValue\n    );\n    const transformedTopic: Topic = {\n      ...topicData,\n      \"retention.ms\": {\n        type: \"ms\",\n        value: tranformedValueInMilliseconds || BigInt(-1),\n      },\n      \"retention.bytes\": { type: \"bytes\", value: tranformedValueInBytes },\n    };\n    onSaveTopic(transformedTopic);\n  };\n\n  const onValidate: IWizardFooter[\"onValidate\"] = (onNext) => {\n    if (topicData?.name.length < 1) {\n      setInvalidText(t(\"common:required\"));\n      setTopicNameValidated(ValidatedOptions.error);\n    } else {\n      setIsLoading(true);\n\n      const isTopicNameValid = checkTopicName(topicData?.name);\n      if (!isTopicNameValid) {\n        setIsLoading(false);\n        setInvalidText(t(\"already_exists\", { name: topicData?.name })),\n          setTopicNameValidated(ValidatedOptions.error);\n      } else onNext();\n    }\n  };\n  const onSaveTopic = (transformedTopic: Topic) => {\n    if (topicData.partitions.length >= availablePartitionLimit)\n      setWarningModalOpen(true);\n    else onSave(transformedTopic);\n  };\n  return (\n    <>\n      {isSwitchChecked ? (\n        <>\n          <Divider className=\"kafka-ui--divider--FlexShrink\" />\n          <PageSection\n            variant={PageSectionVariants.light}\n            hasOverflowScroll={true}\n            aria-label={\"TODO\"}\n          >\n            {\n              <TopicAdvancePage\n                isCreate={true}\n                onConfirm={onTransform}\n                handleCancel={onCloseCreateTopic}\n                topicData={topicData}\n                setTopicData={setTopicData}\n                checkTopicName={checkTopicName}\n                availablePartitionLimit={availablePartitionLimit}\n                customRetentionSizeValue={customRetentionSizeValue}\n                setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n                customTimeValue={customTimeValue}\n                setCustomTimeValue={setCustomTimeValue}\n                radioTimeSelectValue={radioTimeSelectValue}\n                setRadioTimeSelectValue={setRadioTimeSelectValue}\n                radioSizeSelectValue={radioSizeSelectValue}\n                setRadioSizeSelectValue={setRadioSizeSelectValue}\n              />\n            }\n            {warningModalOpen && (\n              <PartitionLimitWarning\n                topicData={topicData}\n                onSave={onSaveTopic}\n                isModalOpen={warningModalOpen}\n                setIsModalOpen={setWarningModalOpen}\n              />\n            )}\n          </PageSection>\n        </>\n      ) : (\n        <PageSection\n          variant={PageSectionVariants.light}\n          type={PageSectionTypes.wizard}\n          hasOverflowScroll={true}\n          aria-label={\"TODO\"}\n        >\n          <Wizard\n            navAriaLabel={`${title} steps`}\n            mainAriaLabel={`${title} content`}\n            steps={steps}\n            onClose={closeWizard}\n            onSave={onTransform}\n            data-testid=\"topicBasicCreate-Wizard\"\n            footer={\n              <WizardCustomFooter\n                isLoading={isLoading}\n                onValidate={onValidate}\n                topicNameValidated={topicNameValidated}\n                closeWizard={closeWizard}\n              />\n            }\n          />\n          {warningModalOpen && (\n            <PartitionLimitWarning\n              topicData={topicData}\n              onSave={onSave}\n              isModalOpen={warningModalOpen}\n              setIsModalOpen={setWarningModalOpen}\n            />\n          )}\n        </PageSection>\n      )}\n    </>\n  );\n};\n","import {\n  Form,\n  FormGroup,\n  FormSection,\n  Radio,\n  Stack,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { CustomRetentionMessage } from \"./CustomRetentionMessage\";\nimport { CustomRetentionSize } from \"./CustomRetentionSize\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"./types\";\n\nexport type StepMessageRetentionProps = {\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n  radioTimeSelectValue: RadioSelectType;\n  setRadioTimeSelectValue: (value: RadioSelectType) => void;\n  radioSizeSelectValue: RetentionSizeRadioSelect;\n  setRadioSizeSelectValue: (data: RetentionSizeRadioSelect) => void;\n};\n\nexport const StepMessageRetention: React.FC<StepMessageRetentionProps> = ({\n  customTimeValue,\n  setCustomTimeValue,\n  radioTimeSelectValue,\n  setRadioTimeSelectValue,\n  setCustomRetentionSizeValue,\n  customRetentionSizeValue,\n  radioSizeSelectValue,\n  setRadioSizeSelectValue,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  const handleRetentionMessageSize = (value: RetentionSizeRadioSelect) => {\n    if (value === \"unlimited\") {\n      setRadioSizeSelectValue(value);\n      setCustomRetentionSizeValue({ value: -1, unit: \"unlimited\" });\n    } else {\n      setCustomRetentionSizeValue({ value: 1, unit: \"bytes\" });\n      setRadioSizeSelectValue(value);\n    }\n  };\n\n  const retentionTime = (value: RadioSelectType) => {\n    switch (value) {\n      case \"day\":\n        setCustomTimeValue({ value: 1, unit: \"days\" });\n        break;\n      case \"week\":\n        setCustomTimeValue({ value: 1, unit: \"weeks\" });\n        break;\n      case \"custom\":\n        setCustomTimeValue({ value: 7, unit: \"days\" });\n        break;\n      case \"unlimited\":\n        setCustomTimeValue({ value: -1, unit: \"unlimited\" });\n        break;\n    }\n    setRadioTimeSelectValue(value);\n  };\n\n  return (\n    <>\n      <Form onSubmit={(event) => event.preventDefault()}>\n        <FormSection\n          title={t(\"message_retention\")}\n          id=\"message-retention\"\n          titleElement={\"h2\"}\n        >\n          <TextContent>\n            <Text component={TextVariants.p}>\n              {t(\"message_retention_info\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"message_retention_info_note\")}\n            </Text>\n          </TextContent>\n\n          <FormGroup\n            fieldId=\"form-group-retention-time-in-wizard\"\n            label={t(\"retention_time\")}\n            isRequired\n          >\n            <Stack hasGutter>\n              <Radio\n                isChecked={radioTimeSelectValue === \"day\"}\n                name=\"radioDay\"\n                onChange={() => retentionTime(\"day\")}\n                label=\"A day\"\n                aria-label=\"A day\"\n                id=\"radio-controlled-1\"\n                value={radioTimeSelectValue}\n              />\n              <Radio\n                isChecked={radioTimeSelectValue === \"week\"}\n                name=\"radioWeek\"\n                onChange={() => retentionTime(\"week\")}\n                label=\"A week\"\n                aria-label=\"A week\"\n                id=\"radio-controlled-2\"\n                value={radioTimeSelectValue}\n              />\n              <Radio\n                isChecked={radioTimeSelectValue === \"custom\"}\n                name=\"radioCustomTime\"\n                onChange={() => retentionTime(\"custom\")}\n                label=\"Custom duration\"\n                aria-label=\"custom input\"\n                id=\"radio-controlled-4\"\n                value={radioTimeSelectValue}\n              />\n              {radioTimeSelectValue === \"custom\" && (\n                <CustomRetentionMessage\n                  customTimeValue={customTimeValue}\n                  setCustomTimeValue={setCustomTimeValue}\n                />\n              )}\n              <Radio\n                isChecked={radioTimeSelectValue === \"unlimited\"}\n                name=\"radioUnlimitedTime\"\n                onChange={() => retentionTime(\"unlimited\")}\n                label=\"Unlimited time\"\n                aria-label=\"Unlimited\"\n                id=\"radio-controlled-3\"\n                value={radioTimeSelectValue}\n              />\n            </Stack>\n          </FormGroup>\n          <FormGroup\n            fieldId=\"form-group-retention-size-in-wizard\"\n            label=\"Retention size\"\n          >\n            <Stack hasGutter>\n              <Radio\n                isChecked={radioSizeSelectValue === \"unlimited\"}\n                name=\"radioUnlimitedSize\"\n                onChange={() => handleRetentionMessageSize(\"unlimited\")}\n                label=\"Unlimited size\"\n                aria-label=\"Unlimited\"\n                id=\"radio-controlled-6\"\n                value={radioSizeSelectValue}\n              />\n              <Radio\n                isChecked={radioSizeSelectValue === \"custom\"}\n                name=\"radioCustomSize\"\n                onChange={() => handleRetentionMessageSize(\"custom\")}\n                label=\"Custom size\"\n                aria-label=\"custom size\"\n                id=\"radio-controlled-5\"\n                value={radioSizeSelectValue}\n              />\n              {radioSizeSelectValue === \"custom\" && (\n                <CustomRetentionSize\n                  customRetentionSizeValue={customRetentionSizeValue}\n                  setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n                />\n              )}\n            </Stack>\n          </FormGroup>\n        </FormSection>\n      </Form>\n    </>\n  );\n};\n","import type { NumberInputProps } from \"@patternfly/react-core\";\nimport {\n  Form,\n  FormGroup,\n  FormSection,\n  NumberInput,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\n\nexport type StepPartitionsProps = {\n  newTopicData: Topic;\n  onPartitionsChange: (value: Topic) => void;\n  availablePartitionLimit: number;\n};\n\nexport const StepPartitions: React.FC<StepPartitionsProps> = ({\n  newTopicData,\n  onPartitionsChange,\n  availablePartitionLimit,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  const handleOnPlus = () => {\n    const newPartitions = [\n      ...newTopicData.partitions,\n      { partition: newTopicData.partitions.length },\n    ];\n    onPartitionsChange({\n      ...newTopicData,\n      partitions: newPartitions,\n    });\n  };\n\n  const handleOnMinus = () => {\n    const { partitions } = newTopicData;\n    const newPartitions = partitions.slice(0, partitions.length - 1);\n    onPartitionsChange({\n      ...newTopicData,\n      partitions: newPartitions,\n    });\n  };\n\n  const handlePartitionTouchspinChange: NumberInputProps[\"onChange\"] = (\n    event\n  ) => {\n    const newPartitionCount = Number((event.target as HTMLInputElement).value);\n    const newPartitions = Array.from(\n      { length: newPartitionCount },\n      (_, i) => newTopicData.partitions[i] ?? { partition: i }\n    );\n    onPartitionsChange({\n      ...newTopicData,\n      partitions: newPartitions,\n    });\n  };\n  const onBlur = () => {\n    if (newTopicData.partitions.length < 1) {\n      onPartitionsChange({ ...newTopicData, partitions: [{ partition: 1 }] });\n    }\n  };\n\n  return (\n    <Form>\n      <FormSection title={t(\"partitions\")} id=\"partitions\" titleElement={\"h2\"}>\n        <TextContent>\n          <Text component={TextVariants.p}>{t(\"partition_info\")}</Text>\n          <Text component={TextVariants.small}>{t(\"partition_info_note\")}</Text>\n        </TextContent>\n\n        <FormGroup\n          label=\"Partitions\"\n          fieldId=\"step-topic-name-form\"\n          helperText={\n            newTopicData.partitions.length >= availablePartitionLimit\n              ? t(\"partitions_warning\")\n              : t(\"partition_helper_text\")\n          }\n          validated={\n            newTopicData.partitions.length >= availablePartitionLimit\n              ? \"warning\"\n              : \"default\"\n          }\n          isRequired\n        >\n          <NumberInput\n            onPlus={handleOnPlus}\n            onMinus={handleOnMinus}\n            value={\n              Number(newTopicData.partitions.length) == 0\n                ? \"\"\n                : Number(newTopicData.partitions.length)\n            }\n            inputName=\"input\"\n            onChange={handlePartitionTouchspinChange}\n            widthChars={20}\n            onBlur={onBlur}\n            min={1}\n          />\n        </FormGroup>\n      </FormSection>\n    </Form>\n  );\n};\n","import {\n  Alert,\n  Form,\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\nexport type StepReplicasProps = {\n  //replicationFactor: number;\n  minInSyncReplica: number;\n  availabilityZone: AZ;\n};\n\nexport const StepReplicas: React.FC<StepReplicasProps> = ({\n  minInSyncReplica,\n  availabilityZone,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <Form>\n      <FormSection\n        title={t(\"replicas\")}\n        id=\"replica-section\"\n        titleElement={\"h2\"}\n      >\n        <TextContent>\n          <Text component={TextVariants.p}>{t(\"replicas_info\")}</Text>\n          <Text component={TextVariants.small}>{t(\"replicas_detail\")}</Text>\n        </TextContent>\n        <Alert\n          variant=\"info\"\n          isInline\n          title={\n            availabilityZone == \"multi\"\n              ? t(\"replicas_helper_text_multi_az\")\n              : t(\"replicas_helper_text_single_az\")\n          }\n        />\n\n        {/*<TextWithLabelPopover\n          fieldId=\"replicas\"\n          btnAriaLabel={t(\"replicas\")}\n          fieldLabel={t(\"replicas\")}\n          popoverBody={t(\"replicas_description\")}\n          popoverHeader={t(\"replicas\")}\n        />*/}\n\n        <TextWithLabelPopover\n          fieldId=\"min-insync-replicas\"\n          btnAriaLabel=\"topic detail min-in-sync replica\"\n          fieldLabel=\"Minimum in-sync replicas\"\n          fieldValue={minInSyncReplica.toString()}\n          popoverBody={t(\"min_insync_replicas_description\")}\n          popoverHeader={t(\"min_insync_replicas\")}\n        />\n      </FormSection>\n    </Form>\n  );\n};\n","import {\n  Form,\n  FormGroup,\n  FormSection,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { useValidateTopic } from \"./useValidateTopic\";\n\nexport type StepTopicNameProps = {\n  newTopicData: Topic;\n  onTopicNameChange: (value: Topic) => void;\n  topicNameValidated: ValidatedOptions;\n  onValidationCheck: (value: ValidatedOptions) => void;\n  invalidText: string;\n  setInvalidText: (value: string) => void;\n};\n\nexport const StepTopicName: React.FC<StepTopicNameProps> = ({\n  newTopicData,\n  onTopicNameChange,\n  topicNameValidated,\n  onValidationCheck,\n  invalidText,\n  setInvalidText,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  const { validateName } = useValidateTopic();\n\n  const validationCheck = useCallback(\n    (inputValue: string) => {\n      const errorMessage = validateName(inputValue);\n      if (errorMessage) {\n        setInvalidText(errorMessage);\n        onValidationCheck(ValidatedOptions.error);\n      } else {\n        onValidationCheck(ValidatedOptions.default);\n      }\n    },\n    [setInvalidText, onValidationCheck, validateName]\n  );\n\n  useEffect(() => {\n    validationCheck(newTopicData.name);\n  }, [newTopicData.name, validationCheck]);\n\n  const handleTopicNameChange = (value: string) => {\n    validationCheck(value);\n    onTopicNameChange({ ...newTopicData, name: value });\n  };\n\n  return (\n    <Form onSubmit={(event) => event.preventDefault()}>\n      <FormSection title={t(\"topic_name\")} id=\"topic-name\" titleElement={\"h2\"}>\n        <TextContent>\n          <Text component={TextVariants.p}>{t(\"topic_name_info\")}</Text>\n          <Text component={TextVariants.small}>\n            {t(\"topic_name_info_note\")}\n          </Text>\n        </TextContent>\n        <FormGroup\n          label={t(\"topic_name\")}\n          fieldId=\"step-topic-name-form\"\n          helperText={t(\"topic_name_helper_text\")}\n          helperTextInvalid={invalidText}\n          validated={topicNameValidated}\n          isRequired\n        >\n          <TextInput\n            ouiaId={\"text-input\"}\n            isRequired\n            type=\"text\"\n            id=\"step-topic-name-input\"\n            name=\"step-topic-name\"\n            value={newTopicData.name}\n            onChange={handleTopicNameChange}\n            placeholder={t(\"enter_name\")}\n            validated={topicNameValidated}\n          />\n        </FormGroup>\n      </FormSection>\n    </Form>\n  );\n};\n","import type React from \"react\";\nimport {\n  WizardContextConsumer,\n  Button,\n  WizardFooter,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport interface IWizardFooter {\n  isLoading: boolean;\n  onValidate: (value: () => void) => void;\n  topicNameValidated: ValidatedOptions;\n  closeWizard: () => void;\n}\n\nexport const WizardCustomFooter: React.FC<IWizardFooter> = ({\n  isLoading,\n  onValidate,\n  closeWizard,\n  topicNameValidated,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack }) => {\n          if (activeStep.name == t(\"topic_name\")) {\n            return (\n              <>\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isLoading={isLoading}\n                  onClick={() => onValidate(onNext)}\n                  isDisabled={\n                    topicNameValidated == ValidatedOptions.default\n                      ? false\n                      : true\n                  }\n                  ouiaId={\"button-next\"}\n                >\n                  {t(\"common:next\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-back\"}\n                  variant=\"secondary\"\n                  isDisabled={true}\n                >\n                  {t(\"common:back\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-cancel\"}\n                  variant=\"link\"\n                  onClick={closeWizard}\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </>\n            );\n          }\n\n          if (activeStep.name == \"Replicas\") {\n            return (\n              <>\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={onNext}\n                  ouiaId={\"button-finish\"}\n                >\n                  {t(\"common:finish\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-back\"}\n                  variant=\"secondary\"\n                  onClick={onBack}\n                >\n                  {t(\"common:back\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-cancel\"}\n                  variant=\"link\"\n                  onClick={closeWizard}\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </>\n            );\n          }\n          return (\n            <>\n              <Button\n                ouiaId={\"button-next\"}\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={onNext}\n              >\n                {t(\"common:next\")}\n              </Button>\n              <Button\n                ouiaId={\"button-back\"}\n                variant=\"secondary\"\n                onClick={onBack}\n              >\n                {t(\"common:back\")}\n              </Button>\n              <Button\n                ouiaId={\"button-cancel\"}\n                variant=\"link\"\n                onClick={closeWizard}\n              >\n                {t(\"common:cancel\")}\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n};\n","import type React from \"react\";\nimport { useState } from \"react\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { CreateTopicHead, CreateTopicWizard } from \"../components\";\n\nexport type CreateTopicPageProps = {\n  kafkaName: string;\n  kafkaPageLink: string;\n  kafkaInstanceLink: string;\n  onSave: (topicData: Topic) => void;\n  initialTopicValues: Topic;\n  onCloseCreateTopic: () => void;\n  checkTopicName: (value: string) => boolean;\n  availablePartitionLimit: number;\n  availabilityZone: AZ;\n};\n\nexport const CreateTopic: React.FC<CreateTopicPageProps> = ({\n  kafkaName,\n  kafkaPageLink,\n  kafkaInstanceLink,\n  onSave,\n  initialTopicValues,\n  onCloseCreateTopic,\n  checkTopicName,\n  availablePartitionLimit,\n  availabilityZone,\n}) => {\n  const [isSwitchChecked, setIsSwitchChecked] = useState<boolean>(false);\n\n  return (\n    <>\n      <CreateTopicHead\n        showAllOptions={isSwitchChecked}\n        kafkaName={kafkaName}\n        kafkaInstanceLink={kafkaInstanceLink}\n        kafkaPageLink={kafkaPageLink}\n        onShowAllOptions={setIsSwitchChecked}\n      />\n      <CreateTopicWizard\n        isSwitchChecked={isSwitchChecked}\n        onCloseCreateTopic={onCloseCreateTopic}\n        onSave={onSave}\n        initialFieldsValue={initialTopicValues}\n        checkTopicName={checkTopicName}\n        availablePartitionLimit={availablePartitionLimit}\n        availabilityZone={availabilityZone}\n      />\n    </>\n  );\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { TopicAdvancePage } from \"../components/TopicAdvancePage\";\nimport { PartitionLimitWarning } from \"../components\";\nimport type {\n  CustomSelect,\n  CustomRetentionSizeSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n  TimeUnit,\n} from \"../../\";\nimport { bytesToMemorySize, millisecondsToTime } from \"../../KafkaTopics/types\";\nimport type { CustomRetentionUnit } from \"../components/types\";\nimport { retentionSizeTransformer } from \"../components/retentionSizeTransformer\";\nimport { retentionTimeTransformer } from \"../components/retentionTimeTransformer\";\n\nexport type EditTopicPropertiesProps = {\n  topic: Topic;\n  onCancel: () => void;\n  onSave: (data: Topic) => void;\n  availablePartitionLimit: number;\n};\n\nexport const EditTopicProperties: FunctionComponent<\n  EditTopicPropertiesProps\n> = ({ topic, onCancel, onSave, availablePartitionLimit }) => {\n  const millisecondsToTimeValue = millisecondsToTime(\n    topic[\"retention.ms\"].value\n  );\n  const bytesToSizeValue = bytesToMemorySize(topic[\"retention.bytes\"].value);\n  const [customTimeValue, setCustomTimeValue] = useState<CustomSelect>({\n    unit:\n      topic[\"retention.ms\"].value != BigInt(-1)\n        ? (millisecondsToTimeValue.unit as TimeUnit)\n        : \"days\",\n    value:\n      topic[\"retention.ms\"].value != BigInt(-1)\n        ? Number(millisecondsToTimeValue.value)\n        : 7,\n  });\n\n  const [customRetentionSizeValue, setCustomRetentionSizeValue] =\n    useState<CustomRetentionSizeSelect>({\n      unit:\n        topic[\"retention.bytes\"].value != BigInt(-1)\n          ? (bytesToSizeValue.unit as CustomRetentionUnit)\n          : \"bytes\",\n      value:\n        topic[\"retention.bytes\"].value != BigInt(-1)\n          ? Number(bytesToSizeValue.value)\n          : 1,\n    });\n\n  const [radioTimeSelectValue, setRadioTimeSelectValue] =\n    useState<RadioSelectType>(\n      topic[\"retention.ms\"].value == BigInt(-1) ? \"unlimited\" : \"custom\"\n    );\n\n  const [radioSizeSelectValue, setRadioSizeSelectValue] =\n    useState<RetentionSizeRadioSelect>(\n      topic[\"retention.bytes\"].value == BigInt(-1) ? \"unlimited\" : \"custom\"\n    );\n\n  const [topicData, setTopicData] = useState<Topic>(topic);\n\n  const [warningModalOpen, setWarningModalOpen] = useState<boolean>(false);\n\n  const onSaveTopic = (transformedTopic: Topic) => {\n    if (topicData.partitions.length >= availablePartitionLimit)\n      setWarningModalOpen(true);\n    else onSave(transformedTopic);\n  };\n\n  const onTransform = () => {\n    const tranformedValueInMilliseconds =\n      retentionTimeTransformer(customTimeValue);\n    const tranformedValueInBytes = retentionSizeTransformer(\n      customRetentionSizeValue\n    );\n    const transformedTopic: Topic = {\n      ...topicData,\n      \"retention.ms\": {\n        type: \"ms\",\n        value: tranformedValueInMilliseconds || BigInt(-1),\n      },\n      \"retention.bytes\": { type: \"bytes\", value: tranformedValueInBytes },\n    };\n    onSaveTopic(transformedTopic);\n  };\n\n  return (\n    <PageSection\n      variant={\"light\"}\n      className={\"topic-properties\"}\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n    >\n      <TopicAdvancePage\n        isCreate={false}\n        onConfirm={onTransform}\n        handleCancel={onCancel}\n        topicData={topicData}\n        setTopicData={setTopicData}\n        availablePartitionLimit={availablePartitionLimit}\n        customRetentionSizeValue={customRetentionSizeValue}\n        setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n        customTimeValue={customTimeValue}\n        setCustomTimeValue={setCustomTimeValue}\n        radioTimeSelectValue={radioTimeSelectValue}\n        setRadioTimeSelectValue={setRadioTimeSelectValue}\n        radioSizeSelectValue={radioSizeSelectValue}\n        setRadioSizeSelectValue={setRadioSizeSelectValue}\n      />\n      {warningModalOpen && (\n        <PartitionLimitWarning\n          topicData={topicData}\n          onSave={onSave}\n          isModalOpen={warningModalOpen}\n          setIsModalOpen={setWarningModalOpen}\n        />\n      )}\n    </PageSection>\n  );\n};\n","import {\n  Button,\n  Divider,\n  Form,\n  FormSection,\n  PageGroup,\n  PageSection,\n  Sidebar,\n  SidebarContent,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport {\n  formattedRetentionSize,\n  formattedRetentionTime,\n} from \"../../KafkaTopics/types\";\nimport { TextWithLabelPopover } from \"../components\";\nimport { Cleanup } from \"../components/Cleanup\";\nimport { Flush } from \"../components/Flush\";\nimport { Message } from \"../components/Message\";\nimport { Replication } from \"../components/Replication\";\nimport { TopicAdvanceIndex } from \"../components/TopicAdvanceIndex\";\nimport { TopicAdvanceJumpLinks } from \"../components/TopicAdvanceJumpLinks\";\n\nexport type TopicViewDetailProps = {\n  topic: Topic;\n  deleteTopicHref: string;\n  updateTopicHref: string;\n};\n\nexport const TopicProperties: React.FunctionComponent<TopicViewDetailProps> = ({\n  topic,\n  deleteTopicHref,\n  updateTopicHref,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  return (\n    <PageSection\n      variant={\"light\"}\n      className={\"topic-properties\"}\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n    >\n      <Sidebar hasGutter>\n        <TopicAdvanceJumpLinks canHaveDelete={true} />\n        <SidebarContent>\n          <PageGroup\n            hasOverflowScroll={true}\n            aria-label={\"TODO\"}\n            id=\"topic-detail-view\"\n            className={\"pf-u-mb-4xl\"}\n          >\n            <PageSection padding={{ default: \"noPadding\" }}>\n              <Split>\n                <SplitItem isFilled>\n                  <Form id=\"topic-form\">\n                    <FormSection\n                      title={t(\"core_configuration\")}\n                      id=\"core-configuration\"\n                      titleElement={\"h2\"}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className=\"section-info\"\n                        >\n                          {t(\"core_config_info\")}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"topic-name\"\n                        btnAriaLabel={t(\"topic_name\")}\n                        fieldLabel={t(\"topic_name\")}\n                        fieldValue={topic.name}\n                        popoverBody={t(\"topic_name_description\")}\n                        popoverHeader={t(\"topic_name\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"partitions\"\n                        btnAriaLabel={t(\"partitions\")}\n                        fieldLabel={t(\"partitions\")}\n                        fieldValue={topic.partitions.length.toString()}\n                        popoverBody={t(\"partitions_description\")}\n                        popoverHeader={t(\"partitions\")}\n                      />\n\n                      {/*<TextWithLabelPopover\n                        fieldId=\"replicas\"\n                        btnAriaLabel={t(\"replicas\")}\n                        fieldLabel={t(\"replicas\")}\n                        fieldValue={}\n                        popoverBody={t(\"replicas_description\")}\n                        popoverHeader={t(\"replicas\")}\n                      />*/}\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-insync-replicas\"\n                        btnAriaLabel={t(\"min_insync_replicas\")}\n                        fieldLabel={t(\"min_insync_replicas\")}\n                        fieldValue={topic[\"min.insync.replicas\"].toString()}\n                        popoverBody={t(\"min_insync_replicas_description\")}\n                        popoverHeader={t(\"min_insync_replicas\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"retention-time\"\n                        btnAriaLabel={t(\"retention_time\")}\n                        fieldLabel={t(\"retention_time\")}\n                        fieldValue={formattedRetentionTime(\n                          topic[\"retention.ms\"].value\n                        )}\n                        popoverBody={t(\"retention_time_description\")}\n                        popoverHeader={t(\"retention_time\")}\n                        showUnlimited={true}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"retention-size\"\n                        btnAriaLabel={t(\"retention_size\")}\n                        fieldLabel={t(\"retention_size\")}\n                        fieldValue={formattedRetentionSize(\n                          topic[\"retention.bytes\"].value\n                        )}\n                        popoverHeader={t(\"retention_size\")}\n                        popoverBody={t(\"retention_size_description\")}\n                        showUnlimited={true}\n                      />\n                    </FormSection>\n                    <Message\n                      defaultMaximumMessageBytes={\n                        topic[\"max.message.bytes\"].value\n                      }\n                      defaultMessageTimestampType={\n                        topic[\"message.timestamp.type\"]\n                      }\n                      defaultMaxMessageTimestampDiff={\n                        topic[\"message.timestamp.difference.max.ms\"].value\n                      }\n                    />\n                    <FormSection title={t(\"log\")} id=\"log\" titleElement={\"h2\"}>\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t(\"log_section_info\")}\n                          <Text\n                            component={TextVariants.small}\n                            className=\"section-info-note\"\n                          >\n                            {t(\"log_section_info_note\")}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"cleanup-policy\"\n                        btnAriaLabel={t(\"cleanup_policy\")}\n                        fieldLabel={t(\"cleanup_policy\")}\n                        fieldValue={topic[\"cleanup.policy\"]}\n                        popoverBody={t(\"cleanup_policy_description\")}\n                        popoverHeader={t(\"cleanup_policy\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"delete-retention-time\"\n                        btnAriaLabel={t(\"delete_retention_time\")}\n                        fieldLabel={t(\"delete_retention_time\")}\n                        fieldValue={topic[\n                          \"delete.retention.ms\"\n                        ].value.toString()}\n                        popoverBody={t(\"delete_retention_time_description\")}\n                        popoverHeader={t(\"delete_retention_time\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-cleanable-ratio\"\n                        btnAriaLabel={t(\"min_cleanable_ratio\")}\n                        fieldLabel={t(\"min_cleanable_ratio\")}\n                        fieldValue={topic[\n                          \"min.cleanable.dirty.ratio\"\n                        ].toString()}\n                        popoverBody={t(\"min_cleanable_ratio_description\")}\n                        popoverHeader={t(\"min_cleanable_ratio\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-compaction-lag-time\"\n                        btnAriaLabel={t(\"min_compaction_lag_time\")}\n                        fieldLabel={t(\"min_compaction_lag_time\")}\n                        fieldValue={topic[\n                          \"min.compaction.lag.ms\"\n                        ].value.toString()}\n                        popoverBody={t(\"min_compaction_lag_time_description\")}\n                        popoverHeader={t(\"min_compaction_lag_time\")}\n                      />\n                    </FormSection>\n                    <Replication />\n                    <Cleanup\n                      defaultLogSegmentSize={topic[\"segment.bytes\"].value}\n                      defaultSegmentTime={topic[\"segment.ms\"].value}\n                      defaultSegmentJitterTime={\n                        topic[\"segment.jitter.ms\"].value\n                      }\n                      defaultFileDeleteDelay={\n                        topic[\"file.delete.delay.ms\"].value\n                      }\n                    />\n                    <TopicAdvanceIndex\n                      defaultIndexIntervalSize={\n                        topic[\"index.interval.bytes\"].value\n                      }\n                      defaultSegmentIndexSize={\n                        topic[\"segment.index.bytes\"].value\n                      }\n                    />\n                    <Flush\n                      defaultFlushIntervalMessages={\n                        topic[\"flush.messages\"].value\n                      }\n                      defaultFlushIntervalTime={topic[\"flush.ms\"].value}\n                    />\n                  </Form>\n\n                  <Divider className=\"pf-u-mt-2xl pf-u-mb-2xl\" />\n\n                  <TextContent>\n                    <Text component={TextVariants.h2} id=\"delete\">\n                      {t(\"delete_topic_irreversible\")}\n                    </Text>\n                    <Text component={TextVariants.p} className=\"section-info\">\n                      {t(\"delete_topic_info\")}\n                    </Text>\n                    <Button\n                      variant=\"danger\"\n                      data-testid=\"tabProperties-actionDelete\"\n                      component={(props) => (\n                        <Link {...props} to={deleteTopicHref}>\n                          {t(\"delete_topic\")}\n                        </Link>\n                      )}\n                    />\n                  </TextContent>\n                </SplitItem>\n                <SplitItem>\n                  <Button\n                    variant=\"primary\"\n                    data-testid=\"tabProperties-actionEdit\"\n                    component={(props) => (\n                      <Link {...props} to={updateTopicHref}>\n                        {t(\"edit_props\")}\n                      </Link>\n                    )}\n                  />\n                </SplitItem>\n              </Split>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { FC } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { OwnerAccount } from \"./types\";\n\nexport type SelectOwnerProps = {\n  isDisabled: boolean;\n  accounts: OwnerAccount[];\n  owner: string | undefined;\n  onChangeOwner: (owner: string | undefined) => void;\n};\n\nexport const SelectOwner: FC<SelectOwnerProps> = ({\n  isDisabled,\n  accounts,\n  owner,\n  onChangeOwner,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isExpanded: boolean) => {\n    setIsOpen(isExpanded);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, owner) => {\n    onChangeOwner(owner as string);\n    setIsOpen(false);\n  };\n\n  function selectOptions(filter = \"\") {\n    const filterRegExp = new RegExp(filter, \"i\");\n    const filteredAccounts =\n      filter !== \"\"\n        ? accounts.filter(\n            (account) =>\n              filterRegExp.test(account.displayName) ||\n              filterRegExp.test(account.id)\n          )\n        : accounts;\n    return filteredAccounts.map((account) => (\n      <SelectOption\n        key={account.id}\n        value={account.id}\n        description={account.displayName}\n      >\n        {account.id}\n      </SelectOption>\n    ));\n  }\n\n  return (\n    <Select\n      id=\"change-permission-owner-select\"\n      variant={SelectVariant.typeahead}\n      onToggle={onToggle}\n      isDisabled={isDisabled}\n      isOpen={isOpen}\n      placeholderText={t(\"select_user_account\")}\n      isCreatable={true}\n      createText={t(\"change_owner_create_text\")}\n      menuAppendTo=\"parent\"\n      maxHeight={400}\n      selections={owner}\n      onSelect={onSelect}\n      onFilter={(_, value) => selectOptions(value)}\n    >\n      {selectOptions()}\n    </Select>\n  );\n};\n","import {\n  Alert,\n  AlertVariant,\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  Skeleton,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { SelectOwner } from \"./SelectOwner\";\nimport type { ChangeOwnerErrorMessage, OwnerAccount } from \"./types\";\n\nexport type ChangeKafkaOwnerProps = {\n  currentOwner: string;\n  accounts: OwnerAccount[] | undefined;\n  savingState: \"idle\" | \"saving\" | ChangeOwnerErrorMessage;\n  onConfirm: (newOwner: string) => void;\n  onCancel: () => void;\n};\n\nexport const ChangeKafkaOwner: FunctionComponent<ChangeKafkaOwnerProps> = ({\n  currentOwner,\n  accounts,\n  savingState,\n  onConfirm,\n  onCancel,\n}) => {\n  const { t } = useTranslation([\"kafka\", \"common\"]);\n  const [account, setAccount] = useState<string | undefined>();\n  const submittedAccount = useRef<string>();\n\n  const isSaving = savingState === \"saving\";\n\n  const onConfirmOwner = useCallback(() => {\n    if (account) {\n      submittedAccount.current = account;\n      onConfirm(account);\n    }\n  }, [onConfirm, account]);\n\n  const renderAlert = () => {\n    switch (savingState) {\n      case \"invalid-user\":\n        return (\n          <Alert\n            variant={AlertVariant.danger}\n            aria-live=\"polite\"\n            isInline\n            title={t(\"new_owner_does_not_exist_title\")}\n          >\n            {t(\"new_owner_does_not_exist_message\", {\n              newOwner: submittedAccount.current,\n            })}\n          </Alert>\n        );\n      case \"unknown-error\":\n        return (\n          <Alert\n            variant={AlertVariant.danger}\n            aria-live=\"polite\"\n            isInline\n            title={t(\"can_not_change_owner_title\")}\n          >\n            {t(\"owner_transfer_failed_message\", {\n              name: currentOwner,\n            })}\n          </Alert>\n        );\n    }\n  };\n  return (\n    <Modal\n      id=\"change-owner-modal\"\n      title={t(\"change-owner-title\")}\n      isOpen={true}\n      onClose={onCancel}\n      variant={\"medium\"}\n      position=\"top\"\n      actions={[\n        <Button\n          id=\"confirm-button\"\n          key=\"changeowner\"\n          variant=\"primary\"\n          isDisabled={isSaving}\n          onClick={onConfirmOwner}\n        >\n          {t(\"change-owner-button\")}\n        </Button>,\n        <Button\n          id=\"cancel-button\"\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={onCancel}\n          isDisabled={isSaving}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={(e) => e?.preventDefault()}>\n        {renderAlert()}\n        <FormGroup fieldId=\"Current-owner-name\" label={t(\"current_owner\")}>\n          {currentOwner}\n        </FormGroup>\n        <FormGroup fieldId=\"New-owner-name\" label={t(\"new_owner\")}>\n          {accounts ? (\n            <SelectOwner\n              isDisabled={isSaving}\n              accounts={accounts}\n              owner={account}\n              onChangeOwner={setAccount}\n            />\n          ) : (\n            <Skeleton width={\"100%\"} />\n          )}\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans } from \"react-i18next\";\n\nexport type TermsAndConditionsDialogProps = {\n  isOpen: boolean;\n  disableFocusTrap?: boolean;\n  appendTo?: () => HTMLElement;\n  onViewTerms: () => void;\n  onCancel: () => void;\n};\n\nexport const TermsAndConditionsDialog: VoidFunctionComponent<\n  TermsAndConditionsDialogProps\n> = ({ isOpen, disableFocusTrap, appendTo, onViewTerms, onCancel }) => {\n  const { t } = useTranslation(\"terms-and-conditions\");\n\n  return (\n    <Modal\n      aria-label={t(\"title\")}\n      ouiaId={\"terms-and-conditions-dialog\"}\n      variant={ModalVariant.small}\n      isOpen={isOpen}\n      title={t(\"title\")}\n      onClose={onCancel}\n      appendTo={appendTo}\n      disableFocusTrap={disableFocusTrap}\n      actions={[\n        <Button\n          key={\"confirm__button\"}\n          variant={ButtonVariant.primary}\n          onClick={onViewTerms}\n          ouiaId={\"view_terms_and_conditions\"}\n        >\n          {t(\"view_button\")}\n        </Button>,\n        <Button\n          key={\"cancel__button\"}\n          variant={ButtonVariant.link}\n          onClick={onCancel}\n          ouiaId={\"cancel\"}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Trans\n        ns={\"terms-and-conditions\"}\n        i18nKey={\"body\"}\n        components={{\n          bold: <strong />,\n          br: <br />,\n        }}\n      />\n    </Modal>\n  );\n};\n"],"names":["ControlPlaneRouteRoot","NewInstanceSegment","TermsAndConditionsSegment","ControlPlaneSpecialSegments","ControlPlaneRoutePath","ControlPlaneNewInstancePath","ControlPlaneTermsAndConditionsPath","ControlPlaneDeleteInstancePath","ControlPlaneChangeOwnerPath","DrawerContext","createContext","DrawerProvider","children","match","useRouteMatch","Error","selectedInstance","params","id","includes","undefined","section","instance","useState","isExact","isExpanded","setIsExpanded","activeTab","setActiveTab","onClose","useRef","tokenEndPointUrl","toggleExpanded","useCallback","newValue","prev","current","useEffect","value","useMemo","Provider","onTabChange","tokenEndpointUrl","useDrawer","context","useContext","RedirectOnGateError","redirectUrl","key","useLocation","ErrorBoundary","resetKeys","fallbackRender","RedirectAndResetError","reset","Redirect","to","useUserControlGate","auth","useChrome","getUser","user","username","identity","isOrgAdmin","is_org_admin","userData","suspense","KafkaInstancesRoute","getUrlForInstance","history","useHistory","setActiveQuickStart","QuickStartContext","replace","labels","usePaginationSearchParams","page","perPage","setPagination","setPaginationQuery","resetPaginationQuery","namesChips","useURLSearchParamsChips","ownersChips","statusesChips","useSortableSearchParams","fields","isColumnSortable","sort","sortDirection","data","name","chips","owner","status","direction","onClearAllFilters","clearChained","openDrawer","tab","onDetailsClick","onConnectionsClick","onCreate","push","onDelete","onChangeOwner","onQuickstartGuide","instances","itemCount","count","names","owners","statuses","onPageChange","onSearchName","add","onRemoveNameChip","remove","onRemoveNameChips","clear","onSearchOwner","onRemoveOwnerChip","onRemoveOwnerChips","onSearchStatus","toggle","onRemoveStatusChip","onRemoveStatusChips","isRowSelected","onDetails","onConnection","onClickConnectionTabLink","onClickSupportLink","onInstanceLinkClick","canHaveInstanceLink","canOpenConnection","row","canChangeOwner","canDelete","isUserOwnerOrAdmin","CreateKafkaInstanceRoute","instancesHref","callbacks","getUsername","Promise","reject","checkDeveloperAvailabilityQuery","standardQuotaQuery","providersWithRegionsQuery","getProvidersInfo","getProviderRegionsSizes","checkDeveloperAvailability","onAvailable","onUsed","onUnavailable","checkStandardQuota","onQuotaAvailable","onNoQuotaAvailable","onOutOfQuota","hasTrialQuota","remainingPrepaidQuota","remainingMarketplaceQuota","marketplaceSubscriptions","quota","fetchProvidersWithRegions","plan","providers","getStandardSizes","provider","region","providersInfo","providerInfo","find","p","getTrialSizes","standardSizes","length","displayName","trialSizes","standard","trial","useCreateKafkaCallbacks","createKafkaInstance","qsContext","areTermsAccepted","useSelfTermsReviewGate","onClickKafkaOverview","onClickQuickStart","onSuccess","onError","mutateAsync","onCancel","CreateKafkaInstance","isModalOpen","onClickContactUs","onLearnHowToAddStreamingUnits","onLearnMoreAboutSizes","subscriptionOptionsHref","document","location","href","appendTo","getElementById","body","useControlPlaneGate","DeleteKafkaInstanceRoute","isDeleting","instanceName","TermsAndConditionsRoute","createHref","cancelHref","selfTermsReview","baselinedCreateHref","window","origin","pathname","baselinedCancelHref","termsUrl","onViewTerms","isOpen","ChangeOwnerRoute","accounts","updateInstance","onConfirm","newOwner","mutate","updates","savingState","isLoading","isError","error","type","currentOwner","map","a","ControlPlaneRoutes","Route","path","exact","DataPlaneRoutePath","DataPlaneTopicRoutePath","DataPlaneConsumerGroupRoutePath","DataPlaneTopicConsumerGroupRoutePath","DataPlanePermissionsRoutePath","useDataPlaneGate","DataPlaneHeaderConnected","activeSection","url","sectionsHref","dashboard","topics","consumer","permissions","settings","PermissionsRoute","managePermissionsHref","editPermissionsHref","dispatch","useDispatch","acls","adminUrl","serviceAccounts","userAccounts","userAccount","email","principalType","serviceAccountList","serviceAccount","allAccounts","onDeleteSelected","rowIndex","rowToDelete","groups","instanceId","acl","patternType","resource","permissionType","permission","principal","account","resourceName","operation","resourceType","_","message","addNotification","variant","title","dismissable","onManagePermissionsActionItem","onManagePermission","onManagePermissions","onPerPageChange","TopicsRoute","topicChips","filter","onDeleteTopic","topicName","onEditTopic","getUrlFortopic","onEdit","onSearchTopic","onCreateTopic","onRemoveTopicChip","onRemoveTopicChips","SettingsRoute","onSubmitReAuthentication","reauthenticationEnabled","reauthentication_enabled","request","DashboardRoute","hasUserAlreadyClosedAlert","setHasUserAlreadyClosedAlert","onAlertClose","queryInstance","queryKpisMetrics","queryInstanceMetrics","queryTopicMetrics","queryTopics","getMetricsKpi","kpis","topicPartitionsLimit","maxPartitions","getKafkaInstanceMetrics","interval","duration","all","metrics","diskSpaceLimit","max_data_retention_size","bytes","connectionsLimit","connections","connectionRateLimit","connectionRate","getTopicsMetrics","selectedTopic","kafkaTopics","t","ConsumerGroupsRoute","groupId","consumerName","onDeletConsumerGroup","instanceConsumerGroupsHref","onViewPartition","onClickResetOffset","consumers","onSearchConsumer","onRemoveConsumerChip","onRemoveConsumerChips","onViewResetOffset","useTopicGate","topic","DataPlaneTopicHeaderConnected","instanceDetailsHref","instanceTopicsHref","tabsHref","messages","properties","schemas","instanceDetailHref","TopicConsumerGroupsRoute","TopicMessagesGroupsRoute","kafkaTopicMessagesFetchQuery","getMessages","partitions","TopicPropertiesRoute","deleteTopicHref","updateTopicHref","TopicSchemasRoute","chrome","processor2","entry","e","basename","srs","getToken","AuthContext","ConfigContext","apiBasePath","I18nProvider","lng","resources","en","common","srsTemporaryFixMe","debug","ScalprumComponent","appName","module","scope","ErrorComponent","processor","renderSchema","registry","version","registryId","useConsumerGroupGate","consumerGroup","consumerGroupId","ConsumerGroupDeleteRoute","onDeleteConsumer","state","ConsumerGroupResetOffsetRoute","onConfirmResetOffset","offset","customOffsetValue","Array","from","Set","onClickClose","ConsumerGroupViewPartitionRoute","viewPartitionConsumerGroupHref","consumerGroupByTopic","activeMembers","activeConsumers","partitionsWithLag","laggingPartitions","onSelectDeleteConsumerGroup","onSelectResetOffsetConsumerGroup","useTopicConsumerGroupGate","TopicConsumerGroupDeleteRoute","instanceTopicConsumerGroupsHref","TopicConsumerGroupResetOffsetRoute","TopicConsumerGroupViewPartitionRoute","viewTopicPartitionConsumerGroupHref","DeleteKafkaTopic","props","useTranslation","DeleteModal","confirmationValue","Trans","ns","i18nKey","components","values","TopicDeleteRoute","TopicEditPropertiesRoute","updateTopic","onSave","topicData","availablePartitionLimit","PermissionsEditRoute","consumerGroups","consumerGroupsList","topicsList","updatePermissions","onSaveAcls","aclPermission","deletedPermissions","aclData","aclToDelete","existingAcls","aclsForSelectedAccount","selectedAccount","kafkaName","PermissionsSelectAccountRoute","filteredAccounts","onNext","TopicCreateRoute","createTopic","availabilityZone","az","checkTopicName","onCloseCreateTopic","initialTopicValues","partition","kafkaPageLink","kafkaInstanceLink","topicPropertyHref","topicHref","instanceTopicConsumerGroupHref","permissionsModalHref","DataPlaneRoutes","Switch","render","InvalidObject","OverviewRoute","Routes","memo","updateDocumentTitle","on","register","notifications","unregister","event","console","dir","navId","basePath","getPath","QuickstartLoader","loaded","setLoaded","quickStarts","AssetsContext","item","guides","showDrafts","onLoad","qs","set","init","errorDescriptionKey","middleware","developerDefaults","BigInt","preallocate","standardDefaults","topicTransformerFactory","d","JSON","stringify","cm","Object","fromEntries","config","c","configValueToMilliseconds","configValueToBytes","configValueToBoolean","configValueToNumber","defaultIfEmpty","trim","defaultIfError","parseInt","v","parse","convertToTopicSettings","inputObj","keyValuePairs","configEntries","toString","numPartitions","CreatingStatuses","ReadyStatuses","DegradedStatuses","SuspendingStatuses","SuspendedStatuses","DeletingStatuses","ResumingStatuses","SimplifiedStatuses","creating","ready","degraded","suspended","deleting","resuming","suspending","consumerGroupTransformer","stateMapping","lag","memberId","logEndOffset","unassignedPartitions","DEAD","EMPTY","STABLE","UNKNOWN","COMPLETING_REBALANCE","PREPARING_REBALANCE","fetchKafkaKpis","getMetricsByInstantQuery","topicPartitions","items","forEach","metric","fetchKafkaMetrics","getMetricsByRangeQuery","response","safeMetrics","m","persistentvolumeclaim","usedDiskSpaceMetrics","connectionAttemptRateMetrics","clientConnectionsMetrics","addAggregatedValuesTo","timestamp","valuesToQuery","field","comparison","join","uiColumnMapping","createdAt","fetchKafkas","dataMapper","getKafkas","search","flatMap","s","Boolean","q","filtersToSearch","res","rawInstances","total","apiSizeToComponentSize","isDisabled","apiSize","display_name","quota_consumed","ingress","ingress_throughput_per_sec","egress","egress_throughput_per_sec","storage","Math","round","total_max_connections","max_connection_attempts_per_sec","max_partitions","messageSize","max_message_size","maturity_status","trialDurationHours","lifespan_seconds","fetchProviderRegions","getCloudProviderRegions","instanceType","enabled","capacity","some","instance_type","r","max_capacity_reached","available_sizes","isStandardQuota","related_resources","billing_model","isMarketplaceQuota","fetchStandardQuota","api","organizationId","quotaResponse","statusText","standardQuotas","resource_name","product","prepaidQuota","marketplaceQuotas","allowed","consumed","reduce","agg","unaggregatedSubscriptions","cloud_accounts","subscriptionMarketplaces","cloud_provider_id","marketplace","subscriptions","cloud_account_id","fetchTopics","getTopics","topicTransformer","fetchTopicsMetrics","filteredMetrics","bytesIncoming","bytesOutgoing","bytesPerPartition","incomingMessageRate","addAggregatedTotalBytesTo","metricsTopics","fetchUserAccounts","getUserAccounts","fullObject","first_name","last_name","fetchSelfTermsReview","event_code","site_code","terms_required","terms_available","redirect_url","URL","searchParams","ReactQueryDevtoolsProduction","lazy","then","default","ReactQueryDevtools","ApiContext","ApiProvider","showDevTools","QueryClientProvider","client","initialIsOpen","Suspense","fallback","useApiConfiguration","masQueries","_root","organization","entity","available","subentity","developerAvailability","standardAvailability","kafkaQueries","list","details","topicMessages","kpi","providerQueries","limits","developer","accessToken","kafkasFleet","DefaultApi","Configuration","token","PrincipalApi","SecurityApi","AppServicesApi","TopicsApi","GroupsApi","AclsApi","records","RecordsApi","useConsumerGroups","refetchInterval","useQuery","queryKey","queryFn","getConsumerGroups","fetchConsumerGroups","args","kafkaRequestToKafkaInstanceEnhanched","developerPlanInstanceLimits","standardPlanInstanceLimits","enhancedInstance","billing","created_at","Date","toISOString","expiryDate","expires_at","cloud_provider","size","accepted","preparing","provisioning","failed","deprovision","updatedAt","updated_at","bootstrapUrl","bootstrap_server_host","admin_api_server_url","multi_az","marketplaceForBilling","ms","billing_cloud_account_id","subscription","warn","thisInstanceLimits","l","size_id","APIErrorCodes","useKafkaInstanceTransformer","getStandardQuotaQuery","useStandardQuotaFetchQuery","useProvidersWithRegionsFetchQuery","useProviderRegionSizesFetchQuery","standardQuota","standardPlanLimitsQuery","developerPlanLimitsQuery","standardPlanLimits","developerPlanLimits","useKafka","getKafkaById","useKafkas","queryClient","i","setQueryData","useTopic","getTopic","fetchTopic","useTopics","useUserAccounts","listPrincipals","useConsumerGroup","getConsumerGroupById","fetchConsumerGroup","useAcls","getAcls","fetchPermissions","useServiceAccounts","getServiceAccounts","fetchServiceAccounts","useUser","useSSOProvider","fetch","json","token_url","useSelfTermsReview","apiAuthorizationsV1SelfTermsReviewPost","useDeveloperInstanceAvailabilityFetchQuery","fetchQuery","staleTime","Infinity","k","useKafkaFetchQuery","useKafkaKpisFetchQuery","useKafkaMetricsFetchQuery","useTopicsMetricsFetchQuery","useTopicsFetchQuery","useMessagesFetchQuery","consumeRecords","limit","headers","fetchMessages","kms","regions","regionInfo","availableSizes","sizes","instance_types","bind","fetchProviderRegionSizes","getInstanceTypesByCloudProviderAndRegion","getCloudProviders","allProviders","firstProvider","defaultProvider","skipCache","ams","fetchOrganization","apiAccountsMgmtV1CurrentAccountGet","apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet","useCreateKafkaMutation","useMutation","kafkaRequest","sizeId","createKafka","isServiceApiError","code","DUPLICATE_INSTANCE_NAME","INTERNAL_CAPACITY_ERROR","INSUFFICIENT_QUOTA","invalidateQueries","UNAUTHORIZED_USER","TRIAL_USED","FAILED_TO_CHECK_QUOTA","OWNER_DOES_NOT_EXIST","useDeleteKafkaMutation","deleteKafkaById","useDeleteTopicMutation","deleteTopic","useUpdateKafkaMutation","updateKafkaById","getErrorCode","reason","AxiosError","useDeleteConsumerGroupMutation","deleteConsumerGroupById","useResetConsumerGroupMutation","resetConsumerGroupOffset","useDeletePermissionsMutation","deleteAcls","useUpdatePermissionsMutation","createAcl","useCreateTopicMutation","useUpdateTopicMutation","KafkaInstancesSortableColumns","KafkaTopicsSortableColumns","TopicOrderKey","KafkaConsumerGroupSortableColumns","ConsumerGroupOrderKey","REACT_QUERY_DEVTOOLS","METRICS_LAG_ALERT","isReactQueryDevToolsEanbled","localStorage","getItem","metricsIsLagAlertsDismissed","metricsDismissLagAlerts","setItem","ConsumerGroupPopover","description","Popover","headerContent","bodyContent","OutlinedQuestionCircleIcon","ConsumerGroupStateLabel","ConsumerGroupByKafka","columnNames","consumer_id","current_offset","log_end_offset","offset_lag","Stack","hasGutter","DescriptionList","columnModifier","lg","className","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","TableComposable","TableVariant","Thead","noWrap","Tr","Th","width","Tbody","Td","dataLabel","ConsumerGroupByTopic","ConsumerGroupDetails","ConsumerGroupEmptyState","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","CubesIcon","Title","headingLevel","TitleSizes","EmptyStateBody","OffsetSelect","onChange","setIsOpen","offsetValueOption","absolute","latest","earliest","Select","toggleAriaLabel","onToggle","onSelect","selection","SelectVariant","placeholderText","selections","menuAppendTo","entries","label","SelectOption","TopicSelect","index","ConsumerGroupResetOffset","disableFocusTrap","setSelectedTopic","selectedOffset","setSelectedOffset","setcustomOffsetValue","isResetAccepted","setIsResetAccepted","selectedConsumer","setSelectedConsumer","isDisconnected","consumerList","isResetOffsetDisabled","tableColumns","clientId","new_offset","areAllConsumerSelected","isConsumerSelected","onResetOffset","Modal","ModalVariant","showClose","position","actions","Button","onClick","StackItem","Form","isHorizontal","FormGroup","fieldId","TextInput","readOnlyVariant","Alert","isInline","select","_event","isSelecting","onSelectAllConsumer","isSelected","String","Checkbox","isChecked","DeleteConsumerGroup","isConsumerConnected","Text","ConsumerGroupDrawer","dropdownItems","DropdownItem","panelContent","DrawerPanelContent","widths","DrawerHead","TextContent","component","TextVariants","DrawerActions","Dropdown","KebabToggle","isPlain","DropdownPosition","DrawerCloseButton","DrawerPanelBody","Drawer","DrawerContent","DrawerContentBody","useKafkaLabels","statusesSimplified","aws","gcp","azure","providerRegions","useTopicLabels","useConsumerGroupLabels","Columns","ConsumerGroups","isFiltered","PageSection","isFilled","hasOverflowScroll","TableView","tableOuiaId","ariaLabel","columns","renderHeader","column","info","popover","popoverProps","renderCell","renderActions","ActionsColumn","filters","onSearch","onRemoveChip","onRemoveGroup","validate","test","errorMessage","emptyStateNoData","emptyStateNoResults","EmptyStateNoResults","ControlPlaneHeader","PageSectionVariants","hasShadowBottom","stickyOnBreakpoint","Level","LevelItem","onProviderChange","selectedProvider","defaultRegion","capabilities","form","creationError","tsTypes","predictableActionArguments","schema","events","services","initial","states","verifyAvailability","always","cond","target","overQuota","tags","instanceUnavailable","regionsUnavailable","configuring","unsubmitted","submitted","create","invalid","valid","fieldInvalid","submit","saving","createSuccess","createError","saved","empty","nameChange","providerChange","regionChange","idle","disabled","waitingForQuota","loading","invoke","src","onDone","sizeChange","billingChange","prepaidOnly","singleSubscription","onlySubscriptions","selectSubscription","prepaidAndSubscriptions","prepaid","selectPrepaid","setInitialContext","availableProviders","setName","setProvider","setRegion","setSize","setSizes","smallestSize","b","resetCreationErrorMessage","_context","setCreationError","triggerSave","triggerSubmit","triggerBillingChange","setBillingToPrepaid","setBillingToSubscription","unsetSubscription","guards","isOverQuota","instanceAvailability","isInstanceUnavailable","isRegionsUnavailable","nameIsEmpty","nameIsValid","providerIsValid","selectedProviderInfo","regionIsValid","noProviderOrRegion","noSizes","emptySizes","sizeIsDisabled","billingRequiredButNotSelected","meta","hasTag","sizeIsOverQuota","availableQuota","didProviderChange","didRegionChange","didSizeChange","onlyPrepaid","matchesSelectedProviderOrRHMarketplaceAndHasQuota","hasPrepaidQuota","noSelectedProvider","trialUsed","trialUnavailable","isTrialUsed","isTrialUnavailable","noProviderAndRegion","save","complete","setDeveloperAvailable","setDeveloperUnavailable","setDeveloperUsed","setStandardAvailable","setStandardOutOfQuota","setStandardUnavailable","setProviders","setProvidersOrRegionsUnavailable","setCapabilities","notifyCreateErrorToStandardPlan","notifyCreateErrorToTrialPlan","LogoAWS","LogoAzure","LogoGCP","LogoRedhat","AWSLogo","alt","style","height","AzureLogo","GCPLogo","KafkaInstanceActions","rowData","hackZIndex","customChild","DropdownGroup","tooltipProps","content","tooltip","pointerEvents","cursor","isSeparator","actionProps","zIndex","DataPlaneHeader","actionsProps","Breadcrumb","ouiaId","BreadcrumbItem","Link","isActive","padding","Nav","NavList","NavItem","borderTop","DataPlaneTopicHeader","DeleteKafkaInstance","kafka","it","resolve","delete","DetailsTabAlert","hoursLeft","differenceInHours","now","time","FormatDate","date","format","KafkaDetailsTab","kafkaVersion","renderTextListItem","TextListItem","TextListItemVariants","Skeleton","screenreaderText","contentName","TextList","TextListVariants","SuspendedConnection","ExclamationTriangleIcon","color","KafkaConnectionTabP2","isKafkaSuspended","isKafkaPending","externalServer","linkToServiceAccount","linkToAccessTab","adminAPIUrl","kafkaFleetManagerUrl","showCreateServiceAccountModal","fontSize","ClipboardCopy","textAriaLabel","isReadOnly","ButtonVariant","ExpandableSection","toggleContent","testId","HelpIcon","Label","SampleCodeSnippet","expandableCode","codeBlockCode","codeSnippet","copied","setCopied","copyCode","CodeBlockAction","ClipboardCopyButton","textId","exitDelay","maxWidth","text","navigator","clipboard","writeText","catch","CodeBlock","CodeBlockCode","isDetached","contentId","ExpandableSectionToggle","javaConfigCodeBlock","kafkaBootstrapUrl","pythonConfigCodeBlock","pythonConfigExpandabledBlock","quarkusConfigExpandableBlock","springBootConfigCodeBlock","KafkaSampleCode","clientSelect","setClientSelect","clientProvider","java","python","quarkus","springboot","ToggleGroup","ToggleGroupItem","buttonId","client_type","KafkaInstanceDrawer","KafkaInstanceDrawerPanel","handleSelect","Tabs","activeKey","Tab","eventKey","TabTitleText","parseISO","getExternalServer","getAdminServerUrl","endsWith","StatusLabel","forwardRef","ref","showWarning","showError","withPopover","buttonVariant","Split","SplitItem","CheckCircleIcon","Spinner","Flex","FlexItem","HelperText","HelperTextItem","PopoverStatusOrder","KafkaToPopoverMapping","StatusProgressStepper","currentStatus","currentStep","findIndex","getVariant","ProgressStepper","isVertical","ProgressStep","titleId","isCurrent","StatusPopoverContent","StatusPopover","initialOpen","reference","isVisible","setIsVisible","handleClickConnectionTabLink","handleClickSupportLink","shouldOpen","shouldClose","enableFlip","SuspendedPopover","alertSeverityVariant","headerIcon","KafkaInstanceStatus","warningAfterMinutes","errorAfterMinutes","popoverStatus","alert","setAlert","labelRef","checkCreatedAt","elapsed","differenceInMinutes","useInterval","EmptyStateNoInstances","PlusCircleIcon","SearchIcon","KafkaInstances","timeCreatedDate","instanceLinkEnable","isAriaDisabled","changeOwnerEnabled","deleteEnabled","openConnectionEnabled","onRowClick","isRowDeleted","toolbarBreakpoint","options","isPrimary","DateTimePicker","timeSelected","setIsTimeSelected","InputGroup","DatePicker","formatInTimeZone","newDate","formatISO","TimePicker","hour","minute","__","isValid","setHours","setMinutes","FilterGroup","epoch","onOffsetChange","onTimestampChange","onEpochChange","onLatest","currentCategory","setCurrentCategory","ToolbarItem","DropdownToggle","autoFocus","DropdownSeparator","placeholder","newOffset","Number","isInteger","LimitSelector","InputGroupText","hidden","idx","isSameMessage","m1","m2","beautifyUnknownValue","RetentionTimeUnits","RetentionSizeUnits","NoDataCell","columnLabel","MessageDetails","defaultTab","isResizable","minSize","MessageDetailsBody","messageKey","isCompact","defaultActiveKey","isCode","random","NoDataEmptyState","onRefresh","NoResultsEmptyState","onReset","OffsetRange","min","max","PartitionSelector","handleChange","valueAsNum","allPartitions","fill","makeOptions","slice","hiddenOptionsCount","handleFilter","typeAheadAriaLabel","maxHeight","onFilter","isInputValuePersisted","onClear","InputGroupTextVariant","UnknownValuePreview","truncateAt","shouldTruncate","substring","truncate","preview","truncated","spaceItems","stopPropagation","MessageBrowserMachine","selectedMessage","initialLoading","fetchSuccess","fetchFail","verifyMessages","noData","refresh","pristine","dirty","shouldSearch","setPartition","setEpoch","setTimestamp","setOffset","setLatest","setLimit","selectMessage","deselectMessage","refreshing","setMessages","offsetMin","offsetMax","lastUpdated","noMessages","selectedMessageNotAvailable","areFiltersChanged","columnWidths","KafkaMessageBrowser","useMachine","devTools","send","KafkaMessageBrowserConnected","isFirstLoad","matches","isNoData","isRefreshing","requiresSearch","filterOffset","filterEpoch","filterTimestamp","setDefaultTab","columnLabels","Loading","OuterScrollContainer","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","FilterIcon","breakpoint","ToolbarGroup","RefreshButton","alignment","InnerScrollContainer","ResponsiveTable","expectedLength","colIndex","keys","KafkaInstanceCapacityTable","firstStreamingUnit","secondStreamingUnit","table","MarketingPageHero","tagLine","description2","heroImage","heroImageSize","heroImageCanRepeat","heroImagePositionY","cta","MarketingPageSection","isWidthLimited","KafkaPageV3","Grid","Card","CardHeader","CardHeaderMain","CardTitle","CardBody","CardFooter","bold","alignSelf","justifyContent","flex","Divider","xl","orientation","EmptyStateNoTopic","PrincipalType","unitsToBytes","BYTE","KIBIBYTE","MEBIBYTE","GIBIBYTE","TEBIBYTE","unitsToMilliSecond","MILLISECOND","SECOND","MINUTE","HOUR","DAY","millisecondsToTime","days","unit","hours","minutes","seconds","formattedRetentionTime","formattedRetentionSize","bytesToMemorySize","tebibytes","gibibytes","mebibytes","kibibytes","KafkaTopics","DurationOptions","createEmptyManageAccessAcl","PermissionsDropdown","onAddPermission","onShortcutConsumeTopic","onShortcutProduceTopic","onShortcutManageAccess","menuRef","handleMenuKeys","contains","handleClickOutside","addEventListener","removeEventListener","onToggleClick","open","ev","setTimeout","firstElement","querySelector","focus","menu","Menu","itemId","MenuContent","MenuList","MenuGroup","MenuItem","splitButtonItems","DropdownToggleAction","preventDefault","splitButtonVariant","Popper","trigger","popper","popperMatchesTriggerWidth","labelColor","DisplayResourceName","PatternType","ResourceCell","PermissionOperationCell","ALLOW","DENY","operations","ALL","READ","WRITE","CREATE","DELETE","ALTER","DESCRIBE","DESCRIBE_CONFIGS","ALTER_CONFIGS","LabelGroup","numLabels","isArray","PrincipalCell","isDeleteEnabled","isAllAccounts","onRemoveAcl","isReviewTable","ServiceAccount","Tooltip","tabIndex","split","InfoCircleIcon","RemoveButton","PermissionsTableEmptyState","openManagePermissions","PermissionsTable","checkedRows","setCheckedRows","kebabActions","onCheck","isRowChecked","SelectAccount","isDirty","setIsDirty","setSelectedAccount","useLayoutEffect","noServiceAccounts","isNoResultsOption","noUserAccounts","filterValue","toLowerCase","serviceAccountOptions","localeCompare","userAccountOperations","UserAccount","SelectGroup","validated","ValidatedOptions","onEscapePress","onSubmit","helperTextInvalid","isRequired","labelIcon","noVerticalAlign","newState","isCreatable","createText","isGrouped","onCreateOption","ResourceName","onChangeValue","resourcePrefixRule","onFetchOptions","setIsNameValid","AsyncTypeaheadSelect","required","onValidationCheck","validationMessage","resourcePreixCondition","regExp","RegExp","validationCheck","ResourceOperation","resourceTypeOptions","ResourcePermission","resourcePermissionOptions","allow","deny","ResourcePrefixRule","resourcePrefixRuleOptions","Is","ResourceType","ShortcutsTableHead","KafkaInstanceManualPermissions","resourceOperation","resourcePermission","onChangeResourceOperation","onChangeResourcePermission","onChangeResourceType","AssignPermissionsManual","resourcePrefix","onChangeResourcePrefix","onChangeResource","onFetchResourceNameOptions","multipleShorctutPermissions","ProduceTopicRow","prefixRuleValue","resourceNameValue","onChangeResourceName","isConsumeTopicShortcut","borderBottom","colSpan","ConsumeTopicShortcut","onChangeConsumerResourceName","topicPrefixRuleValue","topicResourceNameValue","consumerPrefixRuleValue","consumerResourceNameValue","onChangeConsumerResourcePrefixRule","onChangeTopicResourceName","onChangeTopicResourcePrefixRule","onFetchConsumerResourceNameOptions","onFetchTopicResourceNameOptions","ManageAccessShortcut","ProduceTopicShortcut","AssignPermissions","topicNameOptions","consumerGroupNameOptions","onAddManualPermissions","onAddProduceTopicShortcut","onConsumeTopicShortcut","onManageAccessShortcut","addedAcls","setAddedAcls","aclTemplate","resourceValues","consumerResourcePrefixRule","topicResourcePrefixRule","consumerResourceName","topicResourceName","ActionList","ActionListItem","paddingTop","PreCancelModal","closeModal","resumeEditing","titleIconVariant","ReviewPermissionsTable","selectedAccountId","ViewAccountDetails","accountId","transformResourceType","AclResourceType","transformResourceOperation","EditPermissions","escapeClosesModal","isExpandedExistingPermissionSection","setIsExpandedExistingPermissionSection","isAclDeleted","setIsAclDeleted","isExpandedAssignPermissionsSection","setIsExpandedAssignPermissionsSection","isNameValid","canSave","setCanSave","setSubmitted","isOpenPreCancelModal","setIsOpenPreCancelModal","setExistingAcls","newAcls","setNewAcls","deletedAcls","setDeletedAcls","checkValidation","aclsToSave","accountDisplayName","isAclValid","transformAclData","selectedAccountName","transformPermissions","isIndented","Badge","isRead","prevState","updateExistingAcls","toggleText","EmptyStateInitialLoading","EmptyStateMetricsUnavailable","TachometerAltIcon","MetricsLayout","metricsLagAlert","topicsKpi","topicPartitionsKpi","consumerGroupKpi","diskSpaceMetrics","topicMetrics","GridItem","sm","CardBodyLoading","Bullseye","isSVG","timeIntervalsMapping","Last5minutes","ticks","showDate","Last15minutes","Last30minutes","Last1hour","Last3hours","Last6hours","Last12hours","Last24hours","Last2days","Last7days","chartHeight","chartPadding","bottom","left","right","top","ChartSkeletonLoader","useChartWidth","containerRef","setWidth","handleResize","clientWidth","formatBytes","units","shouldShowDate","timeDuration","dateToChartValue","fromUnixTime","timestampsToTicks","timestamps","allTimestamps","mostRecentTs","sub","getTime","ChartLinearWithOptionalLimit","chartName","xLabel","yLabel","usageLimit","formatValue","emptyState","itemsPerRow","lineLabel","limitLabel","legendData","symbol","chart_color_black_500","chart_color_blue_300","areaColor","softLimitColor","chartData","area","softLimit","x","y","tickValues","getChartData","hasMetrics","Chart","ariaTitle","containerComponent","ChartVoronoiContainer","datum","constrainToVisibleArea","legendPosition","legendComponent","ChartLegend","themeColor","ChartTheme","legendAllowWrap","ChartAxis","C","tickFormat","dependentAxis","ChartGroup","ChartArea","ChartThreshold","stroke","colors","chart_color_cyan_300","ChartLogSizePerPartition","dataMap","ChartPopover","ChartTotalBytes","incomingTopicsData","outgoingTopicsData","incomingTopic","outgoingTopic","incomingTopicName","outgoingTopicName","incomingLine","metricsToLine","line","outgoingLine","chart_color_green_300","getBytesChartData","tickCount","ChartLine","EmptyStateNoMetricsData","EmptyStateNoMetricsDataForSelection","EmptyStateNoTopics","WrenchIcon","EmptyStateNoTopicSelected","DurationOptionsMap","FilterByTime","keyText","disableToolbar","onDurationChange","isTimeSelectOpen","setIsTimeSelectOpen","ariaId","mapping","timeOptions","md","FilterByTopic","topicList","onSetSelectedTopic","isTopicSelectOpen","setIsTopicSelectOpen","selectKey","setSelectKey","allTopicsLabel","topicOptions","textInput","filteredTopics","indexOf","hasInlineFilter","ToolbarRefresh","ToolbarTopicsMetrics","onSetTimeDuration","CardTopicsMetrics","backendUnavailable","isInitialLoading","isJustCreated","onSelectedTopic","noTopics","selectedTopicNotInList","chartEmptyState","TotalBytesTitle","IncomingMessageRate","PartitionSizeTitle","ToolbarKafkaInstanceMetric","CardKafkaInstanceMetrics","usedDiskMetrics","ChartTitle","helperText","CardKpi","isFullHeight","shape","MetricsLagAlert","isClosed","actionClose","AlertActionCloseButton","PartitionCard","ExclamationCircleIcon","isExpandable","AlertVariant","role","apiState","failure","after","KafkaInstanceMetricsMachine","fetchFailures","callApi","criticalFail","justCreated","withResponse","selectDuration","setFetchTimestamp","setMetrics","incrementRetries","resetRetries","setDuration","canRetryFetching","TopicsMetricsMachine","selectTopic","setTopic","MetricsKpiMachine","KafkaInstanceMetricsContext","KafkaInstanceMetricsProvider","service","callback","results","MetricsKpiContext","MetricsKpiProvider","TopicsMetricsContext","TopicsMetricsProvider","useKafkaInstanceMetrics","isFailed","useTopicsMetrics","onTopicChange","Metrics","ConnectedMetrics","kafkaInstanceMetrics","topicsMetrics","metricsKpi","useMetricsKpi","ConnectedKafkaInstanceMetrics","ConnectedTopicsMetrics","Settings","connectionStatus","setConnectionStatus","setIsModalOpen","handleReAuthentication","reAuthValue","reauthentication","flexWrap","grow","spacer","checked","retentionTimeSelectOptions","isPlaceholder","retentionSizeSelectOptions","CreateTopicHead","showAllOptions","onShowAllOptions","mainBreadcrumbs","labelOff","PartitionLimitWarning","handleModalToggle","retentionTimeTransformer","TextWithLabelPopover","fieldLabel","btnAriaLabel","fieldValue","popoverBody","popoverHeader","displayText","Cleanup","defaultFileDeleteDelay","defaultLogSegmentSize","defaultSegmentJitterTime","defaultSegmentTime","FormSection","titleElement","gibibyte","milliseconds","CustomRetentionMessage","customTimeValue","setCustomTimeValue","isRetentionTimeSelectOpen","setIsRetentionTimeSelectOpen","onRetentionTimeToggle","input","inputValue","CustomRetentionSize","customRetentionSizeValue","setCustomRetentionSizeValue","isRetentionSizeSelectOpen","setIsRetentionSizeSelectOpen","onRetentionSizeToggle","useValidateTopic","validateName","legalNameChars","CoreConfiguration","isCreate","setTopicData","invalidText","setInvalidText","setTopicValidated","topicValidated","radioTimeSelectValue","setRadioTimeSelectValue","radioSizeSelectValue","setRadioSizeSelectValue","initialPartitions","handleRetentionMessageTime","handleRetentionMessageSize","retentionTimeInput","retentionSizeInput","labelHead","labelBody","buttonAriaLabel","NumberInput","inputName","updatedPartitions","onPlus","currentPartitions","onMinus","newPartitions","plusBtnProps","minusBtnProps","Radio","Flush","defaultFlushIntervalMessages","defaultFlushIntervalTime","Log","defaultDeleteRetentionTime","defaultMinCleanbleRatio","defaultMinimumCompactionLagTime","cleanupPolicyOptions","DropdownWithToggle","toggleId","onSelectOption","isLabelAndValueNotSame","Message","defaultMaximumMessageBytes","defaultMessageTimestampType","defaultMaxMessageTimestampDiff","Replication","TopicAdvanceIndex","defaultIndexIntervalSize","defaultSegmentIndexSize","TopicAdvanceJumpLinks","canHaveDelete","SidebarPanel","JumpLinks","scrollableSelector","JumpLinksItem","TopicAdvancePage","handleCancel","actionText","setIsLoading","warning","setWarning","Sidebar","SidebarContent","PageGroup","ActionGroup","retentionSizeTransformer","CreateTopicWizard","isSwitchChecked","initialFieldsValue","topicNameValidated","setTopicNameValidated","warningModalOpen","setWarningModalOpen","closeWizard","steps","enableNext","StepTopicName","newTopicData","onTopicNameChange","canJumpTo","StepPartitions","onPartitionsChange","StepMessageRetention","StepReplicas","minInSyncReplica","nextButtonText","onTransform","tranformedValueInMilliseconds","tranformedValueInBytes","transformedTopic","onSaveTopic","PageSectionTypes","Wizard","navAriaLabel","mainAriaLabel","footer","WizardCustomFooter","onValidate","retentionTime","newPartitionCount","widthChars","onBlur","WizardFooter","WizardContextConsumer","activeStep","onBack","CreateTopic","setIsSwitchChecked","EditTopicProperties","millisecondsToTimeValue","bytesToSizeValue","TopicProperties","showUnlimited","SelectOwner","selectOptions","filterRegExp","ChangeKafkaOwner","setAccount","submittedAccount","isSaving","onConfirmOwner","renderAlert","TermsAndConditionsDialog","br"],"sourceRoot":""}