{"version":3,"file":"js/4067.fb6ad8bfe1b3b57fe708.js","mappings":"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","sources":["webpack:///./src/routes/control-plane/routesConsts.ts","webpack:///./src/routes/control-plane/DrawerProvider.tsx","webpack:///./src/routes/RedirectOnGateError.tsx","webpack:///./src/routes/control-plane/routes/ConnectedControlPlaneHeader.tsx","webpack:///./src/routes/control-plane/routes/useKafkaInstancesTable.ts","webpack:///./src/routes/control-plane/routes/KafkaInstancesRoute.tsx","webpack:///./src/routes/control-plane/routes/CreateKafkaInstanceRoute.tsx","webpack:///./src/routes/control-plane/routes/useCreateKafkaCallbacks.ts","webpack:///./src/routes/control-plane/routes/CreateDedicatedKafkaInstanceRoute.tsx","webpack:///./src/routes/control-plane/routes/useCreateDedicatedKafkaCallbacks.ts","webpack:///./src/routes/control-plane/useControlPlaneGate.tsx","webpack:///./src/routes/control-plane/routes/DeleteKafkaInstanceRoute.tsx","webpack:///./src/routes/control-plane/routes/ChangeOwnerRoute.tsx","webpack:///./src/routes/control-plane/ControlPlaneRoutes.tsx","webpack:///./src/routes/useDedicatedGate.tsx","webpack:///../../packages/consoledot-api/src/queries/useStandardQuota.ts","webpack:///./src/routes/control-plane/routes/DedicatedClustersRoute.tsx","webpack:///./src/routes/control-plane/routes/DedicatedKafkaInstancesRoute.tsx","webpack:///./src/routes/control-plane/DedicatedControlPlaneRoutes.tsx","webpack:///./src/routes/data-plane/routesConsts.ts","webpack:///./src/routes/data-plane/useDataPlaneGate.tsx","webpack:///./src/routes/data-plane/routes/DataPlaneHeaderConnected.tsx","webpack:///./src/routes/data-plane/routes/PermissionsRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicsRoute.tsx","webpack:///./src/routes/data-plane/routes/SettingsRoute.tsx","webpack:///./src/routes/data-plane/routes/DashboardRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupsRoute.tsx","webpack:///./src/routes/data-plane/useTopicGate.tsx","webpack:///./src/routes/data-plane/routes/DataPlaneTopicHeaderConnected.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupsRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicMessagesRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicPropertiesRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicSchemasRoute.tsx","webpack:///./src/routes/data-plane/useConsumerGroupGate.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupResetOffsetRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupViewPartitionRoute.tsx","webpack:///./src/routes/data-plane/useTopicConsumerGroupGate.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupResetOffsetRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupViewPartitionRoute.tsx","webpack:///../../packages/ui/src/components/DeleteKafkaTopic/DeleteKafkaTopic.tsx","webpack:///./src/routes/data-plane/routes/TopicDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicEditPropertiesRoute.tsx","webpack:///./src/routes/data-plane/routes/PermissionsEditRoute.tsx","webpack:///./src/routes/data-plane/routes/PermissionsSelectAccountRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicCreateRoute.tsx","webpack:///./src/routes/data-plane/DataPlaneRoutes.tsx","webpack:///./src/routes/DefaultServiceRedirect.tsx","webpack:///./src/routes/overview/OverviewRoute.tsx","webpack:///./src/routes/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/QuickstartLoader.tsx","webpack:///./src/store/index.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDedicatedClusterSizesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDedicatedClustersFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDedicatedQuotaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/queries/useConsumerGroup.ts","webpack:///../../packages/consoledot-api/src/queries/useConsumerGroups.ts","webpack:///../../packages/consoledot-api/src/queries/useDedicatedClusters.ts","webpack:///../../packages/consoledot-api/src/transformers/kafkaRequestToKafkaInstanceEnhanched.ts","webpack:///../../packages/consoledot-api/src/queries/useCreateInstance.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkaInstanceTransformer.ts","webpack:///../../packages/consoledot-api/src/queries/useKafka.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkas.ts","webpack:///../../packages/consoledot-api/src/queries/useTopic.ts","webpack:///../../packages/consoledot-api/src/queries/useTopics.ts","webpack:///../../packages/consoledot-api/src/queries/useUserAccounts.ts","webpack:///../../packages/consoledot-api/src/queries/useAcls.ts","webpack:///../../packages/consoledot-api/src/queries/useServiceAccounts.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDeveloperInstanceAvailabilityFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaKpisFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useMessagesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useProviderRegionSizesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useProvidersWithRegionsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useStandardQuotaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useTopicsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useTopicsMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/mutations/useCreateDedicatedKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useCreateKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteTopicMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdateKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteConsumerGroupMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useResetConsumerGroupMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeletePermissionsMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdatePermissionsMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useCreateTopicMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdateTopicMutation.ts","webpack:///../../packages/consoledot-api/src/types.ts","webpack:///../../packages/consoledot-api/src/ApiProvider.tsx","webpack:///../../packages/consoledot-api/src/transformers/consumerGroupTransformer.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchConsumerGroup.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchConsumerGroups.ts","webpack:///../../packages/consoledot-api/src/transformers/dedicatedClusterTransformer.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchDedicatedClusters.ts","webpack:///../../packages/consoledot-api/src/utilsAndConstants.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchDedicatedQuota.ts","webpack:///../../packages/consoledot-api/src/transformers/apiSizeToComponentSize.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchDedicatedClusterSizes.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaKpis.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/valuesToQuery.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkas.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchMessages.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchOrganization.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchProviderRegionSizes.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchProvidersWithRegions.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchStandardQuota.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopic.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopicsMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchUserAccounts.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchPermissions.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchServiceAccounts.ts","webpack:///../../packages/consoledot-api/src/queryKeys.ts","webpack:///../../packages/consoledot-api/src/transformers/topicTransformer.ts","webpack:///../../packages/consoledot-api/src/useApi.ts","webpack:///../../packages/local-storage-helpers/index.ts","webpack:///../../packages/ui-models/src/models/kafka.ts","webpack:///../../packages/ui/src/components/ChangeKafkaOwner/SelectOwner.tsx","webpack:///../../packages/ui/src/components/ChangeKafkaOwner/ChangeKafkaOwner.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupPopover.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupState.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupByKafka.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupByTopic.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupDetails.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupEmptyState.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/OffsetSelect.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/TopicSelect.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupResetOffset.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/DeleteConsumerGroup.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupDrawer.tsx","webpack:///../../packages/ui/src/hooks/useKafkaLabels.ts","webpack:///../../packages/ui/src/hooks/useTopicLabels.ts","webpack:///../../packages/ui/src/hooks/useConsumerGroupLabels.ts","webpack:///../../packages/ui/src/components/ConsumerGroups/ConsumerGroups.tsx","webpack:///../../packages/ui/src/components/ControlPlaneHeader.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/shared.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/StandardPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/TrialPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateKafkaInstanceMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateKafkaInstanceProvider.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/BillingHelp.tsx","webpack:///../../packages/ui/src/components/Logos/images.ts","webpack:///../../packages/ui/src/components/Logos/AWSLogo.tsx","webpack:///../../packages/ui/src/components/Logos/AzureLogo.tsx","webpack:///../../packages/ui/src/components/Logos/GCPLogo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/BillingTiles.tsx","webpack:///../../packages/ui/src/components/Logos/RedhatLogo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/CloudProviderTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/CloudRegionsSelect.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldAZ.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldBillingTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldCloudProvider.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldCloudRegion.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldInstanceName.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSizeHelperText.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSizeHelperTextOverQuota.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSizeHelperTextTrial.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSize.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FormAlerts.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/InstanceInfo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/InstanceInfoSkeleton.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsLoading.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsStandardPlan.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsDedicatedPlan.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsSystemUnavailable.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsTrialPlan.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/LoadingForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/DedicatedPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateDedicatedKafkaInstanceMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateDedicatedKafkaInstanceProvider.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useCreateKafkaInstance.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useCreateDedicatedKafkaInstance.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useStandardPlan.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useTrialPlan.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useDedicatedPlan.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/StandardInstanceForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/TrialInstanceForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/CreateKafkaInstance.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/DedicatedClusterTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldDedicatedCluster.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/DedicatedInstanceForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/CreateDedicatedKafkaInstance.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceActions.tsx","webpack:///../../packages/ui/src/components/DataPlaneHeader.tsx","webpack:///../../packages/ui/src/components/DataPlaneTopicHeader.tsx","webpack:///../../packages/ui/src/components/DedicatedClusters/components/EmptyStateNoDedicatedClusters.tsx","webpack:///../../packages/ui/src/components/DedicatedClusters/DedicatedClusters.tsx","webpack:///../../packages/ui/src/hooks/useDedicatedClusterLabels.ts","webpack:///../../packages/ui/src/components/DeleteKafKaInstance/DeleteKafkaInstance.tsx","webpack:///../../packages/ui/src/components/I18nProvider.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/DetailsTabAlert.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaDetailsTab.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/SuspendedConnection.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaConnectionTabP2.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/SampleCodeSnippet.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/CodeSnippets.ts","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaSampleCode.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/KafkaInstanceDrawer.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusLabel.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/types.ts","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusProgressStepper.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusPopoverContent.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusPopover.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/SuspendedPopover.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/KafkaInstanceStatus.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoDedicatedClusters.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoDedicatedEntitlement.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoDedicatedInstances.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoInstances.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoResults.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/KafkaInstances.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/DateTimePicker.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/FilterGroup.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/LimitSelector.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/utils.ts","webpack:///../../packages/ui/src/components/KafkaTopics/types.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoDataCell.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/MessageDetails.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoDataEmptyState.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoResultsEmptyState.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/OffsetRange.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/PartitionSelector.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/UnknownValuePreview.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/MessageBrowserMachine.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/KafkaMessageBrowser.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceCapacityTable.tsx","webpack:///../../packages/ui/src/components/MarketingPage.tsx","webpack:///../../packages/ui/src/components/KafkaPageV3.tsx","webpack:///../../packages/ui/src/components/KafkaTopics/components/EmptyStateNoTopic.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/types.ts","webpack:///../../packages/ui/src/components/KafkaTopics/KafkaTopics.tsx","webpack:///../../packages/ui/src/components/Metrics/types.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PermissionsDropdown.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceTypeLabel.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/Cells.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/EmptyPermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/SelectAccount.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceName.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceOperation.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourcePermission.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourcePrefixRule.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceType.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ShortcutsTableHead.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/KafkaInstanceManualPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/AssignPermissionsManual.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ProduceTopicRow.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ConsumeTopicShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ManageAccessShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ProduceTopicShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/AssignPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PreCancelModal.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ReviewPermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ViewAccountDetails.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/utils.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/EditPermissions.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateInitialLoading.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateMetricsUnavailable.tsx","webpack:///../../packages/ui/src/components/Metrics/components/MetricsLayout.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardBodyLoading.tsx","webpack:///../../packages/ui/src/components/Metrics/consts.ts","webpack:///../../packages/ui/src/components/Metrics/components/ChartSkeletonLoader.tsx","webpack:///../../packages/ui/src/components/Metrics/components/useChartWidth.tsx","webpack:///../../packages/ui/src/components/Metrics/components/utils.ts","webpack:///../../packages/ui/src/components/Metrics/components/ChartLinearWithOptionalLimit.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartLogSizePerPartition.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartPopover.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartTotalBytes.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoMetricsData.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoMetricsDataForSelection.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoTopics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoTopicSelected.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTime.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTopic.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarRefresh.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarKafkaInstanceMetric.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardKafkaInstanceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardKpi.tsx","webpack:///../../packages/ui/src/components/Metrics/components/MetricsLagAlert.tsx","webpack:///../../packages/ui/src/components/Metrics/components/PartitionCard.tsx","webpack:///../../packages/ui/src/components/Metrics/machines/KafkaInstanceMetricsMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/TopicsMetricsMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/MetricsKpiMachine.ts","webpack:///../../packages/ui/src/components/Metrics/KafkaInstanceMetricsProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/MetricsKpiProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/TopicsMetricsProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/useKafkaInstanceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/useTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/Metrics.tsx","webpack:///../../packages/ui/src/components/Metrics/useMetricsKpi.tsx","webpack:///../../packages/ui/src/components/Settings/Settings.tsx","webpack:///../../packages/ui/src/components/Topic/components/types.ts","webpack:///../../packages/ui/src/components/Topic/components/CreateTopicHead.tsx","webpack:///../../packages/ui/src/components/Topic/components/PartitionLimitWarning.tsx","webpack:///../../packages/ui/src/components/Topic/components/retentionTimeTransformer.ts","webpack:///../../packages/ui/src/components/Topic/components/TextWithLabelPopover.tsx","webpack:///../../packages/ui/src/components/Topic/components/Cleanup.tsx","webpack:///../../packages/ui/src/components/Topic/components/CustomRetentionMessage.tsx","webpack:///../../packages/ui/src/components/Topic/components/CustomRetentionSize.tsx","webpack:///../../packages/ui/src/components/Topic/components/useValidateTopic.ts","webpack:///../../packages/ui/src/components/Topic/components/CoreConfiguration.tsx","webpack:///../../packages/ui/src/components/Topic/components/Flush.tsx","webpack:///../../packages/ui/src/components/Topic/components/Log.tsx","webpack:///../../packages/ui/src/components/Topic/components/Message.tsx","webpack:///../../packages/ui/src/components/Topic/components/Replication.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvanceIndex.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvanceJumpLinks.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvancePage.tsx","webpack:///../../packages/ui/src/components/Topic/components/retentionSizeTransformer.tsx","webpack:///../../packages/ui/src/components/Topic/components/CreateTopicWizard.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepMessageRetention.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepPartitions.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepReplicas.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepTopicName.tsx","webpack:///../../packages/ui/src/components/Topic/components/WizardCustomFooter.tsx","webpack:///../../packages/ui/src/components/Topic/CreateTopic/CreateTopic.tsx","webpack:///../../packages/ui/src/components/Topic/EditTopicProperties/EditTopicProperties.tsx","webpack:///../../packages/ui/src/components/Topic/TopicProperties/TopicProperties.tsx"],"sourcesContent":["const NewInstanceSegment = \"create\";\nconst ClusterSegment = \"clusters\";\nexport const ControlPlaneSpecialSegments = [NewInstanceSegment, ClusterSegment];\n\nexport const ControlPlaneRouteRoot = \"/kafkas\" as const;\nexport const ControlPlaneRoutePath =\n  `${ControlPlaneRouteRoot}/:id?/:section(delete|change-owner)?` as const;\nexport const ControlPlaneNewInstancePath = `${ControlPlaneRouteRoot}/${NewInstanceSegment}`;\nexport const ControlPlaneDeleteInstancePath = `${ControlPlaneRouteRoot}/:id/delete`;\nexport const ControlPlaneChangeOwnerPath = `${ControlPlaneRouteRoot}/:id/change-owner`;\nexport type ControlPlaneRouteParams = {\n  id?: string;\n  section?: \"delete\" | \"change-owner\";\n};\n\nexport const DedicatedControlPlaneRouteRoot = \"/dedicated\" as const;\n\nexport const DedicatedControlPlaneRoutePath =\n  `${DedicatedControlPlaneRouteRoot}/:id?/:section(delete|change-owner)?` as const;\nexport const DedicatedControlPlaneClustersPath = `${DedicatedControlPlaneRouteRoot}/${ClusterSegment}`;\nexport const DedicatedControlPlaneNewInstancePath = `${DedicatedControlPlaneRouteRoot}/${NewInstanceSegment}`;\nexport const DedicatedControlPlaneDeleteInstancePath = `${DedicatedControlPlaneRouteRoot}/:id/delete`;\nexport const DedicatedControlPlaneChangeOwnerPath = `${DedicatedControlPlaneRouteRoot}/:id/change-owner`;\n\nexport type ControlPlaneNavigationProps = {\n  instancesHref: string;\n};\n","import { useKafka } from \"consoledot-api\";\nimport type { FunctionComponent, MutableRefObject } from \"react\";\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { KafkaInstanceDrawerTab } from \"ui\";\nimport { KafkaInstanceDrawer } from \"ui\";\nimport type { ControlPlaneRouteParams } from \"./routesConsts\";\nimport {\n  ControlPlaneRoutePath,\n  ControlPlaneSpecialSegments,\n  DedicatedControlPlaneRoutePath,\n} from \"./routesConsts\";\n\ntype DrawerContextProps = {\n  selectedInstance: string | undefined;\n  activeTab: KafkaInstanceDrawerTab;\n  setActiveTab: (tab: KafkaInstanceDrawerTab) => void;\n  isExpanded: boolean;\n  toggleExpanded: (newState?: boolean) => void;\n  onClose: MutableRefObject<(() => void) | undefined>;\n};\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst DrawerContext = createContext<DrawerContextProps>(null!);\n\nexport const DrawerProvider: FunctionComponent = ({ children }) => {\n  const standardMatch = useRouteMatch<ControlPlaneRouteParams>(\n    ControlPlaneRoutePath\n  );\n  const dedicatedMatch = useRouteMatch<ControlPlaneRouteParams>(\n    DedicatedControlPlaneRoutePath\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"DrawerProvider used outside the expected route\");\n  }\n  const selectedInstance =\n    (match.params.id &&\n      ControlPlaneSpecialSegments.includes(match.params.id)) ||\n    match.params.section !== undefined\n      ? undefined\n      : match.params.id;\n  const { data: instance } = useKafka(selectedInstance);\n  const [isExpanded, setIsExpanded] = useState(\n    selectedInstance !== undefined && match.isExact\n  );\n  const [activeTab, setActiveTab] = useState<KafkaInstanceDrawerTab>(\"details\");\n  const onClose = useRef<() => void | undefined>();\n\n  const toggleExpanded = useCallback((newValue: boolean | undefined) => {\n    setIsExpanded((prev) => {\n      const isExpanded = newValue !== undefined ? newValue : !prev;\n      if (isExpanded === false && onClose.current) {\n        onClose.current();\n      }\n      return isExpanded;\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!instance) {\n      setIsExpanded(false);\n    }\n  }, [instance]);\n\n  const value = useMemo(() => {\n    const shouldBeExpanded = selectedInstance !== undefined && isExpanded;\n\n    return {\n      selectedInstance,\n      activeTab,\n      setActiveTab,\n      isExpanded: shouldBeExpanded,\n      toggleExpanded,\n      onClose,\n    };\n  }, [activeTab, isExpanded, selectedInstance, toggleExpanded]);\n\n  return (\n    <DrawerContext.Provider value={value}>\n      <KafkaInstanceDrawer\n        instance={instance}\n        activeTab={activeTab}\n        onTabChange={setActiveTab}\n        isExpanded={isExpanded}\n        onClose={() => toggleExpanded(false)}\n      >\n        {children}\n      </KafkaInstanceDrawer>\n    </DrawerContext.Provider>\n  );\n};\n\nexport function useDrawer(onClose?: () => void) {\n  const context = useContext(DrawerContext);\n  context.onClose.current = onClose;\n  return context;\n}\n","import { useQueryErrorResetBoundary } from \"consoledot-api\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useEffect } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { Redirect, useLocation } from \"react-router-dom\";\n\nexport const RedirectOnGateError: FunctionComponent<{\n  redirectUrl: string;\n}> = ({ children, redirectUrl }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const { key } = useLocation();\n\n  return (\n    <ErrorBoundary\n      resetKeys={[key]}\n      fallbackRender={() => <RedirectAndResetError redirectUrl={redirectUrl} />}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n};\n\nconst RedirectAndResetError: VoidFunctionComponent<{ redirectUrl: string }> = ({\n  redirectUrl,\n}) => {\n  const { reset } = useQueryErrorResetBoundary();\n  useEffect(() => reset, [reset]);\n  return <Redirect to={redirectUrl} />;\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport type { ControlPlaneHeaderProps } from \"ui\";\nimport { ControlPlaneHeader } from \"ui\";\n\nexport type ConnectedControlPlaneHeaderProps = {\n  activeSection: ControlPlaneHeaderProps[\"activeSection\"];\n};\n\nexport const ConnectedControlPlaneHeader: VoidFunctionComponent<\n  ConnectedControlPlaneHeaderProps\n> = ({ activeSection }) => {\n  return (\n    <ControlPlaneHeader\n      activeSection={activeSection}\n      sectionsHref={{\n        standard: \"/kafkas\",\n        dedicated: \"/dedicated\",\n        clusters: \"/dedicated/clusters\",\n      }}\n    />\n  );\n};\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport { KafkaInstancesSortableColumns } from \"consoledot-api\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { KafkaInstanceDrawerTab, KafkaInstancesProps } from \"ui\";\nimport { useKafkaLabels } from \"ui\";\nimport type { SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { useDrawer } from \"../DrawerProvider\";\n\nexport type UseKafkaInstancesTableProps = {\n  instancesHref: string;\n  instanceSelectedHref: (id: string) => string;\n  instanceCreationHref: string;\n  instanceDeletionHref: (id: string) => string;\n  instanceChangeOwnerHref: (id: string) => string;\n};\n\nexport function useKafkaInstancesTable({\n  instancesHref,\n  instanceSelectedHref,\n  instanceCreationHref,\n  instanceDeletionHref,\n  instanceChangeOwnerHref,\n}: UseKafkaInstancesTableProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveQuickStart } = useContext(QuickStartContext);\n\n  const { selectedInstance, toggleExpanded, setActiveTab, isExpanded } =\n    useDrawer(\n      useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instancesHref);\n      }, [history, instancesHref])\n    );\n\n  const labels = useKafkaLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const namesChips = useURLSearchParamsChips(\"names\", resetPaginationQuery);\n  const ownersChips = useURLSearchParamsChips(\"owners\", resetPaginationQuery);\n  const statusesChips = useURLSearchParamsChips<SimplifiedStatus>(\n    \"statuses\",\n    resetPaginationQuery\n  );\n\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaInstancesSortableColumns,\n    labels.fields,\n    \"createdAt\",\n    \"desc\"\n  );\n\n  const onClearAllFilters = useCallback(() => {\n    namesChips.clearChained(\n      ownersChips.clearChained(\n        statusesChips.clearChained(setPaginationQuery(1, perPage))\n      ),\n      true\n    );\n  }, [namesChips, ownersChips, perPage, setPaginationQuery, statusesChips]);\n\n  const openDrawer = useCallback(\n    (id: string, tab: KafkaInstanceDrawerTab) => {\n      if (selectedInstance === id && isExpanded) {\n        toggleExpanded(false);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceSelectedHref(id));\n        toggleExpanded(true);\n        setActiveTab(tab);\n      }\n    },\n    [\n      history,\n      instanceSelectedHref,\n      isExpanded,\n      selectedInstance,\n      setActiveTab,\n      toggleExpanded,\n    ]\n  );\n\n  const onDetailsClick: KafkaInstancesProps[\"onDetails\"] = useCallback(\n    (instance) => {\n      openDrawer(instance.id, \"details\");\n    },\n    [openDrawer]\n  );\n\n  const onConnectionsClick: KafkaInstancesProps[\"onDetails\"] = useCallback(\n    (instance) => {\n      openDrawer(instance.id, \"connections\");\n    },\n    [openDrawer]\n  );\n\n  const onCreate = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceCreationHref);\n  }, [history, instanceCreationHref]);\n\n  const onDelete = useCallback<KafkaInstancesProps[\"onDelete\"]>(\n    ({ id }) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(instanceDeletionHref(id));\n    },\n    [history, instanceDeletionHref]\n  );\n  const onChangeOwner = useCallback<KafkaInstancesProps[\"onChangeOwner\"]>(\n    ({ id }) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(instanceChangeOwnerHref(id));\n    },\n    [history, instanceChangeOwnerHref]\n  );\n\n  const onQuickstartGuide = useCallback(\n    () => setActiveQuickStart && setActiveQuickStart(\"getting-started\"),\n    [setActiveQuickStart]\n  );\n\n  return {\n    selectedInstance,\n    page,\n    perPage,\n    setPagination,\n    namesChips,\n    ownersChips,\n    statusesChips,\n    isColumnSortable,\n    sort,\n    sortDirection,\n    onClearAllFilters,\n    onDetailsClick,\n    onConnectionsClick,\n    onCreate,\n    onDelete,\n    onChangeOwner,\n    onQuickstartGuide,\n  };\n}\n","import { useKafkas } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport type { ControlPlaneHeaderProps, KafkaInstancesProps } from \"ui\";\nimport { KafkaInstances } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport { ConnectedControlPlaneHeader } from \"./ConnectedControlPlaneHeader\";\nimport { useKafkaInstancesTable } from \"./useKafkaInstancesTable\";\n\nexport type KafkaInstancesRoute = {\n  activeSection: ControlPlaneHeaderProps[\"activeSection\"];\n  instancesHref: string;\n  instanceSelectedHref: (id: string) => string;\n  instanceCreationHref: string;\n  instanceDeletionHref: (id: string) => string;\n  instanceChangeOwnerHref: (id: string) => string;\n} & Pick<KafkaInstancesProps, \"getUrlForInstance\">;\n\nexport const KafkaInstancesRoute: FunctionComponent<KafkaInstancesRoute> = ({\n  activeSection,\n  instancesHref,\n  instanceDeletionHref,\n  instanceSelectedHref,\n  instanceCreationHref,\n  instanceChangeOwnerHref,\n  getUrlForInstance,\n}) => {\n  const {\n    selectedInstance,\n    page,\n    perPage,\n    setPagination,\n    namesChips,\n    ownersChips,\n    statusesChips,\n    isColumnSortable,\n    sort,\n    sortDirection,\n    onClearAllFilters,\n    onDetailsClick,\n    onConnectionsClick,\n    onCreate,\n    onDelete,\n    onChangeOwner,\n    onQuickstartGuide,\n  } = useKafkaInstancesTable({\n    instancesHref,\n    instanceDeletionHref,\n    instanceSelectedHref,\n    instanceCreationHref,\n    instanceChangeOwnerHref,\n  });\n\n  const { data } = useKafkas({\n    page,\n    perPage,\n    name: namesChips.chips,\n    owner: ownersChips.chips,\n    status: statusesChips.chips,\n    sort: sort || \"createdAt\",\n    direction: sortDirection,\n    deployment: \"standard\",\n  });\n\n  return (\n    <>\n      <ConnectedControlPlaneHeader activeSection={activeSection} />\n      <KafkaInstances\n        columns={\"standard\"}\n        instances={data?.instances}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        names={namesChips.chips}\n        owners={ownersChips.chips}\n        statuses={statusesChips.chips}\n        isColumnSortable={isColumnSortable}\n        onPageChange={setPagination}\n        onSearchName={namesChips.add}\n        onRemoveNameChip={namesChips.remove}\n        onRemoveNameChips={namesChips.clear}\n        onSearchOwner={ownersChips.add}\n        onRemoveOwnerChip={ownersChips.remove}\n        onRemoveOwnerChips={ownersChips.clear}\n        onSearchStatus={statusesChips.toggle}\n        onRemoveStatusChip={statusesChips.remove}\n        onRemoveStatusChips={statusesChips.clear}\n        onClearAllFilters={onClearAllFilters}\n        onChangeOwner={onChangeOwner}\n        onDelete={onDelete}\n        onCreate={onCreate}\n        isRowSelected={({ row }) => row.id === selectedInstance}\n        getUrlForInstance={getUrlForInstance}\n        onDetails={onDetailsClick}\n        onConnection={onConnectionsClick}\n        onClickConnectionTabLink={() => {\n          /* TODO */\n        }}\n        onClickSupportLink={() => {\n          /* TODO */\n        }}\n        onInstanceLinkClick={() => {\n          /* TODO */\n        }}\n        onQuickstartGuide={onQuickstartGuide}\n        canHaveInstanceLink={({ status }) => ReadyStatuses.includes(status)}\n        canOpenConnection={({ status }) => ReadyStatuses.includes(status)}\n        canChangeOwner={() => true}\n        canDelete={() => true}\n      />\n    </>\n  );\n};\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport { useCreateKafkaMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { CreateKafkaInstanceServices } from \"ui\";\nimport { CreateKafkaInstance } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { ControlPlaneRouteRoot } from \"../routesConsts\";\nimport { useCreateKafkaCallbacks } from \"./useCreateKafkaCallbacks\";\n\nexport const CreateKafkaInstanceRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const callbacks = useCreateKafkaCallbacks();\n  const createKafkaInstance = useCreateKafkaMutation();\n  const qsContext = useContext(QuickStartContext);\n\n  const onClickKafkaOverview = () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`overview`);\n  };\n\n  const onClickQuickStart = useCallback(() => {\n    qsContext.setActiveQuickStart &&\n      qsContext.setActiveQuickStart(\"getting-started\");\n  }, [qsContext]);\n\n  const onCreate = useCallback<CreateKafkaInstanceServices[\"onCreate\"]>(\n    function (instance, onSuccess, onError) {\n      const onOnSuccess = () => {\n        onSuccess();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.push(ControlPlaneRouteRoot);\n      };\n      void createKafkaInstance.mutateAsync({\n        instance,\n        onSuccess: onOnSuccess,\n        onError,\n      });\n    },\n    [createKafkaInstance, history]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  return (\n    <CreateKafkaInstance\n      {...callbacks}\n      isModalOpen={true}\n      onCancel={onCancel}\n      onClickContactUs={onClickKafkaOverview}\n      onClickKafkaOverview={onClickKafkaOverview}\n      onClickQuickStart={onClickQuickStart}\n      onCreate={onCreate}\n      onLearnHowToAddStreamingUnits={onClickKafkaOverview}\n      onLearnMoreAboutSizes={onClickKafkaOverview}\n      subscriptionOptionsHref={document.location.href + \"/../overview\"}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport {\n  useDeveloperInstanceAvailabilityFetchQuery,\n  useProviderRegionSizesFetchQuery,\n  useProvidersWithRegionsFetchQuery,\n  useStandardQuotaFetchQuery,\n} from \"consoledot-api\";\nimport { useCallback } from \"react\";\nimport type { CreateKafkaInstanceProps, StandardSizes } from \"ui\";\n\nexport function useCreateKafkaCallbacks() {\n  const { auth } = useChrome();\n\n  const getUsername = useCallback(async () => {\n    const username = (await auth.getUser())?.identity.user?.username;\n    if (!username) {\n      return Promise.reject(\"Invalid user\");\n    }\n    return username;\n  }, [auth]);\n\n  const checkDeveloperAvailabilityQuery =\n    useDeveloperInstanceAvailabilityFetchQuery();\n\n  const standardQuotaQuery = useStandardQuotaFetchQuery(true);\n  const providersWithRegionsQuery = useProvidersWithRegionsFetchQuery();\n  const getProvidersInfo = useProvidersWithRegionsFetchQuery();\n  const getProviderRegionsSizes = useProviderRegionSizesFetchQuery();\n\n  const checkDeveloperAvailability = useCallback<\n    CreateKafkaInstanceProps[\"checkDeveloperAvailability\"]\n  >(\n    async ({ onAvailable, onUsed, onUnavailable }) => {\n      try {\n        const available = await checkDeveloperAvailabilityQuery(getUsername);\n\n        if (available) {\n          onAvailable();\n        } else {\n          onUsed();\n        }\n      } catch {\n        onUnavailable();\n      }\n    },\n    [checkDeveloperAvailabilityQuery, getUsername]\n  );\n\n  const checkStandardQuota = useCallback<\n    CreateKafkaInstanceProps[\"checkStandardQuota\"]\n  >(\n    async ({ onQuotaAvailable, onNoQuotaAvailable, onOutOfQuota }) => {\n      try {\n        const {\n          hasTrialQuota,\n          remainingPrepaidQuota,\n          remainingMarketplaceQuota,\n          marketplaceSubscriptions,\n        } = await standardQuotaQuery();\n\n        if (\n          remainingMarketplaceQuota !== undefined ||\n          remainingPrepaidQuota !== undefined\n        ) {\n          if (\n            (remainingMarketplaceQuota || 0) === 0 &&\n            (remainingPrepaidQuota || 0) === 0\n          ) {\n            onOutOfQuota({\n              quota: {\n                marketplaceSubscriptions,\n              },\n            });\n          } else {\n            onQuotaAvailable({\n              quota: {\n                remainingPrepaidQuota,\n                remainingMarketplaceQuota,\n                marketplaceSubscriptions,\n              },\n            });\n          }\n        } else {\n          onNoQuotaAvailable({ hasTrialQuota });\n        }\n      } catch (e) {\n        onNoQuotaAvailable({ hasTrialQuota: false });\n      }\n    },\n    [standardQuotaQuery]\n  );\n\n  const fetchProvidersWithRegions = useCallback<\n    CreateKafkaInstanceProps[\"fetchProvidersWithRegions\"]\n  >(\n    async (plan, { onAvailable, onUnavailable }) => {\n      try {\n        const providers = await providersWithRegionsQuery(plan);\n        onAvailable(providers);\n      } catch {\n        onUnavailable();\n      }\n    },\n    [providersWithRegionsQuery]\n  );\n\n  const getStandardSizes = useCallback<\n    CreateKafkaInstanceProps[\"getStandardSizes\"]\n  >(\n    async (provider, region) => {\n      const providersInfo = await getProvidersInfo(\"standard\");\n      const providerInfo = providersInfo.providers.find(\n        (p) => p.id === provider\n      );\n      if (!providerInfo) {\n        return Promise.reject(\"Invalid cloud provider\");\n      }\n      return getProviderRegionsSizes(providerInfo, region, \"standard\");\n    },\n    [getProviderRegionsSizes, getProvidersInfo]\n  );\n\n  const getTrialSizes = useCallback<CreateKafkaInstanceProps[\"getTrialSizes\"]>(\n    async (provider, region) => {\n      let standardSizes: StandardSizes;\n\n      try {\n        standardSizes = await getStandardSizes(provider, region);\n        if (standardSizes.length === 0) {\n          throw new Error(\"No standard sizes found\");\n        }\n      } catch {\n        // It can happen that the selected provider doesn't support standard instances.\n        // In this case we provide a faux sample list of sizes just to make the slider happy.\n        standardSizes = [\n          { id: \"1\", displayName: \"1\", quota: 1 },\n          { id: \"2\", displayName: \"2\", quota: 2 },\n        ] as StandardSizes;\n      }\n      const providersInfo = await getProvidersInfo(\"developer\");\n      const providerInfo = providersInfo.providers.find(\n        (p) => p.id === provider\n      );\n      if (!providerInfo) {\n        return Promise.reject(\"Invalid cloud provider\");\n      }\n      const trialSizes = await getProviderRegionsSizes(\n        providerInfo,\n        region,\n        \"developer\"\n      );\n      return {\n        standard: standardSizes,\n        trial: trialSizes[0],\n      };\n    },\n    [getProviderRegionsSizes, getProvidersInfo, getStandardSizes]\n  );\n  return {\n    checkDeveloperAvailability,\n    checkStandardQuota,\n    fetchProvidersWithRegions,\n    getStandardSizes,\n    getTrialSizes,\n  };\n}\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport { useCreateDedicatedKafkaMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateDedicatedKafkaInstance } from \"ui\";\nimport type { CreateDedicatedKafkaInstanceServices } from \"ui/src/components/CreateKafkaInstance/machines\";\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { DedicatedControlPlaneRouteRoot } from \"../routesConsts\";\nimport { useCreateDedicatedKafkaCallbacks } from \"./useCreateDedicatedKafkaCallbacks\";\n\nexport const CreateDedicatedKafkaInstanceRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const callbacks = useCreateDedicatedKafkaCallbacks();\n  const createDedicatedKafkaInstance = useCreateDedicatedKafkaMutation();\n  const qsContext = useContext(QuickStartContext);\n\n  const onClickKafkaOverview = () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`overview`);\n  };\n\n  const onClickQuickStart = useCallback(() => {\n    qsContext.setActiveQuickStart &&\n      qsContext.setActiveQuickStart(\"getting-started\");\n  }, [qsContext]);\n\n  const onCreate = useCallback<\n    CreateDedicatedKafkaInstanceServices[\"onCreate\"]\n  >(\n    function (instance, onSuccess, onError) {\n      const onOnSuccess = () => {\n        onSuccess();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.push(DedicatedControlPlaneRouteRoot);\n      };\n      void createDedicatedKafkaInstance.mutateAsync({\n        instance,\n        onSuccess: onOnSuccess,\n        onError,\n      });\n    },\n    [createDedicatedKafkaInstance, history]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  return (\n    <CreateDedicatedKafkaInstance\n      {...callbacks}\n      isModalOpen={true}\n      onCancel={onCancel}\n      onClickContactUs={onClickKafkaOverview}\n      onClickKafkaOverview={onClickKafkaOverview}\n      onClickQuickStart={onClickQuickStart}\n      onCreate={onCreate}\n      onLearnHowToAddStreamingUnits={onClickKafkaOverview}\n      onLearnMoreAboutSizes={onClickKafkaOverview}\n      subscriptionOptionsHref={document.location.href + \"/../overview\"}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import {\n  useDedicatedClustersFetchQuery,\n  useDedicatedClusterSizesFetchQuery,\n  useDedicatedQuotaFetchQuery,\n} from \"consoledot-api\";\nimport { useCallback } from \"react\";\nimport type { CreateDedicatedKafkaInstanceProps } from \"ui\";\n\nexport function useCreateDedicatedKafkaCallbacks() {\n  const dedicatedQuotaQuery = useDedicatedQuotaFetchQuery(true);\n  const dedicatedClustersQuery = useDedicatedClustersFetchQuery();\n  const dedicatedClusterSizesQuery = useDedicatedClusterSizesFetchQuery();\n\n  const checkDedicatedQuota = useCallback<\n    CreateDedicatedKafkaInstanceProps[\"checkDedicatedQuota\"]\n  >(\n    async ({ onQuotaAvailable, onNoQuotaAvailable, onOutOfQuota }) => {\n      try {\n        const { remainingDedicatedQuota } = await dedicatedQuotaQuery();\n\n        if (remainingDedicatedQuota !== undefined) {\n          if ((remainingDedicatedQuota || 0) === 0) {\n            onOutOfQuota({});\n          } else {\n            onQuotaAvailable({\n              quota: {\n                remainingDedicatedQuota,\n              },\n            });\n          }\n        } else {\n          onNoQuotaAvailable({});\n        }\n      } catch (e) {\n        onNoQuotaAvailable({});\n      }\n    },\n    [dedicatedQuotaQuery]\n  );\n\n  const fetchClusters = useCallback<\n    CreateDedicatedKafkaInstanceProps[\"fetchClusters\"]\n  >(\n    async (plan, { onAvailable, onUnavailable }) => {\n      try {\n        const { clusters } = await dedicatedClustersQuery();\n        onAvailable({\n          clusters,\n          defaultCluster: clusters.length > 0 ? clusters[0] : undefined,\n        });\n      } catch {\n        onUnavailable();\n      }\n    },\n    [dedicatedClustersQuery]\n  );\n\n  const getDedicatedSizes = useCallback<\n    CreateDedicatedKafkaInstanceProps[\"getDedicatedSizes\"]\n  >(\n    (cluster) => dedicatedClusterSizesQuery({ clusterId: cluster.id }),\n    [dedicatedClusterSizesQuery]\n  );\n\n  return {\n    checkDedicatedQuota,\n    fetchClusters,\n    getDedicatedSizes,\n  };\n}\n","import { useKafka } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { ControlPlaneRouteParams } from \"./routesConsts\";\nimport {\n  ControlPlaneRoutePath,\n  DedicatedControlPlaneRoutePath,\n} from \"./routesConsts\";\n\nexport function useControlPlaneGate() {\n  const standardMatch = useRouteMatch<ControlPlaneRouteParams>(\n    ControlPlaneRoutePath\n  );\n  const enterpriseMatch = useRouteMatch<ControlPlaneRouteParams>(\n    DedicatedControlPlaneRoutePath\n  );\n  const match = standardMatch || enterpriseMatch;\n  if (!match) {\n    throw Error(\"useControlPlaneGate used outside the expected route\");\n  }\n  const { data: instance } = useKafka(match.params.id, true);\n  return { instance: instance as NonNullable<typeof instance>, match };\n}\n","import { useDeleteKafkaMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteKafkaInstance } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { useControlPlaneGate } from \"../useControlPlaneGate\";\n\nexport const DeleteKafkaInstanceRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useControlPlaneGate();\n  const { mutateAsync, isLoading: isDeleting } = useDeleteKafkaMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      id: instance.id,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instancesHref);\n      },\n    });\n  }, [mutateAsync, history, instance?.id, instancesHref]);\n\n  return (\n    <DeleteKafkaInstance\n      isModalOpen={true}\n      isDeleting={isDeleting}\n      onCancel={onCancel}\n      onDelete={onDelete}\n      instanceName={\n        ReadyStatuses.includes(instance.status) ? instance.name : undefined\n      }\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useUpdateKafkaMutation, useUserAccounts } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { ChangeKafkaOwnerProps } from \"ui\";\nimport { ChangeKafkaOwner } from \"ui\";\n\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { useControlPlaneGate } from \"../useControlPlaneGate\";\n\nexport const ChangeOwnerRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useControlPlaneGate();\n  const { data: accounts } = useUserAccounts({});\n  const updateInstance = useUpdateKafkaMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  const onConfirm = useCallback(\n    (newOwner: string) => {\n      updateInstance.mutate(\n        {\n          id: instance.id,\n          updates: { owner: newOwner },\n        },\n        {\n          onSuccess: () => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            history.replace(instancesHref);\n          },\n        }\n      );\n    },\n    [history, instance.id, instancesHref, updateInstance]\n  );\n\n  const savingState = ((): ChangeKafkaOwnerProps[\"savingState\"] => {\n    if (updateInstance.isLoading) return \"saving\";\n    if (updateInstance.isError) {\n      return updateInstance.error.type === \"invalid-user\"\n        ? \"invalid-user\"\n        : \"unknown-error\";\n    }\n    return \"idle\";\n  })();\n\n  return (\n    <ChangeKafkaOwner\n      currentOwner={instance.owner}\n      accounts={accounts?.accounts.map((a) => ({\n        id: a.username,\n        displayName: a.displayName,\n      }))}\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n      savingState={savingState}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  CreateKafkaInstanceRoute,\n  DeleteKafkaInstanceRoute,\n  KafkaInstancesRoute,\n} from \"./routes\";\nimport { ChangeOwnerRoute } from \"./routes/ChangeOwnerRoute\";\nimport {\n  ControlPlaneChangeOwnerPath,\n  ControlPlaneDeleteInstancePath,\n  ControlPlaneNewInstancePath,\n  ControlPlaneRoutePath,\n  ControlPlaneRouteRoot,\n} from \"./routesConsts\";\n\nexport const ControlPlaneRoutes: VoidFunctionComponent = () => {\n  return (\n    <Route path={ControlPlaneRoutePath} exact>\n      <Route path={ControlPlaneNewInstancePath}>\n        <CreateKafkaInstanceRoute instancesHref={ControlPlaneRouteRoot} />\n      </Route>\n      <RedirectOnGateError redirectUrl={ControlPlaneRouteRoot}>\n        <Route path={ControlPlaneDeleteInstancePath}>\n          <DeleteKafkaInstanceRoute instancesHref={ControlPlaneRouteRoot} />\n        </Route>\n        <Route path={ControlPlaneChangeOwnerPath}>\n          <ChangeOwnerRoute instancesHref={ControlPlaneRouteRoot} />\n        </Route>\n      </RedirectOnGateError>\n      <KafkaInstancesRoute\n        activeSection={\"standard\"}\n        instancesHref={ControlPlaneRouteRoot}\n        instanceSelectedHref={(id) => `${ControlPlaneRouteRoot}/${id}`}\n        instanceCreationHref={`${ControlPlaneRouteRoot}/create`}\n        instanceDeletionHref={(id) => `${ControlPlaneRouteRoot}/${id}/delete`}\n        instanceChangeOwnerHref={(id) =>\n          `${ControlPlaneRouteRoot}/${id}/change-owner`\n        }\n        getUrlForInstance={(instance) =>\n          `${ControlPlaneRouteRoot}/${instance.id}/details`\n        }\n      />\n    </Route>\n  );\n};\n","import { useDedicatedClusters } from \"consoledot-api\";\nimport { useStandardQuota } from \"consoledot-api/src/queries/useStandardQuota\";\n\nexport function useDedicatedGate() {\n  const quota = useStandardQuota();\n  const dedicated = useDedicatedClusters({ refetch: false });\n\n  if (\n    dedicated.isSuccess &&\n    quota.data &&\n    quota.data.hasStandardQuota === false\n  ) {\n    return \"dedicated-only\" as const;\n  }\n\n  if (dedicated.isError) {\n    return \"standard-only\" as const;\n  }\n\n  if (!quota.isFetched && !dedicated.isFetched) {\n    return \"loading\" as const;\n  }\n\n  return \"standard-and-dedicated\" as const;\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { fetchOrganization, fetchStandardQuota } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useStandardQuota() {\n  const { refetchInterval } = useApiConfiguration();\n  const { account } = useApi();\n  const ams = account();\n\n  return useQuery({\n    queryKey: masQueries.quota.standardAvailable(),\n    queryFn: async () => {\n      const organization = await fetchOrganization((...args) =>\n        ams.apiAccountsMgmtV1CurrentAccountGet(...args)\n      );\n      if (!organization) {\n        return Promise.reject(\"Missing organization id\");\n      }\n      return fetchStandardQuota(\n        (...args) =>\n          ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(...args),\n        organization\n      );\n    },\n    refetchInterval,\n  });\n}\n","import { useDedicatedClusters } from \"consoledot-api\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { DedicatedClusters, EmptyStateNoDedicatedEntitlement } from \"ui\";\nimport { useDedicatedGate } from \"../../useDedicatedGate\";\nimport { ConnectedControlPlaneHeader } from \"./ConnectedControlPlaneHeader\";\n\nexport const DedicatedClustersRoute: FunctionComponent = () => {\n  const dedicatedGate = useDedicatedGate();\n  const noEntitlement = dedicatedGate === \"standard-only\";\n\n  if (noEntitlement) {\n    return (\n      <>\n        <ConnectedControlPlaneHeader activeSection={\"clusters\"} />\n        <EmptyStateNoDedicatedEntitlement\n          onQuickstartGuide={() => {\n            /* TODO */\n          }}\n        />\n      </>\n    );\n  }\n\n  return <DedicatedClustersWithEntitlementRoute />;\n};\n\nexport const DedicatedClustersWithEntitlementRoute: VoidFunctionComponent =\n  () => {\n    const { data } = useDedicatedClusters();\n\n    return (\n      <>\n        <ConnectedControlPlaneHeader activeSection={\"clusters\"} />\n        <DedicatedClusters\n          clusters={data?.clusters}\n          itemCount={data?.count}\n          page={1}\n          onPageChange={() => {\n            /* TODO */\n          }}\n          onQuickstartGuide={() => {\n            /* TODO */\n          }}\n        />\n      </>\n    );\n  };\n","import { useDedicatedClusters, useKafkas } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport type { ControlPlaneHeaderProps, KafkaInstancesProps } from \"ui\";\nimport {\n  EmptyStateNoDedicatedClusters,\n  EmptyStateNoDedicatedEntitlement,\n  KafkaInstances,\n} from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport { useDedicatedGate } from \"../../useDedicatedGate\";\nimport { ConnectedControlPlaneHeader } from \"./ConnectedControlPlaneHeader\";\nimport { useKafkaInstancesTable } from \"./useKafkaInstancesTable\";\n\nexport type KafkaInstancesRoute = {\n  activeSection: ControlPlaneHeaderProps[\"activeSection\"];\n  instancesHref: string;\n  instanceSelectedHref: (id: string) => string;\n  instanceCreationHref: string;\n  instanceDeletionHref: (id: string) => string;\n  instanceChangeOwnerHref: (id: string) => string;\n} & Pick<KafkaInstancesProps, \"getUrlForInstance\">;\n\nexport const DedicatedKafkaInstancesRoute: FunctionComponent<\n  KafkaInstancesRoute\n> = (props) => {\n  const dedicatedGate = useDedicatedGate();\n  const noEntitlement = dedicatedGate === \"standard-only\";\n\n  if (noEntitlement) {\n    return (\n      <>\n        <ConnectedControlPlaneHeader activeSection={props.activeSection} />\n        <EmptyStateNoDedicatedEntitlement\n          onQuickstartGuide={() => {\n            /* TODO */\n          }}\n        />\n      </>\n    );\n  }\n\n  return <DedicatedKafkaInstancesWithEntitlementRoute {...props} />;\n};\n\nexport const DedicatedKafkaInstancesWithEntitlementRoute: FunctionComponent<\n  KafkaInstancesRoute\n> = ({\n  activeSection,\n  instancesHref,\n  instanceDeletionHref,\n  instanceSelectedHref,\n  instanceCreationHref,\n  instanceChangeOwnerHref,\n  getUrlForInstance,\n}) => {\n  const {\n    selectedInstance,\n    page,\n    perPage,\n    setPagination,\n    namesChips,\n    ownersChips,\n    statusesChips,\n    isColumnSortable,\n    sort,\n    sortDirection,\n    onClearAllFilters,\n    onDetailsClick,\n    onConnectionsClick,\n    onCreate,\n    onDelete,\n    onChangeOwner,\n    onQuickstartGuide,\n  } = useKafkaInstancesTable({\n    instancesHref,\n    instanceDeletionHref,\n    instanceSelectedHref,\n    instanceCreationHref,\n    instanceChangeOwnerHref,\n  });\n  const dedicatedClusters = useDedicatedClusters();\n  const { data } = useKafkas({\n    page,\n    perPage,\n    name: namesChips.chips,\n    owner: ownersChips.chips,\n    status: statusesChips.chips,\n    sort: sort || \"createdAt\",\n    direction: sortDirection,\n    deployment: \"clusters\",\n  });\n\n  const hasReadyClusters = dedicatedClusters.isLoading\n    ? true // let's use the table default loading logic until we know if we have ready clusters\n    : (dedicatedClusters.data?.clusters || []).filter(\n        (c) => c.status === \"ready\"\n      ).length > 0;\n\n  return (\n    <>\n      <ConnectedControlPlaneHeader activeSection={activeSection} />\n      {hasReadyClusters ? (\n        <KafkaInstances\n          columns={\"dedicated\"}\n          instances={data?.instances}\n          itemCount={data?.count}\n          page={page}\n          perPage={perPage}\n          names={namesChips.chips}\n          owners={ownersChips.chips}\n          statuses={statusesChips.chips}\n          isColumnSortable={isColumnSortable}\n          onPageChange={setPagination}\n          onSearchName={namesChips.add}\n          onRemoveNameChip={namesChips.remove}\n          onRemoveNameChips={namesChips.clear}\n          onSearchOwner={ownersChips.add}\n          onRemoveOwnerChip={ownersChips.remove}\n          onRemoveOwnerChips={ownersChips.clear}\n          onSearchStatus={statusesChips.toggle}\n          onRemoveStatusChip={statusesChips.remove}\n          onRemoveStatusChips={statusesChips.clear}\n          onClearAllFilters={onClearAllFilters}\n          onChangeOwner={onChangeOwner}\n          onDelete={onDelete}\n          onCreate={onCreate}\n          isRowSelected={({ row }) => row.id === selectedInstance}\n          getUrlForInstance={getUrlForInstance}\n          onDetails={onDetailsClick}\n          onConnection={onConnectionsClick}\n          onClickConnectionTabLink={() => {\n            /* TODO */\n          }}\n          onClickSupportLink={() => {\n            /* TODO */\n          }}\n          onInstanceLinkClick={() => {\n            /* TODO */\n          }}\n          onQuickstartGuide={onQuickstartGuide}\n          canHaveInstanceLink={({ status }) => ReadyStatuses.includes(status)}\n          canOpenConnection={({ status }) => ReadyStatuses.includes(status)}\n          canChangeOwner={() => true}\n          canDelete={() => true}\n        />\n      ) : (\n        <EmptyStateNoDedicatedClusters onQuickstartGuide={onQuickstartGuide} />\n      )}\n    </>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  CreateDedicatedKafkaInstanceRoute,\n  DeleteKafkaInstanceRoute,\n} from \"./routes\";\nimport { ChangeOwnerRoute } from \"./routes/ChangeOwnerRoute\";\nimport { DedicatedClustersRoute } from \"./routes/DedicatedClustersRoute\";\nimport { DedicatedKafkaInstancesRoute } from \"./routes/DedicatedKafkaInstancesRoute\";\nimport {\n  DedicatedControlPlaneChangeOwnerPath,\n  DedicatedControlPlaneClustersPath,\n  DedicatedControlPlaneDeleteInstancePath,\n  DedicatedControlPlaneNewInstancePath,\n  DedicatedControlPlaneRoutePath,\n  DedicatedControlPlaneRouteRoot,\n} from \"./routesConsts\";\n\nexport const DedicatedControlPlaneRoutes: VoidFunctionComponent = () => {\n  return (\n    <Route path={DedicatedControlPlaneRoutePath}>\n      <Route path={DedicatedControlPlaneNewInstancePath}>\n        <CreateDedicatedKafkaInstanceRoute\n          instancesHref={DedicatedControlPlaneRouteRoot}\n        />\n      </Route>\n      <RedirectOnGateError redirectUrl={DedicatedControlPlaneRoutePath}>\n        <Route path={DedicatedControlPlaneDeleteInstancePath}>\n          <DeleteKafkaInstanceRoute\n            instancesHref={DedicatedControlPlaneRouteRoot}\n          />\n        </Route>\n        <Route path={DedicatedControlPlaneChangeOwnerPath}>\n          <ChangeOwnerRoute instancesHref={DedicatedControlPlaneRouteRoot} />\n        </Route>\n      </RedirectOnGateError>\n\n      <Switch>\n        <Route path={DedicatedControlPlaneClustersPath}>\n          <DedicatedClustersRoute />\n        </Route>\n\n        <Route path={DedicatedControlPlaneRoutePath} exact>\n          <DedicatedKafkaInstancesRoute\n            activeSection={\"dedicated\"}\n            instancesHref={DedicatedControlPlaneRouteRoot}\n            instanceSelectedHref={(id) =>\n              `${DedicatedControlPlaneRouteRoot}/${id}`\n            }\n            instanceCreationHref={`${DedicatedControlPlaneRouteRoot}/create`}\n            instanceDeletionHref={(id) =>\n              `${DedicatedControlPlaneRouteRoot}/${id}/delete`\n            }\n            instanceChangeOwnerHref={(id) =>\n              `${DedicatedControlPlaneRouteRoot}/${id}/change-owner`\n            }\n            getUrlForInstance={(instance) =>\n              `${DedicatedControlPlaneRouteRoot}/${instance.id}/details`\n            }\n          />\n        </Route>\n      </Switch>\n    </Route>\n  );\n};\n","import type { ControlPlaneNavigationProps } from \"../control-plane/routesConsts\";\n\nexport const DataPlaneRoutePath = (root: string) =>\n  `${root}/:id/details` as const;\n\nexport const DataPlaneTopicRoutePath = (root: string) =>\n  `${root}/:id/details/topics/:topicName` as const;\n\nexport const DataPlaneConsumerGroupRoutePath = (root: string) =>\n  `${root}/:id/details/consumer-groups/:consumerGroupId` as const;\n\nexport const DataPlaneTopicConsumerGroupRoutePath = (root: string) =>\n  `${root}/:id/details/topics/:topicName/consumer-groups/:consumerGroupId` as const;\n\nexport const DataPlanePermissionsRoutePath = (root: string) =>\n  `${root}/:id/details/acls/select-account/:selectedAccount` as const;\n\nexport const DataPlaneSelectAccountsRoutePath = (root: string) =>\n  `${root}/:id/details/acls/select-account` as const;\n\nexport const DataPlanePermissionsTableRoutePath = (root: string) =>\n  `${root}/:id/details/acls` as const;\n\nexport type DataPlaneRouteParams = { id: string };\nexport type DataPlaneTopicRouteParams = { id: string; topicName: string };\nexport type DataPlaneConsumerGroupRouteParams = {\n  id: string;\n  consumerGroupId: string;\n};\n\nexport type DataPlaneTopicConsumerRouteParams = {\n  id: string;\n  topicName: string;\n  consumerGroupId: string;\n};\n\nexport type DataPlanePermissionsRouteParams = {\n  selectedAccount: string;\n};\n\nexport type DataPlaneNavigationProps = {\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneTopicNavigationProps = {\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n  topicHref: (instanceId: string, topicName: string) => string;\n  deleteTopicHref: (instanceId: string, topicName: string) => string;\n  updateTopicHref: (instanceId: string, topicName: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneConsumerGroupNavigationsProps = {\n  instanceTopicsHref: (instanceId: string) => string;\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n  viewPartitionConsumerGroupHref: (\n    instanceId: string,\n    consumerGroupId: string\n  ) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneTopicConsumerGroupNavigationsProps = {\n  instanceTopicConsumerGroupsHref: (\n    instanceId: string,\n    topicName: string\n  ) => string;\n  viewTopicPartitionConsumerGroupHref: (\n    instanceId: string,\n    consumerGroupId: string,\n    topicName: string\n  ) => string;\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlanePermissionsNavigationProps = {\n  managePermissionsHref: (instanceId: string) => string;\n  editPermissionsHref: (instanceId: string, selectedAccount: string) => string;\n} & ControlPlaneNavigationProps;\n","import { useKafka } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../control-plane/routesConsts\";\nimport type { DataPlaneRouteParams } from \"./routesConsts\";\nimport { DataPlaneRoutePath } from \"./routesConsts\";\n\nexport function useDataPlaneGate() {\n  const standardMatch = useRouteMatch<DataPlaneRouteParams>(\n    DataPlaneRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlaneRouteParams>(\n    DataPlaneRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"useDataPlaneGate used outside the expected route\");\n  }\n  const { data: instance } = useKafka(match.params.id, true);\n  return { instance: instance as NonNullable<typeof instance>, match };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlaneHeaderProps } from \"ui\";\nimport { DataPlaneHeader } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport { useDrawer } from \"../../control-plane\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\n\nexport const DataPlaneHeaderConnected: VoidFunctionComponent<\n  ControlPlaneNavigationProps & Pick<DataPlaneHeaderProps, \"activeSection\">\n> = ({ instancesHref, activeSection }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveTab, toggleExpanded } = useDrawer();\n\n  const {\n    instance,\n    match: { url },\n  } = useDataPlaneGate();\n\n  const sectionsHref = {\n    dashboard: `${url}/dashboard`,\n    topics: `${url}/topics`,\n    consumer: `${url}/consumer-groups`,\n    permissions: `${url}/acls`,\n    settings: `${url}/settings`,\n  };\n\n  const onDelete = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/delete`);\n  }, [history, instance, instancesHref]);\n\n  return (\n    <DataPlaneHeader\n      instancesHref={instancesHref}\n      instanceName={instance?.name || \"\"}\n      activeSection={activeSection}\n      sectionsHref={sectionsHref}\n      onDetails={() => {\n        setActiveTab(\"details\");\n        toggleExpanded(true);\n      }}\n      onConnection={() => {\n        setActiveTab(\"connections\");\n        toggleExpanded(true);\n      }}\n      canOpenConnection={\n        instance ? ReadyStatuses.includes(instance?.status) : false\n      }\n      canChangeOwner={true /* TODO */}\n      onChangeOwner={() => false /* TODO */}\n      canDelete={true /* TODO */}\n      onDelete={onDelete}\n    />\n  );\n};\n","import { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { usePaginationSearchParams } from \"@rhoas/app-services-ui-components\";\nimport {\n  useAcls,\n  useDeletePermissionsMutation,\n  useServiceAccounts,\n  useUserAccounts,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport type { Account } from \"ui\";\nimport { PermissionsTable, PrincipalType } from \"ui\";\nimport type { DataPlanePermissionsNavigationProps } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const PermissionsRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ instancesHref, managePermissionsHref, editPermissionsHref }) => {\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const { instance } = useDataPlaneGate();\n  const { mutateAsync } = useDeletePermissionsMutation();\n  const dispatch = useDispatch();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { data: acls } = useAcls({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    page,\n    perPage,\n  });\n\n  const { data: accounts } = useUserAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: serviceAccounts } = useServiceAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const userAccounts: Account[] | undefined = accounts?.accounts.map(\n    (userAccount) => {\n      return {\n        id: userAccount.username,\n        displayName: userAccount.displayName,\n        email: userAccount.email,\n        principalType: PrincipalType.UserAccount,\n      };\n    }\n  );\n\n  const serviceAccountList: Account[] | undefined =\n    serviceAccounts?.serviceAccounts.map((serviceAccount) => {\n      return {\n        id: serviceAccount.id,\n        displayName: serviceAccount.displayName,\n        principalType: PrincipalType.ServiceAccount,\n      };\n    });\n\n  const allAccounts =\n    serviceAccountList != undefined && userAccounts != undefined\n      ? [...serviceAccountList, ...userAccounts]\n      : undefined;\n\n  const onDeleteSelected = useCallback(\n    (rowIndex: number[]) => {\n      rowIndex.map((value) => {\n        const rowToDelete = acls?.groups[value];\n        void mutateAsync({\n          instanceId: instance.id,\n          adminUrl: instance.adminUrl || \"\",\n          acl: {\n            patternType: rowToDelete?.resource.patternType,\n            permissionType: rowToDelete?.permission.permission,\n            principal: rowToDelete?.account,\n            resourceName: rowToDelete?.resource.resourceName,\n            operation: rowToDelete?.permission.operation,\n            resourceType: rowToDelete?.resource.resourceType,\n          },\n          onError: (_, message) => {\n            dispatch(\n              addNotification({\n                variant: \"danger\",\n                title: message,\n                dismissable: true,\n                id: \"delete-error\",\n              })\n            );\n          },\n          onSuccess: () => {\n            //We have no action yet to confirm if delete was successfull.\n          },\n        });\n      });\n    },\n    [acls?.groups, mutateAsync, instance.id, instance.adminUrl, dispatch]\n  );\n\n  const onDelete = useCallback(\n    (rowIndex: number) => {\n      const rowToDelete = acls?.groups[rowIndex];\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl || \"\",\n        acl: {\n          patternType: rowToDelete?.resource.patternType,\n          permissionType: rowToDelete?.permission.permission,\n          principal: rowToDelete?.account,\n          resourceName: rowToDelete?.resource.resourceName,\n          operation: rowToDelete?.permission.operation,\n          resourceType: rowToDelete?.resource.resourceType,\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"delete-error\",\n            })\n          );\n        },\n        onSuccess: () => {\n          // No action\n        },\n      });\n    },\n    [acls?.groups, mutateAsync, instance.id, instance.adminUrl, dispatch]\n  );\n\n  const onManagePermissionsActionItem = useCallback(\n    (account: string) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(editPermissionsHref(instance.id, account));\n    },\n    [history, instance.id, editPermissionsHref]\n  );\n  const onManagePermission = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"permissions\"}\n      />\n\n      <PermissionsTable\n        allAccounts={allAccounts}\n        permissions={acls?.groups}\n        onDelete={onDelete}\n        onDeleteSelected={onDeleteSelected}\n        onManagePermissions={onManagePermission}\n        onPerPageChange={setPaginationQuery}\n        itemCount={acls?.count}\n        page={page}\n        perPage={perPage}\n        onPageChange={setPagination}\n        onManagePermissionsActionItem={onManagePermissionsActionItem}\n      />\n    </>\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport { KafkaTopicsSortableColumns, useTopics } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { KafkaTopics, useTopicLabels } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { ControlPlaneRouteRoot } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const TopicsRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const labels = useTopicLabels();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useDataPlaneGate();\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const onCreate = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${ControlPlaneRouteRoot}/${instance.id}/details/topics/create-topic`\n    );\n  }, [history, instance.id]);\n\n  const topicChips = useURLSearchParamsChips(\"topic\", resetPaginationQuery);\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaTopicsSortableColumns,\n    labels.fields\n  );\n  const { data } = useTopics({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    filter: topicChips.chips[0],\n    plan: instance.plan,\n  });\n\n  const onDeleteTopic = useCallback(\n    (topicName: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topicName}/delete`\n      );\n    },\n    [history, instance.id]\n  );\n\n  const onEditTopic = useCallback(\n    (topicName: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topicName}/edit`\n      );\n    },\n    [history, instance.id]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"topics\"}\n      />\n      <KafkaTopics\n        topics={data?.topics}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        topicName={topicChips.chips}\n        getUrlFortopic={(row) => `./topics/${row.name}`}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeleteTopic(row.name)}\n        onEdit={(row) => onEditTopic(row.name)}\n        onSearchTopic={(value) => {\n          topicChips.clear();\n          topicChips.toggle(value);\n        }}\n        onClearAllFilters={topicChips.clear}\n        onCreateTopic={onCreate}\n        onPageChange={setPagination}\n        onRemoveTopicChip={topicChips.clear}\n        onRemoveTopicChips={topicChips.clear}\n      />\n    </>\n  );\n};\n","import { useUpdateKafkaMutation } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { SettingsProps } from \"ui\";\nimport { Settings as SettingsComp } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const SettingsRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const { instance } = useDataPlaneGate();\n  const updateInstance = useUpdateKafkaMutation();\n\n  const onSubmitReAuthentication = useCallback<\n    SettingsProps[\"onSubmitReAuthentication\"]\n  >(\n    async (reauthenticationEnabled) => {\n      try {\n        await updateInstance.mutateAsync({\n          id: instance.id,\n          updates: { reauthentication_enabled: reauthenticationEnabled },\n        });\n        return reauthenticationEnabled;\n      } catch {\n        return instance.request.reauthentication_enabled;\n      }\n    },\n    [instance, updateInstance]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"settings\"}\n      />\n      <SettingsComp\n        onSubmitReAuthentication={onSubmitReAuthentication}\n        reauthenticationEnabled={instance.request.reauthentication_enabled}\n      />\n    </>\n  );\n};\n","import {\n  useKafkaFetchQuery,\n  useKafkaKpisFetchQuery,\n  useKafkaMetricsFetchQuery,\n  useTopicsFetchQuery,\n  useTopicsMetricsFetchQuery,\n} from \"consoledot-api\";\nimport {\n  metricsDismissLagAlerts,\n  metricsIsLagAlertsDismissed,\n} from \"local-storage-helpers\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport type { MetricsProps } from \"ui\";\nimport { Metrics } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const DashboardRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const {\n    instance,\n    match: { params },\n  } = useDataPlaneGate();\n  const [hasUserAlreadyClosedAlert, setHasUserAlreadyClosedAlert] = useState(\n    metricsIsLagAlertsDismissed()\n  );\n\n  const onAlertClose = useCallback(() => {\n    setHasUserAlreadyClosedAlert(true);\n    metricsDismissLagAlerts();\n  }, []);\n\n  const queryInstance = useKafkaFetchQuery();\n  const queryKpisMetrics = useKafkaKpisFetchQuery();\n  const queryInstanceMetrics = useKafkaMetricsFetchQuery();\n  const queryTopicMetrics = useTopicsMetricsFetchQuery();\n  const queryTopics = useTopicsFetchQuery();\n\n  const getMetricsKpi: MetricsProps[\"getMetricsKpi\"] = useCallback(async () => {\n    const kpis = await queryKpisMetrics(params.id);\n    return {\n      ...kpis,\n      topicPartitionsLimit: instance.maxPartitions || 0,\n    };\n  }, [instance, params.id, queryKpisMetrics]);\n\n  const getKafkaInstanceMetrics: MetricsProps[\"getKafkaInstanceMetrics\"] =\n    useCallback(\n      async ({ interval, duration }) => {\n        const [instance, metrics] = await Promise.all([\n          queryInstance(params.id),\n          queryInstanceMetrics({ id: params.id, duration, interval }),\n        ]);\n        if (!instance) {\n          return Promise.reject(\"Can't retrieve instance\");\n        }\n        return {\n          ...metrics,\n          diskSpaceLimit:\n            (instance.request.max_data_retention_size?.bytes || 0) / 1073741824,\n          connectionsLimit: instance.connections || 0,\n          connectionRateLimit: instance.connectionRate || 0,\n        };\n      },\n      [params.id, queryInstance, queryInstanceMetrics]\n    );\n\n  const getTopicsMetrics: MetricsProps[\"getTopicsMetrics\"] = useCallback(\n    async ({ interval, duration, selectedTopic }) => {\n      const [instance, metrics] = await Promise.all([\n        queryInstance(params.id),\n        queryTopicMetrics({ id: params.id, duration, interval, selectedTopic }),\n      ]);\n      if (!instance || !instance.adminUrl) {\n        return Promise.reject(\"Can't retrieve instance\");\n      }\n      const kafkaTopics = (\n        await queryTopics({\n          id: instance.id,\n          adminUrl: instance.adminUrl,\n          page: 1,\n          perPage: 1000,\n          plan: instance.plan,\n        })\n      ).topics.map((t) => t.name);\n      return {\n        ...metrics,\n        kafkaTopics,\n      };\n    },\n    [params.id, queryInstance, queryTopicMetrics, queryTopics]\n  );\n\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"dashboard\"}\n      />\n      <Metrics\n        onCreateTopic={() => {\n          /* TODO */\n        }}\n        onAlertClose={onAlertClose}\n        hasUserAlreadyClosedAlert={hasUserAlreadyClosedAlert}\n        getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n        getTopicsMetrics={getTopicsMetrics}\n        getMetricsKpi={getMetricsKpi}\n      />\n    </>\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaConsumerGroupSortableColumns,\n  useConsumerGroups,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroups, useConsumerGroupLabels } from \"ui\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const ConsumerGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instancesHref, instanceConsumerGroupsHref }) => {\n  const { instance } = useDataPlaneGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const labels = useConsumerGroupLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const name = labels.fields.groupId;\n\n  const consumerName = useURLSearchParamsChips(\n    \"consumer\",\n    resetPaginationQuery\n  );\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaConsumerGroupSortableColumns,\n    { name }\n  );\n  const { data } = useConsumerGroups({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    groupId: consumerName.chips[0],\n  });\n\n  const onDeletConsumerGroup = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/delete`\n      );\n    },\n    [history, instance.id, instanceConsumerGroupsHref]\n  );\n\n  const onViewPartition = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/view-partition`\n      );\n    },\n    [history, instance.id, instanceConsumerGroupsHref]\n  );\n\n  const onClickResetOffset = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/reset-offset`\n      );\n    },\n    [history, instance.id, instanceConsumerGroupsHref]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"consumer\"}\n      />\n      <ConsumerGroups\n        consumers={data?.groups}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        consumerName={consumerName.chips}\n        isRowSelected={() => false}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeletConsumerGroup(row.groupId)}\n        onSearchConsumer={(value) => {\n          consumerName.clear();\n          consumerName.toggle(value);\n        }}\n        onClearAllFilters={consumerName.clear}\n        onPageChange={setPagination}\n        onRemoveConsumerChip={consumerName.clear}\n        onRemoveConsumerChips={consumerName.clear}\n        onViewPartition={(row) => onViewPartition(row.groupId)}\n        onViewResetOffset={(row) => onClickResetOffset(row.groupId)}\n      />\n    </>\n  );\n};\n","import { useTopic } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../control-plane/routesConsts\";\nimport type { DataPlaneTopicRouteParams } from \"./routesConsts\";\nimport { DataPlaneTopicRoutePath } from \"./routesConsts\";\nimport { useDataPlaneGate } from \"./useDataPlaneGate\";\n\nexport function useTopicGate() {\n  const { instance } = useDataPlaneGate();\n  const standardMatch = useRouteMatch<DataPlaneTopicRouteParams>(\n    DataPlaneTopicRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlaneTopicRouteParams>(\n    DataPlaneTopicRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"useDataPlaneGate used outside the expected route\");\n  }\n  const { data: topic } = useTopic(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      topicName: match.params.topicName,\n      plan: instance.plan,\n    },\n    true\n  );\n\n  return {\n    instance,\n    topic: topic as NonNullable<typeof topic>,\n    match,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlaneTopicHeaderProps } from \"ui\";\nimport { DataPlaneTopicHeader } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport { useDrawer } from \"../../control-plane\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\n\nexport const DataPlaneTopicHeaderConnected: VoidFunctionComponent<\n  DataPlaneNavigationProps & Pick<DataPlaneTopicHeaderProps, \"activeSection\">\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  activeSection,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveTab, toggleExpanded } = useDrawer();\n  const {\n    instance,\n    topic,\n    match: { url },\n  } = useTopicGate();\n\n  const tabsHref = {\n    consumer: `${url}/consumer-groups`,\n    messages: `${url}/messages`,\n    properties: `${url}/properties`,\n    schemas: `${url}/schemas`,\n  };\n\n  const onDelete = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/delete`);\n  }, [history, instance, instancesHref]);\n\n  return (\n    <DataPlaneTopicHeader\n      instancesHref={instancesHref}\n      instanceName={instance.name}\n      instanceDetailHref={instanceDetailsHref(instance.id)}\n      instanceTopicsHref={instanceTopicsHref(instance.id)}\n      activeSection={activeSection}\n      topicName={topic.name}\n      tabsHref={tabsHref}\n      onDetails={() => {\n        setActiveTab(\"details\");\n        toggleExpanded(true);\n      }}\n      onConnection={() => {\n        setActiveTab(\"connections\");\n        toggleExpanded(true);\n      }}\n      canOpenConnection={\n        instance ? ReadyStatuses.includes(instance?.status) : false\n      }\n      canChangeOwner={true /* TODO */}\n      onChangeOwner={() => false /* TODO */}\n      canDelete={true /* TODO */}\n      onDelete={onDelete}\n    />\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaConsumerGroupSortableColumns,\n  useConsumerGroups,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroups, useConsumerGroupLabels } from \"ui\";\nimport { ControlPlaneRouteRoot } from \"../../control-plane/routesConsts\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicConsumerGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const { instance, topic } = useTopicGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const labels = useConsumerGroupLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const name = labels.fields.groupId;\n\n  const consumerName = useURLSearchParamsChips(\n    \"consumer\",\n    resetPaginationQuery\n  );\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaConsumerGroupSortableColumns,\n    { name }\n  );\n\n  const { data } = useConsumerGroups({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    groupId: consumerName.chips[0],\n    topic: topic.name,\n  });\n\n  const onDeletConsumerGroup = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/delete`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  const onViewPartition = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/view-partition`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  const onClickResetOffset = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/reset-offset`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"consumer\"}\n      />\n      <ConsumerGroups\n        consumers={data?.groups}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        consumerName={consumerName.chips}\n        isRowSelected={() => false}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeletConsumerGroup(row.groupId)}\n        onSearchConsumer={(value) => {\n          consumerName.clear();\n          consumerName.toggle(value);\n        }}\n        onClearAllFilters={consumerName.clear}\n        onPageChange={setPagination}\n        onRemoveConsumerChip={consumerName.clear}\n        onRemoveConsumerChips={consumerName.clear}\n        onViewPartition={(row) => onViewPartition(row.groupId)}\n        onViewResetOffset={(row) => onClickResetOffset(row.groupId)}\n      />\n    </>\n  );\n};\n","import { useMessagesFetchQuery } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { KafkaMessageBrowserProps } from \"ui\";\nimport { KafkaMessageBrowser } from \"ui\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicMessagesGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const { instance, topic } = useTopicGate();\n  const kafkaTopicMessagesFetchQuery = useMessagesFetchQuery();\n\n  const getMessages = useCallback<KafkaMessageBrowserProps[\"getMessages\"]>(\n    async (params) => {\n      if (!instance.adminUrl) {\n        throw Error(\"Invalid instance adminUrl\");\n      }\n      const messages = await kafkaTopicMessagesFetchQuery({\n        ...params,\n        id: instance.id,\n        adminUrl: instance.adminUrl,\n        topicName: topic.name,\n      });\n      return {\n        messages,\n        partitions: topic.partitions.length,\n      };\n    },\n    [\n      instance.adminUrl,\n      instance.id,\n      kafkaTopicMessagesFetchQuery,\n      topic.name,\n      topic.partitions.length,\n    ]\n  );\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"messages\"}\n      />\n      <KafkaMessageBrowser getMessages={getMessages} />\n    </>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { TopicProperties } from \"ui\";\nimport type { DataPlaneTopicNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicPropertiesRoute: VoidFunctionComponent<\n  DataPlaneTopicNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instanceConsumerGroupsHref,\n  instancesHref,\n  deleteTopicHref,\n  updateTopicHref,\n}) => {\n  const { instance, topic } = useTopicGate();\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"properties\"}\n      />\n      <TopicProperties\n        topic={topic}\n        deleteTopicHref={deleteTopicHref(instance.id, topic.name)}\n        updateTopicHref={updateTopicHref(instance.id, topic.name)}\n      />\n    </>\n  );\n};\n","/* eslint-disable */\n// @ts-nocheck\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { I18nProvider } from \"@rhoas/app-services-ui-components\";\nimport type { Auth, Config } from \"@rhoas/app-services-ui-shared\";\nimport { AuthContext, ConfigContext } from \"@rhoas/app-services-ui-shared\";\n/* tslint:disable */\nimport type { Registry } from \"@rhoas/registry-management-sdk\";\nimport type { ScalprumComponentProps } from \"@scalprum/react-core\";\nimport { ScalprumComponent } from \"@scalprum/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicSchemasRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const chrome = useChrome();\n  const { topic } = useTopicGate();\n  const processor = (([_, m]: [string, { entry: string[] }]) =>\n    m.entry.map(\n      (e) => `/beta/apps/srs-ui-build${e}`\n    )) as unknown as ScalprumComponentProps[\"processor\"];\n  const processor2 = (([_, m]: [string, { entry: string[] }]) =>\n    m.entry.map(\n      (e) => `/beta/apps/sr-ui-build${e}`\n    )) as unknown as ScalprumComponentProps[\"processor\"];\n  const basename = \"/service-registry\";\n  const auth: Auth = {\n    srs: { getToken: chrome.auth.getToken },\n  };\n  const config: Config = {\n    srs: { apiBasePath: process.env.API_URL },\n  };\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"schemas\"}\n      />\n      <AuthContext.Provider value={auth}>\n        <ConfigContext.Provider value={config}>\n          <I18nProvider\n            lng={\"en\"}\n            resources={{\n              en: {\n                common: () =>\n                  import(\n                    \"@rhoas/app-services-ui-components/locales/en/common.json\"\n                  ),\n                \"service-registry\": () =>\n                  import(\n                    \"@rhoas/app-services-ui-components/locales/en/service-registry.json\"\n                  ),\n                srsTemporaryFixMe: () => import(\"./srs-locales.json\"),\n              },\n            }}\n            debug={true}\n          >\n            <ScalprumComponent\n              appName=\"srs\"\n              module=\"./ServiceRegistryMapping\"\n              scope=\"srs\"\n              ErrorComponent={<div>opsie</div>}\n              processor={processor}\n              basename={basename}\n              topicName={topic.name}\n              renderSchema={(registry: Registry) => {\n                return (\n                  <ScalprumComponent\n                    appName=\"ar\"\n                    scope=\"ar\"\n                    ErrorComponent={<div>opsie</div>}\n                    processor={processor2}\n                    module=\"./FederatedSchemaMapping\"\n                    registry={registry}\n                    topicName={topic.name}\n                    groupId={null}\n                    version={\"latest\"}\n                    registryId={registry?.id}\n                    basename={basename}\n                  />\n                );\n              }}\n            />\n          </I18nProvider>\n        </ConfigContext.Provider>\n      </AuthContext.Provider>\n    </>\n  );\n};\n","import { useConsumerGroup } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../control-plane/routesConsts\";\nimport type { DataPlaneConsumerGroupRouteParams } from \"./routesConsts\";\nimport { DataPlaneConsumerGroupRoutePath } from \"./routesConsts\";\nimport { useDataPlaneGate } from \"./useDataPlaneGate\";\n\nexport function useConsumerGroupGate() {\n  const { instance } = useDataPlaneGate();\n  const standardMatch = useRouteMatch<DataPlaneConsumerGroupRouteParams>(\n    DataPlaneConsumerGroupRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlaneConsumerGroupRouteParams>(\n    DataPlaneConsumerGroupRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"useConsumerGroupGate used outside the expected route\");\n  }\n  const { data: consumerGroup } = useConsumerGroup(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      consumerGroupId: match.params.consumerGroupId,\n    },\n    true\n  );\n\n  return {\n    instance,\n    consumerGroup: consumerGroup as NonNullable<typeof consumerGroup>,\n    match,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteConsumerGroup } from \"ui\";\nimport { useDeleteConsumerGroupMutation } from \"consoledot-api\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\n\nexport const ConsumerGroupDeleteRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({ instanceConsumerGroupsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  const { mutateAsync } = useDeleteConsumerGroupMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl!,\n      consumerGroupId: consumerGroup.groupId,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceConsumerGroupsHref(instance.id));\n      },\n    });\n  }, [\n    mutateAsync,\n    history,\n    instance?.id,\n    instanceConsumerGroupsHref,\n    consumerGroup.groupId,\n    instance.adminUrl,\n  ]);\n\n  return (\n    <DeleteConsumerGroup\n      isModalOpen={true}\n      onClose={onCancel}\n      onDeleteConsumer={onDelete}\n      state={consumerGroup.state}\n      consumerName={consumerGroup.groupId}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupResetOffset } from \"ui\";\nimport type { OffsetValue } from \"ui\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useResetConsumerGroupMutation } from \"consoledot-api\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\n\nexport const ConsumerGroupResetOffsetRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({ instanceConsumerGroupsHref }) => {\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  const { mutateAsync } = useResetConsumerGroupMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const getTopics = () => {\n    const topics = (consumerGroup.consumers || []).map(\n      (consumer) => consumer.topic\n    );\n    const distinctTopics = Array.from(new Set(topics));\n    return distinctTopics;\n  };\n\n  const onConfirmResetOffset = useCallback(\n    (\n      topic: string,\n      offset: OffsetValue,\n      partitions: number[],\n      customOffsetValue: string\n    ) => {\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl!,\n        consumerGroupId: consumerGroup.groupId,\n        topic: topic,\n        offset: offset,\n        partitions: partitions,\n        value: customOffsetValue,\n        onError: () => {\n          // TODO: alert\n        },\n        onSuccess: () => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.replace(instanceConsumerGroupsHref(instance.id));\n        },\n      });\n    },\n    [\n      mutateAsync,\n      history,\n      instance?.id,\n      instanceConsumerGroupsHref,\n      instance.adminUrl,\n      consumerGroup.groupId,\n    ]\n  );\n\n  return (\n    <ConsumerGroupResetOffset\n      isModalOpen={true}\n      state={consumerGroup.state}\n      groupId={consumerGroup.groupId}\n      topics={getTopics()}\n      consumers={consumerGroup.consumers}\n      onClickClose={onCancel}\n      onClickResetOffset={onConfirmResetOffset}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroupDrawer } from \"ui\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\nimport { ConsumerGroupsRoute } from \"./ConsumerGroupsRoute\";\n\nexport const ConsumerGroupViewPartitionRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({\n  instanceConsumerGroupsHref,\n  viewPartitionConsumerGroupHref,\n  instancesHref,\n  instanceDetailsHref,\n  instanceTopicsHref,\n}) => {\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewPartitionConsumerGroupHref(\n        instance.id,\n        consumerGroup.groupId\n      )}/delete`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.groupId,\n    viewPartitionConsumerGroupHref,\n  ]);\n\n  const onClickResetOffset = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewPartitionConsumerGroupHref(\n        instance.id,\n        consumerGroup.groupId\n      )}/reset-offset`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.groupId,\n    viewPartitionConsumerGroupHref,\n  ]);\n\n  return (\n    <ConsumerGroupDrawer\n      consumerGroupByTopic={false}\n      state={consumerGroup.state}\n      activeMembers={consumerGroup.activeConsumers!}\n      partitionsWithLag={consumerGroup.laggingPartitions!}\n      consumers={consumerGroup.consumers}\n      groupId={consumerGroup.groupId}\n      onSelectDeleteConsumerGroup={onDelete}\n      onSelectResetOffsetConsumerGroup={onClickResetOffset}\n      isExpanded={true}\n      onClickClose={onCancel}\n    >\n      <ConsumerGroupsRoute\n        instancesHref={instancesHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n      />\n    </ConsumerGroupDrawer>\n  );\n};\n","import { useConsumerGroup } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../control-plane/routesConsts\";\nimport type { DataPlaneTopicConsumerRouteParams } from \"./routesConsts\";\nimport { DataPlaneTopicConsumerGroupRoutePath } from \"./routesConsts\";\nimport { useTopicGate } from \"./useTopicGate\";\n\nexport function useTopicConsumerGroupGate() {\n  const { instance, topic } = useTopicGate();\n  const standardMatch = useRouteMatch<DataPlaneTopicConsumerRouteParams>(\n    DataPlaneTopicConsumerGroupRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlaneTopicConsumerRouteParams>(\n    DataPlaneTopicConsumerGroupRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"useTopicConsumerGroupGate used outside the expected route\");\n  }\n  const { data: consumerGroup } = useConsumerGroup(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      consumerGroupId: match.params.consumerGroupId,\n    },\n    true\n  );\n\n  return {\n    instance,\n    consumerGroup: consumerGroup as NonNullable<typeof consumerGroup>,\n    match,\n    topic,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteConsumerGroup } from \"ui\";\nimport { useDeleteConsumerGroupMutation } from \"consoledot-api\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\n\nexport const TopicConsumerGroupDeleteRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({ instanceTopicConsumerGroupsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance, consumerGroup, topic } = useTopicConsumerGroupGate();\n\n  const { mutateAsync } = useDeleteConsumerGroupMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl!,\n      consumerGroupId: consumerGroup.groupId,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(\n          instanceTopicConsumerGroupsHref(instance.id, topic.name)\n        );\n      },\n    });\n  }, [\n    mutateAsync,\n    history,\n    instance?.id,\n    instanceTopicConsumerGroupsHref,\n    topic.name,\n    consumerGroup.groupId,\n    instance?.adminUrl,\n  ]);\n\n  return (\n    <DeleteConsumerGroup\n      isModalOpen={true}\n      onClose={onCancel}\n      onDeleteConsumer={onDelete}\n      state={consumerGroup.state}\n      consumerName={consumerGroup.groupId}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupResetOffset } from \"ui\";\nimport type { OffsetValue } from \"ui\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useResetConsumerGroupMutation } from \"consoledot-api\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\n\nexport const TopicConsumerGroupResetOffsetRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({ instanceTopicConsumerGroupsHref }) => {\n  const { instance, topic, consumerGroup } = useTopicConsumerGroupGate();\n\n  const { mutateAsync } = useResetConsumerGroupMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const getTopics = () => {\n    const topics = (consumerGroup.consumers || []).map(\n      (consumer) => consumer.topic\n    );\n    const distinctTopics = Array.from(new Set(topics));\n    return distinctTopics;\n  };\n\n  const onConfirmResetOffset = useCallback(\n    (\n      topicName: string,\n      offset: OffsetValue,\n      partitions: number[],\n      customOffsetValue: string\n    ) => {\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl!,\n        consumerGroupId: consumerGroup.groupId,\n        topic: topicName,\n        offset: offset,\n        partitions: partitions,\n        value: customOffsetValue,\n        onError: () => {\n          // TODO: alert\n        },\n        onSuccess: () => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.replace(\n            instanceTopicConsumerGroupsHref(instance.id, topic.name)\n          );\n        },\n      });\n    },\n    [\n      mutateAsync,\n      history,\n      instance?.id,\n      topic.name,\n      instanceTopicConsumerGroupsHref,\n      instance.adminUrl,\n      consumerGroup.groupId,\n    ]\n  );\n\n  return (\n    <ConsumerGroupResetOffset\n      isModalOpen={true}\n      state={consumerGroup.state}\n      groupId={consumerGroup.groupId}\n      topics={getTopics()}\n      consumers={consumerGroup.consumers}\n      onClickClose={onCancel}\n      onClickResetOffset={onConfirmResetOffset}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroupDrawer } from \"ui\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\nimport { TopicConsumerGroupsRoute } from \"./TopicConsumerGroupsRoute\";\n\nexport const TopicConsumerGroupViewPartitionRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({\n  instanceTopicConsumerGroupsHref,\n  instancesHref,\n  viewTopicPartitionConsumerGroupHref,\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const { instance, topic, consumerGroup } = useTopicConsumerGroupGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewTopicPartitionConsumerGroupHref(\n        instance.id,\n        topic.name,\n        consumerGroup.groupId\n      )}/delete`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.groupId,\n    topic.name,\n    viewTopicPartitionConsumerGroupHref,\n  ]);\n\n  const onClickResetOffset = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewTopicPartitionConsumerGroupHref(\n        instance.id,\n        topic.name,\n        consumerGroup.groupId\n      )}/reset-offset`\n    );\n  }, [\n    history,\n    instance.id,\n    topic.name,\n    consumerGroup.groupId,\n    viewTopicPartitionConsumerGroupHref,\n  ]);\n\n  return (\n    <ConsumerGroupDrawer\n      consumerGroupByTopic={false}\n      state={consumerGroup.state}\n      activeMembers={consumerGroup.activeConsumers!}\n      partitionsWithLag={consumerGroup.laggingPartitions!}\n      consumers={consumerGroup.consumers}\n      groupId={consumerGroup.groupId}\n      onSelectDeleteConsumerGroup={onDelete}\n      onSelectResetOffsetConsumerGroup={onClickResetOffset}\n      isExpanded={true}\n      onClickClose={onCancel}\n    >\n      <TopicConsumerGroupsRoute\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n      />\n    </ConsumerGroupDrawer>\n  );\n};\n","import type { DeleteModalProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  DeleteModal,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type DeleteKafkaTopicProps = {\n  topicName: string;\n} & Omit<\n  DeleteModalProps,\n  \"title\" | \"variant\" | \"confirmationValue\" | \"children\"\n>;\n\nexport const DeleteKafkaTopic: VoidFunctionComponent<DeleteKafkaTopicProps> = ({\n  topicName,\n  ...props\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <DeleteModal\n      {...props}\n      variant={\"destructive\"}\n      title={t(\"delete_topic_title\")}\n      confirmationValue={topicName}\n    >\n      <Trans\n        ns={\"kafka\"}\n        i18nKey={\"delete_topic_message\"}\n        components={[<strong />]}\n        values={{\n          topicName,\n        }}\n      />\n    </DeleteModal>\n  );\n};\n","import { useDeleteTopicMutation } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteKafkaTopic } from \"ui/src/components/DeleteKafkaTopic\";\nimport type { DataPlaneTopicNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\n\nexport const TopicDeleteRoute: VoidFunctionComponent<\n  DataPlaneTopicNavigationProps\n> = ({ instanceTopicsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance, topic } = useTopicGate();\n  const { mutateAsync, isLoading: isDeleting } = useDeleteTopicMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicsHref(instance.id));\n  }, [history, instance.id, instanceTopicsHref]);\n\n  const onDelete = useCallback(() => {\n    if (!instance.adminUrl) {\n      throw Error(\"Invalid instance adminUrl\");\n    }\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl,\n      name: topic.name,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceTopicsHref(instance.id));\n      },\n    });\n  }, [\n    instance.adminUrl,\n    instance.id,\n    mutateAsync,\n    topic.name,\n    history,\n    instanceTopicsHref,\n  ]);\n\n  return (\n    <DeleteKafkaTopic\n      topicName={topic.name}\n      isModalOpen={true}\n      isDeleting={isDeleting}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n      onDelete={onDelete}\n      onCancel={onCancel}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { useUpdateTopicMutation } from \"consoledot-api\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\nimport { EditTopicProperties } from \"ui\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\n\nexport const TopicEditPropertiesRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instanceDetailsHref, instanceTopicsHref, instancesHref, instanceConsumerGroupsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { instance, topic } = useTopicGate();\n\n  if (instance.maxPartitions === undefined) {\n    throw new Error(\n      `CreateTopicRoute, unexpected maxPartition undefined for instance ${instance.name}`\n    );\n  }\n\n  const dispatch = useDispatch();\n\n  const updateTopic = useUpdateTopicMutation();\n\n  const onSave = useCallback(\n    (topicData: Topic) => {\n      if (instance.adminUrl === undefined) {\n        throw new Error(\n          `EditTopicRoute, adminUrl undefined for instance ${instance.name}`\n        );\n      }\n      void updateTopic.mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl,\n        topic: topicData,\n\n        onSuccess: () => {\n          //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.push(instanceTopicsHref(instance.id));\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"save-error\",\n            })\n          );\n        },\n      });\n    },\n    [\n      instance.adminUrl,\n      instance.id,\n      instance.name,\n      updateTopic,\n      history,\n      instanceTopicsHref,\n      dispatch,\n    ]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicsHref(instance.id));\n  }, [history, instance.id, instanceTopicsHref]);\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"properties\"}\n      />\n      <EditTopicProperties\n        topic={topic}\n        onCancel={onCancel}\n        onSave={onSave}\n        availablePartitionLimit={instance.maxPartitions}\n      />\n    </>\n  );\n};\n","import { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport {\n  useAcls,\n  useConsumerGroups,\n  useDeletePermissionsMutation,\n  useTopics,\n  useUpdatePermissionsMutation,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { EditPermissions } from \"ui\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../../control-plane/routesConsts\";\nimport type {\n  DataPlanePermissionsNavigationProps,\n  DataPlanePermissionsRouteParams,\n} from \"../routesConsts\";\nimport { DataPlanePermissionsRoutePath } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\n\nexport const PermissionsEditRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ managePermissionsHref }) => {\n  const { instance } = useDataPlaneGate();\n  const standardMatch = useRouteMatch<DataPlanePermissionsRouteParams>(\n    DataPlanePermissionsRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlanePermissionsRouteParams>(\n    DataPlanePermissionsRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"EditPermissions used outside the expected route\");\n  }\n\n  const { data: acls } = useAcls({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: topics } = useTopics({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    plan: instance.plan,\n  });\n\n  const { data: consumerGroups } = useConsumerGroups({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const dispatch = useDispatch();\n\n  const consumerGroupsList = consumerGroups?.groups.map(\n    (consumer) => consumer.groupId\n  );\n  const topicsList = topics?.topics.map((topic) => topic.name);\n  const { mutateAsync } = useDeletePermissionsMutation();\n  const updatePermissions = useUpdatePermissionsMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onSaveAcls = useCallback(\n    (\n      aclPermission: AclBinding[] | undefined,\n      deletedPermissions: AclBinding[] | undefined\n    ) => {\n      if (aclPermission != undefined && aclPermission.length > 0) {\n        aclPermission.map(\n          (aclData) =>\n            void updatePermissions.mutateAsync({\n              instanceId: instance.id,\n              adminUrl: instance?.adminUrl || \"\",\n              acl: {\n                patternType: aclData.patternType,\n                permission: aclData.permission,\n                principal: aclData.principal,\n                operation: aclData.operation,\n                resourceName: aclData.resourceName,\n                resourceType: aclData.resourceType,\n              },\n\n              onSuccess: () => {\n                //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n                history.push(managePermissionsHref(instance.id));\n              },\n              onError: (_, message) => {\n                dispatch(\n                  addNotification({\n                    variant: \"danger\",\n                    title: message,\n                    dismissable: true,\n                    id: \"save-error\",\n                  })\n                );\n              },\n            })\n        );\n      }\n\n      if (deletedPermissions != undefined && deletedPermissions.length > 0) {\n        deletedPermissions.map((aclToDelete) => {\n          void mutateAsync({\n            instanceId: instance.id,\n            adminUrl: instance.adminUrl || \"\",\n            acl: {\n              patternType: aclToDelete.patternType,\n              permissionType: aclToDelete.permission,\n              principal: aclToDelete.principal,\n              resourceName: aclToDelete.resourceName,\n              operation: aclToDelete.operation,\n              resourceType: aclToDelete.resourceType,\n            },\n            onError: (_, message) => {\n              dispatch(\n                addNotification({\n                  variant: \"danger\",\n                  title: message,\n                  dismissable: true,\n                  id: \"delete-error\",\n                })\n              );\n            },\n            onSuccess: () => {\n              //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n              history.push(managePermissionsHref(instance.id));\n            },\n          });\n        });\n      }\n    },\n    [\n      dispatch,\n      history,\n      instance.adminUrl,\n      instance.id,\n      managePermissionsHref,\n      mutateAsync,\n      updatePermissions,\n    ]\n  );\n\n  const existingAcls: AclBinding[] | undefined = acls?.groups.map((acl) => {\n    return {\n      resourceName: acl.resource.resourceName,\n      patternType: acl.resource.patternType,\n      permission: acl.permission.permission,\n      operation: acl.permission.operation,\n      principal: acl.account,\n      resourceType: acl.resource.resourceType,\n    };\n  });\n\n  const aclsForSelectedAccount = existingAcls?.filter(\n    (value) =>\n      value.principal == `User:${match.params.selectedAccount}` ||\n      value.principal == \"User:*\"\n  );\n\n  const onClose = useCallback(() => {\n    //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <EditPermissions\n      onCancel={onClose}\n      kafkaName={instance.name}\n      onSave={onSaveAcls}\n      topicsList={topicsList || []}\n      consumerGroupsList={consumerGroupsList || []}\n      selectedAccount={\n        match.params.selectedAccount == \"all-accounts\"\n          ? \"All accounts\"\n          : match.params.selectedAccount\n      }\n      acls={aclsForSelectedAccount || []}\n    />\n  );\n};\n","import { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { useServiceAccounts, useUserAccounts } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { Account } from \"ui\";\nimport { PrincipalType, SelectAccount } from \"ui\";\nimport type { DataPlanePermissionsNavigationProps } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\n\nexport const PermissionsSelectAccountRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ managePermissionsHref, editPermissionsHref }) => {\n  const [loggedInUser, setCurrentlyLoggedInUser] = useState<\n    string | undefined\n  >();\n  const { auth } = useChrome();\n  const { instance } = useDataPlaneGate();\n  const { data: accounts } = useUserAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: serviceAccounts } = useServiceAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  useEffect(() => {\n    const getUsername = async () => {\n      const username = (await auth.getUser())?.identity.user?.username;\n      setCurrentlyLoggedInUser(username);\n    };\n    void getUsername();\n  }, [auth]);\n\n  const userAccounts: Account[] | undefined = accounts?.accounts.map(\n    (userAccount) => {\n      return {\n        displayName: userAccount.displayName,\n        id: userAccount.username,\n        principalType: PrincipalType.UserAccount,\n      };\n    }\n  );\n\n  const serviceAccountList: Account[] | undefined =\n    serviceAccounts?.serviceAccounts.map((userAccount) => {\n      return {\n        displayName: userAccount.displayName,\n        id: userAccount.id,\n        principalType: PrincipalType.ServiceAccount,\n      };\n    });\n\n  const allAccounts =\n    userAccounts != undefined && serviceAccountList != undefined\n      ? [...serviceAccountList, ...userAccounts]\n      : undefined;\n  const filteredAccounts = allAccounts?.filter(\n    (value) => value.id !== instance.owner && value.id !== loggedInUser\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onNext = useCallback(\n    (selectedAccount: string | undefined) => {\n      //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        editPermissionsHref(\n          instance.id,\n          selectedAccount === \"All accounts\"\n            ? \"all-accounts\"\n            : selectedAccount || \"\"\n        )\n      );\n    },\n    [history, instance.id, editPermissionsHref]\n  );\n\n  const onClose = useCallback(() => {\n    //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <SelectAccount\n      accounts={filteredAccounts}\n      kafkaName={instance.name}\n      onNext={onNext}\n      onClose={onClose}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport type { CreateTopicPageProps } from \"ui\";\nimport { CreateTopic } from \"ui\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { useHistory } from \"react-router-dom\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { useDispatch } from \"react-redux\";\nimport { useCreateTopicMutation, useTopics } from \"consoledot-api\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport {\n  developerDefaults,\n  standardDefaults,\n} from \"consoledot-api/src/transformers/topicTransformer\";\n\nexport const TopicCreateRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instancesHref, instanceTopicsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { instance } = useDataPlaneGate();\n  const createTopic = useCreateTopicMutation();\n  const dispatch = useDispatch();\n  const availabilityZone = instance.az;\n  const { data: topics } = useTopics({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    plan: instance.plan,\n  });\n\n  if (instance.maxPartitions === undefined) {\n    throw new Error(\n      `CreateTopicRoute, unexpected maxPartition undefined for instance ${instance.name}`\n    );\n  }\n\n  const checkTopicName: CreateTopicPageProps[\"checkTopicName\"] = useCallback(\n    (topicName) => {\n      const selectedTopic = topics?.topics.filter(\n        (topic) => topic.name === topicName\n      );\n      if (selectedTopic && selectedTopic?.length > 0) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    [topics?.topics]\n  );\n\n  const onCloseCreateTopic = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicsHref(instance.id));\n  }, [history, instance.id, instanceTopicsHref]);\n\n  const onSave = useCallback(\n    (topicData: Topic) => {\n      void createTopic.mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance?.adminUrl || \"\",\n        topic: topicData,\n\n        onSuccess: () => {\n          //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.push(instanceTopicsHref(instance.id));\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"save-error\",\n            })\n          );\n        },\n      });\n    },\n    [\n      createTopic,\n      dispatch,\n      history,\n      instance?.adminUrl,\n      instance.id,\n      instanceTopicsHref,\n    ]\n  );\n\n  const initialTopicValues = useMemo(() => {\n    return instance.plan === \"developer\"\n      ? {\n          name: \"\",\n          partitions: [{ partition: 1, id: 1 }],\n          ...developerDefaults,\n        }\n      : {\n          name: \"\",\n          partitions: [{ partition: 1, id: 1 }],\n          ...standardDefaults,\n        };\n  }, [instance.plan]);\n\n  return (\n    <>\n      <CreateTopic\n        kafkaName={instance.name}\n        kafkaPageLink={instanceTopicsHref(instance.id)}\n        kafkaInstanceLink={instancesHref}\n        onSave={onSave}\n        initialTopicValues={initialTopicValues}\n        onCloseCreateTopic={onCloseCreateTopic}\n        checkTopicName={checkTopicName}\n        availablePartitionLimit={instance.maxPartitions}\n        availabilityZone={availabilityZone}\n      />\n    </>\n  );\n};\n","import { InvalidObject } from \"@redhat-cloud-services/frontend-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ControlPlaneRouteRoot } from \"../control-plane/routesConsts\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  ConsumerGroupDeleteRoute,\n  ConsumerGroupResetOffsetRoute,\n  ConsumerGroupsRoute,\n  ConsumerGroupViewPartitionRoute,\n  DashboardRoute,\n  PermissionsEditRoute,\n  PermissionsRoute,\n  PermissionsSelectAccountRoute,\n  SettingsRoute,\n  TopicConsumerGroupDeleteRoute,\n  TopicConsumerGroupResetOffsetRoute,\n  TopicConsumerGroupsRoute,\n  TopicConsumerGroupViewPartitionRoute,\n  TopicCreateRoute,\n  TopicDeleteRoute,\n  TopicEditPropertiesRoute,\n  TopicMessagesGroupsRoute,\n  TopicPropertiesRoute,\n  TopicSchemasRoute,\n  TopicsRoute,\n} from \"./routes\";\n\nimport { DataPlaneTopicRoutePath } from \"./routesConsts\";\n\nconst instanceDetailsHref = (id: string) =>\n  `${ControlPlaneRouteRoot}/${id}/details`;\n\nconst instanceTopicsHref = (id: string) =>\n  `${ControlPlaneRouteRoot}/${id}/details/topics`;\n\nconst topicPropertyHref = (id: string, topic: string) =>\n  `${instanceDetailsHref(id)}/topics/${topic}/properties`;\n\nconst topicHref = (id: string, topic: string) =>\n  `${instanceDetailsHref(id)}/topics/${topic}`;\n\nconst updateTopicHref = (id: string, topic: string) =>\n  `${topicHref(id, topic)}/edit`;\n\nconst deleteTopicHref = (id: string, topic: string) =>\n  `${topicHref(id, topic)}/delete`;\n\nconst instanceConsumerGroupsHref = (id: string) =>\n  `${instanceDetailsHref(id)}/consumer-groups`;\n\nconst viewPartitionConsumerGroupHref = (id: string, consumerGroupId: string) =>\n  `${instanceDetailsHref(\n    id\n  )}/consumer-groups/${consumerGroupId}/view-partition`;\n\nconst instanceTopicConsumerGroupHref = (id: string, topic: string) =>\n  `${instanceDetailsHref(id)}/topics/${topic}/consumer-groups`;\n\nconst viewTopicPartitionConsumerGroupHref = (\n  id: string,\n  topic: string,\n  consumerGroupId: string\n) =>\n  `${instanceDetailsHref(\n    id\n  )}/topics/${topic}/consumer-groups/${consumerGroupId}/view-partition`;\n\nconst managePermissionsHref = (id: string) =>\n  `${instanceDetailsHref(id)}/acls/select-account`;\n\nconst editPermissionsHref = (id: string, selectedAccount: string) =>\n  `${instanceDetailsHref(\n    id\n  )}/acls/select-account/${selectedAccount}/edit-permissions`;\n\nexport const permissionsModalHref = (id: string) =>\n  `${instanceDetailsHref(id)}/acls`;\n\nexport type DataPlaneRoutesProps = {\n  root: string;\n  instanceId: string;\n};\n\nexport const DataPlaneRoutes: VoidFunctionComponent<DataPlaneRoutesProps> = ({\n  root,\n  instanceId,\n}) => {\n  return (\n    <Route path={root}>\n      <RedirectOnGateError redirectUrl={ControlPlaneRouteRoot}>\n        <Switch>\n          <Route path={`${root}/dashboard`} exact>\n            <DashboardRoute instancesHref={ControlPlaneRouteRoot} />\n          </Route>\n\n          <Route path={`${root}/topics`} exact>\n            <TopicsRoute instancesHref={ControlPlaneRouteRoot} />\n          </Route>\n\n          <Route path={`${root}/consumer-groups`} exact>\n            <ConsumerGroupsRoute\n              instancesHref={ControlPlaneRouteRoot}\n              instanceDetailsHref={instanceDetailsHref}\n              instanceTopicsHref={instanceTopicsHref}\n              instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n            />\n          </Route>\n\n          <Route path={`${root}/acls`}>\n            <Route path={`${root}/acls/select-account`}>\n              <PermissionsSelectAccountRoute\n                instancesHref={ControlPlaneRouteRoot}\n                managePermissionsHref={permissionsModalHref}\n                editPermissionsHref={editPermissionsHref}\n              />\n            </Route>\n            <Route\n              path={`${root}/acls/select-account/:selectedAccount/edit-permissions`}\n            >\n              <PermissionsEditRoute\n                instancesHref={ControlPlaneRouteRoot}\n                managePermissionsHref={permissionsModalHref}\n                editPermissionsHref={editPermissionsHref}\n              />\n            </Route>\n            <PermissionsRoute\n              instancesHref={ControlPlaneRouteRoot}\n              managePermissionsHref={managePermissionsHref}\n              editPermissionsHref={editPermissionsHref}\n            />\n          </Route>\n\n          <Route path={`${root}/settings`} exact>\n            <SettingsRoute instancesHref={ControlPlaneRouteRoot} />\n          </Route>\n          <Route path={`${root}/topics`}>\n            <RedirectOnGateError redirectUrl={instanceTopicsHref(instanceId)}>\n              <Switch>\n                <Route path={`${root}/topics/create-topic`} exact>\n                  <TopicCreateRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/consumer-groups`}>\n                  <RedirectOnGateError\n                    redirectUrl={instanceTopicsHref(instanceId)}\n                  >\n                    <Switch>\n                      <Route\n                        path={`${DataPlaneTopicRoutePath(\n                          root\n                        )}/consumer-groups/:consumerGroupId/view-partition`}\n                      >\n                        <Route\n                          path={`${DataPlaneTopicRoutePath(\n                            root\n                          )}/consumer-groups/:consumerGroupId/view-partition/delete`}\n                        >\n                          <TopicConsumerGroupDeleteRoute\n                            instancesHref={ControlPlaneRouteRoot}\n                            instanceTopicConsumerGroupsHref={\n                              instanceTopicConsumerGroupHref\n                            }\n                            viewTopicPartitionConsumerGroupHref={\n                              viewTopicPartitionConsumerGroupHref\n                            }\n                            instanceDetailsHref={instanceDetailsHref}\n                            instanceTopicsHref={instanceTopicsHref}\n                            instanceConsumerGroupsHref={\n                              instanceConsumerGroupsHref\n                            }\n                          />\n                        </Route>\n                        <Route\n                          path={`${DataPlaneTopicRoutePath(\n                            root\n                          )}/consumer-groups/:consumerGroupId/view-partition/reset-offset`}\n                        >\n                          <TopicConsumerGroupResetOffsetRoute\n                            instancesHref={ControlPlaneRouteRoot}\n                            instanceTopicConsumerGroupsHref={\n                              instanceTopicConsumerGroupHref\n                            }\n                            viewTopicPartitionConsumerGroupHref={\n                              viewTopicPartitionConsumerGroupHref\n                            }\n                            instanceDetailsHref={instanceDetailsHref}\n                            instanceTopicsHref={instanceTopicsHref}\n                            instanceConsumerGroupsHref={\n                              instanceConsumerGroupsHref\n                            }\n                          />\n                        </Route>\n                        <TopicConsumerGroupViewPartitionRoute\n                          instancesHref={ControlPlaneRouteRoot}\n                          instanceTopicConsumerGroupsHref={\n                            instanceTopicConsumerGroupHref\n                          }\n                          viewTopicPartitionConsumerGroupHref={\n                            viewTopicPartitionConsumerGroupHref\n                          }\n                          instanceDetailsHref={instanceDetailsHref}\n                          instanceTopicsHref={instanceTopicsHref}\n                          instanceConsumerGroupsHref={\n                            instanceConsumerGroupsHref\n                          }\n                        />\n                      </Route>\n                      <Route\n                        path={`${DataPlaneTopicRoutePath(\n                          root\n                        )}/consumer-groups/:consumerGroupId/reset-offset`}\n                      >\n                        <TopicConsumerGroupResetOffsetRoute\n                          instancesHref={ControlPlaneRouteRoot}\n                          instanceTopicConsumerGroupsHref={\n                            instanceTopicConsumerGroupHref\n                          }\n                          viewTopicPartitionConsumerGroupHref={\n                            viewTopicPartitionConsumerGroupHref\n                          }\n                          instanceDetailsHref={instanceDetailsHref}\n                          instanceTopicsHref={instanceTopicsHref}\n                          instanceConsumerGroupsHref={\n                            instanceConsumerGroupsHref\n                          }\n                        />\n                      </Route>\n                      <Route\n                        path={`${DataPlaneTopicRoutePath(\n                          root\n                        )}/consumer-groups/:consumerGroupId/delete`}\n                      >\n                        <TopicConsumerGroupDeleteRoute\n                          instancesHref={ControlPlaneRouteRoot}\n                          instanceTopicConsumerGroupsHref={\n                            instanceTopicConsumerGroupHref\n                          }\n                          viewTopicPartitionConsumerGroupHref={\n                            viewTopicPartitionConsumerGroupHref\n                          }\n                          instanceDetailsHref={instanceDetailsHref}\n                          instanceTopicsHref={instanceTopicsHref}\n                          instanceConsumerGroupsHref={\n                            instanceConsumerGroupsHref\n                          }\n                        />\n                      </Route>\n                    </Switch>\n                  </RedirectOnGateError>\n                  <TopicConsumerGroupsRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/messages`} exact>\n                  <TopicMessagesGroupsRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n\n                <Route path={`${root}/topics/:topicName/properties/edit`} exact>\n                  <TopicEditPropertiesRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/properties`}>\n                  <Route path={`${root}/topics/:topicName/properties/delete`}>\n                    <TopicDeleteRoute\n                      instancesHref={ControlPlaneRouteRoot}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      topicHref={topicHref}\n                      updateTopicHref={updateTopicHref}\n                      deleteTopicHref={deleteTopicHref}\n                    />\n                  </Route>\n                  <TopicPropertiesRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    topicHref={topicPropertyHref}\n                    updateTopicHref={updateTopicHref}\n                    deleteTopicHref={deleteTopicHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/schemas`} exact>\n                  <TopicSchemasRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/delete`} exact>\n                  <TopicDeleteRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    topicHref={topicHref}\n                    updateTopicHref={updateTopicHref}\n                    deleteTopicHref={deleteTopicHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/edit`} exact>\n                  <TopicEditPropertiesRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Redirect\n                  from={`${root}/topics/:topicName/`}\n                  to={`${root}/topics/:topicName/consumer-groups`}\n                  exact\n                />\n              </Switch>\n            </RedirectOnGateError>\n          </Route>\n          <Route path={`${root}/consumer-groups`}>\n            <RedirectOnGateError\n              redirectUrl={instanceConsumerGroupsHref(instanceId)}\n            >\n              <Switch>\n                <Route\n                  path={`${root}/consumer-groups/:consumerGroupId/view-partition`}\n                >\n                  <Route\n                    path={`${root}/consumer-groups/:consumerGroupId/view-partition/delete`}\n                  >\n                    <ConsumerGroupDeleteRoute\n                      instancesHref={ControlPlaneRouteRoot}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                      viewPartitionConsumerGroupHref={\n                        viewPartitionConsumerGroupHref\n                      }\n                    />\n                  </Route>\n                  <Route\n                    path={`${root}/consumer-groups/:consumerGroupId/view-partition/reset-offset`}\n                  >\n                    <ConsumerGroupResetOffsetRoute\n                      instancesHref={ControlPlaneRouteRoot}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                      viewPartitionConsumerGroupHref={\n                        viewPartitionConsumerGroupHref\n                      }\n                    />\n                  </Route>\n                  <ConsumerGroupViewPartitionRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    viewPartitionConsumerGroupHref={\n                      viewPartitionConsumerGroupHref\n                    }\n                  />\n                </Route>\n                <Route\n                  path={`${root}/consumer-groups/:consumerGroupId/reset-offset`}\n                >\n                  <ConsumerGroupResetOffsetRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    viewPartitionConsumerGroupHref={\n                      viewPartitionConsumerGroupHref\n                    }\n                  />\n                </Route>\n                <Route path={`${root}/consumer-groups/:consumerGroupId/delete`}>\n                  <ConsumerGroupDeleteRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    viewPartitionConsumerGroupHref={\n                      viewPartitionConsumerGroupHref\n                    }\n                  />\n                </Route>\n              </Switch>\n            </RedirectOnGateError>\n          </Route>\n          <Redirect from={`${root}`} to={`${root}/dashboard`} exact />\n\n          <Route>\n            <InvalidObject />\n          </Route>\n        </Switch>\n      </RedirectOnGateError>\n    </Route>\n  );\n};\n","import { Loading } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"./control-plane/routesConsts\";\nimport { useDedicatedGate } from \"./useDedicatedGate\";\n\nexport const DefaultServiceRedirect: VoidFunctionComponent = () => {\n  const gate = useDedicatedGate();\n\n  if (gate === \"loading\") {\n    return <Loading />;\n  }\n\n  if (gate === \"dedicated-only\") {\n    return <Redirect to={DedicatedControlPlaneRouteRoot} />;\n  }\n\n  return <Redirect to={ControlPlaneRouteRoot} />;\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { KafkaPageV3 } from \"ui\";\n\nexport const OverviewRoute: VoidFunctionComponent = () => {\n  return <KafkaPageV3 />;\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport {\n  ControlPlaneRoutes,\n  DedicatedControlPlaneRoutes,\n  DrawerProvider,\n} from \"./control-plane\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"./control-plane/routesConsts\";\nimport { DataPlaneRoutes } from \"./data-plane\";\nimport { DataPlaneRoutePath } from \"./data-plane/routesConsts\";\nimport { DefaultServiceRedirect } from \"./DefaultServiceRedirect\";\nimport { OverviewRoute } from \"./overview\";\n\nexport const Routes: VoidFunctionComponent = () => {\n  return (\n    <Switch>\n      <Route path={\"/overview\"} exact>\n        <OverviewRoute />\n      </Route>\n      <Route path={\"/\"} exact>\n        <DefaultServiceRedirect />\n      </Route>\n      <Route path={ControlPlaneRouteRoot}>\n        <DrawerProvider>\n          {/* don't move these routes around! the order is important */}\n          <ControlPlaneRoutes />\n          <Route\n            path={DataPlaneRoutePath(ControlPlaneRouteRoot)}\n            render={({ match }) => (\n              <DataPlaneRoutes\n                root={DataPlaneRoutePath(ControlPlaneRouteRoot)}\n                instanceId={match.params.id}\n              />\n            )}\n          />\n        </DrawerProvider>\n      </Route>\n      <Route path={DedicatedControlPlaneRouteRoot}>\n        <DrawerProvider>\n          {/* don't move these routes around! the order is important */}\n          <DedicatedControlPlaneRoutes />\n          <Route\n            path={DataPlaneRoutePath(DedicatedControlPlaneRouteRoot)}\n            render={({ match }) => (\n              <DataPlaneRoutes\n                root={DataPlaneRoutePath(DedicatedControlPlaneRouteRoot)}\n                instanceId={match.params.id}\n              />\n            )}\n          />\n        </DrawerProvider>\n      </Route>\n      <Route path={\"\"} exact></Route>\n    </Switch>\n  );\n};\n","import NotificationsPortal from \"@redhat-cloud-services/frontend-components-notifications/NotificationPortal\";\nimport { notificationsReducer } from \"@redhat-cloud-services/frontend-components-notifications/redux\";\nimport { getRegistry } from \"@redhat-cloud-services/frontend-components-utilities/Registry\";\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { memo, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { Reducer } from \"redux\";\n\nimport \"./App.scss\";\n\nimport { Routes } from \"./routes\";\n\nconst App = memo(() => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { updateDocumentTitle, on } = useChrome();\n\n  const { t } = useTranslation();\n  const title = t(\"kafka:rhosakTitle\");\n\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer as Reducer });\n\n    updateDocumentTitle(title);\n\n    const unregister = on(\"APP_NAVIGATION\", (event) => {\n      console.dir(event);\n      if (event.navId) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.push(\"/\" + event.navId === \"/\" ? \"\" : event.navId);\n      }\n    });\n    return () => {\n      if (unregister) {\n        unregister();\n      }\n    };\n  }, [history, on, title, updateDocumentTitle]);\n\n  return (\n    <>\n      <NotificationsPortal />\n      <Routes />\n    </>\n  );\n});\n\nexport default App;\n","/* eslint-disable */\n// @ts-nocheck\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { AssetsContext } from \"@rhoas/app-services-ui-shared\";\nimport type { ScalprumComponentProps } from \"@scalprum/react-core\";\nimport { ScalprumComponent } from \"@scalprum/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nexport const appIdentifier = \"applicationServices\";\n\nconst basePath = \"/apps/rhoas-guides-build\";\nconst getPath = () => {\n  return basePath;\n};\n\nexport const QuickstartLoader: VoidFunctionComponent = () => {\n  const [loaded, setLoaded] = useState(false);\n  const chrome = useChrome();\n  const { quickStarts } = chrome;\n\n  const onLoad = (qs: unknown) => {\n    if (quickStarts) {\n      setLoaded(true); // unload federated module\n      quickStarts.set(appIdentifier, qs);\n    }\n  };\n\n  const processor = (([_, m]: [string, { entry: string[] }]) =>\n    m.entry.map(\n      (e) => `${basePath}${e}`\n    )) as unknown as ScalprumComponentProps[\"processor\"];\n\n  return (\n    <ErrorBoundary fallbackRender={() => null}>\n      <AssetsContext.Provider value={{ getPath }}>\n        {!loaded ? (\n          <ScalprumComponent\n            appName=\"guides\"\n            scope=\"guides\"\n            module=\"./QuickStartLoader\"\n            ErrorComponent={<div>opsie</div>}\n            processor={processor}\n            showDrafts={false}\n            onLoad={onLoad}\n          />\n        ) : null}\n      </AssetsContext.Provider>\n    </ErrorBoundary>\n  );\n};\n","import notificationsMiddleware from \"@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware\";\nimport type ReducerRegistry from \"@redhat-cloud-services/frontend-components-utilities/ReducerRegistry\";\nimport { getRegistry } from \"@redhat-cloud-services/frontend-components-utilities/Registry\";\nimport type { Middleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise-middleware\";\n\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nexport let registry: ReducerRegistry<any>;\n\nexport function init(...middleware: Middleware[]) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: [\"detail\", \"stack\"] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchDedicatedClusterSizesParams } from \"../fetchers\";\nimport { fetchDedicatedClusterSizes } from \"../fetchers\";\nimport { dedicatedQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDedicatedClusterSizesFetchQuery() {\n  const queryClient = useQueryClient();\n  const { dedicatedClusters } = useApi();\n  return async ({\n    clusterId,\n  }: Omit<FetchDedicatedClusterSizesParams, \"getEnterpriseClusterById\">) => {\n    const api = dedicatedClusters();\n    return queryClient.fetchQuery({\n      queryKey: dedicatedQueries.clusterSizes({ clusterId }),\n      queryFn: async () => {\n        return fetchDedicatedClusterSizes({\n          clusterId,\n          getEnterpriseClusterById: (...args) =>\n            api.getEnterpriseClusterById(...args),\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchDedicatedClusters } from \"../fetchers\";\nimport { dedicatedQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDedicatedClustersFetchQuery() {\n  const queryClient = useQueryClient();\n  const { dedicatedClusters } = useApi();\n  return async () => {\n    const api = dedicatedClusters();\n    return queryClient.fetchQuery({\n      queryKey: dedicatedQueries.clusters(),\n      queryFn: async () => {\n        return fetchDedicatedClusters({\n          getEnterpriseOsdClusters: (...args) =>\n            api.getEnterpriseOsdClusters(...args),\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchDedicatedQuota, fetchOrganization } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDedicatedQuotaFetchQuery(skipCache = false) {\n  const queryClient = useQueryClient();\n  const { account } = useApi();\n  const ams = account();\n\n  return async () => {\n    const organization = await queryClient.fetchQuery({\n      queryKey: masQueries.organization(),\n      queryFn: () =>\n        fetchOrganization((...args) =>\n          ams.apiAccountsMgmtV1CurrentAccountGet(...args)\n        ),\n      staleTime: Infinity,\n    });\n    if (!organization) {\n      return Promise.reject(\"Missing organization id\");\n    }\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.dedicatedAvailable(),\n      queryFn: () =>\n        fetchDedicatedQuota(\n          (...args) =>\n            ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(...args),\n          organization\n        ),\n      staleTime: skipCache ? undefined : Infinity,\n    });\n  };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { FetchConsumerGroupParams } from \"../fetchers\";\nimport { fetchConsumerGroup } from \"../fetchers\";\n\nexport function useConsumerGroup(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchConsumerGroupParams,\n    \"getConsumerGroupById\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { consumerGroups } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.consumerGroup(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      if (!params.consumerGroupId) {\n        return Promise.reject(\"Invalid consumerGroupId\");\n      }\n      const api = consumerGroups(params.adminUrl);\n\n      return fetchConsumerGroup({\n        getConsumerGroupById: (...args) => api.getConsumerGroupById(...args),\n        ...params,\n      });\n    },\n    enabled:\n      Boolean(params.adminUrl) &&\n      Boolean(params.id) &&\n      Boolean(params.consumerGroupId),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchConsumerGroupsParams } from \"../fetchers\";\nimport { fetchConsumerGroups } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useConsumerGroups(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchConsumerGroupsParams,\n    \"getConsumerGroups\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { consumerGroups } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.consumerGroups(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = consumerGroups(params.adminUrl);\n\n      return fetchConsumerGroups({\n        getConsumerGroups: (...args) => api.getConsumerGroups(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl) && Boolean(params.id),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { fetchDedicatedClusters } from \"../fetchers\";\nimport { dedicatedQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDedicatedClusters(\n  { refetch }: { refetch: boolean } = { refetch: true }\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { dedicatedClusters } = useApi();\n\n  return useQuery({\n    queryKey: dedicatedQueries.clusters(),\n    queryFn: () => {\n      const api = dedicatedClusters();\n\n      return fetchDedicatedClusters({\n        getEnterpriseOsdClusters: (...args) =>\n          api.getEnterpriseOsdClusters(...args),\n      });\n    },\n    refetchInterval: refetch ? refetchInterval : false,\n    refetchOnWindowFocus: !refetch ? false : undefined,\n    refetchOnReconnect: !refetch ? false : undefined,\n    refetchOnMount: !refetch ? false : undefined,\n    retry: false,\n  });\n}\n","import type { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  CloudProvider,\n  Kafka,\n  MarketPlaceSubscriptions,\n  Plan,\n  Status,\n} from \"ui-models/src/models/kafka\";\nimport type { DateIsoString } from \"ui-models/src/types\";\n\nimport type { SizeWithLimits } from \"../fetchers\";\n\nexport type KafkaInstanceEnhanced = Required<Kafka> & {\n  request: KafkaRequest;\n};\n\nexport function kafkaRequestToKafkaInstanceEnhanched(\n  instance: KafkaRequest,\n  marketplaceSubscriptions: MarketPlaceSubscriptions[],\n  developerPlanInstanceLimits: SizeWithLimits[],\n  standardPlanInstanceLimits: SizeWithLimits[]\n): KafkaInstanceEnhanced {\n  const enhancedInstance: KafkaInstanceEnhanced = {\n    billing: undefined,\n    connectionRate: 0,\n    connections: 0,\n    createdAt: (instance.created_at ||\n      new Date().toISOString()) as DateIsoString,\n    egress: 0,\n    expiryDate: instance.expires_at as DateIsoString | undefined,\n    id: instance.id,\n    ingress: 0,\n    maxPartitions: 0,\n    messageSize: { type: \"bytes\", value: BigInt(0) },\n    name: instance.name || \"\",\n    owner: instance.owner || \"\",\n    plan: instance.instance_type as Plan,\n    provider: instance.cloud_provider as CloudProvider,\n    region: instance.region || \"\",\n    size: \"1\",\n    status: apiStatusToUIStatus(instance.status || \"\"),\n    storage: { type: \"bytes\", value: BigInt(0) },\n    updatedAt: (instance.updated_at ||\n      new Date().toISOString()) as DateIsoString,\n    request: instance,\n    clusterId: instance.cluster_id ? instance.cluster_id : undefined,\n    version: instance.version || \"\",\n    bootstrapUrl: instance.bootstrap_server_host,\n    adminUrl: instance.admin_api_server_url,\n    az: instance.multi_az == true ? \"multi\" : \"single\",\n  };\n\n  // update the billing info\n  try {\n    const marketplaceForBilling = marketplaceSubscriptions.find((ms) =>\n      ms.subscriptions.find((s) => s === instance.billing_cloud_account_id)\n    )?.marketplace;\n\n    const billing: KafkaInstanceEnhanced[\"billing\"] =\n      instance.billing_model === \"enterprise\"\n        ? \"dedicated\"\n        : instance.billing_model === \"standard\"\n        ? \"prepaid\"\n        : marketplaceForBilling && instance.billing_cloud_account_id\n        ? {\n            marketplace: marketplaceForBilling,\n            subscription: instance.billing_cloud_account_id,\n          }\n        : undefined;\n    enhancedInstance.billing = billing;\n  } catch (e) {\n    console.warn(\n      \"kafkaRequestToKafkaInstance\",\n      `couldn't retrieve the billing info for`,\n      instance\n    );\n  }\n\n  // update the limits\n  try {\n    const limits =\n      instance.instance_type === \"developer\"\n        ? developerPlanInstanceLimits\n        : standardPlanInstanceLimits;\n    const thisInstanceLimits = limits.find((l) => l.id === instance.size_id);\n    if (thisInstanceLimits) {\n      enhancedInstance.size = thisInstanceLimits.displayName;\n      enhancedInstance.ingress = thisInstanceLimits.ingress;\n      enhancedInstance.egress = thisInstanceLimits.egress;\n      enhancedInstance.storage = {\n        type: \"bytes\",\n        value: BigInt(instance.max_data_retention_size?.bytes || 0),\n      };\n      enhancedInstance.connections = thisInstanceLimits.connections;\n      enhancedInstance.connectionRate = thisInstanceLimits.connectionRate;\n      enhancedInstance.maxPartitions = thisInstanceLimits.maxPartitions;\n      enhancedInstance.messageSize = {\n        type: \"bytes\",\n        value: BigInt(thisInstanceLimits.messageSize),\n      };\n    }\n  } catch (e) {\n    console.warn(\n      \"kafkaRequestToKafkaInstance\",\n      `couldn't retrieve the limits info for`,\n      instance\n    );\n  }\n\n  return enhancedInstance;\n}\n\nfunction apiStatusToUIStatus(status: string): Status {\n  const mapping: { [key: string]: Status } = {\n    accepted: \"accepted\",\n    preparing: \"preparing\",\n    provisioning: \"provisioning\",\n    ready: \"ready\",\n    failed: \"degraded\",\n    deprovision: \"deprovision\",\n    deleting: \"deleting\",\n  };\n  return mapping[status] || \"degraded\";\n}\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport type { CreateKafkaInstanceServices } from \"ui\";\nimport { useApi } from \"../useApi\";\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n};\n\n/**\n * Create Kafka instance hook that creates kafka instance\n */\nexport const useCreateInstance =\n  (): CreateKafkaInstanceServices[\"onCreate\"] => {\n    const { kafkasFleet } = useApi();\n\n    return (data, onSuccess, onError) => {\n      const runner = async () => {\n        const apisService = kafkasFleet();\n\n        try {\n          const kafkaRequest = {} as KafkaRequestPayload;\n          kafkaRequest.name = data.name;\n          kafkaRequest.cloud_provider = data.provider;\n          kafkaRequest.region = data.region;\n          kafkaRequest.plan = data.plan + \".\" + data.sizeId;\n          kafkaRequest.billing_model =\n            data.billing === \"prepaid\"\n              ? \"standard\"\n              : data.billing !== undefined\n              ? \"marketplace\"\n              : null;\n          kafkaRequest.billing_cloud_account_id =\n            data.billing && data.billing !== \"prepaid\"\n              ? data.billing.subscription\n              : null;\n          await apisService.createKafka(true, kafkaRequest);\n          onSuccess();\n        } catch (error) {\n          if (isServiceApiError(error)) {\n            const { code } = error?.response?.data || {};\n\n            switch (data.plan) {\n              case \"developer\":\n                switch (code) {\n                  case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                    onError(\"name-taken\");\n                    break;\n\n                  // regardless of the error, let's not give too many details to trial users\n                  default:\n                    onError(\"developer-unavailable\");\n                    break;\n                }\n                break;\n\n              case \"standard\":\n                switch (code) {\n                  case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                    onError(\"name-taken\");\n                    break;\n\n                  case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                    onError(\"region-unavailable\");\n                    break;\n\n                  case ErrorCodes.INSUFFICIENT_QUOTA:\n                    onError(\"insufficient-quota\");\n                    break;\n\n                  default:\n                    console.error(\n                      \"useAvailableProvidersAndDefault\",\n                      \"createKafka unknown error\",\n                      error\n                    );\n                    onError(\"unknown\");\n                }\n                break;\n            }\n          } else {\n            console.error(\n              \"useAvailableProvidersAndDefault\",\n              \"createKafka unexpected error\",\n              error\n            );\n          }\n        }\n      };\n      void runner();\n    };\n  };\n","import type { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport {\n  useProviderRegionSizesFetchQuery,\n  useProvidersWithRegionsFetchQuery,\n  useStandardQuotaFetchQuery,\n} from \"../fetchQueries\";\nimport { kafkaRequestToKafkaInstanceEnhanched } from \"../transformers/kafkaRequestToKafkaInstanceEnhanched\";\n\nexport function useKafkaInstanceTransformer() {\n  const getStandardQuotaQuery = useStandardQuotaFetchQuery();\n  const getProvidersInfo = useProvidersWithRegionsFetchQuery();\n  const getProviderRegionsSizes = useProviderRegionSizesFetchQuery();\n\n  return async function kafkaInstanceTransformer(instance: KafkaRequest) {\n    if (!instance.region) {\n      throw new Error(\n        `Invalid KafkaRequest, empty region: ${JSON.stringify(instance)}`\n      );\n    }\n    const standardQuota = await getStandardQuotaQuery();\n\n    const providersInfo = await getProvidersInfo(\n      instance.billing_model !== \"standard\" ? \"developer\" : \"standard\"\n    );\n    const providerInfo = providersInfo.providers.find(\n      (p) => p.id === instance.cloud_provider\n    );\n    if (!providerInfo) {\n      return Promise.reject(\"Invalid cloud provider\");\n    }\n    const standardPlanLimitsQuery = getProviderRegionsSizes(\n      providerInfo,\n      instance.region,\n      \"standard\"\n    );\n    const developerPlanLimitsQuery = getProviderRegionsSizes(\n      providerInfo,\n      instance.region,\n      \"developer\"\n    );\n    const [standardPlanLimits, developerPlanLimits] = await Promise.all([\n      standardPlanLimitsQuery,\n      developerPlanLimitsQuery,\n    ]);\n    return kafkaRequestToKafkaInstanceEnhanched(\n      instance,\n      standardQuota.marketplaceSubscriptions,\n      developerPlanLimits,\n      standardPlanLimits\n    );\n  };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport { useKafkaInstanceTransformer } from \"./useKafkaInstanceTransformer\";\n\nexport function useKafka(id: string | undefined, suspense = false) {\n  const { refetchInterval } = useApiConfiguration();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  const api = kafkasFleet();\n\n  return useQuery({\n    enabled: Boolean(id),\n    queryKey: kafkaQueries.instance.details({ id }),\n    queryFn: async () => {\n      if (!id) {\n        return Promise.reject(\"Invalid Kafka instance id\");\n      }\n      const instance = await api.getKafkaById(id);\n      return dataMapper(instance.data);\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchKafkasParams } from \"../fetchers\";\nimport { fetchKafkas } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport { useDedicatedClusters } from \"./useDedicatedClusters\";\nimport { useKafkaInstanceTransformer } from \"./useKafkaInstanceTransformer\";\n\nexport function useKafkas(\n  params: Omit<FetchKafkasParams, \"dataMapper\" | \"getKafkas\" | \"clusterIds\">\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { data, isError } = useDedicatedClusters();\n  const queryClient = useQueryClient();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  const api = kafkasFleet();\n  const clusterIds = data?.clusters.map((c) => c.id);\n\n  return useQuery({\n    queryKey: kafkaQueries.list({ ...params, clusterIds }),\n    queryFn: async () => {\n      const res = await fetchKafkas({\n        getKafkas: (...args) => api.getKafkas(...args),\n        dataMapper,\n        ...params,\n        clusterIds,\n      });\n      res.instances.forEach((i) =>\n        queryClient.setQueryData(kafkaQueries.instance.details({ id: i.id }), i)\n      );\n      return res;\n    },\n    enabled: Boolean(clusterIds) || isError,\n    refetchInterval,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchTopicParams } from \"../fetchers\";\nimport { fetchTopic } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopic(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchTopicParams,\n    \"getTopic\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { topics } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.topic(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = topics(params.adminUrl);\n\n      return fetchTopic({\n        getTopic: (...args) => api.getTopic(...args),\n        ...params,\n      });\n    },\n    enabled:\n      Boolean(params.adminUrl) &&\n      Boolean(params.id) &&\n      Boolean(params.topicName),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchTopicsParams } from \"../fetchers\";\nimport { fetchTopics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopics(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchTopicsParams,\n    \"getTopics\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { topics } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.topics(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = topics(params.adminUrl);\n\n      return fetchTopics({\n        getTopics: (...args) => api.getTopics(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl) && Boolean(params.id),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchUserAccountsParams } from \"../fetchers\";\nimport { fetchUserAccounts } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useUserAccounts(\n  params: Omit<FetchUserAccountsParams, \"getUserAccounts\">,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { userAccounts } = useApi();\n\n  return useQuery({\n    queryKey: masQueries.userAccounts(params),\n    queryFn: async () => {\n      const api = await userAccounts();\n\n      return fetchUserAccounts({\n        getUserAccounts: (...args) => api.listPrincipals(...args),\n        ...params,\n      });\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchPermissionsParams } from \"../fetchers\";\nimport { fetchPermissions } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useAcls(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchPermissionsParams,\n    \"getAcls\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { acls } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.permissions(params),\n    queryFn: () => {\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      const api = acls(params.adminUrl);\n\n      return fetchPermissions({\n        getAcls: (...args) => api.getAcls(...args),\n      });\n    },\n    enabled: Boolean(params.adminUrl),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchServiceAccountsParams } from \"../fetchers\";\nimport { fetchServiceAccounts } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useServiceAccounts(\n  params: Omit<FetchServiceAccountsParams, \"getServiceAccounts\">,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { serviceAccount } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.serviceAccounts(params),\n    queryFn: () => {\n      const api = serviceAccount();\n\n      return fetchServiceAccounts({\n        getServiceAccounts: (...args) => api.getServiceAccounts(...args),\n        ...params,\n      });\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchDedicatedClusters, fetchKafkas } from \"../fetchers\";\nimport { useKafkaInstanceTransformer } from \"../queries\";\nimport { dedicatedQueries, kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport const useDeveloperInstanceAvailabilityFetchQuery = () => {\n  const queryClient = useQueryClient();\n  const { kafkasFleet, dedicatedClusters } = useApi();\n  const dataMapper = useKafkaInstanceTransformer();\n\n  return (getUsername: () => Promise<string>) => {\n    const fleetApi = kafkasFleet();\n    const clustersApi = dedicatedClusters();\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.developerAvailability(),\n      queryFn: async () => {\n        const username = await getUsername();\n        if (!username) {\n          return Promise.reject(new Error(\"Invalid username\"));\n        }\n        let clusterIds: string[] = [];\n\n        try {\n          const clusterResponse = await queryClient.fetchQuery({\n            queryKey: dedicatedQueries.clusters(),\n            queryFn: () =>\n              fetchDedicatedClusters({\n                getEnterpriseOsdClusters: (...args) =>\n                  clustersApi.getEnterpriseOsdClusters(...args),\n              }),\n          });\n          clusterIds = clusterResponse.clusters.map((c) => c.id);\n        } catch {\n          // noop\n        }\n\n        const { instances } = await queryClient.fetchQuery({\n          queryKey: kafkaQueries.list({\n            direction: \"desc\",\n            sort: \"createdAt\",\n            name: [],\n            status: [],\n            owner: [username],\n            perPage: 1000,\n            page: 1,\n            clusterIds,\n            deployment: \"standard\",\n          }),\n          queryFn: () =>\n            fetchKafkas({\n              getKafkas: (...args) => fleetApi.getKafkas(...args),\n              dataMapper,\n              direction: \"desc\",\n              sort: \"createdAt\",\n              name: [],\n              status: [],\n              owner: [username],\n              perPage: 1000,\n              page: 1,\n              clusterIds,\n              deployment: \"standard\",\n            }),\n          staleTime: Infinity,\n        });\n\n        return instances.some((k) => k?.plan !== \"standard\") !== true;\n      },\n    });\n  };\n};\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { useKafkaInstanceTransformer } from \"../queries\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaFetchQuery() {\n  const queryClient = useQueryClient();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  return async (id: string) => {\n    const api = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.details({ id }),\n      queryFn: async () => {\n        const instance = await api.getKafkaById(id);\n        return dataMapper(instance.data);\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchKafkaKpis } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaKpisFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (id: string) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.kpi({ id }),\n      queryFn: async () => {\n        return fetchKafkaKpis(\n          (...args) => api.getMetricsByInstantQuery(...args),\n          id\n        );\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchKafkaMetricsProps } from \"../fetchers\";\nimport { fetchKafkaMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (params: Omit<FetchKafkaMetricsProps, \"getMetricsByRangeQuery\">) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.instance(params),\n      queryFn: async () => {\n        return fetchKafkaMetrics({\n          getMetricsByRangeQuery: (...args) =>\n            api.getMetricsByRangeQuery(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchMessagesParams } from \"../fetchers\";\nimport { fetchMessages } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useMessagesFetchQuery() {\n  const { records } = useApi();\n  const queryClient = useQueryClient();\n\n  return (\n    params: { id: string; adminUrl: string } & Omit<\n      FetchMessagesParams,\n      \"consumeRecords\"\n    >\n  ) => {\n    const api = records(params.adminUrl);\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.topicMessages(params),\n      queryFn: () => {\n        if (!params.id) {\n          return Promise.reject(\"Invalid id\");\n        }\n        if (!params.adminUrl) {\n          return Promise.reject(\"Invalid adminUrl\");\n        }\n\n        return fetchMessages({\n          consumeRecords: (...args) => api.consumeRecords(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfoWithRegionsCapacity } from \"../fetchers\";\nimport { fetchProviderRegionSizes } from \"../fetchers\";\nimport { providerQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useProviderRegionSizesFetchQuery() {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n\n  return (\n    provider: CloudProviderInfoWithRegionsCapacity,\n    region: string,\n    plan: Plan\n  ) => {\n    const kms = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: providerQueries.limits[\n        plan === \"standard\" ? \"standard\" : \"developer\"\n      ]({ provider: provider.id, region }),\n      queryFn: () =>\n        fetchProviderRegionSizes(\n          (...args) => kms.getInstanceTypesByCloudProviderAndRegion(...args),\n          provider,\n          region,\n          plan\n        ),\n      staleTime: Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport { fetchProvidersWithRegions } from \"../fetchers\";\nimport { providerQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useProvidersWithRegionsFetchQuery() {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n\n  return (plan: Plan) => {\n    const kms = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: providerQueries.list({ plan }),\n      queryFn: () =>\n        fetchProvidersWithRegions(\n          (...args) => kms.getCloudProviders(...args),\n          (...args) => kms.getCloudProviderRegions(...args),\n          plan\n        ),\n      staleTime: Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchOrganization, fetchStandardQuota } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useStandardQuotaFetchQuery(skipCache = false) {\n  const queryClient = useQueryClient();\n  const { account } = useApi();\n  const ams = account();\n\n  return async () => {\n    const organization = await queryClient.fetchQuery({\n      queryKey: masQueries.organization(),\n      queryFn: () =>\n        fetchOrganization((...args) =>\n          ams.apiAccountsMgmtV1CurrentAccountGet(...args)\n        ),\n      staleTime: Infinity,\n    });\n    if (!organization) {\n      return Promise.reject(\"Missing organization id\");\n    }\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.standardAvailable(),\n      queryFn: () =>\n        fetchStandardQuota(\n          (...args) =>\n            ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(...args),\n          organization\n        ),\n      staleTime: skipCache ? undefined : Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchTopicsParams } from \"../fetchers\";\nimport { fetchTopics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopicsFetchQuery() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return (\n    params: Omit<FetchTopicsParams, \"getTopics\"> & {\n      id: string;\n      adminUrl: string;\n    }\n  ) => {\n    const api = topics(params.adminUrl);\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.topics(params),\n      queryFn: async () => {\n        return fetchTopics({\n          getTopics: (...args) => api.getTopics(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchTopicsMetricsProps } from \"../fetchers\";\nimport { fetchTopicsMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopicsMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (params: Omit<FetchTopicsMetricsProps, \"getMetricsByRangeQuery\">) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.topic(params),\n      queryFn: async () => {\n        return fetchTopicsMetrics({\n          getMetricsByRangeQuery: (...args) =>\n            api.getMetricsByRangeQuery(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type {\n  CreateDedicatedKafkaFormData,\n  CreateDedicatedKafkaInstanceError,\n} from \"ui\";\nimport { dedicatedQueries, kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useCreateDedicatedKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      instance: CreateDedicatedKafkaFormData;\n      onSuccess: () => void;\n      onError: (error: CreateDedicatedKafkaInstanceError) => void;\n    }) {\n      const { instance, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      const kafkaRequest: KafkaRequestPayload = {\n        name: instance.name,\n        cluster_id: instance.cluster.id,\n      };\n      kafkaRequest.plan = \"standard.\" + instance.sizeId;\n      kafkaRequest.billing_model = \"enterprise\";\n      try {\n        await api.createKafka(true, kafkaRequest);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const { code } = error?.response?.data || {};\n\n          switch (code) {\n            case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n              onError(\"name-taken\");\n              break;\n\n            case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n              onError(\"cluster-unavailable\");\n              break;\n\n            case ErrorCodes.INSUFFICIENT_QUOTA:\n              onError(\"insufficient-quota\");\n              break;\n\n            default:\n              console.error(\n                \"useCreateDedicatedKafkaMutation\",\n                \"createKafka unknown error\",\n                error\n              );\n              onError(\"unknown\");\n          }\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n        void queryClient.invalidateQueries([dedicatedQueries._root()]);\n      },\n    }\n  );\n}\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n} as const;\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type { CreateKafkaFormData, CreateKafkaInstanceError } from \"ui\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useCreateKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      instance: CreateKafkaFormData;\n      onSuccess: () => void;\n      onError: (error: CreateKafkaInstanceError) => void;\n    }) {\n      const { instance, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      const kafkaRequest: KafkaRequestPayload = {\n        name: instance.name,\n        cloud_provider: instance.provider,\n        region: instance.region,\n      };\n      kafkaRequest.plan = instance.plan + \".\" + instance.sizeId;\n      kafkaRequest.billing_model =\n        instance.billing === \"prepaid\"\n          ? \"standard\"\n          : instance.billing !== undefined\n          ? \"marketplace\"\n          : null;\n      kafkaRequest.billing_cloud_account_id =\n        instance.billing && instance.billing !== \"prepaid\"\n          ? instance.billing.subscription\n          : null;\n      try {\n        await api.createKafka(true, kafkaRequest);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const { code } = error?.response?.data || {};\n\n          switch (instance.plan) {\n            case \"developer\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                // regardless of the error, let's not give too many details to trial users\n                default:\n                  onError(\"developer-unavailable\");\n                  break;\n              }\n              break;\n\n            case \"standard\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                  onError(\"region-unavailable\");\n                  break;\n\n                case ErrorCodes.INSUFFICIENT_QUOTA:\n                  onError(\"insufficient-quota\");\n                  break;\n\n                default:\n                  console.error(\n                    \"useKafkaCreateInstanceMutation\",\n                    \"createKafka unknown error\",\n                    error\n                  );\n                  onError(\"unknown\");\n              }\n              break;\n          }\n        } else {\n          console.error(\n            \"useKafkaCreateInstanceMutation\",\n            \"createKafka unexpected error\",\n            error\n          );\n          onError(\"unknown\");\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n      },\n    }\n  );\n}\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n} as const;\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      id: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { id, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      try {\n        await api.deleteKafkaById(id, true);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance({\n      adminUrl,\n      name,\n      onSuccess,\n      onError,\n    }: {\n      instanceId: string;\n      adminUrl: string;\n      name: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const api = topics(adminUrl);\n      try {\n        await api.deleteTopic(name);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type {\n  KafkaRequest,\n  KafkaUpdateRequest,\n} from \"@rhoas/kafka-management-sdk\";\nimport { getErrorCode, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type { AxiosResponse } from \"axios\";\nimport { AxiosError } from \"axios\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\ntype Errors = \"invalid-user\" | \"other\" | \"unknown\";\n\nexport function useUpdateKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation<\n    AxiosResponse<KafkaRequest>,\n    { type: Errors; message?: string },\n    { id: string; updates: KafkaUpdateRequest },\n    unknown\n  >(\n    async function kafkaCreateInstance({ id, updates }) {\n      const api = kafkasFleet();\n      try {\n        return await api.updateKafkaById(id, updates);\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const code = getErrorCode(error);\n\n          switch (code) {\n            case \"KAFKAS-MGMT-21\": {\n              return Promise.reject({\n                type: \"invalid-user\",\n                message: error.response?.data.reason,\n              });\n            }\n            default: {\n              return Promise.reject({\n                type: \"other\",\n                message: error.response?.data.reason,\n              });\n            }\n          }\n        } else if (error instanceof AxiosError) {\n          return Promise.reject({ type: \"unknown\", message: error.message });\n        } else {\n          return Promise.reject({ type: \"unknown\", message: \"unknown\" });\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteConsumerGroupMutation() {\n  const { consumerGroups } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function deleteConsumerGroup(props: {\n      instanceId: string;\n      adminUrl: string;\n      consumerGroupId: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { instanceId, adminUrl, consumerGroupId, onSuccess, onError } =\n        props;\n      const api = consumerGroups(adminUrl);\n      try {\n        await api.deleteConsumerGroupById(consumerGroupId);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useApi } from \"../useApi\";\nimport type { OffsetValue } from \"ui\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\n\nexport function useResetConsumerGroupMutation() {\n  const { consumerGroups } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function consumerGroupResetOffset(props: {\n      instanceId: string;\n      adminUrl: string;\n      consumerGroupId: string;\n      offset: OffsetValue;\n      topic: string;\n      partitions: number[];\n      value?: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const {\n        instanceId,\n        adminUrl,\n        consumerGroupId,\n        offset,\n        topic,\n        partitions,\n        value,\n        onSuccess,\n        onError,\n      } = props;\n      const api = consumerGroups(adminUrl);\n      try {\n        await api.resetConsumerGroupOffset(consumerGroupId, {\n          value,\n          offset,\n          topics: [{ topic, partitions }],\n        });\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport type { AclFilter } from \"../types\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeletePermissionsMutation() {\n  const { acls } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function deletePermissions(props: {\n      instanceId: string;\n      adminUrl: string;\n      acl: AclFilter;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, acl, onSuccess, onError } = props;\n      const api = acls(adminUrl);\n      try {\n        await api.deleteAcls(\n          acl.resourceType,\n          acl.resourceName,\n          acl.patternType,\n          acl.principal,\n          acl.operation,\n          acl.permissionType\n        );\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason || \"\";\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance.permissions({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useUpdatePermissionsMutation() {\n  const { acls } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function updatePermissionsPermissions(props: {\n      instanceId: string;\n      adminUrl: string;\n      acl: AclBinding;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, acl, onSuccess, onError } = props;\n      const api = acls(adminUrl);\n      try {\n        await api.createAcl({\n          resourceName: acl.resourceName,\n          resourceType: acl.resourceType,\n          patternType: acl.patternType,\n          permission: acl.permission,\n          principal: acl.principal,\n          operation: acl.operation,\n        });\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type { NewTopicInput, TopicSettings } from \"@rhoas/kafka-instance-sdk\";\nimport {\n  UserEditable,\n  convertToTopicSettings,\n} from \"consoledot-api/src/transformers/topicTransformer\";\nimport { convertToKeyValuePairs } from \"consoledot-api/src/transformers/topicTransformer\";\n\nexport function useCreateTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function createTopic(props: {\n      instanceId: string;\n      adminUrl: string;\n      topic: Topic;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, topic, onSuccess, onError } = props;\n      const api = topics(adminUrl);\n\n      const createTopic = (topic: Topic): NewTopicInput => {\n        const { name } = topic;\n        const topicSettings = convertToTopicSettings(topic);\n        return {\n          name,\n          settings: topicSettings,\n        };\n      };\n\n      try {\n        await api.createTopic(createTopic(topic));\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message || \"?\");\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { TopicSettings } from \"@rhoas/kafka-instance-sdk\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport {\n  convertToKeyValuePairs,\n  convertToTopicSettings,\n} from \"consoledot-api/src/transformers/topicTransformer\";\n\nexport function useUpdateTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function UpdateTopicMutation({\n      adminUrl,\n      topic,\n      onSuccess,\n      onError,\n    }: {\n      instanceId: string;\n      adminUrl: string;\n      topic: Topic;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const api = topics(adminUrl);\n\n      const updateTopic = (topic: Topic) => {\n        const topicSettings = convertToTopicSettings(topic);\n        return topicSettings;\n      };\n\n      try {\n        await api.updateTopic(topic.name || \"\", updateTopic(topic));\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message || \"?\");\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type {\n  AclOperationFilter,\n  AclPatternTypeFilter,\n  AclPermissionTypeFilter,\n  AclResourceTypeFilter,\n} from \"@rhoas/kafka-instance-sdk\";\nimport {\n  ConsumerGroupOrderKey,\n  TopicOrderKey,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { RangeQuery } from \"@rhoas/kafka-management-sdk\";\n\nexport type NoUndefinedField<T> = {\n  [P in keyof T]-?: NoUndefinedField<NonNullable<T[P]>>;\n};\n\nexport type SafeRangeQuery = NoUndefinedField<RangeQuery>;\n\nexport const KafkaInstancesSortableColumns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"provider\",\n  \"region\",\n] as const;\n\nexport type KafkaInstancesSortableColumn =\n  (typeof KafkaInstancesSortableColumns)[number];\n\nexport const KafkaTopicsSortableColumns = [\n  ...Object.values(TopicOrderKey),\n] as const;\n\nexport type KafkaTopicsSortableColumn =\n  (typeof KafkaTopicsSortableColumns)[number];\n\nexport const KafkaConsumerGroupSortableColumns = [\n  ...Object.values(ConsumerGroupOrderKey),\n] as const;\n\nexport type KafkaConsumerGroupSortableColumn =\n  (typeof KafkaConsumerGroupSortableColumns)[number];\n\nexport type AclFilter = {\n  resourceType?: AclResourceTypeFilter;\n  resourceName?: string;\n  patternType?: AclPatternTypeFilter;\n  principal?: string;\n  operation?: AclOperationFilter;\n  permissionType?: AclPermissionTypeFilter;\n};\n","import { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { isReactQueryDevToolsEanbled } from \"local-storage-helpers\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext, lazy, Suspense, useContext } from \"react\";\n\nconst ReactQueryDevtoolsProduction = lazy(() =>\n  import(\"@tanstack/react-query-devtools/build/lib/index.prod.js\").then(\n    (d) => ({\n      default: d.ReactQueryDevtools,\n    })\n  )\n);\n\ntype ApiContextProps = {\n  accessToken: () => Promise<string>;\n  basePath: string;\n  refetchInterval: number;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst ApiContext = createContext<ApiContextProps>(null!);\n\nconst queryClient = new QueryClient();\n\nexport const ApiProvider: FunctionComponent<ApiContextProps> = ({\n  children,\n  ...context\n}) => {\n  const showDevTools = isReactQueryDevToolsEanbled();\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ApiContext.Provider value={context}>\n        {children}\n        {showDevTools && (\n          <Suspense fallback={null}>\n            <ReactQueryDevtoolsProduction />\n          </Suspense>\n        )}\n      </ApiContext.Provider>\n    </QueryClientProvider>\n  );\n};\n\nexport function useApiConfiguration() {\n  return useContext(ApiContext);\n}\n\nexport { useQueryErrorResetBoundary } from \"@tanstack/react-query\";\n","import type {\n  ConsumerGroup as ConsumerGroupApi,\n  ConsumerGroupState,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type {\n  Consumer,\n  ConsumerGroup,\n} from \"ui-models/src/models/consumer-group\";\n\nexport function consumerGroupTransformer(t: ConsumerGroupApi): ConsumerGroup {\n  const state = stateMapping[t.state as ConsumerGroupState];\n  return {\n    groupId: t.groupId,\n    state: state,\n    consumers: t.consumers.map<Consumer>((consumer) => ({\n      groupId: consumer.groupId,\n      topic: consumer.topic,\n      lag: consumer.lag,\n      memberId: consumer.memberId,\n      partition: consumer.partition,\n      offset: consumer.offset,\n      logEndOffset: consumer.logEndOffset,\n    })),\n    activeConsumers: t.metrics?.activeConsumers,\n    laggingPartitions: t.metrics?.laggingPartitions,\n    unassignedPartitions: t.metrics?.unassignedPartitions,\n  };\n}\n\nexport const stateMapping: {\n  [state in ConsumerGroupState]: ConsumerGroup[\"state\"];\n} = {\n  DEAD: \"Dead\",\n  EMPTY: \"Empty\",\n  STABLE: \"Stable\",\n  UNKNOWN: \"Unknown\",\n  COMPLETING_REBALANCE: \"CompletingRebalance\",\n  PREPARING_REBALANCE: \"PreparingRebalance\",\n};\n","import type { GroupsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { ConsumerGroup } from \"ui-models/src/models/consumer-group\";\nimport { consumerGroupTransformer } from \"../transformers/consumerGroupTransformer\";\n\nexport type FetchConsumerGroupParams = {\n  getConsumerGroupById: GroupsApi[\"getConsumerGroupById\"];\n  consumerGroupId: string;\n};\n\nexport async function fetchConsumerGroup({\n  getConsumerGroupById,\n  consumerGroupId,\n}: FetchConsumerGroupParams): Promise<ConsumerGroup> {\n  const response = await getConsumerGroupById(consumerGroupId);\n  return consumerGroupTransformer(response.data);\n}\n","import type {\n  ConsumerGroupState,\n  GroupsApi,\n  SortDirection,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { ConsumerGroup } from \"ui-models/src/models/consumer-group\";\nimport { stateMapping } from \"../transformers/consumerGroupTransformer\";\nimport type { KafkaConsumerGroupSortableColumn } from \"../types\";\n\nexport type FetchConsumerGroupsParams = {\n  getConsumerGroups: GroupsApi[\"getConsumerGroups\"];\n  page?: number;\n  perPage?: number;\n  sort?: KafkaConsumerGroupSortableColumn;\n  direction?: SortDirection;\n  topic?: string;\n  groupId?: string;\n};\n\nexport async function fetchConsumerGroups({\n  getConsumerGroups,\n  page,\n  perPage,\n  topic,\n  groupId,\n  sort,\n  direction,\n}: FetchConsumerGroupsParams): Promise<{\n  groups: ConsumerGroup[];\n  count: number;\n}> {\n  const response = await getConsumerGroups(\n    undefined,\n    undefined,\n    perPage,\n    page,\n    topic,\n    groupId,\n    direction,\n    sort\n  );\n  const groups = (response.data.items || []).map<ConsumerGroup>((t) => ({\n    groupId: t.groupId || \"\",\n    state: stateMapping[t.state as ConsumerGroupState],\n    consumers: t.consumers,\n    activeConsumers: t.metrics?.activeConsumers,\n    laggingPartitions: t.metrics?.laggingPartitions,\n    unassignedPartitions: t.metrics?.unassignedPartitions,\n  }));\n  const count = response.data.total;\n\n  return { count, groups };\n}\n","import type { EnterpriseCluster } from \"@rhoas/kafka-management-sdk\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\n\nexport function dedicatedClusterTransformer(\n  c: EnterpriseCluster & { [key: string]: any } // TODO: remove this hack with the latest SDK\n): DedicatedCluster {\n  if (c.cluster_id === undefined || c.status === undefined) {\n    throw new Error(\"Invalid EnterpriseCluster data\");\n  }\n  return {\n    id: c.cluster_id,\n    status:\n      c.status === \"ready\"\n        ? \"ready\"\n        : c.status === \"failed\"\n        ? \"failed\"\n        : \"provisioning\",\n    requiresPrivateNetwork: c.access_kafkas_via_private_network,\n    az: c.multi_az ? \"multi\" : \"single\",\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    cloudProvider: c.cloud_provider,\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    cloudRegion: c.region,\n  };\n}\n","import type { EnterpriseDataplaneClustersApi } from \"@rhoas/kafka-management-sdk\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport { dedicatedClusterTransformer } from \"../transformers/dedicatedClusterTransformer\";\n\nexport type FetchDedicatedClustersParams = {\n  getEnterpriseOsdClusters: EnterpriseDataplaneClustersApi[\"getEnterpriseOsdClusters\"];\n};\n\nexport async function fetchDedicatedClusters({\n  getEnterpriseOsdClusters,\n}: FetchDedicatedClustersParams): Promise<{\n  clusters: DedicatedCluster[];\n  count: number;\n}> {\n  const response = await getEnterpriseOsdClusters();\n  if (response.status === 403) {\n    throw new MissingDedicatedEntitlement();\n  }\n  return {\n    clusters: (response.data.items || []).map(dedicatedClusterTransformer),\n    count: response.data.total,\n  };\n}\n\nexport class MissingDedicatedEntitlement extends Error {}\n","import type { QuotaCost } from \"@rhoas/account-management-sdk\";\n\nexport const standardId = \"RHOSAK\" as const;\nexport const developerId = \"RHOSAKTrial\" as const;\nexport const dedicatedId = \"RHOSAKCC\" as const;\nexport const resourceName = \"rhosak\" as const;\n\nexport function isStandardQuota(q: QuotaCost) {\n  return q.related_resources?.find((r) => r.billing_model === \"standard\");\n}\n\nexport function isMarketplaceQuota(q: QuotaCost) {\n  return q.related_resources?.find((r) => r.billing_model === \"marketplace\");\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport type { MarketPlaceSubscriptions } from \"ui-models/src/models/kafka\";\nimport {\n  dedicatedId,\n  isStandardQuota,\n  resourceName,\n} from \"../utilsAndConstants\";\n\nexport type DedicatedQuota = {\n  hasTrialQuota: boolean;\n  remainingDedicatedQuota: number | undefined;\n  remainingMarketplaceQuota: number | undefined;\n  marketplaceSubscriptions: MarketPlaceSubscriptions[];\n};\nexport const fetchDedicatedQuota = async (\n  api: AppServicesApi[\"apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet\"],\n  organizationId: string\n) => {\n  const quotaResponse = await api(\n    organizationId,\n    undefined,\n    true,\n    undefined,\n    true\n  );\n  if (quotaResponse.status !== 200) {\n    throw new Error(quotaResponse.statusText);\n  }\n  const dedicatedQuotas = quotaResponse.data.items?.filter((q) =>\n    q.related_resources?.find(\n      (r) => r.resource_name === resourceName && r.product === dedicatedId\n    )\n  );\n\n  const dedicatedQuota = dedicatedQuotas?.find(isStandardQuota);\n  const hasDedicatedQuota = dedicatedQuota !== undefined;\n\n  const remainingDedicatedQuota = dedicatedQuota\n    ? dedicatedQuota.allowed - dedicatedQuota.consumed\n    : undefined;\n\n  return {\n    hasDedicatedQuota,\n    remainingDedicatedQuota,\n  };\n};\n","import type { SupportedKafkaSize } from \"@rhoas/kafka-management-sdk\";\nimport type { SizeWithLimits } from \"../fetchers\";\n\nexport function apiSizeToComponentSize(\n  isDisabled: (id: string) => boolean,\n  apiSize: SupportedKafkaSize\n): SizeWithLimits {\n  const s = apiSize as Required<SupportedKafkaSize>;\n  return {\n    id: s.id,\n    displayName: s.display_name,\n    quota: s.quota_consumed,\n    ingress: (s.ingress_throughput_per_sec.bytes || 0) / 1048576,\n    egress: (s.egress_throughput_per_sec.bytes || 0) / 1048576,\n    storage: Math.round((s.max_data_retention_size.bytes || 0) / 1073741824),\n    connections: s.total_max_connections,\n    connectionRate: s.max_connection_attempts_per_sec,\n    maxPartitions: s.max_partitions,\n    messageSize: (s.max_message_size.bytes || 0) / 1048576,\n    status: s.maturity_status === \"stable\" ? \"stable\" : \"preview\",\n    trialDurationHours: s.lifespan_seconds ? s.lifespan_seconds / 60 / 60 : 0,\n    isDisabled: isDisabled(s.id),\n  };\n}\n","import type {\n  EnterpriseDataplaneClustersApi,\n  SupportedKafkaSize,\n} from \"@rhoas/kafka-management-sdk\";\nimport type { DedicatedSizes } from \"ui\";\nimport { apiSizeToComponentSize } from \"../transformers/apiSizeToComponentSize\";\n\nexport type FetchDedicatedClusterSizesParams = {\n  getEnterpriseClusterById: EnterpriseDataplaneClustersApi[\"getEnterpriseClusterById\"];\n  clusterId: string;\n};\n\nexport async function fetchDedicatedClusterSizes({\n  getEnterpriseClusterById,\n  clusterId,\n}: FetchDedicatedClusterSizesParams): Promise<DedicatedSizes> {\n  const response = await getEnterpriseClusterById(clusterId);\n  const data = response.data as typeof response.data & { [key: string]: any }; // TODO: fix this with the latest SDK version\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n  const supportedInstanceTypes = data.supported_instance_types.instance_types;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n  const sizes: DedicatedSizes = supportedInstanceTypes\n    .flatMap((i: { sizes: SupportedKafkaSize[] }) => i.sizes)\n    .map((s: SupportedKafkaSize) => apiSizeToComponentSize(() => false, s));\n  return sizes;\n}\n","import type { DefaultApi, InstantQuery } from \"@rhoas/kafka-management-sdk\";\nimport type { NoUndefinedField } from \"../types\";\n\nexport async function fetchKafkaKpis(\n  getMetricsByInstantQuery: DefaultApi[\"getMetricsByInstantQuery\"],\n  id: string\n) {\n  let topics = 0,\n    topicPartitions = 0,\n    consumerGroups = 0;\n\n  const response = await getMetricsByInstantQuery(id, [\n    \"kafka_topic:kafka_topic_partitions:sum\", // (Number of topic partitions)\n    \"kafka_topic:kafka_topic_partitions:count\", // (Number of topics)\n    \"consumergroup:kafka_consumergroup_members:count\", // (number of consumer groups - note that this metric will appear after a consumer group is created. There should be handled by the UI in a way that the metric isn't visible if no consumer groups are created)\n  ]);\n\n  const safeMetrics: NoUndefinedField<InstantQuery[]> = (response.data.items ||\n    []) as NoUndefinedField<InstantQuery[]>;\n\n  safeMetrics.forEach(({ metric, value }) => {\n    const { __name__: name } = metric;\n\n    switch (name) {\n      case \"kafka_topic:kafka_topic_partitions:sum\":\n        topicPartitions = value;\n        break;\n      case \"kafka_topic:kafka_topic_partitions:count\":\n        topics = value;\n        break;\n      case \"consumergroup:kafka_consumergroup_members:count\":\n        consumerGroups = value;\n        break;\n    }\n  });\n  return {\n    consumerGroups,\n    topicPartitions,\n    topics,\n  };\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { GetKafkaInstanceMetricsResponse, TimeSeriesMetrics } from \"ui\";\nimport type { SafeRangeQuery } from \"../types\";\n\nexport type FetchKafkaMetricsProps = {\n  getMetricsByRangeQuery: DefaultApi[\"getMetricsByRangeQuery\"];\n  id: string;\n  duration: number;\n  interval: number;\n};\n\nexport async function fetchKafkaMetrics({\n  getMetricsByRangeQuery,\n  id,\n  duration,\n  interval,\n}: FetchKafkaMetricsProps): Promise<GetKafkaInstanceMetricsResponse> {\n  const response = await getMetricsByRangeQuery(id, duration, interval, [\n    \"kubelet_volume_stats_used_bytes\",\n    \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\",\n    \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\",\n  ]);\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(\n        m.values &&\n        m.metric &&\n        m.metric.topic &&\n        m.metric.name &&\n        m.metric.persistentvolumeclaim &&\n        m.metric.persistentvolumeclaim.includes(\"zookeeper\")\n      )\n  ) as SafeRangeQuery[];\n\n  const usedDiskSpaceMetrics: TimeSeriesMetrics = {};\n  const connectionAttemptRateMetrics: TimeSeriesMetrics = {};\n  const clientConnectionsMetrics: TimeSeriesMetrics = {};\n\n  const connectionRateLimit = 0,\n    connectionsLimit = 0,\n    diskSpaceLimit = 0;\n\n  safeMetrics.forEach((m) => {\n    const { __name__: name } = m.metric;\n\n    function addAggregatedValuesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    switch (name) {\n      case \"kubelet_volume_stats_used_bytes\":\n        addAggregatedValuesTo(usedDiskSpaceMetrics);\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\":\n        addAggregatedValuesTo(connectionAttemptRateMetrics);\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\":\n        addAggregatedValuesTo(clientConnectionsMetrics);\n        break;\n    }\n  });\n\n  return {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionRateLimit,\n    connectionsLimit,\n  };\n}\n","export function valuesToQuery(\n  field: string,\n  values: string[],\n  comparison: \"%\" | \"=\" | \"<>\",\n  join: \"and\" | \"or\"\n): string | undefined {\n  return values\n    .map((v) =>\n      comparison === \"%\"\n        ? `${field} like %${v.trim()}%`\n        : `${field} ${comparison} ${v.trim()}`\n    )\n    .join(` ${join} `);\n}\n","import type { DefaultApi, KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport type { SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { SimplifiedStatuses } from \"ui-models/src/models/kafka\";\nimport type { KafkaInstanceEnhanced } from \"../transformers/kafkaRequestToKafkaInstanceEnhanched\";\nimport type { KafkaInstancesSortableColumn } from \"../types\";\nimport { valuesToQuery } from \"./valuesToQuery\";\n\nconst uiColumnMapping: {\n  [key in KafkaInstancesSortableColumn]: keyof KafkaRequest;\n} = {\n  name: \"name\",\n  owner: \"owner\",\n  provider: \"cloud_provider\",\n  region: \"region\",\n  createdAt: \"created_at\",\n};\nexport type FetchKafkasParams = {\n  getKafkas: DefaultApi[\"getKafkas\"];\n  dataMapper: (data: KafkaRequest) => Promise<KafkaInstanceEnhanced>;\n  page: number;\n  perPage: number;\n  name: string[];\n  owner: string[];\n  status: SimplifiedStatus[];\n  sort: KafkaInstancesSortableColumn;\n  direction: \"asc\" | \"desc\";\n  clusterIds: string[] | undefined;\n  deployment: \"standard\" | \"clusters\";\n};\n\nexport async function fetchKafkas(params: FetchKafkasParams): Promise<{\n  instances: KafkaInstanceEnhanced[];\n  count: number;\n}> {\n  const {\n    name,\n    status,\n    owner,\n    sort,\n    direction,\n    page,\n    perPage,\n    clusterIds,\n    deployment,\n    dataMapper,\n    getKafkas,\n  } = params;\n  const search = filtersToSearch(name, owner, status, clusterIds, deployment);\n\n  const res = await getKafkas(\n    page.toString(10),\n    perPage.toString(10),\n    sort ? `${uiColumnMapping[sort]} ${direction}` : undefined,\n    search\n  );\n  const rawInstances = res.data.items;\n  const count = res.data.total;\n  const instances = await Promise.all(rawInstances.map(dataMapper));\n  return {\n    instances,\n    count,\n  };\n}\n\nexport function filtersToSearch(\n  name: string[],\n  owner: string[],\n  status: SimplifiedStatus[],\n  clusters: string[] | undefined,\n  deployment: \"standard\" | \"clusters\"\n): string {\n  const querystring = [\n    valuesToQuery(\"name\", name, \"%\", \"or\"),\n    valuesToQuery(\"owner\", owner, \"%\", \"or\"),\n    valuesToQuery(\n      \"status\",\n      status.flatMap((s) => SimplifiedStatuses[s]),\n      \"=\",\n      \"or\"\n    ),\n    clusters\n      ? valuesToQuery(\n          \"cluster_id\",\n          clusters,\n          deployment === \"standard\" ? \"<>\" : \"=\",\n          deployment === \"standard\" ? \"and\" : \"or\"\n        )\n      : null,\n  ]\n    .filter(Boolean)\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    .map((q) => `(${q!})`)\n    .join(\" and \");\n  return querystring;\n}\n","import type { Record, RecordsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport type { DateIsoString } from \"../../../ui-models/src/types\";\n\nexport type FetchMessagesParams = {\n  consumeRecords: RecordsApi[\"consumeRecords\"];\n  topicName: string;\n  partition?: number;\n  offset?: number;\n  timestamp?: DateIsoString;\n  limit: number;\n};\n\nexport async function fetchMessages({\n  topicName,\n  consumeRecords,\n  partition,\n  offset,\n  timestamp,\n  limit,\n}: FetchMessagesParams): Promise<Message[]> {\n  const response = await consumeRecords(\n    topicName,\n    undefined,\n    limit,\n    undefined,\n    offset,\n    partition,\n    timestamp\n  );\n  return response.data.items.map((m: Record) => ({\n    partition: m.partition,\n    offset: m.offset,\n    timestamp: m.timestamp as DateIsoString,\n    key: m.key,\n    value: m.value,\n    headers: m.headers || {},\n  }));\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\n\nexport async function fetchOrganization(\n  api: AppServicesApi[\"apiAccountsMgmtV1CurrentAccountGet\"]\n) {\n  const account = await api();\n  const orgId = account?.data?.organization?.id;\n  return orgId;\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { Plan, Size } from \"ui-models/src/models/kafka\";\nimport { apiSizeToComponentSize } from \"../transformers/apiSizeToComponentSize\";\nimport type { CloudProviderInfoWithRegionsCapacity } from \"./fetchProvidersWithRegions\";\n\nexport type SizeWithLimits = Size & { trialDurationHours: number };\n\nexport async function fetchProviderRegionSizes(\n  api: DefaultApi[\"getInstanceTypesByCloudProviderAndRegion\"],\n  providerInfo: CloudProviderInfoWithRegionsCapacity,\n  region: string,\n  instanceType: Plan\n) {\n  const regions = providerInfo.regions;\n  const regionInfo = regions.find((r) => r.id === region);\n  const availableSizes =\n    regionInfo?.capacity.flatMap((c) =>\n      c.available_sizes.map((s) => `${c.instance_type}.${s}`)\n    ) || [];\n  const sizes = await api(providerInfo.id, region);\n  if (!sizes?.data?.instance_types) {\n    throw new Error(`No instance_types from backend`);\n  }\n\n  const standardSizes =\n    sizes?.data?.instance_types.find((i) => i.id === instanceType)?.sizes || [];\n\n  return standardSizes.map(\n    apiSizeToComponentSize.bind(\n      undefined,\n      (id) => !availableSizes.includes(`${instanceType}.${id}`)\n    )\n  );\n}\n\n//\n// export async function fetchProviderRegionSizesForPlanStandard (\n//   api: DefaultApi['getInstanceTypesByCloudProviderAndRegion'], providerInfo: CloudProviderInfoWithRegionsCapacity, region: string\n// )  {\n//   return fetchProviderRegionSizes(api, providerInfo, region, \"standard\");\n// };\n//\n// export const fetchProviderRegionSizesForPlanDeveloper = (\n//   api: DefaultApi['getInstanceTypesByCloudProviderAndRegion'], providerInfo: CloudProviderInfoWithRegionsCapacity, region: string\n//\n// ) => {\n//   const { data: standardSizes, isError } = await fetchProviderRegionSizes(\n//     provider,\n//     region,\n//     \"standard\"\n//   );\n//   const { data: developerSizes } = fetchProviderRegionSizes(\n//     provider,\n//     region,\n//     \"developer\"\n//   );\n//   return useQuery({\n//     queryKey: [],\n//     queryFn: () => {\n//       return {\n//         standard:\n//           standardSizes ||\n//           ([\n//             { id: \"1\", displayName: \"1\" },\n//             { id: \"2\", displayName: \"2\" },\n//           ] as StandardSizes),\n//         trial: developerSizes![0],\n//       };\n//     },\n//     enabled: (!!standardSizes || isError) && !!developerSizes,\n//   });\n// };\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { CloudProviderInfo } from \"ui\";\nimport type { CloudProvider, Plan } from \"ui-models/src/models/kafka\";\n\nexport type CloudProviderInfoWithRegionsCapacity = Omit<\n  CloudProviderInfo,\n  \"regions\"\n> & {\n  regions: Awaited<ReturnType<typeof fetchProviderRegions>>;\n};\n\nexport async function fetchProvidersWithRegions(\n  getCloudProviders: DefaultApi[\"getCloudProviders\"],\n  getCloudProviderRegions: DefaultApi[\"getCloudProviderRegions\"],\n  plan: Plan\n) {\n  const res = await getCloudProviders();\n  const allProviders = res?.data?.items || [];\n\n  const providers = (\n    await Promise.all(\n      allProviders\n        .filter((p) => p.enabled)\n        .map(async (provider) => {\n          const regions = await fetchProviderRegions(\n            getCloudProviderRegions,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            provider.id!,\n            plan\n          );\n          const providerInfo: CloudProviderInfoWithRegionsCapacity = {\n            id: provider.id as CloudProvider,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            displayName: provider.display_name!,\n            regions,\n          };\n          return regions.length > 0 ? providerInfo : null;\n        })\n    )\n  ).filter((p) => Boolean(p)) as CloudProviderInfoWithRegionsCapacity[];\n  if (providers.length === 0) {\n    throw new Error(\"No cloud providers with capacity found\");\n  }\n  const firstProvider = providers[0];\n  return { providers, defaultProvider: firstProvider?.id };\n}\n\nexport async function fetchProviderRegions(\n  getCloudProviderRegions: DefaultApi[\"getCloudProviderRegions\"],\n  provider: string,\n  instanceType: Plan\n) {\n  const res = await getCloudProviderRegions(provider);\n\n  if (!res?.data?.items) {\n    return Promise.reject(\"Invalid provider\");\n  }\n\n  const regionsForInstance = res.data.items.filter(\n    (region) =>\n      region.enabled &&\n      region.capacity.some((c) => c.instance_type === instanceType)\n  );\n\n  return regionsForInstance.map((r) => {\n    const max_capacity_reached = r.capacity?.some(\n      (c) => c.instance_type === instanceType && c.available_sizes?.length === 0\n    );\n\n    return {\n      id: r.id as CloudProvider,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      displayName: r.display_name!,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      isDisabled: max_capacity_reached,\n      capacity: r.capacity,\n    };\n  });\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport type {\n  MarketPlace,\n  MarketPlaceSubscriptions,\n} from \"ui-models/src/models/kafka\";\nimport {\n  developerId,\n  isMarketplaceQuota,\n  isStandardQuota,\n  resourceName,\n  standardId,\n} from \"../utilsAndConstants\";\n\nexport type StandardQuota = {\n  hasTrialQuota: boolean;\n  remainingPrepaidQuota: number | undefined;\n  remainingMarketplaceQuota: number | undefined;\n  marketplaceSubscriptions: MarketPlaceSubscriptions[];\n};\nexport const fetchStandardQuota = async (\n  api: AppServicesApi[\"apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet\"],\n  organizationId: string\n) => {\n  const quotaResponse = await api(\n    organizationId,\n    undefined,\n    true,\n    undefined,\n    true\n  );\n  if (quotaResponse.status !== 200) {\n    throw new Error(quotaResponse.statusText);\n  }\n  const standardQuotas = quotaResponse.data.items?.filter((q) =>\n    q.related_resources?.find(\n      (r) => r.resource_name === resourceName && r.product === standardId\n    )\n  );\n\n  const prepaidQuota = standardQuotas?.find(isStandardQuota);\n  const hasStandardQuota = prepaidQuota !== undefined;\n\n  const marketplaceQuotas = standardQuotas?.some(isMarketplaceQuota)\n    ? standardQuotas?.filter(isMarketplaceQuota)\n    : undefined;\n\n  const hasTrialQuota =\n    (prepaidQuota === undefined &&\n      marketplaceQuotas === undefined &&\n      quotaResponse.data.items?.some((q) =>\n        q.related_resources?.find(\n          (r) => r.resource_name === resourceName && r.product === developerId\n        )\n      )) ||\n    false;\n\n  const remainingPrepaidQuota = prepaidQuota\n    ? prepaidQuota.allowed - prepaidQuota.consumed\n    : undefined;\n  const remainingMarketplaceQuota = marketplaceQuotas\n    ? marketplaceQuotas.reduce((agg, q) => q.allowed - q.consumed + agg, 0)\n    : undefined;\n  const unaggregatedSubscriptions = marketplaceQuotas\n    ?.filter((q) => q.cloud_accounts !== undefined)\n    .flatMap((q) => q.cloud_accounts || []);\n  const subscriptionMarketplaces = Array.from(\n    new Set(\n      unaggregatedSubscriptions?.map((s) => s.cloud_provider_id as MarketPlace)\n    )\n  );\n  const marketplaceSubscriptions: MarketPlaceSubscriptions[] =\n    unaggregatedSubscriptions\n      ? subscriptionMarketplaces.map((marketplace) => ({\n          marketplace,\n          subscriptions: unaggregatedSubscriptions\n            .filter((s) => s.cloud_provider_id === marketplace)\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            .map((s) => s.cloud_account_id!),\n        }))\n      : [];\n\n  return {\n    hasStandardQuota,\n    hasTrialQuota,\n    remainingPrepaidQuota,\n    remainingMarketplaceQuota,\n    marketplaceSubscriptions,\n  };\n};\n","import type { TopicsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { topicTransformerFactory } from \"../transformers/topicTransformer\";\n\nexport type FetchTopicParams = {\n  getTopic: TopicsApi[\"getTopic\"];\n  topicName: string;\n  plan: Plan;\n};\n\nexport async function fetchTopic({\n  getTopic,\n  topicName,\n  plan,\n}: FetchTopicParams): Promise<Topic> {\n  const response = await getTopic(topicName);\n  return topicTransformerFactory(plan)(response.data);\n}\n","import type { SortDirection, TopicsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { topicTransformerFactory } from \"../transformers/topicTransformer\";\nimport type { KafkaTopicsSortableColumn } from \"../types\";\n\nexport type FetchTopicsParams = {\n  getTopics: TopicsApi[\"getTopics\"];\n  page?: number;\n  perPage?: number;\n  sort?: KafkaTopicsSortableColumn;\n  direction?: SortDirection;\n  filter?: string;\n  plan: Plan;\n};\n\nexport async function fetchTopics({\n  getTopics,\n  page,\n  perPage,\n  filter,\n  sort,\n  direction,\n  plan,\n}: FetchTopicsParams): Promise<{ topics: Topic[]; count: number }> {\n  const response = await getTopics(\n    undefined,\n    undefined,\n    perPage,\n    filter,\n    page,\n    direction,\n    sort\n  );\n  const topics = (response.data.items || []).map<Topic>(\n    topicTransformerFactory(plan)\n  );\n  const count = response.data.total;\n  return { count, topics };\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"ui\";\nimport type { SafeRangeQuery } from \"../types\";\n\nexport type FetchTopicsMetricsProps = {\n  getMetricsByRangeQuery: DefaultApi[\"getMetricsByRangeQuery\"];\n  id: string;\n  duration: number;\n  interval: number;\n  selectedTopic: string | undefined;\n};\n\nexport async function fetchTopicsMetrics({\n  getMetricsByRangeQuery,\n  id,\n  duration,\n  interval,\n  selectedTopic,\n}: FetchTopicsMetricsProps): Promise<\n  Omit<GetTopicsMetricsResponse, \"kafkaTopics\">\n> {\n  const response = await getMetricsByRangeQuery(id, duration, interval, [\n    \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\",\n    \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\",\n    \"kafka_topic:kafka_log_log_size:sum\",\n    \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\",\n  ]);\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(m.values && m.metric && m.metric.topic && m.metric.name)\n  ) as SafeRangeQuery[];\n\n  // Also filter for metrics about the selectedTopic, if specified\n  const filteredMetrics = safeMetrics.filter((m) =>\n    // filter for metrics for the selectedTopic, if needed\n    selectedTopic !== undefined ? m.metric?.topic === selectedTopic : true\n  );\n\n  // get the unique topics we have metrics for in the selected time range\n  const topics = Array.from(new Set(safeMetrics.map((m) => m.metric.topic)));\n\n  const bytesIncoming: TimeSeriesMetrics = {};\n  const bytesOutgoing: TimeSeriesMetrics = {};\n  const bytesPerPartition: PartitionBytesMetric = {};\n  const incomingMessageRate: TimeSeriesMetrics = {};\n\n  filteredMetrics.forEach((m) => {\n    const { __name__: name, topic } = m.metric;\n\n    function addAggregatedTotalBytesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    function addAggregatePartitionBytes() {\n      const partition = bytesPerPartition[topic] || {};\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (partition[timestamp] = value + (partition[timestamp] || 0))\n      );\n      bytesPerPartition[topic] = partition;\n    }\n\n    switch (name) {\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesIncoming);\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesOutgoing);\n        break;\n      case \"kafka_topic:kafka_log_log_size:sum\":\n        addAggregatePartitionBytes();\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\":\n        addAggregatedTotalBytesTo(incomingMessageRate);\n        break;\n    }\n  });\n\n  return {\n    metricsTopics: topics,\n    bytesOutgoing,\n    bytesIncoming,\n    bytesPerPartition,\n    incomingMessageRate,\n  };\n}\n","import type {\n  Principal,\n  PrincipalApi,\n} from \"@redhat-cloud-services/rbac-client\";\nimport type { UserAccount } from \"ui-models/src/models/user-account\";\n\nexport type FetchUserAccountsParams = {\n  getUserAccounts: PrincipalApi[\"listPrincipals\"];\n};\n\nexport async function fetchUserAccounts({\n  getUserAccounts,\n}: FetchUserAccountsParams): Promise<{\n  accounts: UserAccount[];\n  count: number;\n}> {\n  const response = await getUserAccounts(-1);\n  const accounts = response.data.data.map<UserAccount>((p) => {\n    const fullObject = p as Principal;\n    return {\n      username: fullObject.username,\n      displayName: `${fullObject.first_name || \"\"} ${\n        fullObject.last_name || \"\"\n      }`.trim(),\n      email: fullObject.email,\n      isOrgAdmin: fullObject.is_org_admin || false,\n    };\n  });\n  const count = accounts.length;\n  return { count, accounts };\n}\n","import type { AclsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Permissions } from \"../../../ui\";\n\nexport type FetchPermissionsParams = {\n  getAcls: AclsApi[\"getAcls\"];\n  page?: number;\n  perPage?: number;\n};\n\nexport async function fetchPermissions({\n  getAcls,\n  page,\n  perPage,\n}: FetchPermissionsParams): Promise<{\n  groups: Permissions[];\n  count: number;\n}> {\n  const response = await getAcls(\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    page,\n    perPage\n  );\n  const groups = (response.data.items || []).map<Permissions>((t) => ({\n    account: t.principal || \"\",\n    permission: { permission: t.permission, operation: t.operation },\n    resource: {\n      resourceName: t.resourceName,\n      patternType: t.patternType,\n      resourceType: t.resourceType,\n    },\n  }));\n  const count = response.data.total;\n  return { count, groups };\n}\n","import type { SecurityApi } from \"@rhoas/kafka-management-sdk\";\nimport type { Account } from \"ui\";\nimport { PrincipalType } from \"ui\";\n\nexport type FetchServiceAccountsParams = {\n  getServiceAccounts: SecurityApi[\"getServiceAccounts\"];\n};\n\nexport async function fetchServiceAccounts({\n  getServiceAccounts,\n}: FetchServiceAccountsParams): Promise<{\n  serviceAccounts: Account[];\n}> {\n  const response = await getServiceAccounts();\n  const data = response.data.items;\n  const serviceAccounts: Account[] = data.map((t) => {\n    return {\n      principalType: PrincipalType.ServiceAccount,\n      id: t.id || \"\",\n      displayName: t.name || \"\",\n    };\n  });\n  return { serviceAccounts };\n}\n","import type {\n  FetchConsumerGroupParams,\n  FetchConsumerGroupsParams,\n  FetchDedicatedClusterSizesParams,\n  FetchKafkaMetricsProps,\n  FetchKafkasParams,\n  FetchMessagesParams,\n  FetchPermissionsParams,\n  FetchServiceAccountsParams,\n  FetchTopicParams,\n  FetchTopicsMetricsProps,\n  FetchTopicsParams,\n  FetchUserAccountsParams,\n} from \"./fetchers\";\n\nexport const masQueries = {\n  _root: () => ({ scope: \"mas\" } as const),\n  organization: () =>\n    [{ ...masQueries._root(), entity: \"organization\" }] as const,\n  userAccounts: (params: Omit<FetchUserAccountsParams, \"getUserAccounts\">) =>\n    [{ ...masQueries._root(), entity: \"userAccounts\" }, params] as const,\n\n  quota: {\n    _root: () => ({ ...masQueries._root(), entity: \"quota\" } as const),\n    standardAvailable: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"standardAvailable\" },\n      ] as const,\n    dedicatedAvailable: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"dedicatedAvailable\" },\n      ] as const,\n    developerAvailability: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"developerAvailability\" },\n      ] as const,\n    standardAvailability: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"standardAvailability\" },\n      ] as const,\n  },\n} as const;\n\nexport const dedicatedQueries = {\n  _root: () => ({ ...masQueries._root(), entity: \"dedicated\" } as const),\n  clusters: () =>\n    [{ ...dedicatedQueries._root(), subentity: \"clusters\" }] as const,\n  clusterSizes: (\n    params: Omit<FetchDedicatedClusterSizesParams, \"getEnterpriseClusterById\">\n  ) =>\n    [\n      { ...dedicatedQueries._root(), subentity: \"clusterSize\" },\n      params,\n    ] as const,\n};\n\nexport const kafkaQueries = {\n  _root: () => ({ scope: \"kafka\" } as const),\n  list: (params: Omit<FetchKafkasParams, \"dataMapper\" | \"getKafkas\">) =>\n    [\n      {\n        ...kafkaQueries._root(),\n        entity: \"list\",\n      },\n      params,\n    ] as const,\n  instance: {\n    _root: ({ id, adminUrl }: { id?: string; adminUrl?: string }) =>\n      ({ ...kafkaQueries._root(), entity: \"instance\", id, adminUrl } as const),\n    details: (params: { id?: string }) =>\n      [\n        { ...kafkaQueries.instance._root(params), subentity: \"details\" },\n      ] as const,\n    topics: ({\n      id,\n      adminUrl,\n      ...params\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchTopicsParams,\n      \"getTopics\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topics\",\n        },\n        params,\n      ] as const,\n    topic: ({\n      id,\n      adminUrl,\n      topicName,\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchTopicParams,\n      \"getTopic\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topic\",\n        },\n        { topicName },\n      ] as const,\n    topicMessages: ({\n      id,\n      adminUrl,\n      topicName,\n      ...params\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchMessagesParams,\n      \"consumeRecords\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topicMessages\",\n        },\n        { topicName, ...params },\n      ] as const,\n    consumerGroups: (\n      params: { id?: string; adminUrl?: string } & Omit<\n        FetchConsumerGroupsParams,\n        \"getConsumerGroups\"\n      >\n    ) =>\n      [\n        {\n          ...kafkaQueries.instance._root(params),\n          subentity: \"consumer-groups\",\n        },\n        params,\n      ] as const,\n    consumerGroup: ({\n      id,\n      adminUrl,\n      consumerGroupId,\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchConsumerGroupParams,\n      \"getConsumerGroupById\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"consumerGroup\",\n        },\n        { consumerGroupId },] as const,\n    serviceAccounts: (\n      params: Omit<FetchServiceAccountsParams, \"getServiceAccounts\">\n    ) =>\n      [{ ...masQueries._root(), entity: \"serviceAccounts\" }, params] as const,\n    permissions: (\n      params: { id?: string; adminUrl?: string } & Omit<\n        FetchPermissionsParams,\n        \"getAcls\"\n      >\n    ) =>\n      [\n        {\n          ...kafkaQueries.instance._root(params),\n          subentity: \"acls\",\n        },\n        params,\n      ] as const,\n    metrics: {\n      _root: ({ id }: { id: string }) =>\n        ({\n          ...kafkaQueries.instance._root({ id }),\n          subentity: \"metrics\",\n          id,\n        } as const),\n      kpi: (params: { id: string }) =>\n        [{ ...kafkaQueries.instance._root(params), type: \"kpi\" }] as const,\n      instance: ({\n        id,\n        ...params\n      }: Omit<FetchKafkaMetricsProps, \"getMetricsByRangeQuery\">) =>\n        [\n          {\n            ...kafkaQueries.instance._root({ id }),\n            type: \"instance\",\n          },\n          params,\n        ] as const,\n      topic: ({\n        id,\n        ...params\n      }: Omit<FetchTopicsMetricsProps, \"getMetricsByRangeQuery\">) =>\n        [\n          {\n            ...kafkaQueries.instance._root({ id }),\n            type: \"topic\",\n          },\n          params,\n        ] as const,\n    },\n  },\n} as const;\n\nexport const providerQueries = {\n  _root: () => ({ scope: \"providers\" }),\n  list: (params: { plan?: string }) =>\n    [{ ...providerQueries._root(), entity: \"list\", ...params }] as const,\n  limits: {\n    _root: ({ provider }: { provider?: string }) =>\n      ({\n        ...providerQueries._root(),\n        entity: \"limits\",\n        provider,\n      } as const),\n    standard: ({ provider, region }: { provider?: string; region: string }) => [\n      {\n        ...providerQueries.limits._root({ provider }),\n        plan: \"standard\",\n        region,\n      },\n    ],\n    developer: ({\n      provider,\n      region,\n    }: {\n      provider?: string;\n      region: string;\n    }) => [\n      {\n        ...providerQueries.limits._root({ provider }),\n        plan: \"developer\",\n        region,\n      },\n    ],\n  },\n} as const;\n","import type { Topic as ApiTopic } from \"@rhoas/kafka-instance-sdk\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type {\n  TopicConfig,\n  TopicConfigField,\n} from \"ui-models/src/models/topic-config\";\nimport type { Bytes, Milliseconds } from \"ui-models/src/types\";\nimport type { TopicSettings } from \"@rhoas/kafka-instance-sdk\";\n\nexport type UserEditable = Pick<\n  TopicConfig,\n  \"retention.ms\" | \"retention.bytes\" | \"cleanup.policy\"\n>;\n\nexport const developerDefaults: TopicConfig = {\n  \"cleanup.policy\": \"delete\",\n  \"delete.retention.ms\": { type: \"ms\", value: BigInt(\"86400000\") },\n  \"max.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"max.message.bytes\": { type: \"bytes\", value: BigInt(\"1048588\") },\n  \"message.downconversion.enable\": true,\n  \"message.timestamp.difference.max.ms\": {\n    type: \"ms\",\n    value: BigInt(\"9223372036854775807\"),\n  },\n  \"message.timestamp.type\": \"CreateTime\",\n  \"min.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"retention.bytes\": { type: \"bytes\", value: BigInt(\"-1\") },\n  \"retention.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"segment.bytes\": { type: \"bytes\", value: BigInt(\"1073741824\") },\n  \"segment.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"compression.type\": \"producer\",\n  \"file.delete.delay.ms\": { type: \"ms\", value: BigInt(\"60000\") },\n  \"flush.messages\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"flush.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"index.interval.bytes\": { type: \"bytes\", value: BigInt(\"4096\") },\n  \"message.format.version\": \"3.0-IV1\",\n  \"min.cleanable.dirty.ratio\": 0.5,\n  \"min.insync.replicas\": 1,\n  \"segment.index.bytes\": { type: \"bytes\", value: BigInt(\"10485760\") },\n  \"segment.jitter.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"unclean.leader.election.enable\": false,\n  preallocate: false,\n} as const;\n\nexport const standardDefaults: TopicConfig = {\n  \"cleanup.policy\": \"delete\",\n  \"delete.retention.ms\": { type: \"ms\", value: BigInt(\"86400000\") },\n  \"max.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"max.message.bytes\": { type: \"bytes\", value: BigInt(\"1048588\") },\n  \"message.downconversion.enable\": true,\n  \"message.timestamp.difference.max.ms\": {\n    type: \"ms\",\n    value: BigInt(\"9223372036854775807\"),\n  },\n  \"message.timestamp.type\": \"CreateTime\",\n  \"min.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"retention.bytes\": { type: \"bytes\", value: BigInt(\"-1\") },\n  \"retention.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"segment.bytes\": { type: \"bytes\", value: BigInt(\"1073741824\") },\n  \"segment.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"compression.type\": \"producer\",\n  \"file.delete.delay.ms\": { type: \"ms\", value: BigInt(\"60000\") },\n  \"flush.messages\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"flush.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"index.interval.bytes\": { type: \"bytes\", value: BigInt(\"4096\") },\n  \"message.format.version\": \"3.0-IV1\",\n  \"min.cleanable.dirty.ratio\": 0.5,\n  \"min.insync.replicas\": 2,\n  \"segment.index.bytes\": { type: \"bytes\", value: BigInt(\"10485760\") },\n  \"segment.jitter.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"unclean.leader.election.enable\": false,\n  preallocate: false,\n} as const;\n\nexport function topicTransformerFactory(plan: Plan) {\n  const d = plan === \"developer\" ? developerDefaults : standardDefaults;\n\n  return function topicTransformer(t: ApiTopic): Topic {\n    if (!t.name) {\n      throw new Error(`Invalid topic, name is empty: ${JSON.stringify(t)}`);\n    }\n    const cm = Object.fromEntries<string>(\n      t.config?.map((c) => [c.key as TopicConfigField, c.value]) || []\n    );\n    const config: TopicConfig = {\n      \"cleanup.policy\": cm[\"cleanup.policy\"] as TopicConfig[\"cleanup.policy\"],\n      \"delete.retention.ms\": configValueToMilliseconds(\n        cm[\"delete.retention.ms\"],\n        d[\"delete.retention.ms\"]\n      ),\n      \"max.compaction.lag.ms\": configValueToMilliseconds(\n        cm[\"max.compaction.lag.ms\"],\n        d[\"max.compaction.lag.ms\"]\n      ),\n      \"max.message.bytes\": configValueToBytes(\n        cm[\"max.message.bytes\"],\n        d[\"max.message.bytes\"]\n      ),\n      \"message.downconversion.enable\": configValueToBoolean(\n        cm[\"message.downconversion.enable\"],\n        d[\"message.downconversion.enable\"]\n      ),\n      \"message.timestamp.difference.max.ms\": configValueToMilliseconds(\n        cm[\"message.timestamp.difference.max.ms\"],\n        d[\"message.timestamp.difference.max.ms\"]\n      ),\n      \"message.timestamp.type\": cm[\n        \"message.timestamp.type\"\n      ] as TopicConfig[\"message.timestamp.type\"],\n      \"min.compaction.lag.ms\": configValueToMilliseconds(\n        cm[\"min.compaction.lag.ms\"],\n        d[\"min.compaction.lag.ms\"]\n      ),\n      \"retention.bytes\": configValueToBytes(\n        cm[\"retention.bytes\"],\n        d[\"retention.bytes\"]\n      ),\n      \"retention.ms\": configValueToMilliseconds(\n        cm[\"retention.ms\"],\n        d[\"retention.ms\"]\n      ),\n      \"segment.bytes\": configValueToBytes(\n        cm[\"segment.bytes\"],\n        d[\"segment.bytes\"]\n      ),\n      \"segment.ms\": configValueToMilliseconds(\n        cm[\"segment.ms\"],\n        d[\"segment.ms\"]\n      ),\n      \"compression.type\": cm[\n        \"compression.type\"\n      ] as TopicConfig[\"compression.type\"],\n      \"file.delete.delay.ms\": configValueToMilliseconds(\n        cm[\"file.delete.delay.ms\"],\n        d[\"file.delete.delay.ms\"]\n      ),\n      \"flush.messages\": configValueToMilliseconds(\n        cm[\"flush.messages\"],\n        d[\"flush.messages\"]\n      ),\n      \"flush.ms\": configValueToMilliseconds(cm[\"flush.ms\"], d[\"flush.ms\"]),\n      \"follower.replication.throttled.replicas\":\n        cm[\"follower.replication.throttled.replicas\"],\n      \"index.interval.bytes\": configValueToBytes(\n        cm[\"index.interval.bytes\"],\n        d[\"index.interval.bytes\"]\n      ),\n      \"leader.replication.throttled.replicas\":\n        cm[\"leader.replication.throttled.replicas\"],\n      \"message.format.version\": cm[\"message.format.version\"],\n      \"min.cleanable.dirty.ratio\": configValueToNumber(\n        cm[\"min.cleanable.dirty.ratio\"],\n        d[\"min.cleanable.dirty.ratio\"]\n      ),\n      \"min.insync.replicas\": configValueToNumber(\n        cm[\"min.insync.replicas\"],\n        d[\"min.insync.replicas\"]\n      ),\n      \"segment.index.bytes\": configValueToBytes(\n        cm[\"segment.index.bytes\"],\n        d[\"segment.index.bytes\"]\n      ),\n      \"segment.jitter.ms\": configValueToMilliseconds(\n        cm[\"segment.jitter.ms\"],\n        d[\"segment.jitter.ms\"]\n      ),\n      \"unclean.leader.election.enable\": configValueToBoolean(\n        cm[\"unclean.leader.election.enable\"],\n        d[\"unclean.leader.election.enable\"]\n      ),\n      preallocate: configValueToBoolean(cm[\"preallocate\"], d[\"preallocate\"]),\n    };\n    return {\n      name: t.name,\n      partitions: t.partitions || [],\n      ...config,\n    };\n  };\n}\n\nfunction configValueToMilliseconds(\n  value: string,\n  defaultIfEmpty: Milliseconds\n): Milliseconds {\n  return value && value.trim().length > 0\n    ? { type: \"ms\", value: BigInt(value.trim()) }\n    : defaultIfEmpty;\n}\n\nfunction configValueToBytes(value: string, defaultIfEmpty: Bytes): Bytes {\n  return value && value.trim().length > 0\n    ? { type: \"bytes\", value: BigInt(value.trim()) }\n    : defaultIfEmpty;\n}\n\nfunction configValueToNumber(value: string, defaultIfError: number): number {\n  return parseInt(value, 10) || defaultIfError;\n}\n\nfunction configValueToBoolean(value: string, defaultIfError: boolean): boolean {\n  try {\n    const v: unknown = JSON.parse(value);\n    if (typeof v === \"boolean\") {\n      return v;\n    }\n  } catch {\n    // not a boolean, fallback to the default\n  }\n  return defaultIfError;\n}\n\nexport const convertToKeyValuePairs = (inputObj: UserEditable) => {\n  const keyValuePairs: Array<{ key: string; value: string }> = [];\n  if (inputObj[\"retention.ms\"]) {\n    keyValuePairs.push({\n      key: \"retention.ms\",\n      value: inputObj[\"retention.ms\"].value.toString(),\n    });\n  }\n\n  if (inputObj[\"retention.bytes\"]) {\n    keyValuePairs.push({\n      key: \"retention.bytes\",\n      value: inputObj[\"retention.bytes\"].value.toString(),\n    });\n  }\n\n  if (inputObj[\"cleanup.policy\"]) {\n    keyValuePairs.push({\n      key: \"cleanup.policy\",\n      value: inputObj[\"cleanup.policy\"],\n    });\n  }\n\n  return keyValuePairs;\n};\n\nexport const convertToTopicSettings = (topic: Topic): TopicSettings => {\n  const { partitions, ...config } = topic;\n  const configEntries = convertToKeyValuePairs(config);\n  const topicSettings: TopicSettings = {\n    numPartitions: partitions.length,\n    config: configEntries,\n  };\n  return topicSettings;\n};\n","import { PrincipalApi } from \"@redhat-cloud-services/rbac-client\";\nimport { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport {\n  Configuration,\n  DefaultApi,\n  SecurityApi,\n  EnterpriseDataplaneClustersApi\n} from \"@rhoas/kafka-management-sdk\";\nimport {\n  GroupsApi,\n  RecordsApi,\n  TopicsApi,\n  AclsApi,\n} from \"@rhoas/kafka-instance-sdk\";\nimport { useCallback } from \"react\";\nimport { useApiConfiguration } from \"./ApiProvider\";\n\nexport const useApi = () => {\n  const { basePath, accessToken } = useApiConfiguration();\n\n  const kafkasFleet = useCallback(\n    () =>\n      new DefaultApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const userAccounts = useCallback(async () => {\n    const token = await accessToken();\n    return new PrincipalApi({\n      accessToken: token,\n      basePath: `/api/rbac/v1`,\n    });\n  }, [accessToken]);\n\n  const serviceAccount = useCallback(\n    () =>\n      new SecurityApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const account = useCallback(\n    () =>\n      new AppServicesApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const topics = useCallback(\n    (adminUrl: string) =>\n      new TopicsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const consumerGroups = useCallback(\n    (adminUrl: string) =>\n      new GroupsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const acls = useCallback(\n    (adminUrl: string) =>\n      new AclsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const records = useCallback(\n    (adminUrl: string) =>\n      new RecordsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const dedicatedClusters = useCallback(\n    () =>\n      new EnterpriseDataplaneClustersApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  return {\n    kafkasFleet,\n    account,\n    topics,\n    consumerGroups,\n    records,\n    userAccounts,\n    acls,\n    serviceAccount,\n    dedicatedClusters,\n  };\n};\n","const REACT_QUERY_DEVTOOLS = \"mas.devtools\";\nconst METRICS_LAG_ALERT = \"mas.rhosak.metrics.lag-alert-closed\";\n\nexport function isReactQueryDevToolsEanbled() {\n  return localStorage.getItem(REACT_QUERY_DEVTOOLS) === \"true\";\n}\n\nexport function metricsIsLagAlertsDismissed() {\n  return localStorage.getItem(METRICS_LAG_ALERT) === \"true\";\n}\n\nexport function metricsDismissLagAlerts() {\n  return localStorage.setItem(METRICS_LAG_ALERT, \"true\");\n}\n","import type { Bytes, DateIsoString } from \"../types\";\n\n/**\n * All the details abut a Kafka instance.\n *\n * Unless differently specified, the values marked as accepting `undefined`\n * will come from extra API calls.\n */\nexport type Kafka = {\n  id: string;\n  name: string;\n  createdAt: DateIsoString;\n  updatedAt: DateIsoString;\n  expiryDate: DateIsoString | undefined;\n  owner: string;\n  provider: CloudProvider;\n  region: CloudRegion;\n  status: Status;\n  plan: Plan;\n  size: string | undefined;\n  ingress: number | undefined;\n  egress: number | undefined;\n  storage: Bytes | undefined;\n  maxPartitions: number | undefined;\n  connections: number | undefined;\n  connectionRate: number | undefined;\n  messageSize: Bytes | undefined;\n  az: AZ;\n  billing: \"prepaid\" | MarketplaceSubscription | \"dedicated\" | undefined;\n  clusterId: string | undefined;\n  version: string;\n  bootstrapUrl: string | undefined;\n  adminUrl: string | undefined;\n};\nexport type KafkaField = keyof Kafka;\n\n/**\n * Supported Cloud Providers. Extend this to add a new provider, then follow\n * Typescript errors to find where extra information need to be added (images,\n * translations).\n */\nexport type CloudProvider = \"aws\" | \"gcp\" | \"azure\";\n\n/**\n * A Cloud Region. Since this varies between Cloud Providers and has no extra\n * visual attached, we take its name from the API and do no further\n * transformation.\n */\nexport type CloudRegion = string;\n/**\n * Cloud provider multi availability zone\n */\nexport type AZ = \"single\" | \"multi\";\n/**\n * A number that describes how much does an instance cost to create\n */\nexport type Quota = number;\n/**\n * The capabilities of an instance, and its quota cost. Some sizes might not be\n * enabled, eg. because temporarily out of capacity\n */\nexport type Size = {\n  id: string;\n  displayName: string;\n  status: \"stable\" | \"preview\";\n  quota: Quota;\n  ingress: number;\n  egress: number;\n  storage: number;\n  connections: number;\n  connectionRate: number;\n  maxPartitions: number;\n  messageSize: number;\n  isDisabled: boolean;\n};\n/**\n * Paid for instances are `standard`, evaluation instances are `developer`.\n * `standard` instances have a `Quota` associated, and bigger sizes.\n * `developer` instances are free to be created (up to 1 per user), have a\n * single, smaller size option than `standard` ones, and they expire after a\n * few hours.\n *\n * Plan `enterprise` is the equivalent of `standard` instances but for dedicated\n * clusters.\n *\n * Note: a new kind of evaluation instance is being studied. They will have a\n * long expiration period and bigger sizes.\n */\nexport type Plan = \"standard\" | \"developer\" | \"dedicated\";\n/**\n * All the statuses an instance can be. If new statuses are added, ensure to\n * add them to the relevant status group (`ReadyStatuses` etc.).\n */\nexport const Statuses = [\n  \"ready\",\n  \"degraded\",\n  \"accepted\",\n  \"provisioning\",\n  \"preparing\",\n  \"deprovision\",\n  \"deleting\",\n  \"suspended\",\n  \"suspending\",\n  \"resuming\",\n] as const;\n\nexport type Status = (typeof Statuses)[number];\n\nexport const CreatingStatuses: readonly Status[] = [\n  \"accepted\",\n  \"provisioning\",\n  \"preparing\",\n];\nexport const ReadyStatuses: readonly Status[] = [\"ready\"];\nexport const DegradedStatuses: readonly Status[] = [\"degraded\"];\nexport const SuspendingStatuses: readonly Status[] = [\"suspending\"];\nexport const SuspendedStatuses: readonly Status[] = [\"suspended\"];\nexport const DeletingStatuses: readonly Status[] = [\"deleting\", \"deprovision\"];\nexport const ResumingStatuses: readonly Status[] = [\"resuming\"];\n\nexport const SimplifiedStatuses = {\n  creating: CreatingStatuses,\n  ready: ReadyStatuses,\n  degraded: DegradedStatuses,\n  suspended: SuspendedStatuses,\n  deleting: DeletingStatuses,\n  resuming: ResumingStatuses,\n  suspending: SuspendingStatuses,\n} as const;\nexport type SimplifiedStatus = keyof typeof SimplifiedStatuses;\n\n/**\n * A list of marketplaces where an instance can be billed to\n */\nexport type MarketPlace = CloudProvider | \"rhm\";\n/**\n * List of marketplaces where a user has some subscription\n */\nexport type MarketPlaceSubscriptions = {\n  marketplace: MarketPlace;\n  subscriptions: string[];\n};\n/**\n * A specific marketplace's subscription, assigned as billing option to an\n * instance.\n *\n * Note: the API will provide only the `subscription`; the `MarketPlace` will\n * have to be fetched querying for the `subscription`.\n */\nexport type MarketplaceSubscription = {\n  marketplace: MarketPlace;\n  subscription: string;\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { FC } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { OwnerAccount } from \"./types\";\n\nexport type SelectOwnerProps = {\n  isDisabled: boolean;\n  accounts: OwnerAccount[];\n  owner: string | undefined;\n  onChangeOwner: (owner: string | undefined) => void;\n};\n\nexport const SelectOwner: FC<SelectOwnerProps> = ({\n  isDisabled,\n  accounts,\n  owner,\n  onChangeOwner,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isExpanded: boolean) => {\n    setIsOpen(isExpanded);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, owner) => {\n    onChangeOwner(owner as string);\n    setIsOpen(false);\n  };\n\n  function selectOptions(filter = \"\") {\n    const filterRegExp = new RegExp(filter, \"i\");\n    const filteredAccounts =\n      filter !== \"\"\n        ? accounts.filter(\n            (account) =>\n              filterRegExp.test(account.displayName) ||\n              filterRegExp.test(account.id)\n          )\n        : accounts;\n    return filteredAccounts.map((account) => (\n      <SelectOption\n        key={account.id}\n        value={account.id}\n        description={account.displayName}\n      >\n        {account.id}\n      </SelectOption>\n    ));\n  }\n\n  return (\n    <Select\n      id=\"change-permission-owner-select\"\n      variant={SelectVariant.typeahead}\n      onToggle={onToggle}\n      isDisabled={isDisabled}\n      isOpen={isOpen}\n      placeholderText={t(\"select_user_account\")}\n      isCreatable={true}\n      createText={t(\"change_owner_create_text\")}\n      menuAppendTo=\"parent\"\n      maxHeight={400}\n      selections={owner}\n      onSelect={onSelect}\n      onFilter={(_, value) => selectOptions(value)}\n    >\n      {selectOptions()}\n    </Select>\n  );\n};\n","import {\n  Alert,\n  AlertVariant,\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  Skeleton,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { SelectOwner } from \"./SelectOwner\";\nimport type { ChangeOwnerErrorMessage, OwnerAccount } from \"./types\";\n\nexport type ChangeKafkaOwnerProps = {\n  currentOwner: string;\n  accounts: OwnerAccount[] | undefined;\n  savingState: \"idle\" | \"saving\" | ChangeOwnerErrorMessage;\n  onConfirm: (newOwner: string) => void;\n  onCancel: () => void;\n};\n\nexport const ChangeKafkaOwner: FunctionComponent<ChangeKafkaOwnerProps> = ({\n  currentOwner,\n  accounts,\n  savingState,\n  onConfirm,\n  onCancel,\n}) => {\n  const { t } = useTranslation([\"kafka\", \"common\"]);\n  const [account, setAccount] = useState<string | undefined>();\n  const submittedAccount = useRef<string>();\n\n  const isSaving = savingState === \"saving\";\n\n  const onConfirmOwner = useCallback(() => {\n    if (account) {\n      submittedAccount.current = account;\n      onConfirm(account);\n    }\n  }, [onConfirm, account]);\n\n  const renderAlert = () => {\n    switch (savingState) {\n      case \"invalid-user\":\n        return (\n          <Alert\n            variant={AlertVariant.danger}\n            aria-live=\"polite\"\n            isInline\n            title={t(\"new_owner_does_not_exist_title\")}\n          >\n            {t(\"new_owner_does_not_exist_message\", {\n              newOwner: submittedAccount.current,\n            })}\n          </Alert>\n        );\n      case \"unknown-error\":\n        return (\n          <Alert\n            variant={AlertVariant.danger}\n            aria-live=\"polite\"\n            isInline\n            title={t(\"can_not_change_owner_title\")}\n          >\n            {t(\"owner_transfer_failed_message\", {\n              name: currentOwner,\n            })}\n          </Alert>\n        );\n    }\n  };\n  return (\n    <Modal\n      id=\"change-owner-modal\"\n      title={t(\"change-owner-title\")}\n      isOpen={true}\n      onClose={onCancel}\n      variant={\"medium\"}\n      position=\"top\"\n      actions={[\n        <Button\n          id=\"confirm-button\"\n          key=\"changeowner\"\n          variant=\"primary\"\n          isDisabled={isSaving}\n          onClick={onConfirmOwner}\n        >\n          {t(\"change-owner-button\")}\n        </Button>,\n        <Button\n          id=\"cancel-button\"\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={onCancel}\n          isDisabled={isSaving}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={(e) => e?.preventDefault()}>\n        {renderAlert()}\n        <FormGroup fieldId=\"Current-owner-name\" label={t(\"current_owner\")}>\n          {currentOwner}\n        </FormGroup>\n        <FormGroup fieldId=\"New-owner-name\" label={t(\"new_owner\")}>\n          {accounts ? (\n            <SelectOwner\n              isDisabled={isSaving}\n              accounts={accounts}\n              owner={account}\n              onChangeOwner={setAccount}\n            />\n          ) : (\n            <Skeleton width={\"100%\"} />\n          )}\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\n\ntype ConsumerGroupPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ConsumerGroupPopover: FunctionComponent<\n  ConsumerGroupPopoverProps\n> = ({ title, description }) => {\n  return (\n    <Popover\n      aria-label=\"Consumer groups popover\"\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon />\n    </Popover>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type ConsumerGroupStateLabelProps = {\n  state: State;\n};\n\nexport const ConsumerGroupStateLabel: FunctionComponent<\n  ConsumerGroupStateLabelProps\n> = ({ state }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  switch (state) {\n    case \"Stable\":\n      return t(\"consumerGroup.state.stable\");\n    case \"Empty\":\n      return t(\"consumerGroup.state.empty\");\n    case \"Dead\":\n      return t(\"consumerGroup.state.dead\");\n    case \"CompletingRebalance\":\n      return t(\"consumerGroup.state.completing_rebalance\");\n    case \"PreparingRebalance\":\n      return t(\"consumerGroup.state.preparing_rebalance\");\n    case \"Unknown\":\n      return t(\"consumerGroup.state.unknown\");\n    default:\n      return null;\n  }\n};\n","import {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Stack,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupPopover } from \"./ConsumerGroupPopover\";\nimport { ConsumerGroupStateLabel } from \"./ConsumerGroupState\";\n\nexport type ConsumerGroupByKafkaProps = {\n  state: State;\n  consumers: Consumer[];\n  activeMembers: number;\n  partitionsWithLag: number;\n};\n\nexport const ConsumerGroupByKafka: FunctionComponent<\n  ConsumerGroupByKafkaProps\n> = ({ state, consumers, activeMembers, partitionsWithLag }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const columnNames = {\n    topic: t(\"topic.topic\"),\n    partition: t(\"consumerGroup.partition\"),\n    consumer_id: t(\"consumerGroup.consumer_id\"),\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n  };\n\n  return (\n    <Stack hasGutter>\n      <DescriptionList\n        columnModifier={{ lg: \"3Col\" }}\n        className={\"pf-m-display-2xl\"}\n      >\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.active_members\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {activeMembers}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.partitions_with_lag\")}{\" \"}\n            <ConsumerGroupPopover\n              title={t(\"consumerGroup.partitions_with_lag_name\")}\n              description={t(\"consumerGroup.partitions_with_lag_description\")}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {partitionsWithLag}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.state_header\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <ConsumerGroupStateLabel state={state} />\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TableComposable\n        aria-label={t(\"consumerGroup.consumer_group_info_table_aria\")}\n        variant={TableVariant.compact}\n      >\n        <Thead noWrap>\n          <Tr>\n            <Th width={20}>{columnNames.topic}</Th>\n            <Th width={20}>{columnNames.partition}</Th>\n            <Th width={20}>{columnNames.consumer_id}</Th>\n            <Th width={20}>{columnNames.current_offset}</Th>\n            <Th width={20}>{columnNames.log_end_offset}</Th>\n            <Th width={20}>{columnNames.offset_lag}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {consumers.map(\n            ({\n              groupId,\n              partition,\n              topic,\n              memberId,\n              offset,\n              logEndOffset,\n              lag,\n            }) => {\n              return (\n                <Tr key={groupId}>\n                  <Td dataLabel={columnNames.topic}>{topic}</Td>\n                  <Td dataLabel={columnNames.partition}>{partition}</Td>\n                  <Td dataLabel={columnNames.consumer_id}>\n                    {memberId ? (\n                      `${groupId}\\n${memberId}`\n                    ) : (\n                      <i>{t(\"consumerGroup.unassigned\")}</i>\n                    )}\n                  </Td>\n                  <Td dataLabel={columnNames.current_offset}>{offset}</Td>\n                  <Td dataLabel={columnNames.log_end_offset}>{logEndOffset}</Td>\n                  <Td dataLabel={columnNames.offset_lag}>{lag}</Td>\n                </Tr>\n              );\n            }\n          )}\n        </Tbody>\n      </TableComposable>\n    </Stack>\n  );\n};\n","import {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Stack,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupPopover } from \"./ConsumerGroupPopover\";\nimport { ConsumerGroupStateLabel } from \"./ConsumerGroupState\";\n\nexport type ConsumerGroupByTopicProps = {\n  state: State;\n  consumers: Consumer[];\n  activeMembers: number;\n  partitionsWithLag: number;\n};\n\nexport const ConsumerGroupByTopic: FunctionComponent<\n  ConsumerGroupByTopicProps\n> = ({ state, consumers, activeMembers, partitionsWithLag }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const columnNames = {\n    partition: t(\"consumerGroup.partition\"),\n    consumer_id: t(\"consumerGroup.consumer_id\"),\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n  };\n\n  return (\n    <Stack hasGutter>\n      <DescriptionList\n        columnModifier={{ lg: \"3Col\" }}\n        className={\"pf-m-display-2xl\"}\n      >\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.active_members_for_topic\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {activeMembers}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.partitions_with_lag_for_topic\")}{\" \"}\n            <ConsumerGroupPopover\n              title={t(\"consumerGroup.partitions_with_lag_name\")}\n              description={t(\"consumerGroup.partitions_with_lag_description\")}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {partitionsWithLag}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.state_header\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {<ConsumerGroupStateLabel state={state} />}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TableComposable\n        aria-label={t(\"consumerGroup.consumer_group_info_table_aria\")}\n        variant={TableVariant.compact}\n      >\n        <Thead noWrap>\n          <Tr>\n            <Th key={columnNames.partition} width={20}>\n              {columnNames.partition}\n            </Th>\n            <Th key={columnNames.consumer_id} width={20}>\n              {columnNames.consumer_id}\n            </Th>\n            <Th key={columnNames.current_offset} width={20}>\n              {columnNames.current_offset}\n            </Th>\n            <Th key={columnNames.log_end_offset} width={20}>\n              {columnNames.log_end_offset}\n            </Th>\n            <Th key={columnNames.offset_lag} width={20}>\n              {columnNames.offset_lag}\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {consumers.map(\n            ({ groupId, partition, memberId, offset, logEndOffset, lag }) => {\n              return (\n                <Tr key={groupId}>\n                  <Td dataLabel={columnNames.partition}>{partition}</Td>\n                  <Td dataLabel={columnNames.consumer_id}>\n                    {memberId ? (\n                      `${groupId}\\n${memberId}`\n                    ) : (\n                      <i>{t(\"consumerGroup.unassigned\")}</i>\n                    )}{\" \"}\n                  </Td>\n                  <Td dataLabel={columnNames.current_offset}>{offset}</Td>\n                  <Td dataLabel={columnNames.log_end_offset}>{logEndOffset}</Td>\n                  <Td dataLabel={columnNames.offset_lag}>{lag}</Td>\n                </Tr>\n              );\n            }\n          )}\n        </Tbody>\n      </TableComposable>\n    </Stack>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupByKafka } from \"./ConsumerGroupByKafka\";\nimport { ConsumerGroupByTopic } from \"./ConsumerGroupByTopic\";\n\nexport type ConsumerGroupDetailsProps = {\n  consumerGroupByTopic: boolean;\n  state: State;\n  activeMembers: number;\n  partitionsWithLag: number;\n  consumers: Consumer[];\n};\n\nexport const ConsumerGroupDetails: FunctionComponent<\n  ConsumerGroupDetailsProps\n> = ({\n  consumerGroupByTopic,\n  state,\n  consumers,\n  activeMembers,\n  partitionsWithLag,\n}) => {\n  return (\n    <div>\n      {consumerGroupByTopic ? (\n        <ConsumerGroupByTopic\n          state={state}\n          consumers={consumers}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n        />\n      ) : (\n        <ConsumerGroupByKafka\n          state={state}\n          consumers={consumers}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n        />\n      )}\n    </div>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ConsumerGroupEmptyState: FunctionComponent = () => {\n  const { t } = useTranslation([\"kafka\"]);\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel={\"h1\"} size={TitleSizes.lg}>\n        {t(\"consumerGroup.empty_consumer_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"consumerGroup.empty_consumer_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { OffsetValue } from \"../types\";\n\nexport type OffsetSelectProps = {\n  value: OffsetValue;\n  onChange: (value: OffsetValue) => void;\n};\n\nexport const OffsetSelect: FunctionComponent<OffsetSelectProps> = ({\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const offsetValueOption: { [key in OffsetValue]: string } = {\n    absolute: t(\"consumerGroup.offset.absolute\"),\n    latest: t(\"consumerGroup.offset.latest\"),\n    earliest: t(\"consumerGroup.offset.earliest\"),\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChange(selection as OffsetValue);\n    setIsOpen(false);\n  };\n\n  const makeOptions = () => {\n    return Object.entries(offsetValueOption).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <Select\n      aira-label={t(\"consumerGroup.reset_offset_new_offset_label\")}\n      toggleAriaLabel={t(\"consumerGroup.reset_offset_new_offset_label\")}\n      id={\"offset-select\"}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      variant={SelectVariant.single}\n      isOpen={isOpen}\n      placeholderText={t(\"consumerGroup.select_offset\")}\n      selections={value}\n      menuAppendTo={\"parent\"}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type TopicSelectProps = {\n  value: string;\n  topics: string[];\n  onChange: (topic: string) => void;\n};\n\nexport const TopicSelect: FunctionComponent<TopicSelectProps> = ({\n  topics,\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, topic) => {\n    onChange(topic as string);\n    setIsOpen(false);\n  };\n\n  return (\n    <Select\n      aira-label={t(\"consumerGroup.reset_offset_topic_label\")}\n      toggleAriaLabel={t(\"consumerGroup.reset_offset_topic_label\")}\n      id={\"topic-select\"}\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      selections={value}\n      placeholderText={t(\"consumerGroup.select_topic\")}\n      menuAppendTo={\"parent\"}\n      isDisabled={topics.length <= 0}\n    >\n      {topics.map((topic, index) => (\n        <SelectOption key={index} value={topic}>\n          {topic}\n        </SelectOption>\n      ))}\n    </Select>\n  );\n};\n","import {\n  Alert,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n  TextInput,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport { useCallback, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer } from \"ui-models/src/models/consumer-group\";\nimport \"../ConsumerGroup.css\";\nimport type { OffsetValue } from \"../types\";\nimport { OffsetSelect } from \"./OffsetSelect\";\nimport { TopicSelect } from \"./TopicSelect\";\nimport type { FunctionComponent } from \"react\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type ConsumerGroupResetOffsetProps = {\n  isModalOpen: boolean;\n  state: State;\n  groupId: string;\n  topics: string[];\n  consumers: Consumer[];\n  onClickClose: () => void;\n  onClickResetOffset: (\n    topic: string,\n    offset: OffsetValue,\n    partitions: number[],\n    customOffset: string\n  ) => void;\n  disableFocusTrap?: boolean;\n  appendTo?: () => HTMLElement;\n};\n\nexport const ConsumerGroupResetOffset: FunctionComponent<\n  ConsumerGroupResetOffsetProps\n> = ({\n  groupId,\n  topics,\n  onClickClose,\n  isModalOpen,\n  onClickResetOffset,\n  disableFocusTrap,\n  appendTo,\n  consumers,\n  state,\n}) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const [selectedTopic, setSelectedTopic] = useState<string>(\"\");\n  const [selectedOffset, setSelectedOffset] = useState<OffsetValue>(\"absolute\");\n  const [customOffsetValue, setcustomOffsetValue] = useState<string>();\n\n  const [isResetAccepted, setIsResetAccepted] = useState<boolean>(false);\n\n  const [selectedConsumer, setSelectedConsumer] = useState<Consumer[]>([]);\n\n  const isDisconnected = state !== \"Stable\";\n\n  const consumerList =\n    consumers.filter((consumer) => consumer.topic === selectedTopic) || [];\n\n  const isResetOffsetDisabled =\n    !selectedTopic ||\n    !selectedOffset ||\n    !isResetAccepted ||\n    !isDisconnected ||\n    selectedConsumer.length === 0;\n\n  const tableColumns = {\n    partition: t(\"consumerGroup.partition\"),\n    clientId: `${t(\"consumerGroup.client_id\")} + ${t(\n      \"consumerGroup.member_id\"\n    )}`,\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n    new_offset: t(\"consumerGroup.new_offset\"),\n  };\n\n  const areAllConsumerSelected =\n    selectedConsumer.length === consumerList.length;\n\n  const onSelectAllConsumer = (isSelecting = true) => {\n    setSelectedConsumer(isSelecting ? consumerList : []);\n  };\n\n  const isConsumerSelected = (consumer: Consumer) => {\n    return selectedConsumer.includes(consumer);\n  };\n  const onSelect = (consumer: Consumer, isSelecting = true) => {\n    setSelectedConsumer(\n      isSelecting\n        ? [...selectedConsumer, consumer]\n        : selectedConsumer.filter((r) => r !== consumer)\n    );\n  };\n\n  const onResetOffset = useCallback(() => {\n    const partitions = selectedConsumer.map(({ partition }) => partition);\n    onClickResetOffset(\n      selectedTopic,\n      selectedOffset,\n      partitions,\n      customOffsetValue || \"0\"\n    );\n  }, [\n    onClickResetOffset,\n    selectedTopic,\n    selectedOffset,\n    selectedConsumer,\n    customOffsetValue,\n  ]);\n\n  return (\n    <Modal\n      variant={ModalVariant.large}\n      isOpen={isModalOpen}\n      aria-label={t(\"consumerGroup.reset_offset_modal_label\")}\n      title={t(\"consumerGroup.reset_offset\")}\n      showClose={true}\n      onClose={onClickClose}\n      aria-describedby=\"modal-message\"\n      disableFocusTrap={disableFocusTrap}\n      appendTo={appendTo}\n      position=\"top\"\n      actions={[\n        <Button\n          variant=\"danger\"\n          key={1}\n          isDisabled={isResetOffsetDisabled}\n          onClick={onResetOffset}\n        >\n          {t(\"consumerGroup.reset_offset\")}\n        </Button>,\n        <Button variant=\"link\" key={2} onClick={onClickClose}>\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <Form isHorizontal>\n            <FormGroup\n              className=\"mas--ConsumerGroupResetOffset-form-group--readonly\"\n              label={t(\"consumerGroup.reset_offset_consumer_group_label\")}\n              fieldId=\"consumer-group-input\"\n            >\n              <TextInput\n                readOnlyVariant={\"default\"}\n                type=\"text\"\n                name={t(\"consumerGroup.reset_offset_consumer_group_label\")}\n                id={\"consumer-group-input\"}\n                value={groupId}\n              />\n            </FormGroup>\n            {isDisconnected && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_topic_label\")}\n                fieldId=\"topic-select\"\n              >\n                <TopicSelect\n                  value={selectedTopic}\n                  topics={topics}\n                  onChange={setSelectedTopic}\n                />\n              </FormGroup>\n            )}\n            {isDisconnected && selectedTopic && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_new_offset_label\")}\n                fieldId=\"offset-select\"\n              >\n                <OffsetSelect\n                  value={selectedOffset}\n                  onChange={setSelectedOffset}\n                />\n              </FormGroup>\n            )}\n            {isDisconnected &&\n              selectedTopic &&\n              selectedOffset === \"absolute\" && (\n                <FormGroup\n                  label={t(\"consumerGroup.reset_offset_custom_offset_label\")}\n                  fieldId=\"custom-offset-input\"\n                >\n                  <TextInput\n                    id=\"custom-offset-input\"\n                    name={t(\"consumerGroup.reset_offset_custom_offset_label\")}\n                    value={customOffsetValue}\n                    onChange={setcustomOffsetValue}\n                    type=\"number\"\n                  />\n                </FormGroup>\n              )}\n          </Form>\n        </StackItem>\n        <StackItem>\n          {!isDisconnected && (\n            <Alert\n              className=\"modal-alert\"\n              variant=\"danger\"\n              isInline\n              title={t(\"consumerGroup.reset_offset_connected_alert_title\")}\n            >\n              <p>{t(\"consumerGroup.reset_offset_connected_alert_body\")}</p>\n            </Alert>\n          )}\n        </StackItem>\n        <StackItem>\n          {isDisconnected && consumerList.length > 0 && selectedTopic && (\n            <Stack hasGutter>\n              <StackItem>\n                <TableComposable\n                  aria-label={t(\"consumerGroup.reset_offset_selectable table\")}\n                  className=\"consumer-table\"\n                >\n                  <Thead>\n                    <Tr>\n                      <Th\n                        select={{\n                          onSelect: (_event, isSelecting) =>\n                            onSelectAllConsumer(isSelecting),\n                          isSelected: areAllConsumerSelected,\n                        }}\n                      />\n                      <Th>{tableColumns.partition}</Th>\n                      <Th>{tableColumns.clientId}</Th>\n                      <Th>{tableColumns.current_offset}</Th>\n                      <Th>{tableColumns.log_end_offset}</Th>\n                      <Th>{tableColumns.offset_lag}</Th>\n                      <Th>{tableColumns.new_offset}</Th>\n                    </Tr>\n                  </Thead>\n                  <Tbody>\n                    {consumerList.map((consumer, index) => {\n                      return (\n                        <Tr key={index}>\n                          <Td\n                            select={{\n                              rowIndex: index,\n                              isSelected: isConsumerSelected(consumer),\n                              onSelect: (_event, isSelecting) =>\n                                onSelect(consumer, isSelecting),\n                            }}\n                          />\n                          <Td dataLabel={tableColumns.partition}>\n                            {consumer.partition}\n                          </Td>\n                          <Td dataLabel={tableColumns.clientId}>\n                            {String(consumer.groupId)}\n                            {String(consumer.memberId)}\n                          </Td>\n                          <Td dataLabel={tableColumns.current_offset}>\n                            {consumer.offset}\n                          </Td>\n                          <Td dataLabel={tableColumns.log_end_offset}>\n                            {consumer.logEndOffset}\n                          </Td>\n                          <Td dataLabel={tableColumns.offset_lag}>\n                            {consumer.lag}\n                          </Td>\n                          <Td dataLabel={tableColumns.offset_lag}>\n                            {isConsumerSelected(consumer) && selectedOffset\n                              ? selectedOffset === \"absolute\"\n                                ? customOffsetValue || 0\n                                : selectedOffset\n                              : \"-\"}\n                          </Td>\n                        </Tr>\n                      );\n                    })}\n                  </Tbody>\n                </TableComposable>\n              </StackItem>\n              <StackItem>\n                <Checkbox\n                  label={t(\"consumerGroup.reset_offset_accept\")}\n                  id=\"resetoffset-checkbox\"\n                  isChecked={isResetAccepted}\n                  onChange={setIsResetAccepted}\n                />\n              </StackItem>\n            </Stack>\n          )}\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n","import { Alert, Text } from \"@patternfly/react-core\";\nimport { DeleteModal } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type DeleteConsumerGroupProps = {\n  isModalOpen: boolean;\n  onClose: () => void;\n  onDeleteConsumer: () => void;\n  state: State;\n  consumerName: string;\n  appendTo: () => HTMLElement;\n  disableFocusTrap?: boolean;\n};\n\nexport const DeleteConsumerGroup: FunctionComponent<\n  DeleteConsumerGroupProps\n> = ({\n  isModalOpen,\n  onClose,\n  onDeleteConsumer,\n  state,\n  consumerName,\n  appendTo,\n  disableFocusTrap,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const isConsumerConnected = state === \"Stable\";\n\n  return (\n    <div>\n      <DeleteModal\n        isDeleting={false}\n        isModalOpen={isModalOpen}\n        title={t(\"consumerGroup.delete\")}\n        onCancel={onClose}\n        onDelete={onDeleteConsumer}\n        variant={\"non-destructive\"}\n        appendTo={appendTo}\n        disableFocusTrap={disableFocusTrap}\n        isDisabled={isConsumerConnected}\n      >\n        {isConsumerConnected ? (\n          <Alert\n            className=\"modal-alert\"\n            variant=\"danger\"\n            isInline\n            title={t(\"consumerGroup.delete_consumer_connected_alert_title\", {\n              name: consumerName,\n            })}\n          >\n            {t(\"consumerGroup.delete_consumer_connected_alert_body\")}\n          </Alert>\n        ) : (\n          <Text id=\"modal-message\">\n            <Trans\n              ns={\"kafka\"}\n              i18nKey={\"consumerGroup.consumer_group_delete_message\"}\n              values={{\n                name: consumerName,\n              }}\n            />\n          </Text>\n        )}\n      </DeleteModal>\n    </div>\n  );\n};\n","import {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent, ReactNode } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport \"./ConsumerGroup.css\";\nimport { ConsumerGroupDetails } from \"./ConsumerGroupDetails\";\n\nexport type ConsumerGroupDrawerProps = {\n  children: ReactNode;\n  consumerGroupByTopic: boolean;\n  state: State;\n  activeMembers: number;\n  partitionsWithLag: number;\n  consumers: Consumer[];\n  groupId: string;\n  onSelectDeleteConsumerGroup: () => void;\n  onSelectResetOffsetConsumerGroup: () => void;\n  isExpanded: boolean;\n  onClickClose: () => void;\n};\n\nexport const ConsumerGroupDrawer: FunctionComponent<\n  ConsumerGroupDrawerProps\n> = ({\n  children,\n  consumerGroupByTopic,\n  state,\n  activeMembers,\n  partitionsWithLag,\n  consumers,\n  groupId,\n  onSelectDeleteConsumerGroup,\n  onSelectResetOffsetConsumerGroup,\n  isExpanded,\n  onClickClose,\n}) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n  const onSelect = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const dropdownItems = [\n    <DropdownItem key=\"reset offset\" onClick={onSelectResetOffsetConsumerGroup}>\n      {t(\"consumerGroup.reset_offset\")}\n    </DropdownItem>,\n    <DropdownItem key=\"delete\" onClick={onSelectDeleteConsumerGroup}>\n      {t(\"common:delete\")}\n    </DropdownItem>,\n  ];\n\n  const panelContent = (\n    <DrawerPanelContent widths={{ default: \"width_50\" }}>\n      <DrawerHead>\n        <TextContent>\n          <Text\n            component={TextVariants.small}\n            className={\"consumer-group-drawer__top-label\"}\n          >\n            {t(\"consumerGroup.consumer_group_id\")}\n          </Text>\n          <Title headingLevel={\"h1\"} className={\"consumer-group-drawer__title\"}>\n            {groupId}\n          </Title>\n        </TextContent>\n        <DrawerActions>\n          <Dropdown\n            onSelect={onSelect}\n            toggle={<KebabToggle onToggle={onToggle} id=\"toggle-data-plane\" />}\n            dropdownItems={dropdownItems}\n            isOpen={isOpen}\n            isPlain\n            position={DropdownPosition.right}\n          />\n          <DrawerCloseButton onClick={onClickClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <ConsumerGroupDetails\n          consumerGroupByTopic={consumerGroupByTopic}\n          state={state}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n          consumers={consumers}\n        />\n      </DrawerPanelBody>\n    </DrawerPanelContent>\n  );\n\n  return (\n    <Drawer\n      isExpanded={isExpanded}\n      data-ouia-app-id={\"dataPlane-consumerGroupDetails\"}\n      isInline={true}\n    >\n      <DrawerContent panelContent={panelContent}>\n        <DrawerContentBody className=\"consumer-group-drawer__drawer-content-body\">\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type {\n  CloudProvider,\n  KafkaField,\n  SimplifiedStatus,\n  Status,\n} from \"ui-models/src/models/kafka\";\n\nexport function useKafkaLabels() {\n  const { t } = useTranslation(\"kafka\");\n\n  const statuses: { [status in Status]: string } = {\n    ready: t(\"statuses.ready\"),\n    degraded: t(\"statuses.degraded\"),\n    accepted: t(\"statuses.accepted\"),\n    provisioning: t(\"statuses.provisioning\"),\n    preparing: t(\"statuses.preparing\"),\n    deprovision: t(\"statuses.deprovision\"),\n    deleting: t(\"statuses.deleting\"),\n    suspended: t(\"statuses.suspended\"),\n    suspending: t(\"statuses.suspending\"),\n    resuming: t(\"statuses.resuming\"),\n  };\n  const statusesSimplified: { [status in SimplifiedStatus]: string } = {\n    creating: t(\"statusesSimplified.creating\"),\n    ready: t(\"statusesSimplified.ready\"),\n    degraded: t(\"statusesSimplified.degraded\"),\n    deleting: t(\"statusesSimplified.deleting\"),\n    suspended: t(\"statusesSimplified.suspended\"),\n    suspending: t(\"statusesSimplified.suspending\"),\n    resuming: t(\"statusesSimplified.resuming\"),\n  };\n  const providers: { [provider in CloudProvider]: string } = {\n    aws: t(\"common:cloudProviders.aws\"),\n    gcp: t(\"common:cloudProviders.gcp\"),\n    azure: t(\"common:cloudProviders.azure\"),\n  };\n  const providerRegions: {\n    [provider in CloudProvider]: { [region: string]: string };\n  } = {\n    aws: {},\n    gcp: {},\n    azure: {},\n  };\n  const fields: {\n    [field in KafkaField]: string;\n  } = {\n    id: t(\"fields.id\"),\n    name: t(\"fields.name\"),\n    createdAt: t(\"fields.createdAt\"),\n    updatedAt: t(\"fields.updatedAt\"),\n    expiryDate: t(\"fields.expiryDate\"),\n    owner: t(\"fields.owner\"),\n    provider: t(\"fields.provider\"),\n    region: t(\"fields.region\"),\n    status: t(\"fields.status\"),\n    plan: t(\"fields.plan\"),\n    size: t(\"fields.size\"),\n    ingress: t(\"fields.ingress\"),\n    egress: t(\"fields.egress\"),\n    storage: t(\"fields.storage\"),\n    maxPartitions: t(\"fields.maxPartitions\"),\n    connections: t(\"fields.connections\"),\n    connectionRate: t(\"fields.connectionRate\"),\n    messageSize: t(\"fields.messageSize\"),\n    billing: t(\"fields.billing\"),\n    clusterId: t(\"fields.clusterId\"),\n    adminUrl: t(\"fields.adminUrl\"),\n    bootstrapUrl: t(\"fields.bootstrapUrl\"),\n    version: t(\"fields.version\"),\n    az: t(\"fields.availabilityZone\"),\n  };\n  return {\n    fields,\n    statuses,\n    statusesSimplified,\n    providers,\n    providerRegions,\n  };\n}\n","import { useTranslation } from \"react-i18next\";\nimport type { TopicField } from \"ui-models/src/models/topic\";\n\nexport function useTopicLabels() {\n  const { t } = useTranslation(\"topic\");\n\n  const fields: {\n    [field in TopicField]: string;\n  } = {\n    name: t(\"fields.name\"),\n    partitions: t(\"fields.partitions\"),\n    \"cleanup.policy\": t(\"fields.cleanup_policy\"),\n    \"delete.retention.ms\": t(\"fields.delete_retention_ms\"),\n    \"max.compaction.lag.ms\": t(\"fields.max_compaction_lag_ms\"),\n    \"max.message.bytes\": t(\"fields.max_message_bytes\"),\n    \"message.downconversion.enable\": t(\"fields.message_downconversion_enable\"),\n    \"message.timestamp.difference.max.ms\": t(\n      \"fields.message_timestamp_difference_max_ms\"\n    ),\n    \"message.timestamp.type\": t(\"fields.message_timestamp_type\"),\n    \"min.compaction.lag.ms\": t(\"fields.min_compaction_lag_ms\"),\n    \"retention.bytes\": t(\"fields.retention_bytes\"),\n    \"retention.ms\": t(\"fields.retention_ms\"),\n    \"segment.bytes\": t(\"fields.segment_bytes\"),\n    \"segment.ms\": t(\"fields.segment_ms\"),\n    \"compression.type\": t(\"fields.compression_type\"),\n    \"file.delete.delay.ms\": t(\"fields.file_delete_delay_ms\"),\n    \"flush.messages\": t(\"fields.flush_messages\"),\n    \"flush.ms\": t(\"fields.flush_ms\"),\n    \"follower.replication.throttled.replicas\": t(\n      \"fields.follower_replication_throttled_replicas\"\n    ),\n    \"index.interval.bytes\": t(\"fields.index_interval_bytes\"),\n    \"leader.replication.throttled.replicas\": t(\n      \"fields.leader_replication_throttled_replicas\"\n    ),\n    \"message.format.version\": t(\"fields.message_format_version\"),\n    \"min.cleanable.dirty.ratio\": t(\"fields.min_cleanable_dirty_ratio\"),\n    \"min.insync.replicas\": t(\"fields.min_insync_replicas\"),\n    \"segment.index.bytes\": t(\"fields.segment_index_bytes\"),\n    \"segment.jitter.ms\": t(\"fields.segment_jitter_ms\"),\n    \"unclean.leader.election.enable\": t(\n      \"fields.unclean_leader_election_enable\"\n    ),\n    preallocate: t(\"fields.preallocate\"),\n  };\n  return {\n    fields,\n  };\n}\n","import { useTranslation } from \"react-i18next\";\nimport type { ConsumerGroupField } from \"ui-models/src/models/consumer-group\";\n\nexport function useConsumerGroupLabels() {\n  const { t } = useTranslation(\"kafka\");\n\n  const fields: {\n    [field in ConsumerGroupField]: string;\n  } = {\n    groupId: t(\"consumerGroup.consumer_group_id\"),\n    activeConsumers: t(\"consumerGroup.active_members\"),\n    laggingPartitions: t(\"consumerGroup.partitions_with_lag\"),\n    state: t(\"consumerGroup.state_header\"),\n  };\n  return {\n    fields,\n  };\n}\n","import { PageSection } from \"@patternfly/react-core\";\nimport { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  EmptyStateNoResults,\n  TableView,\n} from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport type {\n  ConsumerGroup,\n  ConsumerGroupField,\n} from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupEmptyState, ConsumerGroupStateLabel } from \"./components\";\nimport { useConsumerGroupLabels } from \"../../hooks\";\n\ntype SubUnion<T, U extends T> = U;\n\nconst Columns: SubUnion<\n  ConsumerGroupField,\n  \"groupId\" | \"activeConsumers\" | \"laggingPartitions\" | \"state\"\n>[] = [\"groupId\", \"activeConsumers\", \"laggingPartitions\", \"state\"];\n\nexport type ConsumerGroupsProps<T extends ConsumerGroup> = {\n  consumers: Array<T> | undefined;\n  onDelete: (row: T) => void;\n  onViewPartition: (row: T) => void;\n  onViewResetOffset: (row: T) => void;\n  consumerName: string[];\n  onSearchConsumer: (value: string) => void;\n  onRemoveConsumerChip: (value: string) => void;\n  onRemoveConsumerChips: () => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n>;\n\nexport const ConsumerGroups = <T extends ConsumerGroup>({\n  consumers,\n  onDelete,\n  onViewPartition,\n  isColumnSortable,\n  itemCount,\n  onViewResetOffset,\n  onClearAllFilters,\n  page,\n  perPage,\n  onPageChange,\n  consumerName,\n  onSearchConsumer,\n  onRemoveConsumerChip,\n  onRemoveConsumerChips,\n}: ConsumerGroupsProps<T>) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const labels = useConsumerGroupLabels();\n\n  const isFiltered = consumerName.length > 0;\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"consumerGroup.consumer_group_list\")}\n        data={consumers}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th\n            key={key}\n            info={\n              column === \"laggingPartitions\"\n                ? {\n                    popover: (\n                      <div>\n                        {t(\"consumerGroup.partitions_with_lag_description\")}\n                      </div>\n                    ),\n                    ariaLabel: \"partitions with lag\",\n                    popoverProps: {\n                      headerContent: t(\n                        \"consumerGroup.partitions_with_lag_name\"\n                      ),\n                    },\n                  }\n                : undefined\n            }\n          >\n            {labels.fields[column]}\n          </Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"groupId\":\n                    return row.groupId;\n                  case \"activeConsumers\":\n                    return row.activeConsumers;\n                  case \"laggingPartitions\":\n                    return row.laggingPartitions;\n                  case \"state\":\n                    return <ConsumerGroupStateLabel state={row.state} />;\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row, ActionsColumn }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"consumerGroup.view_partitions_offsets\"),\n                onClick: () => onViewPartition(row),\n              },\n              {\n                title: t(\"consumerGroup.reset_offset\"),\n                onClick: () => onViewResetOffset(row),\n              },\n              {\n                title: t(\"common:delete\"),\n                onClick: () => onDelete(row),\n              },\n            ]}\n          />\n        )}\n        isColumnSortable={isColumnSortable}\n        filters={{\n          [labels.fields.groupId]: {\n            type: \"search\",\n            chips: consumerName,\n            onSearch: onSearchConsumer,\n            onRemoveChip: onRemoveConsumerChip,\n            onRemoveGroup: onRemoveConsumerChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"input_field_invalid_message\"),\n          },\n        }}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        isFiltered={isFiltered}\n        onClearAllFilters={onClearAllFilters}\n        emptyStateNoData={<ConsumerGroupEmptyState />}\n        emptyStateNoResults={<EmptyStateNoResults />}\n      />\n    </PageSection>\n  );\n};\n","import {\n  Divider,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport {\n  ExternalLink,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Sections = \"standard\" | \"dedicated\" | \"clusters\";\n\nexport type ControlPlaneHeaderProps = {\n  activeSection: Sections;\n  sectionsHref: { [key in Sections]: string };\n};\n\nexport const ControlPlaneHeader: VoidFunctionComponent<\n  ControlPlaneHeaderProps\n> = ({ activeSection, sectionsHref }) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        hasShadowBottom={true}\n        type={\"tabs\"}\n      >\n        <Level>\n          <LevelItem>\n            <TextContent className={\"pf-u-p-md pf-u-p-lg-on-xl\"}>\n              <Text component=\"h1\">{t(\"kafka:title\")}</Text>\n              <p>{t(\"kafka:description\")}</p>\n            </TextContent>\n          </LevelItem>\n        </Level>\n        <Nav variant=\"tertiary\" className=\"pf-u-px-sm-on-xl\">\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabstandard\"\n              id=\"dashboard-tab-section\"\n              aria-label={t(\"controlPlaneNavigation.standard\")}\n              ouiaId={\"tab-standard\"}\n              isActive={activeSection === \"standard\"}\n            >\n              <Link to={sectionsHref[\"standard\"]}>\n                {t(\"controlPlaneNavigation.standard\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabdedicated\"\n              id=\"dashboard-tab-section\"\n              aria-label={t(\"controlPlaneNavigation.dedicated\")}\n              ouiaId={\"tab-dedicated\"}\n              isActive={\n                activeSection === \"dedicated\" || activeSection === \"clusters\"\n              }\n            >\n              <Link to={sectionsHref[\"dedicated\"]}>\n                {t(\"controlPlaneNavigation.dedicated\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n        {(activeSection === \"dedicated\" || activeSection === \"clusters\") && (\n          <>\n            <Divider />\n            <Nav variant=\"tertiary\" className=\"pf-u-px-sm-on-xl\">\n              <NavList>\n                <NavItem\n                  style={{ borderTop: 0 }}\n                  data-testid=\"pageKafka-tabdedicated\"\n                  id=\"dashboard-tab-section\"\n                  aria-label={t(\"controlPlaneNavigation.dedicated\")}\n                  ouiaId={\"tab-dedicated\"}\n                  isActive={activeSection === \"dedicated\"}\n                >\n                  <Link to={sectionsHref[\"dedicated\"]}>\n                    {t(\"controlPlaneNavigation.dedicated-instances\")}\n                  </Link>\n                </NavItem>\n                <NavItem\n                  style={{ borderTop: 0 }}\n                  data-testid=\"pageKafka-tabclusters\"\n                  id=\"dashboard-tab-section\"\n                  aria-label={t(\"controlPlaneNavigation.clusters\")}\n                  ouiaId={\"tab-clusters\"}\n                  isActive={activeSection === \"clusters\"}\n                >\n                  <Link to={sectionsHref[\"clusters\"]}>\n                    {t(\"controlPlaneNavigation.clusters\")}\n                  </Link>\n                </NavItem>\n              </NavList>\n            </Nav>\n          </>\n        )}\n        <Divider />\n        <div className=\"pf-u-p-md pf-u-p-lg-on-xl\">\n          {(() => {\n            switch (activeSection) {\n              case \"standard\":\n                return t(\"standard_description\");\n              case \"dedicated\":\n                return (\n                  <Trans\n                    ns={\"kafka\"}\n                    i18nKey={\"dedicated_description\"}\n                    components={[\n                      <ExternalLink\n                        href={\"https://access.redhat.com/articles/TODO\"}\n                        testId={\"dedicated-instances-support-link\"}\n                        className={\"pf-u-ml-xs\"}\n                      />,\n                    ]}\n                  />\n                );\n              case \"clusters\":\n                return (\n                  <Trans\n                    ns={\"kafka\"}\n                    i18nKey={\"clusters_description\"}\n                    components={[\n                      <ExternalLink\n                        href={\"https://access.redhat.com/articles/TODO\"}\n                        testId={\"clusters-support-link\"}\n                        className={\"pf-u-ml-xs\"}\n                      />,\n                    ]}\n                  />\n                );\n            }\n          })()}\n        </div>\n      </PageSection>\n    </>\n  );\n};\n","import type { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfo } from \"../types\";\n\nexport function onProviderChange(\n  providers: CloudProviderInfo[],\n  provider: CloudProvider\n): { provider: CloudProvider; region: CloudRegion | undefined } {\n  const selectedProvider = providers.find((p) => p.id === provider);\n  const region =\n    selectedProvider?.defaultRegion ||\n    selectedProvider?.regions.filter((r) => !!r.isDisabled === false)[0]?.id;\n  return { provider, region };\n}\n","import {\n  CloudProvider,\n  CloudRegion,\n  MarketplaceSubscription,\n  Size,\n} from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateKafkaFormData,\n  CreateKafkaInstanceError,\n  StandardPlanInitializationData,\n  StandardSizes,\n} from \"../types\";\nimport { onProviderChange } from \"./shared\";\n\nexport type StandardPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: StandardPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    provider?: CloudProvider;\n    region?: CloudRegion;\n    size?: Size;\n    billing?: MarketplaceSubscription | \"prepaid\";\n  };\n\n  // based on the form.provider selection\n\n  // based on the form.provider and form.region selection\n  sizes: StandardSizes | undefined;\n\n  creationError: CreateKafkaInstanceError | undefined;\n};\n\nexport const StandardPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5SwC4EMB2E0CcIAUAbTAWTQGMALASwzADoA3MHagMwE8BBRta4gEb9qKDgGJEoAA4B7WCOoyMkkAA9EAZgAcARnoBOfQAYdOrQHYArABYNAJnMAaEB0Q6j++reuXL5k3bWWpY65gC+Yc6omNh4RKQUNHT05Eps1FAArqwYUPTRKJmwYuQ4YGgoYCqy8iiKykhqmjp29OYW5hpGQYG+zq4Ilvoa9KZGlh4a5joAbPqBEVHoWLgExBhkVLQMqRjpWTl5bDI4ALZMaITUEGLpYIQQAJIYvFcQ1XIKSirqCKGG9Ds+ksU1m5n0M2s1n0-UQdgmllGdjsOj8QJm7ihixA0RWcXWmySOzSGWytCOJ3Or2uYlgmQEpxEH1q9R+bmMnnMnRR9n8di0RjssIQ-MFo2sgQ81lCGjm2NxsTWCS2yV2+zJuXoxzO+TQjHJJTKFTAAGVMuRyHB4I0al8GqBfoEZlp6FpISYdBp7PprFZhaK9JDAuDproQfLlor4htEtsUiSDuStZTdfrcobypUAKI4HAnZl2tkinn0WVTFFQrS+mb+jEzehzMz84btazjCMxVbRwlxtWkw7Js63aj3J4vS7XAt1b6NR0+etaWXzPmQmsuOGmRGWfmWRchbctGYdvFKmMq4l7ftJu4PWD0DBoU4ManYSoSG2faf2poIIL15GmDo+iLkBdhGOYa4DLMUKjKCljOkYbrDFox5RgSsaqgmGpHCOt73o+YAZsaU6srObj2F45gSn4UIaDY7QaMKMouohVgzNuHhgRoOioV26HnvGl6JpqN4QHeD5PmIElgAAwpQmAwCRM4OuRrS+tRVG2PRi5MexrSojM9iIW2VgSrx+LKkSgnqgOol3lIeb6hALAXG8xrvtIn6kSpgxAm00IosiEEzDMTjriKHj1hMEIoqE1iGeYdjmaePaYUJ2FarhYn0A5MhOSwRGVEp36-J6alUfCml0b6Onhci8UGJxnoSuBGj6Ml3YYReNnXll9mOdcBW5flOByQpVQfiyyk-mVlEabR2mMXVUr0EYgo+qGQHtJYHX8VZfbCTho53mUUD1K51zucVRYHl4hg6EEPisdYTHwkYgLDNKRjsSF0I7ZEOKRnxlm9lhtl9fQp31IVE2eVNJWqXNlULTVS1QXR5iAqidgzCYApui0u0g2lPUiRDUNKGIw2DaN8m5LDIC2l+RazepyNaajTFdJ4OM8hBnRejxAMKsDZ77WDvXHZDYBnZTFMYGN9PXWRfwUWzNEcwxTEGaWvgWA9Gg+P41hE2LoPpeDUvyAAXs+E6voRys+b6gbcW7czQu4tUDA44KrZCsogfyXqm6l3VXmTVvULb9CEDIaAQAaEBKAwtCMDIADWDAixZZskxHR14TbDBxwn5IIGnMjkBU9QANpGAAuk7P6gvQNi6HY2gPVCwr2HRbS6PoVG7lYQyh111kF5lUcx6XifpiweY4DlxAoNq5w5ylE8HRldn5NHJfx-PUAVy8Vc10o9dN5NhYq9uLqBMiwEWBKneWL3vKrSEiHDOBILDOPASO9LZFwPjDZujpQq6wAuxYwoEpj+n-qMT0254KG3ig9QB4sLaS1AbbKmA1nK03GhAtwi4sYeisPMQw9hay4wML6RKhhvrgiFksTsucw6T0OtPPBhF5aK0UjfZmKtcYuh9GBQwGIUS1kNgYT6Ewfqd26Fg82pNC7ZWLrSA+giGZM28j+KiLopjbkhPrcCuhaweGgT4Ux-hZj-XYSeTqQCJaRz4WIIQhAri5F0aQ388E26NnYuCZcEEXp1VxpjAmVYqKsOBEeYWQNOHbzcRou8XifF5BfFdYRBjfjbhGFoAUZjZjLj8L3YpmM1pWHCZVGYONVH5x4XvTJSYlCEA4GaAQsBSjUCkF+YosB7hgHICgbpvTWADIMfo6apU1rWDaO6EKa0goNMqfoPQ-gbC4x9MBQUGgmnhxaRDNpmoHJgCkHwCAXAsATL6dMpQQyRljPuVMkRcNb4+UPIiYpQI9y7ngsBYU3hFlrU9GYjwIRwhJI4VvVxOD3HZTOXkC5Vzri3IgG8-pgzaQvJQPgMo6L3h5LmW4IwUxXS7i9L4KwswtAgr7m3FEQxEq6EhEc7hu9Tn8CyQQvKNM-GkoRqres3FURxPsMiIEvdAUD0XIhHG8VEKOMBnClx2D1G8LEmIZOyQCjZ2SfCzVU87L+NmOMNo7hxjlgaYbd+kT+6aWCG-XcSrOXAKTinfI6BKg+vVXtNRBd-H8hxq6aUxtfQmCkf6WU9YWhgUqiETEEQAYYBkM5a0yAjUarjMwVgnAeB8EEMIUQ-iQjhtCm1WUEofTjGFFYAw3oQj2p9NRTleUWAAEVMgyHQP4gUIxOLQh8FoX2DLwoJtLI9cFWg63TESU4tCxNU4YFxJaAAqg+Xg-A0ACEIHoryZKEBcnep0NtwQuTSIdT7ClrpQoonmC0XQa1F1qucYG5I8tYBbr1MWvdB7-FckWdCYpD1+RujHTCOqVZSwB3GMiRcwxZgerSf6wod5MhrvpIyFAlQSWfI+TNRCpY2pVhCI+jmwohg8zilRA2Y7fSocRXkAoRR8g4ZEPh-x84DBmGlPjLko8IkDAXatLoi54Sd3hPBZjWq2NZsZkekVsGvTAR8C0ICVHwoTBdKYUKLbkSsQhHJ01KY0723NeCRZnpNkmFCqEMdsaUSrWYd0LkgcTOwo-SurltkUwvis8BUY4EMQ-3cA9G9cJcYjFCmtYIQRhhzEOd55dedjm7xTLAPU5IQ0oIbBYDw4x5wojCj7Kw+lZScV8PCT0pmWlZb1JAENCUDDhOs8CYI-pwSIgabFHGHtMGpdFlwz1IlKRWf8LBOzYJHNCmWl0Nura51uu+vV7lUtpL0DAKcAZAxCP5MQEw0YhS2xoJqhOqCiUh3OmleMCEKWl0jdSSx7V4kCL0As28c1asKoa2qlrSd4J6zdG+h0MEXoTbDZSQirVe8tuBeFSzKiDYfT0UMqYkETFNkg4Mu0aY4xFxQ6ezDk1JzNsfZyUVJHKtDYjDavMKTc6vSdyYtd-2Y6jNDEMutkB2VpLmpI+rKqi0mK+E8AbX0QJWXGCStD41Qbyd4WpkQi6Dt-HaHrMubiHmTJukghuaEXhdzPo8BCFbvPcHZRVy5L7k4affJsICbQSrDBAiHlFkUXRFluk7nReYY7nQwpJwr5pG3leEJcojg7x6Kv+yCBYEEtWuT+gep4UdpupEW-l7msPfP+oCqIYLl0wuUaA9vdYta8xDJei6EYy3SKToy3OlTw98MixTBdKFAWLQbBlTK+RO9gR+NfW4vFFCOfP0Zfz9LWWGBPvjm+w7maExkG8lCCCQUtimLSkRPSl3zokNDZD7n6fVum9z7V0BxbDnBQNOdEBSEXMh8CahO4MfzoG-pNnzM5TLMhd-Yi6cyTrgR6CygoiJ7BAhQhRf5vb7wxyt4a7tANidD6bDwPrzY+wOYNiBCc4hTNiPbvppajZoZ7zFyfYQCAbL6lQUQgiGygFuztDwjdYQjiZQiigZ5vqbyn5+bn7wEMCJzZb7rNbUGIAdBeC6DcRVheiSGYFwjAh6DAgmCKJWDaA+CwFkEHz0AADufAdQuQAAYicD2n2mgD9q0HQVMLyNMDjAguFDSnoOMF7L-KoQApPr5mNt-uQZ2jgCYf2qIarBYZDgwZ6EwZ7l0HeozoqkEBYhPiflPrwY3vwVfgEZspyPZohuxN6HIQgBJmAdIdtA5tCMHkQc9rDqahDOQYvPmAEbNJYdyFyIeHYQMM2qtG2GVDaozhoZUVoXPLlgERBLFtoPfAKFCEMCJs0MMG0IlNuCGIuJ-u4elokV4QfMXktl6A0TYQlP6D4DZkBH3uBMPKqtwQkZ4XASimrsRLUdoI1J0IZBSn4HAuEZIf5C1O4EMJ3GwqUaToruHsirykmOmiaPivUAAEpgAACOmQ1AZQBGSm7eKs+WEw6+OuVe4RChro1mI6iE0a3RUsFxHSXS9IkyOK9Qd4ducJsyKmKOFiEq0wPQNglSwQowwQ0EYE-GcR3xoeZ+SRBJGAnS2Kjya6KRMeIqkWmMf4-IwOdqD0vcGJ0IkObq7Q4wXBOapxpBPK3i7S-JRJPSDygyA6q+tJfg9JY6jJ9hFUWMkIoQDEDSnJJxHhGp+JAJ5yRK1ymKgpgy22u2ZaARFgIw8IxgGmFKDgoQjKoQq0AQ9qjmwIeJeEFxaK7pdyxJ+pZJHGep7yv+CJ3yfIXgtmfeW0Y6l2iAb+Yq7QAo2y7g8IcZ-xWprplySZWKKZmZTyOUbp9uopRYzCroHgi4i4dKesIKtg6egoxSJSbU0wNZGSLpqK7ZNyyZGZpJTyA6RugZ3Q386+A+v4qIQ6r8hsVZvIU59AKK5qpgbcIZ0wqJUKsqa0bQPo7EFiEoKGixJBr2ZqfpIGgBZe3siAhgxizoY+-Ib+xSX+-i9Cam5GmmPo1UjKe+iGypYEVYJgnK2WzAlJf+Ks-yUUmyJp9Bl5saQwDYJgTCa0Y+boRyIa0S8U56NaQIZ2ORrQwwaR3oNewEz5EQQAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as StandardPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./StandardPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as StandardPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"providerChange\"; provider: CloudProvider }\n          | { type: \"regionChange\"; region: CloudRegion }\n          | { type: \"sizeChange\"; size: Size }\n          | {\n              type: \"selectSubscription\";\n              subscription: MarketplaceSubscription;\n            }\n          | { type: \"selectPrepaid\" }\n          | { type: \"billingChange\" }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: StandardSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"standardPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isOverQuota\",\n              target: \"overQuota\",\n            },\n            {\n              cond: \"isInstanceUnavailable\",\n              target: \"instanceUnavailable\",\n            },\n            {\n              cond: \"isRegionsUnavailable\",\n              target: \"regionsUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        overQuota: {\n          tags: \"blocked\",\n        },\n        instanceUnavailable: {\n          tags: \"blocked\",\n        },\n        regionsUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitted: {\n                  entry: \"triggerSubmit\",\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitted\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  tags: \"creatable\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                provider: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"providerIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"providerInvalid\",\n                    },\n                    valid: {\n                      tags: \"providerValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      actions: \"setProvider\",\n                      cond: \"didProviderChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                region: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"regionIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"regionInvalid\",\n                    },\n                    valid: {\n                      tags: \"regionValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      actions: \"setRegion\",\n                      cond: \"didRegionChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noProviderOrRegion\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          cond: \"sizeIsDisabled\",\n                          target: \"disabled\",\n                        },\n                        {\n                          cond: \"billingRequiredButNotSelected\",\n                          target: \"waitingForQuota\",\n                        },\n                        {\n                          cond: \"sizeIsOverQuota\",\n                          target: \"overQuota\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    disabled: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeDisabled\",\n                    },\n                    waitingForQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeWaitingForQuota\",\n                    },\n                    overQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeOverQuota\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      target: \".validate\",\n                    },\n                    sizeChange: {\n                      actions: \"setSize\",\n                      cond: \"didSizeChange\",\n                      target: \".validate\",\n                    },\n                    billingChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n                billing: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"onlyPrepaid\",\n                          target: \"prepaidOnly\",\n                        },\n                        {\n                          cond: \"singleSubscription\",\n                          target: \"singleSubscription\",\n                        },\n                        {\n                          cond: \"onlySubscriptions\",\n                          target: \"onlySubscriptions\",\n                        },\n                        {\n                          description:\n                            \"user has both prepaid and marketplace subscriptions\",\n                          target: \"prepaidAndSubscriptions\",\n                        },\n                      ],\n                    },\n                    prepaidOnly: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\"],\n                      entry: \"setBillingToPrepaid\",\n                      type: \"final\",\n                    },\n                    singleSubscription: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\", \"singleSubscription\"],\n                      entry: \"setBillingToSubscription\",\n                      type: \"final\",\n                    },\n                    onlySubscriptions: {\n                      description:\n                        \"More than one subscription exist. The user needs to select one to procede.\",\n                      initial: \"invalid\",\n                      type: \"final\",\n                      states: {\n                        invalid: {},\n                        valid: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                      },\n                      on: {\n                        selectSubscription: [\n                          {\n                            actions: \"setBillingToSubscription\",\n                            cond: \"matchesSelectedProviderOrRHMarketplaceAndHasQuota\",\n                            target: \".valid\",\n                          },\n                          {\n                            cond: \"noSelectedProvider\",\n                            target: \".valid\",\n                          },\n                        ],\n                      },\n                    },\n                    prepaidAndSubscriptions: {\n                      description:\n                        \"The user has both prepaid quota and one or more subscription to a marketplace. The user needs to select one to procede.\",\n                      initial: \"empty\",\n                      type: \"final\",\n                      states: {\n                        empty: {},\n                        subscription: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                        prepaid: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                      },\n                      on: {\n                        selectSubscription: [\n                          {\n                            actions: \"setBillingToSubscription\",\n                            cond: \"matchesSelectedProviderOrRHMarketplaceAndHasQuota\",\n                            target: \".subscription\",\n                          },\n                          {\n                            cond: \"noSelectedProvider\",\n                            target: \".subscription\",\n                          },\n                        ],\n                        selectPrepaid: {\n                          actions: \"setBillingToPrepaid\",\n                          cond: \"hasPrepaidQuota\",\n                          target: \".prepaid\",\n                        },\n                      },\n                    },\n                  },\n                  on: {\n                    providerChange: {\n                      actions: \"unsetSubscription\",\n                      description:\n                        \"If a new provider is selected, deselect any previously selected billing option.\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#standardPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              ...(context.capabilities.defaultProvider\n                ? onProviderChange(\n                    context.capabilities.availableProviders,\n                    context.capabilities.defaultProvider\n                  )\n                : {}),\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setProvider: assign((context, { provider }) => {\n          return {\n            form: {\n              ...context.form,\n              ...onProviderChange(\n                context.capabilities.availableProviders,\n                provider\n              ),\n            },\n            sizes: undefined,\n          };\n        }),\n        setRegion: assign((context, { region }) => {\n          if (context.creationError === \"region-unavailable\") {\n            return {\n              form: { ...context.form, region },\n              sizes: undefined,\n              creationError: undefined,\n            };\n          }\n          return {\n            form: {\n              ...context.form,\n              region,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSize: assign((context, { size }) => ({\n          form: {\n            ...context.form,\n            size,\n          },\n        })),\n        setSizes: assign((context, event) => {\n          const sizes = event.data;\n          const smallestSize = sizes.sort((a, b) => a.quota - b.quota)[0];\n          return {\n            sizes,\n            form: {\n              ...context.form,\n              size: smallestSize,\n            },\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => {\n          return {\n            creationError: error,\n          };\n        }),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form> &\n            Pick<typeof context.form, \"billing\">;\n          const data: CreateKafkaFormData = {\n            plan: \"standard\",\n            name: form.name,\n            provider: form.provider,\n            region: form.region,\n            sizeId: form.size.id,\n            billing: form.billing,\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n        triggerBillingChange: send(\"billingChange\"),\n        setBillingToPrepaid: assign((context) => {\n          const form = { ...context.form };\n          form.billing = \"prepaid\";\n          return { form };\n        }),\n        setBillingToSubscription: assign((context, event) => {\n          const form = { ...context.form };\n          if (event.type === \"selectSubscription\") {\n            form.billing = event.subscription;\n          } else {\n            // single subscription, take it from the context\n            const ms = context.capabilities.marketplaceSubscriptions[0];\n            form.billing = {\n              marketplace: ms.marketplace,\n              subscription: ms.subscriptions[0],\n            };\n          }\n          return { form };\n        }),\n        unsetSubscription: assign((context) => {\n          const form = { ...context.form };\n          form.billing = undefined;\n          return { form };\n        }),\n      },\n      guards: {\n        isOverQuota: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"out-of-quota\",\n        isInstanceUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"instance-unavailable\",\n        isRegionsUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"regions-unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        providerIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableProviders || []).length > 0 &&\n            // must have selected a provider\n            selectedProviderInfo !== undefined\n          );\n        },\n        regionIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have selected a region\n            form.region !== undefined &&\n            // the region must be included in the capabilities for the provider\n            selectedProviderInfo?.regions.find((r) => r.id === form.region) !==\n              undefined\n          );\n        },\n        noProviderOrRegion: ({ form }) =>\n          form.provider === undefined || form.region === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) => sizes !== undefined && sizes.length === 0,\n        sizeIsDisabled: ({ form, capabilities }) => {\n          if (capabilities === undefined) return true;\n          return form.size?.isDisabled === true;\n        },\n        billingRequiredButNotSelected: ({ form }, _, meta) => {\n          if (meta.state.hasTag(\"noBilling\")) {\n            return false;\n          }\n          return form.billing === undefined;\n        },\n        sizeIsOverQuota: ({ form, capabilities }) => {\n          if (capabilities === undefined || !form.size) return true;\n          const availableQuota =\n            form.billing === \"prepaid\" || form.billing === undefined\n              ? capabilities.remainingPrepaidQuota\n              : capabilities.remainingMarketplaceQuota;\n          if (!availableQuota) return true;\n          return form.size.quota > availableQuota;\n        },\n        didProviderChange: (context, event) =>\n          context.form.provider !== event.provider,\n        didRegionChange: (context, event) =>\n          context.form.region !== event.region,\n        didSizeChange: (context, event) =>\n          context.form.size?.id !== event.size.id,\n        onlyPrepaid: (context) =>\n          context.capabilities.marketplaceSubscriptions.length === 0,\n        singleSubscription: (context) =>\n          context.capabilities.remainingPrepaidQuota === undefined &&\n          context.capabilities.marketplaceSubscriptions.flatMap(\n            (m) => m.subscriptions\n          ).length === 1,\n        onlySubscriptions: (context) =>\n          context.capabilities.remainingPrepaidQuota === undefined &&\n          context.capabilities.marketplaceSubscriptions.length > 0,\n        matchesSelectedProviderOrRHMarketplaceAndHasQuota: (\n          { form, capabilities },\n          { subscription }\n        ) =>\n          capabilities.remainingMarketplaceQuota !== undefined &&\n          capabilities.remainingMarketplaceQuota > 0 &&\n          (subscription.marketplace === \"rhm\" ||\n            form.provider === subscription.marketplace),\n        hasPrepaidQuota: (context) =>\n          context.capabilities.remainingPrepaidQuota !== undefined &&\n          context.capabilities.remainingPrepaidQuota > 0,\n        noSelectedProvider: ({ form }) => form.provider === undefined,\n      },\n    }\n  );\n","import { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateKafkaFormData,\n  CreateKafkaInstanceError,\n  TrialPlanInitializationData,\n  TrialSizes,\n} from \"../types\";\nimport { onProviderChange } from \"./shared\";\n\nexport type TrialPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: TrialPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    provider?: CloudProvider;\n    region?: CloudRegion;\n  };\n\n  // based on the form.provider and form.region selection\n  sizes: TrialSizes | undefined;\n\n  creationError: CreateKafkaInstanceError | undefined;\n};\n\nexport const TrialPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QBUBOBLAhgGwArcwDsBZTAYwAt1CwA6ANzAwDMBPAQXs3QICMf0AF1YBiRKAAOAe1hD0UwuJAAPRACYAbAA4AnLQ0AGNQBYArBo0BmHQHYNNywBoQrRDoO1bARjWmv54y8DY18AX1DnNCw8AhJyKhpaMgVmdCgAVwxCKFpYQUxBdNgRMlQwArAlaVlBeUUkFUQgtWdXBFNLY1o7LRDTG1NTLVNjG3DIjBx8IlJKajpkwlSMrJzmKVQAWwYcdAgRVLBsCABJQi5sPaqZOQUlVQQvLRs9NR1TI1Mdey0tNS1Wk1nqZaJodIEbEYTAZ7OMQFEprFZgkFik0plqGsNtsLnsSmUKtcanV7kCXqD3p9vjZfv9AQg1AYhrQDF4fH9jJ0aVo4QiYjN4vMkmiVpjaOstrlMPRMfjyoIwABldJkMhweANaq3eqgB5qSxqGwsgwmgzPHRBGxeemMrQeCwfAY6NT6s2mXmTflxOaJRbLDHZcXYqUy7JyioAUVQqA2RO1pIZBqNppN5st1pcTR04O6gX+9hMefdEXhnum3pRwqW6NWQa2B3QR1O512EDjtTuDQe-i+tD+Jpdxm0NhdpnpXlGXTNnIt-RCnOLE2i5eRQr9NbFh2OsFohEwmzouIgFTEmpuHZ1jQQxmG3VHfjUE7Zb3HGlGoK8Vo0-ksli0Vh0D1lyRQVfRFAM1kbbdd33MADmxZVeE2IR2xJLsmgNccbECWgvAsGwBkhBwb0sIDEQFH1UWrUVAy3CAdz3A8REYsAAGEKCIGBUM7XUMJaTNHg0QZQU5Axf0MYxRmwsivVXMDqIg8UoPo2gJBjGUICYHZLmPBVT0kc80N49o3lBQxgnBLkmQBATH20Wghy8WxnS0IJLA0GSV1Aqj-VrOidzUqQNKYeCtkQ5DBG4y9u0w2zLCePs33cxkmW0IdPJAyiq18zdlIC9S9hCwLgtQdjOMqM9iR4q8vFito7JBd4XhpGF-FGDKKMrdcaMgpsdzKKA6m0vYTyihNTEfY0TH-aFzGCccni6G8DGzf9WSE9KSz5Lysu6xT-NoAa6lCzZwpQyr43Qx46qaN4vFoawR1HT8Jv6DqKzXcC-Lyw6wEGhQRGKwrSo47IKoMqror48cTEsByOhItlLD8P93rknyN1on6joBnHCDKsGxqu2r+LaIJ3FoEYRytYYkZCNHvOyzHeug2QAC9D1bUaLovBNnjh2xnn-A1hgmmz6rtLRugMZrhhvJzF1LYDOs+hTvr63J0A52hsCkTAIFlCAFDoah6CkABrOhtsyrqvtyjX2boXX9cxBBTakMgCjqABtAwAF0ieM4x3k8O0jCc2qNDum0Bg0bpKXihxvmsYwGd2u2sYdrWnb1g2wyYGNUFUghBAlbZrZV+Scsz1ns513PXfdz2L19gOeaMq9g8asPHwtZKLRjs0+xRv5DHJzQ09ttX7drjmTrOyL2+qmLSfUC0uhMDRsysbRNH8SfVerlmVMdwGCs0kHysDmqboQSxgnuvD9THq1szCLayxtw-maUrO57xgmXEl5Q2uqvO+Zo9BBCsJCSwI5rA8g-srD6Vcf7+REEbRIeQKi0ArsgjGPVf7bmvt2QI90-BCx0PFWBXcbQPweoMLeidHyfAPignq6Dja5HyAqHBn9K74IgsQ9Q2g9CGBMOYACdgHBYU5KHay2FkbOhdOEEshApCaQ1CgPheCGBMHQGwTg3A+ACGEEI68YC8J6AtBHew35-wWDUKwugghPQAFVYCQDMW8ewuE+hsjZIMXwr4rFsgtLYp4Fgo5ONoC46Iri9xcB4JgXg2BwYgC1LzK6IQbR-j7FoJMYkhIRxpNEvGsB4nSiMck1JZjskCSCB4cEMtOQiNGDLLw0S9q1iwYUHc6RCCwHSEhIQCo2zAITM0ekQ4QTNSfhCbM9NEHkR0V0sUPSii5CGRFUZXj8mUwaayP4eFkb9HpNoOGkIVodBePYMSitcHoyZgQ9Zmj0mGWXogGk9I-weD+EMbMZpWTiVTks2SjNVm0WDKbVsXjg5xxlv+Zyj4CIWMRaCBhgwmQjD+KRUFO0p5HzrDiGF4ziaDD0P2KEQ5nijloStRKMIvjDmGMjTpGcsSSlgNKTEXiTRGleiaCaFprF0qlhNBWLomTHI8nir+bD9rBi5YwMZENLrGRMN8FkNIt4vGRSOWh2F9Ao1qu8Do+SZVLmWY8iFHLNhmJ-CCSlg5hy0vqX+SBtV2TPz-G8Nl08a4qRYrQfpggpAqgoJ40lxl-BqFBLoWBFhYEwn1E4epLwPVYr+K5dN9ztHWvZYQwNsFaBgE2BIUxUarwjilkJAYmh7DIxTVhTQuF+gcjsJQ38YxZX8KeftH6QboU6XtbfJysCWQdGnE1CaMs-WEoOkGo89rDUumZdmfof48Ljn-FLM0Tw7JOQsHO1BA7i1HkJJWh4nRY0WgGHhXQxhpzGGbXHfwNITAdt-LA49BCF2wXtWacc5hY3iPBEK5ovQf39o1kDC+wbCChvDZG1VmTo2Gusj4OcDghh2ByXYPse6wl3u-N2y1YL07+uPvlIKwNhq6TSRkjuV7-zww+P4NkQ4CKpvqi6e6IRmm6EZOu0jSsrXgoLQdWDWkh1XEvU0Do3RhzBzZEYb4ZgbSSRmS8MwbH77KJ7SsiTP0pNFyXXJhAd7KYOA5OSnQdowEukmvx7CgmVpNSg+raCJmAPi3UIC0O2gLK6HYx5meKk8bwcQ5QZDbzIYTK3p4N4nRAgfHzDCccQ5XjYW0AreKPxQsBv6n9Ia56FRmNgVLJy2E-DOiZPFHQMNx0zhHBxoSD6CtUd+v9QgtAZMqti2qmqwd9DWGpCjF0sCxxuuG50Fa35nQ-mkgZ-NlHC1Fe63RsxDgPB4Q+H+ecjIXz1P1EaGctigXDBEw88Tq2Dp4x8+OQVVnzK0yTO5Dra3Nba1Kwx95ID7CiPyXYL4wdDTfBtH3EbFlvxfsZLisj+Lv6-p+o7XrEAanmY4yCMehoTCHqEjaX4lXQeb38NvD7B1UdmZQ0x9QCnfCuXih8QYQQOgQ5HLhC0JohLaHwrmpBK350o7rgXWM5mLC7u-GCTkkltBTfqvYI0yMALzmnVdvNN2hd-xzi7bII6HP2C6GlTk+S-k+Ap8LjmD3bL-O6J6gYwRpn72W5rk9fUzG9HpJQ2NElqsvUCPD0T5GCXMzMSMb5Mth5Dn1N8Wm2holKpi4xj5DJ7OeEKbobT2ExJYXHd8XeIwRG2HVwL7y9rfOPAQeEIAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as TrialPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./TrialPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as TrialPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"providerChange\"; provider: CloudProvider }\n          | { type: \"regionChange\"; region: CloudRegion }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: TrialSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"TrialPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isTrialUsed\",\n              target: \"trialUsed\",\n            },\n            {\n              cond: \"isTrialUnavailable\",\n              target: \"trialUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        trialUsed: {\n          tags: \"blocked\",\n        },\n        trialUnavailable: {\n          tags: \"blocked\",\n        },\n        regionsUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitted: {\n                  entry: \"triggerSubmit\",\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitted\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                provider: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"providerIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"providerInvalid\",\n                    },\n                    valid: {\n                      tags: \"providerValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      actions: \"setProvider\",\n                      cond: \"didProviderChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                region: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"regionIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"regionInvalid\",\n                    },\n                    valid: {\n                      tags: \"regionValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      actions: \"setRegion\",\n                      cond: \"didRegionChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noProviderAndRegion\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#TrialPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              ...(context.capabilities.defaultProvider\n                ? onProviderChange(\n                    context.capabilities.availableProviders,\n                    context.capabilities.defaultProvider\n                  )\n                : {}),\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setProvider: assign((context, { provider }) => {\n          return {\n            form: {\n              ...context.form,\n              ...onProviderChange(\n                context.capabilities.availableProviders,\n                provider\n              ),\n            },\n            sizes: undefined,\n          };\n        }),\n        setRegion: assign((context, { region }) => {\n          if (context.creationError === \"region-unavailable\") {\n            return {\n              form: { ...context.form, region },\n              sizes: undefined,\n              creationError: undefined,\n            };\n          }\n          return {\n            form: {\n              ...context.form,\n              region,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSizes: assign((_context, event) => {\n          const sizes = event.data;\n          return {\n            sizes,\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => ({\n          creationError: error,\n        })),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form>;\n          const data: CreateKafkaFormData = {\n            plan: \"developer\",\n            name: form.name,\n            provider: form.provider,\n            region: form.region,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            sizeId: context.sizes!.trial.id,\n            billing: undefined,\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n      },\n      guards: {\n        isTrialUsed: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"used\",\n        isTrialUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        providerIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableProviders || []).length > 0 &&\n            // must have selected a provider\n            selectedProviderInfo !== undefined\n          );\n        },\n        regionIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have selected a region\n            form.region !== undefined &&\n            // the region must be included in the capabilities for the provider\n            selectedProviderInfo?.regions.find((r) => r.id === form.region) !==\n              undefined\n          );\n        },\n        noProviderAndRegion: ({ form }) =>\n          form.provider === undefined || form.region === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) =>\n          sizes !== undefined && sizes.standard.length === 0,\n        didProviderChange: (context, event) =>\n          context.form.provider !== event.provider,\n        didRegionChange: (context, event) =>\n          context.form.region !== event.region,\n      },\n    }\n  );\n","import type { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, EventFrom, forwardTo, send } from \"xstate\";\nimport type {\n  CloudProvidersInfo,\n  CreateKafkaFormData,\n  CreateKafkaInitializationData,\n  CreateKafkaInstanceError,\n  StandardPlanInitializationData,\n  StandardSizes,\n  TrialPlanInitializationData,\n  TrialSizes,\n} from \"../types\";\nimport {\n  StandardPlanMachine,\n  StandardPlanMachineContext,\n} from \"./StandardPlanMachine\";\nimport { TrialPlanMachine, TrialPlanMachineContext } from \"./TrialPlanMachine\";\n\ntype Quota =\n  | Pick<\n      StandardPlanInitializationData,\n      | \"plan\"\n      | \"remainingPrepaidQuota\"\n      | \"marketplaceSubscriptions\"\n      | \"remainingMarketplaceQuota\"\n      | \"instanceAvailability\"\n    >\n  | Pick<TrialPlanInitializationData, \"plan\" | \"instanceAvailability\">;\n\nexport type CreateKafkaInstanceMachineContext = {\n  quota: Quota | undefined;\n  providers: CloudProvidersInfo | undefined;\n  defaultProvider: CloudProvider | undefined;\n  capabilities: CreateKafkaInitializationData | undefined;\n};\n\nconst CreateKafkaInstanceMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMBOYCGAXMBpDAZgNYYCSAdrFhucmAHQA2A9hhAJblT0COArs2r1kACzDIinKAAIqNCBlQRp-QRgDEYVKmap6AB0bYCugLbD02PIRIU5tBizZTeAoaPGSus6uQVKVNwwETgA3ZmRsdmZyAG0ABgBdRFB9Zlh2LGjyFJAAD0QAFniAJnp4gGYAdkKATgAOeqr4qvrCgFYAGhAAT0QANir++n769tqq2sKARhKKjsKAX0XutEwcfGIySl86JlYOLlc1YTEJKR95RWVVanV7fxug6QxQjHYjACNGMFy0jKyMVyBQQxTKlRqDSaLTaXV6iHG8XoVXahX6UyqJVqJX6-WWq0sGxs23seych24twwp08Fwe10CanUzD4WGkzAIlz8DKpf3SmWywKKpXK1TqjWarQ63T6CHa8UK9Hqcw6JUK6palXxIDWVk2th2NDJBxcVJp5289ICVPU5GYXMejOoLzeHww31+SBA-wFQK9ILBoshEph0vhoPaw2hFRKasKbQa0yWKx1hOsWzsu0cJqOZqtEHUfIBgv9iCTU2RkZj03RYsjMoGyvo0yG40KJSq0wq02m9W1uqJGcNDn2zlzQXoEDAoTALH0WkLXp9gJypYQ5cVKP61drNXr4faFSRJVmdUmasjvf7af1JKzo4px3cZy8MinM7nWhd7y+H0yPU0bRdAMIwsBMVBzAHdMDVJbMx0pCcPAtN9p1nZh51Qb83U+P8sB6EJyHCSIVwSZIl35FchQQWpanaeh4y7JN5gqbFZgbOU1WRE96m3Bp+lRKoKmvdZoLvI04MfM0kNfaR3zQjCsN-Rh-3UOTP0wvhYEgItfVXUAQRouiGO7QpmNYkp2NMqolXqWZcSPCpRn6NFhL1YlM3Eh9TUQl8LjU9Cv1eH93VwgD-IUoLsJ+HTKLXQz6NskyzJPCzwwqdppnoWj4niaZ2kPepaiTaZXMHGD73JFwCDALBRAufQdFCdgp1QWB1Aa5gmpa2AXj8aR0CgbIesir5ovI4s-X0staNqegjzGcZ+hKHjeyqdj2jGcplu4moFSqKpStEjyR0qo5qtqkR6sa5qtDarQdD0QxjDMCwRNvY7jXg+hzrq7wOq626CKIqIYlImKSym9cMRsiY0RmaYFXiOFZUKfa5rqRy5mmWp4kGdpDve4dPsfH7Lr+67uvainbvZTCBqG6Q+HIEb3TG1IKIh-Jpsjeh2k7XHOw7QqWnY0Z6mbapakGNVqgR-GUygwnYK8rhVJiBg5BwV63KHZXTqgcHJq5hASlROj+lKCp6kqdUVvYq3Mr3ds0UaPLZgJ9yiY13xHSe8h6Gan57leT12YmvTjaxbd6NM+NDIVdLCkskUFmxyZt2cwYPd1+982kP36FgV4pHUKCAGU+GQOhYHgcbdKoxOjKR0p6nmYXlvt1Fyn6Lt1W7E9Jkc7Pys8vOC6LprVaggBRIDUENiOQSjioY7b+PTNRe2a152NbLy03M7y4exJHcKvwLwOwGDmcF6orFWl5i2Nt7toEYqUWpayrt5SW+z4ls4+H0GBn0wuPYuU80wVyrnAWuYd65rkbvRBUtQ6x9zaKLeMO8WhDB7PEKEtRAFe0nKhdS+cjD+wniXGec9b5rnvuLSMSNErxhmJUUWCMsrKmWngsEuJ5YpjtFOWBqY3qez1jmBCJxpJ0h9jyIItDIYI1SrKSM4tW6dmVB0TsaISoKxvGIiqEinzUnzAo42zRxYojmD3FEtk+bTFFkMZskYcS9mfiwwh4ivpmhAWYkEswGg2RwSxJosxSjrU4tjAePcEY8SKp4wx3ifK0m8CAxSIVlJ4T8QMfic1lrFVaMqeYDjwztjojxHhsYOxW1ssmAkoic6eX1sY7JCBWjsQ7LNKWjRKiLRxmieW9SdYjxOkY0mV1Oo3Vaq0msCoY7FCGOlWMsxkYIkxMiHh7RYyMPjEJPRDSRnExcJYCAso4GxUhrGQY5QMpjCSpedaExkRND5jorEFQ9lDLKifI5XBWmb3DC2TKlRGLVCxBeDoCTR49CoGAUwjNmaulGqHb0HMjYgkciiLK+UUFWRxt2VZbT1mt1GK0Fo-EOx4n2cMn53srgBAvhANmqLw53yaIqfi4xsQdnyu2d+aVqjONbmna2OJuxQpHGPchhdwEGzrhc42MZBXYwmD3CE-F+j21jCMZy8Ytxdlom0CVewpU0FacteUIwcXcpRKiOY7FsYrzBdbeMhUWJt2NcAkhAVQHSsvuaxos19rzUxelFsyiBjdhGC2UYLY4k9l0V8o6RC0lgMnnK85nMMVVPKJo2GbiirsOsrMd1uU1SWzqSImlQDiEfh9WQs18qs2IGWrk4N-9Q0ZUxJZJoSolWVBylYwqnrhDMFMIYGqKLlzNoQNUf+SomFoP2p2Ht1lcZ5Roj2IW4rqXfKAa0o87EaI3JyhtQS2Ntyo2WMsIAA */\n  createMachine(\n    {\n      context: {\n        providers: undefined,\n        defaultProvider: undefined,\n        quota: undefined,\n        capabilities: undefined,\n      },\n      predictableActionArguments: true,\n      tsTypes: {} as import(\"./CreateKafkaInstanceMachine.typegen\").Typegen0,\n      schema: {\n        context: {} as CreateKafkaInstanceMachineContext,\n        events: {} as\n          | {\n              type: \"standard quota available\";\n              quota: Pick<\n                StandardPlanInitializationData,\n                | \"remainingPrepaidQuota\"\n                | \"remainingMarketplaceQuota\"\n                | \"marketplaceSubscriptions\"\n              >;\n            }\n          | {\n              type: \"out of standard quota\";\n              quota: Pick<\n                StandardPlanInitializationData,\n                \"marketplaceSubscriptions\"\n              >;\n            }\n          | {\n              type: \"no standard quota available\";\n              hasTrialQuota: boolean;\n            }\n          | {\n              type: \"trial available\";\n              capabilities: TrialPlanInitializationData;\n            }\n          | { type: \"trial used\" }\n          | { type: \"developer available\" }\n          | { type: \"developer used\" }\n          | { type: \"developer unavailable\" }\n          | {\n              type: \"providers and regions available\";\n              providers: CloudProvidersInfo;\n              defaultProvider: CloudProvider | undefined;\n            }\n          | { type: \"providers or regions unavailable\" }\n          | { type: \"save\"; data: CreateKafkaFormData }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          checkStandardQuota: {\n            data: never;\n          };\n          checkDeveloperAvailability: {\n            data: never;\n          };\n          fetchProvidersWithRegions: {\n            data: never;\n          };\n          standardPlan: {\n            data: StandardPlanMachineContext;\n          };\n          trialPlan: {\n            data: TrialPlanMachineContext;\n          };\n        },\n      },\n      id: \"createKafkaInstance\",\n      initial: \"loading\",\n      states: {\n        loading: {\n          description: \"Fetch the data required to drive the creation flow\",\n          tags: \"loading\",\n          initial: \"quota\",\n          states: {\n            quota: {\n              initial: \"checking standard quota\",\n              states: {\n                \"checking standard quota\": {\n                  invoke: {\n                    src: \"checkStandardQuota\",\n                    onError: [\n                      {\n                        actions: \"setStandardUnavailable\",\n                        target: \"standard\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"standard quota available\": {\n                      actions: \"setStandardAvailable\",\n                      target: \"standard\",\n                    },\n                    \"out of standard quota\": {\n                      actions: \"setStandardOutOfQuota\",\n                      target: \"standard\",\n                    },\n                    \"no standard quota available\": {\n                      target: \"checking developer availability\",\n                    },\n                  },\n                },\n                standard: {\n                  type: \"final\",\n                  always: {\n                    target: \"#createKafkaInstance.loading.fetching providers\",\n                  },\n                },\n                developer: {\n                  type: \"final\",\n                  always: {\n                    target: \"#createKafkaInstance.loading.fetching providers\",\n                  },\n                },\n                \"checking developer availability\": {\n                  invoke: {\n                    src: \"checkDeveloperAvailability\",\n                    onError: [\n                      {\n                        actions: \"setDeveloperUnavailable\",\n                        target: \"developer\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"developer used\": {\n                      actions: \"setDeveloperUsed\",\n                      target: \"developer\",\n                    },\n                    \"developer available\": {\n                      actions: \"setDeveloperAvailable\",\n                      target: \"developer\",\n                    },\n                    \"developer unavailable\": {\n                      actions: \"setDeveloperUnavailable\",\n                      target: \"developer\",\n                    },\n                  },\n                },\n              },\n            },\n            \"fetching providers\": {\n              invoke: {\n                src: \"fetchProvidersWithRegions\",\n                onError: [\n                  {\n                    actions: \"setProvidersOrRegionsUnavailable\",\n                    target: \"ready\",\n                  },\n                ],\n              },\n              on: {\n                \"providers and regions available\": {\n                  actions: \"setProviders\",\n                  target: \"ready\",\n                },\n                \"providers or regions unavailable\": {\n                  actions: \"setProvidersOrRegionsUnavailable\",\n                  target: \"ready\",\n                },\n              },\n            },\n            ready: {\n              type: \"final\",\n              entry: \"setCapabilities\",\n            },\n          },\n          onDone: [\n            {\n              cond: \"standard plan\",\n              target: \"standard plan\",\n            },\n            {\n              cond: \"developer plan\",\n              target: \"developer plan\",\n            },\n            {\n              target: \"system unavailable\",\n            },\n          ],\n        },\n        \"system unavailable\": {\n          tags: \"systemUnavailable\",\n          type: \"final\",\n        },\n        \"standard plan\": {\n          invoke: {\n            src: \"standardPlan\",\n            id: \"standardPlanService\",\n          },\n          tags: \"standardPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToStandardPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        \"developer plan\": {\n          invoke: {\n            src: \"trialPlan\",\n            id: \"trialPlanService\",\n          },\n          tags: \"trialPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToTrialPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        complete: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        setDeveloperAvailable: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"available\" as const,\n          },\n        })),\n        setDeveloperUnavailable: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"unavailable\" as const,\n          },\n        })),\n        setDeveloperUsed: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"used\" as const,\n          },\n        })),\n        setStandardAvailable: assign((_, event) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"available\" as const,\n            remainingPrepaidQuota: event.quota.remainingPrepaidQuota,\n            marketplaceSubscriptions: event.quota.marketplaceSubscriptions,\n            remainingMarketplaceQuota: event.quota.remainingMarketplaceQuota,\n          },\n        })),\n        setStandardOutOfQuota: assign((_, event) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"out-of-quota\" as const,\n            marketplaceSubscriptions: event.quota.marketplaceSubscriptions,\n            remainingMarketplaceQuota: 0,\n            remainingPrepaidQuota: 0,\n          },\n        })),\n        setStandardUnavailable: assign((_) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"instance-unavailable\" as const,\n            marketplaceSubscriptions: [],\n            remainingMarketplaceQuota: 0,\n            remainingPrepaidQuota: 0,\n          },\n        })),\n        setProviders: assign((_, event) => {\n          return {\n            providers: event.providers,\n            defaultProvider: event.defaultProvider,\n          };\n        }),\n        setProvidersOrRegionsUnavailable: assign((context) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const quota = context.quota!;\n          if (quota.plan === \"standard\") {\n            quota.instanceAvailability = \"regions-unavailable\";\n          } else {\n            quota.instanceAvailability = \"unavailable\";\n          }\n          return {\n            providers: [],\n            quota,\n          };\n        }),\n        setCapabilities: assign((context) => {\n          const { providers, defaultProvider, quota } = context;\n          if (!providers || !quota) {\n            throw new Error(\"unexpected condition, no providers or quota\");\n          }\n          if (quota.plan === \"standard\") {\n            const capabilities: StandardPlanInitializationData = {\n              plan: \"standard\",\n              availableProviders: providers,\n              defaultProvider,\n              instanceAvailability: quota.instanceAvailability,\n              marketplaceSubscriptions: quota.marketplaceSubscriptions,\n              remainingMarketplaceQuota: quota.remainingMarketplaceQuota,\n              remainingPrepaidQuota: quota.remainingPrepaidQuota,\n            };\n            return { capabilities };\n          } else {\n            const capabilities: TrialPlanInitializationData = {\n              plan: \"developer\",\n              availableProviders: providers,\n              defaultProvider,\n              instanceAvailability: quota.instanceAvailability,\n            };\n            return { capabilities };\n          }\n        }),\n        notifyCreateErrorToStandardPlan: forwardTo(\"standardPlanService\"),\n        notifyCreateErrorToTrialPlan: send(\n          (_, event) => {\n            return { type: \"createError\", error: event.error };\n          },\n          { to: \"trialPlanService\" }\n        ),\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n      },\n      guards: {\n        \"standard plan\": (context) => context.quota?.plan === \"standard\",\n        \"developer plan\": (context) => context.quota?.plan === \"developer\",\n      },\n    }\n  );\n\ntype EventTypes = Pick<\n  EventFrom<typeof CreateKafkaInstanceMachine>,\n  \"type\"\n>[\"type\"];\n\ntype EventOptions<E extends EventTypes> = Omit<\n  EventFrom<typeof CreateKafkaInstanceMachine, E>,\n  \"type\"\n>;\n\nexport type CreateKafkaInstanceServices = {\n  checkStandardQuota: (events: {\n    onOutOfQuota: (p: EventOptions<\"out of standard quota\">) => void;\n    onQuotaAvailable: (p: EventOptions<\"standard quota available\">) => void;\n    onNoQuotaAvailable: (\n      p: EventOptions<\"no standard quota available\">\n    ) => void;\n  }) => void;\n  checkDeveloperAvailability: (events: {\n    onUsed: () => void;\n    onAvailable: () => void;\n    onUnavailable: () => void;\n  }) => void;\n  fetchProvidersWithRegions: (\n    plan: \"standard\" | \"developer\",\n    events: {\n      onAvailable: (p: EventOptions<\"providers and regions available\">) => void;\n      onUnavailable: () => void;\n    }\n  ) => void;\n  getStandardSizes: (\n    provider: CloudProvider,\n    region: CloudRegion\n  ) => Promise<StandardSizes>;\n  getTrialSizes: (\n    provider: CloudProvider,\n    region: CloudRegion\n  ) => Promise<TrialSizes>;\n  onCreate: (\n    data: CreateKafkaFormData,\n    onSuccess: () => void,\n    onError: (error: CreateKafkaInstanceError) => void\n  ) => void;\n};\n\nexport function makeCreateKafkaInstanceMachine({\n  checkStandardQuota: checkStandardQuotaCb,\n  checkDeveloperAvailability: checkDeveloperAvailabilityCb,\n  fetchProvidersWithRegions: fetchProvidersWithRegionsCb,\n  getStandardSizes: getStandardSizesCb,\n  getTrialSizes: getTrialSizesCb,\n  onCreate,\n}: CreateKafkaInstanceServices) {\n  return CreateKafkaInstanceMachine.withConfig({\n    services: {\n      checkStandardQuota: () => {\n        return (send) =>\n          checkStandardQuotaCb({\n            onNoQuotaAvailable: ({ hasTrialQuota }) => {\n              send({ type: \"no standard quota available\", hasTrialQuota });\n            },\n            onOutOfQuota: ({ quota }) => {\n              send({ type: \"out of standard quota\", quota });\n            },\n            onQuotaAvailable: ({ quota }) => {\n              send({ type: \"standard quota available\", quota });\n            },\n          });\n      },\n      checkDeveloperAvailability: () => {\n        return (send) => {\n          checkDeveloperAvailabilityCb({\n            onAvailable: () => send(\"developer available\"),\n            onUsed: () => send(\"developer used\"),\n            onUnavailable: () => send(\"developer unavailable\"),\n          });\n        };\n      },\n      fetchProvidersWithRegions: (context) => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const instanceType = context.quota!.plan;\n        return (send) => {\n          fetchProvidersWithRegionsCb(instanceType, {\n            onAvailable: ({ providers, defaultProvider }) =>\n              send({\n                type: \"providers and regions available\",\n                providers,\n                defaultProvider,\n              }),\n            onUnavailable: () => send(\"providers or regions unavailable\"),\n          });\n        };\n      },\n      createInstance: (_context, event) => {\n        const form = event.data;\n\n        return (send) => {\n          function onSuccess() {\n            send(\"createSuccess\");\n          }\n\n          function onError(error: CreateKafkaInstanceError) {\n            send({ type: \"createError\", error });\n          }\n\n          onCreate(\n            {\n              plan: form.plan,\n              name: form.name,\n              provider: form.provider,\n              region: form.region,\n              sizeId: form.sizeId,\n              billing: form.billing,\n            },\n            onSuccess,\n            onError\n          );\n        };\n      },\n      standardPlan: (context) => {\n        return StandardPlanMachine.withContext({\n          capabilities: context.capabilities as StandardPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getStandardSizesCb(form.provider, form.region);\n            },\n          },\n        });\n      },\n      trialPlan: (context) => {\n        return TrialPlanMachine.withContext({\n          capabilities: context.capabilities as TrialPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getTrialSizesCb(form.provider, form.region);\n            },\n          },\n        });\n      },\n    },\n  });\n}\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { CreateKafkaInstanceServices } from \"./CreateKafkaInstanceMachine\";\nimport { makeCreateKafkaInstanceMachine } from \"./CreateKafkaInstanceMachine\";\n\nexport const CreateKafkaInstanceContext = createContext<{\n  service: ActorRefFrom<ReturnType<typeof makeCreateKafkaInstanceMachine>>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport const CreateKafkaInstanceProvider: FunctionComponent<\n  CreateKafkaInstanceServices\n> = ({\n  onCreate,\n  checkStandardQuota,\n  checkDeveloperAvailability,\n  fetchProvidersWithRegions,\n  getStandardSizes,\n  getTrialSizes,\n  children,\n}) => {\n  const service = useInterpret(\n    () =>\n      makeCreateKafkaInstanceMachine({\n        checkStandardQuota,\n        checkDeveloperAvailability,\n        fetchProvidersWithRegions,\n        getStandardSizes,\n        getTrialSizes,\n        onCreate,\n      }),\n    { devTools: true }\n  );\n  return (\n    <CreateKafkaInstanceContext.Provider value={{ service }}>\n      {children}\n    </CreateKafkaInstanceContext.Provider>\n  );\n};\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { Link } from \"react-router-dom\";\n\nexport type BillingHelpProps = {\n  type: \"rh-only\" | \"external-marketplaces\";\n  subscriptionOptionsHref: string;\n};\n\nexport const BillingHelp: VoidFunctionComponent<BillingHelpProps> = ({\n  type,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <Popover\n      aria-label={t(\"billing.field_label\")}\n      headerContent={t(\"billing.field_label\")}\n      bodyContent={\n        <Trans\n          i18nKey={\n            type === \"rh-only\"\n              ? \"billing.field_popover_rh_only\"\n              : \"billing.field_popover_external_marketplace\"\n          }\n          ns={\"create-kafka-instance\"}\n          components={[<Link to={subscriptionOptionsHref} />]}\n        />\n      }\n    >\n      <OutlinedQuestionCircleIcon />\n    </Popover>\n  );\n};\n","export const LogoAWS = new URL(\"./Logo-AWS.svg\", import.meta.url)\n  .href;\nexport const LogoAzure = new URL(\n  \"./Logo-Azure.svg\",\n  import.meta.url\n).href;\nexport const LogoGCP = new URL(\"./Logo-GCP.svg\", import.meta.url)\n  .href;\nexport const LogoRedhat = new URL(\n  \"./Logo-Redhat.svg\",\n  import.meta.url\n).href;","import type { FunctionComponent } from \"react\";\nimport { LogoAWS } from \"./images\";\n\nexport const AWSLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoAWS} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoAzure } from \"./images\";\n\nexport const AzureLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoAzure} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoGCP } from \"./images\";\n\nexport const GCPLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoGCP} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Gallery,\n  GalleryItem,\n  HelperText,\n  HelperTextItem,\n  Tile,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { MarketPlace } from \"ui-models/src/models/kafka\";\nimport { AWSLogo, AzureLogo, GCPLogo, RedhatLogo } from \"../../Logos\";\n\nexport type BillingTilesProps = {\n  value: \"prepaid\" | string | undefined;\n  hasPrepaid: boolean;\n  subscriptions: {\n    marketplace: MarketPlace;\n    subscription: string;\n    isDisabled: boolean;\n  }[];\n  isPrepaidOverQuota: boolean;\n  prepaidQuota: number;\n  isMarketplaceOverQuota: boolean;\n  marketplaceQuota: number;\n  onPrepaid: () => void;\n  onSubscription: (marketplace: MarketPlace, subscription: string) => void;\n  validated?: SelectProps[\"validated\"];\n};\nexport const BillingTiles: VoidFunctionComponent<BillingTilesProps> = ({\n  value,\n  hasPrepaid,\n  subscriptions,\n  isPrepaidOverQuota,\n  prepaidQuota,\n  isMarketplaceOverQuota,\n  marketplaceQuota,\n  onPrepaid,\n  onSubscription,\n  validated,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const marketplaces: { [key in MarketPlace]: string } = {\n    aws: t(\"billing.marketplace_aws\"),\n    azure: t(\"billing.marketplace_azure\"),\n    gcp: t(\"billing.marketplace_gcp\"),\n    rhm: t(\"billing.marketplace_rh\"),\n  };\n  return (\n    <>\n      <Flex\n        role=\"listbox\"\n        aria-label={t(\"select_billing\")}\n        direction={{ default: \"column\", md: \"row\" }}\n      >\n        {hasPrepaid && (\n          <Flex\n            flex={{ default: \"flex_1\" }}\n            direction={{ default: \"column\" }}\n            spaceItems={{ default: \"spaceItemsSm\" }}\n          >\n            <span className=\"pf-c-form__label\">\n              <span className=\"pf-c-form__label-text\">\n                {t(\"billing.prepaid\")}\n              </span>\n            </span>\n            <FlexItem flex={{ default: \"flex_1\" }}>\n              <Tile\n                className={\"pf-u-w-100\"}\n                title={t(\"billing.prepaid_option\")}\n                icon={tiles[\"rhm\"]}\n                isDisabled={isPrepaidOverQuota}\n                isStacked={true}\n                isSelected={value === \"prepaid\"}\n                onClick={onPrepaid}\n              >\n                &nbsp;\n              </Tile>\n            </FlexItem>\n            {isPrepaidOverQuota && prepaidQuota > 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.prepaid_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {isPrepaidOverQuota && prepaidQuota === 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.prepaid_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </Flex>\n        )}\n        {subscriptions.length > 0 && (\n          <Flex\n            flex={{ default: \"flex_1\" }}\n            direction={{ default: \"column\" }}\n            spaceItems={{ default: \"spaceItemsSm\" }}\n          >\n            {hasPrepaid && (\n              <span className=\"pf-c-form__label\">\n                <span className=\"pf-c-form__label-text\">\n                  {t(\"billing.marketplace\")}\n                </span>\n              </span>\n            )}\n            <Gallery hasGutter={true}>\n              {subscriptions.map(\n                ({ marketplace, subscription, isDisabled }) => (\n                  <GalleryItem key={`tile-${subscription}`}>\n                    <Tile\n                      className={\"pf-u-w-100\"}\n                      title={marketplaces[marketplace]}\n                      icon={tiles[marketplace]}\n                      isStacked={true}\n                      isSelected={value === subscription}\n                      isDisabled={isDisabled || isMarketplaceOverQuota}\n                      onClick={() => onSubscription(marketplace, subscription)}\n                    >\n                      {subscription}\n                    </Tile>\n                  </GalleryItem>\n                )\n              )}\n            </Gallery>\n            {isMarketplaceOverQuota && marketplaceQuota > 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.marketplace_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {isMarketplaceOverQuota && marketplaceQuota === 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.marketplace_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </Flex>\n        )}\n      </Flex>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-billing-option\"\n        name=\"billing\"\n        validated={validated}\n        onChange={(value) => {\n          if (value === \"prepaid\") {\n            onPrepaid();\n          } else {\n            const s = subscriptions.find((s) => s.marketplace === value);\n            if (s) {\n              onSubscription(s.marketplace, s.subscription);\n            }\n          }\n        }}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_billing\")}\n          />,\n          hasPrepaid ? (\n            <FormSelectOption\n              key={\"prepaid\"}\n              value={\"prepaid\"}\n              label={`prepaid`}\n            />\n          ) : null,\n          subscriptions.map(({ marketplace, subscription, isDisabled }) => {\n            return (\n              <FormSelectOption\n                key={`select-option-${subscription}`}\n                value={subscription}\n                label={`${marketplace} - ${subscription}`}\n                isDisabled={isDisabled}\n              />\n            );\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n\nconst tiles: { [id in MarketPlace]: JSX.Element } = {\n  aws: <AWSLogo />,\n  gcp: <GCPLogo />,\n  azure: <AzureLogo />,\n  rhm: <RedhatLogo />,\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoRedhat } from \"./images\";\n\nexport const RedhatLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoRedhat} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Skeleton,\n  Tile,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { CloudProvider } from \"ui-models/src/models/kafka\";\nimport { AWSLogo, AzureLogo, GCPLogo } from \"../../Logos\";\nimport type { CloudProviderInfo } from \"../types\";\n\nexport type CloudProvidersTilesProps = {\n  providers: (CloudProviderInfo & { isDisabled?: boolean })[];\n  value: CloudProvider | undefined;\n  onChange: (provider: CloudProvider) => void;\n  isDisabled: boolean;\n  validated?: SelectProps[\"validated\"];\n};\nexport const CloudProvidersTiles: VoidFunctionComponent<\n  CloudProvidersTilesProps\n> = ({ providers, value, onChange, isDisabled, validated }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      {providers.length === 0 && (\n        <Skeleton\n          className=\"pf-m-text-4xl\"\n          screenreaderText=\"Loading contents\"\n        />\n      )}\n      <div role=\"listbox\" aria-label={t(\"select_cloud_provider\")}>\n        <Flex\n          justifyContent={{ default: \"justifyContentSpaceBetween\" }}\n          spacer={{ default: \"spacerNone\" }}\n          spaceItems={{ default: \"spaceItemsXs\" }}\n        >\n          {providers.map(\n            ({ id, displayName, isDisabled: providerDisabled }) => (\n              <FlexItem grow={{ default: \"grow\" }} key={id}>\n                <Tile\n                  className={\"pf-u-w-100\"}\n                  title={displayName}\n                  icon={tiles[id]}\n                  isStacked={true}\n                  isSelected={value === id}\n                  isDisabled={providerDisabled || isDisabled}\n                  onClick={() => onChange(id)}\n                >\n                  {providerDisabled &&\n                    t(\"billing.provider_incompatible_with_current_billing\")}\n                  &nbsp;\n                </Tile>\n              </FlexItem>\n            )\n          )}\n        </Flex>\n      </div>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-cloud-provider-option\"\n        name=\"cloud-provider\"\n        isDisabled={isDisabled}\n        validated={validated}\n        onChange={(value) => onChange(value as CloudProvider)}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_cloud_provider\")}\n          />,\n          providers.map(({ id, displayName }, index) => {\n            return (\n              <FormSelectOption key={index} value={id} label={displayName} />\n            );\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n\nconst tiles: { [id in CloudProvider]: JSX.Element } = {\n  aws: <AWSLogo />,\n  gcp: <GCPLogo />,\n  azure: <AzureLogo />,\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { CloudRegion } from \"ui-models/src/models/kafka\";\nimport type { RegionInfo } from \"../types\";\n\nexport type CloudRegionProps = {\n  value: CloudRegion | undefined;\n  regions: RegionInfo[] | undefined;\n  isDisabled: boolean;\n  isSizeUnavailable: boolean;\n  onChange: (region: string) => void;\n  validated?: SelectProps[\"validated\"];\n  placeholderText: SelectProps[\"placeholderText\"];\n};\n\nexport const CloudRegionSelect: FunctionComponent<CloudRegionProps> = ({\n  value,\n  regions,\n  isDisabled,\n  isSizeUnavailable,\n  validated,\n  onChange,\n  placeholderText,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, value) => {\n    setIsOpen((prevState) => !prevState);\n    onChange(value as string);\n  };\n\n  const makeRegionOptions = regions?.map(\n    ({ id, displayName, isDisabled }, index) => (\n      <SelectOption\n        isDisabled={isDisabled}\n        disabled={isDisabled}\n        key={index}\n        value={id}\n        description={\n          isDisabled\n            ? t(\"create-kafka-instance:temporarily_unavailable\")\n            : undefined\n        }\n      >\n        {displayName}\n      </SelectOption>\n    )\n  );\n\n  return (\n    <Select\n      id=\"form-cloud-region-option\"\n      toggleId=\"form-cloud-region-option\"\n      name=\"form-cloud-region-option\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      validated={validated}\n      selections={value}\n      isOpen={isOpen}\n      isDisabled={isDisabled}\n      aria-describedby={\n        isSizeUnavailable\n          ? \"instance-size-unavailable\"\n          : \"form-cloud-region-option\"\n      }\n      placeholderText={placeholderText}\n    >\n      {makeRegionOptions}\n    </Select>\n  );\n};\n","import {\n  FormGroup,\n  ToggleGroup,\n  ToggleGroupItem,\n  Tooltip,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\n\nexport type FieldAZProps = {\n  value: AZ | undefined;\n  validity: \"valid\" | \"required\";\n  options: AZ | \"all\";\n  isDisabled: boolean;\n  onChange: (value: AZ) => void;\n};\nexport const FieldAZ: VoidFunctionComponent<FieldAZProps> = ({\n  value,\n  options,\n  validity,\n  isDisabled,\n  onChange,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const validated = validity !== \"valid\" ? \"error\" : \"default\";\n  const disableAZTooltip = options === \"all\" || isDisabled;\n  const enabledZone = options === \"multi\" ? \"multi\" : \"single\";\n  const trigger = disableAZTooltip ? \"manual\" : undefined;\n  return (\n    <FormGroup\n      label={t(\"availability_zones\")}\n      fieldId=\"availability-zones\"\n      validated={validated}\n      helperTextInvalid={t(\"common:required\")}\n      data-testid={\"az\"}\n    >\n      <ToggleGroup aria-label={t(\"availability_zone_selection\")}>\n        <Tooltip\n          content={t(\"availability_zones_tooltip_message\", {\n            enabledZone,\n          })}\n          trigger={trigger}\n        >\n          <ToggleGroupItem\n            text={t(\"az.single\")}\n            value={\"single\"}\n            isDisabled={isDisabled || options === \"multi\"}\n            buttonId=\"single\"\n            isSelected={value === \"single\"}\n            onChange={() => onChange(\"single\")}\n          />\n        </Tooltip>\n\n        <Tooltip\n          trigger={trigger}\n          content={t(\"availability_zones_tooltip_message\", {\n            enabledZone,\n          })}\n        >\n          <ToggleGroupItem\n            text={t(\"az.multi\")}\n            value=\"multi\"\n            buttonId=\"multi\"\n            isDisabled={isDisabled || options === \"single\"}\n            isSelected={value === \"multi\"}\n            onChange={() => onChange(\"multi\")}\n          />\n        </Tooltip>\n      </ToggleGroup>\n    </FormGroup>\n  );\n};\n","import { FormGroup } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { BillingHelpProps } from \"./BillingHelp\";\nimport { BillingHelp } from \"./BillingHelp\";\nimport type { BillingTilesProps } from \"./BillingTiles\";\nimport { BillingTiles } from \"./BillingTiles\";\n\nexport type FieldBillingTilesProps = {\n  isValid: boolean;\n  billingType: BillingHelpProps[\"type\"];\n  subscriptionOptionsHref: BillingHelpProps[\"subscriptionOptionsHref\"];\n} & Omit<BillingTilesProps, \"validated\">;\nexport const FieldBillingTiles: VoidFunctionComponent<\n  FieldBillingTilesProps\n> = ({\n  value,\n  hasPrepaid,\n  subscriptions,\n  isPrepaidOverQuota,\n  prepaidQuota,\n  isMarketplaceOverQuota,\n  marketplaceQuota,\n  onPrepaid,\n  onSubscription,\n  isValid,\n  billingType,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const validated = !isValid ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={\n        <>\n          {t(\"billing.field_label\")}{\" \"}\n          <BillingHelp\n            type={billingType}\n            subscriptionOptionsHref={subscriptionOptionsHref}\n          />\n        </>\n      }\n      fieldId=\"form-billing-option\"\n      validated={validated}\n      helperTextInvalid={\n        isPrepaidOverQuota || isMarketplaceOverQuota\n          ? \" \"\n          : t(\"common:required\")\n      }\n      isRequired\n    >\n      <BillingTiles\n        value={value}\n        hasPrepaid={hasPrepaid}\n        subscriptions={subscriptions}\n        isPrepaidOverQuota={isPrepaidOverQuota}\n        prepaidQuota={prepaidQuota}\n        isMarketplaceOverQuota={isMarketplaceOverQuota}\n        marketplaceQuota={marketplaceQuota}\n        onPrepaid={onPrepaid}\n        onSubscription={onSubscription}\n        validated={validated}\n      />\n    </FormGroup>\n  );\n};\n","import { FormGroup } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { CloudProvidersTilesProps } from \"./CloudProviderTiles\";\nimport { CloudProvidersTiles } from \"./CloudProviderTiles\";\n\nexport type FieldCloudProviderProps = {\n  isValid: boolean;\n} & Omit<CloudProvidersTilesProps, \"validated\">;\nexport const FieldCloudProvider: VoidFunctionComponent<\n  FieldCloudProviderProps\n> = ({ value, providers, onChange, isDisabled, isValid }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const validated = !isValid ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={t(\"cloud_provider\")}\n      fieldId=\"form-cloud-provider-option\"\n      validated={validated}\n      helperTextInvalid={t(\"common:required\")}\n      isRequired\n    >\n      <CloudProvidersTiles\n        providers={providers}\n        value={value}\n        onChange={onChange}\n        isDisabled={isDisabled}\n        validated={validated}\n      />\n    </FormGroup>\n  );\n};\n","import { FormGroup, HelperText, HelperTextItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { CloudRegionProps } from \"./CloudRegionsSelect\";\nimport { CloudRegionSelect } from \"./CloudRegionsSelect\";\n\nexport type FieldCloudRegionProps = {\n  validity: \"valid\" | \"region-unavailable\" | \"required\";\n} & Omit<CloudRegionProps, \"validated\" | \"placeholderText\">;\nexport const FieldCloudRegion: VoidFunctionComponent<FieldCloudRegionProps> = ({\n  value,\n  regions,\n  onChange,\n  isDisabled,\n  isSizeUnavailable,\n  validity,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const allRegionsUnavailable = regions\n    ? regions.every(({ isDisabled }) => isDisabled === true) ||\n      regions.length === 0\n    : true;\n\n  const disableControl =\n    isDisabled || allRegionsUnavailable || regions?.length === 0;\n\n  const someRegionsUnavailable =\n    !allRegionsUnavailable &&\n    regions?.some(({ isDisabled }) => isDisabled === true);\n\n  const validation =\n    validity !== \"valid\"\n      ? value !== undefined\n        ? \"error\"\n        : \"default\"\n      : \"default\";\n\n  const placeholder =\n    allRegionsUnavailable && regions\n      ? t(\"regions_temporarily_unavailable\")\n      : t(\"select_region\");\n\n  const helperTextInvalid = isDisabled ? undefined : validity ===\n    \"region-unavailable\" ? (\n    <HelperText className={\"pf-c-form__helper-text\"}>\n      <HelperTextItem variant=\"error\" hasIcon>\n        {t(\"form_errors.region_unavailable_message\")}\n      </HelperTextItem>\n    </HelperText>\n  ) : allRegionsUnavailable ? (\n    t(\"all_region_unavailable_helper_text\")\n  ) : (\n    t(\"common:required\")\n  );\n\n  return (\n    <FormGroup\n      data-testid=\"cloudRegion\"\n      label={t(\"cloud_region\")}\n      fieldId=\"form-cloud-region-option\"\n      isRequired\n      validated={validation}\n      helperText={\n        regions && (allRegionsUnavailable || someRegionsUnavailable) ? (\n          <HelperText className={\"pf-c-form__helper-text\"}>\n            <HelperTextItem\n              variant={someRegionsUnavailable ? \"warning\" : \"error\"}\n              hasIcon\n            >\n              {someRegionsUnavailable\n                ? t(\"some_region_unavailable_helper_text\")\n                : t(\"all_region_unavailable_helper_text\")}\n            </HelperTextItem>\n          </HelperText>\n        ) : undefined\n      }\n      helperTextInvalid={helperTextInvalid}\n    >\n      <CloudRegionSelect\n        value={value}\n        regions={regions}\n        onChange={onChange}\n        isDisabled={disableControl}\n        isSizeUnavailable={isSizeUnavailable}\n        validated={validation}\n        placeholderText={placeholder}\n      />\n    </FormGroup>\n  );\n};\n","import { FormGroup, TextInput } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type FieldInstanceNameProps = {\n  value: string;\n  validity: \"valid\" | \"required\" | \"taken\" | \"invalid\";\n  isDisabled: boolean;\n  onChange: (value: string) => void;\n};\nexport const FieldInstanceName: VoidFunctionComponent<\n  FieldInstanceNameProps\n> = ({ value, validity, isDisabled, onChange }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const validation = validity !== \"valid\" ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={t(\"instance_name\")}\n      helperText={t(\"create_instance_name_helper_text\")}\n      helperTextInvalid={\n        validity === \"taken\"\n          ? t(\"create_instance_name_helper_text_name_taken\", { name: value })\n          : validity === \"invalid\"\n          ? t(\"create_instance_name_helper_text\")\n          : t(\"common:required\")\n      }\n      isRequired\n      validated={validation}\n      fieldId=\"form-instance-name\"\n    >\n      <TextInput\n        id=\"form-instance-name\"\n        isRequired\n        validated={validation}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        autoFocus={true}\n        isDisabled={isDisabled}\n      />\n    </FormGroup>\n  );\n};\n","import {\n  Alert,\n  AlertVariant,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { ExternalLink } from \"@rhoas/app-services-ui-components\";\n\nexport const FieldSizeHelperText: VoidFunctionComponent<{\n  remainingQuota: number | undefined;\n  isPreview: boolean;\n  isUnavailable: boolean;\n  isError: boolean;\n}> = ({ remainingQuota, isPreview, isUnavailable, isError }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <HelperText className={\"pf-c-form__helper-text\"}>\n      {remainingQuota && (\n        <HelperTextItem>\n          {t(\"standard_kafka_streaming_unit\", {\n            count: remainingQuota,\n          })}\n        </HelperTextItem>\n      )}\n\n      {isUnavailable && (\n        <Alert\n          id=\"instance-size-unavailable\"\n          aria-live=\"polite\"\n          role={\"alert\"}\n          className=\"pf-u-mb-md pf-u-mt-lg\"\n          variant={isError ? \"danger\" : \"warning\"}\n          title={t(\"size_unavailable_title\")}\n          isInline\n        >\n          {t(\"size_unavailable_message\")}\n        </Alert>\n      )}\n      {isPreview && (\n        <Alert\n          aria-live=\"polite\"\n          role={\"alert\"}\n          className={`pf-u-mb-md ${isUnavailable ? \"\" : \"pf-u-mt-lg\"}`}\n          variant={AlertVariant.info}\n          title={t(\"size_preview_title\")}\n          isInline\n        >\n          <Trans\n            ns={\"create-kafka-instance\"}\n            i18nKey={\"size_preview_message\"}\n            components={[\n              <ExternalLink\n                href={\"https://access.redhat.com/articles/6473891\"}\n                testId={\"size-preview-support-link\"}\n                className={\"pf-u-ml-xs\"}\n              />,\n            ]}\n          />\n        </Alert>\n      )}\n    </HelperText>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const FieldSizeHelperTextOverQuota: VoidFunctionComponent<{\n  remainingQuota: number;\n  onClick: () => void;\n}> = ({ remainingQuota, onClick }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      <HelperText className={\"pf-c-form__helper-text\"}>\n        <HelperTextItem variant=\"error\" hasIcon>\n          {t(\"standard_kafka_streaming_unit\", {\n            count: remainingQuota,\n          })}\n        </HelperTextItem>\n      </HelperText>\n      <HelperText>\n        <HelperTextItem>\n          <Button\n            className=\"pf-c-form__helper-text\"\n            variant={ButtonVariant.link}\n            isInline\n            onClick={onClick}\n          >\n            {t(\"standard_kafka_size_description\")}\n          </Button>\n        </HelperTextItem>\n      </HelperText>\n    </>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const FieldSizeHelperTextTrial: VoidFunctionComponent<{\n  onClick: () => void;\n}> = ({ onClick }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      <HelperText className={\"pf-c-form__helper-text\"}>\n        <HelperTextItem>{t(\"trial_kafka_size_description\")}</HelperTextItem>\n      </HelperText>\n      <HelperText>\n        <HelperTextItem>\n          <Button\n            className=\"pf-c-form__helper-text\"\n            variant={ButtonVariant.link}\n            isInline\n            onClick={onClick}\n          >\n            {t(\"learn_about_sizes\")}\n          </Button>\n        </HelperTextItem>\n      </HelperText>\n    </>\n  );\n};\n","import type { SliderProps } from \"@patternfly/react-core\";\nimport { Grid, GridItem, Skeleton, Slider } from \"@patternfly/react-core\";\nimport {\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { Size } from \"ui-models/src/models/kafka\";\nimport { FieldSizeHelperText } from \"./FieldSizeHelperText\";\nimport { FieldSizeHelperTextOverQuota } from \"./FieldSizeHelperTextOverQuota\";\nimport { FieldSizeHelperTextTrial } from \"./FieldSizeHelperTextTrial\";\n\nexport type FieldSizeProps = {\n  value: number | undefined;\n  sizes: Size[] | undefined;\n  remainingQuota: number | undefined;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isError: boolean;\n  isLoadingError: boolean;\n  validity: \"valid\" | \"required\" | \"out-of-quota\" | \"developer\" | \"disabled\";\n  onChange: (size: Size) => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n};\nexport const FieldSize: VoidFunctionComponent<FieldSizeProps> = ({\n  value,\n  sizes,\n  remainingQuota,\n  isDisabled,\n  isLoading,\n  isError,\n  isLoadingError,\n  validity,\n  onChange,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const isRequired = validity !== \"developer\";\n\n  const helperTextTrial = (\n    <FieldSizeHelperTextTrial onClick={onLearnMoreAboutSizes} />\n  );\n\n  if (isLoading || isLoadingError) {\n    return (\n      <FormGroupWithPopover\n        labelHead={t(\"common:size\")}\n        fieldId=\"streaming-size\"\n        fieldLabel={t(\"common:size\")}\n        labelBody={t(\"size_help_content\")}\n        buttonAriaLabel={t(\"size_field_aria\")}\n        isRequired={isRequired}\n        helperText={\n          <Grid sm={6} lg={12} hasGutter data-testid={\"size-loading\"}>\n            <GridItem>\n              <Skeleton width={\"50%\"} fontSize={\"3xl\"} />\n            </GridItem>\n            <GridItem>\n              <Skeleton width={\"40%\"} fontSize={\"sm\"} />\n            </GridItem>\n          </Grid>\n        }\n        validated={isLoadingError ? \"error\" : \"default\"}\n        helperTextInvalid={t(\"sizes_error\")}\n      />\n    );\n  }\n\n  if (sizes === undefined) {\n    return (\n      <FormGroupWithPopover\n        labelHead={t(\"common:size\")}\n        fieldId=\"streaming-size\"\n        fieldLabel={t(\"common:size\")}\n        labelBody={t(\"size_help_content\")}\n        buttonAriaLabel={t(\"size_field_aria\")}\n        isRequired={isRequired}\n        helperText={\n          validity === \"developer\" ? helperTextTrial : t(\"sizes_missing\")\n        }\n      >\n        <div data-testid={\"size-slider\"} />\n      </FormGroupWithPopover>\n    );\n  }\n\n  const valueIndex =\n    validity !== \"developer\"\n      ? sizes.findIndex((size) => size.quota === value)\n      : -1;\n\n  const steps: SliderProps[\"customSteps\"] = sizes.map((s, index) => ({\n    value: index,\n    label: `${s.quota}`,\n  }));\n\n  const isUnavailable = sizes[valueIndex]?.isDisabled;\n\n  const helperText = (\n    <FieldSizeHelperText\n      remainingQuota={remainingQuota}\n      isPreview={sizes[valueIndex]?.status === \"preview\"}\n      isUnavailable={isUnavailable}\n      isError={isError}\n    />\n  );\n  const helperTextOverQuota = remainingQuota && (\n    <FieldSizeHelperTextOverQuota\n      remainingQuota={remainingQuota}\n      onClick={onLearnHowToAddStreamingUnits}\n    />\n  );\n\n  const handleChange = (index: number) => {\n    onChange(sizes[index]);\n  };\n\n  const validation =\n    remainingQuota &&\n    value &&\n    (validity !== \"valid\" || remainingQuota < value) &&\n    validity !== \"developer\" &&\n    isError\n      ? \"error\"\n      : \"default\";\n\n  return (\n    <FormGroupWithPopover\n      labelHead={t(\"common:size\")}\n      fieldId=\"streaming-size\"\n      fieldLabel={t(\"common:size\")}\n      labelBody={t(\"size_help_content\")}\n      buttonAriaLabel={t(\"size_field_aria\")}\n      isRequired={isRequired}\n      validated={validation}\n      helperText={validity !== \"developer\" ? helperText : helperTextTrial}\n      helperTextInvalid={\n        validity === \"out-of-quota\" ? helperTextOverQuota : helperText\n      }\n    >\n      <div className=\"pf-c-input-group pf-u-w-50\">\n        <Slider\n          id=\"streaming-size\"\n          data-testid={\"size-slider\"}\n          max={steps.length - 1}\n          value={valueIndex}\n          showTicks={true}\n          customSteps={steps}\n          className=\"pf-u-w-100\"\n          isDisabled={isDisabled || validity === \"developer\"}\n          onChange={handleChange}\n          aria-describedby={\n            isUnavailable ? \"instance-size-unavailable\" : \"streaming-size\"\n          }\n        />\n        <span className=\"pf-c-input-group__text pf-m-plain pf-u-text-nowrap\">\n          {t(\"streaming_unit\")}\n        </span>\n      </div>\n    </FormGroupWithPopover>\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type {\n  CreateDedicatedKafkaInstanceError,\n  CreateKafkaInstanceError,\n} from \"../types\";\n\nexport type FormAlertsProps = {\n  error:\n    | CreateKafkaInstanceError\n    | CreateDedicatedKafkaInstanceError\n    | \"form-invalid\"\n    | undefined;\n  onClickContactUS: () => void;\n};\n\nexport const FormAlerts: VoidFunctionComponent<FormAlertsProps> = ({\n  error,\n  onClickContactUS,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup aria-live=\"assertive\">\n      {(() => {\n        switch (error) {\n          case \"form-invalid\":\n          case \"name-taken\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.form_invalid\")}\n                isInline\n              />\n            );\n\n          case \"insufficient-quota\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.out_of_quota_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"form_errors.out_of_quota_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-contact-us\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickContactUS}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"developer-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.trial_unavailable_title\")}\n                isInline\n              >\n                {t(\"form_errors.trial_unavailable_message\")}\n              </Alert>\n            );\n          case \"region-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.region_unavailable_title\")}\n                isInline\n              >\n                {t(\"form_errors.region_unavailable_message\")}\n              </Alert>\n            );\n          case \"unknown\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.unknown_error_title\")}\n                isInline\n              >\n                {t(\"form_errors.unknown_error_message\")}\n              </Alert>\n            );\n        }\n        return null;\n      })()}\n    </AlertGroup>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\n\nimport { ClockIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { MarketplaceSubscription } from \"ui-models/src/models/kafka\";\nimport type { BillingHelpProps } from \"./BillingHelp\";\nimport { BillingHelp } from \"./BillingHelp\";\n\nexport type InstanceInfoProps = {\n  isTrial: boolean;\n  onClickQuickStart: () => void;\n\n  trialDurationInHours: number | undefined;\n  ingress: number;\n  egress: number;\n  /**\n   * Max storage in GiB\n   */\n  storage: number;\n  maxPartitions: number;\n  connections: number;\n  /**\n   * Max connections/second\n   */\n  connectionRate: number;\n  /**\n   * Message size in MiB\n   */\n  messageSize: number;\n  streamingUnits: string | undefined;\n\n  billing:\n    | ({\n        value: \"prepaid\" | \"dedicated\" | MarketplaceSubscription;\n      } & BillingHelpProps)\n    | undefined;\n};\n\nexport const InstanceInfo: VoidFunctionComponent<InstanceInfoProps> = ({\n  isTrial,\n  trialDurationInHours,\n  ingress,\n  egress,\n  storage,\n  maxPartitions,\n  connections,\n  connectionRate,\n  messageSize,\n  onClickQuickStart,\n  streamingUnits,\n  billing,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <Stack hasGutter data-testid={\"instance-info\"}>\n      <StackItem>\n        <Card isFlat>\n          <CardTitle component=\"h2\">{t(\"instance_information\")}</CardTitle>\n          <CardBody>\n            <DescriptionList isCompact>\n              <DescriptionListGroup>\n                <Grid sm={6} lg={12} hasGutter>\n                  {!isTrial && (\n                    <GridItem data-testid={\"instance-size\"}>\n                      <DescriptionListTerm>\n                        {t(\"common:size\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"stream_unit_value\", { size: streamingUnits })}\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  {isTrial && (\n                    <GridItem>\n                      <DescriptionListTerm>\n                        {t(\"kafka:duration\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        <ClockIcon color=\"var(--pf-global--info-color--100)\" />{\" \"}\n                        {t(\"duration_value\", {\n                          value: trialDurationInHours,\n                        })}\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:ingress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"ingress_value\", {\n                        value: ingress,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:egress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"egress_value\", {\n                        value: egress,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:storage\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"storage_value\", {\n                        value: storage,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:partitions\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"partitions_value\", {\n                        value: maxPartitions,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:client_connections\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"client_connections_value\", {\n                        value: connections,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:connection_rate\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"connection_rate_value\", {\n                        value: connectionRate,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:message_size\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"message_size_value\", {\n                        value: messageSize,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  {billing && (\n                    <GridItem>\n                      <DescriptionListTerm>\n                        {t(\"billing.field_label\")}&nbsp;\n                        <BillingHelp\n                          type={billing.type}\n                          subscriptionOptionsHref={\n                            billing.subscriptionOptionsHref\n                          }\n                        />\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {(() => {\n                          if (billing.value === \"prepaid\") {\n                            return t(\"billing.prepaid_option\");\n                          } else if (billing.value === \"dedicated\") {\n                            return t(\"billing.dedicated_option\");\n                          }\n                          switch (billing.value.marketplace) {\n                            case \"aws\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_aws\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                            case \"gcp\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_gcp\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                            case \"azure\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_azure\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                            case \"rhm\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_rh\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                          }\n                        })()}\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                </Grid>\n              </DescriptionListGroup>\n            </DescriptionList>\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem>\n        <Card isFlat isCompact>\n          <CardTitle component=\"h2\">{t(\"quick_start_guide_title\")}</CardTitle>\n          <CardBody>\n            <Button\n              isSmall\n              isInline\n              variant={ButtonVariant.link}\n              onClick={onClickQuickStart}\n            >\n              {t(\"quick_start_guide_message_exp\")}\n            </Button>\n          </CardBody>\n        </Card>\n      </StackItem>\n    </Stack>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Grid,\n  GridItem,\n  Skeleton,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\nimport { ClockIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type InstanceInfoSkeletonProps = {\n  isTrial: boolean;\n  onClickQuickStart: () => void;\n};\n\nexport const InstanceInfoSkeleton: VoidFunctionComponent<\n  InstanceInfoSkeletonProps\n> = ({ isTrial, onClickQuickStart }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <Stack hasGutter data-testid={\"instance-info\"}>\n      <StackItem>\n        <Card isFlat>\n          <CardTitle component=\"h2\">{t(\"instance_information\")}</CardTitle>\n          <CardBody>\n            <DescriptionList isCompact>\n              <DescriptionListGroup>\n                <Grid sm={6} lg={12} hasGutter>\n                  {!isTrial && (\n                    <GridItem data-testid={\"instance-size\"}>\n                      <DescriptionListTerm>\n                        {t(\"common:size\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        <Skeleton\n                          width=\"35%\"\n                          screenreaderText=\"Loading contents\"\n                        />\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  {isTrial && (\n                    <GridItem>\n                      <DescriptionListTerm>\n                        {t(\"kafka:duration\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        <ClockIcon color=\"var(--pf-global--info-color--100)\" />{\" \"}\n                        <Skeleton\n                          width=\"35%\"\n                          screenreaderText=\"Loading contents\"\n                        />\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:ingress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"75%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:egress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"66%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:storage\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"66%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:partitions\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"50%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:client_connections\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"33%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:connection_rate\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"25%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:message_size\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"55%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                </Grid>\n              </DescriptionListGroup>\n            </DescriptionList>\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem>\n        <Card isFlat isCompact>\n          <CardTitle component=\"h2\">{t(\"quick_start_guide_title\")}</CardTitle>\n          <CardBody>\n            <Button\n              isSmall\n              isInline\n              variant={ButtonVariant.link}\n              onClick={onClickQuickStart}\n            >\n              {t(\"quick_start_guide_message_exp\")}\n            </Button>\n          </CardBody>\n        </Card>\n      </StackItem>\n    </Stack>\n  );\n};\n","import { Alert, AlertVariant, Spinner } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ModalAlertsLoading: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <Alert\n      role={\"alert\"}\n      className=\"pf-u-mb-md\"\n      variant={AlertVariant.info}\n      title={t(\"checking_instance_title\")}\n      isInline\n      customIcon={\n        <Spinner size=\"md\" aria-valuetext={t(\"checking_instance_message\")} />\n      }\n    />\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { StandardPlanAvailability } from \"../types\";\n\nexport type ModalAlertsStandardPlanProps = {\n  instanceAvailability: StandardPlanAvailability;\n  onClickContactUs: () => void;\n};\n\nexport const ModalAlertsStandardPlan: VoidFunctionComponent<\n  ModalAlertsStandardPlanProps\n> = ({ instanceAvailability, onClickContactUs }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup>\n      {(() => {\n        switch (instanceAvailability) {\n          case \"out-of-quota\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.out_of_quota_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"modal_alerts.out_of_quota_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-contact-us\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickContactUs}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"regions-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.instance_unavailable_title\")}\n                isInline\n              >\n                {t(\"modal_alerts.regions_unavailable_message\")}\n              </Alert>\n            );\n          case \"instance-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.instance_unavailable_title\")}\n                isInline\n              >\n                {t(\"modal_alerts.instance_unavailable_message\")}\n              </Alert>\n            );\n          case \"available\":\n            return null;\n        }\n      })()}\n    </AlertGroup>\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DedicatedPlanAvailability } from \"../types\";\n\nexport type ModalAlertsDedicatedPlanProps = {\n  instanceAvailability: DedicatedPlanAvailability;\n  onClickContactUs: () => void;\n};\n\nexport const ModalAlertsDedicatedPlan: VoidFunctionComponent<\n  ModalAlertsDedicatedPlanProps\n> = ({ instanceAvailability, onClickContactUs }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup>\n      {(() => {\n        switch (instanceAvailability) {\n          case \"out-of-quota\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.out_of_quota_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"modal_alerts.out_of_quota_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-contact-us\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickContactUs}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"clusters-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.cluster_unavailable_title\")}\n                isInline\n              >\n                {t(\"modal_alerts.cluster_unavailable_message\")}\n              </Alert>\n            );\n          case \"available\":\n            return null;\n        }\n      })()}\n    </AlertGroup>\n  );\n};\n","import { Alert, AlertVariant } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ModalAlertsSystemUnavailable: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <Alert\n      role={\"alert\"}\n      className=\"pf-u-mb-md\"\n      variant={AlertVariant.warning}\n      title={t(\"modal_alerts.system_unavailable_title\")}\n      isInline\n    >\n      {t(\"modal_alerts.system_unavailable_message\")}\n    </Alert>\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  Spinner,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { TrialPlanAvailability } from \"../types\";\n\nexport type ModalAlertsTrialPlanProps = {\n  instanceAvailability: TrialPlanAvailability;\n  trialDurationInHours: number | undefined;\n  onClickKafkaOverview: () => void;\n};\n\nexport const ModalAlertsTrialPlan: VoidFunctionComponent<\n  ModalAlertsTrialPlanProps\n> = ({ instanceAvailability, trialDurationInHours, onClickKafkaOverview }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup>\n      {(() => {\n        switch (instanceAvailability) {\n          case \"unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.trial_unavailable_title\")}\n                isInline\n              >\n                {t(\"modal_alerts.trial_unavailable_message\")}\n              </Alert>\n            );\n          case \"used\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.trial_used_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"modal_alerts.trial_used_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-overview\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickKafkaOverview}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"available\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.info}\n                title={t(\"modal_alerts.trial_available_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey=\"modal_alerts.trial_available_message\"\n                  components={[\n                    <Button\n                      key=\"btn-pricing-purchasing\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickKafkaOverview}\n                      isInline\n                    />,\n                    trialDurationInHours ? <></> : <Spinner size={\"sm\"} />,\n                  ]}\n                  values={{\n                    time: trialDurationInHours,\n                  }}\n                />\n              </Alert>\n            );\n        }\n      })()}\n    </AlertGroup>\n  );\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { FieldSizeProps } from \"./components\";\nimport {\n  FieldAZ,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldInstanceName,\n  FieldSize,\n  InstanceInfoSkeleton,\n} from \"./components\";\n\nexport type LoadingFormProps = {\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n};\n\nexport const LoadingForm: VoidFunctionComponent<LoadingFormProps> = ({\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n}) => {\n  return (\n    <>\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <Form onSubmit={() => false}>\n            <DisabledFieldInstanceName />\n            <DisabledFieldCloudProvider />\n            <DisabledFieldCloudRegion />\n            <DisabledFieldAZ />\n            <DisabledFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          <InstanceInfoSkeleton\n            isTrial={false}\n            onClickQuickStart={onClickQuickStart}\n          />\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const DisabledFieldInstanceName: VoidFunctionComponent = () => {\n  return (\n    <FieldInstanceName\n      value={\"\"}\n      validity={\"valid\"}\n      isDisabled={true}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldCloudProvider: VoidFunctionComponent = () => {\n  return (\n    <FieldCloudProvider\n      isValid={true}\n      providers={[]}\n      value={undefined}\n      isDisabled={true}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldCloudRegion: VoidFunctionComponent = () => {\n  return (\n    <FieldCloudRegion\n      validity={\"valid\"}\n      regions={undefined}\n      value={undefined}\n      isDisabled={true}\n      isSizeUnavailable={false}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldAZ: VoidFunctionComponent = () => {\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={true}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  return (\n    <FieldSize\n      value={1}\n      sizes={undefined}\n      //TODO remainingQuota={capabilities.remainingQuota || 0}\n      remainingQuota={0}\n      isDisabled={true}\n      isLoading={true}\n      isError={false}\n      isLoadingError={false}\n      validity={\"disabled\"}\n      onChange={() => false}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n","import { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport { MarketplaceSubscription, Size } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateDedicatedKafkaFormData,\n  CreateDedicatedKafkaInstanceError,\n  DedicatedPlanInitializationData,\n  StandardSizes,\n} from \"../types\";\n\nexport type DedicatedPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: DedicatedPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    cluster?: DedicatedCluster;\n    size?: Size;\n    billing?: \"prepaid\";\n  };\n\n  sizes: StandardSizes | undefined;\n\n  creationError: CreateDedicatedKafkaInstanceError | undefined;\n};\n\nexport const DedicatedPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5SwC4EMB2E0CcIAUAbTAWTQGMALASwzADoA3MHagMwE8BBRta4gEb9qKDgGJEoAA4B7WCOoyMkkAA9EAZgAcARnoBOfQAYdOrQHYArABYNAJnMAaEB0Q6j++reuXL5k3bWWpY65gC+Yc6omNh4RKQUNHT05Eps1FAArqwYUPTRKJmwYuQ4YGgoYCqy8iiKykhqmjp29OYW5hpGQYG+zq4Ilvoa9KZGlh4a5joAbPqBEVHoWLgExBhkVLQMqRjpWTl5bDI4ALZMaITUEGLpYIQQAJIYvFcQ1XIKSirqCKGG9Ds+ksU1m5n0M2s1n0-UQdgmllGdjsOj8QJm7ihixA0RWcXWmySOzSGWytCOJ3Or2uYlgmQEpxEH1q9R+bmMnnMnRR9n8di0RjssIQ-MFo2sgQ81lCGjm2NxsTWCS2yV2+zJuXoxzO+TQjHJJTKFTAAGVMuRyHB4I0al8GqBfoEZlp6FpISYdBp7PprFZhaK9JDAuDproQfLlor4htEtsUiSDuStZTdfrcobypUAKI4HAnZl2tkinn0WVTFFQrS+mb+jEzehzMz84btazjCMxVbRwlxtWkw7Js63aj3J4vS7XAt1b6NR0+etaWXzPmQmsuOGmRGWfmWRchbctGYdvFKmMq4l7ftJu4PWD0DBoU4ManYSoSG2faf2poIIL15GmDo+iLkBdhGOYa4DLMUKjKCljOkYbrDFox5RgSsaqgmGpHCOt73o+YAZsaU6srObj2F45gSn4UIaDY7QaMKMouohVgzNuHhgRoOioV26HnvGl6JpqN4QHeD5PmIElgAAwpQmAwCRM4OuRrS+tRVG2PRi5MexrSojM9iIW2VgSrx+LKkSgnqgOol3lIeb6hALAXG8xrvtIn6kSpgxAm00IosiEEzDMTjriKHj1hMEIoqE1iGeYdjmaePaYUJ2FarhYn0A5MhOSwRGVEp36-J6alUfCml0b6Onhci8UGJxnoSuBGj6Ml3YYReNnXll9mOdcBW5flOByQpVQfiyyk-mVlEabR2mMXVUr0EYgo+qGQHtJYHX8VZfbCTho53mUUD1K51zucVRYHl4hg6EEPisdYTHwkYgLDNKRjsSF0I7ZEOKRnxlm9lhtl9fQp31IVE2eVNJWqXNlULTVS1QXR5iAqidgzCYApui0u0g2lPUiRDUNKGIw2DaN8m5LDIC2l+RazepyNaajTFdJ4OM8hBnRejxAMKsDZ77WDvXHZDYBnZTFMYGN9PXWRfwUWzNEcwxTEGaWvgWA9Gg+P41hE2LoPpeDUvyAAXs+E6voRys+b6gbcW7czQu4tUDA44KrZCsogfyXqm6l3VXmTVvULb9CEDIaAQAaEBKAwtCMDIADWDAixZZskxHR14TbDBxwn5IIGnMjkBU9QANpGAAuk7P6gvQNi6HY2gPVCwr2HRbS6PoVG7lYQyh111kF5lUcx6XifpiweY4DlxAoNq5w5ylE8HRldn5NHJfx-PUAVy8Vc10o9dN5NhYq9uLqBMiwEWBKneWL3vKrSEiHDOBILDOPASO9LZFwPjDZujpQq6wAuxYwoEpj+n-qMT0254KG3ig9QB4sLaS1AbbKmA1nK03GhAtwi4sYeisPMQw9hay4wML6RKhhvrgiFksTsucw6T0OtPPBhF5aK0UjfZmKtcYuh9GBQwGIUS1kNgYT6Ewfqd26Fg82pNC7ZWLrSA+giGZM28j+KiLopjbkhPrcCuhaweGgT4Ux-hZj-XYSeTqQCJaRz4WIIQhAri5F0aQ388E26NnYuCZcEEXp1VxpjAmVYqKsOBEeYWQNOHbzcRou8XifF5BfFdYRBjfjbhGFoAUZjZjLj8L3YpmM1pWHCZVGYONVH5x4XvTJSYlCEA4GaAQsBSjUCkF+YosB7hgHICgbpvTWADIMfo6apU1rWDaO6EKa0goNMqfoPQ-gbC4x9MBQUGgmnhxaRDNpmoHJgCkHwCAXAsATL6dMpQQyRljPuVMkRcNb4+UPIiYpQI9y7ngsBYU3hFlrU9GYjwIRwhJI4VvVxOD3HZTOXkC5Vzri3IgG8-pgzaQvJQPgMo6L3h5LmW4IwUxXS7i9L4KwswtAgr7m3FEQxEq6EhEc7hu9Tn8CyQQvKNM-GkoRqres3FURxPsMiIEvdAUD0XIhHG8VEKOMBnClx2D1G8LEmIZOyQCjZ2SfCzVU87L+NmOMNo7hxjlgaYbd+kT+6aWCG-XcSrOXAKTinfI6BKg+vVXtNRBd-H8hxq6aUxtfQmCkf6WU9YWhgUqiETEEQAYYBkM5a0yAjUarjMwVgnAeB8EEMIUQ-iQjhtCm1WUEofTjGFFYAw3oQj2p9NRTleUWAAEVMgyHQP4gUIxOLQh8FoX2DLwoJtLI9cFWg63TESU4tCxNU4YFxJaAAqg+Xg-A0ACEIHoryZKEBcnep0NtwQuTSIdT7ClrpQoonmC0XQa1F1qucYG5I8tYBbr1MWvdB7-FckWdCYpD1+RujHTCOqVZSwB3GMiRcwxZgerSf6wod5MhrvpIyFAlQSWfI+TNRCpY2pVhCI+jmwohg8zilRA2Y7fSocRXkAoRR8g4ZEPh-x84DBmGlPjLko8IkDAXatLoi54Sd3hPBZjWq2NZsZkekVsGvTAR8C0ICVHwoTBdKYUKLbkSsQhHJ01KY0723NeCRZnpNkmFCqEMdsaUSrWYd0LkgcTOwo-SurltkUwvis8BUY4EMQ-3cA9G9cJcYjFCmtYIQRhhzEOd55dedjm7xTLAPU5IQ0oIbBYDw4x5wojCj7Kw+lZScV8PCT0pmWlZb1JAENCUDDhOs8CYI-pwSIgabFHGHtMGpdFlwz1IlKRWf8LBOzYJHNCmWl0Nura51uu+vV7lUtpL0DAKcAZAxCP5MQEw0YhS2xoJqhOqCiUh3OmleMCEKWl0jdSSx7V4kCL0As28c1asKoa2qlrSd4J6zdG+h0MEXoTbDZSQirVe8tuBeFSzKiDYfT0UMqYkETFNkg4Mu0aY4xFxQ6ezDk1JzNsfZyUVJHKtDYjDavMKTc6vSdyYtd-2Y6jNDEMutkB2VpLmpI+rKqi0mK+E8AbX0QJWXGCStD41Qbyd4WpkQi6Dt-HaHrMubiHmTJukghuaEXhdzPo8BCFbvPcHZRVy5L7k4affJsICbQSrDBAiHlFkUXRFluk7nReYY7nQwpJwr5pG3leEJcojg7x6Kv+yCBYEEtWuT+gep4UdpupEW-l7msPfP+oCqIYLl0wuUaA9vdYta8xDJei6EYy3SKToy3OlTw98MixTBdKFAWLQbBlTK+RO9gR+NfW4vFFCOfP0Zfz9LWWGBPvjm+w7maExkG8lCCCQUtimLSkRPSl3zokNDZD7n6fVum9z7V0BxbDnBQNOdEBSEXMh8CahO4MfzoG-pNnzM5TLMhd-Yi6cyTrgR6CygoiJ7BAhQhRf5vb7wxyt4a7tANidD6bDwPrzY+wOYNiBCc4hTNiPbvppajZoZ7zFyfYQCAbL6lQUQgiGygFuztDwjdYQjiZQiigZ5vqbyn5+bn7wEMCJzZb7rNbUGIAdBeC6DcRVheiSGYFwjAh6DAgmCKJWDaA+CwFkEHz0AADufAdQuQAAYicD2n2mgD9q0HQVMLyNMDjAguFDSnoOMF7L-KoQApPr5mNt-uQZ2jgCYf2qIarBYZDgwZ6EwZ7l0HeozoqkEBYhPiflPrwY3vwVfgEZspyPZohuxN6HIQgBJmAdIdtA5tCMHkQc9rDqahDOQYvPmAEbNJYdyFyIeHYQMM2qtG2GVDaozhoZUVoXPLlgERBLFtoPfAKFCEMCJs0MMG0IlNuCGIuJ-u4elokV4QfMXktl6A0TYQlP6D4DZkBH3uBMPKqtwQkZ4XASimrsRLUdoI1J0IZBSn4HAuEZIf5C1O4EMJ3GwqUaToruHsirykmOmiaPivUAAEpgAACOmQ1AZQBGSm7eKs+WEw6+OuVe4RChro1mI6iE0a3RUsFxHSXS9IkyOK9Qd4ducJsyKmKOFiEq0wPQNglSwQowwQ0EYE-GcR3xoeZ+SRBJGAnS2Kjya6KRMeIqkWmMf4-IwOdqD0vcGJ0IkObq7Q4wXBOapxpBPK3i7S-JRJPSDygyA6q+tJfg9JY6jJ9hFUWMkIoQDEDSnJJxHhGp+JAJ5yRK1ymKgpgy22u2ZaARFgIw8IxgGmFKDgoQjKoQq0AQ9qjmwIeJeEFxaK7pdyxJ+pZJHGep7yv+CJ3yfIXgtmfeW0Y6l2iAb+Yq7QAo2y7g8IcZ-xWprplySZWKKZmZTyOUbp9uopRYzCroHgi4i4dKesIKtg6egoxSJSbU0wNZGSLpqK7ZNyyZGZpJTyA6RugZ3Q386+A+v4qIQ6r8hsVZvIU59AKK5qpgbcIZ0wqJUKsqa0bQPo7EFiEoKGixJBr2ZqfpIGgBZe3siAhgxizoY+-Ib+xSX+-i9Cam5GmmPo1UjKe+iGypYEVYJgnK2WzAlJf+Ks-yUUmyJp9Bl5saQwDYJgTCa0Y+boRyIa0S8U56NaQIZ2ORrQwwaR3oNewEz5EQQAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as DedicatedPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./DedicatedPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as DedicatedPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"clusterChange\"; cluster: DedicatedCluster }\n          | { type: \"sizeChange\"; size: Size }\n          | {\n              type: \"selectSubscription\";\n              subscription: MarketplaceSubscription;\n            }\n          | { type: \"selectPrepaid\" }\n          | { type: \"billingChange\" }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateDedicatedKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: StandardSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"dedicatedPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isOverQuota\",\n              target: \"overQuota\",\n            },\n            {\n              cond: \"isClusterUnavailable\",\n              target: \"clusterUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        overQuota: {\n          tags: \"blocked\",\n        },\n        clusterUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitted: {\n                  entry: \"triggerSubmit\",\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitted\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  tags: \"creatable\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                cluster: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"clusterIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"clusterInvalid\",\n                    },\n                    valid: {\n                      tags: \"clusterValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    clusterChange: {\n                      actions: \"setCluster\",\n                      cond: \"didClusterChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noCluster\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          cond: \"sizeIsDisabled\",\n                          target: \"disabled\",\n                        },\n                        {\n                          cond: \"billingRequiredButNotSelected\",\n                          target: \"waitingForQuota\",\n                        },\n                        {\n                          cond: \"sizeIsOverQuota\",\n                          target: \"overQuota\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    disabled: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeDisabled\",\n                    },\n                    waitingForQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeWaitingForQuota\",\n                    },\n                    overQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeOverQuota\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    clusterChange: {\n                      target: \".validate\",\n                    },\n                    sizeChange: {\n                      actions: \"setSize\",\n                      cond: \"didSizeChange\",\n                      target: \".validate\",\n                    },\n                    billingChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n                billing: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          target: \"prepaidOnly\",\n                        },\n                      ],\n                    },\n                    prepaidOnly: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\"],\n                      entry: \"setBillingToPrepaid\",\n                      type: \"final\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#dedicatedPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              cluster: context.capabilities.defaultCluster,\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setCluster: assign((context, { cluster }) => {\n          return {\n            form: {\n              cluster,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSize: assign((context, { size }) => ({\n          form: {\n            ...context.form,\n            size,\n          },\n        })),\n        setSizes: assign((context, event) => {\n          const sizes = event.data;\n          const smallestSize = sizes.sort((a, b) => a.quota - b.quota)[0];\n          return {\n            sizes,\n            form: {\n              ...context.form,\n              size: smallestSize,\n            },\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => {\n          return {\n            creationError: error,\n          };\n        }),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form>;\n          const data: CreateDedicatedKafkaFormData = {\n            plan: \"dedicated\",\n            name: form.name,\n            cluster: form.cluster,\n            sizeId: form.size.id,\n            billing: \"dedicated\",\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n        setBillingToPrepaid: assign((context) => {\n          const form = { ...context.form };\n          form.billing = \"prepaid\";\n          return { form };\n        }),\n      },\n      guards: {\n        isOverQuota: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"out-of-quota\",\n        isClusterUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"clusters-unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        clusterIsValid: ({ form, capabilities }) => {\n          const selectedCluster = capabilities?.availableClusters.find(\n            (p) => p.id === form.cluster?.id\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableClusters || []).length > 0 &&\n            // must have selected a provider\n            selectedCluster !== undefined\n          );\n        },\n        noCluster: ({ form }) => form.cluster === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) => sizes !== undefined && sizes.length === 0,\n        sizeIsDisabled: ({ form, capabilities }) => {\n          if (capabilities === undefined) return true;\n          return form.size?.isDisabled === true;\n        },\n        billingRequiredButNotSelected: ({ form }, _, meta) => {\n          if (meta.state.hasTag(\"noBilling\")) {\n            return false;\n          }\n          return form.billing === undefined;\n        },\n        sizeIsOverQuota: ({ form, capabilities }) => {\n          if (capabilities === undefined || !form.size) return true;\n          const availableQuota = capabilities.remainingDedicatedQuota;\n          if (!availableQuota) return true;\n          return form.size.quota > availableQuota;\n        },\n        didClusterChange: (context, event) =>\n          context.form.cluster !== event.cluster,\n        didSizeChange: (context, event) =>\n          context.form.size?.id !== event.size.id,\n      },\n    }\n  );\n","import { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport { assign, createMachine, EventFrom, forwardTo } from \"xstate\";\nimport type {\n  CreateDedicatedKafkaFormData,\n  CreateDedicatedKafkaInstanceError,\n  DedicatedPlanInitializationData,\n  DedicatedSizes,\n} from \"../types\";\nimport { DedicatedClustersInfo } from \"../types\";\nimport {\n  DedicatedPlanMachine,\n  DedicatedPlanMachineContext,\n} from \"./DedicatedPlanMachine\";\n\ntype Quota = Pick<\n  DedicatedPlanInitializationData,\n  \"plan\" | \"remainingDedicatedQuota\" | \"instanceAvailability\"\n>;\n\nexport type CreateDedicatedKafkaInstanceMachineContext = {\n  quota: Quota | undefined;\n  clusters: DedicatedClustersInfo | undefined;\n  defaultCluster: DedicatedCluster | undefined;\n  capabilities: DedicatedPlanInitializationData | undefined;\n};\n\nconst CreateDedicatedKafkaInstanceMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMBOYCGAXMBpDAZgNYYCSAdrFhucmAHQA2A9hhAJblT0COArs2r1kACzDIinKAAIqNCBlQRp-QRgDEYVKmap6AB0bYCugLbD02PIRIU5tBizZTeAoaPGSus6uQVKVNwwETgA3ZmRsdmZyAG0ABgBdRFB9Zlh2LGjyFJAAD0QAFniAJnp4gGYAdkKATgAOeqr4qvrCgFYAGhAAT0QANir++n769tqq2sKARhKKjsKAX0XutEwcfGIySl86JlYOLlc1YTEJKR95RWVVanV7fxug6QxQjHYjACNGMFy0jKyMVyBQQxTKlRqDSaLTaXV6iHG8XoVXahX6UyqJVqJX6-WWq0sGxs23seych24twwp08Fwe10CanUzD4WGkzAIlz8DKpf3SmWywKKpXK1TqjWarQ63T6CHa8UK9Hqcw6JUK6palXxIDWVk2th2NDJBxcVJp5289ICVPU5GYXMejOoLzeHww31+SBA-wFQK9ILBoshEph0vhoPaw2hFRKasKbQa0yWKx1hOsWzsu0cJqOZqtEHUfIBgv9iCTU2RkZj03RYsjMoGyvo0yG40KJSq0wq02m9W1uqJGcNDn2zlzQXoEDAoTALH0WkLXp9gJypYQ5cVKP61drNXr4faFSRJVmdUmasjvf7af1JKzo4px3cZy8MinM7nWhd7y+H0yPU0bRdAMIwsBMVBzAHdMDVJbMx0pCcPAtN9p1nZh51Qb83U+P8sB6EJyHCSIVwSZIl35FchQQWpanaeh4y7JN5gqbFZgbOU1WRE96m3Bp+lRKoKmvdZoLvI04MfM0kNfaR3zQjCsN-Rh-3UOTP0wvhYEgItfVXUAQRouiGO7QpmNYkp2NMqolXqWZcSPCpRn6NFhL1YlM3Eh9TUQl8LjU9Cv1eH93VwgD-IUoLsJ+HTKLXQz6NskyzJPCzwwqdppnoWj4niaZ2kPepaiTaZXMHGD73JFwCDALBRAufQdFCdgp1QWB1Aa5gmpa2AXj8aR0CgbIesir5ovI4s-X0staNqegjzGcZ+hKHjeyqdj2jGcplu4moFSqKpStEjyR0qo5qtqkR6sa5qtDarQdD0QxjDMCwRNvY7jXg+hzrq7wOq626CKIqIYlImKSym9cMRsiY0RmaYFXiOFZUKfa5rqRy5mmWp4kGdpDve4dPsfH7Lr+67uvainbvZTCBqG6Q+HIEb3TG1IKIh-Jpsjeh2k7XHOw7QqWnY0Z6mbapakGNVqgR-GUygwnYK8rhVJiBg5BwV63KHZXTqgcHJq5hASlROj+lKCp6kqdUVvYq3Mr3ds0UaPLZgJ9yiY13xHSe8h6Gan57leT12YmvTjaxbd6NM+NDIVdLCkskUFmxyZt2cwYPd1+982kP36FgV4pHUKCAGU+GQOhYHgcbdKoxOjKR0p6nmYXlvt1Fyn6Lt1W7E9Jkc7Pys8vOC6LprVaggBRIDUENiOQSjioY7b+PTNRe2a152NbLy03M7y4exJHcKvwLwOwGDmcF6orFWl5i2Nt7toEYqUWpayrt5SW+z4ls4+H0GBn0wuPYuU80wVyrnAWuYd65rkbvRBUtQ6x9zaKLeMO8WhDB7PEKEtRAFe0nKhdS+cjD+wniXGec9b5rnvuLSMSNErxhmJUUWCMsrKmWngsEuJ5YpjtFOWBqY3qez1jmBCJxpJ0h9jyIItDIYI1SrKSM4tW6dmVB0TsaISoKxvGIiqEinzUnzAo42zRxYojmD3FEtk+bTFFkMZskYcS9mfiwwh4ivpmhAWYkEswGg2RwSxJosxSjrU4tjAePcEY8SKp4wx3ifK0m8CAxSIVlJ4T8QMfic1lrFVaMqeYDjwztjojxHhsYOxW1ssmAkoic6eX1sY7JCBWjsQ7LNKWjRKiLRxmieW9SdYjxOkY0mV1Oo3Vaq0msCoY7FCGOlWMsxkYIkxMiHh7RYyMPjEJPRDSRnExcJYCAso4GxUhrGQY5QMpjCSpedaExkRND5jorEFQ9lDLKifI5XBWmb3DC2TKlRGLVCxBeDoCTR49CoGAUwjNmaulGqHb0HMjYgkciiLK+UUFWRxt2VZbT1mt1GK0Fo-EOx4n2cMn53srgBAvhANmqLw53yaIqfi4xsQdnyu2d+aVqjONbmna2OJuxQpHGPchhdwEGzrhc42MZBXYwmD3CE-F+j21jCMZy8Ytxdlom0CVewpU0FacteUIwcXcpRKiOY7FsYrzBdbeMhUWJt2NcAkhAVQHSsvuaxos19rzUxelFsyiBjdhGC2UYLY4k9l0V8o6RC0lgMnnK85nMMVVPKJo2GbiirsOsrMd1uU1SWzqSImlQDiEfh9WQs18qs2IGWrk4N-9Q0ZUxJZJoSolWVBylYwqnrhDMFMIYGqKLlzNoQNUf+SomFoP2p2Ht1lcZ5Roj2IW4rqXfKAa0o87EaI3JyhtQS2Ntyo2WMsIAA */\n  createMachine(\n    {\n      context: {\n        clusters: undefined,\n        defaultCluster: undefined,\n        quota: undefined,\n        capabilities: undefined,\n      },\n      predictableActionArguments: true,\n      tsTypes:\n        {} as import(\"./CreateDedicatedKafkaInstanceMachine.typegen\").Typegen0,\n      schema: {\n        context: {} as CreateDedicatedKafkaInstanceMachineContext,\n        events: {} as\n          | {\n              type: \"dedicated quota available\";\n              quota: Pick<\n                DedicatedPlanInitializationData,\n                \"remainingDedicatedQuota\"\n              >;\n            }\n          | {\n              type: \"out of dedicated quota\";\n            }\n          | {\n              type: \"no dedicated quota available\";\n            }\n          | {\n              type: \"clusters available\";\n              clusters: DedicatedClustersInfo;\n              defaultCluster: DedicatedCluster | undefined;\n            }\n          | { type: \"clusters unavailable\" }\n          | { type: \"save\"; data: CreateDedicatedKafkaFormData }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateDedicatedKafkaInstanceError },\n        services: {} as {\n          checkDedicatedQuota: {\n            data: never;\n          };\n          fetchClusters: {\n            data: never;\n          };\n          dedicatedPlan: {\n            data: DedicatedPlanMachineContext;\n          };\n        },\n      },\n      id: \"createDedicatedKafkaInstance\",\n      initial: \"loading\",\n      states: {\n        loading: {\n          description: \"Fetch the data required to drive the creation flow\",\n          tags: \"loading\",\n          initial: \"quota\",\n          states: {\n            quota: {\n              initial: \"checking dedicated quota\",\n              states: {\n                \"checking dedicated quota\": {\n                  invoke: {\n                    src: \"checkDedicatedQuota\",\n                    onError: [\n                      {\n                        actions: \"setDedicatedUnavailable\",\n                        target:\n                          \"#createDedicatedKafkaInstance.system unavailable\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"dedicated quota available\": {\n                      actions: \"setDedicatedAvailable\",\n                      target: \"dedicated\",\n                    },\n                    \"out of dedicated quota\": {\n                      actions: \"setDedicatedOutOfQuota\",\n                      target: \"dedicated\",\n                    },\n                    \"no dedicated quota available\": {\n                      actions: \"setDedicatedUnavailable\",\n                      target:\n                        \"#createDedicatedKafkaInstance.system unavailable\",\n                    },\n                  },\n                },\n                dedicated: {\n                  type: \"final\",\n                  always: {\n                    target:\n                      \"#createDedicatedKafkaInstance.loading.fetching clusters\",\n                  },\n                },\n              },\n            },\n            \"fetching clusters\": {\n              invoke: {\n                src: \"fetchClusters\",\n                onError: [\n                  {\n                    actions: \"setClustersUnavailable\",\n                    target: \"ready\",\n                  },\n                ],\n              },\n              on: {\n                \"clusters available\": {\n                  actions: \"setClusters\",\n                  target: \"ready\",\n                },\n                \"clusters unavailable\": {\n                  actions: \"setClustersUnavailable\",\n                  target: \"ready\",\n                },\n              },\n            },\n            ready: {\n              type: \"final\",\n              entry: \"setCapabilities\",\n            },\n          },\n          onDone: [\n            {\n              cond: \"dedicated plan\",\n              target: \"dedicated plan\",\n            },\n            {\n              target: \"system unavailable\",\n            },\n          ],\n        },\n        \"system unavailable\": {\n          tags: \"systemUnavailable\",\n          type: \"final\",\n        },\n        \"dedicated plan\": {\n          invoke: {\n            src: \"dedicatedPlan\",\n            id: \"dedicatedPlanService\",\n          },\n          tags: \"dedicatedPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createDedicatedKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToDedicatedPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        complete: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setDedicatedAvailable: assign((_, event) => ({\n          quota: {\n            plan: \"dedicated\" as const,\n            instanceAvailability: \"available\" as const,\n            remainingDedicatedQuota: event.quota.remainingDedicatedQuota,\n          },\n        })),\n        setDedicatedOutOfQuota: assign((_, event) => ({\n          quota: {\n            plan: \"dedicated\" as const,\n            instanceAvailability: \"out-of-quota\" as const,\n            remainingDedicatedQuota: 0,\n          },\n        })),\n        setDedicatedUnavailable: assign((_) => ({\n          quota: {\n            plan: \"dedicated\" as const,\n            instanceAvailability: \"clusters-unavailable\" as const,\n            remainingDedicatedQuota: 0,\n          },\n        })),\n        setClusters: assign((_, event) => {\n          return {\n            clusters: event.clusters,\n            defaultCluster: event.defaultCluster,\n          };\n        }),\n        setClustersUnavailable: assign((context) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const quota = context.quota!;\n          quota.instanceAvailability = \"clusters-unavailable\";\n          return {\n            providers: [],\n            quota,\n          };\n        }),\n        setCapabilities: assign((context) => {\n          const { clusters, defaultCluster, quota } = context;\n          if (!clusters || !quota || quota.plan !== \"dedicated\") {\n            throw new Error(\"unexpected condition, invalid quota\");\n          }\n          const capabilities: DedicatedPlanInitializationData = {\n            plan: \"dedicated\",\n            availableClusters: clusters,\n            defaultCluster,\n            instanceAvailability: quota.instanceAvailability,\n            remainingDedicatedQuota: quota.remainingDedicatedQuota,\n          };\n          return { capabilities };\n        }),\n        notifyCreateErrorToDedicatedPlan: forwardTo(\"dedicatedPlanService\"),\n      },\n      guards: {\n        \"dedicated plan\": (context) => context.quota?.plan === \"dedicated\",\n      },\n    }\n  );\n\ntype EventTypes = Pick<\n  EventFrom<typeof CreateDedicatedKafkaInstanceMachine>,\n  \"type\"\n>[\"type\"];\n\ntype EventOptions<E extends EventTypes> = Omit<\n  EventFrom<typeof CreateDedicatedKafkaInstanceMachine, E>,\n  \"type\"\n>;\n\nexport type CreateDedicatedKafkaInstanceServices = {\n  checkDedicatedQuota: (events: {\n    onOutOfQuota: (p: EventOptions<\"out of dedicated quota\">) => void;\n    onQuotaAvailable: (p: EventOptions<\"dedicated quota available\">) => void;\n    onNoQuotaAvailable: (\n      p: EventOptions<\"no dedicated quota available\">\n    ) => void;\n  }) => void;\n  fetchClusters: (\n    plan: \"dedicated\",\n    events: {\n      onAvailable: (p: EventOptions<\"clusters available\">) => void;\n      onUnavailable: () => void;\n    }\n  ) => void;\n  getDedicatedSizes: (cluster: DedicatedCluster) => Promise<DedicatedSizes>;\n  onCreate: (\n    data: CreateDedicatedKafkaFormData,\n    onSuccess: () => void,\n    onError: (error: CreateDedicatedKafkaInstanceError) => void\n  ) => void;\n};\n\nexport function makeCreateDedicatedKafkaInstanceMachine({\n  checkDedicatedQuota: checkDedicatedQuotaCb,\n  fetchClusters: fetchClustersCb,\n  getDedicatedSizes: getDedicatedSizesCb,\n  onCreate,\n}: CreateDedicatedKafkaInstanceServices) {\n  return CreateDedicatedKafkaInstanceMachine.withConfig({\n    services: {\n      checkDedicatedQuota: () => {\n        return (send) =>\n          checkDedicatedQuotaCb({\n            onNoQuotaAvailable: () => {\n              send({ type: \"no dedicated quota available\" });\n            },\n            onOutOfQuota: () => {\n              send({ type: \"out of dedicated quota\" });\n            },\n            onQuotaAvailable: ({ quota }) => {\n              send({ type: \"dedicated quota available\", quota });\n            },\n          });\n      },\n      fetchClusters: (context) => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const instanceType = context.quota!.plan;\n        return (send) => {\n          fetchClustersCb(instanceType, {\n            onAvailable: ({ clusters, defaultCluster }) =>\n              send({\n                type: \"clusters available\",\n                clusters,\n                defaultCluster,\n              }),\n            onUnavailable: () => send(\"clusters unavailable\"),\n          });\n        };\n      },\n      createInstance: (_context, event) => {\n        const form = event.data;\n\n        return (send) => {\n          function onSuccess() {\n            send(\"createSuccess\");\n          }\n\n          function onError(error: CreateDedicatedKafkaInstanceError) {\n            send({ type: \"createError\", error });\n          }\n\n          onCreate(\n            {\n              plan: form.plan,\n              name: form.name,\n              cluster: form.cluster,\n              sizeId: form.sizeId,\n              billing: form.billing,\n            },\n            onSuccess,\n            onError\n          );\n        };\n      },\n      dedicatedPlan: (context) => {\n        return DedicatedPlanMachine.withContext({\n          capabilities: context.capabilities as DedicatedPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getDedicatedSizesCb(form.cluster);\n            },\n          },\n        });\n      },\n    },\n  });\n}\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { CreateDedicatedKafkaInstanceServices } from \"./CreateDedicatedKafkaInstanceMachine\";\nimport { makeCreateDedicatedKafkaInstanceMachine } from \"./CreateDedicatedKafkaInstanceMachine\";\n\nexport const CreateDedicatedKafkaInstanceContext = createContext<{\n  service: ActorRefFrom<\n    ReturnType<typeof makeCreateDedicatedKafkaInstanceMachine>\n  >;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport const CreateDedicatedKafkaInstanceProvider: FunctionComponent<\n  CreateDedicatedKafkaInstanceServices\n> = ({\n  onCreate,\n  checkDedicatedQuota,\n  fetchClusters,\n  getDedicatedSizes,\n  children,\n}) => {\n  const service = useInterpret(\n    () =>\n      makeCreateDedicatedKafkaInstanceMachine({\n        checkDedicatedQuota,\n        fetchClusters,\n        getDedicatedSizes,\n        onCreate,\n      }),\n    { devTools: true }\n  );\n\n  return (\n    <CreateDedicatedKafkaInstanceContext.Provider value={{ service }}>\n      {children}\n    </CreateDedicatedKafkaInstanceContext.Provider>\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { CreateKafkaInstanceContext } from \"./CreateKafkaInstanceProvider\";\nimport type { StandardPlanMachine } from \"./StandardPlanMachine\";\nimport type { TrialPlanMachine } from \"./TrialPlanMachine\";\n\nexport type UseCreateKafkaInstanceSelectorReturn = {\n  standardPlanMachine: ActorRefFrom<typeof StandardPlanMachine> | undefined;\n  trialPlanMachine: ActorRefFrom<typeof TrialPlanMachine> | undefined;\n  isLoading: boolean;\n  isSystemUnavailable: boolean;\n  isStandardPlan: boolean;\n  isTrialPlan: boolean;\n  isSaving: boolean;\n  isSaved: boolean;\n};\n\nexport function useCreateKafkaInstance() {\n  const { service } = useContext(CreateKafkaInstanceContext);\n  return useSelector<typeof service, UseCreateKafkaInstanceSelectorReturn>(\n    service,\n    useCallback((state) => {\n      const standardPlanMachine = state.children[\"standardPlanService\"] as\n        | ActorRefFrom<typeof StandardPlanMachine>\n        | undefined;\n      const trialPlanMachine = state.children[\"trialPlanService\"] as\n        | ActorRefFrom<typeof TrialPlanMachine>\n        | undefined;\n\n      const isLoading = state.hasTag(\"loading\");\n      const isSystemUnavailable = state.hasTag(\"systemUnavailable\");\n      const isStandardPlan = state.hasTag(\"standardPlan\");\n      const isTrialPlan = state.hasTag(\"trialPlan\");\n      const isSaving = state.hasTag(\"saving\");\n      const isSaved = state.done === true;\n\n      return {\n        standardPlanMachine,\n        trialPlanMachine,\n        isLoading,\n        isSystemUnavailable,\n        isStandardPlan,\n        isTrialPlan,\n        isSaving,\n        isSaved,\n      };\n    }, [])\n  );\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { CreateDedicatedKafkaInstanceContext } from \"./CreateDedicatedKafkaInstanceProvider\";\nimport type { DedicatedPlanMachine } from \"./DedicatedPlanMachine\";\n\nexport type UseCreateDedicatedKafkaInstanceSelectorReturn = {\n  dedicatedPlanMachine: ActorRefFrom<typeof DedicatedPlanMachine> | undefined;\n  isLoading: boolean;\n  isSystemUnavailable: boolean;\n  isAvailable: boolean;\n  isSaving: boolean;\n  isSaved: boolean;\n};\n\nexport function useCreateDedicatedKafkaInstance() {\n  const { service } = useContext(CreateDedicatedKafkaInstanceContext);\n  return useSelector<\n    typeof service,\n    UseCreateDedicatedKafkaInstanceSelectorReturn\n  >(\n    service,\n    useCallback((state) => {\n      const dedicatedPlanMachine = state.children[\"dedicatedPlanService\"] as\n        | ActorRefFrom<typeof DedicatedPlanMachine>\n        | undefined;\n\n      const isLoading = state.hasTag(\"loading\");\n      const isSystemUnavailable = state.hasTag(\"systemUnavailable\");\n      const isAvailable = state.hasTag(\"dedicatedPlan\");\n      const isSaving = state.hasTag(\"saving\");\n      const isSaved = state.done === true;\n\n      return {\n        dedicatedPlanMachine,\n        isLoading,\n        isSystemUnavailable,\n        isAvailable,\n        isSaving,\n        isSaved,\n      };\n    }, [])\n  );\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback } from \"react\";\nimport type {\n  CloudProvider,\n  CloudRegion,\n  MarketPlace,\n  MarketplaceSubscription,\n  Size,\n} from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfo, CreateKafkaInstanceError } from \"../types\";\nimport type { StandardPlanMachineContext } from \"./StandardPlanMachine\";\nimport { useCreateKafkaInstance } from \"./useCreateKafkaInstance\";\n\ntype SelectorReturn = {\n  form: StandardPlanMachineContext[\"form\"];\n  capabilities: StandardPlanMachineContext[\"capabilities\"];\n  selectedProvider: CloudProviderInfo | undefined;\n  selectedSize: Size | undefined;\n  sizes: StandardPlanMachineContext[\"sizes\"];\n  selectedBilling: \"prepaid\" | MarketplaceSubscription | undefined;\n  billingType: \"rh-only\" | \"external-marketplaces\";\n  remainingQuota: number | undefined;\n\n  isFormEnabled: boolean;\n\n  isNameInvalid: boolean;\n  isNameEmpty: boolean;\n  isNameError: boolean;\n  isNameTaken: boolean;\n  isSizeDisabled: boolean;\n  isSizeOverQuota: boolean;\n  isSizeLoadingError: boolean;\n  isSizeAvailable: boolean;\n  isSizeError: boolean;\n  isBillingError: boolean;\n  isBillingSingleSubscription: boolean;\n  isBillingSelectionRequired: boolean;\n  isBillingPrepaidAvailable: boolean;\n  isBillingPrepaidOverQuota: boolean;\n  isBillingMarketplaceOverQuota: boolean;\n  isBillingSingleMarketplace: MarketplaceSubscription | false;\n\n  isProviderError: boolean;\n  isRegionError: boolean;\n\n  isLoading: boolean;\n  isLoadingSizes: boolean;\n  isSaving: boolean;\n\n  error: CreateKafkaInstanceError | \"form-invalid\" | undefined;\n\n  setName: (name: string) => void;\n  setProvider: (name: CloudProvider) => void;\n  setRegion: (name: CloudRegion) => void;\n  onCreate: () => void;\n  setSize: (size: Size) => void;\n  setBillingSubscription: (\n    marketplace: MarketPlace,\n    subscription: string\n  ) => void;\n  setBillingPrepaid: () => void;\n};\n\nexport function useStandardPlanMachine(): SelectorReturn {\n  const {\n    standardPlanMachine: service,\n    isLoading,\n    isSaving,\n  } = useCreateKafkaInstance();\n\n  if (!service) {\n    throw new Error(\n      \"useStandardPlanMachine should be called only when the parent CreateKafkaInstanceMachine is in the right state\"\n    );\n  }\n\n  const setName = useCallback(\n    (name: string) => service.send({ type: \"nameChange\", name }),\n    [service]\n  );\n  const setProvider = useCallback(\n    (provider: CloudProvider) =>\n      service.send({ type: \"providerChange\", provider }),\n    [service]\n  );\n  const setRegion = useCallback(\n    (region: CloudRegion) => service.send({ type: \"regionChange\", region }),\n    [service]\n  );\n  const onCreate = useCallback(() => service.send(\"create\"), [service]);\n  const setSize = useCallback(\n    (size: Size) => service.send({ type: \"sizeChange\", size }),\n    [service]\n  );\n\n  const setBillingSubscription = useCallback(\n    (marketplace: MarketPlace, subscription: string) =>\n      service.send({\n        type: \"selectSubscription\",\n        subscription: { marketplace, subscription },\n      }),\n    [service]\n  );\n\n  const setBillingPrepaid = useCallback(\n    () =>\n      service.send({\n        type: \"selectPrepaid\",\n      }),\n    [service]\n  );\n\n  return useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => {\n        const { creationError, capabilities, form, sizes } = state.context;\n        const isBlocked = state.hasTag(\"blocked\");\n        const isFormInvalid =\n          state.hasTag(\"formInvalid\") && state.hasTag(\"submitted\");\n        const isNameTaken = creationError === \"name-taken\";\n        const isConfigurable = state.hasTag(\"configurable\");\n        const isLoadingSizes = state.hasTag(\"sizeLoading\");\n        const isBillingSelectionRequired =\n          !state.hasTag(\"noBilling\") && !isBlocked;\n\n        const marketplaces = Array.from(\n          new Set(\n            capabilities.marketplaceSubscriptions.flatMap<MarketplaceSubscription>(\n              (m) =>\n                m.subscriptions.map((s) => ({\n                  marketplace: m.marketplace,\n                  subscription: s,\n                }))\n            )\n          )\n        );\n        const isBillingSingleSubscription = state.hasTag(\"singleSubscription\");\n        const isBillingSingleMarketplace =\n          isBillingSingleSubscription ||\n          (marketplaces.length === 1 &&\n            capabilities.remainingPrepaidQuota === undefined)\n            ? marketplaces[0]\n            : false;\n\n        const isBillingPrepaidAvailable =\n          capabilities.remainingPrepaidQuota !== undefined;\n\n        const selectedProvider = isBlocked\n          ? undefined\n          : capabilities.availableProviders.find((p) => p.id === form.provider);\n\n        const selectedSize = isBlocked\n          ? undefined\n          : sizes?.find((s) => form.size?.id === s.id);\n\n        const billingType = capabilities.marketplaceSubscriptions.some(\n          (m) => m.marketplace !== \"rhm\"\n        )\n          ? \"external-marketplaces\"\n          : \"rh-only\";\n\n        const selectedBilling =\n          form.billing === \"prepaid\" ? \"prepaid\" : form.billing;\n\n        const error: SelectorReturn[\"error\"] = creationError\n          ? creationError\n          : isFormInvalid\n          ? \"form-invalid\"\n          : undefined;\n\n        const remainingQuota =\n          form.billing === \"prepaid\" || form.billing === undefined\n            ? capabilities.remainingPrepaidQuota\n            : capabilities.remainingMarketplaceQuota;\n\n        const isBillingPrepaidOverQuota: boolean = (() => {\n          if (\n            capabilities.remainingPrepaidQuota !== undefined &&\n            capabilities.remainingPrepaidQuota === 0\n          ) {\n            return true;\n          } else if (\n            selectedSize?.quota &&\n            capabilities.remainingPrepaidQuota\n          ) {\n            return selectedSize.quota > capabilities.remainingPrepaidQuota;\n          }\n          return false;\n        })();\n\n        const isBillingMarketplaceOverQuota: boolean = (() => {\n          if (\n            capabilities.remainingMarketplaceQuota !== undefined &&\n            capabilities.remainingMarketplaceQuota === 0\n          ) {\n            return true;\n          } else if (\n            selectedSize?.quota &&\n            capabilities.remainingMarketplaceQuota\n          ) {\n            return selectedSize.quota > capabilities.remainingMarketplaceQuota;\n          }\n          return false;\n        })();\n\n        return {\n          form: form,\n          capabilities,\n          selectedProvider,\n          selectedSize,\n          sizes: sizes,\n          billingType,\n          selectedBilling,\n          remainingQuota,\n\n          isFormEnabled: !isLoading && !isSaving && !isBlocked,\n          isNameInvalid: state.hasTag(\"nameInvalid\"),\n          isNameEmpty: state.hasTag(\"nameEmpty\"),\n          isNameError:\n            state.hasTag(\"nameInvalid\") ||\n            isNameTaken ||\n            (!state.hasTag(\"nameValid\") && isFormInvalid),\n          isNameTaken,\n          isSizeDisabled: state.hasTag(\"sizeDisabled\"),\n          isSizeOverQuota: state.hasTag(\"sizeOverQuota\"),\n          isSizeLoadingError: state.hasTag(\"sizeError\"),\n          isSizeAvailable: !state.hasTag(\"sizeIdle\"),\n          isSizeError: !state.hasTag(\"sizeValid\") && isFormInvalid,\n          isProviderError: !state.hasTag(\"providerValid\") && isFormInvalid,\n          isRegionError: !state.hasTag(\"regionValid\") && isFormInvalid,\n          isBillingError: !state.hasTag(\"billingValid\") && isFormInvalid,\n          isBillingSingleSubscription,\n          isBillingSelectionRequired,\n          isBillingPrepaidAvailable,\n          isBillingPrepaidOverQuota,\n          isBillingMarketplaceOverQuota,\n          isBillingSingleMarketplace,\n          isLoading,\n          isLoadingSizes,\n          isConfigurable,\n          isSaving,\n\n          error,\n\n          setName,\n          setProvider,\n          setRegion,\n          onCreate,\n          setSize,\n          setBillingSubscription,\n          setBillingPrepaid,\n        };\n      },\n      [\n        isLoading,\n        isSaving,\n        onCreate,\n        setBillingPrepaid,\n        setBillingSubscription,\n        setName,\n        setProvider,\n        setRegion,\n        setSize,\n      ]\n    )\n  );\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback } from \"react\";\nimport type { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfo, CreateKafkaInstanceError } from \"../types\";\nimport type { TrialPlanMachineContext } from \"./TrialPlanMachine\";\nimport { useCreateKafkaInstance } from \"./useCreateKafkaInstance\";\n\ntype SelectorReturn = {\n  form: TrialPlanMachineContext[\"form\"];\n  capabilities: TrialPlanMachineContext[\"capabilities\"];\n  selectedProvider: CloudProviderInfo | undefined;\n  sizes: TrialPlanMachineContext[\"sizes\"];\n\n  isFormEnabled: boolean;\n\n  isNameInvalid: boolean;\n  isNameEmpty: boolean;\n  isNameError: boolean;\n  isNameTaken: boolean;\n  isSizeLoadingError: boolean;\n  isSizeAvailable: boolean;\n  isSizeError: boolean;\n\n  isProviderError: boolean;\n  isRegionError: boolean;\n\n  isLoading: boolean;\n  isLoadingSizes: boolean;\n  isSaving: boolean;\n\n  error: CreateKafkaInstanceError | \"form-invalid\" | undefined;\n\n  setName: (name: string) => void;\n  setProvider: (name: CloudProvider) => void;\n  setRegion: (name: CloudRegion) => void;\n  onCreate: () => void;\n};\n\nexport function useTrialPlanMachine(): SelectorReturn {\n  const {\n    trialPlanMachine: service,\n    isLoading,\n    isSaving,\n  } = useCreateKafkaInstance();\n\n  if (!service) {\n    throw new Error(\n      \"useTrialPlanMachine should be called only when the parent CreateKafkaInstanceMachine is in the right state\"\n    );\n  }\n\n  const setName = useCallback(\n    (name: string) => service.send({ type: \"nameChange\", name }),\n    [service]\n  );\n  const setProvider = useCallback(\n    (provider: CloudProvider) =>\n      service.send({ type: \"providerChange\", provider }),\n    [service]\n  );\n  const setRegion = useCallback(\n    (region: CloudRegion) => service.send({ type: \"regionChange\", region }),\n    [service]\n  );\n  const onCreate = useCallback(() => service.send(\"create\"), [service]);\n\n  return useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => {\n        const isBlocked = state.hasTag(\"blocked\");\n        const isFormInvalid =\n          state.hasTag(\"formInvalid\") && state.hasTag(\"submitted\");\n        const isNameTaken = state.context.creationError === \"name-taken\";\n        const isConfigurable = state.hasTag(\"configurable\");\n        const isLoadingSizes = state.hasTag(\"sizeLoading\");\n\n        const selectedProvider = isBlocked\n          ? undefined\n          : state.context.capabilities.availableProviders.find(\n              (p) => p.id === state.context.form.provider\n            );\n\n        const error: SelectorReturn[\"error\"] = state.context.creationError\n          ? state.context.creationError\n          : isFormInvalid\n          ? \"form-invalid\"\n          : undefined;\n\n        return {\n          form: state.context.form,\n          capabilities: state.context.capabilities,\n          selectedProvider,\n          sizes: state.context.sizes,\n\n          isFormEnabled: !isLoading && !isSaving && !isBlocked,\n\n          isNameInvalid: state.hasTag(\"nameInvalid\"),\n          isNameEmpty: state.hasTag(\"nameEmpty\"),\n          isNameError:\n            state.hasTag(\"nameInvalid\") ||\n            isNameTaken ||\n            (!state.hasTag(\"nameValid\") && isFormInvalid),\n          isNameTaken,\n          isSizeLoadingError: state.hasTag(\"sizeError\"),\n          isSizeAvailable: !state.hasTag(\"sizeIdle\"),\n          isSizeError: !state.hasTag(\"sizeValid\") && isFormInvalid,\n\n          isProviderError: !state.hasTag(\"providerValid\") && isFormInvalid,\n          isRegionError: !state.hasTag(\"regionValid\") && isFormInvalid,\n\n          isLoading,\n          isLoadingSizes,\n          isConfigurable,\n          isSaving,\n\n          error,\n\n          setName,\n          setProvider,\n          setRegion,\n          onCreate,\n        };\n      },\n      [isLoading, isSaving, onCreate, setName, setProvider, setRegion]\n    )\n  );\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback } from \"react\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport type { Size } from \"ui-models/src/models/kafka\";\nimport type { CreateDedicatedKafkaInstanceError } from \"../types\";\nimport type { DedicatedPlanMachineContext } from \"./DedicatedPlanMachine\";\nimport { useCreateDedicatedKafkaInstance } from \"./useCreateDedicatedKafkaInstance\";\n\ntype SelectorReturn = {\n  form: DedicatedPlanMachineContext[\"form\"];\n  capabilities: DedicatedPlanMachineContext[\"capabilities\"];\n  selectedCluster: DedicatedCluster | undefined;\n  selectedSize: Size | undefined;\n  sizes: DedicatedPlanMachineContext[\"sizes\"];\n  remainingQuota: number | undefined;\n\n  isFormEnabled: boolean;\n\n  isNameInvalid: boolean;\n  isNameEmpty: boolean;\n  isNameError: boolean;\n  isNameTaken: boolean;\n  isSizeDisabled: boolean;\n  isSizeOverQuota: boolean;\n  isSizeLoadingError: boolean;\n  isSizeAvailable: boolean;\n  isSizeError: boolean;\n  isBillingError: boolean;\n  isBillingPrepaidAvailable: boolean;\n  isBillingPrepaidOverQuota: boolean;\n\n  isClusterError: boolean;\n\n  isLoading: boolean;\n  isLoadingSizes: boolean;\n  isSaving: boolean;\n\n  error: CreateDedicatedKafkaInstanceError | \"form-invalid\" | undefined;\n\n  setName: (name: string) => void;\n  setCluster: (name: DedicatedCluster) => void;\n  onCreate: () => void;\n  setSize: (size: Size) => void;\n  setBillingPrepaid: () => void;\n};\n\nexport function useDedicatedPlanMachine(): SelectorReturn {\n  const {\n    dedicatedPlanMachine: service,\n    isLoading,\n    isSaving,\n  } = useCreateDedicatedKafkaInstance();\n\n  if (!service) {\n    throw new Error(\n      \"useDedicatedPlanMachine should be called only when the parent CreateDedicatedKafkaInstanceMachine is in the right state\"\n    );\n  }\n\n  const setName = useCallback(\n    (name: string) => service.send({ type: \"nameChange\", name }),\n    [service]\n  );\n  const setCluster = useCallback(\n    (cluster: DedicatedCluster) =>\n      service.send({ type: \"clusterChange\", cluster }),\n    [service]\n  );\n  const onCreate = useCallback(() => service.send(\"create\"), [service]);\n  const setSize = useCallback(\n    (size: Size) => service.send({ type: \"sizeChange\", size }),\n    [service]\n  );\n\n  const setBillingPrepaid = useCallback(\n    () =>\n      service.send({\n        type: \"selectPrepaid\",\n      }),\n    [service]\n  );\n\n  return useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => {\n        const { creationError, capabilities, form, sizes } = state.context;\n        const isBlocked = state.hasTag(\"blocked\");\n        const isFormInvalid =\n          state.hasTag(\"formInvalid\") && state.hasTag(\"submitted\");\n        const isNameTaken = creationError === \"name-taken\";\n        const isConfigurable = state.hasTag(\"configurable\");\n        const isLoadingSizes = state.hasTag(\"sizeLoading\");\n\n        const isBillingPrepaidAvailable =\n          capabilities.remainingDedicatedQuota !== undefined;\n\n        const selectedCluster = isBlocked\n          ? undefined\n          : capabilities.availableClusters.find(\n              (p) => p.id === form.cluster?.id\n            );\n\n        const selectedSize = isBlocked\n          ? undefined\n          : sizes?.find((s) => form.size?.id === s.id);\n\n        const error: SelectorReturn[\"error\"] = creationError\n          ? creationError\n          : isFormInvalid\n          ? \"form-invalid\"\n          : undefined;\n\n        const remainingQuota = capabilities.remainingDedicatedQuota;\n\n        const isBillingPrepaidOverQuota: boolean = (() => {\n          if (\n            capabilities.remainingDedicatedQuota !== undefined &&\n            capabilities.remainingDedicatedQuota === 0\n          ) {\n            return true;\n          } else if (\n            selectedSize?.quota &&\n            capabilities.remainingDedicatedQuota\n          ) {\n            return selectedSize.quota > capabilities.remainingDedicatedQuota;\n          }\n          return false;\n        })();\n\n        return {\n          form: form,\n          capabilities,\n          selectedCluster,\n          selectedSize,\n          sizes: sizes,\n          remainingQuota,\n\n          isFormEnabled: !isLoading && !isSaving && !isBlocked,\n          isNameInvalid: state.hasTag(\"nameInvalid\"),\n          isNameEmpty: state.hasTag(\"nameEmpty\"),\n          isNameError:\n            state.hasTag(\"nameInvalid\") ||\n            isNameTaken ||\n            (!state.hasTag(\"nameValid\") && isFormInvalid),\n          isNameTaken,\n          isSizeDisabled: state.hasTag(\"sizeDisabled\"),\n          isSizeOverQuota: state.hasTag(\"sizeOverQuota\"),\n          isSizeLoadingError: state.hasTag(\"sizeError\"),\n          isSizeAvailable: !state.hasTag(\"sizeIdle\"),\n          isSizeError: !state.hasTag(\"sizeValid\") && isFormInvalid,\n          isClusterError: !state.hasTag(\"clusterValid\") && isFormInvalid,\n          isBillingError: !state.hasTag(\"billingValid\") && isFormInvalid,\n          isBillingPrepaidAvailable,\n          isBillingPrepaidOverQuota,\n          isLoading,\n          isLoadingSizes,\n          isConfigurable,\n          isSaving,\n\n          error,\n\n          setName,\n          setCluster,\n          onCreate,\n          setSize,\n          setBillingPrepaid,\n        };\n      },\n      [\n        isLoading,\n        isSaving,\n        onCreate,\n        setBillingPrepaid,\n        setName,\n        setCluster,\n        setSize,\n      ]\n    )\n  );\n}\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { FormEvent, VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { CloudProvider, MarketPlace } from \"ui-models/src/models/kafka\";\nimport type {\n  FieldInstanceNameProps,\n  FieldSizeProps,\n  InstanceInfoProps,\n} from \"./components\";\nimport {\n  FieldAZ,\n  FieldBillingTiles,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldInstanceName,\n  FieldSize,\n  FormAlerts,\n  InstanceInfo,\n  InstanceInfoSkeleton,\n  ModalAlertsStandardPlan,\n} from \"./components\";\nimport { useStandardPlanMachine } from \"./machines\";\n\nexport type StandardInstanceFormProps = {\n  formId: string;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n  subscriptionOptionsHref: string;\n};\n\nexport const StandardInstanceForm: VoidFunctionComponent<\n  StandardInstanceFormProps\n> = ({\n  formId,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n  subscriptionOptionsHref,\n}) => {\n  const {\n    isBillingSelectionRequired,\n    isBillingSingleMarketplace,\n    capabilities,\n    selectedSize,\n    billingType,\n    error,\n    onCreate,\n  } = useStandardPlanMachine();\n\n  const onSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      onCreate();\n    },\n    [onCreate]\n  );\n\n  const instanceInfoBilling: InstanceInfoProps[\"billing\"] = (() => {\n    if (!isBillingSelectionRequired) {\n      if (isBillingSingleMarketplace === false) {\n        return {\n          value: \"prepaid\",\n          subscriptionOptionsHref,\n          type: billingType,\n        };\n      } else {\n        return {\n          value: isBillingSingleMarketplace,\n          subscriptionOptionsHref,\n          type: billingType,\n        };\n      }\n    }\n    return undefined;\n  })();\n\n  return (\n    <>\n      <ModalAlertsStandardPlan\n        instanceAvailability={capabilities.instanceAvailability}\n        onClickContactUs={onClickContactUs}\n      />\n\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <FormAlerts error={error} onClickContactUS={onClickContactUs} />\n          <Form onSubmit={onSubmit} id={formId}>\n            <ConnectedFieldInstanceName />\n            <ConnectedFieldCloudProvider />\n            <ConnectedFieldCloudRegion />\n            <ConnectedFieldAZ />\n            <ConnectedFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n            {isBillingSelectionRequired && (\n              <ConnectedBillingTiles\n                subscriptionOptionsHref={subscriptionOptionsHref}\n              />\n            )}\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          {selectedSize === undefined ? (\n            <InstanceInfoSkeleton\n              isTrial={false}\n              onClickQuickStart={onClickQuickStart}\n            />\n          ) : (\n            <InstanceInfo\n              isTrial={false}\n              trialDurationInHours={undefined}\n              ingress={selectedSize.ingress}\n              egress={selectedSize.egress}\n              storage={selectedSize.storage}\n              maxPartitions={selectedSize.maxPartitions}\n              connections={selectedSize.connections}\n              connectionRate={selectedSize.connectionRate}\n              messageSize={selectedSize.messageSize}\n              onClickQuickStart={onClickQuickStart}\n              streamingUnits={selectedSize.displayName}\n              billing={instanceInfoBilling}\n            />\n          )}\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const ConnectedFieldInstanceName: VoidFunctionComponent = () => {\n  const {\n    form,\n    isNameTaken,\n    isNameInvalid,\n    isNameEmpty,\n    isNameError,\n    isFormEnabled,\n    setName,\n  } = useStandardPlanMachine();\n\n  const validity: FieldInstanceNameProps[\"validity\"] = (() => {\n    if (isNameTaken) {\n      return \"taken\";\n    } else if (isNameInvalid) {\n      return \"invalid\";\n    } else if (isNameEmpty && isNameError) {\n      return \"required\";\n    }\n    return \"valid\";\n  })();\n\n  return (\n    <FieldInstanceName\n      value={form.name || \"\"}\n      validity={validity}\n      isDisabled={!isFormEnabled}\n      onChange={setName}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudProvider: VoidFunctionComponent = () => {\n  const {\n    form,\n    capabilities,\n    isProviderError,\n    isFormEnabled,\n    isBillingSingleMarketplace,\n    setProvider,\n  } = useStandardPlanMachine();\n\n  const providers =\n    isBillingSingleMarketplace &&\n    isBillingSingleMarketplace.marketplace !== \"rhm\"\n      ? capabilities.availableProviders.map((p) => ({\n          ...p,\n          isDisabled: p.id !== isBillingSingleMarketplace.marketplace,\n        }))\n      : capabilities.availableProviders;\n\n  return (\n    <FieldCloudProvider\n      isValid={!isProviderError}\n      providers={providers}\n      value={form.provider}\n      isDisabled={!isFormEnabled}\n      onChange={setProvider}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudRegion: VoidFunctionComponent = () => {\n  const {\n    form,\n    selectedProvider,\n    selectedSize,\n    isRegionError,\n    isFormEnabled,\n    capabilities,\n    error,\n    setRegion,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldCloudRegion\n      validity={\n        isRegionError\n          ? \"required\"\n          : error === \"region-unavailable\" ||\n            capabilities.instanceAvailability === \"regions-unavailable\"\n          ? \"region-unavailable\"\n          : \"valid\"\n      }\n      regions={selectedProvider?.regions}\n      value={form.region}\n      isDisabled={!isFormEnabled}\n      isSizeUnavailable={selectedSize?.isDisabled || false}\n      onChange={setRegion}\n    />\n  );\n};\n\nexport const ConnectedFieldAZ: VoidFunctionComponent = () => {\n  const { isFormEnabled } = useStandardPlanMachine();\n\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={!isFormEnabled}\n      onChange={() => false} // AZ is defined by the backend, we just visualize the value here\n    />\n  );\n};\n\nexport const ConnectedFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  const {\n    form,\n    sizes,\n    isSizeOverQuota,\n    isSizeDisabled,\n    isSizeError,\n    isSizeLoadingError,\n    isBillingSelectionRequired,\n    isFormEnabled,\n    isLoadingSizes,\n    isLoading,\n    setSize,\n    remainingQuota,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldSize\n      value={form.size?.quota}\n      sizes={sizes}\n      remainingQuota={isBillingSelectionRequired ? undefined : remainingQuota}\n      isDisabled={!isFormEnabled || sizes === undefined}\n      isLoading={isLoading || isLoadingSizes}\n      isError={isSizeError}\n      isLoadingError={isSizeLoadingError}\n      validity={\n        isSizeOverQuota ? \"out-of-quota\" : isSizeDisabled ? \"required\" : \"valid\"\n      }\n      onChange={setSize}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n\nfunction isMarketplaceDisabled(\n  marketplace: MarketPlace,\n  selectedProvider: CloudProvider | undefined\n) {\n  if (marketplace === \"rhm\") {\n    return false;\n  } else if (selectedProvider) {\n    return marketplace !== selectedProvider;\n  }\n  return false;\n}\n\nexport const ConnectedBillingTiles: VoidFunctionComponent<{\n  subscriptionOptionsHref: string;\n}> = ({ subscriptionOptionsHref }) => {\n  const {\n    form,\n    capabilities,\n    selectedBilling,\n    billingType,\n    isBillingPrepaidAvailable,\n    isSizeOverQuota,\n    isBillingError,\n    isBillingPrepaidOverQuota,\n    isBillingMarketplaceOverQuota,\n    setBillingPrepaid,\n    setBillingSubscription,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldBillingTiles\n      value={\n        selectedBilling === \"prepaid\"\n          ? \"prepaid\"\n          : selectedBilling?.subscription\n      }\n      hasPrepaid={isBillingPrepaidAvailable}\n      subscriptions={capabilities.marketplaceSubscriptions.flatMap((mq) =>\n        mq.subscriptions.map((subscription) => ({\n          marketplace: mq.marketplace,\n          subscription,\n          isDisabled: isMarketplaceDisabled(mq.marketplace, form.provider),\n        }))\n      )}\n      isPrepaidOverQuota={isBillingPrepaidOverQuota}\n      prepaidQuota={capabilities.remainingPrepaidQuota || 0} // we can default to 0 here just to make TS happy, we will have the info here\n      isMarketplaceOverQuota={isBillingMarketplaceOverQuota}\n      marketplaceQuota={capabilities.remainingMarketplaceQuota || 0} // we can default to 0 here just to make TS happy, we will have the info here\n      onPrepaid={setBillingPrepaid}\n      onSubscription={setBillingSubscription}\n      isValid={!isSizeOverQuota && !isBillingError}\n      billingType={billingType}\n      subscriptionOptionsHref={subscriptionOptionsHref}\n    />\n  );\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { FormEvent, VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { FieldSizeProps } from \"./components\";\nimport {\n  ModalAlertsTrialPlan,\n  FormAlerts,\n  InstanceInfoSkeleton,\n  InstanceInfo,\n  FieldInstanceName,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldAZ,\n  FieldSize,\n} from \"./components\";\nimport { useTrialPlanMachine } from \"./machines\";\n\nexport type TrialInstanceFormProps = {\n  formId: string;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n  onClickKafkaOverview: () => void;\n};\n\nexport const TrialInstanceForm: VoidFunctionComponent<\n  TrialInstanceFormProps\n> = ({\n  formId,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n  onClickKafkaOverview,\n}) => {\n  const { capabilities, error, isLoadingSizes, sizes, onCreate } =\n    useTrialPlanMachine();\n\n  const onSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      onCreate();\n    },\n    [onCreate]\n  );\n\n  return (\n    <>\n      <ModalAlertsTrialPlan\n        instanceAvailability={capabilities.instanceAvailability}\n        trialDurationInHours={sizes?.trial.trialDurationHours}\n        onClickKafkaOverview={onClickKafkaOverview}\n      />\n\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <FormAlerts error={error} onClickContactUS={onClickContactUs} />\n          <Form onSubmit={onSubmit} id={formId}>\n            <ConnectedFieldInstanceName />\n            <ConnectedFieldCloudProvider />\n            <ConnectedFieldCloudRegion />\n            <ConnectedFieldAZ />\n            <ConnectedFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          {isLoadingSizes || !sizes ? (\n            <InstanceInfoSkeleton\n              isTrial={false}\n              onClickQuickStart={onClickQuickStart}\n            />\n          ) : (\n            <InstanceInfo\n              isTrial={true}\n              trialDurationInHours={sizes.trial.trialDurationHours}\n              ingress={sizes.trial.ingress}\n              egress={sizes.trial.egress}\n              storage={sizes.trial.storage}\n              maxPartitions={sizes.trial.maxPartitions}\n              connections={sizes.trial.connections}\n              connectionRate={sizes.trial.connectionRate}\n              messageSize={sizes.trial.messageSize}\n              onClickQuickStart={onClickQuickStart}\n              streamingUnits={sizes.trial.displayName}\n              billing={undefined}\n            />\n          )}\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const ConnectedFieldInstanceName: VoidFunctionComponent = () => {\n  const {\n    form,\n    isNameTaken,\n    isNameInvalid,\n    isNameEmpty,\n    isNameError,\n    isFormEnabled,\n    setName,\n  } = useTrialPlanMachine();\n\n  return (\n    <FieldInstanceName\n      value={form.name || \"\"}\n      validity={\n        isNameTaken\n          ? \"taken\"\n          : isNameInvalid\n          ? \"invalid\"\n          : isNameEmpty && isNameError\n          ? \"required\"\n          : \"valid\"\n      }\n      isDisabled={!isFormEnabled}\n      onChange={setName}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudProvider: VoidFunctionComponent = () => {\n  const { form, capabilities, isProviderError, isFormEnabled, setProvider } =\n    useTrialPlanMachine();\n\n  return (\n    <FieldCloudProvider\n      isValid={!isProviderError}\n      providers={capabilities.availableProviders || []}\n      value={form.provider}\n      isDisabled={!isFormEnabled}\n      onChange={setProvider}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudRegion: VoidFunctionComponent = () => {\n  const {\n    form,\n    selectedProvider,\n    isRegionError,\n    isFormEnabled,\n    error,\n    setRegion,\n  } = useTrialPlanMachine();\n\n  return (\n    <FieldCloudRegion\n      validity={\n        isRegionError\n          ? \"required\"\n          : error === \"region-unavailable\"\n          ? \"region-unavailable\"\n          : \"valid\"\n      }\n      regions={selectedProvider?.regions}\n      value={form.region}\n      isDisabled={!isFormEnabled}\n      isSizeUnavailable={false}\n      onChange={setRegion}\n    />\n  );\n};\n\nexport const ConnectedFieldAZ: VoidFunctionComponent = () => {\n  const { isFormEnabled } = useTrialPlanMachine();\n\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"single\"}\n      value={\"single\"}\n      isDisabled={!isFormEnabled}\n      onChange={() => false} // AZ is defined by the backend, we just visualize the value here\n    />\n  );\n};\n\nexport const ConnectedFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  const { sizes, isSizeError, isSizeLoadingError, isLoadingSizes, isLoading } =\n    useTrialPlanMachine();\n\n  return (\n    <FieldSize\n      value={1}\n      sizes={sizes?.standard}\n      remainingQuota={undefined}\n      isDisabled={true}\n      isLoading={isLoading || isLoadingSizes}\n      isError={isSizeError}\n      isLoadingError={isSizeLoadingError}\n      validity={\"developer\"}\n      onChange={() => false} // for trial instances users can't change the size. This will never get fired\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n","import {\n  Alert,\n  Button,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\nimport { OutlinedClockIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nimport { CreateKafkaInstanceProvider } from \"./machines/CreateKafkaInstanceProvider\";\n\nimport \"./CreateKafkaInstance.css\";\nimport { LoadingForm } from \"./LoadingForm\";\nimport { useCreateKafkaInstance } from \"./machines\";\nimport { StandardInstanceForm } from \"./StandardInstanceForm\";\nimport { TrialInstanceForm } from \"./TrialInstanceForm\";\nimport type { CreateKafkaInstanceServices } from \"./machines\";\nimport { ModalAlertsLoading, ModalAlertsSystemUnavailable } from \"./components\";\n\nexport type CreateKafkaInstanceProps = ConnectedCreateKafkaInstanceProps &\n  CreateKafkaInstanceServices;\nexport const CreateKafkaInstance: FunctionComponent<\n  CreateKafkaInstanceProps\n> = ({\n  checkStandardQuota,\n  checkDeveloperAvailability,\n  fetchProvidersWithRegions,\n  getStandardSizes,\n  getTrialSizes,\n  onCreate,\n  ...props\n}) =>\n  props.isModalOpen ? (\n    <CreateKafkaInstanceProvider\n      checkStandardQuota={checkStandardQuota}\n      checkDeveloperAvailability={checkDeveloperAvailability}\n      fetchProvidersWithRegions={fetchProvidersWithRegions}\n      getStandardSizes={getStandardSizes}\n      getTrialSizes={getTrialSizes}\n      onCreate={onCreate}\n    >\n      <ConnectedCreateKafkaInstance {...props} />\n    </CreateKafkaInstanceProvider>\n  ) : null;\n\nexport type ConnectedCreateKafkaInstanceProps = {\n  /**\n   *\n   * Flag to show the modal\n   */\n  isModalOpen: boolean;\n\n  /**\n   * Set this to `true` on Storybook when there are multiple modals open at a time.\n   */\n  disableFocusTrap?: boolean;\n  /**\n   * The parent container to append the modal to. Defaults to document.body\n   */\n  appendTo?: () => HTMLElement;\n\n  /**\n   * A callback for when the cancel or close button are clicked.\n   */\n  onCancel: () => void;\n  onClickQuickStart: () => void;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickKafkaOverview: () => void;\n  subscriptionOptionsHref: string;\n};\nexport const ConnectedCreateKafkaInstance: VoidFunctionComponent<\n  ConnectedCreateKafkaInstanceProps\n> = ({\n  isModalOpen,\n  appendTo,\n  onClickQuickStart,\n  onCancel,\n  disableFocusTrap,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickKafkaOverview,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const { isLoading, isStandardPlan, isTrialPlan, isSaving } =\n    useCreateKafkaInstance();\n\n  const FORM_ID = \"create_kafka_instance_form\";\n\n  return (\n    <Modal\n      id=\"modalCreateKafka\"\n      variant={ModalVariant.large}\n      title={t(\"create_instance_title\")}\n      disableFocusTrap={disableFocusTrap}\n      isOpen={isModalOpen}\n      ouiaId=\"modal-create-kafka\"\n      onClose={onCancel}\n      appendTo={appendTo}\n      position=\"top\"\n      footer={\n        <Stack hasGutter={true}>\n          <StackItem>\n            <Alert\n              className=\"mas--CreateKafkaInstance__creationTimeAlert\"\n              customIcon={<OutlinedClockIcon />}\n              variant=\"info\"\n              isInline\n              isPlain\n              title={t(\"instance_creation_time_alert\")}\n            />\n          </StackItem>\n          <StackItem>\n            <Button\n              key=\"submit\"\n              variant=\"primary\"\n              type=\"submit\"\n              form={FORM_ID}\n              spinnerAriaValueText={t(\"common:submitting_request\")}\n              isDisabled={isLoading || isSaving}\n              isLoading={isSaving}\n              data-testid=\"modalCreateKafka-buttonSubmit\"\n              ouiaId=\"button-create\"\n            >\n              {t(\"create_instance\")}\n            </Button>\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              onClick={onCancel}\n              data-testid=\"modalCreateKafka-buttonCancel\"\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      {(() => {\n        switch (true) {\n          case isLoading:\n            return (\n              <>\n                <ModalAlertsLoading />\n                <LoadingForm\n                  onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                  onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                  onClickQuickStart={onClickQuickStart}\n                />\n              </>\n            );\n          case isStandardPlan:\n            return (\n              <StandardInstanceForm\n                formId={FORM_ID}\n                onClickContactUs={onClickContactUs}\n                onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                onClickQuickStart={onClickQuickStart}\n                subscriptionOptionsHref={subscriptionOptionsHref}\n              />\n            );\n          case isTrialPlan:\n            return (\n              <TrialInstanceForm\n                formId={FORM_ID}\n                onClickContactUs={onClickContactUs}\n                onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                onClickQuickStart={onClickQuickStart}\n                onClickKafkaOverview={onClickKafkaOverview}\n              />\n            );\n          default:\n            return (\n              <>\n                <ModalAlertsSystemUnavailable />\n                <LoadingForm\n                  onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                  onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                  onClickQuickStart={onClickQuickStart}\n                />\n              </>\n            );\n        }\n      })()}\n    </Modal>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Skeleton,\n  Spinner,\n} from \"@patternfly/react-core\";\nimport { ErrorCircleOIcon, OkIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\n\nexport type DedicatedClusterTilesProps = {\n  clusters: (DedicatedCluster & { isDisabled?: boolean })[];\n  value: DedicatedCluster | undefined;\n  onChange: (provider: DedicatedCluster) => void;\n  isDisabled: boolean;\n  validated?: SelectProps[\"validated\"];\n};\nexport const DedicatedClusterTiles: VoidFunctionComponent<\n  DedicatedClusterTilesProps\n> = ({ clusters, value, onChange, isDisabled, validated }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      {clusters.length === 0 && (\n        <Skeleton\n          className=\"pf-m-text-4xl\"\n          screenreaderText=\"Loading contents\"\n        />\n      )}\n      <div role=\"listbox\" aria-label={t(\"select_cloud_provider\")}>\n        <Flex\n          justifyContent={{ default: \"justifyContentSpaceBetween\" }}\n          spacer={{ default: \"spacerNone\" }}\n          spaceItems={{ default: \"spaceItemsXs\" }}\n        >\n          {clusters.map((c) => (\n            <FlexItem grow={{ default: \"grow\" }} key={c.id}>\n              <Card\n                className={\"pf-u-w-100\"}\n                hasSelectableInput={true}\n                isSelected={value === c}\n                isSelectableRaised={true}\n                isDisabledRaised={isDisabled || c.status !== \"ready\"}\n                onSelectableInputChange={() => onChange(c)}\n              >\n                <CardTitle>{t(\"openshift_cluster\")}</CardTitle>\n                <CardBody>{c.id}</CardBody>\n                <CardFooter>\n                  {(() => {\n                    switch (c.status) {\n                      case \"ready\":\n                        return <OkIcon />;\n                      case \"provisioning\":\n                        return <Spinner size={\"sm\"} />;\n                      case \"failed\":\n                        return <ErrorCircleOIcon />;\n                    }\n                  })()}\n                  &nbsp;\n                  {c.status}\n                </CardFooter>\n              </Card>\n            </FlexItem>\n          ))}\n        </Flex>\n      </div>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-cloud-provider-option\"\n        name=\"cloud-provider\"\n        isDisabled={isDisabled}\n        validated={validated}\n        onChange={(value) => onChange(value as unknown as DedicatedCluster)}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_dedicated_cluster\")}\n          />,\n          clusters.map((c, index) => {\n            return <FormSelectOption key={index} value={c} label={c.id} />;\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n","import { FormGroup } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DedicatedClusterTilesProps } from \"./DedicatedClusterTiles\";\nimport { DedicatedClusterTiles } from \"./DedicatedClusterTiles\";\n\nexport type FieldDedicatedClusterProps = {\n  isValid: boolean;\n} & Omit<DedicatedClusterTilesProps, \"validated\">;\nexport const FieldDedicatedCluster: VoidFunctionComponent<\n  FieldDedicatedClusterProps\n> = ({ value, clusters, onChange, isDisabled, isValid }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const validated = !isValid ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={t(\"cloud_provider\")}\n      fieldId=\"form-cloud-provider-option\"\n      validated={validated}\n      helperTextInvalid={t(\"common:required\")}\n      isRequired\n    >\n      <DedicatedClusterTiles\n        clusters={clusters}\n        value={value}\n        onChange={onChange}\n        isDisabled={isDisabled}\n        validated={validated}\n      />\n    </FormGroup>\n  );\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { FormEvent, VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { FieldInstanceNameProps, FieldSizeProps } from \"./components\";\nimport {\n  FieldAZ,\n  FieldInstanceName,\n  FieldSize,\n  FormAlerts,\n  InstanceInfo,\n  InstanceInfoSkeleton,\n  ModalAlertsDedicatedPlan,\n} from \"./components\";\nimport { FieldDedicatedCluster } from \"./components/FieldDedicatedCluster\";\nimport { useDedicatedPlanMachine } from \"./machines\";\n\nexport type DedicatedInstanceFormProps = {\n  formId: string;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n  subscriptionOptionsHref: string;\n};\n\nexport const DedicatedInstanceForm: VoidFunctionComponent<\n  DedicatedInstanceFormProps\n> = ({\n  formId,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n  subscriptionOptionsHref,\n}) => {\n  const { capabilities, selectedSize, error, onCreate } =\n    useDedicatedPlanMachine();\n\n  const onSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      onCreate();\n    },\n    [onCreate]\n  );\n\n  return (\n    <>\n      <ModalAlertsDedicatedPlan\n        instanceAvailability={capabilities.instanceAvailability}\n        onClickContactUs={onClickContactUs}\n      />\n\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <FormAlerts error={error} onClickContactUS={onClickContactUs} />\n          <Form onSubmit={onSubmit} id={formId}>\n            <ConnectedFieldInstanceName />\n            <ConnectedFieldCloudProvider />\n            <ConnectedFieldAZ />\n            <ConnectedFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          {selectedSize === undefined ? (\n            <InstanceInfoSkeleton\n              isTrial={false}\n              onClickQuickStart={onClickQuickStart}\n            />\n          ) : (\n            <InstanceInfo\n              isTrial={false}\n              trialDurationInHours={undefined}\n              ingress={selectedSize.ingress}\n              egress={selectedSize.egress}\n              storage={selectedSize.storage}\n              maxPartitions={selectedSize.maxPartitions}\n              connections={selectedSize.connections}\n              connectionRate={selectedSize.connectionRate}\n              messageSize={selectedSize.messageSize}\n              onClickQuickStart={onClickQuickStart}\n              streamingUnits={selectedSize.displayName}\n              billing={{\n                value: \"dedicated\",\n                subscriptionOptionsHref,\n                type: \"rh-only\",\n              }}\n            />\n          )}\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const ConnectedFieldInstanceName: VoidFunctionComponent = () => {\n  const {\n    form,\n    isNameTaken,\n    isNameInvalid,\n    isNameEmpty,\n    isNameError,\n    isFormEnabled,\n    setName,\n  } = useDedicatedPlanMachine();\n\n  const validity: FieldInstanceNameProps[\"validity\"] = (() => {\n    if (isNameTaken) {\n      return \"taken\";\n    } else if (isNameInvalid) {\n      return \"invalid\";\n    } else if (isNameEmpty && isNameError) {\n      return \"required\";\n    }\n    return \"valid\";\n  })();\n\n  return (\n    <FieldInstanceName\n      value={form.name || \"\"}\n      validity={validity}\n      isDisabled={!isFormEnabled}\n      onChange={setName}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudProvider: VoidFunctionComponent = () => {\n  const { form, capabilities, isClusterError, isFormEnabled, setCluster } =\n    useDedicatedPlanMachine();\n\n  const clusters = capabilities.availableClusters;\n\n  return (\n    <FieldDedicatedCluster\n      isValid={!isClusterError}\n      clusters={clusters}\n      value={form.cluster}\n      isDisabled={!isFormEnabled}\n      onChange={setCluster}\n    />\n  );\n};\n\nexport const ConnectedFieldAZ: VoidFunctionComponent = () => {\n  const { isFormEnabled } = useDedicatedPlanMachine();\n\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={!isFormEnabled}\n      onChange={() => false} // AZ is defined by the backend, we just visualize the value here\n    />\n  );\n};\n\nexport const ConnectedFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  const {\n    form,\n    sizes,\n    isSizeOverQuota,\n    isSizeDisabled,\n    isSizeError,\n    isSizeLoadingError,\n    isFormEnabled,\n    isLoadingSizes,\n    isLoading,\n    setSize,\n    remainingQuota,\n  } = useDedicatedPlanMachine();\n\n  return (\n    <FieldSize\n      value={form.size?.quota}\n      sizes={sizes}\n      remainingQuota={remainingQuota}\n      isDisabled={!isFormEnabled || sizes === undefined}\n      isLoading={isLoading || isLoadingSizes}\n      isError={isSizeError}\n      isLoadingError={isSizeLoadingError}\n      validity={\n        isSizeOverQuota ? \"out-of-quota\" : isSizeDisabled ? \"required\" : \"valid\"\n      }\n      onChange={setSize}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n","import {\n  Alert,\n  Button,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\nimport { OutlinedClockIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { ModalAlertsLoading, ModalAlertsSystemUnavailable } from \"./components\";\n\nimport \"./CreateKafkaInstance.css\";\nimport { DedicatedInstanceForm } from \"./DedicatedInstanceForm\";\nimport { LoadingForm } from \"./LoadingForm\";\nimport type { CreateDedicatedKafkaInstanceServices } from \"./machines\";\nimport {\n  CreateDedicatedKafkaInstanceProvider,\n  useCreateDedicatedKafkaInstance,\n} from \"./machines\";\n\nexport type CreateDedicatedKafkaInstanceProps =\n  ConnectedCreateDedicatedKafkaInstanceProps &\n    CreateDedicatedKafkaInstanceServices;\nexport const CreateDedicatedKafkaInstance: FunctionComponent<\n  CreateDedicatedKafkaInstanceProps\n> = ({\n  checkDedicatedQuota,\n  getDedicatedSizes,\n  fetchClusters,\n  onCreate,\n  ...props\n}) =>\n  props.isModalOpen ? (\n    <CreateDedicatedKafkaInstanceProvider\n      checkDedicatedQuota={checkDedicatedQuota}\n      getDedicatedSizes={getDedicatedSizes}\n      fetchClusters={fetchClusters}\n      onCreate={onCreate}\n    >\n      <ConnectedCreateDedicatedKafkaInstance {...props} />\n    </CreateDedicatedKafkaInstanceProvider>\n  ) : null;\n\nexport type ConnectedCreateDedicatedKafkaInstanceProps = {\n  /**\n   *\n   * Flag to show the modal\n   */\n  isModalOpen: boolean;\n\n  /**\n   * Set this to `true` on Storybook when there are multiple modals open at a time.\n   */\n  disableFocusTrap?: boolean;\n  /**\n   * The parent container to append the modal to. Defaults to document.body\n   */\n  appendTo?: () => HTMLElement;\n\n  /**\n   * A callback for when the cancel or close button are clicked.\n   */\n  onCancel: () => void;\n  onClickQuickStart: () => void;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickKafkaOverview: () => void;\n  subscriptionOptionsHref: string;\n};\nexport const ConnectedCreateDedicatedKafkaInstance: VoidFunctionComponent<\n  ConnectedCreateDedicatedKafkaInstanceProps\n> = ({\n  isModalOpen,\n  appendTo,\n  onClickQuickStart,\n  onCancel,\n  disableFocusTrap,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickKafkaOverview,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const { isLoading, isAvailable, isSaving } =\n    useCreateDedicatedKafkaInstance();\n\n  const FORM_ID = \"create_kafka_instance_form\";\n\n  return (\n    <Modal\n      id=\"modalCreateKafka\"\n      variant={ModalVariant.large}\n      title={t(\"create_instance_title\")}\n      disableFocusTrap={disableFocusTrap}\n      isOpen={isModalOpen}\n      ouiaId=\"modal-create-kafka\"\n      onClose={onCancel}\n      appendTo={appendTo}\n      position=\"top\"\n      footer={\n        <Stack hasGutter={true}>\n          <StackItem>\n            <Alert\n              className=\"mas--CreateDedicatedKafkaInstance__creationTimeAlert\"\n              customIcon={<OutlinedClockIcon />}\n              variant=\"info\"\n              isInline\n              isPlain\n              title={t(\"instance_creation_time_alert\")}\n            />\n          </StackItem>\n          <StackItem>\n            <Button\n              key=\"submit\"\n              variant=\"primary\"\n              type=\"submit\"\n              form={FORM_ID}\n              spinnerAriaValueText={t(\"common:submitting_request\")}\n              isDisabled={isLoading || isSaving}\n              isLoading={isSaving}\n              data-testid=\"modalCreateKafka-buttonSubmit\"\n              ouiaId=\"button-create\"\n            >\n              {t(\"create_instance\")}\n            </Button>\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              onClick={onCancel}\n              data-testid=\"modalCreateKafka-buttonCancel\"\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      {(() => {\n        switch (true) {\n          case isLoading:\n            return (\n              <>\n                <ModalAlertsLoading />\n                <LoadingForm\n                  onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                  onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                  onClickQuickStart={onClickQuickStart}\n                />\n              </>\n            );\n          case isAvailable:\n            return (\n              <DedicatedInstanceForm\n                formId={FORM_ID}\n                onClickContactUs={onClickContactUs}\n                onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                onClickQuickStart={onClickQuickStart}\n                subscriptionOptionsHref={subscriptionOptionsHref}\n              />\n            );\n          default:\n            return (\n              <>\n                <ModalAlertsSystemUnavailable />\n                <LoadingForm\n                  onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                  onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                  onClickQuickStart={onClickQuickStart}\n                />\n              </>\n            );\n        }\n      })()}\n    </Modal>\n  );\n};\n","import { DropdownGroup } from \"@patternfly/react-core\";\nimport { ActionsColumn } from \"@patternfly/react-table\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type KafkaInstanceActionsProps = {\n  onDetails: () => void;\n  onConnection: () => void;\n  canOpenConnection: boolean;\n  canChangeOwner: boolean;\n  onChangeOwner: () => void;\n  canDelete: boolean;\n  onDelete: () => void;\n};\n\nexport const KafkaInstanceActions: VoidFunctionComponent<\n  KafkaInstanceActionsProps\n> = ({\n  onDetails,\n  onConnection,\n  canOpenConnection,\n  canChangeOwner,\n  onChangeOwner,\n  canDelete,\n  onDelete,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <ActionsColumn\n      rowData={hackZIndex}\n      items={[\n        {\n          customChild: (\n            <DropdownGroup\n              label={t(\"table.actions.view-instance-information\")}\n            />\n          ),\n        },\n        {\n          title: t(\"table.actions.details\"),\n          onClick: onDetails,\n        },\n        {\n          title: t(\"table.actions.connection\"),\n          ...(!canOpenConnection\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_see_connections\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onConnection,\n              }),\n        },\n        {\n          isSeparator: true,\n        },\n        {\n          title: t(\"table.actions.change-owner\"),\n          ...(!canChangeOwner\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_change_owner\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onChangeOwner,\n              }),\n        },\n        {\n          title: t(\"table.actions.delete\"),\n          ...(!canDelete\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_delete_kafka\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onDelete,\n              }),\n        },\n      ]}\n    />\n  );\n};\n\nconst hackZIndex = {\n  actionProps: {\n    style: { zIndex: 9999 },\n  },\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { KafkaInstanceActionsProps } from \"./KafkaInstanceActions\";\nimport { KafkaInstanceActions } from \"./KafkaInstanceActions\";\n\ntype Sections =\n  | \"dashboard\"\n  | \"topics\"\n  | \"consumer\"\n  | \"permissions\"\n  | \"settings\";\n\nexport type DataPlaneHeaderProps = {\n  instancesHref: string;\n  instanceName: string;\n  activeSection: Sections;\n  sectionsHref: { [key in Sections]: string };\n} & KafkaInstanceActionsProps;\n\nexport const DataPlaneHeader: VoidFunctionComponent<DataPlaneHeaderProps> = ({\n  instancesHref,\n  instanceName,\n  activeSection,\n  sectionsHref,\n  ...actionsProps\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        hasShadowBottom={true}\n      >\n        <Breadcrumb\n          ouiaId={\"breadcrumb\"}\n          className=\"pf-c-page__main-breadcrumb\"\n        >\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instancesHref}>{t(\"common:kafka_instance\")}</Link>\n            )}\n          />\n          <BreadcrumbItem isActive={true}>{instanceName}</BreadcrumbItem>\n        </Breadcrumb>\n        <Level>\n          <LevelItem>\n            <TextContent className={\"pf-u-p-md pf-u-p-lg-on-xl\"}>\n              <Text component=\"h1\">{instanceName}</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <KafkaInstanceActions {...actionsProps} />\n          </LevelItem>\n        </Level>\n        <Nav\n          variant=\"tertiary\"\n          data-testid=\"pageKafka-tabProperties\"\n          className=\"pf-u-px-sm-on-xl\"\n        >\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabDashboard\"\n              id=\"dashboard-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.dashboard\")}\n              ouiaId={\"tab-Dashboard\"}\n              isActive={activeSection === \"dashboard\"}\n            >\n              <Link to={sectionsHref[\"dashboard\"]}>\n                {t(\"dataPlaneNavigation.dashboard\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabTopics\"\n              id=\"topics-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.topics\")}\n              ouiaId={\"tab-Topics\"}\n              isActive={activeSection === \"topics\"}\n            >\n              <Link to={sectionsHref[\"topics\"]}>\n                {t(\"dataPlaneNavigation.topics\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabConsumers\"\n              id=\"consumer-groups-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.consumer_groups\")}\n              ouiaId={\"tab-Consumers\"}\n              isActive={activeSection === \"consumer\"}\n            >\n              <Link to={sectionsHref[\"consumer\"]}>\n                {t(\"dataPlaneNavigation.consumer_groups\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabPermissions\"\n              id=\"permissions-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.permissions\")}\n              ouiaId={\"tab-Permissions\"}\n              isActive={activeSection === \"permissions\"}\n            >\n              <Link to={sectionsHref[\"permissions\"]}>\n                {t(\"dataPlaneNavigation.permissions\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabSettings\"\n              id=\"settings-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.settings\")}\n              ouiaId={\"tab-Settings\"}\n              isActive={activeSection === \"settings\"}\n            >\n              <Link to={sectionsHref[\"settings\"]}>\n                {t(\"dataPlaneNavigation.settings\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n      </PageSection>\n    </>\n  );\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { KafkaInstanceActionsProps } from \"./KafkaInstanceActions\";\nimport { KafkaInstanceActions } from \"./KafkaInstanceActions\";\n\ntype Sections = \"consumer\" | \"messages\" | \"properties\" | \"schemas\";\n\nexport type DataPlaneTopicHeaderProps = {\n  instancesHref: string;\n  instanceName: string;\n  instanceDetailHref: string;\n  instanceTopicsHref: string;\n  topicName: string;\n  activeSection: Sections;\n  tabsHref: { [key in Sections]: string };\n} & KafkaInstanceActionsProps;\n\nexport const DataPlaneTopicHeader: VoidFunctionComponent<\n  DataPlaneTopicHeaderProps\n> = ({\n  instancesHref,\n  instanceName,\n  instanceDetailHref,\n  instanceTopicsHref,\n  topicName,\n  activeSection,\n  tabsHref,\n  ...actionsProps\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <Breadcrumb ouiaId={\"breadcrumb\"}>\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instancesHref}>{t(\"common:kafka_instance\")}</Link>\n            )}\n          />\n          <BreadcrumbItem\n            render={() => <Link to={instanceDetailHref}>{instanceName}</Link>}\n          />\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instanceTopicsHref}>\n                {t(\"dataPlaneNavigation.topics\")}\n              </Link>\n            )}\n          />\n          <BreadcrumbItem isActive={true}>{topicName}</BreadcrumbItem>\n        </Breadcrumb>\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <LevelItem>\n            <TextContent>\n              <Text component=\"h1\">{topicName}</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <KafkaInstanceActions {...actionsProps} />\n          </LevelItem>\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        className=\"pf-c-page__main-tabs\"\n        hasShadowBottom={true}\n      >\n        <Nav variant=\"tertiary\" className=\"pf-u-px-sm-on-xl\">\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.consumer_groups\")}\n              ouiaId={\"tab-Dashboard\"}\n              isActive={activeSection === \"consumer\"}\n            >\n              <Link to={tabsHref[\"consumer\"]}>\n                {t(\"dataPlaneTopicNavigation.consumer_groups\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.messages\")}\n              ouiaId={\"tab-Topics\"}\n              isActive={activeSection === \"messages\"}\n            >\n              <Link to={tabsHref[\"messages\"]}>\n                {t(\"dataPlaneTopicNavigation.messages\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.properties\")}\n              ouiaId={\"tab-Permissions\"}\n              isActive={activeSection === \"properties\"}\n            >\n              <Link to={tabsHref[\"properties\"]}>\n                {t(\"dataPlaneTopicNavigation.properties\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.schemas\")}\n              ouiaId={\"tab-Settings\"}\n              isActive={activeSection === \"schemas\"}\n            >\n              <Link to={tabsHref[\"schemas\"]}>\n                {t(\"dataPlaneTopicNavigation.schemas\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n      </PageSection>\n    </>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoDedicatedClustersProps = {\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoDedicatedClusters: VoidFunctionComponent<\n  EmptyStateNoDedicatedClustersProps\n> = ({ onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_dedicated_clusters_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_dedicated_clusters_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={onQuickstartGuide}\n      >\n        {t(\"empty_state_no_dedicated_clusters_prerequisite_button\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport { TableView } from \"@rhoas/app-services-ui-components\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport { useDedicatedClusterLabels } from \"../../hooks\";\nimport type { EmptyStateNoDedicatedClustersProps } from \"./components\";\nimport { EmptyStateNoDedicatedClusters } from \"./components\";\n\nconst Columns = [\"id\", \"status\"] as const;\n\nexport type DedicatedClustersProps<\n  T extends DedicatedCluster = DedicatedCluster\n> = {\n  clusters: Array<T> | undefined | null;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  \"itemCount\" | \"page\" | \"onPageChange\"\n> &\n  EmptyStateNoDedicatedClustersProps;\n\nexport const DedicatedClusters = <T extends DedicatedCluster>({\n  clusters,\n  itemCount,\n  page,\n  onPageChange,\n  onQuickstartGuide,\n}: DedicatedClustersProps<T>) => {\n  const labels = useDedicatedClusterLabels();\n  const breakpoint = \"lg\";\n\n  return (\n    <PageSection isFilled={true}>\n      <TableView\n        ariaLabel={\"TODO\"}\n        data={clusters}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"id\":\n                    return row.id;\n                  case \"status\":\n                    return row.status;\n                }\n              })()}\n            </Td>\n          );\n        }}\n        toolbarBreakpoint={breakpoint}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        emptyStateNoData={\n          <EmptyStateNoDedicatedClusters\n            onQuickstartGuide={onQuickstartGuide}\n          />\n        }\n        emptyStateNoResults={\n          <div>&bsp; {/* as users can't filter this is not needed */}</div>\n        }\n      />\n    </PageSection>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type { DedicatedClusterField } from \"ui-models/src/models/dedicated-cluster\";\n\nexport function useDedicatedClusterLabels() {\n  const { t } = useTranslation(\"cluster\");\n\n  const fields: {\n    [field in DedicatedClusterField]: string;\n  } = {\n    id: t(\"fields.id\"),\n    status: t(\"fields.status\"),\n    cloudProvider: t(\"fields.cloudProvider\"),\n    az: t(\"fields.az\"),\n    cloudRegion: t(\"fields.cloudRegion\"),\n    requiresPrivateNetwork: t(\"fields.requiresPrivateNetwork\"),\n  };\n  return {\n    fields,\n  };\n}\n","import type { DeleteModalProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  DeleteModal,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type DeleteKafkaInstanceProps = {\n  instanceName: string | undefined;\n} & Omit<\n  DeleteModalProps,\n  \"title\" | \"variant\" | \"confirmationValue\" | \"children\"\n>;\n\nexport const DeleteKafkaInstance: VoidFunctionComponent<\n  DeleteKafkaInstanceProps\n> = ({ instanceName, ...props }) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <DeleteModal\n      {...props}\n      variant={\"destructive\"}\n      title={t(\"delete_instance_title\")}\n      confirmationValue={instanceName}\n    >\n      <Trans\n        ns={\"kafka\"}\n        i18nKey={\"delete_instance_message\"}\n        components={[<strong />]}\n        values={{\n          instanceName,\n        }}\n      />\n    </DeleteModal>\n  );\n};\n","import type { I18nProviderProps } from \"@rhoas/app-services-ui-components\";\nimport { I18nProvider as UiComponentsI18nProvider } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\n\nexport const I18nProvider: FunctionComponent<\n  Omit<I18nProviderProps, \"resources\">\n> = ({ lng, debug, children }) => {\n  return (\n    <UiComponentsI18nProvider\n      lng={lng}\n      resources={{\n        en: {\n          common: () =>\n            import(\"@rhoas/app-services-ui-components/locales/en/common.json\"),\n          \"create-kafka-instance\": () =>\n            import(\"locales/en/create-kafka-instance.json\"),\n          kafka: () => import(\"locales/en/kafka.json\"),\n          \"kafkaoverview-v3\": () => import(\"locales/en/kafkaoverview-v3.json\"),\n          metrics: () => import(\"locales/en/metrics.json\"),\n          topic: () => import(\"locales/en/topic.json\"),\n          \"manage-kafka-permissions\": () =>\n            import(\"locales/en/manage-kafka-permissions.json\"),\n          \"create-topic\": () => import(\"locales/en/create-topic.json\"),\n          \"message-browser\": () => import(\"locales/en/message-browser.json\"),\n          \"connection-tab\": () => import(\"locales/en/connection-tab.json\"),\n          \"connection-tab-p1\": () =>\n            import(\"locales/en/connection-tab-p1.json\"),\n          cluster: () => import(\"locales/en/cluster.json\"),\n        },\n        it: {\n          common: () => Promise.resolve({ delete: \"Elimina\" }),\n        },\n      }}\n      debug={debug}\n    >\n      {children}\n    </UiComponentsI18nProvider>\n  );\n};\n","import { Alert } from \"@patternfly/react-core\";\nimport { differenceInHours } from \"date-fns\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate } from \"@rhoas/app-services-ui-components\";\n\ntype DetailsTabAlertProps = {\n  expiryDate: Date;\n};\n\nexport const DetailsTabAlert: FunctionComponent<DetailsTabAlertProps> = ({\n  expiryDate,\n}) => {\n  const hoursLeft = expiryDate ? differenceInHours(expiryDate, Date.now()) : 0;\n  return (\n    <Alert\n      variant={\n        hoursLeft > 24\n          ? \"info\"\n          : hoursLeft < 24 && hoursLeft > 5\n          ? \"warning\"\n          : \"danger\"\n      }\n      title={\n        <Trans\n          i18nKey=\"kafka:will_expire\"\n          components={{\n            time: <FormatDate date={expiryDate} format=\"expiration\" />,\n          }}\n        />\n      }\n      aria-live=\"polite\"\n      isInline\n      className=\"pf-u-mb-lg\"\n    />\n  );\n};\n","import {\n  Skeleton,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from \"@patternfly/react-core\";\nimport { FormatDate, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { ReactChild, VoidFunctionComponent } from \"react\";\nimport type { MarketplaceSubscription, Plan } from \"ui-models/src/models/kafka\";\nimport type { Bytes } from \"../../../../../ui-models/src/types\";\nimport { DetailsTabAlert } from \"./DetailsTabAlert\";\n\n/**\n * All fields marked as accepting undefined will show a skeleton loader until the value is available.\n * This is to support fetching the data from different APIs.\n */\nexport type KafkaDetailsTabProps = {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n  expiryDate: Date | undefined;\n  owner: string;\n  provider: string;\n  region: string;\n  instanceType: Plan;\n  size: string | undefined;\n  ingress: number | undefined;\n  egress: number | undefined;\n  storage: Bytes | undefined;\n  maxPartitions: number | undefined;\n  connections: number | undefined;\n  connectionRate: number | undefined;\n  messageSize: Bytes | undefined;\n  billing: \"prepaid\" | MarketplaceSubscription | \"dedicated\" | undefined;\n  kafkaVersion: string;\n};\n\nexport const KafkaDetailsTab: VoidFunctionComponent<KafkaDetailsTabProps> = ({\n  id,\n  createdAt,\n  updatedAt,\n  owner,\n  provider,\n  region,\n  expiryDate,\n  instanceType,\n  size,\n  ingress,\n  egress,\n  storage,\n  maxPartitions,\n  connections,\n  connectionRate,\n  messageSize,\n  billing,\n  kafkaVersion,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const renderTextListItem = (title: string, value: ReactChild | undefined) => (\n    <>\n      <TextListItem component={TextListItemVariants.dt}>{title}</TextListItem>\n      {value ? (\n        <TextListItem component={TextListItemVariants.dd}>{value}</TextListItem>\n      ) : (\n        <Skeleton\n          width=\"50%\"\n          screenreaderText={t(\"common:skeleton_loader_screenreader_text\", {\n            contentName: title,\n          })}\n        />\n      )}\n    </>\n  );\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      {instanceType !== \"standard\" && expiryDate && (\n        <DetailsTabAlert expiryDate={expiryDate} />\n      )}\n      <TextContent>\n        <TextList component={TextListVariants.dl}>\n          {instanceType === \"standard\" &&\n            renderTextListItem(\n              t(\"common:size\"),\n              size\n                ? t(\"create-kafka-instance:streaming_size_value\", {\n                    value: size,\n                  })\n                : undefined\n            )}\n          {renderTextListItem(\n            t(\"ingress\"),\n            ingress\n              ? t(\"create-kafka-instance:ingress_value\", {\n                  value: ingress,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"egress\"),\n            egress\n              ? t(\"create-kafka-instance:egress_value\", {\n                  value: egress,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"storage\"),\n            storage?.value\n              ? t(\"create-kafka-instance:storage_value\", {\n                  value: storage.value,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"partitions\"),\n            maxPartitions\n              ? t(\"create-kafka-instance:partitions_value\", {\n                  value: maxPartitions,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"client_connections\"),\n            connections\n              ? t(\"create-kafka-instance:client_connections_value\", {\n                  value: connections,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"connection_rate\"),\n            connectionRate\n              ? t(\"create-kafka-instance:connection_rate_value\", {\n                  value: connectionRate,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"message_size\"),\n            messageSize?.value\n              ? t(\"create-kafka-instance:message_size_value\", {\n                  value: messageSize.value,\n                })\n              : undefined\n          )}\n\n          {renderTextListItem(t(\"common:id\"), id)}\n          {renderTextListItem(t(\"common:kafka_version\"), kafkaVersion)}\n          {renderTextListItem(t(\"common:owner\"), owner)}\n          {renderTextListItem(\n            t(\"common:time_created\"),\n            <FormatDate date={createdAt} format={\"long\"} />\n          )}\n          {renderTextListItem(\n            t(\"common:time_updated\"),\n            <FormatDate date={updatedAt} format={\"long\"} />\n          )}\n          {renderTextListItem(t(\"common:cloud_provider\"), provider)}\n          {renderTextListItem(t(\"common:region\"), region)}\n          {renderTextListItem(\n            t(\"create-kafka-instance:billing.field_label\"),\n            (() => {\n              if (billing === undefined) {\n                return undefined;\n              } else if (billing === \"prepaid\") {\n                return t(\"create-kafka-instance:billing.prepaid_option\");\n              } else if (billing === \"dedicated\") {\n                return t(\"create-kafka-instance:billing.dedicated_option\");\n              } else {\n                switch (billing.marketplace) {\n                  case \"aws\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_aws\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"azure\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_azure\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"gcp\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_gcp\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"rhm\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_rh\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                }\n              }\n            })()\n          )}\n        </TextList>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const SuspendedConnection: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.small}>\n      <EmptyStateIcon icon={ExclamationTriangleIcon} color={\"#f0ab00\"} />\n      <Title headingLevel={\"h1\"} size={TitleSizes.lg}>\n        {t(\"suspend_empty_state_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"suspend_empty_state_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  ClipboardCopy,\n  ExpandableSection,\n  Label,\n  Popover,\n  Skeleton,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport {\n  ExternalLink,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SuspendedConnection } from \"./SuspendedConnection\";\n\nexport type KafkaConnectionTabP2Props = {\n  isKafkaSuspended?: boolean;\n  isKafkaPending?: boolean;\n  externalServer?: string;\n  tokenEndPointUrl: string;\n  linkToServiceAccount: string;\n  linkToAccessTab: string;\n  adminAPIUrl: string | undefined;\n  showCreateServiceAccountModal: () => void;\n  kafkaFleetManagerUrl: string;\n};\n\nexport const KafkaConnectionTabP2: FunctionComponent<\n  KafkaConnectionTabP2Props\n> = ({\n  isKafkaSuspended,\n  isKafkaPending,\n  externalServer,\n  tokenEndPointUrl,\n  linkToServiceAccount,\n  linkToAccessTab,\n  adminAPIUrl,\n  kafkaFleetManagerUrl,\n  showCreateServiceAccountModal,\n}) => {\n  const { t } = useTranslation();\n\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n\n  const onChangeExpandedSection = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return isKafkaSuspended ? (\n    <SuspendedConnection />\n  ) : (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:drawer_resource_tab_body_description_1\")}\n        </Text>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:bootstrap_server\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:bootstrap_server_description\")}\n        </Text>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            data-testid=\"drawerStreams-copyBootstrapURL\"\n            textAriaLabel={t(\"connection-tab:bootstrap_server\")}\n            isReadOnly\n          >\n            {externalServer}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:service_accounts_small\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\n                \"connection-tab:create_service_account_to_generate_credentials\"\n              }\n              components={{\n                value: (\n                  <Link\n                    to={linkToServiceAccount}\n                    data-testid=\"tableStreams-linkKafka\"\n                  ></Link>\n                ),\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <Button\n        variant={ButtonVariant.secondary}\n        isInline\n        onClick={showCreateServiceAccountModal}\n        data-testid=\"drawerStreams-buttonCreateServiceAccount\"\n      >\n        {t(\"connection-tab:create_service_account\")}\n      </Button>\n      <TextContent className=\"pf-u-pt-sm\">\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\"connection-tab:current_instance\"}\n              components={{\n                value: <Link to={linkToAccessTab}></Link>,\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <ExpandableSection\n          toggleContent={\n            <div className=\"pf-c-content\">\n              <Text component={TextVariants.h3} className={\"pf-c-content\"}>\n                {t(\"connection-tab:rest_api_header\")}\n              </Text>\n            </div>\n          }\n          isExpanded={isExpanded}\n          onToggle={onChangeExpandedSection}\n          className=\"pf-u-mt-lg\"\n        >\n          <TextContent className=\"pf-u-pb-sm\">\n            <Text component={TextVariants.small}>\n              {t(\"connection-tab:rest_api_description\")}\n            </Text>\n          </TextContent>\n          <TextContent>\n            <strong>\n              {t(\"connection-tab:kafka_instance_url_label\")}\n              <Popover\n                headerContent={\n                  <div>\n                    {t(\"connection-tab:kafka_instance_url_popover_label\")}\n                  </div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"connection-tab:kafka_instance_url_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkainstance?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kafka-admin-rest.yaml%3Fref%3Ddoc-portal&readonly=true\"\n                          />,\n                          <ExternalLink\n                            testId={\"customerPortal-link\"}\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_openshift_application_services/1/guide/2409253a-45ee-470e-bdc9-5db4bfcf9d0f\"\n                            className={\"pf-u-ml-xs\"}\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\n                    \"connection-tab:kafka_instance_url_button_aria_label\"\n                  )}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {adminAPIUrl ? (\n              <ClipboardCopy\n                textAriaLabel={t(\"connection-tab:kafka_instance_url_label\")}\n                isReadOnly\n              >\n                {adminAPIUrl}\n              </ClipboardCopy>\n            ) : (\n              <Skeleton fontSize=\"2xl\" />\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"connection-tab:kafka_instance_url_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n          <TextContent className=\"pf-u-mt-md\">\n            <strong>\n              {t(\"connection-tab:kafka_management_url\")}\n              <Popover\n                headerContent={\n                  <div>\n                    {t(\"connection-tab:kafka_management_popover_header\")}\n                  </div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"connection-tab:kafka_management_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkamgmt?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kas-fleet-manager.yaml%3Fref%3Ddoc-portal\"\n                          />,\n                          <ExternalLink\n                            testId={\"customerPortal-link\"}\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_openshift_application_services/1/guide/2409253a-45ee-470e-bdc9-5db4bfcf9d0f\"\n                            className={\"pf-u-ml-xs\"}\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\n                    \"connection-tab:kafka_management_button_aria_label\"\n                  )}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {isKafkaPending ? (\n              <Skeleton fontSize=\"2xl\" />\n            ) : (\n              <ClipboardCopy\n                textAriaLabel={t(\"connection-tab:kafka_management_url\")}\n                isReadOnly\n              >\n                {kafkaFleetManagerUrl}\n              </ClipboardCopy>\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"connection-tab:kafka_management_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n        </ExpandableSection>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:authentication_method\")}\n        </Text>\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"connection-tab:sasl_oauthbearer\")}{\" \"}\n          <Label color=\"green\">{t(\"connection-tab:recommended\")}</Label>\n          <Popover\n            aria-label={t(\"connection-tab:sasl_oauthbearer\")}\n            bodyContent={\n              <div>{t(\"connection-tab:sasl_oauthbearer_popover_content\")}</div>\n            }\n          >\n            <Button\n              variant={ButtonVariant.plain}\n              aria-label={t(\"connection-tab:more_info_about_sasl_oauthbearer\")}\n            >\n              <HelpIcon />\n            </Button>\n          </Popover>\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:sasl_oauthbearer_description\")}\n        </Text>\n        <strong>{t(\"connection-tab:token_endpoint_url\")}</strong>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            textAriaLabel={t(\"connection-tab:token_endpoint_url\")}\n            isReadOnly\n          >\n            {tokenEndPointUrl}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"connection-tab:sasl_plain\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:sasl_plain_description\")}\n        </Text>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  ClipboardCopyButton,\n  CodeBlock,\n  CodeBlockAction,\n  CodeBlockCode,\n  ExpandableSection,\n  ExpandableSectionToggle,\n} from \"@patternfly/react-core\";\nimport { useEffect, useState } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type ClientType = \"java\" | \"python\" | \"quarkus\" | \"springboot\";\n\nexport type SampleCodeSnippetProps = {\n  expandableCode?: string;\n  codeBlockCode: string;\n  codeSnippet?: ClientType;\n};\n\nexport const SampleCodeSnippet: VoidFunctionComponent<\n  SampleCodeSnippetProps\n> = ({ expandableCode, codeBlockCode, codeSnippet }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const [copied, setCopied] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsExpanded(false);\n  }, [codeSnippet]);\n\n  const clipboardCopyFunc = (_event: any, text: string) => {\n    navigator.clipboard\n      .writeText(text.toString())\n      .then(() => {\n        setCopied(true);\n      })\n      .catch(() => {\n        setCopied(false);\n      });\n  };\n\n  const onToggle = (isExpanded: boolean) => {\n    setIsExpanded(isExpanded);\n  };\n\n  const copyCode = expandableCode\n    ? codeBlockCode + \"\\n\" + expandableCode\n    : codeBlockCode;\n\n  const actions = (\n    <CodeBlockAction>\n      <ClipboardCopyButton\n        id=\"basic-copy-button\"\n        textId=\"code-content\"\n        aria-label=\"Copy to clipboard\"\n        exitDelay={600}\n        maxWidth=\"110px\"\n        variant=\"plain\"\n        onClick={(e) => clipboardCopyFunc(e, copyCode)}\n      >\n        {copied ? \"Successfully copied to clipboard!\" : \"Copy to clipboard\"}\n      </ClipboardCopyButton>\n    </CodeBlockAction>\n  );\n\n  return (\n    <CodeBlock actions={actions}>\n      <CodeBlockCode id=\"code-content\">\n        {codeBlockCode}\n\n        <ExpandableSection\n          isExpanded={isExpanded}\n          isDetached\n          contentId=\"code-block-expand\"\n        >\n          {expandableCode}\n        </ExpandableSection>\n      </CodeBlockCode>\n      {expandableCode ? (\n        <ExpandableSectionToggle\n          isExpanded={isExpanded}\n          onToggle={onToggle}\n          contentId=\"code-block-expand\"\n          direction=\"up\"\n        >\n          {isExpanded ? \"Show Less\" : \"Show More\"}\n        </ExpandableSectionToggle>\n      ) : null}\n    </CodeBlock>\n  );\n};\n","export const javaConfigCodeBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `package org.example;\nimport org.apache.kafka.clients.producer.ProducerConfig;  \nimport java.util.Properties;\n    \npublic class KafkaConfig {\n    \n    static Properties properties() {\n    \n        String kafkaHost = \"${kafkaBootstrapUrl}\";\n        String rhoasClientID = \"<client_id>\";\n        String rhoasClientSecret = \"<client_secret>\";\n        String rhoasOauthTokenUrl = \"${tokenEndpointUrl}\";`;\n};\n\nexport const javaConfigExpandabledBlock = `\n        var properties= new Properties();\n\n        properties.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, kafkaHost);\n        properties.setProperty(\"security.protocol\", \"SASL_SSL\");\n        properties.setProperty(\"sasl.mechanism\", \"OAUTHBEARER\");\n\n        properties.setProperty(\"sasl.jaas.config\", \"org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId=\\\\\"\" + rhoasClientID + \"\\\\\" clientSecret=\\\\\"\" + rhoasClientSecret + \"\\\\\" oauth.token.endpoint.uri=\\\\\"\" + rhoasOauthTokenUrl + \"\\\\\";\");\n\n        properties.setProperty(\"sasl.login.callback.handler.class\", \"org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler\");\n        properties.setProperty(\"sasl.oauthbearer.token.endpoint.url\", rhoasOauthTokenUrl);\n        properties.setProperty(\"sasl.oauthbearer.scope.claim.name\", \"api.iam.service_accounts\");\n\n        return properties;\n    }\n}`;\n\nexport const javaProducerCodeBlock = `package org.example;\n \nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.clients.producer.ProducerRecord;\nimport org.apache.kafka.clients.producer.KafkaProducer;\nimport org.apache.kafka.common.serialization.StringSerializer;\n \npublic class ProducerExample {\n \n   public static void main(String[] args) {`;\n\nexport const javaProducerExpandableBlock = `\n   //Creating producer properties\n   var properties= KafkaConfig.properties();\n   properties.setProperty(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n   properties.setProperty(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n\n   KafkaProducer<String,String> producer= new KafkaProducer<String,String>(properties);\n\n   producer.send(new ProducerRecord<>(<\"topic\">, \"Test Message\"));\n   producer.flush();\n   producer.close();\n  }\n}`;\n\nexport const javaConsumerCodeBlock = `package org.example;\n \nimport java.util.Arrays;\n\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.clients.consumer.KafkaConsumer;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.apache.kafka.clients.consumer.ConsumerRecord;\nimport org.apache.kafka.clients.consumer.ConsumerRecords;\nimport java.time.Duration;`;\n\nexport const javaConsumerExpandableBlock = `\npublic class ConsumerExample {\n\n    public static void main(String[] args) {\n\n        var properties= KafkaConfig.properties();\n\n        properties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n        properties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n        properties.setProperty(ConsumerConfig.GROUP_ID_CONFIG,\"test_group_2\");\n        properties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n\n        KafkaConsumer<String,String> consumer = new KafkaConsumer<String,String>(properties);\n\n        //Subscribing\n        consumer.subscribe(Arrays.asList(\"<topic>\"));\n\n        //polling\n        while(true){\n            ConsumerRecords<String,String> records=consumer.poll(Duration.ofMillis(100));\n            for(ConsumerRecord<String,String> record: records) {\n                System.out.println(\"Key: \"+ record.key() + \", Value:\" +record.value());\n                System.out.println(\"Partition:\" + record.partition()+\",Offset:\"+record.offset());\n            }\n        }\n    }\n}`;\n\nexport const pythonConfigCodeBlock = (tokenEndpointUrl: string) => {\n  return `import time\nimport requests\n    \ndef _get_token(config):\n    payload = {\"grant_type\": \"client_credentials\", \"scope\": \"api.iam.service_accounts\"}\n    resp = requests.post(\n        \"${tokenEndpointUrl}\",\n        auth=(\n            <client_id>,\n            <client_secret>,\n        ),\n        data=payload,\n    )`;\n};\n\nexport const pythonConfigExpandabledBlock = (kafkaBootstrapUrl: string) => {\n  return `\n    token = resp.json()\n    return token[\"access_token\"], time.time() + float(token[\"expires_in\"])\n    \n    common_config = {\n    'bootstrap.servers': \"${kafkaBootstrapUrl}\",\n    'security.protocol': 'SASL_SSL',\n    'sasl.mechanisms': 'OAUTHBEARER',\n    'oauth_cb': _get_token,\n    }\n    \n    topic=<topic>`;\n};\n\nexport const pythonProducer = `from confluent_kafka import Producer\n \nproducer = Producer(common_config)\n \nproducer.produce(topic=<topic>, value=b\"Sample Message\")\nproducer.flush()`;\n\nexport const pythonConsumerCodeBlock = `from confluent_kafka import Consumer\n \nconsumer_config = {\n    \"group.id\": \"test-group\",\n    'session.timeout.ms': 6000,\n    'auto.offset.reset': 'earliest',\n}\n\nconsumer = Consumer({ **consumer_config, **common_config })\n\nconsumer.subscribe([<topic>])`;\n\nexport const pythonConsumerExpandableBlock = `while True:\ntry:\n    msg = consumer.poll(1.0)\n    if msg is None:\n        continue\n\n    print(msg.value())\nexcept KeyboardInterrupt:\n    break\n\nconsumer.close()`;\n\nexport const quarkusConfigCodeBlock = `# Quarkus config\nquarkus.ssl.native=true\n\n# Configure the Kafka sink (we write to it)\nmp.messaging.outgoing.generated-price.connector=smallrye-kafka\nmp.messaging.outgoing.generated-price.topic=<topic>\nmp.messaging.outgoing.generated-price.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer\n\n# Configure the Kafka source (we read from it)\nmp.messaging.incoming.prices.connector=smallrye-kafka\nmp.messaging.incoming.prices.topic=<topic>\nmp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer`;\n\nexport const quarkusConfigExpandableBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `\n# Configure docker config\nquarkus.container-image.builder=jib\nquarkus.kubernetes.deployment-target=kubernetes\nquarkus.container-image.build=false\nquarkus.container-image.push=false\n    \n## dev profile using user defined environment variables that uses SASL/OAUTHBEARER\n## ./mvnw quarkus:dev\n## ./mvnw package -Dquarkus.profile=dev\n    \n%dev.kafka.bootstrap.servers=\\${\"${kafkaBootstrapUrl}\"}\n%dev.kafka.security.protocol=SASL_SSL\n    \n%dev.kafka.sasl.mechanism=OAUTHBEARER\n%dev.kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \\\\\n    oauth.client.id=\"\\${<client_id>}\" \\\\\n    oauth.client.secret=\"\\${<client_secret>}\" \\\\\n    oauth.token.endpoint.uri=\"\\${\"${tokenEndpointUrl}\"}\" ;\n%dev.kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler`;\n};\n\nexport const quarkusProducerCodeBlock = `package org.acme.kafka;\nimport java.time.Duration;\nimport java.util.Random;\n\nimport javax.enterprise.context.ApplicationScoped;\n\nimport io.smallrye.mutiny.Multi;\nimport org.eclipse.microprofile.reactive.messaging.Outgoing;`;\n\nexport const quarkusProducerExpandableBlock = `\n/**\n* A bean producing random prices every 5 seconds.\n* The prices are written to a Kafka topic (prices). The Kafka configuration is specified in the application configuration.\n*/\n@ApplicationScoped\npublic class PriceGenerator {\n\n   private Random random = new Random();\n\n   @Outgoing(\"generated-price\")\n   public Multi<Integer> generate() {\n       return Multi.createFrom().ticks().every(Duration.ofSeconds(5))\n               .onOverflow().drop()\n               .map(tick -> random.nextInt(100));\n   }\n\n}`;\n\nexport const quarkusConsumerCodeBlock = `package org.acme.kafka;\nimport javax.enterprise.context.ApplicationScoped;\n\nimport org.eclipse.microprofile.reactive.messaging.Acknowledgment;\nimport org.eclipse.microprofile.reactive.messaging.Incoming;\nimport org.eclipse.microprofile.reactive.messaging.Outgoing;\n\nimport io.smallrye.reactive.messaging.annotations.Broadcast;\n\n/**\n * A bean consuming data from the \"prices\" Kafka topic and applying some conversion.\n * The result is pushed to the \"my-data-stream\" stream which is an in-memory stream.\n */\n@ApplicationScoped`;\n\nexport const quarkusConsumerExpandableBlock = `public class PriceConverter {\n\n    private static final double CONVERSION_RATE = 0.88;\n\n    // Consume from the \\`prices\\` channel and produce to the \\`my-data-stream\\` channel\n    @Incoming(\"prices\")\n    @Outgoing(\"my-data-stream\")\n    // Send to all subscribers\n    @Broadcast\n    // Acknowledge the messages before calling this method.\n    @Acknowledgment(Acknowledgment.Strategy.PRE_PROCESSING)\n    public double process(int priceInUsd) {\n        return priceInUsd * CONVERSION_RATE;\n    }\n\n}`;\n\nexport const springBootConfigCodeBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `package com.example.kafkaconfig;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class KafkaConfig {\n\n   public static Map<String, Object> Config() {\n\n       Map<String, Object> config = new HashMap<>();\n\n       String kafkaHost = \"${kafkaBootstrapUrl}\";\n       String rhoasClientID = \"<client_id>\";\n       String rhoasClientSecret = \"<client_secret>\";\n       String rhoasOauthTokenUrl = \"${tokenEndpointUrl}\";`;\n};\n\nexport const springBootConfigExpandableBlock = `\n    config.put(\"bootstrap.servers\", kafkaHost);\n\n    config.put(\"security.protocol\", \"SASL_SSL\");\n    config.put(\"sasl.mechanism\", \"OAUTHBEARER\");\n\n    config.put(\"sasl.jaas.config\", \"org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId=\\\\\"\" + rhoasClientID + \"\\\\\" clientSecret=\\\\\"\" + rhoasClientSecret + \"\\\\\" oauth.token.endpoint.uri=\\\\\"\" + rhoasOauthTokenUrl + \"\\\\\";\");\n    config.put(\"sasl.login.callback.handler.class\", \"org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler\");\n    config.put(\"sasl.oauthbearer.token.endpoint.url\", rhoasOauthTokenUrl);\n    config.put(\"sasl.oauthbearer.scope.claim.name\", \"api.iam.service_accounts\");\n\n    return config;\n   }\n}`;\n\nexport const springBootProducerCodeBlock = `package com.example.kafkademo;\nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.common.serialization.StringSerializer;\nimport org.springframework.boot.ApplicationRunner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.kafka.core.DefaultKafkaProducerFactory;\nimport org.springframework.kafka.core.KafkaTemplate;\nimport org.springframework.kafka.core.ProducerFactory;\nimport com.example.kafkaconfig.KafkaConfig;\n\nimport java.util.Map;`;\n\nexport const springBootProducerExpandableBlock = `\n@SpringBootApplication\npublic class KafkaProducerExample {\n\n  public static void main(String[] args) throws Exception {\n    SpringApplication.run(KafkaProducerExample.class, args);\n  }\n\n  @Bean\n  public ProducerFactory<String, String> producerFactory() {\n    Map<String, Object> config = KafkaConfig.Config();\n\n    config.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n    config.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n\n    return new DefaultKafkaProducerFactory<String, String>(config);\n  }\n\n  @Bean\n  public KafkaTemplate<String, String> kafkaTemplate() {\n    return new KafkaTemplate<>(producerFactory());\n  }\n\n  @Bean\n  public ApplicationRunner runner(KafkaTemplate<String, String> template) {\n    return args -> {\n      template.send(<\"topic\">, \"Test Message\");\n    };\n  }\n\n}`;\n\nexport const springBootListenerCodeBlock = `package com.example.kafkaconsumer.listener;\n\nimport com.example.kafkaconfig.KafkaConfig;\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.kafka.annotation.KafkaListener;\nimport org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;\nimport org.springframework.kafka.core.ConsumerFactory;\nimport org.springframework.kafka.core.DefaultKafkaConsumerFactory;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Map;`;\n\nexport const springBootListenerExpandableBlock = `@Component\npublic class Listener {\n\n    @KafkaListener(topics = <\"topic\">,\n            containerFactory = \"concurrentKafkaListenerContainerFactory\",\n            groupId = \"test_group\")\n\n    // Method\n    public void consume(String message)\n    {\n        // Print statement\n        System.out.println(message);\n    }\n}`;\n\nexport const springBootConsumerConfigCodeBlock = `package com.example.kafkaconsumer.config;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport com.example.kafkaconfig.KafkaConfig;\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.kafka.annotation.EnableKafka;\nimport org.springframework.kafka.core.ConsumerFactory;\nimport org.springframework.kafka.core.DefaultKafkaConsumerFactory;\nimport org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;`;\n\nexport const springBootConsumerConfigExpandableBlock = `// Annotations\n@EnableKafka\n@Configuration\n\npublic class KafkaConsumerConfig {\n\n    @Bean\n    public ConsumerFactory<String, String> consumerFactory() {\n        Map<String, Object> config = KafkaConfig.Config();\n\n        config.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\n        config.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\n\n        return new DefaultKafkaConsumerFactory<>(config);\n    }\n\n    @Bean\n    public ConcurrentKafkaListenerContainerFactory concurrentKafkaListenerContainerFactory() {\n        ConcurrentKafkaListenerContainerFactory<\n                String, String> factory\n                = new ConcurrentKafkaListenerContainerFactory<>();\n        factory.setConsumerFactory(consumerFactory());\n        return factory;\n    }\n}`;\n\nexport const springBootConsumerExampleCodeBlock = `\npackage com.example.kafkaconsumer;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;`;\n\nexport const springBootConsumerExampleExpandableBlock = `\n@SpringBootApplication\npublic class KafkaConsumerExample {\n\n    public static void main(String[] args) {\n        SpringApplication.run(KafkaConsumerExample.class, args);\n    }\n\n}`;\n","import {\n  TextContent,\n  TextVariants,\n  Text,\n  ToggleGroup,\n  ToggleGroupItem,\n} from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { SampleCodeSnippet } from \"./SampleCodeSnippet\";\nimport {\n  javaConfigCodeBlock,\n  javaConfigExpandabledBlock,\n  javaConsumerCodeBlock,\n  javaConsumerExpandableBlock,\n  javaProducerCodeBlock,\n  javaProducerExpandableBlock,\n  pythonConfigCodeBlock,\n  pythonConfigExpandabledBlock,\n  pythonConsumerCodeBlock,\n  pythonConsumerExpandableBlock,\n  pythonProducer,\n  quarkusConfigCodeBlock,\n  quarkusConfigExpandableBlock,\n  quarkusConsumerCodeBlock,\n  quarkusConsumerExpandableBlock,\n  quarkusProducerCodeBlock,\n  quarkusProducerExpandableBlock,\n  springBootConfigCodeBlock,\n  springBootConfigExpandableBlock,\n  springBootConsumerConfigCodeBlock,\n  springBootConsumerConfigExpandableBlock,\n  springBootConsumerExampleCodeBlock,\n  springBootConsumerExampleExpandableBlock,\n  springBootListenerCodeBlock,\n  springBootListenerExpandableBlock,\n  springBootProducerCodeBlock,\n  springBootProducerExpandableBlock,\n} from \"./CodeSnippets\";\n\nexport type ClientType = \"java\" | \"python\" | \"quarkus\" | \"springboot\";\n\nexport type KafkaSampleCodeProps = {\n  kafkaBootstrapUrl: string;\n  tokenEndpointUrl: string;\n};\n\nexport const KafkaSampleCode: VoidFunctionComponent<KafkaSampleCodeProps> = ({\n  kafkaBootstrapUrl,\n  tokenEndpointUrl,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const [clientSelect, setClientSelect] = useState<ClientType>(\"java\");\n\n  const clientProvider: { [provider in ClientType]: string } = {\n    java: t(\"sample_code.clients.java\"),\n    python: t(\"sample_code.clients.python\"),\n    quarkus: t(\"sample_code.clients.quarkus\"),\n    springboot: t(\"sample_code.clients.spring_boot\"),\n  };\n\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.code_snippet_description_1\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.code_snippet_description_2\")}\n        </Text>\n        <ToggleGroup>\n          <ToggleGroupItem\n            text={clientProvider[\"java\"]}\n            value=\"java\"\n            buttonId=\"java\"\n            isSelected={clientSelect === \"java\"}\n            onChange={() => setClientSelect(\"java\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"python\"]}\n            value=\"python\"\n            buttonId=\"python\"\n            isSelected={clientSelect === \"python\"}\n            onChange={() => setClientSelect(\"python\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"quarkus\"]}\n            value=\"quarkus\"\n            buttonId=\"quarkus\"\n            isSelected={clientSelect === \"quarkus\"}\n            onChange={() => setClientSelect(\"quarkus\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"springboot\"]}\n            value=\"springboot\"\n            buttonId=\"springboot\"\n            isSelected={clientSelect === \"springboot\"}\n            onChange={() => setClientSelect(\"springboot\")}\n          />\n        </ToggleGroup>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_configuration_code\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.sample_configuration_code_description\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.bracket_text\")}\n        </Text>\n        {(() => {\n          switch (clientSelect) {\n            case \"java\":\n              return (\n                <SampleCodeSnippet\n                  codeBlockCode={javaConfigCodeBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  expandableCode={javaConfigExpandabledBlock}\n                  codeSnippet={clientSelect}\n                />\n              );\n            case \"python\":\n              return (\n                <SampleCodeSnippet\n                  codeBlockCode={pythonConfigCodeBlock(tokenEndpointUrl)}\n                  expandableCode={pythonConfigExpandabledBlock(\n                    kafkaBootstrapUrl\n                  )}\n                  codeSnippet={clientSelect}\n                />\n              );\n            case \"quarkus\":\n              return (\n                <SampleCodeSnippet\n                  codeBlockCode={quarkusConfigCodeBlock}\n                  expandableCode={quarkusConfigExpandableBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  codeSnippet={clientSelect}\n                />\n              );\n            case \"springboot\":\n              return (\n                <SampleCodeSnippet\n                  codeBlockCode={springBootConfigCodeBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  expandableCode={springBootConfigExpandableBlock}\n                  codeSnippet={clientSelect}\n                />\n              );\n            default:\n              return null;\n          }\n        })()}\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_producer_code\")}\n        </Text>\n        {clientSelect === \"quarkus\" ? (\n          <>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.sample_producer_code_quarkus_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={quarkusProducerCodeBlock}\n              expandableCode={quarkusProducerExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n          </>\n        ) : (\n          <>\n            <Text component={TextVariants.small}>\n              <Trans\n                ns={\"kafka\"}\n                i18nKey={\"sample_code.sample_producer_code_description\"}\n                values={{\n                  client_type: clientProvider[clientSelect],\n                }}\n              />\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.bracket_text\")}\n            </Text>\n            {(() => {\n              switch (clientSelect) {\n                case \"java\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={javaProducerCodeBlock}\n                      expandableCode={javaProducerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"python\":\n                  return <SampleCodeSnippet codeBlockCode={pythonProducer} />;\n                case \"springboot\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={springBootProducerCodeBlock}\n                      expandableCode={springBootProducerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                default:\n                  return null;\n              }\n            })()}\n          </>\n        )}\n\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_consumer_code\")}\n        </Text>\n        {clientSelect === \"springboot\" ? (\n          <>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_sample_consumer_code_description\")}\n            </Text>\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_consumer_configuration\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_consumer_configuration_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootConsumerConfigCodeBlock}\n              expandableCode={springBootConsumerConfigExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_listener\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_listener_description\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.bracket_text\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootListenerCodeBlock}\n              expandableCode={springBootListenerExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_consumer\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_consumer_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootConsumerExampleCodeBlock}\n              expandableCode={springBootConsumerExampleExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n          </>\n        ) : (\n          <>\n            <Text component={TextVariants.small}>\n              <Trans\n                ns={\"kafka\"}\n                i18nKey={\"sample_code.sample_consumer_code_description\"}\n                values={{\n                  client_type: clientProvider[clientSelect],\n                }}\n              />\n            </Text>\n            {clientSelect === \"quarkus\" ? null :\n              <Text component={TextVariants.small}>\n                {t(\"sample_code.bracket_text\")}\n              </Text>}\n            {(() => {\n              switch (clientSelect) {\n                case \"java\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={javaConsumerCodeBlock}\n                      expandableCode={javaConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"python\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={pythonConsumerCodeBlock}\n                      expandableCode={pythonConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"quarkus\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={quarkusConsumerCodeBlock}\n                      expandableCode={quarkusConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                default:\n                  return null;\n              }\n            })()}\n          </>\n        )}\n      </TextContent>\n    </div>\n  );\n};\n","import type { TabsProps } from \"@patternfly/react-core\";\nimport {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport type { Kafka } from \"ui-models/src/models/kafka\";\nimport { CreatingStatuses } from \"ui-models/src/models/kafka\";\nimport { useKafkaLabels } from \"../../hooks\";\nimport {\n  KafkaConnectionTabP2,\n  KafkaDetailsTab,\n  KafkaSampleCode,\n} from \"./components\";\n\nexport type KafkaInstanceDrawerProps = {\n  instance?: Kafka;\n  isExpanded: boolean;\n  activeTab: KafkaInstanceDrawerTab;\n  onTabChange: (tab: KafkaInstanceDrawerTab) => void;\n\n  onClose: () => void;\n};\n\nexport const KafkaInstanceDrawer: FunctionComponent<\n  KafkaInstanceDrawerProps\n> = ({ instance, activeTab, isExpanded, onTabChange, onClose, children }) => {\n  const content = useMemo(() => {\n    return (\n      <DrawerPanelContent>\n        {instance ? (\n          <KafkaInstanceDrawerPanel\n            instance={instance}\n            activeTab={activeTab}\n            onTabChange={onTabChange}\n            onClose={onClose}\n          />\n        ) : null}\n      </DrawerPanelContent>\n    );\n  }, [activeTab, instance, onClose, onTabChange]);\n  return (\n    <Drawer isExpanded={isExpanded} isInline={true}>\n      <DrawerContent panelContent={content}>\n        <DrawerContentBody\n          className={\"pf-u-display-flex pf-u-flex-direction-column\"}\n        >\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nexport type KafkaInstanceDrawerTab = \"details\" | \"connections\";\n\nexport const KafkaInstanceDrawerPanel: VoidFunctionComponent<\n  Required<Omit<KafkaInstanceDrawerProps, \"isExpanded\">> & {\n    activeTab: KafkaInstanceDrawerTab;\n  }\n> = ({ instance, activeTab, onTabChange, onClose }) => {\n  const { t } = useTranslation([\"kafka\"]);\n  const labels = useKafkaLabels();\n\n  const handleSelect: TabsProps[\"onSelect\"] = useCallback(\n    (_, tab) => {\n      const t = tab as KafkaInstanceDrawerTab;\n      onTabChange(t);\n    },\n    [onTabChange]\n  );\n\n  const isKafkaPending = CreatingStatuses.includes(instance.status);\n\n  return (\n    <>\n      <DrawerHead>\n        <TextContent>\n          <Text component={TextVariants.small} className={\"pf-u-mb-0\"}>\n            {t(\"common:name\")}\n          </Text>\n          <Title\n            headingLevel={\"h1\"}\n            size={TitleSizes[\"xl\"]}\n            className={\"pf-u-mt-0\"}\n          >\n            {instance.name}\n          </Title>\n        </TextContent>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <Tabs activeKey={activeTab} onSelect={handleSelect}>\n          <Tab\n            eventKey={\"details\"}\n            title={<TabTitleText>{t(\"drawer-tabs.details\")}</TabTitleText>}\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaDetailsTab\n                id={instance.id}\n                owner={instance.owner}\n                createdAt={parseISO(instance.createdAt)}\n                updatedAt={parseISO(instance.updatedAt)}\n                expiryDate={\n                  instance.expiryDate\n                    ? parseISO(instance.expiryDate)\n                    : undefined\n                }\n                size={instance.size}\n                ingress={instance.ingress}\n                egress={instance.egress}\n                storage={instance.storage}\n                maxPartitions={instance.maxPartitions}\n                connections={instance.connections}\n                connectionRate={instance.connectionRate}\n                messageSize={instance.messageSize}\n                provider={\n                  labels.providers[instance.provider] || instance.provider\n                }\n                region={\n                  labels.providerRegions[instance.provider][instance.region] ||\n                  instance.region\n                }\n                instanceType={instance.plan}\n                billing={instance.billing}\n                kafkaVersion={instance.version}\n              />\n            </div>\n          </Tab>\n          <Tab\n            eventKey={\"connections\"}\n            title={<TabTitleText>{t(\"drawer-tabs.connections\")}</TabTitleText>}\n            data-testid=\"drawerStreams-tabConnect\"\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaConnectionTabP2\n                isKafkaPending={isKafkaPending}\n                externalServer={getExternalServer(instance.bootstrapUrl)}\n                tokenEndPointUrl={\"TODO\"}\n                linkToServiceAccount={\"service-accounts\"}\n                linkToAccessTab={`TODO/acls`}\n                adminAPIUrl={getAdminServerUrl(instance.adminUrl)}\n                showCreateServiceAccountModal={() => {\n                  /* TODO */\n                }}\n                kafkaFleetManagerUrl={\n                  \"https://api.openshift.com/api/kafkas_mgmt/v1/openapi\"\n                }\n              />\n            </div>\n          </Tab>\n          <Tab\n            eventKey={\"samplecode\"}\n            title={<TabTitleText>{t(\"drawer-tabs.sample-code\")}</TabTitleText>}\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaSampleCode\n                kafkaBootstrapUrl={getExternalServer(instance.bootstrapUrl)!}\n                tokenEndpointUrl={\"TODO\"}\n              />\n            </div>\n          </Tab>\n        </Tabs>\n      </DrawerPanelBody>\n    </>\n  );\n};\n\nconst getExternalServer = (bootstrapUrl: string | undefined) => {\n  if (!bootstrapUrl) {\n    return undefined;\n  }\n  return bootstrapUrl?.endsWith(\":443\") ? bootstrapUrl : `${bootstrapUrl}:443`;\n};\n\nconst getAdminServerUrl = (adminUrl: string | undefined) => {\n  return adminUrl ? `${adminUrl}/openapi` : undefined;\n};\n","import {\n  Alert,\n  Button,\n  Flex,\n  FlexItem,\n  HelperText,\n  HelperTextItem,\n  Spinner,\n  Split,\n  SplitItem,\n} from \"@patternfly/react-core\";\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { forwardRef } from \"react\";\nimport type { Status } from \"ui-models/src/models/kafka\";\nimport {\n  CreatingStatuses,\n  DegradedStatuses,\n  DeletingStatuses,\n  ReadyStatuses,\n  ResumingStatuses,\n  SuspendedStatuses,\n  SuspendingStatuses,\n} from \"ui-models/src/models/kafka\";\nimport \"./StatusLabel.css\";\n\ntype StatusLabelProps = {\n  value: Status;\n  showWarning?: boolean;\n  showError?: boolean;\n  withPopover?: boolean;\n};\n\n/**\n *<strong> Introduction </strong>\n *These are the various statuses that can show in the Kafka instances table under the \"Status\" header.\n */\nexport const StatusLabel = forwardRef<HTMLButtonElement, StatusLabelProps>(\n  (\n    { value, showWarning = false, showError = false, withPopover = false },\n    ref\n  ) => {\n    const { t } = useTranslation(\"kafka\");\n\n    const buttonVariant = withPopover ? \"link\" : \"plain\";\n\n    switch (true) {\n      case ReadyStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <CheckCircleIcon className=\"mas-m-ready\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.ready\")}</SplitItem>\n            </Split>\n          </div>\n        );\n\n      case CreatingStatuses.includes(value):\n        switch (true) {\n          case showWarning:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                  </SplitItem>\n                </Split>\n                <Alert\n                  variant=\"warning\"\n                  isInline\n                  isPlain\n                  title=\"This is taking longer than expected.\"\n                />\n              </div>\n            );\n          case showError:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                  </SplitItem>\n                </Split>\n                <Alert\n                  variant=\"danger\"\n                  isInline\n                  isPlain\n                  title={t(\"status_warning_or_error_title\")}\n                />\n              </div>\n            );\n          default:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                    <Flex>\n                      <FlexItem>\n                        <HelperText>\n                          <HelperTextItem variant=\"indeterminate\">\n                            {t(\"status_created_shortly_help\")}\n                          </HelperTextItem>\n                        </HelperText>\n                      </FlexItem>\n                    </Flex>\n                  </SplitItem>\n                </Split>\n              </div>\n            );\n        }\n\n      case DegradedStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <ExclamationTriangleIcon className=\"mas-m-degraded\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.degraded\")}</SplitItem>\n            </Split>\n          </div>\n        );\n\n      case SuspendingStatuses.includes(value):\n        return (\n          <div>\n            <p className=\"mas-m-deleting\"> {t(\"statuses.suspending\")}</p>\n          </div>\n        );\n      case SuspendedStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <ExclamationTriangleIcon className=\"mas-m-degraded\" />\n              </SplitItem>\n              <SplitItem>\n                <Button ref={ref} variant={buttonVariant} isInline>\n                  {t(\"statuses.suspended\")}\n                </Button>\n              </SplitItem>\n            </Split>\n          </div>\n        );\n      case ResumingStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <Spinner size=\"md\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.resuming\")}</SplitItem>\n            </Split>\n          </div>\n        );\n      case DeletingStatuses.includes(value):\n        return (\n          <div>\n            <p className=\"mas-m-deleting\"> {t(\"statuses.deleting\")}</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  }\n);\n","export type KafkaStatus =\n  | \"ready\"\n  | \"degraded\"\n  | \"accepted\"\n  | \"provisioning\"\n  | \"preparing\"\n  | \"deprovision\"\n  | \"deleting\"\n  | \"suspended\"\n  | \"suspending\"\n  | \"resuming\";\n\nexport type PopoverStatus =\n  | \"pending\"\n  | \"provisioning\"\n  | \"preparing\"\n  | \"ready\"\n  | \"suspended\";\n\nexport const PopoverStatusOrder: PopoverStatus[] = [\n  \"pending\",\n  \"preparing\",\n  \"provisioning\",\n];\n\nexport const KafkaToPopoverMapping: {\n  [status in KafkaStatus]: PopoverStatus | null;\n} = {\n  ready: null,\n  degraded: null,\n  accepted: \"pending\",\n  provisioning: \"provisioning\",\n  preparing: \"preparing\",\n  deprovision: null,\n  deleting: null,\n  suspended: \"suspended\",\n  suspending: null,\n  resuming: null,\n};\n","import { ProgressStep, ProgressStepper } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport { PopoverStatusOrder } from \"../types\";\n\ntype StatusProgressStepperProps = {\n  currentStatus: PopoverStatus;\n};\n\nexport const StatusProgressStepper: VoidFunctionComponent<\n  StatusProgressStepperProps\n> = ({ currentStatus }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const currentStep = PopoverStatusOrder.findIndex((s) => s === currentStatus);\n\n  const getVariant = (index: number) =>\n    (currentStep === index && \"info\") ||\n    (currentStep > index && \"success\") ||\n    \"default\";\n\n  return (\n    <ProgressStepper isVertical={true}>\n      <ProgressStep\n        id={\"pending\"}\n        titleId={\"pending\"}\n        isCurrent={currentStatus === \"pending\"}\n        description={t(\"kafka_status_popover.pending.description\")}\n        aria-label={t(\"kafka_status_popover.pending.description\")}\n        variant={getVariant(0)}\n      >\n        {t(\"kafka_status_popover.pending.title\")}\n      </ProgressStep>\n\n      <ProgressStep\n        id={\"provisioning\"}\n        titleId={\"provisioning\"}\n        isCurrent={currentStatus === \"provisioning\"}\n        description={t(\"kafka_status_popover.provisioning.description\")}\n        aria-label={t(\"kafka_status_popover.provisioning.description\")}\n        variant={getVariant(1)}\n      >\n        {t(\"kafka_status_popover.provisioning.title\")}\n      </ProgressStep>\n      <ProgressStep\n        id={\"preparing\"}\n        titleId={\"preparing\"}\n        isCurrent={currentStatus === \"preparing\"}\n        description={t(\"kafka_status_popover.preparing.description\")}\n        aria-label={t(\"kafka_status_popover.preparing.description\")}\n        variant={getVariant(2)}\n      >\n        {t(\"kafka_status_popover.preparing.title\")}\n      </ProgressStep>\n    </ProgressStepper>\n  );\n};\n","import {\n  Alert,\n  Button,\n  ButtonVariant,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport { PopoverStatusOrder } from \"../types\";\nimport { StatusProgressStepper } from \"./StatusProgressStepper\";\n\nexport type StatusPopoverContentProps = {\n  currentStatus: PopoverStatus;\n  showWarning?: boolean;\n  showError?: boolean;\n  onClickConnectionTabLink: () => void;\n  onClickSupportLink: () => void;\n};\n\nexport const StatusPopoverContent: VoidFunctionComponent<\n  StatusPopoverContentProps\n> = ({\n  currentStatus,\n  showWarning = false,\n  showError = false,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const currentStep = PopoverStatusOrder.findIndex((s) => s === currentStatus);\n\n  return (\n    <div>\n      <Stack hasGutter>\n        <StackItem>\n          {showWarning && (\n            <Alert\n              variant=\"warning\"\n              isInline\n              isPlain\n              title={t(\"kafka_status_popover.warning_or_error_title\")}\n            >\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  <Trans\n                    ns={[\"create-kafka-instance\"]}\n                    i18nKey=\"kafka_status_popover.header_content_with_warning\"\n                    components={[\n                      <Button\n                        key=\"btn-connetcion-tab\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickConnectionTabLink}\n                        isInline\n                      />,\n                    ]}\n                  />\n                </Text>\n              </TextContent>\n            </Alert>\n          )}\n          {showError && (\n            <Alert\n              variant=\"danger\"\n              isInline\n              isPlain\n              title={t(\"kafka_status_popover.warning_or_error_title\")}\n            >\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  <Trans\n                    ns={[\"create-kafka-instance\"]}\n                    i18nKey=\"kafka_status_popover.header_content_with_error\"\n                    components={[\n                      <Button\n                        key=\"btn-connetcion-tab\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickConnectionTabLink}\n                        isInline\n                      />,\n                      <Button\n                        key=\"btn-support-case\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickSupportLink}\n                        isInline\n                      />,\n                    ]}\n                  />\n                </Text>\n              </TextContent>\n            </Alert>\n          )}\n          {!showError && !showWarning && (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey=\"kafka_status_popover.header_content\"\n                  components={[\n                    <Button\n                      key=\"btn-connetcion-tab\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickConnectionTabLink}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Text>\n            </TextContent>\n          )}\n        </StackItem>\n        <StackItem>\n          {t(\"common:progress_stepper_current_step\", {\n            currentStep,\n            total: PopoverStatusOrder.length,\n          })}\n        </StackItem>\n        <StackItem>\n          <StatusProgressStepper currentStatus={currentStatus} />\n        </StackItem>\n      </Stack>\n    </div>\n  );\n};\n","import type { PopoverProps } from \"@patternfly/react-core\";\nimport { Popover } from \"@patternfly/react-core\";\nimport type { RefObject, VoidFunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport type { StatusPopoverContentProps } from \"./StatusPopoverContent\";\nimport { StatusPopoverContent } from \"./StatusPopoverContent\";\n\nexport type StatusPopoverProps = {\n  status: PopoverStatus;\n  initialOpen?: boolean;\n  showWarning?: boolean;\n  showError?: boolean;\n  children?: PopoverProps[\"children\"];\n  onClickConnectionTabLink: StatusPopoverContentProps[\"onClickConnectionTabLink\"];\n  onClickSupportLink: StatusPopoverContentProps[\"onClickSupportLink\"];\n  reference?: RefObject<HTMLButtonElement>;\n};\n\n/**\n * ## Introduction\n *\n * This is a popover that can be reached from the Kafka Instance table while the status of the instance in question is “Creating”.\n * A Kafka instance usually takes a few minutes to create. The purpose of this popover is to give the user some insights into\n * the creation process of their instance while they wait for it to be available to use.\n *\n * - The text at the top explains that the instance will be ready shortly & suggests that the user creates a service account while they wait.\n *  (Provides a link to the “Connections tab\" where this is done).\n *\n * - The steps shown in the progress stepper are statuses that show in the api. They have been grouped together under the one overall\n * “Creating status” in the table.There is some descriptive text accompanying each step too. When these steps are complete the instance will be ready for use\n *\n * - The popover is only available while instance creation is in progress.\n * - After creation is complete the table displays the ready status and the popover is no longer available.\n *\n */\nexport const StatusPopover: VoidFunctionComponent<StatusPopoverProps> = ({\n  initialOpen = false,\n  status,\n  showWarning = false,\n  showError = false,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n  reference,\n  children,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const [isVisible, setIsVisible] = useState(initialOpen);\n  const onClose = () => setIsVisible(false);\n\n  const handleClickConnectionTabLink = useCallback(() => {\n    onClose();\n    onClickConnectionTabLink();\n  }, [onClickConnectionTabLink]);\n\n  const handleClickSupportLink = useCallback(() => {\n    onClose();\n    onClickSupportLink();\n  }, [onClickSupportLink]);\n\n  return (\n    <Popover\n      headerContent={t(\"kafka_status_popover.title\")}\n      bodyContent={\n        <StatusPopoverContent\n          currentStatus={status}\n          showWarning={showWarning}\n          showError={showError}\n          onClickConnectionTabLink={handleClickConnectionTabLink}\n          onClickSupportLink={handleClickSupportLink}\n        />\n      }\n      isVisible={isVisible}\n      shouldOpen={() => setIsVisible(true)}\n      shouldClose={() => setIsVisible(false)}\n      position={\"right\"}\n      enableFlip={true}\n      reference={reference}\n    >\n      {children}\n    </Popover>\n  );\n};\n","import type { PopoverProps } from \"@patternfly/react-core\";\nimport { Popover, TextContent } from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { RefObject, VoidFunctionComponent } from \"react\";\n\nexport type SuspendedPopoverProps = {\n  children?: PopoverProps[\"children\"];\n  reference?: RefObject<HTMLButtonElement>;\n};\n\nexport const SuspendedPopover: VoidFunctionComponent<SuspendedPopoverProps> = ({\n  children,\n  reference,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <Popover\n      alertSeverityVariant={\"warning\"}\n      headerIcon={<ExclamationTriangleIcon />}\n      headerContent={t(\"suspend_popover_title\")}\n      bodyContent={\n        <TextContent>\n          <p>{t(\"suspend_popover_body_1\")}</p>\n        </TextContent>\n      }\n      position={\"right\"}\n      reference={reference}\n    >\n      {children}\n    </Popover>\n  );\n};\n","import { useInterval } from \"@rhoas/app-services-ui-components\";\nimport { differenceInMinutes } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport type { Status } from \"ui-models/src/models/kafka\";\nimport type { StatusPopoverProps } from \"./components\";\nimport { StatusLabel, StatusPopover, SuspendedPopover } from \"./components\";\nimport { KafkaToPopoverMapping } from \"./types\";\n\nexport type KafkaInstanceStatusProps = {\n  status: Status;\n  createdAt: Date;\n  warningAfterMinutes?: number;\n  errorAfterMinutes?: number;\n} & Pick<StatusPopoverProps, \"onClickConnectionTabLink\" | \"onClickSupportLink\">;\n\n/**\n * A component to show the status of a Kafka instance combining the\n * `StatusPopover` with the `StatusLabel`, with automatic handling of which\n * statuses should have a companion popover.\n */\nexport const KafkaInstanceStatus: VoidFunctionComponent<\n  KafkaInstanceStatusProps\n> = ({\n  status,\n  createdAt,\n  warningAfterMinutes = 15,\n  errorAfterMinutes = 30,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n}) => {\n  const popoverStatus = KafkaToPopoverMapping[status];\n  const [alert, setAlert] = useState<\"warning\" | \"error\" | false>(false);\n  const labelRef = useRef<HTMLButtonElement>(null);\n\n  const checkCreatedAt = useCallback(() => {\n    const elapsed = differenceInMinutes(new Date(), createdAt);\n    if (elapsed > errorAfterMinutes) {\n      setAlert(\"error\");\n    } else if (elapsed > warningAfterMinutes) {\n      setAlert(\"warning\");\n    } else {\n      setAlert(false);\n    }\n  }, [createdAt, errorAfterMinutes, warningAfterMinutes]);\n\n  useInterval(checkCreatedAt, 5000);\n  const showWarning = alert === \"warning\";\n  const showError = alert === \"error\";\n  return (\n    <>\n      {popoverStatus === \"suspended\" ? (\n        <SuspendedPopover reference={labelRef} />\n      ) : (\n        popoverStatus && (\n          <StatusPopover\n            status={popoverStatus}\n            showWarning={showWarning}\n            showError={showError}\n            onClickConnectionTabLink={onClickConnectionTabLink}\n            onClickSupportLink={onClickSupportLink}\n            reference={labelRef}\n          />\n        )\n      )}\n      <StatusLabel\n        value={status}\n        showWarning={showWarning}\n        showError={showError}\n        withPopover={popoverStatus !== undefined}\n        ref={labelRef}\n      />\n    </>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoDedicatedClustersProps = {\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoDedicatedClusters: VoidFunctionComponent<\n  EmptyStateNoDedicatedClustersProps\n> = ({ onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_instances_no_dedicated_clusters_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_instances_no_dedicated_clusters_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={onQuickstartGuide}\n      >\n        {t(\"empty_state_instances_no_dedicated_clusters_prerequisites_button\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoDedicatedEntitlementProps = {\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoDedicatedEntitlement: VoidFunctionComponent<\n  EmptyStateNoDedicatedEntitlementProps\n> = ({ onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_dedicated_entitlement_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_dedicated_entitlement_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoDedicatedInstancesProps = {\n  onCreate: () => void;\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoDedicatedInstances: VoidFunctionComponent<\n  EmptyStateNoDedicatedInstancesProps\n> = ({ onCreate, onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_dedicated_instances_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_dedicated_instances_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button ouiaId=\"button-create\" variant=\"primary\" onClick={onCreate}>\n        {t(\"empty_state_no_dedicated_instances_create_instance\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type EmptyStateNoInstancesProps = {\n  onCreate: () => void;\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoInstances: VoidFunctionComponent<\n  EmptyStateNoInstancesProps\n> = ({ onCreate, onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_instances_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_instances_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button ouiaId=\"button-create\" variant=\"primary\" onClick={onCreate}>\n        {t(\"empty_state_no_instances_create_instance\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type EmptyStateNoResultsProps = {\n  onClearAllFilters: () => void;\n};\n\nexport const EmptyStateNoResults: VoidFunctionComponent<\n  EmptyStateNoResultsProps\n> = ({ onClearAllFilters }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_results_found_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_results_found_body\"}\n          components={[<a onClick={onClearAllFilters} />]}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { Button, PageSection, Stack, StackItem } from \"@patternfly/react-core\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  FormatDate,\n  TableView,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport type { Kafka, SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { DeletingStatuses } from \"ui-models/src/models/kafka\";\nimport { useKafkaLabels } from \"../../hooks\";\nimport { KafkaInstanceActions } from \"../KafkaInstanceActions\";\nimport { KafkaInstanceStatus } from \"../KafkaInstanceStatus\";\nimport type {\n  EmptyStateNoInstancesProps,\n  EmptyStateNoResultsProps,\n} from \"./components\";\nimport { EmptyStateNoInstances, EmptyStateNoResults } from \"./components\";\nimport { EmptyStateNoDedicatedInstances } from \"./components/EmptyStateNoDedicatedInstances\";\n\nconst StandardColumns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"provider\",\n  \"region\",\n  \"status\",\n] as const;\n\nconst DedicatedColumns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"clusterId\",\n  \"status\",\n] as const;\n\nexport type KafkaInstancesProps = {\n  columns: \"standard\" | \"dedicated\";\n  instances: Array<Kafka> | undefined | null;\n  getUrlForInstance: (row: Kafka) => string;\n  names: string[];\n  owners: string[];\n  statuses: string[];\n  onCreate: () => void;\n  onSearchName: (value: string) => void;\n  onRemoveNameChip: (value: string) => void;\n  onRemoveNameChips: () => void;\n  onSearchOwner: (value: string) => void;\n  onRemoveOwnerChip: (value: string) => void;\n  onRemoveOwnerChips: () => void;\n  onSearchStatus: (value: SimplifiedStatus) => void;\n  onRemoveStatusChip: (value: SimplifiedStatus) => void;\n  onRemoveStatusChips: () => void;\n  onDetails: (row: Kafka) => void;\n  onConnection: (row: Kafka) => void;\n  canChangeOwner: (row: Kafka) => boolean;\n  onChangeOwner: (row: Kafka) => void;\n  canDelete: (row: Kafka) => boolean;\n  onDelete: (row: Kafka) => void;\n  onClickConnectionTabLink: (row: Kafka) => void;\n  onClickSupportLink: () => void;\n  onInstanceLinkClick: (row: Kafka) => void;\n  canHaveInstanceLink: (row: Kafka) => boolean;\n  canOpenConnection: (row: Kafka) => boolean;\n} & Pick<\n  TableViewProps<\n    Kafka,\n    (typeof StandardColumns | typeof DedicatedColumns)[number]\n  >,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n> &\n  EmptyStateNoInstancesProps &\n  EmptyStateNoResultsProps;\n\nexport const KafkaInstances = <\n  Columns extends typeof StandardColumns | typeof DedicatedColumns\n>({\n  columns,\n  instances,\n  itemCount,\n  page,\n  perPage,\n  names,\n  owners,\n  statuses,\n  getUrlForInstance,\n  isRowSelected,\n  isColumnSortable,\n  onPageChange,\n  onDetails,\n  onConnection,\n  canChangeOwner,\n  onChangeOwner,\n  canDelete,\n  onDelete,\n  onCreate,\n  onQuickstartGuide,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n  onInstanceLinkClick,\n  onSearchName,\n  onRemoveNameChip,\n  onRemoveNameChips,\n  onSearchOwner,\n  onRemoveOwnerChip,\n  onRemoveOwnerChips,\n  onSearchStatus,\n  onRemoveStatusChip,\n  onRemoveStatusChips,\n  onClearAllFilters,\n\n  canHaveInstanceLink,\n  canOpenConnection,\n}: KafkaInstancesProps) => {\n  const { t } = useTranslation(\"kafka\");\n  const labels = useKafkaLabels();\n  const breakpoint = \"lg\";\n\n  const isFiltered =\n    names.length > 0 || owners.length > 0 || statuses.length > 0;\n\n  return (\n    <PageSection isFilled={true}>\n      <TableView\n        data={instances}\n        columns={columns === \"standard\" ? StandardColumns : DedicatedColumns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          const timeCreatedDate = parseISO(row.createdAt);\n          const instanceLinkEnable = canHaveInstanceLink(row);\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"name\":\n                    return (\n                      <Button\n                        variant=\"link\"\n                        component={(props) => (\n                          <Link to={getUrlForInstance(row)} {...props}>\n                            {row.name}\n                          </Link>\n                        )}\n                        isInline={true}\n                        isAriaDisabled={!instanceLinkEnable}\n                        isDisabled={!instanceLinkEnable}\n                        onClick={() => onInstanceLinkClick(row)}\n                      />\n                    );\n                  case \"provider\":\n                    return labels.providers[row.provider];\n                  case \"createdAt\":\n                    return (\n                      <Stack>\n                        <StackItem>\n                          <FormatDate\n                            date={timeCreatedDate}\n                            format={\"distanceToNowWithAgo\"}\n                          />\n                        </StackItem>\n                        {row.expiryDate && (\n                          <StackItem>\n                            <Trans\n                              i18nKey=\"will_expire_short\"\n                              ns={[\"kafka\"]}\n                              components={{\n                                time: (\n                                  <FormatDate\n                                    date={parseISO(row.expiryDate)}\n                                    format=\"expiration\"\n                                  />\n                                ),\n                              }}\n                            />\n                          </StackItem>\n                        )}\n                      </Stack>\n                    );\n                  case \"status\":\n                    return (\n                      <KafkaInstanceStatus\n                        status={row[\"status\"]}\n                        createdAt={timeCreatedDate}\n                        onClickConnectionTabLink={() =>\n                          onClickConnectionTabLink(row)\n                        }\n                        onClickSupportLink={onClickSupportLink}\n                      />\n                    );\n                  case \"clusterId\":\n                    return row.clusterId;\n                  default:\n                    return row[column];\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row }) => {\n          const changeOwnerEnabled = canChangeOwner(row);\n          const deleteEnabled = canDelete(row);\n          const openConnectionEnabled = canOpenConnection(row);\n          return (\n            <KafkaInstanceActions\n              onDetails={() => onDetails(row)}\n              onConnection={() => onConnection(row)}\n              canOpenConnection={openConnectionEnabled}\n              canChangeOwner={changeOwnerEnabled}\n              onChangeOwner={() => onChangeOwner(row)}\n              canDelete={deleteEnabled}\n              onDelete={() => onDelete(row)}\n            />\n          );\n        }}\n        onRowClick={({ row }) => onDetails(row)}\n        isColumnSortable={isColumnSortable}\n        isRowSelected={isRowSelected}\n        isRowDeleted={({ row }) => DeletingStatuses.includes(row[\"status\"])}\n        toolbarBreakpoint={breakpoint}\n        filters={{\n          [labels.fields.name]: {\n            type: \"search\",\n            chips: names,\n            onSearch: onSearchName,\n            onRemoveChip: onRemoveNameChip,\n            onRemoveGroup: onRemoveNameChips,\n            validate: (value) => /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(value),\n            errorMessage: t(\"kafka:input_field_invalid_message\"),\n          },\n          [labels.fields.owner]: {\n            type: \"search\",\n            chips: owners,\n            onSearch: onSearchOwner,\n            onRemoveChip: onRemoveOwnerChip,\n            onRemoveGroup: onRemoveOwnerChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"kafka:input_field_invalid_message\"),\n          },\n          [labels.fields.status]: {\n            type: \"checkbox\",\n            chips: statuses,\n            options: labels.statusesSimplified,\n            onToggle: onSearchStatus,\n            onRemoveChip: onRemoveStatusChip,\n            onRemoveGroup: onRemoveStatusChips,\n          },\n        }}\n        actions={[\n          {\n            label: t(\"create_instance\"),\n            onClick: onCreate,\n            isPrimary: true,\n          },\n        ]}\n        itemCount={itemCount}\n        page={page}\n        perPage={perPage}\n        onPageChange={onPageChange}\n        onClearAllFilters={onClearAllFilters}\n        ariaLabel={t(\"table.title\")}\n        isFiltered={isFiltered}\n        emptyStateNoData={\n          columns === \"standard\" ? (\n            <EmptyStateNoInstances\n              onCreate={onCreate}\n              onQuickstartGuide={onQuickstartGuide}\n            />\n          ) : (\n            <EmptyStateNoDedicatedInstances\n              onCreate={onCreate}\n              onQuickstartGuide={onQuickstartGuide}\n            />\n          )\n        }\n        emptyStateNoResults={\n          <EmptyStateNoResults onClearAllFilters={onClearAllFilters} />\n        }\n      />\n    </PageSection>\n  );\n};\n","import type { DatePickerProps, TimePickerProps } from \"@patternfly/react-core\";\nimport { DatePicker, InputGroup, TimePicker } from \"@patternfly/react-core\";\nimport { formatISO, parseISO, setHours, setMinutes } from \"date-fns\";\nimport { formatInTimeZone } from \"date-fns-tz\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { DateIsoString } from \"../../../../../ui-models/src/types\";\n\nexport type DateTimePickerProps = {\n  isDisabled: boolean;\n  value: DateIsoString | undefined;\n  onChange: (value: DateIsoString) => void;\n};\nexport const DateTimePicker: VoidFunctionComponent<DateTimePickerProps> = ({\n  isDisabled,\n  value,\n  onChange,\n}) => {\n  const [timeSelected, setIsTimeSelected] = useState(false);\n  const date = value ? parseISO(value) : undefined;\n\n  const onSelectCalendar: DatePickerProps[\"onChange\"] = (_, newDate) => {\n    if (newDate) {\n      onChange(formatISO(newDate) as DateIsoString);\n    }\n  };\n\n  const onSelectTime: TimePickerProps[\"onChange\"] = (\n    time,\n    hour,\n    minute,\n    __,\n    isValid\n  ) => {\n    if (\n      isValid &&\n      date &&\n      hour != undefined &&\n      hour > 0 &&\n      (time.includes(\"AM\") || time.includes(\"PM\"))\n    ) {\n      let newDate = date;\n      if (hour !== undefined) {\n        newDate = setHours(newDate, hour);\n      }\n      if (minute !== undefined) {\n        newDate = setMinutes(newDate, minute);\n      }\n\n      onChange(formatISO(newDate) as DateIsoString);\n      setIsTimeSelected(true);\n    }\n  };\n\n  return (\n    <InputGroup>\n      <DatePicker\n        isDisabled={isDisabled}\n        value={date ? formatInTimeZone(date, \"UTC\", \"yyyy-MM-dd\") : undefined}\n        onChange={onSelectCalendar}\n      />\n      <TimePicker\n        isDisabled={!date || isDisabled}\n        time={timeSelected ? date : undefined}\n        onChange={onSelectTime}\n      />\n    </InputGroup>\n  );\n};\n","import {\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  DropdownSeparator,\n  DropdownToggle,\n  InputGroup,\n  TextInput,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { DateIsoString } from \"../../../../../ui-models/src/types\";\nimport { DateTimePicker } from \"./DateTimePicker\";\n\ntype Category = \"offset\" | \"timestamp\" | \"epoch\" | \"latest\";\nexport type FilterGroupProps = {\n  isDisabled: boolean;\n  offset: number | undefined;\n  epoch: number | undefined;\n  timestamp: DateIsoString | undefined;\n  onOffsetChange: (value: number | undefined) => void;\n  onTimestampChange: (value: DateIsoString | undefined) => void;\n  onEpochChange: (value: number | undefined) => void;\n  onLatest: () => void;\n};\nexport const FilterGroup: VoidFunctionComponent<FilterGroupProps> = ({\n  isDisabled,\n  offset,\n  epoch,\n  timestamp,\n  onOffsetChange,\n  onTimestampChange,\n  onEpochChange,\n  onLatest,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [currentCategory, setCurrentCategory] = useState<Category>(\"latest\");\n  const [isOpen, setIsOpen] = useState(false);\n  const labels: { [key in Category]: string } = {\n    offset: t(\"filter.offset\"),\n    timestamp: t(\"filter.timestamp\"),\n    epoch: t(\"filter.epoch\"),\n    latest: t(\"filter.latest\"),\n  };\n  return (\n    <ToolbarItem>\n      <InputGroup>\n        <Dropdown\n          data-testid={\"filter-group-dropdown\"}\n          toggle={\n            <DropdownToggle\n              onToggle={setIsOpen}\n              isDisabled={isDisabled}\n              data-testid={\"filter-group\"}\n            >\n              {labels[currentCategory]}\n            </DropdownToggle>\n          }\n          position={DropdownPosition.left}\n          isOpen={isOpen}\n          onSelect={() => setIsOpen(false)}\n          dropdownItems={[\n            <DropdownItem\n              key=\"offset\"\n              value=\"offset\"\n              autoFocus={currentCategory === \"offset\"}\n              onClick={() => setCurrentCategory(\"offset\")}\n            >\n              {labels[\"offset\"]}\n            </DropdownItem>,\n            <DropdownItem\n              key=\"timestamp\"\n              value=\"timestamp\"\n              autoFocus={currentCategory === \"timestamp\"}\n              onClick={() => setCurrentCategory(\"timestamp\")}\n            >\n              {labels[\"timestamp\"]}\n            </DropdownItem>,\n            <DropdownItem\n              key=\"epoch\"\n              value=\"epoch\"\n              autoFocus={currentCategory === \"epoch\"}\n              onClick={() => setCurrentCategory(\"epoch\")}\n            >\n              {labels[\"epoch\"]}\n            </DropdownItem>,\n            <DropdownSeparator key={\"divider\"} />,\n            <DropdownItem\n              key=\"latest\"\n              value=\"latest\"\n              autoFocus={currentCategory === \"latest\"}\n              onClick={() => {\n                setCurrentCategory(\"latest\");\n                onLatest();\n              }}\n            >\n              {labels[\"latest\"]}\n            </DropdownItem>,\n          ]}\n        />\n        {currentCategory === \"offset\" && (\n          <TextInput\n            isDisabled={isDisabled}\n            type={\"number\"}\n            aria-label={t(\"filter.offset_aria_label\")}\n            placeholder={t(\"filter.offset_placeholder\")}\n            onChange={(value) => {\n              if (value !== \"\") {\n                const newOffset = parseInt(value, 10);\n                if (Number.isInteger(newOffset)) {\n                  onOffsetChange(newOffset);\n                }\n              } else {\n                onOffsetChange(undefined);\n              }\n            }}\n            value={offset === undefined ? \"\" : offset}\n          />\n        )}\n        {currentCategory === \"timestamp\" && (\n          <DateTimePicker\n            isDisabled={isDisabled}\n            value={timestamp}\n            onChange={onTimestampChange}\n          />\n        )}\n        {currentCategory === \"epoch\" && (\n          <TextInput\n            isDisabled={isDisabled}\n            type={\"number\"}\n            aria-label={t(\"filter.epoch_aria_label\")}\n            placeholder={t(\"filter.epoch_placeholder\")}\n            className=\"pf-u-flex-basis-auto pf-u-flex-grow-0 pf-u-w-initial\"\n            size={t(\"filter.epoch_placeholder\").length}\n            onChange={(value) => {\n              if (value !== \"\" && Number(value) >= 0)\n                onEpochChange(Number(value));\n              else onEpochChange(undefined);\n            }}\n            value={epoch == undefined ? \"\" : epoch}\n          />\n        )}\n      </InputGroup>\n    </ToolbarItem>\n  );\n};\n","import {\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type LimitSelectorProps = {\n  value: number;\n  isDisabled: boolean;\n  onChange: (value: number) => void;\n};\nexport const LimitSelector: VoidFunctionComponent<LimitSelectorProps> = ({\n  value,\n  isDisabled,\n  onChange,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = (isOpen: boolean) => setIsOpen(isOpen);\n  const titleId = \"limit-selector\";\n\n  return (\n    <InputGroup>\n      <InputGroupText className=\"pf-c-content\">\n        {t(\"limit_label\")}\n      </InputGroupText>\n      <div>\n        <span id={titleId} hidden>\n          Select a state\n        </span>\n\n        <Select\n          aria-label={t(\"per_page_aria_label\")}\n          onToggle={toggleOpen}\n          selections={value !== undefined ? [t(\"limit\", { value })] : undefined}\n          isOpen={isOpen}\n          isDisabled={isDisabled}\n          onSelect={() => setIsOpen(false)}\n          data-testid={\"limit-selector\"}\n        >\n          {[10, 20, 50].map((value, idx) => (\n            <SelectOption\n              key={idx}\n              value={t(\"limit\", { value })}\n              onClick={() => onChange(value)}\n            />\n          ))}\n        </Select>\n      </div>\n    </InputGroup>\n  );\n};\n","import type { Message } from \"ui-models/src/models/message\";\n\nexport function isSameMessage(m1: Message, m2: Message) {\n  return JSON.stringify(m1) === JSON.stringify(m2);\n}\n\nexport function beautifyUnknownValue(value: string): string {\n  try {\n    return JSON.stringify(JSON.parse(value), null, 2);\n  } catch (e) {\n    // noop\n  }\n  return value;\n}\n\nexport function truncate(value: string, length: number): [string, boolean] {\n  const shouldTruncate = value.length > length;\n  return [\n    shouldTruncate ? `${value.substring(0, length)}...` : value,\n    shouldTruncate,\n  ];\n}\n","export enum RetentionTimeUnits {\n  MILLISECOND = \"milliseconds\",\n  SECOND = \"seconds\",\n  MINUTE = \"minutes\",\n  HOUR = \"hours\",\n  DAY = \"days\",\n  WEEK = \"weeks\",\n  CUSTOM = \"custom\",\n  UNLIMITED = \"unlimited\",\n}\n\nexport enum RetentionSizeUnits {\n  BYTE = \"bytes\",\n  KIBIBYTE = \"kibibytes\",\n  MEBIBYTE = \"mebibytes\",\n  GIBIBYTE = \"gibibytes\",\n  TEBIBYTE = \"tebibytes\",\n  CUSTOM = \"custom\",\n  UNLIMITED = \"unlimited\",\n}\n\nexport const unitsToBytes = {\n  [RetentionSizeUnits.BYTE]: BigInt(\"1\"),\n  [RetentionSizeUnits.KIBIBYTE]: BigInt(\"1024\"),\n  [RetentionSizeUnits.MEBIBYTE]: BigInt(\"1048576\"),\n  [RetentionSizeUnits.GIBIBYTE]: BigInt(\"1073741824\"),\n  [RetentionSizeUnits.TEBIBYTE]: BigInt(\"1099511627776\"),\n};\n\nexport const unitsToMilliSecond = {\n  [RetentionTimeUnits.MILLISECOND]: BigInt(\"1\"),\n  [RetentionTimeUnits.SECOND]: BigInt(\"1000\"),\n  [RetentionTimeUnits.MINUTE]: BigInt(\"60000\"),\n  [RetentionTimeUnits.HOUR]: BigInt(\"3600000\"),\n  [RetentionTimeUnits.DAY]: BigInt(\"86400000\"),\n};\n\ntype ConversionUnit = {\n  value: bigint;\n  unit: string;\n};\n\nexport const millisecondsToTime = (value: bigint): ConversionUnit => {\n  if (value) {\n    if (value % unitsToMilliSecond.days == BigInt(0))\n      return { value: value / unitsToMilliSecond.days, unit: \"days\" };\n    if (value % unitsToMilliSecond.hours == BigInt(0))\n      return { value: value / unitsToMilliSecond.hours, unit: \"hours\" };\n    if (value % unitsToMilliSecond.minutes == BigInt(0))\n      return { value: value / unitsToMilliSecond.minutes, unit: \"minutes\" };\n    if (value % unitsToMilliSecond.seconds == BigInt(0))\n      return { value: value / unitsToMilliSecond.seconds, unit: \"seconds\" };\n  }\n\n  return { value, unit: \"milliseconds\" };\n};\n\nexport const formattedRetentionTime = (time: bigint): string => {\n  const { unit, value } = millisecondsToTime(time);\n  return Number(value) === -1 ? \"Unlimited\" : `${time} ms (${value} ${unit})`;\n};\n\nexport const formattedRetentionSize = (size: bigint): string => {\n  const { unit, value } = bytesToMemorySize(size);\n  return Number(value) === -1\n    ? \"Unlimited\"\n    : `${size} bytes (${value} ${unit})`;\n};\n\nexport const bytesToMemorySize = (value: bigint): ConversionUnit => {\n  if (value) {\n    if (value % unitsToBytes.tebibytes == BigInt(0))\n      return { value: value / unitsToBytes.tebibytes, unit: \"tebibytes\" };\n    if (value % unitsToBytes.gibibytes == BigInt(0))\n      return { value: value / unitsToBytes.gibibytes, unit: \"gibibytes\" };\n    if (value % unitsToBytes.mebibytes == BigInt(0))\n      return { value: value / unitsToBytes.mebibytes, unit: \"mebibytes\" };\n    if (value % unitsToBytes.kibibytes == BigInt(0))\n      return { value: value / unitsToBytes.kibibytes, unit: \"kibibytes\" };\n  }\n\n  return { value, unit: \"bytes\" };\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type NoDataCellProps = {\n  columnLabel: string;\n};\nexport const NoDataCell: VoidFunctionComponent<NoDataCellProps> = ({\n  columnLabel,\n}) => {\n  const { t } = useTranslation(\"common\");\n  return (\n    <span className=\"pf-u-color-400\">\n      {t(\"table_cell_no_data\", { column: columnLabel })}\n    </span>\n  );\n};\n","import {\n  ClipboardCopy,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelContent,\n  Flex,\n  FlexItem,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { FormatDate, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport { beautifyUnknownValue } from \"../utils\";\nimport { NoDataCell } from \"./NoDataCell\";\n\nexport type MessageDetailsProps = {\n  onClose: () => void;\n  defaultTab: MessageDetailsBodyProps[\"defaultTab\"];\n  message: Message | undefined;\n};\nexport const MessageDetails: VoidFunctionComponent<MessageDetailsProps> = ({\n  onClose,\n  defaultTab,\n  message,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n\n  return (\n    <DrawerPanelContent isResizable={true} minSize={\"400px\"}>\n      <DrawerHead>\n        <TextContent>\n          <Text component={TextVariants.h2}>{t(\"message\")}</Text>\n        </TextContent>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerContentBody>\n        {message && (\n          <MessageDetailsBody\n            defaultTab={defaultTab}\n            messageKey={message.key}\n            {...message}\n          />\n        )}\n      </DrawerContentBody>\n    </DrawerPanelContent>\n  );\n};\n\nexport type MessageDetailsBodyProps = {\n  defaultTab: \"value\" | \"headers\";\n  messageKey: Message[\"key\"];\n} & Omit<Message, \"key\">;\n\nexport const MessageDetailsBody: VoidFunctionComponent<\n  MessageDetailsBodyProps\n> = ({ defaultTab, ...message }) => {\n  const { t } = useTranslation(\"message-browser\");\n\n  return (\n    <Flex direction={{ default: \"column\" }} data-testid={\"message-details\"}>\n      <FlexItem>\n        <DescriptionList isHorizontal isCompact>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.partition\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.partition}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.offset\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.offset}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.timestamp\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.timestamp ? (\n                <FormatDate\n                  date={parseISO(message.timestamp)}\n                  format={\"longWithMilliseconds\"}\n                />\n              ) : (\n                <NoDataCell columnLabel={t(\"field.timestamp\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.epoch\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.timestamp ? (\n                <FormatDate\n                  date={parseISO(message.timestamp)}\n                  format={\"epoch\"}\n                />\n              ) : (\n                <NoDataCell columnLabel={t(\"field.epoch\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.key\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.messageKey ? (\n                message.messageKey\n              ) : (\n                <NoDataCell columnLabel={t(\"field.key\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n        </DescriptionList>\n      </FlexItem>\n      <FlexItem>\n        {/* set key to be a random number to force redraw the tabs in order to change the active tab from the outside */}\n        <Tabs defaultActiveKey={defaultTab} key={Math.random()}>\n          <Tab\n            eventKey={\"value\"}\n            title={<TabTitleText>{t(\"field.value\")}</TabTitleText>}\n          >\n            <ClipboardCopy isCode={true} isExpanded={true} isReadOnly={true}>\n              {beautifyUnknownValue(message.value || \"\")}\n            </ClipboardCopy>\n          </Tab>\n          <Tab\n            eventKey={\"headers\"}\n            title={<TabTitleText>{t(\"field.headers\")}</TabTitleText>}\n          >\n            <ClipboardCopy isCode={true} isExpanded={true} isReadOnly={true}>\n              {beautifyUnknownValue(JSON.stringify(message.headers) || \"\")}\n            </ClipboardCopy>\n          </Tab>\n        </Tabs>\n      </FlexItem>\n    </Flex>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const NoDataEmptyState: VoidFunctionComponent<{\n  onRefresh: () => void;\n}> = ({ onRefresh }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {t(\"no_data_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_data_body\")}</EmptyStateBody>\n      <Button onClick={onRefresh}>{t(\"no_data_refresh\")}</Button>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const NoResultsEmptyState: VoidFunctionComponent<{\n  onReset: () => void;\n}> = ({ onReset }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {t(\"no_results_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_results_body\")}</EmptyStateBody>\n      <Button variant={\"link\"} onClick={onReset}>\n        {t(\"no_results_reset\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { Text, TextContent } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const OffsetRange: VoidFunctionComponent<{\n  min: number;\n  max: number;\n}> = ({ min, max }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <TextContent className=\"pf-u-font-size\">\n      <Text>\n        {t(\"offset\")} <span className=\"custom-text\">{min}</span> -{\" \"}\n        <span className=\"custom-text\">{max}</span>\n      </Text>\n    </TextContent>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  InputGroup,\n  InputGroupText,\n  InputGroupTextVariant,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nconst MAX_OPTIONS = 20;\n\nexport type PartitionSelectorProps = {\n  value: number | undefined;\n  partitions: number | undefined;\n  isDisabled: boolean;\n  onChange: (value: number | undefined) => void;\n};\nexport const PartitionSelector: VoidFunctionComponent<\n  PartitionSelectorProps\n> = ({ value, partitions, isDisabled, onChange }) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = (isOpen: boolean) => setIsOpen(isOpen);\n  const titleId = \"partition-selector\";\n\n  const handleChange = useCallback(\n    (value: string) => {\n      if (value !== \"\") {\n        const valueAsNum = parseInt(value, 10);\n        if (Number.isInteger(valueAsNum)) {\n          onChange(valueAsNum);\n        }\n      }\n      setIsOpen(false);\n    },\n    [onChange]\n  );\n\n  const allPartitions = useMemo(() => {\n    return new Array(partitions).fill(0).map((_, index) => index.toString());\n  }, [partitions]);\n\n  const makeOptions = useCallback(\n    (values: string[]) => {\n      const options = values\n        .slice(0, MAX_OPTIONS)\n        .map((v) => <SelectOption key={v} value={v} />);\n      const hiddenOptionsCount = values.length - options.length;\n      return hiddenOptionsCount\n        ? [\n            ...options,\n            <SelectOption\n              key={\"more-info\"}\n              isDisabled={true}\n              description={t(\"partitions_hidden\", {\n                count: hiddenOptionsCount,\n              })}\n            />,\n          ]\n        : options;\n    },\n    [t]\n  );\n\n  const options = useMemo(() => {\n    return makeOptions(allPartitions);\n  }, [allPartitions, makeOptions]);\n\n  const handleFilter: SelectProps[\"onFilter\"] = useCallback(\n    (_, filter: string) => {\n      if (filter !== \"\") {\n        return makeOptions(\n          allPartitions.filter((partition) => partition.includes(filter))\n        );\n      }\n      return options;\n    },\n    [allPartitions, makeOptions, options]\n  );\n\n  return (\n    <InputGroup>\n      <InputGroupText className=\"pf-c-content\">\n        {t(\"field.partition\")}\n      </InputGroupText>\n      <div>\n        <span id={titleId} hidden>\n          {t(\"select_partition_aria_label\")}\n        </span>\n        <Select\n          variant={SelectVariant.typeahead}\n          typeAheadAriaLabel={t(\"select_partition_typeahead\")}\n          onToggle={toggleOpen}\n          onSelect={(_, value) => handleChange(value as string)}\n          selections={value !== undefined ? [`${value}`] : undefined}\n          isOpen={isOpen}\n          aria-labelledby={titleId}\n          maxHeight={200}\n          width={150}\n          onFilter={handleFilter}\n          isInputValuePersisted={false}\n          isDisabled={isDisabled}\n          placeholderText={t(\"partition_placeholder\")}\n          onClear={() => onChange(undefined)}\n          data-testid={\"partition-selector\"}\n        >\n          {options}\n        </Select>\n      </div>\n      <InputGroupText\n        id={`${titleId}-input`}\n        variant={InputGroupTextVariant.plain}\n        className=\"pf-c-content\"\n      >\n        {t(\"select_partition_of_count\", { partitions })}\n      </InputGroupText>\n    </InputGroup>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { truncate } from \"../utils\";\nimport { Flex, FlexItem } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nconst PREVIEW_LENGTH = 170;\n\nexport type UnknownValuePreviewProps = {\n  value: string;\n  truncateAt?: number;\n  onClick?: () => void;\n};\nexport const UnknownValuePreview: VoidFunctionComponent<\n  UnknownValuePreviewProps\n> = ({ value, truncateAt = PREVIEW_LENGTH, onClick }) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [preview, truncated] = truncate(value, truncateAt);\n  return (\n    <Flex\n      direction={{ default: \"column\" }}\n      spaceItems={{ default: \"spaceItemsXs\" }}\n    >\n      <FlexItem>{preview}</FlexItem>\n      {truncated && (\n        <FlexItem>\n          <a\n            onClick={\n              onClick\n                ? (e) => {\n                    e.stopPropagation();\n                    onClick();\n                  }\n                : undefined\n            }\n          >\n            {t(\"show_more\")}\n          </a>\n        </FlexItem>\n      )}\n    </Flex>\n  );\n};\n","import type { Message } from \"ui-models/src/models/message\";\nimport { assign, createMachine } from \"xstate\";\nimport type { DateIsoString } from \"../../../../ui-models/src/types\";\nimport { isSameMessage } from \"./utils\";\n\nexport type MessageApiResponse = {\n  lastUpdated: Date;\n  messages: Message[];\n  partitions: number;\n  offsetMin: number;\n  offsetMax: number;\n\n  filter: {\n    partition: number | undefined;\n    offset: number | undefined;\n    timestamp: DateIsoString | undefined;\n    limit: number | undefined;\n    epoch: number | undefined;\n  };\n};\n\nexport const MessageBrowserMachine = createMachine(\n  {\n    id: \"message-browser\",\n    predictableActionArguments: true,\n    tsTypes: {} as import(\"./MessageBrowserMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as {\n        // response\n        response: MessageApiResponse | undefined;\n\n        limit: number;\n        // optional input\n        partition: number | undefined;\n        offset: number | undefined;\n        epoch: number | undefined;\n        timestamp: DateIsoString | undefined;\n        selectedMessage: Message | undefined;\n      },\n      events: {} as\n        | {\n            type: \"fetchSuccess\";\n            messages: Message[];\n            partitions: number;\n            offsetMin: number;\n            offsetMax: number;\n          }\n        | { type: \"fetchFail\" }\n        | { type: \"refresh\" }\n        | { type: \"setPartition\"; value: number | undefined }\n        | { type: \"setOffset\"; value: number | undefined }\n        | { type: \"setTimestamp\"; value: DateIsoString | undefined }\n        | { type: \"setEpoch\"; value: number | undefined }\n        | { type: \"setLatest\" }\n        | { type: \"setLimit\"; value: number }\n        | { type: \"selectMessage\"; message: Message }\n        | { type: \"deselectMessage\" },\n    },\n    initial: \"initialLoading\",\n    context: {\n      // response\n      response: undefined,\n\n      limit: 10,\n      // optional input\n      partition: undefined,\n      offset: undefined,\n      timestamp: undefined,\n      selectedMessage: undefined,\n      epoch: undefined,\n    },\n    states: {\n      initialLoading: {\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMessages\",\n            target: \"verifyMessages\",\n          },\n          fetchFail: \"error\",\n        },\n      },\n      verifyMessages: {\n        always: [{ cond: \"noMessages\", target: \"noData\" }, { target: \"ready\" }],\n      },\n      noData: {\n        on: {\n          refresh: \"initialLoading\",\n        },\n      },\n      error: {\n        on: {\n          refresh: \"initialLoading\",\n        },\n      },\n      ready: {\n        initial: \"pristine\",\n        states: {\n          pristine: {},\n          dirty: {\n            tags: \"dirty\",\n          },\n          shouldSearch: {\n            always: [\n              {\n                cond: \"areFiltersChanged\",\n                target: \"dirty\",\n              },\n              { target: \"pristine\" },\n            ],\n          },\n        },\n        always: [\n          {\n            cond: \"selectedMessageNotAvailable\",\n            actions: \"deselectMessage\",\n          },\n        ],\n        on: {\n          refresh: \"refreshing\",\n          setPartition: {\n            target: \".shouldSearch\",\n            actions: \"setPartition\",\n          },\n          setEpoch: {\n            actions: \"setEpoch\",\n            target: \".shouldSearch\",\n          },\n          setTimestamp: {\n            target: \".shouldSearch\",\n            actions: \"setTimestamp\",\n          },\n          setOffset: {\n            target: \".shouldSearch\",\n            actions: \"setOffset\",\n          },\n          setLatest: {\n            target: \".shouldSearch\",\n            actions: \"setLatest\",\n          },\n          setLimit: {\n            target: \".shouldSearch\",\n            actions: \"setLimit\",\n          },\n          selectMessage: {\n            actions: \"selectMessage\",\n          },\n          deselectMessage: {\n            actions: \"deselectMessage\",\n          },\n        },\n      },\n      refreshing: {\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMessages\",\n            target: \"ready\",\n          },\n          fetchFail: {\n            target: \"ready\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setMessages: assign(\n        (context, { messages, partitions, offsetMin, offsetMax }) => ({\n          response: {\n            lastUpdated: new Date(),\n            messages,\n            partitions,\n            offsetMin,\n            offsetMax,\n            filter: {\n              partition: context.partition,\n              timestamp: context.timestamp,\n              offset: context.offset,\n              limit: context.limit,\n              epoch: context.epoch,\n            },\n          },\n        })\n      ),\n      setPartition: assign((_, { value }) => ({ partition: value })),\n      setEpoch: assign((_, { value }) => ({\n        epoch: value,\n      })),\n      setTimestamp: assign((_, { value }) => ({\n        timestamp: value,\n      })),\n      setOffset: assign((_, { value }) => ({\n        offset: value,\n      })),\n      setLimit: assign((_, { value }) => ({\n        limit: value,\n      })),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      setLatest: assign((_) => ({\n        timestamp: undefined,\n        offset: undefined,\n      })),\n      selectMessage: assign((_, { message }) => ({ selectedMessage: message })),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      deselectMessage: assign((_) => ({ selectedMessage: undefined })),\n    },\n    guards: {\n      noMessages: ({ response }) =>\n        response === undefined || response.messages.length === 0,\n      selectedMessageNotAvailable: ({ response, selectedMessage }) =>\n        selectedMessage !== undefined &&\n        response?.messages.find((m) => isSameMessage(m, selectedMessage)) ===\n          undefined,\n      areFiltersChanged: (context) =>\n        context.response?.filter.limit !== context.limit ||\n        context.response?.filter.offset !== context.offset ||\n        context.response?.filter.partition !== context.partition ||\n        context.response?.filter.timestamp !== context.timestamp ||\n        context.response?.filter.epoch !== context.epoch,\n    },\n  }\n);\n","import {\n  Button,\n  Drawer,\n  DrawerContent,\n  PageSection,\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup,\n} from \"@patternfly/react-core\";\nimport { FilterIcon, SearchIcon } from \"@patternfly/react-icons\";\nimport type { BaseCellProps } from \"@patternfly/react-table\";\nimport {\n  InnerScrollContainer,\n  OuterScrollContainer,\n} from \"@patternfly/react-table\";\nimport {\n  FormatDate,\n  Loading,\n  RefreshButton,\n  ResponsiveTable,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport { useMachine } from \"@xstate/react\";\nimport { parseISO } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useMemo, useState } from \"react\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport type { DateIsoString } from \"../../../../ui-models/src/types\";\nimport type { MessageDetailsProps } from \"./components\";\nimport {\n  FilterGroup,\n  LimitSelector,\n  MessageDetails,\n  NoDataCell,\n  NoDataEmptyState,\n  NoResultsEmptyState,\n  OffsetRange,\n  PartitionSelector,\n  UnknownValuePreview,\n} from \"./components\";\nimport \"./KafkaMessageBrowser.css\";\nimport type { MessageApiResponse } from \"./MessageBrowserMachine\";\nimport { MessageBrowserMachine } from \"./MessageBrowserMachine\";\nimport { beautifyUnknownValue, isSameMessage } from \"./utils\";\n\nconst columns = [\n  \"partition\",\n  \"offset\",\n  \"timestamp\",\n  \"key\",\n  \"headers\",\n  \"value\",\n] as const;\n\nconst columnWidths: BaseCellProps[\"width\"][] = [10, 10, 15, 10, undefined, 30];\n\nexport type KafkaMessageBrowserProps = {\n  getMessages: (props: {\n    partition?: number;\n    offset?: number;\n    timestamp?: DateIsoString;\n    limit: number;\n  }) => Promise<{ messages: Message[]; partitions: number }>;\n};\nexport const KafkaMessageBrowser: VoidFunctionComponent<\n  KafkaMessageBrowserProps\n> = ({ getMessages }) => {\n  const [state, send] = useMachine(() => MessageBrowserMachine, {\n    devTools: true,\n    services: {\n      api: (context) => {\n        return (send) => {\n          getMessages({\n            partition: context.partition,\n            offset: context.offset,\n            timestamp: context.timestamp,\n            limit: context.limit,\n          })\n            .then(({ messages, partitions }) =>\n              send({\n                type: \"fetchSuccess\",\n                messages,\n                partitions,\n                offsetMin: context.offset || 0,\n                offsetMax: messages.reduce(\n                  (max, m) => Math.max(max, m.offset || 0),\n                  0\n                ),\n              })\n            )\n            .catch(() => send({ type: \"fetchFail\" }));\n        };\n      },\n    },\n  });\n\n  return (\n    <KafkaMessageBrowserConnected\n      isFirstLoad={state.matches(\"initialLoading\")}\n      isNoData={state.matches(\"noData\") || state.matches(\"error\")}\n      isRefreshing={state.matches(\"refreshing\")}\n      requiresSearch={state.hasTag(\"dirty\")}\n      selectedMessage={state.context.selectedMessage}\n      response={state.context.response}\n      lastUpdated={state.context.response?.lastUpdated}\n      partition={state.context.partition}\n      limit={state.context.limit}\n      filterOffset={state.context.offset}\n      filterEpoch={state.context.epoch}\n      filterTimestamp={state.context.timestamp}\n      setPartition={(value: number | undefined) =>\n        send({ type: \"setPartition\", value })\n      }\n      setOffset={(value: number | undefined) =>\n        send({ type: \"setOffset\", value })\n      }\n      setTimestamp={(value: DateIsoString | undefined) =>\n        send({ type: \"setTimestamp\", value })\n      }\n      setEpoch={(value: number | undefined) =>\n        send({ type: \"setEpoch\", value })\n      }\n      setLatest={() => send({ type: \"setLatest\" })}\n      setLimit={(value: number) => send({ type: \"setLimit\", value })}\n      refresh={() => send({ type: \"refresh\" })}\n      selectMessage={(message: Message) =>\n        send({ type: \"selectMessage\", message })\n      }\n      deselectMessage={() => send({ type: \"deselectMessage\" })}\n    />\n  );\n};\n\nexport type KafkaMessageBrowserConnectedProps = {\n  isFirstLoad: boolean;\n  isNoData: boolean;\n  isRefreshing: boolean;\n  requiresSearch: boolean;\n  selectedMessage: Message | undefined;\n  lastUpdated: Date | undefined;\n  response: MessageApiResponse | undefined;\n  partition: number | undefined;\n  limit: number;\n  filterOffset: number | undefined;\n  filterEpoch: number | undefined;\n  filterTimestamp: DateIsoString | undefined;\n  setPartition: (value: number | undefined) => void;\n  setOffset: (value: number | undefined) => void;\n  setTimestamp: (value: DateIsoString | undefined) => void;\n  setEpoch: (value: number | undefined) => void;\n  setLatest: () => void;\n  setLimit: (value: number) => void;\n  refresh: () => void;\n  selectMessage: (message: Message) => void;\n  deselectMessage: () => void;\n};\nexport const KafkaMessageBrowserConnected: VoidFunctionComponent<\n  KafkaMessageBrowserConnectedProps\n> = ({\n  isFirstLoad,\n  isNoData,\n  isRefreshing,\n  requiresSearch,\n  selectedMessage,\n  response,\n  partition,\n  limit,\n  filterOffset,\n  filterEpoch,\n  filterTimestamp,\n  setPartition,\n  setOffset,\n  setTimestamp,\n  setEpoch,\n  setLatest,\n  setLimit,\n  refresh,\n  selectMessage,\n  deselectMessage,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [defaultTab, setDefaultTab] =\n    useState<MessageDetailsProps[\"defaultTab\"]>(\"value\");\n\n  const columnLabels: { [key in typeof columns[number]]: string } = useMemo(\n    () =>\n      ({\n        partition: t(\"field.partition\"),\n        offset: t(\"field.offset\"),\n        timestamp: t(\"field.timestamp\"),\n        key: t(\"field.key\"),\n        value: t(\"field.value\"),\n        headers: t(\"field.headers\"),\n      } as const),\n    [t]\n  );\n\n  switch (true) {\n    case isFirstLoad:\n      return <Loading />;\n    case isNoData:\n      return <NoDataEmptyState onRefresh={refresh} />;\n    default:\n      return (\n        <PageSection\n          isFilled={true}\n          hasOverflowScroll={true}\n          aria-label={\"TODO\"}\n        >\n          <Drawer isInline={true} isExpanded={selectedMessage !== undefined}>\n            <DrawerContent\n              panelContent={\n                <MessageDetails\n                  message={selectedMessage}\n                  defaultTab={defaultTab}\n                  onClose={deselectMessage}\n                />\n              }\n            >\n              <OuterScrollContainer>\n                <Toolbar\n                  className={\"mas-KafkaMessageBrowser-Toolbar\"}\n                  data-testid={\"message-browser-toolbar\"}\n                >\n                  <ToolbarContent>\n                    <ToolbarToggleGroup\n                      toggleIcon={<FilterIcon />}\n                      breakpoint=\"2xl\"\n                    >\n                      <ToolbarGroup variant=\"filter-group\">\n                        <ToolbarItem>\n                          <PartitionSelector\n                            value={partition}\n                            partitions={response?.partitions || 0}\n                            onChange={setPartition}\n                            isDisabled={isRefreshing}\n                          />\n                        </ToolbarItem>\n                      </ToolbarGroup>\n                      <ToolbarGroup variant=\"filter-group\">\n                        <FilterGroup\n                          isDisabled={isRefreshing}\n                          offset={filterOffset}\n                          epoch={filterEpoch}\n                          timestamp={filterTimestamp}\n                          onOffsetChange={setOffset}\n                          onTimestampChange={setTimestamp}\n                          onEpochChange={setEpoch}\n                          onLatest={setLatest}\n                        />\n                      </ToolbarGroup>\n                      <ToolbarGroup>\n                        <LimitSelector\n                          value={limit}\n                          onChange={setLimit}\n                          isDisabled={isRefreshing}\n                        />\n                      </ToolbarGroup>\n                    </ToolbarToggleGroup>\n                    <ToolbarGroup>\n                      <ToolbarItem>\n                        <Button\n                          variant={\"plain\"}\n                          isDisabled={!requiresSearch || isRefreshing}\n                          aria-label={t(\"common:search_button_label\")}\n                          onClick={refresh}\n                        >\n                          <SearchIcon />\n                        </Button>\n                      </ToolbarItem>\n                      <ToolbarItem>\n                        <RefreshButton\n                          onClick={refresh}\n                          isRefreshing={isRefreshing}\n                          isDisabled={requiresSearch}\n                        />\n                      </ToolbarItem>\n                    </ToolbarGroup>\n                    <ToolbarGroup alignment={{ default: \"alignRight\" }}>\n                      {response?.filter.partition !== undefined &&\n                        response?.messages.length > 0 && (\n                          <OffsetRange\n                            min={response?.offsetMin || 0}\n                            max={response?.offsetMax || 0}\n                          />\n                        )}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n                <InnerScrollContainer>\n                  <ResponsiveTable\n                    ariaLabel={t(\"table_aria_label\")}\n                    columns={columns}\n                    data={response?.messages}\n                    expectedLength={response?.messages?.length}\n                    renderHeader={({ column, Th, key }) => (\n                      <Th key={key}>{columnLabels[column]}</Th>\n                    )}\n                    renderCell={({ column, row, colIndex, Td, key }) => (\n                      <Td\n                        key={key}\n                        dataLabel={columnLabels[column]}\n                        width={columnWidths[colIndex]}\n                      >\n                        {(() => {\n                          const empty = (\n                            <NoDataCell columnLabel={columnLabels[column]} />\n                          );\n                          switch (column) {\n                            case \"partition\":\n                              return row.partition;\n                            case \"offset\":\n                              return row.offset;\n                            case \"timestamp\":\n                              return row.timestamp ? (\n                                <FormatDate\n                                  date={parseISO(row.timestamp)}\n                                  format={\"longWithMilliseconds\"}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"key\":\n                              return row.key ? (\n                                <UnknownValuePreview\n                                  value={row.key}\n                                  truncateAt={40}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"headers\":\n                              return Object.keys(row.headers).length > 0 ? (\n                                <UnknownValuePreview\n                                  value={beautifyUnknownValue(\n                                    JSON.stringify(row.headers)\n                                  )}\n                                  onClick={() => {\n                                    setDefaultTab(\"headers\");\n                                    selectMessage(row);\n                                  }}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"value\":\n                              return row.value ? (\n                                <UnknownValuePreview\n                                  value={beautifyUnknownValue(row.value || \"\")}\n                                  onClick={() => {\n                                    setDefaultTab(\"value\");\n                                    selectMessage(row);\n                                  }}\n                                />\n                              ) : (\n                                empty\n                              );\n                          }\n                        })()}\n                      </Td>\n                    )}\n                    isRowSelected={({ row }) =>\n                      selectedMessage !== undefined &&\n                      isSameMessage(row, selectedMessage)\n                    }\n                    onRowClick={({ row }) => {\n                      setDefaultTab(\"value\");\n                      selectMessage(row);\n                    }}\n                  >\n                    <NoResultsEmptyState\n                      onReset={() => {\n                        setLatest();\n                        setPartition(undefined);\n                        refresh();\n                      }}\n                    />\n                  </ResponsiveTable>\n                </InnerScrollContainer>\n              </OuterScrollContainer>\n            </DrawerContent>\n          </Drawer>\n        </PageSection>\n      );\n  }\n};\n","import {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface CapacityTable {\n  name: string;\n  firstStreamingUnit: string;\n  secondStreamingUnit: string;\n}\n\nexport const KafkaInstanceCapacityTable: FunctionComponent = () => {\n  const { t } = useTranslation(\"kafkaoverview-v2\");\n\n  const capacityTable: CapacityTable[] = [\n    {\n      name: \"Ingress (MB/second)\",\n      firstStreamingUnit: \"up to 50\",\n      secondStreamingUnit: \"up to 100\",\n    },\n    {\n      name: \"Egress (MB/second)\",\n      firstStreamingUnit: \"up to 100\",\n      secondStreamingUnit: \"up to 200\",\n    },\n    {\n      name: \"Storage* (GB)\",\n      firstStreamingUnit: \"up to 1000\",\n      secondStreamingUnit: \"up to 2000\",\n    },\n    {\n      name: \"Topic partitions\",\n      firstStreamingUnit: \"up to 1500\",\n      secondStreamingUnit: \"up to 3000\",\n    },\n    {\n      name: \"Client connections\",\n      firstStreamingUnit: \"up to 3000\",\n      secondStreamingUnit: \"up to 6000\",\n    },\n    {\n      name: \"Connection rate (connections/second)\",\n      firstStreamingUnit: \"up to 100\",\n      secondStreamingUnit: \"up to 200\",\n    },\n    {\n      name: \"Message size (MB)\",\n      firstStreamingUnit: \"up to 1\",\n      secondStreamingUnit: \"up to 1\",\n    },\n  ];\n\n  const columnNames = {\n    name: \"\",\n    firstStreamingUnit: t(\"firstStreamingUnit\"),\n    secondStreamingUnit: t(\"secondStreamingUnit\"),\n  };\n\n  return (\n    <TableComposable>\n      <Thead>\n        <Tr>\n          <Th>{columnNames.name}</Th>\n          <Th>{columnNames.firstStreamingUnit}</Th>\n          <Th>{columnNames.secondStreamingUnit}</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {capacityTable.map((table) => {\n          return (\n            <Tr key={table.name}>\n              <Td dataLabel={columnNames.name}>{table.name}</Td>\n              <Td dataLabel={columnNames.firstStreamingUnit}>\n                {table.firstStreamingUnit}\n              </Td>\n              <Td dataLabel={columnNames.secondStreamingUnit}>\n                {table.secondStreamingUnit}\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </TableComposable>\n  );\n};\n","import {\n  Bullseye,\n  Card,\n  PageSection,\n  PageSectionVariants,\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport classNames from \"classnames\";\nimport type {\n  CSSProperties,\n  FunctionComponent,\n  ReactNode,\n  VoidFunctionComponent,\n} from \"react\";\nimport \"./MarketingPage.css\";\n\nexport type MarketingPageHeroProps = {\n  title: string;\n  tagLine: string;\n  description: string;\n  description2?: string;\n  heroImage: string;\n  heroImageSize: number;\n  heroImageCanRepeat?: boolean;\n  heroImagePositionY?: number;\n  cta?: ReactNode;\n  variant?: \"light\" | \"dark\";\n};\n\nexport const MarketingPageHero: VoidFunctionComponent<\n  MarketingPageHeroProps\n> = ({\n  title,\n  tagLine,\n  description,\n  description2,\n  heroImage,\n  heroImageSize,\n  heroImageCanRepeat = true,\n  heroImagePositionY = 0,\n  cta,\n  variant = \"light\",\n}) => {\n  const style = {\n    \"--appsrv-marketing--banner--before--BackgroundImage\": `url(${heroImage})`,\n    \"--appsrv-marketing--banner--before--BackgroundSize\": `${heroImageSize}px`,\n    \"--appsrv-marketing--banner--before--BackgroundRepeat\": heroImageCanRepeat\n      ? \"repeat\"\n      : \"no-repeat\",\n    \"--appsrv-marketing--banner--before--BackgroundPositionY\": `${heroImagePositionY}px`,\n  } as CSSProperties;\n  return (\n    <PageSection\n      className={classNames(\"appsrv-marketing--banner\", {\n        \"pf-u-background-color-dark-100\": variant === \"dark\",\n        \"pf-u-background-color-100\": variant === \"light\",\n      })}\n      variant={\n        variant === \"dark\"\n          ? PageSectionVariants.dark\n          : PageSectionVariants.light\n      }\n      style={style}\n    >\n      <Stack hasGutter>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          {title}\n        </Title>\n        <Text\n          className={`appsrv-marketing--banner__tagline ${\n            variant === \"dark\" ? \"\" : \"pf-u-color-200\"\n          }`}\n        >\n          {tagLine}\n        </Text>\n        <Text component={TextVariants.p}>{description}</Text>\n        {description2 && (\n          <Text component={TextVariants.p} className=\"pf-u-mt-md\">\n            {description2}\n          </Text>\n        )}\n        {cta && <StackItem>{cta}</StackItem>}\n      </Stack>\n    </PageSection>\n  );\n};\n\nexport const MarketingPageBanner: FunctionComponent = ({ children }) => {\n  return (\n    <PageSection\n      variant={PageSectionVariants.light}\n      className=\"appsrv-marketing--page-section--marketing pf-u-background-color-100\"\n    >\n      <Bullseye>\n        <Text\n          component={TextVariants.p}\n          className=\"appsrv-marketing--banner--text-only\"\n        >\n          {children}\n        </Text>\n      </Bullseye>\n    </PageSection>\n  );\n};\n\nexport type MarketingPageSectionProps = {\n  className?: string;\n};\n\nexport const MarketingPageSection: FunctionComponent<\n  MarketingPageSectionProps & {\n    variant?: \"dark\" | \"light\" | \"default\";\n  }\n> = ({\n  className = \"appsrv-marketing--page-section--marketing\",\n  variant = \"default\",\n  children,\n}) => (\n  <PageSection\n    isWidthLimited\n    className={classNames(className, {\n      \"pf-u-background-color-dark-100\": variant === \"dark\",\n      \"pf-u-background-color-100\": variant === \"light\",\n    })}\n    variant={\n      variant === \"dark\"\n        ? PageSectionVariants.dark\n        : variant === \"light\"\n        ? PageSectionVariants.light\n        : PageSectionVariants.default\n    }\n  >\n    {children}\n  </PageSection>\n);\n\nexport const MarketingPageVideoCard: VoidFunctionComponent<{\n  src: string;\n  title: string;\n}> = ({ src, title }) => (\n  <Card className=\"appsrv-marketing--video\">\n    <div className=\"appsrv-marketing--video__wrapper\">\n      <iframe\n        src={src}\n        title={title}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  </Card>\n);\n","import {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Divider,\n  Flex,\n  FlexItem,\n  Grid,\n  Split,\n  SplitItem,\n  Stack,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport {\n  AppSpeedKeyArt,\n  ExternalLink,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { KafkaInstanceCapacityTable } from \"./KafkaInstanceCapacityTable\";\nimport { LogoAWS, LogoAzure, LogoGCP } from \"./Logos/images\";\nimport { MarketingPageHero, MarketingPageSection } from \"./MarketingPage\";\n\nexport const KafkaPageV3: FunctionComponent = () => {\n  const { t } = useTranslation([\"kafkaoverview-v3\"]);\n  return (\n    <>\n      <MarketingPageHero\n        title={t(\"heroTitle\")}\n        tagLine={t(\"heroTagline\")}\n        description={t(\"heroDescription\")}\n        heroImage={AppSpeedKeyArt}\n        heroImageSize={478}\n        heroImageCanRepeat={false}\n        heroImagePositionY={-99}\n      />\n      <MarketingPageSection>\n        <Grid hasGutter lg={6}>\n          <Card\n            ouiaId=\"card-overview-purchase-now\"\n            aria-label={t(\"kafkaoverview:purchaseCardTitle\")}\n          >\n            <CardHeader>\n              <CardHeaderMain>\n                <CardTitle>\n                  <Title headingLevel=\"h2\">\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardTitle\"}\n                    >\n                      <span className=\"pf-u-color-200 pf-u-font-size-sm\"></span>\n                    </Trans>\n                  </Title>\n                </CardTitle>\n              </CardHeaderMain>\n            </CardHeader>\n            <CardBody>{t(\"purchaseCardMainText\")}</CardBody>\n            <CardFooter>\n              <Flex spaceItems={{ default: \"spaceItems2xl\" }}>\n                <FlexItem>\n                  <ExternalLink\n                    href={\n                      \"https://marketplace.redhat.com/en-us/products/red-hat-openshift-streams-for-apache-kafka\"\n                    }\n                    testId={\"cardPurchase-buttonRH\"}\n                    className={\"pf-u-ml-md \"}\n                  >\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardCallToActionButtonRedHat\"}\n                      components={{\n                        bold: <strong />,\n                        size: <span className=\"pf-u-font-size-lg\" />,\n                      }}\n                    />\n                  </ExternalLink>\n                </FlexItem>\n\n                <FlexItem>\n                  <ExternalLink\n                    href={\n                      \"https://aws.amazon.com/marketplace/pp/prodview-3xohcoyuwkumc\"\n                    }\n                    testId={\"cardPurchase-buttonAWS\"}\n                    className={\"pf-u-ml-md\"}\n                  >\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardCallToActionButtonAWS\"}\n                      components={{\n                        bold: <strong />,\n                        size: <span className=\"pf-u-font-size-lg\" />,\n                      }}\n                    />\n                  </ExternalLink>\n                </FlexItem>\n              </Flex>\n            </CardFooter>\n          </Card>\n          <Card\n            ouiaId=\"card-overview-contact-sales\"\n            aria-label={t(\"kafkaoverview:contactSalesCardTitle\")}\n          >\n            <CardHeader>\n              <CardTitle>\n                <Title headingLevel=\"h2\">\n                  <Trans\n                    ns={\"kafkaoverview-v3\"}\n                    i18nKey={\"contactSalesCardTitle\"}\n                  >\n                    <span className=\"pf-u-color-200 pf-u-font-size-sm\"></span>\n                  </Trans>\n                </Title>\n              </CardTitle>\n            </CardHeader>\n            <CardBody>{t(\"contactSalesCardMainText\")}</CardBody>\n            <CardFooter>\n              <ExternalLink\n                href={\n                  \"https://www.redhat.com/en/technologies/cloud-computing/openshift/openshift-streams-for-apache-kafka#contact-us\"\n                }\n                testId={\"cardContactSales-buttonCTA\"}\n                className={\"pf-u-ml-md\"}\n              >\n                <Trans\n                  ns={\"kafkaoverview-v3\"}\n                  i18nKey={\"contactSalesCardCallToActionButton\"}\n                  components={{\n                    bold: <strong />,\n                    size: <span className=\"pf-u-font-size-lg\" />,\n                  }}\n                />\n              </ExternalLink>\n            </CardFooter>\n          </Card>\n        </Grid>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"pricingModalTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Flex spaceItems={{ default: \"spaceItemsXl\" }}>\n              <Flex\n                alignSelf={{ default: \"alignSelfCenter\" }}\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <DescriptionList isHorizontal>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"steamingUnit\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"streamingUnit_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"dataTransfer\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"dataTransfer_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>{t(\"storage\")}</DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"storage_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                  </DescriptionList>\n                </FlexItem>\n              </Flex>\n              <Divider isVertical />\n              <FlexItem flex={{ default: \"flex_1\" }}>\n                <TextContent>\n                  <Text component={TextVariants.p}>\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"streamingUnitText\"}\n                      components={{ bold: <strong /> }}\n                    />\n                  </Text>\n                </TextContent>\n              </FlexItem>\n            </Flex>\n          </CardBody>\n        </Card>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"kafkaInstanceCapacityTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Stack hasGutter>\n              <Text component={TextVariants.p}>\n                {t(\"kafkaInstanceCapacityDescription\")}\n              </Text>\n              <KafkaInstanceCapacityTable />\n            </Stack>\n          </CardBody>\n          <CardFooter>\n            <TextContent className={\"pf-u-font-size-sm\"}>\n              <Trans\n                ns={\"kafkaoverview-v3\"}\n                i18nKey={\"kafkaInstanceCapacityfooter\"}\n                components={[\n                  <ExternalLink\n                    href={\"https://access.redhat.com/support\"}\n                    testId={\"SupportLink\"}\n                    className={\"pf-u-ml-xs\"}\n                  />,\n                  <ExternalLink\n                    href={\n                      \"https://access.redhat.com/documentation/en-us/red_hat_openshift_streams_for_apache_kafka/1/guide/aced8e5e-8229-4cb2-82f9-87a8caa24bb3\"\n                    }\n                    testId={\"MonitoringDiskSpaceLink\"}\n                    className={\"pf-u-ml-xs\"}\n                  />,\n                ]}\n              />\n            </TextContent>\n          </CardFooter>\n        </Card>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"cloudProvidersTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Flex\n              spaceItems={{ default: \"spaceItemsXl\" }}\n              direction={{ default: \"column\", xl: \"row\" }}\n            >\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img src={LogoAWS} alt={\"\"} style={{ height: \"60px\" }} />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"awsWebServiceTitle\")}\n                      </Title>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n              <Divider\n                orientation={{ default: \"horizontal\", xl: \"vertical\" }}\n              />\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img src={LogoGCP} alt={\"\"} style={{ height: \"60px\" }} />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"googleCloudProviderTitle\")}\n                      </Title>\n                      <Text\n                        component={TextVariants.p}\n                        className={\"pf-u-color-200\"}\n                      >\n                        {t(\"googleCloudProviderDescription\")}\n                      </Text>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n              <Divider\n                orientation={{ default: \"horizontal\", xl: \"vertical\" }}\n              />\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img\n                        src={LogoAzure}\n                        alt={\"\"}\n                        style={{ height: \"60px\" }}\n                      />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"microsoftAzureTitle\")}\n                      </Title>\n                      <Text\n                        component={TextVariants.p}\n                        className={\"pf-u-color-200\"}\n                      >\n                        {t(\"microsoftAzureDescription\")}\n                      </Text>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n            </Flex>\n          </CardBody>\n        </Card>\n      </MarketingPageSection>\n    </>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type EmptyStateNoTopicProps = {\n  onCreateTopic: () => void;\n};\n\nexport const EmptyStateNoTopic: VoidFunctionComponent<\n  EmptyStateNoTopicProps\n> = ({ onCreateTopic }) => {\n  const { t } = useTranslation(\"topic\");\n\n  return (\n    <EmptyState\n      data-ouia-page-id=\"emptyStateTopics\"\n      variant={EmptyStateVariant.large}\n    >\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_topics_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"empty_topics_body\")}</EmptyStateBody>\n      <Button\n        data-testid=\"actionCreateTopic\"\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={onCreateTopic}\n      >\n        {t(\"create_topic\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import type { ResourceOperationValue } from \"./components/ResourceOperation\";\nimport type { ResourcePermissionValue } from \"./components/ResourcePermission\";\nimport type { ResourcePrefixRuleValue } from \"./components/ResourcePrefixRule\";\nimport type { ResourceTypeValue } from \"./components/ResourceType\";\n\nexport type AclOperation =\n  | \"ALL\"\n  | \"READ\"\n  | \"WRITE\"\n  | \"CREATE\"\n  | \"DELETE\"\n  | \"ALTER\"\n  | \"DESCRIBE\"\n  | \"DESCRIBE_CONFIGS\"\n  | \"ALTER_CONFIGS\";\n\nexport type AclResourceType =\n  | \"GROUP\"\n  | \"TOPIC\"\n  | \"CLUSTER\"\n  | \"TRANSACTIONAL_ID\";\n\nexport type AclPatternType = \"LITERAL\" | \"PREFIXED\";\n\nexport type AclPermissionType = \"ALLOW\" | \"DENY\";\n\nexport interface AclBinding {\n  /**\n   *\n   * @type {AclResourceType}\n   * @memberof AclBinding\n   */\n  resourceType: AclResourceType;\n  /**\n   *\n   * @type {string}\n   * @memberof AclBinding\n   */\n  resourceName: string;\n  /**\n   *\n   * @type {AclPatternType}\n   * @memberof AclBinding\n   */\n  patternType: AclPatternType;\n  /**\n   * Identifies the user or service account to which an ACL entry is bound. The literal prefix value of `User:` is required. May be used to specify all users with value `User:*`.\n   * @type {string}\n   * @memberof AclBinding\n   */\n  principal: string;\n  /**\n   *\n   * @type {AclOperation}\n   * @memberof AclBinding\n   */\n  operation: AclOperation;\n  /**\n   *\n   * @type {AclPermissionType}\n   * @memberof AclBinding\n   */\n  permission: AclPermissionType;\n}\nexport type AclTablePermissionsType = {\n  permission: AclPermissionType;\n  operation: AclOperation;\n};\nexport type AclTableResourceType = {\n  resourceType: AclResourceType;\n  resourceName: string;\n  patternType: AclPatternType;\n};\nexport type Permissions = {\n  account: string;\n  permission: AclTablePermissionsType;\n  resource: AclTableResourceType;\n};\nexport enum PrincipalType {\n  UserAccount = \"USER_ACCOUNT\",\n  ServiceAccount = \"SERVICE_ACCOUNT\",\n}\n\nexport type Account = {\n  id: string;\n  principalType: PrincipalType;\n  displayName: string;\n  email?: string;\n};\n\ntype ManualAcl = {\n  resourceType: ResourceTypeValue | undefined;\n  resourcePrefix: ResourcePrefixRuleValue;\n  resourceName: string | undefined;\n  resourcePermission: ResourcePermissionValue;\n  resourceOperation: ResourceOperationValue | undefined;\n};\n\ntype ProduceTopicTemplate = {\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n};\n\ntype ConsumeTopicTemplate = {\n  consumerResourceName: string | undefined;\n  consumerResourcePrefixRule: ResourcePrefixRuleValue;\n  topicResourceName: string | undefined;\n  topicResourcePrefixRule: ResourcePrefixRuleValue;\n};\n\ntype ManageAccessTemplate = {\n  instanceName: string;\n};\nexport type AddAclType =\n  | ({ type: \"manual\" } & ManualAcl)\n  | ({ type: \"consume-topic\" } & ConsumeTopicTemplate)\n  | ({ type: \"produce-topic\" } & ProduceTopicTemplate)\n  | ({ type: \"manage-access\" } & ManageAccessTemplate);\n\nexport const createEmptyManualAcl = (): AddAclType => {\n  return {\n    type: \"manual\",\n    resourceName: undefined,\n    resourceType: undefined,\n    resourceOperation: undefined,\n    resourcePrefix: \"Is\",\n    resourcePermission: \"allow\",\n  };\n};\nexport const createEmptyProduceTopicAcl = (): AddAclType => {\n  return {\n    type: \"produce-topic\",\n    prefixRuleValue: \"Is\",\n    resourceNameValue: undefined,\n  };\n};\nexport const createEmptyConsumeTopicAcl = (): AddAclType => {\n  return {\n    type: \"consume-topic\",\n    consumerResourceName: undefined,\n    consumerResourcePrefixRule: \"Is\",\n    topicResourceName: undefined,\n    topicResourcePrefixRule: \"Is\",\n  };\n};\nexport const createEmptyManageAccessAcl = (kafkaName: string): AddAclType => {\n  return {\n    type: \"manage-access\",\n    instanceName: kafkaName,\n  };\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  EmptyStateNoResults,\n  TableView,\n} from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport type { Topic, TopicField } from \"ui-models/src/models/topic\";\nimport { useTopicLabels } from \"../../hooks\";\nimport type { EmptyStateNoTopicProps } from \"./components\";\nimport { EmptyStateNoTopic } from \"./components\";\nimport { formattedRetentionSize, formattedRetentionTime } from \"./types\";\n\ntype SubUnion<T, U extends T> = U;\n\nconst Columns: SubUnion<\n  TopicField,\n  \"name\" | \"partitions\" | \"retention.ms\" | \"retention.bytes\"\n>[] = [\"name\", \"partitions\", \"retention.ms\", \"retention.bytes\"];\n\nexport type KafkaTopicsProps<T extends Topic> = {\n  topics: Array<T> | undefined;\n  getUrlFortopic: (row: T) => string;\n  onDelete: (row: T) => void;\n  onEdit: (row: T) => void;\n  topicName: string[];\n  onSearchTopic: (value: string) => void;\n  onRemoveTopicChip: (value: string) => void;\n  onRemoveTopicChips: () => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n> &\n  EmptyStateNoTopicProps;\n\nexport const KafkaTopics = <T extends Topic>({\n  topics,\n  onDelete,\n  onEdit,\n  isColumnSortable,\n  itemCount,\n  onSearchTopic,\n  topicName,\n  onClearAllFilters,\n  onCreateTopic,\n  page,\n  perPage,\n  onPageChange,\n  onRemoveTopicChip,\n  onRemoveTopicChips,\n  getUrlFortopic,\n}: KafkaTopicsProps<T>) => {\n  const { t } = useTranslation(\"topic\");\n\n  const labels = useTopicLabels();\n\n  const isFiltered = topicName.length > 0;\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"topic_list_table\")}\n        data={topics}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"name\":\n                    return (\n                      <Link\n                        to={getUrlFortopic(row)}\n                        data-testid=\"tableTopics-linkTopic\"\n                        data-ouia-component-id=\"table-link\"\n                      >\n                        {row.name}\n                      </Link>\n                    );\n                  case \"partitions\":\n                    return row.partitions.length;\n                  case \"retention.ms\":\n                    return formattedRetentionTime(row[\"retention.ms\"].value);\n                  case \"retention.bytes\":\n                    return formattedRetentionSize(row[\"retention.bytes\"].value);\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row, ActionsColumn }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"table.actions.edit\"),\n                onClick: () => onEdit(row),\n              },\n              {\n                title: t(\"table.actions.delete\"),\n                onClick: () => onDelete(row),\n              },\n            ]}\n          />\n        )}\n        isColumnSortable={isColumnSortable}\n        filters={{\n          [labels.fields.name]: {\n            type: \"search\",\n            chips: topicName,\n            onSearch: onSearchTopic,\n            onRemoveChip: onRemoveTopicChip,\n            onRemoveGroup: onRemoveTopicChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"input_field_invalid_message\"),\n          },\n        }}\n        actions={[\n          {\n            label: t(\"create_topic\"),\n            onClick: onCreateTopic,\n            isPrimary: true,\n          },\n        ]}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        isFiltered={isFiltered}\n        onClearAllFilters={onClearAllFilters}\n        emptyStateNoData={<EmptyStateNoTopic onCreateTopic={onCreateTopic} />}\n        emptyStateNoResults={<EmptyStateNoResults />}\n      />\n    </PageSection>\n  );\n};\n","import type { CardKafkaInstanceMetricsLimits } from \"./components\";\n\nexport type TimeSeriesMetrics = { [timestamp: string]: number };\nexport type PartitionBytesMetric = { [partition: string]: TimeSeriesMetrics };\n\nexport enum DurationOptions {\n  Last5minutes = 5,\n  Last15minutes = 15,\n  Last30minutes = 30,\n  Last1hour = 60,\n  Last3hours = 3 * 60,\n  Last6hours = 6 * 60,\n  Last12hours = 12 * 60,\n  Last24hours = 24 * 60,\n  Last2days = 2 * 24 * 60,\n  Last7days = 7 * 24 * 60,\n}\n\nexport type GetTopicsMetricsResponse = {\n  kafkaTopics: string[];\n  metricsTopics: string[];\n  bytesOutgoing: TimeSeriesMetrics;\n  bytesIncoming: TimeSeriesMetrics;\n  bytesPerPartition: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n};\n\nexport type GetKafkaInstanceMetricsResponse = {\n  usedDiskSpaceMetrics: TimeSeriesMetrics;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n} & CardKafkaInstanceMetricsLimits;\n\nexport type GetMetricsKpiResponse = {\n  topics: number;\n  topicPartitions: number;\n  consumerGroups: number;\n  topicPartitionsLimit: number;\n};\n","import type { MenuProps } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  Dropdown,\n  DropdownToggle,\n  DropdownToggleAction,\n  Menu,\n  MenuContent,\n  MenuGroup,\n  MenuItem,\n  MenuList,\n  Popper,\n} from \"@patternfly/react-core\";\nimport type {\n  MouseEvent as ReactMouseEvent,\n  VoidFunctionComponent,\n} from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type PermissionsDropdownProps = {\n  onAddPermission: () => void;\n  onShortcutConsumeTopic: () => void;\n  onShortcutProduceTopic: () => void;\n  onShortcutManageAccess: () => void;\n};\n\nexport const PermissionsDropdown: VoidFunctionComponent<\n  PermissionsDropdownProps\n> = ({\n  onAddPermission,\n  onShortcutConsumeTopic,\n  onShortcutProduceTopic,\n  onShortcutManageAccess,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  const [isOpen, setIsOpen] = useState(false);\n  useState<string | number | undefined>(0);\n\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const handleMenuKeys = useCallback(\n    (event: KeyboardEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        event.target &&\n        menuRef.current.contains(event.target as Node)\n      ) {\n        if (event.key === \"Escape\" || event.key === \"Tab\") {\n          setIsOpen(!isOpen);\n        }\n      }\n    },\n    [isOpen]\n  );\n\n  const handleClickOutside = useCallback(\n    (event: MouseEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        !menuRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleMenuKeys);\n    window.addEventListener(\"click\", handleClickOutside);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleMenuKeys);\n      window.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, [handleClickOutside, handleMenuKeys, isOpen, menuRef]);\n\n  const onToggleClick = useCallback((open: boolean, ev: ReactMouseEvent) => {\n    ev.stopPropagation(); // Stop handleClickOutside from handling\n    setTimeout(() => {\n      if (menuRef.current) {\n        const firstElement = menuRef.current.querySelector(\n          \"li > button,input:not(:disabled)\"\n        );\n        firstElement && (firstElement as HTMLElement).focus();\n      }\n    }, 0);\n    setIsOpen(open);\n  }, []);\n\n  const handleSelect: MenuProps[\"onSelect\"] = (_event, itemId) => {\n    setIsOpen(false);\n    switch (itemId) {\n      case \"add_permission\":\n        onAddPermission();\n        break;\n      case \"shortcut_consume_topic\":\n        onShortcutConsumeTopic();\n        break;\n      case \"shortcut_produce_topic\":\n        onShortcutProduceTopic();\n        break;\n      case \"shortcut_manage_access\":\n        onShortcutManageAccess();\n        break;\n    }\n  };\n\n  const onActionClick = (\n    event: ReactMouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    onAddPermission();\n  };\n\n  const menu = (\n    <Menu onSelect={handleSelect} key=\"acls-menu\" ref={menuRef}>\n      <MenuContent>\n        <MenuList>\n          <MenuGroup>\n            <MenuList>\n              <MenuItem itemId={\"add_permission\"}>\n                {t(\"permissions_dropdown.add_permission\")}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n\n          <Divider />\n          <MenuGroup label={t(\"permissions_dropdown.task_based_permission\")}>\n            <MenuList>\n              <MenuItem\n                itemId={\"shortcut_consume_topic\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_consume_topic_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_consume_topic\")}\n              </MenuItem>\n              <MenuItem\n                itemId={\"shortcut_produce_topic\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_produce_topic_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_produce_topic\")}\n              </MenuItem>\n              <MenuItem\n                itemId={\"shortcut_manage_access\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_manage_access_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_manage_access\")}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n        </MenuList>\n      </MenuContent>\n    </Menu>\n  );\n\n  const toggle = (\n    <Dropdown\n      toggle={\n        <DropdownToggle\n          data-testid={\"permissions-dropdown-toggle\"}\n          splitButtonItems={[\n            <DropdownToggleAction\n              key=\"cog-action\"\n              aria-label={t(\"permissions_dropdown.add_permission\")}\n              onClick={onActionClick}\n            >\n              {t(\"permissions_dropdown.add_permission\")}\n            </DropdownToggleAction>,\n          ]}\n          splitButtonVariant=\"action\"\n          onToggle={onToggleClick}\n        />\n      }\n    />\n  );\n\n  return (\n    <Popper\n      trigger={toggle}\n      popper={menu}\n      isVisible={isOpen}\n      popperMatchesTriggerWidth={false}\n    />\n  );\n};\n","import type { VFC } from \"react\";\nimport type { LabelProps } from \"@patternfly/react-core\";\nimport { Label } from \"@patternfly/react-core\";\nimport type { AclResourceType } from \"../types\";\nimport \"./ResourceTypeLabel.css\";\n\nexport type SolidLabelProps = {\n  variant: AclResourceType;\n};\n\ntype Variant = {\n  labelColor: LabelProps[\"color\"];\n  content: string;\n};\n\nexport const ResourceTypeLabel: VFC<SolidLabelProps> = ({ variant }) => {\n  const getVariant = (): Variant => {\n    switch (variant) {\n      case \"GROUP\":\n        return { labelColor: \"green\", content: \"G\" };\n      case \"CLUSTER\":\n        return { labelColor: \"grey\", content: \"KI\" };\n      case \"TOPIC\":\n        return { labelColor: \"blue\", content: \"T\" };\n      case \"TRANSACTIONAL_ID\":\n        return { labelColor: \"orange\", content: \"TI\" };\n    }\n  };\n\n  const { labelColor, content } = getVariant() || {};\n\n  return (\n    <Label isCompact color={labelColor} className={`mas-m-solid`}>\n      {content}\n    </Label>\n  );\n};\n","import type { FunctionComponent, VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Label, LabelGroup, Tooltip } from \"@patternfly/react-core\";\n\nimport type {\n  Account,\n  AclOperation,\n  AclPatternType,\n  AclPermissionType,\n  AclResourceType,\n} from \"../types\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { InfoCircleIcon } from \"@patternfly/react-icons\";\nimport { PrincipalType } from \"..\";\n\nexport const DisplayResourceName: VFC<{ resourceType: AclResourceType }> = ({\n  resourceType,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  switch (resourceType) {\n    case \"GROUP\":\n      return t(\"resourceTypes.consumer_group\");\n    case \"TOPIC\":\n      return t(\"resourceTypes.topic\");\n    case \"CLUSTER\":\n      return t(\"resourceTypes.kafka_instance\");\n    case \"TRANSACTIONAL_ID\":\n      return t(\"resourceTypes.transactional_id\");\n  }\n};\n\nconst PatternType: VFC<{ patternType: AclPatternType }> = ({ patternType }) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  if (patternType === \"PREFIXED\") {\n    return t(\"pattern_type_prefixed\");\n  } else {\n    return t(\"pattern_type_literal\");\n  }\n};\n\nexport type ResourceCellProps = {\n  resourceType: AclResourceType;\n  patternType: AclPatternType;\n  resourceName: string;\n};\n\nexport const ResourceCell: FunctionComponent<ResourceCellProps> = ({\n  resourceType,\n  patternType,\n  resourceName,\n}) => {\n  if (resourceType === \"CLUSTER\") {\n    return (\n      <>\n        <ResourceTypeLabel variant={resourceType} />{\" \"}\n        <DisplayResourceName resourceType={resourceType} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ResourceTypeLabel variant={resourceType} />{\" \"}\n      <DisplayResourceName resourceType={resourceType} />{\" \"}\n      <PatternType patternType={patternType} /> \"{resourceName}\"\n    </>\n  );\n};\n\nexport type PermissionOperationCellProps = {\n  permission: AclPermissionType;\n  operation: AclOperation | AclOperation[];\n};\n\nexport const PermissionOperationCell: FunctionComponent<\n  PermissionOperationCellProps\n> = ({ permission, operation }) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const permissions: { [key in AclPermissionType]: string } = {\n    ALLOW: t(\"permissions.allow\"),\n    DENY: t(\"permissions.deny\"),\n  };\n  const operations: { [key in AclOperation]: string } = {\n    ALL: t(\"operations.all\"),\n    READ: t(\"operations.read\"),\n    WRITE: t(\"operations.write\"),\n    CREATE: t(\"operations.create\"),\n    DELETE: t(\"operations.delete\"),\n    ALTER: t(\"operations.alter\"),\n    DESCRIBE: t(\"operations.describe\"),\n    DESCRIBE_CONFIGS: t(\"operations.describe_configs\"),\n    ALTER_CONFIGS: t(\"operations.alter_configs\"),\n  };\n  return (\n    <LabelGroup numLabels={4}>\n      {permission && (\n        <Label\n          variant=\"outline\"\n          color={permission === \"DENY\" ? \"red\" : undefined}\n        >\n          {permissions[permission]}\n        </Label>\n      )}\n      {Array.isArray(operation) ? (\n        operation.map((value, key) => (\n          <Label key={key} variant=\"outline\">\n            {operations[value]}\n          </Label>\n        ))\n      ) : (\n        <Label variant=\"outline\">{operations[operation]}</Label>\n      )}\n    </LabelGroup>\n  );\n};\n\nexport type PrincipalCellProps = {\n  isDeleteEnabled: boolean;\n  isAllAccounts?: boolean;\n  onRemoveAcl?: () => void;\n  isReviewTable?: boolean;\n  principal?: string;\n  allAccounts?: Account;\n};\n\nexport const PrincipalCell: VFC<PrincipalCellProps> = ({\n  isDeleteEnabled,\n  isAllAccounts,\n  onRemoveAcl,\n  isReviewTable = true,\n  principal,\n  allAccounts,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  const principalWithTooltip = () => {\n    return allAccounts?.principalType == PrincipalType.ServiceAccount &&\n      !isReviewTable ? (\n      <Tooltip\n        content={\n          <div>\n            Type: {allAccounts && allAccounts.principalType} <br />\n          </div>\n        }\n      >\n        <span tabIndex={0}>\n          {\" \"}\n          {principal?.split(\":\")[1]} <InfoCircleIcon color=\"grey\" />\n        </span>\n      </Tooltip>\n    ) : (\n      !isReviewTable && (\n        <Tooltip\n          content={\n            <div>\n              Type: {allAccounts?.principalType} <br />\n              Name: {allAccounts?.displayName} <br />\n              Email: {allAccounts?.email}\n            </div>\n          }\n        >\n          <span tabIndex={0}>\n            {principal?.split(\":\")[1]} <InfoCircleIcon color=\"grey\" />\n          </span>\n        </Tooltip>\n      )\n    );\n  };\n\n  return (\n    <div\n      className={\n        isReviewTable\n          ? \"pf-u-display-flex pf-u-justify-content-space-between pf-u-justify-content-flex-end-on-lg pf-u-align-items-center\"\n          : \"\"\n      }\n    >\n      {isAllAccounts && isReviewTable ? (\n        <Label variant=\"outline\">{t(\"table.all_accounts\")}</Label>\n      ) : !isReviewTable && principal == \"User:*\" ? (\n        <Label variant={\"outline\"}>{t(\"table.all_accounts\")}</Label>\n      ) : (\n        principalWithTooltip()\n      )}\n\n      {isDeleteEnabled && onRemoveAcl != undefined && (\n        <RemoveButton\n          variant=\"link\"\n          tooltip={t(\"remove_permission_tooltip\")}\n          onClick={onRemoveAcl}\n          ariaLabel={t(\"operations.delete\")}\n        />\n      )}\n    </div>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type PermissionsTableEmptyStateProps = {\n  openManagePermissions: () => void;\n};\nexport const PermissionsTableEmptyState: React.FunctionComponent<\n  PermissionsTableEmptyStateProps\n> = ({ openManagePermissions }) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  return (\n    <EmptyState\n      data-ouia-page-id=\"emptyStateTopics\"\n      variant={EmptyStateVariant.large}\n    >\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"no_results_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_results_body\")}</EmptyStateBody>\n      <Button\n        data-testid=\"actionManagePermissions\"\n        ouiaId=\"button-manage-permissions\"\n        variant=\"primary\"\n        onClick={openManagePermissions}\n      >\n        {t(\"dialog_title\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport { TableView } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Account, Permissions } from \"../types\";\nimport { PrincipalCell, PermissionOperationCell, ResourceCell } from \"./Cells\";\nimport { useEffect, useState } from \"react\";\nimport { PageSection } from \"@patternfly/react-core\";\nimport { PermissionsTableEmptyState } from \"./EmptyPermissionsTable\";\n\ntype SubUnion<T, U extends T> = U;\nexport type PermissionsField = keyof Permissions;\nconst Columns: SubUnion<\n  PermissionsField,\n  \"account\" | \"permission\" | \"resource\"\n>[] = [\"account\", \"permission\", \"resource\"];\n\nexport type PermissionsTableProps<T extends Permissions> = {\n  allAccounts: Account[] | undefined;\n  permissions: Array<T> | undefined;\n  onDelete: (rowIndex: number) => void;\n  onDeleteSelected: (rowIndex: number[]) => void;\n  onManagePermissions: () => void;\n  onManagePermissionsActionItem: (account: string) => void;\n  onPerPageChange: (page: number, perPage: number) => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"onClearAllFilters\"\n>;\n\nexport const PermissionsTable = <T extends Permissions>({\n  allAccounts,\n  permissions,\n  onDelete,\n  itemCount,\n  page,\n  perPage,\n  onDeleteSelected,\n  onPageChange,\n  onManagePermissions,\n  onManagePermissionsActionItem,\n}: PermissionsTableProps<T>) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const [checkedRows, setCheckedRows] = useState<number[]>([]);\n\n  useEffect(() => {\n    //Only clear all the checked row when they are deleted\n    setCheckedRows([]);\n  }, [permissions]);\n\n  const labels: { [field in (typeof Columns)[number]]: string } = {\n    account: t(\"account_id_title\"),\n    permission: t(\"table.permissions_column_title\"),\n    resource: t(\"table.resource_column_title\"),\n  };\n  const onCheck = (isSelecting: boolean, rowIndex: number) => {\n    if (rowIndex != undefined) {\n      setCheckedRows(\n        isSelecting\n          ? [...checkedRows, rowIndex]\n          : checkedRows.filter((row) => row !== rowIndex)\n      );\n    }\n  };\n\n  const isRowChecked = (rowIndex: number) => {\n    return checkedRows.includes(rowIndex);\n  };\n\n  const onBulkDelete = () => {\n    onDeleteSelected(checkedRows);\n  };\n\n  return (\n    <PageSection hasOverflowScroll={true}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"consumerGroup.consumer_group_list\")}\n        actions={[\n          {\n            onClick: onManagePermissions,\n            label: t(\"dialog_title\"),\n            isPrimary: true,\n          },\n        ]}\n        kebabActions={[\n          {\n            onClick: onBulkDelete,\n            label: t(\"delete_selected\"),\n            isDisabled: checkedRows.length > 0 ? false : true,\n          },\n        ]}\n        data={permissions}\n        columns={Columns}\n        onCheck={onCheck}\n        isRowChecked={({ rowIndex }) => isRowChecked(rowIndex)}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels[column]}>\n              {(() => {\n                switch (column) {\n                  case \"account\":\n                    return (\n                      <PrincipalCell\n                        isReviewTable={false}\n                        principal={row.account}\n                        isDeleteEnabled={false}\n                        allAccounts={\n                          allAccounts?.filter(\n                            (value) => `User:${value.id}` == row.account\n                          )[0]\n                        }\n                      />\n                    );\n                  case \"permission\":\n                    return (\n                      <PermissionOperationCell\n                        permission={row.permission.permission}\n                        operation={row.permission.operation}\n                      />\n                    );\n                  case \"resource\":\n                    return (\n                      <ResourceCell\n                        patternType={row.resource.patternType}\n                        resourceType={row.resource.resourceType}\n                        resourceName={row.resource.resourceName}\n                      />\n                    );\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ ActionsColumn, rowIndex, row }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"manage\"),\n                onClick: () =>\n                  onManagePermissionsActionItem(\n                    row.account == \"User:*\"\n                      ? \"all-accounts\"\n                      : row.account?.split(\":\")[1]\n                  ),\n              },\n              {\n                title: t(\"common:delete\"),\n                onClick: () => onDelete(rowIndex),\n              },\n            ]}\n          />\n        )}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        emptyStateNoData={\n          <PermissionsTableEmptyState\n            openManagePermissions={onManagePermissions}\n          />\n        }\n        emptyStateNoResults={\n          <PermissionsTableEmptyState\n            openManagePermissions={onManagePermissions}\n          />\n        }\n      />\n    </PageSection>\n  );\n};\n","import type React from \"react\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Account } from \"../types\";\nimport { PrincipalType } from \"../types\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { Button, Form, Modal } from \"@patternfly/react-core\";\nimport { Skeleton } from \"@patternfly/react-core\";\nimport { FormGroup, Popover } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\n\nexport type SelectAccountProps = {\n  accounts: Account[] | undefined;\n  initialOpen?: boolean;\n  kafkaName: string;\n  id?: string;\n  onNext: (selectedAccount: string | undefined) => void;\n  onClose: () => void;\n};\n\nexport const SelectAccount: React.VFC<SelectAccountProps> = ({\n  accounts,\n  initialOpen = false,\n  kafkaName,\n  id,\n  onNext,\n  onClose,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [isDirty, setIsDirty] = useState<boolean>(false);\n  const [selectedAccount, setSelectedAccount] = useState<string>();\n\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const onToggle = (newState: boolean) => {\n    setIsOpen(newState);\n  };\n\n  const clearSelection = () => {\n    setSelectedAccount(undefined);\n    setIsDirty(true);\n    setIsOpen(false);\n  };\n\n  const noServiceAccounts = [\n    <SelectOption\n      isNoResultsOption={true}\n      isDisabled={true}\n      key={t(\"no_results_found\")}\n    >\n      {t(\"no_results_found\")}\n    </SelectOption>,\n  ];\n  const noUserAccounts = [\n    <SelectOption\n      isNoResultsOption={true}\n      isDisabled={true}\n      key={\"no_user_accounts\"}\n    >\n      {t(\"no_results_found\")}\n    </SelectOption>,\n  ];\n\n  function makeOptions(filterValue = \"\") {\n    const filter = filterValue.toLowerCase();\n    const filteredAccounts =\n      filter !== \"\"\n        ? accounts?.filter(\n            (principal) =>\n              principal.displayName.toLowerCase().includes(filter) ||\n              principal.id.includes(filter)\n          )\n        : accounts;\n\n    const serviceAccountOptions = filteredAccounts\n      ?.filter(\n        (principal) => principal.principalType === PrincipalType.ServiceAccount\n      )\n      .sort((a, b) =>\n        a.displayName && b.displayName\n          ? a.displayName.localeCompare(b.displayName)\n          : -1\n      )\n      .map((principal, index) => (\n        <SelectOption\n          key={index}\n          value={principal.id}\n          description={principal.displayName}\n        >\n          {principal.id}\n        </SelectOption>\n      ));\n\n    const userAccountOperations = filteredAccounts\n      ?.filter(\n        (principal) => principal.principalType === PrincipalType.UserAccount\n      )\n      .map((principal, index) => (\n        <SelectOption\n          key={index}\n          value={principal.id}\n          description={principal.displayName}\n        >\n          {principal.id}\n        </SelectOption>\n      ));\n\n    return [\n      <SelectGroup key=\"all_accounts_group\">\n        <SelectOption\n          key={t(\"all_accounts_title\")}\n          value={t(\"all_accounts_title\")}\n          description={t(\"all_accounts_description\")}\n        >\n          {t(\"all_accounts_title\")}\n        </SelectOption>\n      </SelectGroup>,\n\n      <Divider key=\"all_accounts_divider\" />,\n      <SelectGroup\n        label={t(\"all_accounts_service_account_group\")}\n        key=\"service_accounts_group\"\n      >\n        {serviceAccountOptions?.length\n          ? serviceAccountOptions\n          : noServiceAccounts}\n      </SelectGroup>,\n      <Divider key=\"user_account_divider2\" />,\n      <SelectGroup\n        label={t(\"all_accounts_user_account_group\")}\n        key=\"user_accounts_group\"\n      >\n        {userAccountOperations?.length ? userAccountOperations : noUserAccounts}\n      </SelectGroup>,\n    ];\n  }\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, value) => {\n    setSelectedAccount(value as string);\n    setIsDirty(false);\n    setIsOpen(false);\n  };\n\n  const validated: ValidatedOptions = isDirty\n    ? ValidatedOptions.error\n    : ValidatedOptions.default;\n\n  return (\n    <Modal\n      id=\"manage-permissions-modal\"\n      variant={\"large\"}\n      isOpen={true}\n      aria-label={t(\"dialog_aria_label\")}\n      position=\"top\"\n      title={t(\"dialog_title\")}\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={onClose}\n      onEscapePress={onClose}\n      appendTo={() =>\n        id ? document.getElementById(id) || document.body : document.body\n      }\n      actions={[\n        <Button\n          key={1}\n          variant=\"primary\"\n          isDisabled={\n            selectedAccount == \"\" || selectedAccount == undefined ? true : false\n          }\n          onClick={() => onNext(selectedAccount)}\n          aria-label={t(\"step_1_submit_button\")}\n        >\n          {t(\"step_1_submit_button\")}\n        </Button>,\n        <Button\n          onClick={onClose}\n          key={2}\n          variant=\"secondary\"\n          aria-label={t(\"common:cancel\")}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <FormGroup\n          fieldId=\"kafka-instance-name\"\n          label={t(\"kafka_instance\")}\n          id=\"modal-message\"\n        >\n          {kafkaName}\n        </FormGroup>\n\n        <FormGroup\n          fieldId=\"account-name\"\n          validated={validated}\n          helperTextInvalid={t(\"common:required\")}\n          isRequired\n          label={t(\"account_id_title\")}\n          labelIcon={\n            <Popover bodyContent={t(\"account_id_help\")}>\n              <button\n                type=\"button\"\n                onClick={(e) => e.preventDefault()}\n                className=\"pf-c-form__group-label-help\"\n                aria-label={t(\"account_help\")}\n              >\n                <HelpIcon noVerticalAlign />\n              </button>\n            </Popover>\n          }\n        >\n          {accounts ? (\n            <Select\n              id={\"account-id\"}\n              data-testid=\"acls-select-account\"\n              className=\"kafka-ui--select--limit-height\"\n              variant={SelectVariant.typeahead}\n              typeAheadAriaLabel={t(\"account_id_title\")}\n              maxHeight={400}\n              onToggle={onToggle}\n              onSelect={onSelect}\n              onClear={clearSelection}\n              selections={selectedAccount}\n              onFilter={(_, value) => makeOptions(value)}\n              isOpen={isOpen}\n              placeholderText={t(\"account_id_typeahead_placeholder\")}\n              isCreatable\n              menuAppendTo=\"parent\"\n              validated={validated}\n              createText={t(\"resourcePrefix.create_text\")}\n              isGrouped\n              onCreateOption={() => {\n                setIsOpen(false);\n                setIsDirty(false);\n              }}\n            >\n              {makeOptions()}\n            </Select>\n          ) : (\n            <Skeleton width={\"100%\"} />\n          )}\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { AsyncTypeaheadSelect } from \"@rhoas/app-services-ui-components\";\n\ntype ResourceNameProps = {\n  value: string | undefined;\n  onChangeValue: (value: string | undefined) => void;\n  onFetchOptions: (filter: string) => string[];\n  submitted: boolean;\n  resourceType: ResourceTypeValue | undefined;\n  resourcePrefixRule: ResourcePrefixRuleValue;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const ResourceName: React.VFC<ResourceNameProps> = ({\n  value,\n  onChangeValue,\n  submitted,\n  resourceType,\n  resourcePrefixRule,\n  onFetchOptions,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const validationCheck = (\n    resourceType: ResourceTypeValue | undefined,\n    resourcePreixCondition: \"Starts with\" | \"Is\",\n    filter: string | undefined\n  ) => {\n    const regExp = new RegExp(\"^[0-9A-Za-z_.-]+$\");\n\n    if (filter === undefined || filter === \"\" || filter == \"*\")\n      return { isValid: true, message: undefined };\n    if (resourcePreixCondition == \"Is\" && resourceType == \"topic\") {\n      if (filter == \".\" || filter == \"..\")\n        return {\n          isValid: false,\n          message: t(\"resourcePrefix.invalid_topic_name\"),\n        };\n    }\n\n    if (resourceType == \"topic\" && !regExp.test(filter))\n      return {\n        isValid: false,\n        message: t(\"resourcePrefix.invalid_topic\"),\n      };\n\n    if (resourceType == \"consumer-group\" && !regExp.test(filter))\n      return {\n        isValid: false,\n        message: t(\"resourcePrefix.invalid_consumer_group\"),\n      };\n    if (filter.length > 32)\n      return { isValid: false, message: t(\"resourcePrefix.invalid_length\") };\n\n    return { isValid: true, message: undefined };\n  };\n\n  const onValidation = (filter: string | undefined) => {\n    const validationMessage = validationCheck(\n      resourceType,\n      resourcePrefixRule,\n      filter\n    );\n    setIsNameValid(validationMessage.isValid);\n    return validationMessage;\n  };\n\n  return (\n    <AsyncTypeaheadSelect\n      id=\"resource-name\"\n      ariaLabel={\n        resourcePrefixRule === \"Is\"\n          ? t(\"resourcePrefix.aria_label_name_is\", { value: resourceType })\n          : t(\"resourcePrefix.aria_label_name_starts_with\", {\n              value: resourceType,\n            })\n      }\n      value={value}\n      placeholderText={\n        resourcePrefixRule === \"Is\"\n          ? t(\"resourcePrefix.placeholder_name_is\")\n          : t(\"resourcePrefix.placeholder_name_starts_with\")\n      }\n      onChange={onChangeValue}\n      required={true}\n      submitted={submitted}\n      onFetchOptions={onFetchOptions}\n      onValidationCheck={onValidation}\n    />\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\n\nexport type ResourceOperationValue =\n  | \"All\"\n  | \"Read\"\n  | \"Write\"\n  | \"Create\"\n  | \"Delete\"\n  | \"Alter\"\n  | \"Describe\"\n  | \"Describe configs\"\n  | \"Alter configs\";\n\ntype ResourceOperationProps = {\n  value: ResourceOperationValue | undefined;\n  onChangeValue: (value: ResourceOperationValue | undefined) => void;\n  initialOpen?: boolean;\n  invalid: boolean;\n  resourceTypeOptions: string[];\n};\n\nexport const ResourceOperation: React.VFC<ResourceOperationProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n  invalid,\n  resourceTypeOptions,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourceOperationValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return resourceTypeOptions.map((value, index) => (\n      <SelectOption key={index} value={value}>\n        {value}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <FormGroup\n      validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n      helperTextInvalid={t(\"common:required\")}\n      fieldId={\"resource-operation-select\"}\n    >\n      <Select\n        id={\"resource-operation-select\"}\n        aria-label={t(\"operations.aria_label\", value)}\n        data-testid=\"acls-resource-operation-select\"\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        isOpen={isOpen}\n        width={200}\n        placeholderText={t(\"operations.placeholder_text\")}\n        validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n        selections={value}\n        menuAppendTo={document.body}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroup>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\n\nexport type ResourcePermissionValue = \"allow\" | \"deny\";\n\ntype ResourcePermissionProps = {\n  value: ResourcePermissionValue;\n  onChangeValue: (value: ResourcePermissionValue) => void;\n  initialOpen?: boolean;\n};\n\nexport const ResourcePermission: React.VFC<ResourcePermissionProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourcePermissionOptions: {\n    [key in ResourcePermissionValue]: string;\n  } = {\n    allow: t(\"permissions.allow\"),\n    deny: t(\"permissions.deny\"),\n  };\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourcePermissionValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourcePermissionOptions).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <Select\n      id={\"resource-permission-select\"}\n      aria-label={t(\"permissions.aria_label\", { value })}\n      data-testid=\"acls-resource-permission-select\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      width={150}\n      selections={value}\n      menuAppendTo={document.body}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type ResourcePrefixRuleValue = \"Is\" | \"Starts with\";\n\ntype ResourcePrefixRuleProps = {\n  value: ResourcePrefixRuleValue;\n  onChangeValue: (value: ResourcePrefixRuleValue) => void;\n  initialOpen?: boolean;\n};\n\nexport const ResourcePrefixRule: React.VFC<ResourcePrefixRuleProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourcePrefixRuleOptions: {\n    [key in ResourcePrefixRuleValue]: { label: string; description: string };\n  } = {\n    \"Starts with\": {\n      label: t(\"resource_prefix_rule.starts_with\"),\n      description: t(\"resource_prefix_rule.starts_with_description\"),\n    },\n    Is: {\n      label: t(\"resource_prefix_rule.is\"),\n      description: t(\"resource_prefix_rule.is_description\"),\n    },\n  };\n\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourcePrefixRuleValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourcePrefixRuleOptions).map(\n      ([key, { label, description }]) => (\n        <SelectOption key={key} value={key} description={description}>\n          {label}\n        </SelectOption>\n      )\n    );\n  };\n\n  return (\n    <Select\n      id={\"resource-prefix-rule-select\"}\n      aria-label={t(\"resource_prefix_rule.aria_label\", { value })}\n      data-testid=\"acls-resource-prefix-rule-select\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      width={150}\n      selections={value}\n      menuAppendTo={document.body}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\n\nexport type ResourceTypeValue =\n  | \"topic\"\n  | \"consumer-group\"\n  | \"kafka-instance\"\n  | \"transactional-id\";\n\ntype ResourceTypeProps = {\n  value: ResourceTypeValue | undefined;\n  onChangeValue: (value: ResourceTypeValue | undefined) => void;\n  initialOpen?: boolean;\n  invalid: boolean;\n};\n\nexport const ResourceType: React.VFC<ResourceTypeProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n  invalid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourceTypeOptions: { [key in ResourceTypeValue]: string } = {\n    \"consumer-group\": t(\"resourceTypes.consumer_group\"),\n    topic: t(\"resourceTypes.topic\"),\n    \"kafka-instance\": t(\"resourceTypes.kafka_instance\"),\n    \"transactional-id\": t(\"resourceTypes.transactional_id\"),\n  };\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourceTypeValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourceTypeOptions).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <FormGroup\n      validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n      helperTextInvalid={t(\"common:required\")}\n      fieldId={\"resource-type-select\"}\n    >\n      <Select\n        id={\"resource-type-select\"}\n        aria-label={\n          value != undefined\n            ? t(\"resourceTypes.resource_type_selected\", { value: value })\n            : t(\"resourceTypes.resource_type\")\n        }\n        data-testid=\"acls-resource-type-select\"\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        isOpen={isOpen}\n        width={200}\n        placeholderText={t(\"resourceTypes.placeholder_text\")}\n        validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n        selections={value}\n        menuAppendTo={document.body}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroup>\n  );\n};\n","import { Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ShortcutsTableHead: React.FC = () => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Thead>\n      <Tr>\n        <Th>{t(\"table.resource_column_title\")}</Th>\n        <Th />\n\n        <Th />\n\n        <Th>{t(\"table.permissions_column_title\")}</Th>\n        <Th />\n        <Th />\n      </Tr>\n    </Thead>\n  );\n};\n","import { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { ResourceType } from \"./ResourceType\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport { ResourcePermission } from \"./ResourcePermission\";\nimport type { ResourcePermissionValue } from \"./ResourcePermission\";\nimport { ResourceOperation } from \"./ResourceOperation\";\nimport type { ResourceOperationValue } from \"./ResourceOperation\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nexport type KafkaInstanceManualPermissions = {\n  resourceType: ResourceTypeValue | undefined;\n  onChangeResourceType: (value: ResourceTypeValue | undefined) => void;\n  submitted: boolean;\n  resourcePermission: ResourcePermissionValue;\n  onChangeResourcePermission: (value: ResourcePermissionValue) => void;\n  resourceOperation: ResourceOperationValue | undefined;\n  onChangeResourceOperation: (\n    value: ResourceOperationValue | undefined\n  ) => void;\n  row: number;\n  onDelete: (row: number) => void;\n};\n\nexport const KafkaInstanceManualPermissions: React.FC<\n  KafkaInstanceManualPermissions\n> = ({\n  resourceType,\n  resourceOperation,\n  resourcePermission,\n  submitted,\n  onChangeResourceOperation,\n  onChangeResourcePermission,\n  onChangeResourceType,\n  row,\n  onDelete,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Tbody>\n      <Tr>\n        <Td width={60}>\n          <ResourceType\n            value={resourceType}\n            onChangeValue={onChangeResourceType}\n            invalid={submitted && resourceType === undefined}\n          />\n        </Td>\n\n        <Td />\n        <Td />\n\n        <Td>\n          <ResourcePermission\n            value={resourcePermission}\n            onChangeValue={onChangeResourcePermission}\n          />\n        </Td>\n        <Td>\n          <ResourceOperation\n            value={resourceOperation}\n            onChangeValue={onChangeResourceOperation}\n            resourceTypeOptions={[\n              t(\"operations.alter\"),\n              t(\"operations.describe\"),\n            ]}\n            invalid={submitted && resourceOperation === undefined}\n          />\n        </Td>\n        <Td>\n          <RemoveButton\n            variant=\"link\"\n            onClick={() => onDelete(row)}\n            tooltip={t(\"operations.delete\")}\n          />\n        </Td>\n      </Tr>\n    </Tbody>\n  );\n};\n","import { Tbody, Tr, Td } from \"@patternfly/react-table\";\nimport { ResourceName } from \"./ResourceName\";\nimport { ResourceOperation } from \"./ResourceOperation\";\nimport type { ResourceOperationValue } from \"./ResourceOperation\";\nimport { ResourcePermission } from \"./ResourcePermission\";\nimport type { ResourcePermissionValue } from \"./ResourcePermission\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { ResourceType } from \"./ResourceType\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\nimport { useTranslation } from \"react-i18next\";\nimport { KafkaInstanceManualPermissions } from \"./KafkaInstanceManualPermissions\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\n\nexport type AssignPermissionsManualProps = {\n  resourceType: ResourceTypeValue | undefined;\n  onChangeResourceType: (value: ResourceTypeValue | undefined) => void;\n  submitted: boolean;\n  resourcePrefix: ResourcePrefixRuleValue;\n  onChangeResourcePrefix: (value: ResourcePrefixRuleValue) => void;\n  resourceName: string | undefined;\n  onChangeResource: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  resourcePermission: ResourcePermissionValue;\n  onChangeResourcePermission: (value: ResourcePermissionValue) => void;\n  resourceOperation: ResourceOperationValue | undefined;\n  onChangeResourceOperation: (\n    value: ResourceOperationValue | undefined\n  ) => void;\n  multipleShorctutPermissions?: boolean;\n  row: number;\n  onDelete: (row: number) => void;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const AssignPermissionsManual: React.FC<\n  AssignPermissionsManualProps\n> = ({\n  resourceType,\n  onChangeResourceType,\n  submitted,\n  resourcePrefix,\n  onChangeResourcePrefix,\n  resourceName,\n  onChangeResource,\n  onFetchResourceNameOptions,\n  resourcePermission,\n  resourceOperation,\n  onChangeResourceOperation,\n  onChangeResourcePermission,\n  multipleShorctutPermissions = true,\n  row,\n  onDelete,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const resourceTypeOptions = () => {\n    switch (resourceType) {\n      case \"consumer-group\":\n        return [\n          t(\"operations.all\"),\n          t(\"operations.read\"),\n          t(\"operations.delete\"),\n          t(\"operations.describe\"),\n        ];\n      case \"kafka-instance\":\n        return [t(\"operations.alter\"), t(\"operations.describe\")];\n      case \"transactional-id\":\n        return [\n          t(\"operations.all\"),\n          t(\"operations.write\"),\n          t(\"operations.describe\"),\n        ];\n      default:\n        return [\n          t(\"operations.all\"),\n          t(\"operations.read\"),\n          t(\"operations.write\"),\n          t(\"operations.create\"),\n          t(\"operations.delete\"),\n          t(\"operations.alter\"),\n          t(\"operations.describe\"),\n          t(\"operations.describe_configs\"),\n          t(\"operations.alter_configs\"),\n        ];\n    }\n  };\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n      {resourceType === \"kafka-instance\" ? (\n        <KafkaInstanceManualPermissions\n          resourceOperation={resourceOperation}\n          resourcePermission={resourcePermission}\n          resourceType={resourceType}\n          submitted={submitted}\n          onChangeResourceOperation={onChangeResourceOperation}\n          onChangeResourcePermission={onChangeResourcePermission}\n          onChangeResourceType={onChangeResourceType}\n          onDelete={onDelete}\n          row={row}\n        />\n      ) : (\n        <Tbody>\n          <Tr>\n            <Td>\n              <ResourceType\n                value={resourceType}\n                onChangeValue={onChangeResourceType}\n                invalid={submitted && resourceType === undefined}\n              />\n            </Td>\n            <Td>\n              <ResourcePrefixRule\n                value={resourcePrefix}\n                onChangeValue={onChangeResourcePrefix}\n              />\n            </Td>\n            <Td>\n              <ResourceName\n                value={resourceName}\n                onChangeValue={onChangeResource}\n                onFetchOptions={onFetchResourceNameOptions}\n                submitted={submitted}\n                resourceType={resourceType}\n                resourcePrefixRule={resourcePrefix}\n                setIsNameValid={setIsNameValid}\n              />\n            </Td>\n            <Td>\n              <ResourcePermission\n                value={resourcePermission}\n                onChangeValue={onChangeResourcePermission}\n              />\n            </Td>\n            <Td>\n              <ResourceOperation\n                resourceTypeOptions={resourceTypeOptions()}\n                value={resourceOperation}\n                onChangeValue={onChangeResourceOperation}\n                invalid={\n                  submitted && resourceOperation === undefined ? true : false\n                }\n              />\n            </Td>\n            <Td>\n              <RemoveButton\n                variant=\"link\"\n                onClick={() => onDelete(row)}\n                tooltip={t(\"remove_permission_tooltip\")}\n                ariaLabel={t(\"manual_delete\")}\n              />\n            </Td>\n          </Tr>\n        </Tbody>\n      )}\n    </>\n  );\n};\n","import { Tr, Td } from \"@patternfly/react-table\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ResourceName } from \"./ResourceName\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\n\nexport type ProduceTopicRowProps = {\n  onChange: (value: ResourcePrefixRuleValue) => void;\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n  onChangeResourceName: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  isConsumeTopicShortcut?: boolean;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ProduceTopicRow: React.FC<ProduceTopicRowProps> = ({\n  onChange,\n  prefixRuleValue,\n  resourceNameValue,\n  onChangeResourceName,\n  onFetchResourceNameOptions,\n  submitted,\n  isConsumeTopicShortcut,\n  setIsNameValid,\n}) => {\n  return (\n    <Tr style={{ borderBottom: isConsumeTopicShortcut ? \"none\" : \"\" }}>\n      <Td>\n        {\" \"}\n        <ResourceTypeLabel variant={\"TOPIC\"} />{\" \"}\n        <DisplayResourceName resourceType={\"TOPIC\"} />{\" \"}\n      </Td>\n      <Td>\n        {\n          <ResourcePrefixRule\n            value={prefixRuleValue}\n            onChangeValue={onChange}\n          />\n        }\n      </Td>\n      <Td>\n        <ResourceName\n          value={resourceNameValue}\n          onChangeValue={onChangeResourceName}\n          onFetchOptions={onFetchResourceNameOptions}\n          submitted={submitted}\n          resourceType={\"topic\"}\n          resourcePrefixRule={prefixRuleValue}\n          setIsNameValid={setIsNameValid}\n        />\n      </Td>\n      <Td colSpan={2}>\n        <PermissionOperationCell\n          permission={\"ALLOW\"}\n          operation={\n            isConsumeTopicShortcut\n              ? [\"READ\", \"DESCRIBE\"]\n              : [\"WRITE\", \"CREATE\", \"DESCRIBE\"]\n          }\n        />\n      </Td>\n    </Tr>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\n\nimport { ResourceName } from \"./ResourceName\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ProduceTopicRow } from \"./ProduceTopicRow\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\n\nexport type ConsumeTopicShortcutProps = {\n  onChangeConsumerResourcePrefixRule: (value: ResourcePrefixRuleValue) => void;\n  onChangeTopicResourcePrefixRule: (value: ResourcePrefixRuleValue) => void;\n  consumerPrefixRuleValue: ResourcePrefixRuleValue;\n  topicPrefixRuleValue: ResourcePrefixRuleValue;\n  consumerResourceNameValue: string | undefined;\n  topicResourceNameValue: string | undefined;\n  onChangeConsumerResourceName: (value: string | undefined) => void;\n  onChangeTopicResourceName: (value: string | undefined) => void;\n  onFetchConsumerResourceNameOptions: (filter: string) => string[];\n  onFetchTopicResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  multipleShorctutPermissions?: boolean;\n  onDelete: (row: number) => void;\n  row: number;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ConsumeTopicShortcut: React.FC<ConsumeTopicShortcutProps> = ({\n  onChangeConsumerResourceName,\n  topicPrefixRuleValue,\n  topicResourceNameValue,\n  consumerPrefixRuleValue,\n  consumerResourceNameValue,\n  submitted,\n  onChangeConsumerResourcePrefixRule,\n  onChangeTopicResourceName,\n  onChangeTopicResourcePrefixRule,\n  onFetchConsumerResourceNameOptions,\n  onFetchTopicResourceNameOptions,\n  onDelete,\n  multipleShorctutPermissions = true,\n  row,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_consume_topic\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_consume_topic\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_consume_topic_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_consumer\")}\n            />\n          </Td>\n        </Tr>\n        <ProduceTopicRow\n          setIsNameValid={setIsNameValid}\n          isConsumeTopicShortcut={true}\n          onChange={onChangeTopicResourcePrefixRule}\n          prefixRuleValue={topicPrefixRuleValue}\n          resourceNameValue={topicResourceNameValue}\n          onChangeResourceName={onChangeTopicResourceName}\n          onFetchResourceNameOptions={onFetchTopicResourceNameOptions}\n          submitted={submitted}\n        />\n        <Tr>\n          <Td>\n            {\" \"}\n            <ResourceTypeLabel variant={\"GROUP\"} />{\" \"}\n            <DisplayResourceName resourceType={\"GROUP\"} />{\" \"}\n          </Td>\n          <Td>\n            <ResourcePrefixRule\n              value={consumerPrefixRuleValue}\n              onChangeValue={onChangeConsumerResourcePrefixRule}\n            />\n          </Td>\n          <Td>\n            {\n              <ResourceName\n                value={consumerResourceNameValue}\n                onChangeValue={onChangeConsumerResourceName}\n                onFetchOptions={onFetchConsumerResourceNameOptions}\n                submitted={submitted}\n                resourceType={\"topic\"}\n                resourcePrefixRule={consumerPrefixRuleValue}\n                setIsNameValid={setIsNameValid}\n              />\n            }\n          </Td>\n          <Td>\n            <PermissionOperationCell\n              permission={\"ALLOW\"}\n              operation={[\"READ\"]}\n            />\n          </Td>\n        </Tr>\n      </Tbody>\n    </>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type ManageAccessShortcutProps = {\n  onDelete: (row: number) => void;\n  multipleShorctutPermissions?: boolean;\n  instanceName: string;\n  row: number;\n};\nexport const ManageAccessShortcut: React.FC<ManageAccessShortcutProps> = ({\n  onDelete,\n  multipleShorctutPermissions = true,\n  instanceName,\n  row,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_manage_access\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_manage_access\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_manage_access_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_access\")}\n            />\n          </Td>\n        </Tr>\n\n        <Tr>\n          <Td colSpan={2}>\n            <ResourceTypeLabel variant={\"CLUSTER\"} />{\" \"}\n            <DisplayResourceName resourceType={\"CLUSTER\"} />{\" \"}\n            {t(\"is_kafka_instance\", { value: instanceName })}\n          </Td>\n\n          <Td />\n\n          <Td>\n            <PermissionOperationCell\n              permission={\"ALLOW\"}\n              operation={[\"ALTER\"]}\n            />\n          </Td>\n        </Tr>\n      </Tbody>\n    </>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nimport { ProduceTopicRow } from \"./ProduceTopicRow\";\n\nexport type ProduceTopicShortcutProps = {\n  onChange: (value: ResourcePrefixRuleValue) => void;\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n  onChangeResourceName: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  onDelete: (row: number) => void;\n  multipleShorctutPermissions?: boolean;\n  row: number;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ProduceTopicShortcut: React.FC<ProduceTopicShortcutProps> = ({\n  onChange,\n  onDelete,\n  prefixRuleValue,\n  onChangeResourceName,\n  resourceNameValue,\n  submitted,\n  onFetchResourceNameOptions,\n  multipleShorctutPermissions = true,\n  row,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_produce_topic\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_produce_topic\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_produce_topic_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_producer\")}\n            />\n          </Td>\n        </Tr>\n\n        <ProduceTopicRow\n          onChange={onChange}\n          prefixRuleValue={prefixRuleValue}\n          resourceNameValue={resourceNameValue}\n          onChangeResourceName={onChangeResourceName}\n          onFetchResourceNameOptions={onFetchResourceNameOptions}\n          submitted={submitted}\n          setIsNameValid={setIsNameValid}\n        />\n      </Tbody>\n    </>\n  );\n};\n","import { ActionList, ActionListItem } from \"@patternfly/react-core\";\nimport { TableComposable } from \"@patternfly/react-table\";\nimport { PermissionsDropdown } from \"./PermissionsDropdown\";\nimport type { AddAclType } from \"../types\";\nimport { AssignPermissionsManual } from \"./AssignPermissionsManual\";\nimport { ConsumeTopicShortcut } from \"./ConsumeTopicShortcut\";\nimport { ManageAccessShortcut } from \"./ManageAccessShortcut\";\nimport { ProduceTopicShortcut } from \"./ProduceTopicShortcut\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type AssignPermissionsProps = {\n  submitted: boolean;\n  onDelete: (index: number) => void;\n  topicNameOptions: (filter: string) => string[];\n  consumerGroupNameOptions: (filter: string) => string[];\n  addedAcls?: AddAclType[];\n  onAddManualPermissions: () => void;\n  onAddProduceTopicShortcut: () => void;\n  onConsumeTopicShortcut: () => void;\n  onManageAccessShortcut: () => void;\n  kafkaName: string;\n  setAddedAcls: (value: AddAclType[]) => void;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const AssignPermissions: React.VFC<AssignPermissionsProps> = ({\n  submitted,\n  onDelete,\n  topicNameOptions,\n  consumerGroupNameOptions,\n  onAddManualPermissions,\n  onAddProduceTopicShortcut,\n  onConsumeTopicShortcut,\n  onManageAccessShortcut,\n  addedAcls,\n  kafkaName,\n  setAddedAcls,\n  setIsNameValid,\n}) => {\n  return (\n    <>\n      <TableComposable variant=\"compact\">\n        {addedAcls && addedAcls.length > 0 && <ShortcutsTableHead />}\n        {addedAcls &&\n          addedAcls.map((aclTemplate, idx) => {\n            switch (aclTemplate.type) {\n              case \"manual\":\n                return (\n                  <AssignPermissionsManual\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    resourceType={aclTemplate.resourceType}\n                    onChangeResourceType={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourceType: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    submitted={submitted}\n                    resourcePrefix={aclTemplate.resourcePrefix}\n                    onChangeResourcePrefix={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourcePrefix: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    resourceName={aclTemplate.resourceName}\n                    onChangeResource={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourceName: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchResourceNameOptions={topicNameOptions}\n                    resourcePermission={aclTemplate.resourcePermission}\n                    onChangeResourcePermission={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourcePermission: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    resourceOperation={aclTemplate.resourceOperation}\n                    onChangeResourceOperation={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourceOperation: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    row={idx}\n                    onDelete={onDelete}\n                  />\n                );\n\n              case \"consume-topic\":\n                return (\n                  <ConsumeTopicShortcut\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    onChangeConsumerResourcePrefixRule={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                consumerResourcePrefixRule: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onChangeTopicResourcePrefixRule={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                topicResourcePrefixRule: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    consumerPrefixRuleValue={\n                      aclTemplate.consumerResourcePrefixRule\n                    }\n                    topicPrefixRuleValue={aclTemplate.topicResourcePrefixRule}\n                    consumerResourceNameValue={aclTemplate.consumerResourceName}\n                    topicResourceNameValue={aclTemplate.topicResourceName}\n                    onChangeConsumerResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                consumerResourceName: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onChangeTopicResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                topicResourceName: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchConsumerResourceNameOptions={\n                      consumerGroupNameOptions\n                    }\n                    onFetchTopicResourceNameOptions={topicNameOptions}\n                    submitted={submitted}\n                    onDelete={onDelete}\n                    row={idx}\n                  />\n                );\n\n              case \"produce-topic\":\n                return (\n                  <ProduceTopicShortcut\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    onChange={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, prefixRuleValue: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    prefixRuleValue={aclTemplate.prefixRuleValue}\n                    resourceNameValue={aclTemplate.resourceNameValue}\n                    onChangeResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourceNameValue: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchResourceNameOptions={topicNameOptions}\n                    submitted={submitted}\n                    onDelete={onDelete}\n                    row={idx}\n                  />\n                );\n\n              case \"manage-access\":\n                return (\n                  <ManageAccessShortcut\n                    key={idx}\n                    row={idx}\n                    instanceName={kafkaName}\n                    onDelete={onDelete}\n                  />\n                );\n            }\n          })}\n      </TableComposable>\n      <ActionList>\n        <ActionListItem style={{ paddingTop: \"20px\" }}>\n          <PermissionsDropdown\n            onAddPermission={onAddManualPermissions}\n            onShortcutConsumeTopic={onConsumeTopicShortcut}\n            onShortcutProduceTopic={onAddProduceTopicShortcut}\n            onShortcutManageAccess={onManageAccessShortcut}\n          />\n        </ActionListItem>\n      </ActionList>\n    </>\n  );\n};\n","import type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Modal,\n  ModalVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\n\nexport type PreCancelModalProps = {\n  isOpen: boolean;\n  closeModal: () => void;\n  resumeEditing: () => void;\n};\n\nconst PreCancelModal: React.FC<PreCancelModalProps> = ({\n  isOpen,\n  closeModal,\n  resumeEditing,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Modal\n      id=\"manage-permissions-precancel-modal\"\n      variant={ModalVariant.small}\n      isOpen={isOpen}\n      aria-label={t(\"pre_cancel_label\")}\n      title={t(\"pre_cancel_title\")}\n      titleIconVariant=\"warning\"\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={resumeEditing}\n      onEscapePress={closeModal}\n      actions={[\n        <Button onClick={closeModal} key={1} variant={ButtonVariant.primary}>\n          {t(\"discard_changes\")}\n        </Button>,\n        <Button\n          onClick={resumeEditing}\n          key={2}\n          variant={ButtonVariant.secondary}\n        >\n          {t(\"resume_editing\")}\n        </Button>,\n      ]}\n    >\n      {t(\"cancel_description\")}\n    </Modal>\n  );\n};\n\nexport { PreCancelModal };\n","import type { VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\n\nimport type { AclBinding } from \"../types\";\nimport { PermissionOperationCell, PrincipalCell, ResourceCell } from \"./Cells\";\n\nexport type ReviewPermissionsTableProps = {\n  acls: AclBinding[];\n  selectedAccountId: string;\n  onRemoveAcl: (idx: number) => void;\n};\n\nexport const ReviewPermissionsTable: VFC<ReviewPermissionsTableProps> = ({\n  selectedAccountId,\n  acls = [],\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <TableComposable\n      variant={TableVariant.compact}\n      aria-label={t(\"review_permissions_table\")}\n    >\n      <Thead noWrap>\n        <Tr>\n          <Th width={60}>{t(\"table.resource_column_title\")}</Th>\n          <Th width={20}>{t(\"table.permissions_column_title\")}</Th>\n          <Th width={20} />\n        </Tr>\n      </Thead>\n      <Tbody>\n        {acls.map((acl, idx) => {\n          const {\n            patternType,\n            resourceType,\n            resourceName,\n            operation,\n            permission,\n            principal,\n          } = acl;\n          const isDeleteEnabled =\n            selectedAccountId === \"All accounts\" ||\n            principal === `User:${selectedAccountId}` ||\n            principal != `User:*`;\n          const isAllAccounts = principal === \"User:*\";\n\n          return (\n            <Tr key={idx}>\n              <Td>\n                <ResourceCell\n                  patternType={patternType}\n                  resourceType={resourceType}\n                  resourceName={resourceName}\n                />\n              </Td>\n              <Td>\n                <PermissionOperationCell\n                  permission={permission}\n                  operation={operation}\n                />\n              </Td>\n              <Td>\n                <PrincipalCell\n                  isDeleteEnabled={isDeleteEnabled}\n                  isAllAccounts={isAllAccounts}\n                  onRemoveAcl={() => onRemoveAcl(idx)}\n                />\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </TableComposable>\n  );\n};\n","import { Text, TextContent, TextVariants } from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { AclBinding } from \"../types\";\nimport { ReviewPermissionsTable } from \"./ReviewPermissionsTable\";\n\nexport type ViewAccountDetailsProps = {\n  accountId: string | undefined;\n  existingAcls: AclBinding[];\n  onRemoveAcl: (index: number) => void;\n};\n\nexport const ViewAccountDetails: React.VFC<ViewAccountDetailsProps> = ({\n  accountId,\n  existingAcls,\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const HelperText: React.FunctionComponent = () => {\n    if (accountId === \"All accounts\") {\n      return t(\"all_accounts_help\");\n    }\n    return (\n      <Trans ns={[\"manage-kafka-permissions\"]} i18nKey=\"selected_account_help\">\n        Review the list of existing permissions for the selected account. The\n        list includes account-specific permissions and permissions applied to\n        all accounts within this Kafka instance. Permissions labeled\n        <strong>All accounts</strong> cannot be removed when an individual\n        account ID is selected.\n      </Trans>\n    );\n  };\n  return (\n    <>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          <HelperText />\n        </Text>\n      </TextContent>\n      <ReviewPermissionsTable\n        acls={existingAcls}\n        selectedAccountId={accountId ? accountId : \"\"}\n        onRemoveAcl={onRemoveAcl}\n      />\n    </>\n  );\n};\n","import type { ResourceOperationValue } from \"./components/ResourceOperation\";\nimport type { ResourceTypeValue } from \"./components/ResourceType\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport { AclResourceType } from \"@rhoas/kafka-instance-sdk\";\nimport type { AddAclType } from \"./types\";\n\nexport const transformPermissions = (\n  transformAclData: AclBinding[],\n  newAcls?: AddAclType[],\n  selectedAccount?: string\n) => {\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  const selectedAccountName = `User:${selectedAccount}`;\n  newAcls?.map((value) => {\n    switch (value.type) {\n      case \"manual\": {\n        transformAclData.push({\n          resourceName:\n            value.resourceType == \"kafka-instance\"\n              ? \"kafka-cluster\"\n              : value.resourceName\n              ? value.resourceName\n              : \"\",\n          resourceType: transformResourceType(value.resourceType),\n          patternType: value.resourcePrefix == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n          operation: transformResourceOperation(value.resourceOperation),\n          permission: value.resourcePermission == \"allow\" ? \"ALLOW\" : \"DENY\",\n          principal:\n            selectedAccount == \"All accounts\" ? `User:*` : selectedAccountName,\n        });\n        break;\n      }\n      case \"manage-access\":\n        {\n          transformAclData.push({\n            resourceName: \"kafka-cluster\",\n            resourceType: \"CLUSTER\",\n            patternType: \"LITERAL\",\n            operation: \"ALTER\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          });\n        }\n        break;\n      case \"consume-topic\":\n        {\n          transformAclData.push(\n            {\n              resourceName: value.topicResourceName || \"\",\n              resourceType: \"TOPIC\",\n              patternType:\n                value.topicResourcePrefixRule == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n              operation: \"READ\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            },\n            {\n              resourceName: value.topicResourceName || \"\",\n              resourceType: \"TOPIC\",\n              patternType:\n                value.topicResourcePrefixRule == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n              operation: \"DESCRIBE\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            },\n            {\n              resourceName: value.consumerResourceName || \"\",\n              resourceType: \"GROUP\",\n              patternType:\n                value.consumerResourcePrefixRule == \"Is\"\n                  ? \"LITERAL\"\n                  : \"PREFIXED\",\n              operation: \"READ\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            }\n          );\n        }\n        break;\n      case \"produce-topic\": {\n        transformAclData.push(\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"WRITE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          },\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"CREATE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          },\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"DESCRIBE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          }\n        );\n      }\n    }\n  });\n};\n\nexport const transformResourceType = (value: ResourceTypeValue | undefined) => {\n  switch (value) {\n    case \"consumer-group\":\n      return AclResourceType.Group;\n    case \"kafka-instance\":\n      return AclResourceType.Cluster;\n    case \"topic\":\n      return AclResourceType.Topic;\n    default:\n      return AclResourceType.TransactionalId;\n  }\n};\nexport const transformResourceOperation = (\n  value: ResourceOperationValue | undefined\n) => {\n  switch (value) {\n    case \"All\":\n      return \"ALL\";\n    case \"Alter\":\n      return \"ALTER\";\n    case \"Alter configs\":\n      return \"ALTER_CONFIGS\";\n    case \"Create\":\n      return \"CREATE\";\n    case \"Delete\":\n      return \"DELETE\";\n    case \"Describe\":\n      return \"DESCRIBE\";\n    case \"Describe configs\":\n      return \"DESCRIBE_CONFIGS\";\n    case \"Read\":\n      return \"READ\";\n    default:\n      return \"WRITE\";\n  }\n};\n","import {\n  Button,\n  ExpandableSection,\n  Form,\n  FormGroup,\n  Modal,\n  TextContent,\n  TextVariants,\n  Text,\n  Badge,\n  Alert,\n  Popover,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AssignPermissions } from \"./AssignPermissions\";\nimport { PreCancelModal } from \"./PreCancelModal\";\nimport { ViewAccountDetails } from \"./ViewAccountDetails\";\nimport type { AddAclType } from \"../types\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport type { Permissions } from \"ui\";\nimport {\n  createEmptyConsumeTopicAcl,\n  createEmptyManageAccessAcl,\n  createEmptyManualAcl,\n  createEmptyProduceTopicAcl,\n} from \"../types\";\nimport { transformPermissions } from \"../utils\";\n\nexport type AclType = {\n  groups: Permissions[];\n  count: number;\n};\n\nexport type EditPermissionsProps = {\n  onCancel: () => void;\n  kafkaName: string;\n  onSave: (\n    acls: AclBinding[] | undefined,\n    deletedAcls: AclBinding[] | undefined\n  ) => void;\n  acls: AclBinding[];\n  topicsList: string[];\n  consumerGroupsList: string[];\n  id?: string;\n  selectedAccount: string | undefined;\n};\n\nexport const EditPermissions: React.FC<EditPermissionsProps> = ({\n  onCancel,\n  kafkaName,\n  acls,\n  onSave,\n  topicsList,\n  consumerGroupsList,\n  selectedAccount,\n  id,\n}) => {\n  const { t } = useTranslation([\n    \"manage-kafka-permissions\",\n    \"create-kafka-instance\",\n  ]);\n\n  const escapeClosesModal = useRef<boolean>(true);\n  const [\n    isExpandedExistingPermissionSection,\n    setIsExpandedExistingPermissionSection,\n  ] = useState<boolean>(false);\n  const [isAclDeleted, setIsAclDeleted] = useState<boolean>(false);\n  const [\n    isExpandedAssignPermissionsSection,\n    setIsExpandedAssignPermissionsSection,\n  ] = useState<boolean>(true);\n  const [isNameValid, setIsNameValid] = useState<boolean>(true);\n  const [canSave, setCanSave] = useState<boolean>(false);\n  const [submitted, setSubmitted] = useState<boolean>(false);\n  const [isOpenPreCancelModal, setIsOpenPreCancelModal] =\n    useState<boolean>(false);\n  const [existingAcls, setExistingAcls] = useState<AclBinding[]>(acls);\n  const [newAcls, setNewAcls] = useState<AddAclType[]>();\n  const [deletedAcls, setDeletedAcls] = useState<AclBinding[] | undefined>(\n    undefined\n  );\n\n  const checkValidation = useCallback(() => {\n    if (newAcls) {\n      const isRowInvalid = newAcls?.map((value) =>\n        value.type == \"manual\" &&\n        value.resourceType == \"kafka-instance\" &&\n        value.resourceOperation != undefined\n          ? false\n          : Object.values(value).includes(undefined)\n      );\n      isRowInvalid.includes(true) ? setCanSave(false) : setCanSave(true);\n      if (canSave == true && isNameValid) return true;\n      else return false;\n    }\n    if (deletedAcls && deletedAcls.length > 0) {\n      setCanSave(true);\n      return true;\n    } else return false;\n  }, [canSave, deletedAcls, isNameValid, newAcls]);\n\n  useEffect(() => {\n    checkValidation();\n  }, [checkValidation, newAcls]);\n\n  useEffect(() => {\n    //Fetch the latest table for exiting acls, only when no row is scheduled for deletion\n    if (deletedAcls == undefined) setExistingAcls(acls);\n  }, [acls, deletedAcls]);\n\n  const onEscapePress = () => {\n    if (escapeClosesModal.current) {\n      onCancel();\n    }\n  };\n  const topicFilter = (filter: string) => {\n    if (filter == \"\" || filter == undefined) return topicsList;\n    else return topicsList.filter((v) => v.includes(filter));\n  };\n\n  const consumerGroupsFilter = (filter: string) => {\n    if (filter == \"\" || filter == undefined) return consumerGroupsList;\n    else return consumerGroupsList.filter((v) => v.includes(filter));\n  };\n\n  const aclsToSave: AclBinding[] = [];\n\n  const onClickSubmit = () => {\n    if (\n      (newAcls && newAcls.length > 0) ||\n      (deletedAcls && deletedAcls.length > 0)\n    ) {\n      setSubmitted(true);\n      const isAclValid = checkValidation();\n      transformPermissions(aclsToSave, newAcls, selectedAccount);\n      isAclValid && onSave(aclsToSave, deletedAcls);\n    }\n  };\n\n  const onAddManualPermissions = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyManualAcl()]\n        : [createEmptyManualAcl()]\n    );\n  };\n  const onAddProduceTopicShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyProduceTopicAcl()]\n        : [createEmptyProduceTopicAcl()]\n    );\n  };\n  const onConsumeTopicShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyConsumeTopicAcl()]\n        : [createEmptyConsumeTopicAcl()]\n    );\n  };\n  const onManageAccessShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyManageAccessAcl(kafkaName)]\n        : [createEmptyManageAccessAcl(kafkaName)]\n    );\n  };\n\n  const onDeleteNewAcl = (row: number) => {\n    setNewAcls(\n      (prevState) => prevState && prevState.filter((_, index) => index !== row)\n    );\n  };\n\n  const onChangeExpandedExistingPermissionsSection = (value: boolean) => {\n    setIsExpandedExistingPermissionSection(value);\n  };\n  const onChangeExpandedAssignPermissionsSection = (value: boolean) => {\n    setIsExpandedAssignPermissionsSection(value);\n  };\n\n  const isDisabled =\n    (submitted && !canSave) ||\n    ((newAcls == undefined || newAcls.length < 1) && !isAclDeleted) ||\n    !isNameValid\n      ? true\n      : false;\n  const onClose = () => {\n    !isDisabled || (newAcls && newAcls?.length > 0)\n      ? setIsOpenPreCancelModal(true)\n      : onCancel();\n  };\n\n  const closePreCancelModal = () => {\n    setIsOpenPreCancelModal(false);\n    onCancel();\n  };\n\n  const resumeEditingPermissions = () => {\n    setIsOpenPreCancelModal(false);\n  };\n\n  const updateExistingAcls = (row: number) => {\n    setExistingAcls((existingAcls || []).filter((_, index) => index != row));\n  };\n\n  const onRemoveAcls = (row: number) => {\n    setDeletedAcls((prevState) =>\n      existingAcls && prevState != undefined\n        ? [...prevState, existingAcls[row]]\n        : existingAcls && [existingAcls[row]]\n    );\n    setIsAclDeleted(true);\n    updateExistingAcls(row);\n  };\n  //The value received will have a prefix 'User:'.Remove the prefix when displaying value\n  const accountDisplayName =\n    selectedAccount === \"All accounts\"\n      ? t(\"all_accounts_title\")\n      : selectedAccount?.includes(\"User:\")\n      ? selectedAccount?.split(\":\")[1]\n      : selectedAccount;\n  return (\n    <Modal\n      id=\"manage-permissions-modal\"\n      variant={\"large\"}\n      isOpen={true}\n      aria-label={t(\"dialog_aria_label\")}\n      position=\"top\"\n      title={t(\"dialog_title\")}\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={onClose}\n      onEscapePress={onEscapePress}\n      appendTo={() =>\n        id ? document.getElementById(id) || document.body : document.body\n      }\n      actions={[\n        <Button\n          key={1}\n          variant=\"primary\"\n          isDisabled={isDisabled}\n          onClick={onClickSubmit}\n          aria-label={t(\"step_2_submit_button\")}\n        >\n          {t(\"step_2_submit_button\")}\n        </Button>,\n        <Button\n          onClick={onClose}\n          key={2}\n          variant=\"secondary\"\n          aria-label={t(\"common:cancel\")}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <PreCancelModal\n        isOpen={isOpenPreCancelModal}\n        closeModal={closePreCancelModal}\n        resumeEditing={resumeEditingPermissions}\n      />\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <FormGroup\n          fieldId=\"kafka-instance-name\"\n          label={t(\"kafka_instance\")}\n          id=\"modal-message\"\n        >\n          {kafkaName}\n        </FormGroup>\n\n        <FormGroup\n          fieldId=\"account-name\"\n          label={t(\"account_id_title\")}\n          labelIcon={\n            <Popover bodyContent={t(\"account_id_help\")}>\n              <button\n                type=\"button\"\n                onClick={(e) => e.preventDefault()}\n                className=\"pf-c-form__group-label-help\"\n                aria-label={t(\"account_help\")}\n              >\n                <HelpIcon noVerticalAlign />\n              </button>\n            </Popover>\n          }\n        >\n          {accountDisplayName}\n        </FormGroup>\n        {(!canSave || !isNameValid) && submitted && (\n          <Alert\n            isInline\n            title={t(\"create-kafka-instance:form_errors.form_invalid\")}\n            variant={\"danger\"}\n          />\n        )}\n        <ExpandableSection\n          isIndented={true}\n          isExpanded={isExpandedExistingPermissionSection}\n          onToggle={onChangeExpandedExistingPermissionsSection}\n          toggleContent={\n            <div>\n              <span>{t(\"review_existing_title\")}</span>{\" \"}\n              <Badge isRead={existingAcls.length == 0 ? true : false}>\n                {existingAcls.length}\n              </Badge>\n            </div>\n          }\n        >\n          <ViewAccountDetails\n            accountId={selectedAccount}\n            existingAcls={existingAcls}\n            onRemoveAcl={onRemoveAcls}\n          />\n        </ExpandableSection>\n        <FormGroup>\n          <ExpandableSection\n            toggleText={t(\"assign_permissions_title\")}\n            isIndented={true}\n            isExpanded={isExpandedAssignPermissionsSection}\n            onToggle={onChangeExpandedAssignPermissionsSection}\n          >\n            <FormGroup>\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  {selectedAccount === \"All accounts\"\n                    ? t(\"assign_permissions_all_description\")\n                    : t(\"assign_permissions_description\", {\n                        value: accountDisplayName,\n                      })}\n                </Text>\n                {newAcls && newAcls?.length > 0 && (\n                  <Text component={TextVariants.small}>\n                    {t(\"all_fields_required\")}\n                  </Text>\n                )}\n              </TextContent>\n            </FormGroup>\n            <AssignPermissions\n              setIsNameValid={setIsNameValid}\n              submitted={submitted}\n              onAddManualPermissions={onAddManualPermissions}\n              onAddProduceTopicShortcut={onAddProduceTopicShortcut}\n              onConsumeTopicShortcut={onConsumeTopicShortcut}\n              onManageAccessShortcut={onManageAccessShortcut}\n              onDelete={onDeleteNewAcl}\n              topicNameOptions={topicFilter}\n              consumerGroupNameOptions={consumerGroupsFilter}\n              addedAcls={newAcls}\n              kafkaName={kafkaName}\n              setAddedAcls={setNewAcls}\n            />\n          </ExpandableSection>\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const EmptyStateInitialLoading: VoidFunctionComponent = () => {\n  return (\n    <PageSection isFilled={true}>\n      <EmptyState variant={EmptyStateVariant.xs}>\n        <EmptyStateBody data-chromatic=\"ignore\">\n          <AppServicesLoading />\n        </EmptyStateBody>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  PageSection,\n  Title,\n} from \"@patternfly/react-core\";\nimport { TachometerAltIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\n\nexport const EmptyStateMetricsUnavailable: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <PageSection isFilled={true}>\n      <EmptyState variant={EmptyStateVariant.xs}>\n        <EmptyStateIcon icon={TachometerAltIcon} />\n        <Title headingLevel=\"h3\" size=\"lg\">\n          {t(\"metrics:empty_state_no_data_title\")}\n        </Title>\n        <EmptyStateBody>{t(\"metrics:empty_state_no_data_body\")}</EmptyStateBody>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import { Grid, GridItem, PageSection } from \"@patternfly/react-core\";\nimport type { FunctionComponent, ReactElement } from \"react\";\n\ntype MetricsLayoutProps = {\n  metricsLagAlert: ReactElement;\n  topicsKpi: ReactElement;\n  topicPartitionsKpi: ReactElement;\n  consumerGroupKpi: ReactElement;\n  diskSpaceMetrics: ReactElement;\n  topicMetrics: ReactElement;\n};\nexport const MetricsLayout: FunctionComponent<MetricsLayoutProps> = ({\n  metricsLagAlert,\n  topicsKpi,\n  topicPartitionsKpi,\n  consumerGroupKpi,\n  diskSpaceMetrics,\n  topicMetrics,\n}) => {\n  return (\n    <PageSection\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n      padding={{ default: \"noPadding\" }}\n      className={\n        \"pf-u-px-lg-on-xl pf-u-pt-sm-on-xl pf-u-pb-lg-on-xl pf-u-px-md pf-u-pb-md\"\n      }\n    >\n      <Grid hasGutter>\n        <GridItem>{metricsLagAlert}</GridItem>\n        <GridItem sm={4}>{topicsKpi}</GridItem>\n        <GridItem sm={4}>{topicPartitionsKpi}</GridItem>\n        <GridItem sm={4}>{consumerGroupKpi}</GridItem>\n        <GridItem lg={6}>{diskSpaceMetrics}</GridItem>\n        <GridItem lg={6}>{topicMetrics}</GridItem>\n      </Grid>\n    </PageSection>\n  );\n};\n","import { CardBody, Bullseye, Spinner } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\n\nexport const CardBodyLoading: FunctionComponent = () => (\n  <CardBody>\n    <Bullseye>\n      <Spinner isSVG data-chromatic=\"ignore\" />\n    </Bullseye>\n  </CardBody>\n);\n","import { DurationOptions } from \"./types\";\n\nexport const timeIntervalsMapping = {\n  [DurationOptions.Last5minutes]: {\n    interval: 1 * 60,\n    ticks: 6,\n    showDate: false,\n  },\n  [DurationOptions.Last15minutes]: {\n    interval: 3 * 60,\n    ticks: 6,\n    showDate: false,\n  },\n  [DurationOptions.Last30minutes]: {\n    interval: 5 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last1hour]: { interval: 10 * 60, ticks: 6, showDate: false },\n  [DurationOptions.Last3hours]: {\n    interval: 30 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last6hours]: {\n    interval: 1 * 60 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last12hours]: {\n    interval: 2 * 60 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last24hours]: {\n    interval: 4 * 60 * 60,\n    ticks: 7,\n    showDate: true,\n  },\n  [DurationOptions.Last2days]: {\n    interval: 8 * 60 * 60,\n    ticks: 7,\n    showDate: true,\n  },\n  [DurationOptions.Last7days]: {\n    interval: 24 * 60 * 60,\n    ticks: 8,\n    showDate: true,\n  },\n} as const;\n\nexport const chartHeight = 350;\nexport const chartPadding = {\n  bottom: 110, // Adjusted to accomodate legend\n  left: 120,\n  right: 40,\n  top: 10,\n};\n","import { Flex, FlexItem, Skeleton } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ChartSkeletonLoader: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <Flex direction={{ default: \"column\" }} data-chromatic=\"ignore\">\n      <FlexItem>\n        <Skeleton\n          height={`${chartHeight - chartPadding.bottom}px`}\n          screenreaderText={t(\"common:skeleton_loader_screenreader_text\")}\n        />\n      </FlexItem>\n      <FlexItem>\n        <Skeleton height={`${chartPadding.bottom / 2 - 12.5}px`} width=\"20%\" />\n      </FlexItem>\n      <FlexItem>\n        <Skeleton height={`${chartPadding.bottom / 2 - 12.5}px`} width=\"40%\" />\n      </FlexItem>\n    </Flex>\n  );\n};\n","import type { RefObject } from \"react\";\nimport { useEffect, useLayoutEffect, useRef, useState } from \"react\";\n\nexport function useChartWidth(): [RefObject<HTMLDivElement>, number] {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number>(0);\n\n  const handleResize = () =>\n    containerRef.current && setWidth(containerRef.current.clientWidth);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return [containerRef, width];\n}\n","import byteSize from \"byte-size\";\nimport { fromUnixTime, sub } from \"date-fns\";\nimport { formatInTimeZone } from \"date-fns-tz\";\nimport { timeIntervalsMapping } from \"../consts\";\nimport type { DurationOptions } from \"../types\";\n\nexport function formatBytes(bytes: number): string {\n  return byteSize(bytes, { units: \"iec\" }).toString();\n}\n\nexport const shouldShowDate = (timeDuration: DurationOptions): boolean => {\n  return timeIntervalsMapping[timeDuration].showDate;\n};\n\nexport const dateToChartValue = (\n  timestamp: number,\n  { showDate }: { showDate: boolean } = { showDate: false }\n): string => {\n  const date = fromUnixTime(timestamp / 1000);\n  return formatInTimeZone(date, \"utc\", showDate ? \"HH:mm'\\n'MMM dd\" : \"HH:mm\");\n};\n\nexport function timestampsToTicks(\n  timestamps: string[],\n  duration: DurationOptions\n): number[] {\n  const allTimestamps = [...timestamps];\n  allTimestamps.sort();\n  const mostRecentTs =\n    parseInt(allTimestamps[allTimestamps.length - 1]) || Date.now();\n  return new Array(\n    Math.max(timeIntervalsMapping[duration].ticks, allTimestamps.length)\n  )\n    .fill(mostRecentTs)\n    .map((d: number, index) =>\n      sub(new Date(d), {\n        seconds: timeIntervalsMapping[duration].interval * index,\n      }).getTime()\n    );\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartArea,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartThreshold,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_black_500,\n  chart_color_blue_300,\n} from \"@patternfly/react-tokens\";\nimport type { ReactElement, VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { DurationOptions, TimeSeriesMetrics } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport { dateToChartValue, shouldShowDate, timestampsToTicks } from \"./utils\";\n\ntype ChartData = {\n  areaColor: string;\n  softLimitColor: string;\n  area: BrokerChartData[];\n  softLimit: BrokerChartData[];\n};\n\ntype BrokerChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol?: {\n    fill?: string;\n    type?: string;\n  };\n};\n\ntype ChartLinearWithOptionalLimitProps = {\n  metrics: TimeSeriesMetrics;\n  duration: DurationOptions;\n  chartName: string;\n  xLabel?: string;\n  yLabel?: string;\n  usageLimit?: number;\n  formatValue?: (d: number) => string;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\n\nexport const ChartLinearWithOptionalLimit: VoidFunctionComponent<\n  ChartLinearWithOptionalLimitProps\n> = ({\n  metrics,\n  duration,\n  chartName,\n  xLabel,\n  yLabel,\n  usageLimit,\n  formatValue = (d) => `${d}`,\n  isLoading,\n  emptyState,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getChartData(\n    metrics,\n    duration,\n    chartName,\n    t(\"metrics:limit\"),\n    usageLimit\n  );\n\n  const hasMetrics = Object.keys(metrics).length > 0;\n  const showDate = shouldShowDate(duration);\n\n  switch (true) {\n    case isLoading:\n      return <ChartSkeletonLoader />;\n    case !hasMetrics:\n      return emptyState;\n    default: {\n      const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n        `${datum.name}: ${formatValue(datum.y)}`;\n      return (\n        <div ref={containerRef}>\n          <Chart\n            ariaTitle={chartName}\n            containerComponent={\n              <ChartVoronoiContainer labels={labels} constrainToVisibleArea />\n            }\n            legendPosition=\"bottom-left\"\n            legendComponent={\n              <ChartLegend\n                orientation={\"horizontal\"}\n                data={legendData}\n                itemsPerRow={itemsPerRow}\n              />\n            }\n            height={chartHeight}\n            padding={chartPadding}\n            themeColor={ChartThemeColor.multiUnordered}\n            width={width}\n            legendAllowWrap={true}\n          >\n            <ChartAxis\n              label={\"\\n\" + (xLabel || t(\"metrics:axis-label-time\") || \"\")}\n              tickValues={tickValues}\n              tickFormat={(d: number) =>\n                dateToChartValue(d, {\n                  showDate,\n                })\n              }\n            />\n            <ChartAxis\n              label={\"\\n\\n\\n\\n\\n\" + (yLabel || chartName)}\n              dependentAxis\n              tickFormat={formatValue}\n            />\n            <ChartGroup>\n              {chartData.map((value, index) => (\n                <ChartArea\n                  key={`chart-area-${index}`}\n                  data={value.area}\n                  style={{\n                    data: {\n                      // TODO: check if this is needed\n                      // stroke: value.color,\n                    },\n                  }}\n                />\n              ))}\n            </ChartGroup>\n            <ChartThreshold\n              key={`chart-softlimit`}\n              data={chartData[0].softLimit}\n              style={{\n                data: {\n                  stroke: chartData[0].softLimitColor,\n                },\n              }}\n            />\n          </Chart>\n        </div>\n      );\n    }\n  }\n};\n\nfunction getChartData(\n  metrics: TimeSeriesMetrics,\n  duration: number,\n  lineLabel: string,\n  limitLabel: string,\n  usageLimit?: number\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData = [\n    usageLimit\n      ? {\n          name: limitLabel,\n          symbol: { fill: chart_color_black_500.value, type: \"threshold\" },\n        }\n      : undefined,\n    { name: lineLabel, symbol: { fill: chart_color_blue_300.value } },\n  ].filter((d) => !!d) as Array<LegendData>;\n\n  const areaColor = chart_color_blue_300.value;\n  const softLimitColor = chart_color_black_500.value;\n  const chartData: Array<ChartData> = [];\n  const area: Array<BrokerChartData> = [];\n  const softLimit: Array<BrokerChartData> = [];\n\n  Object.entries(metrics).map(([timestamp, bytes]) => {\n    area.push({ name: lineLabel, x: parseInt(timestamp, 10), y: bytes });\n  });\n  chartData.push({ areaColor, softLimitColor, area, softLimit });\n\n  const tickValues = timestampsToTicks(Object.keys(metrics), duration);\n\n  if (usageLimit) {\n    tickValues.forEach((timestamp) =>\n      softLimit.push({\n        name: limitLabel,\n        x: timestamp,\n        y: usageLimit,\n      })\n    );\n  }\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartArea,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_cyan_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { PartitionBytesMetric } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\nconst colors = [chart_color_cyan_300.value, chart_color_blue_300.value];\n\ntype ChartData = {\n  color: string;\n  area: PartitionChartData[];\n};\n\ntype PartitionChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n};\n\nexport type ChartLogSizePerPartitionProps = {\n  partitions: PartitionBytesMetric;\n  topic: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\nexport const ChartLogSizePerPartition: FunctionComponent<\n  ChartLogSizePerPartitionProps\n> = ({ partitions, topic, duration, isLoading, emptyState }) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getChartData(\n    partitions,\n    topic,\n    duration\n  );\n\n  const hasMetrics = Object.keys(partitions).length > 0;\n\n  const showDate = shouldShowDate(duration);\n\n  return (\n    <div ref={containerRef}>\n      {(() => {\n        switch (true) {\n          case isLoading:\n            return <ChartSkeletonLoader />;\n          case !hasMetrics:\n            return emptyState;\n          default: {\n            const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n              `${datum.name}: ${formatBytes(datum.y)}`;\n\n            return (\n              <Chart\n                ariaTitle={t(\"metrics:log_size_per_partition\")}\n                containerComponent={\n                  <ChartVoronoiContainer\n                    labels={labels}\n                    constrainToVisibleArea\n                  />\n                }\n                legendPosition=\"bottom-left\"\n                legendComponent={\n                  <ChartLegend data={legendData} itemsPerRow={itemsPerRow} />\n                }\n                height={chartHeight}\n                padding={chartPadding}\n                themeColor={ChartThemeColor.multiOrdered}\n                width={width}\n                legendAllowWrap={true}\n              >\n                <ChartAxis\n                  label={\"\\n\" + t(\"metrics:axis-label-time\")}\n                  tickValues={tickValues}\n                  tickFormat={(d: number) =>\n                    dateToChartValue(d, {\n                      showDate,\n                    })\n                  }\n                />\n                <ChartAxis\n                  label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n                  dependentAxis\n                  tickFormat={formatBytes}\n                />\n                <ChartGroup>\n                  {chartData.map((value, index) => (\n                    <ChartArea key={`chart-area-${index}`} data={value.area} />\n                  ))}\n                </ChartGroup>\n              </Chart>\n            );\n          }\n        }\n      })()}\n    </div>\n  );\n};\n\nexport function getChartData(\n  partitions: PartitionBytesMetric,\n  topic: string | undefined,\n  duration: number\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n  Object.entries(partitions).map(([partition, dataMap], index) => {\n    const name = topic ? `${topic}: ${partition}` : partition;\n    const color = colors[index];\n    legendData.push({\n      name,\n    });\n    const area: Array<PartitionChartData> = [];\n\n    Object.entries(dataMap).map(([timestamp, value]) => {\n      area.push({ name, x: parseInt(timestamp, 10), y: value });\n    });\n    chartData.push({ color, area });\n  });\n\n  const allTimestamps = Array.from(\n    new Set(Object.values(partitions).flatMap((m) => Object.keys(m)))\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\ntype ChartPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ChartPopover: VoidFunctionComponent<ChartPopoverProps> = ({\n  title,\n  description,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Popover\n      aria-label={title}\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon\n        aria-label={t(\"metrics:chart-popover-icon-screenreader-text\", {\n          title,\n        })}\n      />\n    </Popover>\n  );\n};\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartLine,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_green_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding, timeIntervalsMapping } from \"../consts\";\nimport type { TimeSeriesMetrics } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\ntype ChartData = {\n  color: string;\n  line: TopicChartData[];\n};\n\ntype TopicChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol: {\n    fill: string;\n    type?: string;\n  };\n};\n\ntype ChartTotalBytesProps = {\n  incomingTopicsData: TimeSeriesMetrics;\n  outgoingTopicsData: TimeSeriesMetrics;\n  selectedTopic: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\nexport const ChartTotalBytes: FunctionComponent<ChartTotalBytesProps> = ({\n  incomingTopicsData,\n  outgoingTopicsData,\n  selectedTopic,\n  duration,\n  isLoading,\n  emptyState,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getBytesChartData(\n    incomingTopicsData,\n    outgoingTopicsData,\n    duration,\n    selectedTopic\n      ? t(\"metrics:incoming_bytes\", {\n          topic: selectedTopic,\n        })\n      : t(\"metrics:incoming_bytes_all_topics\"),\n    selectedTopic\n      ? t(\"metrics:outgoing_bytes\", {\n          topic: selectedTopic,\n        })\n      : t(\"metrics:outgoing_bytes_all_topics\")\n  );\n\n  const hasMetrics =\n    Object.keys(incomingTopicsData).length > 0 ||\n    Object.keys(outgoingTopicsData).length > 0;\n\n  const showDate = shouldShowDate(duration);\n\n  switch (true) {\n    case isLoading:\n      return <ChartSkeletonLoader />;\n    case !hasMetrics:\n      return emptyState;\n    default: {\n      const labels: ChartVoronoiContainerProps[\"labels\"] =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n        ({ datum }) => `${datum.name}: ${formatBytes(datum.y)}`;\n      return (\n        <div ref={containerRef}>\n          <Chart\n            ariaTitle={t(\"metrics:total_bytes\")}\n            containerComponent={\n              <ChartVoronoiContainer labels={labels} constrainToVisibleArea />\n            }\n            legendAllowWrap={true}\n            legendPosition=\"bottom-left\"\n            legendComponent={\n              <ChartLegend data={legendData} itemsPerRow={itemsPerRow} />\n            }\n            height={chartHeight}\n            padding={chartPadding}\n            themeColor={ChartThemeColor.multiUnordered}\n            width={width}\n          >\n            <ChartAxis\n              label={\"\\n\" + t(\"metrics:axis-label-time\")}\n              tickValues={tickValues}\n              tickCount={timeIntervalsMapping[duration].ticks}\n              tickFormat={(d: number) =>\n                dateToChartValue(d, {\n                  showDate,\n                })\n              }\n            />\n            <ChartAxis\n              label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n              dependentAxis\n              tickFormat={formatBytes}\n            />\n            <ChartGroup>\n              {chartData.map((value, index) => (\n                <ChartLine\n                  key={`chart-line-${index}`}\n                  data={value.line}\n                  style={{\n                    data: {\n                      stroke: value.color,\n                    },\n                  }}\n                />\n              ))}\n            </ChartGroup>\n          </Chart>\n        </div>\n      );\n    }\n  }\n};\n\nexport function getBytesChartData(\n  incomingTopic: TimeSeriesMetrics,\n  outgoingTopic: TimeSeriesMetrics,\n  duration: number,\n  incomingTopicName: string,\n  outgoingTopicName: string\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n\n  const incomingLine = metricsToLine(incomingTopic, incomingTopicName);\n  if (incomingLine.length > 0) {\n    const color = chart_color_blue_300.value;\n    chartData.push({ color, line: incomingLine });\n    legendData.push({\n      name: incomingTopicName,\n      symbol: {\n        fill: color,\n      },\n    });\n  }\n\n  const outgoingLine = metricsToLine(outgoingTopic, outgoingTopicName);\n  if (outgoingLine.length > 0) {\n    const color = chart_color_green_300.value;\n    chartData.push({ color, line: outgoingLine });\n    legendData.push({\n      name: outgoingTopicName,\n      symbol: {\n        fill: color,\n      },\n    });\n  }\n  const allTimestamps = Array.from(\n    new Set([...Object.keys(incomingTopic), ...Object.keys(outgoingTopic)])\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n\nexport function metricsToLine(\n  metrics: TimeSeriesMetrics,\n  name: string\n): Array<TopicChartData> {\n  const line: Array<TopicChartData> = [];\n\n  Object.entries(metrics).map(([timestamp, bytes]) => {\n    line.push({ name, x: parseInt(timestamp, 10), y: bytes });\n  });\n  return line;\n}\n","import {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateNoMetricsData: FunctionComponent = () => {\n  const { t } = useTranslation([\"metrics\"]);\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon\n        icon={ExclamationTriangleIcon}\n        color=\"var(--pf-global--warning-color--100)\"\n      />\n      <Title headingLevel=\"h3\" size=\"md\">\n        {t(\"metric_not_available\")}\n      </Title>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateNoMetricsDataForSelection: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_metrics_data_title\")}\n      </Title>\n      <EmptyStateBody>\n        {t(\"metrics:empty_state_no_metrics_data_body\")}\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { WrenchIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\ntype EmptyStateNoTopicsProps = {\n  onCreateTopic?: () => void;\n};\nexport const EmptyStateNoTopics: FunctionComponent<EmptyStateNoTopicsProps> = ({\n  onCreateTopic,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={WrenchIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_topics_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"metrics:empty_state_no_topics_body\")}</EmptyStateBody>\n      {onCreateTopic && (\n        <Button\n          ouiaId=\"button-create\"\n          variant=\"primary\"\n          onClick={onCreateTopic}\n        >\n          {t(\"metrics:empty_state_no_topics_create_topic\")}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const EmptyStateNoTopicSelected: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={FilterIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_filter_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"metrics\"}\n          i18nKey={\"empty_state_no_filter_body\"}\n          components={{ bold: <strong /> }}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  ToolbarItem,\n  Select,\n  SelectVariant,\n  SelectGroup,\n  SelectOption,\n} from \"@patternfly/react-core\";\nimport { DurationOptions } from \"../types\";\n\nexport const DurationOptionsMap = {\n  [DurationOptions.Last5minutes]: \"Last 5 minutes\",\n  [DurationOptions.Last15minutes]: \"Last 15 minutes\",\n  [DurationOptions.Last30minutes]: \"Last 30 minutes\",\n  [DurationOptions.Last1hour]: \"Last 1 hour\",\n  [DurationOptions.Last3hours]: \"Last 3 hours\",\n  [DurationOptions.Last6hours]: \"Last 6 hours\",\n  [DurationOptions.Last12hours]: \"Last 12 hours\",\n  [DurationOptions.Last24hours]: \"Last 24 hours\",\n  [DurationOptions.Last2days]: \"Last 2 days\",\n  [DurationOptions.Last7days]: \"Last 7 days\",\n} as const;\n\ntype FilterByTimeProps = {\n  duration: DurationOptions;\n  onDurationChange: (value: DurationOptions) => void;\n  keyText: string;\n  ariaLabel: string;\n  disableToolbar: boolean;\n};\n\nexport const FilterByTime: VoidFunctionComponent<FilterByTimeProps> = ({\n  duration,\n  keyText,\n  ariaLabel,\n  disableToolbar,\n  onDurationChange,\n}) => {\n  const [isTimeSelectOpen, setIsTimeSelectOpen] = useState<boolean>(false);\n\n  const onTimeToggle = (isTimeSelectOpen: boolean) => {\n    setIsTimeSelectOpen(isTimeSelectOpen);\n  };\n\n  const onTimeSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    const mapping = Object.entries(DurationOptionsMap).find(\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ([_, value]) => value === selection\n    );\n    if (mapping) {\n      onDurationChange(parseInt(mapping[0], 10) as DurationOptions);\n    }\n    setIsTimeSelectOpen(false);\n  };\n\n  const timeOptions = (keyText: string) => [\n    <SelectGroup label=\"Relative time ranges\" key={`${keyText}-group`}>\n      {Object.values(DurationOptionsMap).map((label, idx) => (\n        <SelectOption key={`${keyText}-${idx}`} value={label} />\n      ))}\n    </SelectGroup>,\n  ];\n  const ariaId = `filter-by-time-${Date.now()}`;\n  return (\n    <ToolbarItem>\n      <label hidden id={ariaId}>\n        {ariaLabel}\n      </label>\n      <Select\n        variant={SelectVariant.single}\n        aria-labelledby={ariaId}\n        onToggle={onTimeToggle}\n        onSelect={onTimeSelect}\n        selections={DurationOptionsMap[duration]}\n        isOpen={isTimeSelectOpen}\n        isDisabled={disableToolbar}\n      >\n        {timeOptions(keyText)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport \"./FilterByTopic.css\";\n\nconst widths = {\n  default: \"150px\",\n  sm: \"150px\",\n  md: \"150px\",\n  lg: \"200px\",\n  xl: \"200px\",\n  \"2xl\": \"200px\",\n};\n\ntype FilterByTopicProps = {\n  selectedTopic: string | undefined;\n  topicList: string[];\n  disableToolbar: boolean;\n  ariaLabel: string;\n  onSetSelectedTopic: (value: string | undefined) => void;\n};\n\nexport const FilterByTopic: VoidFunctionComponent<FilterByTopicProps> = ({\n  selectedTopic,\n  topicList = [],\n  disableToolbar,\n  ariaLabel,\n  onSetSelectedTopic,\n}) => {\n  const { t } = useTranslation();\n  const [isTopicSelectOpen, setIsTopicSelectOpen] = useState<boolean>(false);\n  const [selectKey, setSelectKey] = useState(Math.random());\n\n  useEffect(() => setSelectKey(Math.random()), [topicList]);\n\n  const allTopicsLabel = t(\"metrics:all_topics\");\n\n  const onTopicToggle = (isTopicSelectOpen: boolean) => {\n    setIsTopicSelectOpen(isTopicSelectOpen);\n  };\n\n  const onTopicSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    selection !== allTopicsLabel\n      ? onSetSelectedTopic(selection as string)\n      : onSetSelectedTopic(undefined);\n    setIsTopicSelectOpen(false);\n  };\n\n  const onTopicFilter = (_: unknown, textInput: string) => {\n    const filteredTopics =\n      topicList.filter((topic) => topic.indexOf(textInput) != -1) || [];\n    return topicOptions(filteredTopics);\n  };\n\n  const topicOptions = (topicList: string[]) => [\n    <SelectOption key={\"topic-filter-0\"} value={allTopicsLabel} />,\n    <SelectGroup label=\"Filter by topic\" key=\"topic-filter-group\">\n      {topicList.map((topic, index) => (\n        <SelectOption\n          key={`topic-filter-${index + 1}`}\n          value={topic}\n          title={topic}\n        />\n      ))}\n    </SelectGroup>,\n  ];\n\n  const isDisabled = disableToolbar || topicList.length === 0;\n  const ariaId = `filter-by-topic-${Date.now()}`;\n\n  return (\n    <ToolbarItem widths={widths}>\n      <label hidden id={ariaId}>\n        {ariaLabel}\n      </label>\n      <Select\n        key={selectKey}\n        variant={SelectVariant.single}\n        onToggle={onTopicToggle}\n        onSelect={onTopicSelect}\n        selections={selectedTopic || allTopicsLabel}\n        isOpen={isTopicSelectOpen}\n        placeholderText={\n          <>\n            <FilterIcon /> {allTopicsLabel}\n          </>\n        }\n        aria-labelledby={ariaId}\n        onFilter={onTopicFilter}\n        isGrouped\n        hasInlineFilter\n        isDisabled={isDisabled}\n        position=\"left\"\n        className={\"appserv-metrics-filterbytopic\"}\n      >\n        {topicOptions(topicList)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import { ToolbarItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate, RefreshButton } from \"@rhoas/app-services-ui-components\";\n\nexport type ToolbarRefreshProps = {\n  isRefreshing: boolean;\n  lastUpdated: Date | undefined;\n  ariaLabel: string;\n  onRefresh: () => void;\n};\n\nexport const ToolbarRefresh: VoidFunctionComponent<ToolbarRefreshProps> = ({\n  isRefreshing,\n  lastUpdated = new Date(),\n  ariaLabel,\n  onRefresh,\n}) => {\n  const { t } = useTranslation([\"metrics\"]);\n\n  return (\n    <>\n      <ToolbarItem>\n        <RefreshButton\n          ariaLabel={ariaLabel}\n          onClick={onRefresh}\n          isRefreshing={isRefreshing}\n        />\n      </ToolbarItem>\n      <ToolbarItem\n        alignment={{ default: \"alignRight\" }}\n        style={{ color: \"var(--pf-global--Color--200)\" }}\n      >\n        <div className=\"pf-u-font-size-xs\">\n          {isRefreshing ? (\n            t(\"metrics:refreshing\")\n          ) : (\n            <>\n              {t(\"metrics:last-refresh\")}\n              <br />\n              <FormatDate date={lastUpdated} format=\"distanceToNow\" />\n              {t(\"metrics:last-refresh-distance\")}\n            </>\n          )}\n        </div>\n      </ToolbarItem>\n    </>\n  );\n};\n","import {\n  CardHeader,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { DurationOptions } from \"../types\";\nimport { FilterByTime } from \"./FilterByTime\";\nimport { FilterByTopic } from \"./FilterByTopic\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarRefresh } from \"./ToolbarRefresh\";\n\ntype ToolbarTopicsMetricsProps = {\n  title: string;\n  selectedTopic: string | undefined;\n  topicList: string[];\n  duration: DurationOptions;\n  isDisabled: boolean;\n  onSetTimeDuration: (value: DurationOptions) => void;\n  onSetSelectedTopic: (value: string | undefined) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\nexport const ToolbarTopicsMetrics: FunctionComponent<\n  ToolbarTopicsMetricsProps\n> = ({\n  title,\n  selectedTopic,\n  topicList,\n  duration,\n  isDisabled,\n  isRefreshing,\n  lastUpdated,\n  onSetTimeDuration,\n  onRefresh,\n  onSetSelectedTopic,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <CardHeader>\n        <CardTitle component=\"h2\">{title}</CardTitle>\n      </CardHeader>\n      <Divider />\n      <Toolbar>\n        <ToolbarContent>\n          <FilterByTopic\n            ariaLabel={t(\"metrics:topics_filter_by_topic\")}\n            selectedTopic={selectedTopic}\n            onSetSelectedTopic={onSetSelectedTopic}\n            topicList={topicList}\n            disableToolbar={isDisabled}\n          />\n          <FilterByTime\n            ariaLabel={t(\"metrics:topics_filter_by_time\")}\n            duration={duration}\n            onDurationChange={onSetTimeDuration}\n            disableToolbar={isDisabled}\n            keyText={\"topic-metrics-time-filter\"}\n          />\n          <ToolbarRefresh\n            isRefreshing={isRefreshing}\n            lastUpdated={lastUpdated}\n            onRefresh={onRefresh}\n            ariaLabel={t(\"metrics:topics_refresh\")}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <Divider />\n    </>\n  );\n};\n","import { Card, CardBody, CardTitle, Divider } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type {\n  DurationOptions,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { CardBodyLoading } from \"./CardBodyLoading\";\nimport { ChartLinearWithOptionalLimit } from \"./ChartLinearWithOptionalLimit\";\nimport { ChartLogSizePerPartition } from \"./ChartLogSizePerPartition\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { ChartTotalBytes } from \"./ChartTotalBytes\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\nimport { EmptyStateNoMetricsDataForSelection } from \"./EmptyStateNoMetricsDataForSelection\";\nimport { EmptyStateNoTopics } from \"./EmptyStateNoTopics\";\nimport { EmptyStateNoTopicSelected } from \"./EmptyStateNoTopicSelected\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarTopicsMetrics } from \"./ToolbarTopicsMetrics\";\n\ntype CardTopicsMetricsProps = {\n  topics: string[];\n  incomingTopicsData: TimeSeriesMetrics;\n  outgoingTopicsData: TimeSeriesMetrics;\n  partitions: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n  duration: DurationOptions;\n  backendUnavailable: boolean;\n  isInitialLoading: boolean;\n  isLoading: boolean;\n  isJustCreated: boolean;\n  selectedTopic: string | undefined;\n  onCreateTopic: () => void;\n  onSelectedTopic: (topic: string | undefined) => void;\n  onDurationChange: (duration: DurationOptions) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\n\nexport const CardTopicsMetrics: FunctionComponent<CardTopicsMetricsProps> = ({\n  topics,\n  incomingTopicsData,\n  outgoingTopicsData,\n  incomingMessageRate,\n  selectedTopic,\n  duration,\n  partitions,\n  backendUnavailable,\n  isInitialLoading,\n  isLoading,\n  isRefreshing,\n  isJustCreated,\n  lastUpdated,\n  onCreateTopic,\n  onRefresh,\n  onSelectedTopic,\n  onDurationChange,\n}) => {\n  const { t } = useTranslation();\n  const noTopics = topics.length === 0;\n  const selectedTopicNotInList =\n    selectedTopic !== undefined &&\n    topics.find((t) => t === selectedTopic) === undefined;\n  const chartEmptyState = selectedTopicNotInList ? (\n    <EmptyStateNoMetricsDataForSelection />\n  ) : (\n    <EmptyStateNoMetricsData />\n  );\n  return (\n    <Card data-testid={\"metrics-topics\"}>\n      <ToolbarTopicsMetrics\n        title={t(\"metrics:topic_metrics\")}\n        duration={duration}\n        onSetTimeDuration={onDurationChange}\n        isDisabled={\n          backendUnavailable || isJustCreated || noTopics || isLoading\n        }\n        isRefreshing={isRefreshing}\n        selectedTopic={selectedTopic}\n        onSetSelectedTopic={onSelectedTopic}\n        onRefresh={onRefresh}\n        topicList={topics}\n        lastUpdated={lastUpdated}\n      />\n      {(() => {\n        switch (true) {\n          case isInitialLoading:\n            return <CardBodyLoading />;\n\n          case backendUnavailable:\n            return (\n              <CardBody>\n                <EmptyStateNoMetricsData />\n              </CardBody>\n            );\n\n          case isJustCreated && !noTopics:\n            return (\n              <CardBody>\n                <EmptyStateNoTopics />\n              </CardBody>\n            );\n\n          case isJustCreated && noTopics:\n            return (\n              <CardBody>\n                <EmptyStateNoTopics onCreateTopic={onCreateTopic} />\n              </CardBody>\n            );\n\n          case selectedTopic !== undefined:\n            return (\n              <>\n                <TotalBytesTitle />\n                <CardBody>\n                  <ChartTotalBytes\n                    incomingTopicsData={incomingTopicsData}\n                    outgoingTopicsData={outgoingTopicsData}\n                    selectedTopic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <IncomingMessageRate />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"metrics:topic_incoming_message_rate\")}\n                    yLabel={t(\"metrics:topic_incoming_message_rate_y_axis\")}\n                    metrics={incomingMessageRate}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <PartitionSizeTitle />\n                <CardBody>\n                  <ChartLogSizePerPartition\n                    partitions={partitions}\n                    topic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n              </>\n            );\n\n          default:\n            return (\n              <>\n                <TotalBytesTitle />\n                <CardBody>\n                  <ChartTotalBytes\n                    incomingTopicsData={incomingTopicsData}\n                    outgoingTopicsData={outgoingTopicsData}\n                    selectedTopic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <IncomingMessageRate />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"metrics:topic_incoming_message_rate\")}\n                    yLabel={t(\"metrics:topic_incoming_message_rate_y_axis\")}\n                    metrics={incomingMessageRate}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <PartitionSizeTitle />\n                <CardBody>\n                  <EmptyStateNoTopicSelected />\n                </CardBody>\n              </>\n            );\n        }\n      })()}\n    </Card>\n  );\n};\n\nconst TotalBytesTitle: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:total_bytes\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:total_bytes_popover_header\")}\n        description={t(\"metrics:topic_metrics_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n\nconst PartitionSizeTitle: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:topic_partition_size\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:topic_partition_size_popover_header\")}\n        description={t(\"metrics:topic_partition_size_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n\nconst IncomingMessageRate: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:topic_incoming_message_rate\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:topic_incoming_message_rate_popover_header\")}\n        description={t(\"metrics:topic_incoming_message_rate_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport {\n  CardHeader,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport { FilterByTime } from \"./FilterByTime\";\nimport type { DurationOptions } from \"../types\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarRefresh } from \"./ToolbarRefresh\";\n\ntype ToolbarKafkaInstanceMetricProps = {\n  title: string;\n  isDisabled: boolean;\n  duration: DurationOptions;\n  onSetTimeDuration: (value: DurationOptions) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\nexport const ToolbarKafkaInstanceMetric: FunctionComponent<\n  ToolbarKafkaInstanceMetricProps\n> = ({\n  title,\n  isDisabled,\n  isRefreshing,\n  lastUpdated,\n  duration,\n  onSetTimeDuration,\n  onRefresh,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <CardHeader>\n        <CardTitle component=\"h2\">{title}</CardTitle>\n      </CardHeader>\n      <Divider />\n      <Toolbar>\n        <ToolbarContent>\n          <FilterByTime\n            ariaLabel={t(\"metrics:kafka_instance_filter_by_time\")}\n            duration={duration}\n            onDurationChange={onSetTimeDuration}\n            keyText={\"kafka-metrics-time-filter\"}\n            disableToolbar={isDisabled}\n          />\n          <ToolbarRefresh\n            isRefreshing={isRefreshing}\n            lastUpdated={lastUpdated}\n            onRefresh={onRefresh}\n            ariaLabel={t(\"metrics:kafka_instance_refresh\")}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <Divider />\n    </>\n  );\n};\n","import { Card, CardBody, CardTitle, Divider } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { DurationOptions, TimeSeriesMetrics } from \"../types\";\nimport { CardBodyLoading } from \"./CardBodyLoading\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { ChartLinearWithOptionalLimit } from \"./ChartLinearWithOptionalLimit\";\nimport { EmptyStateMetricsUnavailable } from \"./EmptyStateMetricsUnavailable\";\nimport { ToolbarKafkaInstanceMetric } from \"./ToolbarKafkaInstanceMetric\";\nimport { formatBytes } from \"./utils\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\n\nexport type CardKafkaInstanceMetricsLimits = {\n  diskSpaceLimit: number;\n  connectionsLimit: number;\n  connectionRateLimit: number;\n};\n\nexport type CardKafkaInstanceMetricsProps = {\n  usedDiskMetrics: TimeSeriesMetrics;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n  duration: DurationOptions;\n  lastUpdated: Date | undefined;\n  backendUnavailable: boolean;\n  isInitialLoading: boolean;\n  isLoading: boolean;\n  isJustCreated: boolean;\n  onDurationChange: (duration: DurationOptions) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\"> &\n  CardKafkaInstanceMetricsLimits;\n\ntype ChartTitleProps = {\n  title: string;\n  helperText: string;\n};\n\nexport const CardKafkaInstanceMetrics: FunctionComponent<\n  CardKafkaInstanceMetricsProps\n> = ({\n  usedDiskMetrics,\n  clientConnectionsMetrics,\n  connectionAttemptRateMetrics,\n  duration,\n  lastUpdated,\n  backendUnavailable,\n  isInitialLoading,\n  isLoading,\n  isRefreshing,\n  isJustCreated,\n  diskSpaceLimit,\n  connectionsLimit,\n  connectionRateLimit,\n  onRefresh,\n  onDurationChange,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  return (\n    <Card data-testid={\"metrics-kafka-instance\"}>\n      <ToolbarKafkaInstanceMetric\n        title={t(\"kafka_instance_metrics\")}\n        duration={duration}\n        lastUpdated={lastUpdated}\n        onSetTimeDuration={onDurationChange}\n        isDisabled={backendUnavailable || isJustCreated || isLoading}\n        isRefreshing={isRefreshing}\n        onRefresh={onRefresh}\n      />\n      {(() => {\n        switch (true) {\n          case isInitialLoading:\n            return <CardBodyLoading />;\n\n          case backendUnavailable:\n            return (\n              <CardBody>\n                <EmptyStateNoMetricsData />\n              </CardBody>\n            );\n\n          case isJustCreated:\n            return (\n              <CardBody>\n                <EmptyStateMetricsUnavailable />\n              </CardBody>\n            );\n\n          default:\n            return (\n              <>\n                <ChartTitle\n                  title={t(\"used_disk_space\")}\n                  helperText={t(\"used_disk_space_help_text\")}\n                />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"used_disk_space\")}\n                    yLabel={t(\"axis-label-bytes\")}\n                    metrics={usedDiskMetrics}\n                    duration={duration}\n                    formatValue={formatBytes}\n                    usageLimit={diskSpaceLimit}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                  />\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"client_connections\")}\n                  helperText={t(\"client_connections_helper_text\")}\n                />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"client_connections\")}\n                    yLabel={t(\"client_connections_y_axis\")}\n                    metrics={clientConnectionsMetrics}\n                    duration={duration}\n                    usageLimit={connectionsLimit}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                  />\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"connection_attempt_rate\")}\n                  helperText={t(\"connection_attempt_rate_help_text\")}\n                />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"connection_attempt_rate\")}\n                    yLabel={t(\"connection_attempt_rate_yaxis\")}\n                    metrics={connectionAttemptRateMetrics}\n                    duration={duration}\n                    usageLimit={connectionRateLimit}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                  />\n                </CardBody>\n              </>\n            );\n        }\n      })()}\n    </Card>\n  );\n};\n\nexport const ChartTitle: FunctionComponent<ChartTitleProps> = ({\n  title,\n  helperText,\n}) => {\n  return (\n    <CardTitle component=\"h3\">\n      {title} <ChartPopover title={title} description={helperText} />\n    </CardTitle>\n  );\n};\n","import {\n  Bullseye,\n  Card,\n  CardBody,\n  CardTitle,\n  Skeleton,\n  Title,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\n\ntype CardKpiProps = {\n  metric: string | number | undefined;\n  name: string;\n  popover: string;\n  isLoading: boolean;\n};\n\nexport const CardKpi: VoidFunctionComponent<CardKpiProps> = ({\n  metric,\n  name,\n  popover,\n  isLoading,\n}) => {\n  return (\n    <Card isFullHeight data-testid={name}>\n      <CardTitle component=\"h3\">\n        {name} <ChartPopover title={name} description={popover} />\n      </CardTitle>\n      <CardBody>\n        {!isLoading &&\n          (metric === undefined ? (\n            <Bullseye>\n              <EmptyStateNoMetricsData />\n            </Bullseye>\n          ) : (\n            <Title\n              headingLevel=\"h3\"\n              size=\"4xl\"\n              aria-valuetext={`${metric} ${name}`}\n            >\n              {metric}\n            </Title>\n          ))}\n        {isLoading && <Skeleton width=\"50px\" shape=\"square\" />}\n      </CardBody>\n    </Card>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Alert, AlertActionCloseButton } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type MetricsLagAlertProps = {\n  isClosed: boolean;\n  onClickClose: () => void;\n};\n\nexport const MetricsLagAlert: VoidFunctionComponent<MetricsLagAlertProps> = ({\n  isClosed,\n  onClickClose,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  if (!isClosed) {\n    return (\n      <Alert\n        isInline\n        variant=\"info\"\n        title={t(\"metrics_lag_title\")}\n        actionClose={<AlertActionCloseButton onClose={onClickClose} />}\n      >\n        <p>{t(\"metrics_lag_description\")}</p>\n      </Alert>\n    );\n  } else {\n    return <> </>;\n  }\n};\n","import {\n  Alert,\n  AlertVariant,\n  Bullseye,\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Skeleton,\n  Text,\n  TextContent,\n  Title,\n} from \"@patternfly/react-core\";\nimport {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\n\ntype PartitionCardProps = {\n  metric: number | undefined;\n  isLoading: boolean;\n  topicPartitionsLimit: number | undefined;\n};\n\nexport const PartitionCard: VoidFunctionComponent<PartitionCardProps> = ({\n  metric,\n  isLoading,\n  topicPartitionsLimit = 0,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Card\n      isFullHeight\n      data-testid={t(\"metrics:metric_kpi_topicPartitions_name\")}\n    >\n      <CardTitle component=\"h3\">\n        {t(\"metrics:metric_kpi_topicPartitions_name\")}{\" \"}\n        <ChartPopover\n          title={t(\"metrics:metric_kpi_topicPartitions_name\")}\n          description={t(\"metrics:metric_kpi_topicPartitions_description\")}\n        />\n      </CardTitle>\n      <CardBody>\n        {!isLoading &&\n          (metric === undefined ? (\n            <Bullseye>\n              <EmptyStateNoMetricsData />\n            </Bullseye>\n          ) : (\n            <>\n              <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                aria-valuetext={`${metric} ${t(\n                  \"metrics:metric_kpi_topicPartitions_name\"\n                )}`}\n              >\n                {metric}{\" \"}\n                {(() => {\n                  if (metric >= topicPartitionsLimit) {\n                    return (\n                      <ExclamationCircleIcon color=\"var(--pf-global--danger-color--100)\" />\n                    );\n                  } else if (metric >= topicPartitionsLimit * 0.95) {\n                    return (\n                      <ExclamationTriangleIcon color=\"var(--pf-global--warning-color--100)\" />\n                    );\n                  } else {\n                    return \"\";\n                  }\n                })()}\n              </Title>\n              <TextContent>\n                <Text>\n                  {t(\"metrics:partition_limit\", {\n                    topic: topicPartitionsLimit,\n                  })}\n                </Text>\n              </TextContent>\n            </>\n          ))}\n        {isLoading && <Skeleton width=\"50px\" shape=\"square\" />}\n      </CardBody>\n      {(() => {\n        if (metric && metric >= topicPartitionsLimit) {\n          return (\n            <CardFooter>\n              <Alert\n                isExpandable\n                isInline\n                variant={AlertVariant.danger}\n                title={t(\"metrics:partition_limit_reached_title\")}\n              >\n                <p>{t(\"metrics:partition_limit_reached_description_1\")}</p>\n                <p>{t(\"metrics:partition_limit_reached_description_2\")}</p>\n              </Alert>\n            </CardFooter>\n          );\n        } else if (metric && metric >= topicPartitionsLimit * 0.95) {\n          return (\n            <CardFooter>\n              <Alert\n                role={\"alert\"}\n                isExpandable\n                isInline\n                variant={AlertVariant.warning}\n                title={t(\"metrics:partition_limit_approaching_title\")}\n              >\n                <p>\n                  {t(\"metrics:partition_limit_approaching_description_1\", {\n                    limit: topicPartitionsLimit,\n                  })}\n                </p>\n                <p>{t(\"metrics:partition_limit_approaching_description_2\")}</p>\n              </Alert>\n            </CardFooter>\n          );\n        } else {\n          return \" \";\n        }\n      })()}\n    </Card>\n  );\n};\n","import { assign, createMachine } from \"xstate\";\nimport type {\n  GetKafkaInstanceMetricsResponse,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { DurationOptions } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#kafkaInstanceMetrics.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type KafkaInstanceMetricsMachineContext = {\n  lastUpdated: Date | undefined;\n\n  // from the UI elements\n  duration: DurationOptions;\n\n  // from the api\n  usedDiskSpaceMetrics: TimeSeriesMetrics;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n  diskSpaceLimit: number | undefined;\n  connectionsLimit: number | undefined;\n  connectionRateLimit: number | undefined;\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const KafkaInstanceMetricsMachine = createMachine(\n  {\n    predictableActionArguments: true,\n    tsTypes: {} as import(\"./KafkaInstanceMetricsMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as KafkaInstanceMetricsMachineContext,\n      events: {} as\n        | ({ type: \"fetchSuccess\" } & GetKafkaInstanceMetricsResponse)\n        | { type: \"fetchFail\" }\n        // to refresh the data\n        | { type: \"refresh\" }\n        // from the UI elements\n        | { type: \"selectTopic\"; topic: string | undefined }\n        | { type: \"selectDuration\"; duration: DurationOptions },\n    },\n    id: \"kafkaInstanceMetrics\",\n    context: {\n      lastUpdated: undefined,\n      duration: DurationOptions.Last1hour,\n      usedDiskSpaceMetrics: {},\n      clientConnectionsMetrics: {},\n      connectionAttemptRateMetrics: {},\n      diskSpaceLimit: undefined,\n      connectionsLimit: undefined,\n      connectionRateLimit: undefined,\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#kafkaInstanceMetrics.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#kafkaInstanceMetrics.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        on: {\n          refresh: {\n            target: \"refreshing\",\n          },\n          selectDuration: {\n            actions: \"setDuration\",\n            target: \"callApi\",\n          },\n        },\n      },\n      refreshing: {\n        tags: \"refreshing\",\n        entry: \"setFetchTimestamp\",\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"withResponse\",\n          },\n          fetchFail: {\n            // 👀 we silently ignore this happened and go back to the right\n            // state depending on the previous data\n            target: \"withResponse\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setFetchTimestamp: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        lastUpdated: (_context) => new Date(),\n      }),\n      setMetrics: assign((_, event) => {\n        const {\n          usedDiskSpaceMetrics,\n          clientConnectionsMetrics,\n          connectionAttemptRateMetrics,\n          diskSpaceLimit,\n          connectionsLimit,\n          connectionRateLimit,\n        } = event;\n        return {\n          usedDiskSpaceMetrics,\n          clientConnectionsMetrics,\n          connectionAttemptRateMetrics,\n          diskSpaceLimit: diskSpaceLimit * 1024 ** 3, // convert it to GiB\n          connectionsLimit,\n          connectionRateLimit,\n        };\n      }),\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n      setDuration: assign((_context, event) => ({\n        duration: event.duration,\n        usedDiskSpaceMetrics: {},\n        clientConnectionsMetrics: {},\n        connectionAttemptRateMetrics: {},\n      })),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            Object.keys(event.clientConnectionsMetrics).length > 0 ||\n            Object.keys(event.connectionAttemptRateMetrics).length > 0 ||\n            Object.keys(event.usedDiskSpaceMetrics).length > 0\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type KafkaInstanceMetricsMachineType =\n  typeof KafkaInstanceMetricsMachine;\n","import { assign, createMachine } from \"xstate\";\nimport type {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { DurationOptions } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#topicsMetrics.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type TopicsMetricsMachineContext = {\n  lastUpdated: Date | undefined;\n\n  // from the UI elements\n  selectedTopic: string | undefined;\n  duration: DurationOptions;\n\n  // from the api\n  kafkaTopics: string[];\n  metricsTopics: string[];\n  bytesOutgoing: TimeSeriesMetrics;\n  bytesIncoming: TimeSeriesMetrics;\n  bytesPerPartition: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const TopicsMetricsMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./TopicsMetricsMachine.typegen\").Typegen0,\n    predictableActionArguments: true,\n    schema: {\n      context: {} as TopicsMetricsMachineContext,\n      events: {} as  // called when a new kafka id has been specified\n        | ({ type: \"fetchSuccess\" } & GetTopicsMetricsResponse)\n        | { type: \"fetchFail\" }\n\n        // to refresh the data\n        | { type: \"refresh\" }\n\n        // from the UI elements\n        | { type: \"selectTopic\"; topic: string | undefined }\n        | { type: \"selectDuration\"; duration: DurationOptions },\n    },\n    id: \"topicsMetrics\",\n    context: {\n      lastUpdated: undefined,\n\n      // from the UI elements\n      selectedTopic: undefined,\n      duration: DurationOptions.Last1hour,\n\n      // from the api\n      kafkaTopics: [],\n      metricsTopics: [],\n      bytesOutgoing: {},\n      bytesIncoming: {},\n      bytesPerPartition: {},\n      incomingMessageRate: {},\n\n      // how many time did we try a fetch (that combines more api)\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#topicsMetrics.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#topicsMetrics.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        initial: \"idle\",\n        states: {\n          idle: {},\n          refreshing: {\n            tags: \"refreshing\",\n            entry: \"setFetchTimestamp\",\n            invoke: {\n              src: \"api\",\n            },\n            on: {\n              fetchSuccess: {\n                actions: \"setMetrics\",\n                target: \"#topicsMetrics.withResponse\",\n              },\n              fetchFail: {\n                // 👀 we silently ignore this happened\n                target: \"#topicsMetrics.withResponse\",\n              },\n            },\n          },\n        },\n        on: {\n          refresh: {\n            target: \"#topicsMetrics.withResponse.refreshing\",\n          },\n          selectTopic: {\n            actions: \"setTopic\",\n            target: \"callApi\",\n          },\n          selectDuration: {\n            actions: \"setDuration\",\n            target: \"callApi\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setFetchTimestamp: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        lastUpdated: (_context) => new Date(),\n      }),\n      setMetrics: assign((_context, event) => {\n        const {\n          kafkaTopics,\n          metricsTopics,\n          bytesPerPartition,\n          bytesIncoming,\n          bytesOutgoing,\n          incomingMessageRate,\n        } = event;\n        return {\n          kafkaTopics,\n          metricsTopics,\n          bytesPerPartition,\n          bytesIncoming,\n          bytesOutgoing,\n          incomingMessageRate,\n        };\n      }),\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n      setTopic: assign({\n        selectedTopic: (_context, event) => event.topic,\n      }),\n      setDuration: assign({\n        duration: (_, event) => event.duration,\n      }),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            Object.keys(event.bytesIncoming).length > 0 ||\n            Object.keys(event.bytesOutgoing).length > 0 ||\n            Object.keys(event.bytesPerPartition).length > 0 ||\n            Object.keys(event.incomingMessageRate).length > 0\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type TopicsMetricsMachineType = typeof TopicsMetricsMachine;\n","import { assign, createMachine } from \"xstate\";\nimport type { GetMetricsKpiResponse } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#kpis.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type MetricsKpiMachineContext = {\n  // from the api\n  topics: number | undefined;\n  topicPartitions: number | undefined;\n  consumerGroups: number | undefined;\n  topicPartitionsLimit: number | undefined;\n\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const MetricsKpiMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./MetricsKpiMachine.typegen\").Typegen0,\n    predictableActionArguments: true,\n    schema: {\n      context: {} as MetricsKpiMachineContext,\n      events: {} as\n        | { type: \"fetch\" }\n        | ({ type: \"fetchSuccess\" } & GetMetricsKpiResponse)\n        | { type: \"fetchFail\" }\n        | { type: \"refresh\" },\n    },\n    id: \"kpis\",\n    context: {\n      topics: undefined,\n      topicPartitions: undefined,\n      consumerGroups: undefined,\n      topicPartitionsLimit: undefined,\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#kpis.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#kpis.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        initial: \"idle\",\n        states: {\n          idle: {},\n          refreshing: {\n            tags: \"refreshing\",\n            invoke: {\n              src: \"api\",\n            },\n            on: {\n              fetchSuccess: {\n                actions: \"setMetrics\",\n                target: \"#kpis.withResponse\",\n              },\n              fetchFail: {\n                // 👀 we silently ignore this happened\n                target: \"#kpis.withResponse\",\n              },\n            },\n          },\n        },\n        on: {\n          refresh: {\n            target: \"#kpis.withResponse.refreshing\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setMetrics: assign((_, event) => {\n        const {\n          topics,\n          topicPartitions,\n          consumerGroups,\n          topicPartitionsLimit,\n        } = event;\n        return {\n          topics,\n          topicPartitions,\n          consumerGroups,\n          topicPartitionsLimit,\n        };\n      }),\n\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            event.topics !== undefined ||\n            event.topicPartitions !== undefined ||\n            event.consumerGroups !== undefined ||\n            event.topicPartitionsLimit !== undefined\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type MetricsKpiMachineType = typeof MetricsKpiMachine;\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { timeIntervalsMapping } from \"./consts\";\nimport type { KafkaInstanceMetricsMachineType } from \"./machines\";\nimport { KafkaInstanceMetricsMachine } from \"./machines\";\nimport type { DurationOptions, GetKafkaInstanceMetricsResponse } from \"./types\";\n\nexport const KafkaInstanceMetricsContext = createContext<{\n  service: ActorRefFrom<KafkaInstanceMetricsMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type KafkaInstanceMetricsProviderProps = {\n  getKafkaInstanceMetrics: (options: {\n    duration: DurationOptions;\n    interval: number;\n  }) => Promise<GetKafkaInstanceMetricsResponse>;\n};\nexport const KafkaInstanceMetricsProvider: FunctionComponent<\n  KafkaInstanceMetricsProviderProps\n> = ({ children, getKafkaInstanceMetrics }) => {\n  const service = useInterpret(\n    () =>\n      KafkaInstanceMetricsMachine.withConfig({\n        services: {\n          api: (context) => {\n            return (callback) => {\n              getKafkaInstanceMetrics({\n                duration: context.duration,\n                interval: timeIntervalsMapping[context.duration].interval,\n              })\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <KafkaInstanceMetricsContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </KafkaInstanceMetricsContext.Provider>\n  );\n};\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { MetricsKpiMachineType } from \"./machines\";\nimport { MetricsKpiMachine } from \"./machines\";\nimport type { GetMetricsKpiResponse } from \"./types\";\n\nexport const MetricsKpiContext = createContext<{\n  service: ActorRefFrom<MetricsKpiMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type MetricsKpiProviderProps = {\n  getMetricsKpi: () => Promise<GetMetricsKpiResponse>;\n};\nexport const MetricsKpiProvider: FunctionComponent<MetricsKpiProviderProps> = ({\n  children,\n  getMetricsKpi,\n}) => {\n  const service = useInterpret(\n    () =>\n      MetricsKpiMachine.withConfig({\n        services: {\n          api: () => {\n            return (callback) => {\n              getMetricsKpi()\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <MetricsKpiContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </MetricsKpiContext.Provider>\n  );\n};\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { timeIntervalsMapping } from \"./consts\";\nimport type { TopicsMetricsMachineType } from \"./machines\";\nimport { TopicsMetricsMachine } from \"./machines\";\nimport type { DurationOptions, GetTopicsMetricsResponse } from \"./types\";\n\nexport const TopicsMetricsContext = createContext<{\n  service: ActorRefFrom<TopicsMetricsMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type TopicsMetricsProviderProps = {\n  getTopicsMetrics: (options: {\n    duration: DurationOptions;\n    interval: number;\n    selectedTopic: string | undefined;\n  }) => Promise<GetTopicsMetricsResponse>;\n};\nexport const TopicsMetricsProvider: FunctionComponent<\n  TopicsMetricsProviderProps\n> = ({ children, getTopicsMetrics }) => {\n  const service = useInterpret(\n    () =>\n      TopicsMetricsMachine.withConfig({\n        services: {\n          api: (context) => {\n            return (callback) => {\n              getTopicsMetrics({\n                selectedTopic: context.selectedTopic,\n                duration: context.duration,\n                interval: timeIntervalsMapping[context.duration].interval,\n              })\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <TopicsMetricsContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </TopicsMetricsContext.Provider>\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport { KafkaInstanceMetricsContext } from \"./KafkaInstanceMetricsProvider\";\nimport type { KafkaInstanceMetricsMachineContext } from \"./machines\";\nimport type { DurationOptions } from \"./types\";\n\ntype SeletorReturn = KafkaInstanceMetricsMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useKafkaInstanceMetrics() {\n  const { service } = useContext(KafkaInstanceMetricsContext);\n\n  const {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    duration,\n    lastUpdated,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n  } = useSelector<typeof service, SeletorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onDurationChange = useCallback(\n    (duration: DurationOptions) =>\n      service.send({ type: \"selectDuration\", duration }),\n    [service]\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  return {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    lastUpdated,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    duration,\n    onDurationChange,\n    onRefresh,\n  };\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport type { TopicsMetricsMachineContext } from \"./machines\";\nimport { TopicsMetricsContext } from \"./TopicsMetricsProvider\";\nimport type { DurationOptions } from \"./types\";\n\ntype SelectorReturn = TopicsMetricsMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useTopicsMetrics() {\n  const { service } = useContext(TopicsMetricsContext);\n\n  const {\n    selectedTopic,\n    duration,\n    kafkaTopics,\n    metricsTopics,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n  } = useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onTopicChange = useCallback(\n    (topic: string | undefined) => service.send({ type: \"selectTopic\", topic }),\n    [service]\n  );\n\n  const onDurationChange = useCallback(\n    (duration: DurationOptions) =>\n      service.send({ type: \"selectDuration\", duration }),\n    [service]\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  const mergedTopics = useMemo((): string[] => {\n    const topics = Array.from(\n      new Set<string>([...kafkaTopics, ...metricsTopics])\n    );\n    topics.sort((a, b) => a.localeCompare(b));\n    return topics;\n  }, [kafkaTopics, metricsTopics]);\n\n  return {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    topics: mergedTopics,\n    selectedTopic,\n    duration,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    onTopicChange,\n    onDurationChange,\n    onRefresh,\n  };\n}\n","import { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport {\n  CardKafkaInstanceMetrics,\n  CardTopicsMetrics,\n  EmptyStateInitialLoading,\n  EmptyStateMetricsUnavailable,\n  MetricsLayout,\n} from \"./components\";\nimport { CardKpi } from \"./components/CardKpi\";\nimport { MetricsLagAlert } from \"./components/MetricsLagAlert\";\nimport { PartitionCard } from \"./components/PartitionCard\";\nimport type { KafkaInstanceMetricsProviderProps } from \"./KafkaInstanceMetricsProvider\";\nimport { KafkaInstanceMetricsProvider } from \"./KafkaInstanceMetricsProvider\";\nimport type { MetricsKpiProviderProps } from \"./MetricsKpiProvider\";\nimport { MetricsKpiProvider } from \"./MetricsKpiProvider\";\nimport type { TopicsMetricsProviderProps } from \"./TopicsMetricsProvider\";\nimport { TopicsMetricsProvider } from \"./TopicsMetricsProvider\";\nimport { useKafkaInstanceMetrics } from \"./useKafkaInstanceMetrics\";\nimport { useMetricsKpi } from \"./useMetricsKpi\";\nimport { useTopicsMetrics } from \"./useTopicsMetrics\";\n\nexport type MetricsProps = {\n  onCreateTopic: () => void;\n  onAlertClose: () => void;\n  hasUserAlreadyClosedAlert: boolean;\n} & KafkaInstanceMetricsProviderProps &\n  TopicsMetricsProviderProps &\n  MetricsKpiProviderProps;\n\nexport const Metrics: VoidFunctionComponent<MetricsProps> = ({\n  getKafkaInstanceMetrics,\n  getTopicsMetrics,\n  getMetricsKpi,\n  onCreateTopic,\n  onAlertClose,\n  hasUserAlreadyClosedAlert,\n}) => {\n  return (\n    <TopicsMetricsProvider getTopicsMetrics={getTopicsMetrics}>\n      <KafkaInstanceMetricsProvider\n        getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n      >\n        <MetricsKpiProvider getMetricsKpi={getMetricsKpi}>\n          <ConnectedMetrics\n            onCreateTopic={onCreateTopic}\n            onClickClose={onAlertClose}\n            isClosed={hasUserAlreadyClosedAlert}\n          />\n        </MetricsKpiProvider>\n      </KafkaInstanceMetricsProvider>\n    </TopicsMetricsProvider>\n  );\n};\n\ntype ConnectedMetricsProps = {\n  onCreateTopic: () => void;\n  onClickClose: () => void;\n  isClosed: boolean;\n};\nconst ConnectedMetrics: VoidFunctionComponent<ConnectedMetricsProps> = ({\n  onCreateTopic,\n  onClickClose,\n  isClosed,\n}) => {\n  const { t } = useTranslation();\n  const kafkaInstanceMetrics = useKafkaInstanceMetrics();\n  const topicsMetrics = useTopicsMetrics();\n  const metricsKpi = useMetricsKpi();\n\n  switch (true) {\n    case kafkaInstanceMetrics.isInitialLoading ||\n      topicsMetrics.isInitialLoading ||\n      metricsKpi.isInitialLoading:\n      return <EmptyStateInitialLoading />;\n    case kafkaInstanceMetrics.isFailed &&\n      topicsMetrics.isFailed &&\n      topicsMetrics.isFailed:\n    case kafkaInstanceMetrics.isJustCreated &&\n      topicsMetrics.isJustCreated &&\n      metricsKpi.isJustCreated:\n      return <EmptyStateMetricsUnavailable />;\n    default:\n      return (\n        <MetricsLayout\n          metricsLagAlert={\n            <MetricsLagAlert onClickClose={onClickClose} isClosed={isClosed} />\n          }\n          topicsKpi={\n            <CardKpi\n              metric={metricsKpi.topics}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              name={t(\"metrics:metric_kpi_topics_name\")}\n              popover={t(\"metrics:metric_kpi_topics_description\")}\n            />\n          }\n          topicPartitionsKpi={\n            <PartitionCard\n              metric={metricsKpi.topicPartitions}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              topicPartitionsLimit={metricsKpi.topicPartitionsLimit}\n            />\n          }\n          consumerGroupKpi={\n            <CardKpi\n              metric={metricsKpi.consumerGroups}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              name={t(\"metrics:metric_kpi_consumerGroup_name\")}\n              popover={t(\"metrics:metric_kpi_consumerGroup_description\")}\n            />\n          }\n          diskSpaceMetrics={<ConnectedKafkaInstanceMetrics />}\n          topicMetrics={\n            <ConnectedTopicsMetrics onCreateTopic={onCreateTopic} />\n          }\n        />\n      );\n  }\n};\n\nconst ConnectedKafkaInstanceMetrics: VoidFunctionComponent = () => {\n  const {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    duration,\n    lastUpdated,\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    onDurationChange,\n    onRefresh,\n  } = useKafkaInstanceMetrics();\n\n  return (\n    <CardKafkaInstanceMetrics\n      usedDiskMetrics={usedDiskSpaceMetrics}\n      clientConnectionsMetrics={clientConnectionsMetrics}\n      connectionAttemptRateMetrics={connectionAttemptRateMetrics}\n      duration={duration}\n      backendUnavailable={isFailed}\n      isInitialLoading={isInitialLoading}\n      isLoading={isLoading}\n      isRefreshing={isRefreshing}\n      isJustCreated={isJustCreated}\n      lastUpdated={lastUpdated}\n      onRefresh={onRefresh}\n      onDurationChange={onDurationChange}\n      diskSpaceLimit={diskSpaceLimit || 0}\n      connectionsLimit={connectionsLimit || 0}\n      connectionRateLimit={connectionRateLimit || 0}\n    />\n  );\n};\n\ntype ConnectedTopicsMetricsProps = {\n  onCreateTopic: () => void;\n};\nconst ConnectedTopicsMetrics: VoidFunctionComponent<\n  ConnectedTopicsMetricsProps\n> = ({ onCreateTopic }) => {\n  const {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    selectedTopic,\n    duration,\n    topics,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    onDurationChange,\n    onTopicChange,\n    onRefresh,\n  } = useTopicsMetrics();\n\n  return (\n    <CardTopicsMetrics\n      backendUnavailable={isFailed}\n      topics={topics}\n      incomingTopicsData={bytesIncoming}\n      outgoingTopicsData={bytesOutgoing}\n      partitions={bytesPerPartition}\n      incomingMessageRate={incomingMessageRate}\n      duration={duration}\n      isInitialLoading={isInitialLoading}\n      isLoading={isLoading}\n      isRefreshing={isRefreshing}\n      isJustCreated={isJustCreated}\n      lastUpdated={lastUpdated}\n      selectedTopic={selectedTopic}\n      onRefresh={onRefresh}\n      onSelectedTopic={onTopicChange}\n      onDurationChange={onDurationChange}\n      onCreateTopic={onCreateTopic}\n    />\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport type { MetricsKpiMachineContext } from \"./machines\";\nimport { MetricsKpiContext } from \"./MetricsKpiProvider\";\n\ntype SelectorReturn = MetricsKpiMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useMetricsKpi() {\n  const { service } = useContext(MetricsKpiContext);\n\n  const {\n    topics,\n    topicPartitions,\n    topicPartitionsLimit,\n    consumerGroups,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n  } = useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  return {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    topics,\n    topicPartitions,\n    consumerGroups,\n    topicPartitionsLimit,\n    onRefresh,\n  };\n}\n","import {\n  Button,\n  Card,\n  CardBody,\n  Flex,\n  FlexItem,\n  Modal,\n  ModalVariant,\n  PageSection,\n  Spinner,\n  Stack,\n  StackItem,\n  Switch,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport \"./Settings.css\";\nimport type { SettingsStatus } from \"./types\";\n\nexport type SettingsProps = {\n  onSubmitReAuthentication: (\n    reauthenticationEnabled: boolean\n  ) => Promise<boolean>;\n  reauthenticationEnabled: boolean;\n};\n\nexport const Settings: FunctionComponent<SettingsProps> = ({\n  onSubmitReAuthentication,\n  reauthenticationEnabled,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  //states\n  const [connectionStatus, setConnectionStatus] = useState<SettingsStatus>(\n    reauthenticationEnabled ? \"On\" : \"Off\"\n  );\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  const onClose = () => {\n    setIsModalOpen(false);\n  };\n\n  const onChangeSwitch = (checked: boolean) => {\n    if (connectionStatus === \"On\") {\n      setIsModalOpen(true);\n    } else {\n      handleReAuthentication(checked);\n    }\n  };\n\n  const handleReAuthentication = (reAuthValue: boolean) => {\n    setConnectionStatus(reAuthValue ? \"TurningOn\" : \"TurningOff\");\n\n    onSubmitReAuthentication(reAuthValue)\n      .then((reauthentication) => {\n        setConnectionStatus(reauthentication ? \"On\" : \"Off\");\n\n        // TODO: send notification\n        // addAlert({\n        //   variant: \"success\",\n        //   title: t(\"settings.success_alert\", {\n        //     status: reauthentication ? \"on\" : \"off\",\n        //   }),\n        // });\n      })\n      .catch(() => {\n        setConnectionStatus(!reAuthValue ? \"On\" : \"Off\");\n\n        // TODO: send notification\n        // addAlert({\n        //   variant: \"danger\",\n        //   title: t(\"settings.error_alert_title\"),\n        //   description: t(\"settings.error_alert_title_description\"),\n        // });\n      });\n  };\n\n  const onTurnOff = () => {\n    setIsModalOpen(false);\n    handleReAuthentication(false);\n  };\n\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <Stack hasGutter>\n        <StackItem>\n          <Card>\n            <CardBody>{t(\"settings.kafka_instance_settings_label\")}</CardBody>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <Card className={\"mas--settings__card\"}>\n            <CardBody>\n              <Flex flexWrap={{ default: \"nowrap\" }}>\n                <FlexItem grow={{ default: \"grow\" }}>\n                  <Flex>\n                    <FlexItem\n                      component={\"span\"}\n                      spacer={{ default: \"spacerSm\" }}\n                    >\n                      <strong>\n                        {t(\"settings.connection_re_authentication_label\")}\n                        {\":\"}\n                      </strong>\n                    </FlexItem>\n                    <FlexItem>\n                      {(() => {\n                        switch (connectionStatus) {\n                          case \"On\":\n                            return t(\n                              \"settings.Connection_re_authentication_states.on\"\n                            );\n                          case \"TurningOff\":\n                            return (\n                              <>\n                                <Spinner\n                                  size=\"md\"\n                                  aria-valuetext={t(\n                                    \"settings.Connection_re_authentication_states.turning_off\"\n                                  )}\n                                  aria-label={t(\n                                    \"settings.connection_re_authentication_label\"\n                                  )}\n                                />{\" \"}\n                                {t(\n                                  \"settings.Connection_re_authentication_states.turning_off\"\n                                )}\n                              </>\n                            );\n                          case \"Off\":\n                            return t(\n                              \"settings.Connection_re_authentication_states.off\"\n                            );\n                          case \"TurningOn\":\n                            return (\n                              <>\n                                <Spinner\n                                  size=\"md\"\n                                  aria-valuetext={\n                                    \"settings.Connection_re_authentication_states.turning_on\"\n                                  }\n                                  aria-label={t(\n                                    \"settings.connection_re_authentication_label\"\n                                  )}\n                                />{\" \"}\n                                {t(\n                                  \"settings.Connection_re_authentication_states.turning_on\"\n                                )}\n                              </>\n                            );\n                          default:\n                            return null;\n                        }\n                      })()}\n                    </FlexItem>\n                  </Flex>\n                </FlexItem>\n                <FlexItem>\n                  <Switch\n                    id=\"Connection-re-authentication-switch\"\n                    aria-label={t(\n                      \"settings.connection_re_authentication_label\"\n                    )}\n                    isChecked={\n                      connectionStatus === \"On\" ||\n                      connectionStatus === \"TurningOff\"\n                    }\n                    isDisabled={\n                      connectionStatus === \"TurningOff\" ||\n                      connectionStatus === \"TurningOn\"\n                    }\n                    onChange={onChangeSwitch}\n                  />\n                </FlexItem>\n                <Modal\n                  variant={ModalVariant.small}\n                  isOpen={isModalOpen}\n                  title={t(\"settings.warning_title\")}\n                  titleIconVariant={\"warning\"}\n                  actions={[\n                    <Button\n                      key={\"confirm\"}\n                      variant=\"primary\"\n                      onClick={onTurnOff}\n                    >\n                      {t(\"settings.turn_off_button_label\")}\n                    </Button>,\n                    <Button key={\"cancel\"} variant=\"link\" onClick={onClose}>\n                      {t(\"common:cancel\")}\n                    </Button>,\n                  ]}\n                  onClose={onClose}\n                >\n                  {t(\"settings.warning_description\")}\n                </Modal>\n              </Flex>\n            </CardBody>\n          </Card>\n        </StackItem>\n      </Stack>\n    </PageSection>\n  );\n};\n","export type SelectOptions = {\n  key: string;\n  value: string;\n  isPlaceholder?: boolean;\n  isDisabled?: boolean;\n};\n\nexport const retentionTimeSelectOptions: SelectOptions[] = [\n  { key: \"days\", value: \"days\", isPlaceholder: true },\n  { key: \"hours\", value: \"hours\" },\n  { key: \"minutes\", value: \"minutes\" },\n  { key: \"seconds\", value: \"seconds\" },\n  { key: \"milliseconds\", value: \"milliseconds\" },\n];\n\nexport const retentionSizeSelectOptions: SelectOptions[] = [\n  { key: \"bytes\", value: \"bytes\", isPlaceholder: true },\n  { key: \"kibibytes\", value: \"kibibytes\" },\n  { key: \"mebibytes\", value: \"mebibytes\" },\n  { key: \"gibibytes\", value: \"gibibytes\" },\n  { key: \"tebibytes\", value: \"tebibytes\" },\n];\n\nexport type IDropdownOption = {\n  value?: string;\n  label?: string;\n  key?: string;\n  isDisabled?: boolean;\n};\n\nexport type TimeUnit =\n  | \"days\"\n  | \"hours\"\n  | \"minutes\"\n  | \"seconds\"\n  | \"milliseconds\"\n  | \"weeks\"\n  | \"unlimited\";\n\nexport type CustomSelect = {\n  unit: TimeUnit;\n  value: number;\n};\n\nexport type CustomRetentionSizeSelect = {\n  unit: CustomRetentionUnit;\n  value: number;\n};\n\nexport type CustomRetentionUnit =\n  | \"bytes\"\n  | \"kibibytes\"\n  | \"mebibytes\"\n  | \"gibibytes\"\n  | \"tebibytes\"\n  | \"unlimited\";\n\nexport type RadioSelectType = \"day\" | \"week\" | \"custom\" | \"unlimited\";\n\nexport type RetentionSizeRadioSelect = \"unlimited\" | \"custom\";\n","import type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport {\n  PageSection,\n  PageSectionVariants,\n  Title,\n  Switch,\n  Breadcrumb,\n  BreadcrumbItem,\n} from \"@patternfly/react-core\";\nimport { Link } from \"react-router-dom\";\n\nexport type CreateTopicHeadProps = {\n  showAllOptions: boolean;\n  kafkaName: string;\n  onShowAllOptions: (value: boolean) => void;\n  kafkaInstanceLink: string;\n  kafkaPageLink: string;\n};\n\nexport const CreateTopicHead: VoidFunctionComponent<CreateTopicHeadProps> = ({\n  showAllOptions,\n  onShowAllOptions,\n  kafkaName,\n  kafkaInstanceLink,\n  kafkaPageLink,\n}) => {\n  const { t } = useTranslation([\"common\", \"topic\"]);\n\n  const mainBreadcrumbs = (\n    <Breadcrumb ouiaId={\"breadcrumb\"}>\n      <BreadcrumbItem\n        render={() => (\n          <Link to={kafkaInstanceLink}>{t(\"common:kafka_instance\")}</Link>\n        )}\n      />\n      <BreadcrumbItem\n        render={() => <Link to={kafkaPageLink}>{kafkaName}</Link>}\n      />\n      <BreadcrumbItem isActive>{t(\"topic:create_topic\")}</BreadcrumbItem>\n    </Breadcrumb>\n  );\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        {mainBreadcrumbs}\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          {t(\"topic:create_topic\")}\n        </Title>\n        <br />\n        <Switch\n          ouiaId={\"toggle-switch-off\"}\n          id=\"id-show-all-options\"\n          label={t(\"topic:show_all_options\")}\n          labelOff={t(\"topic:show_all_options\")}\n          isChecked={showAllOptions}\n          onChange={onShowAllOptions}\n          className=\"create-topic-wizard\"\n        />\n      </PageSection>\n    </>\n  );\n};\n","import { Button, Modal } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { Topic } from \"ui-models/src/models/topic\";\n\nexport type PartitionLimitWarningProps = {\n  topicData: Topic;\n  onSave: (topicData: Topic) => void;\n  isModalOpen: boolean;\n  setIsModalOpen: (value: boolean) => void;\n};\n\nexport const PartitionLimitWarning: React.FC<PartitionLimitWarningProps> = ({\n  topicData,\n  onSave,\n  isModalOpen,\n  setIsModalOpen,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  const handleModalToggle = () => {\n    setIsModalOpen(false);\n  };\n  const onConfirm = () => {\n    setIsModalOpen(false);\n    onSave(topicData);\n  };\n  return (\n    <Modal\n      title={t(\"increase_partitions\")}\n      variant={\"small\"}\n      titleIconVariant=\"warning\"\n      aria-describedby=\"modal-title-icon-description\"\n      isOpen={isModalOpen}\n      onClose={handleModalToggle}\n      actions={[\n        <Button key=\"confirm\" variant=\"primary\" onClick={onConfirm}>\n          {t(\"common:yes\")}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={handleModalToggle}>\n          {t(\"no_return\")}\n        </Button>,\n      ]}\n    >\n      {t(\"partition_warning_modal\")}\n    </Modal>\n  );\n};\n","import { convert } from \"convert\";\nimport type { CustomSelect } from \"./types\";\n\nexport const retentionTimeTransformer = (value: CustomSelect) => {\n  if (value.value != null)\n    switch (value.unit) {\n      case \"days\": {\n        const convertedValue = convert(BigInt(value.value), \"days\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"weeks\": {\n        const convertedValue = convert(BigInt(value.value), \"weeks\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"seconds\": {\n        const convertedValue = convert(BigInt(value.value), \"seconds\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"hours\": {\n        const convertedValue = convert(BigInt(value.value), \"hours\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"minutes\": {\n        const convertedValue = convert(BigInt(value.value), \"minutes\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"unlimited\": {\n        return BigInt(value.value);\n      }\n      case \"milliseconds\": {\n        return BigInt(value.value);\n      }\n    }\n};\n","import { FormGroup, Popover, TextInput } from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\n\nexport interface TextWithLabelPopoverProps {\n  fieldId: string;\n  fieldLabel: string;\n  fieldValue?: string;\n  popoverHeader: string;\n  popoverBody: string;\n  btnAriaLabel: string;\n  showUnlimited?: boolean;\n}\n\nexport const TextWithLabelPopover: FunctionComponent<\n  TextWithLabelPopoverProps\n> = ({\n  fieldId,\n  fieldLabel,\n  btnAriaLabel,\n  fieldValue,\n  popoverBody,\n  popoverHeader,\n  showUnlimited,\n}) => {\n  let displayText = \"-\";\n\n  if (\n    showUnlimited === true &&\n    fieldValue !== undefined &&\n    parseInt(fieldValue) < 0\n  ) {\n    displayText = \"Unlimited\"; // TODO i18n\n  } else if (fieldValue) {\n    displayText = fieldValue;\n  }\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={fieldLabel}\n      className=\"kafka-ui-form-group--readonly\"\n      labelIcon={\n        <Popover\n          headerContent={<div>{popoverHeader}</div>}\n          bodyContent={<div>{popoverBody}</div>}\n        >\n          <button\n            aria-label={btnAriaLabel}\n            onClick={(event) => event.preventDefault()}\n            className=\"pf-c-form__group-label-help\"\n          >\n            <HelpIcon noVerticalAlign />\n          </button>\n        </Popover>\n      }\n    >\n      <TextInput\n        readOnlyVariant={\"plain\"}\n        type=\"text\"\n        id={fieldId}\n        name={fieldId}\n        value={displayText}\n      />\n    </FormGroup>\n  );\n};\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype CleanupProps = {\n  defaultLogSegmentSize: bigint;\n  defaultSegmentTime: bigint;\n  defaultSegmentJitterTime: bigint;\n  defaultFileDeleteDelay: bigint;\n};\n\nconst Cleanup: React.FC<CleanupProps> = ({\n  defaultFileDeleteDelay,\n  defaultLogSegmentSize,\n  defaultSegmentJitterTime,\n  defaultSegmentTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <FormSection title={t(\"cleanup\")} id=\"cleanup\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"cleanup_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"log-segment-size\"\n        btnAriaLabel={t(\"log_segment_size\")}\n        fieldLabel={t(\"log_segment_size\")}\n        fieldValue={t(\"bytes_to_gibibyte\", {\n          bytes: defaultLogSegmentSize,\n          gibibyte: convert(Number(defaultLogSegmentSize), \"bytes\").to(\n            \"gibibytes\"\n          ),\n        })}\n        popoverBody={t(\"log_segment_size\")}\n        popoverHeader={t(\"log_segment_size_description\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segement-time\"\n        btnAriaLabel={t(\"segement_time\")}\n        fieldLabel={t(\"segement_time\")}\n        fieldValue={t(\"milliseconds_to_days\", {\n          milliseconds: defaultSegmentTime,\n          days: convert(Number(defaultSegmentTime), \"milliseconds\").to(\"days\"),\n        })}\n        popoverBody={t(\"segement_time_description\")}\n        popoverHeader={t(\"segement_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segment-jitter-time\"\n        btnAriaLabel={t(\"segment_jitter_time\")}\n        fieldLabel={t(\"segment_jitter_time\")}\n        fieldValue={t(\"milliseconds_time\", { value: defaultSegmentJitterTime })}\n        popoverBody={t(\"segment_jitter_time_description\")}\n        popoverHeader={t(\"segment_jitter_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"file-delete-delay\"\n        btnAriaLabel={t(\"file_delete_delay\")}\n        fieldLabel={t(\"file_delete_delay\")}\n        fieldValue={t(\"milliseconds_to_minute\", {\n          milliseconds: defaultFileDeleteDelay,\n          minute: convert(Number(defaultFileDeleteDelay), \"milliseconds\").to(\n            \"minutes\"\n          ),\n        })}\n        popoverBody={t(\"file_delete_delay_description\")}\n        popoverHeader={t(\"file_delete_delay\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"preallocate-log-segment-files\"\n        btnAriaLabel={t(\"preallocate_log_segment_files\")}\n        fieldLabel={t(\"preallocate_log_segment_files\")}\n        fieldValue={t(\"common:disabled\")}\n        popoverBody={t(\"preallocate_log_segment_files_description\")}\n        popoverHeader={t(\"preallocate_log_segment_files\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Cleanup };\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { TextInput } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { CustomSelect, TimeUnit } from \"./types\";\nimport { retentionTimeSelectOptions } from \"./types\";\n\nexport type CustomRetentionMessageProps = {\n  id?: string;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n};\n\nconst CustomRetentionMessage: React.FC<CustomRetentionMessageProps> = ({\n  customTimeValue,\n  setCustomTimeValue,\n}) => {\n  const [isRetentionTimeSelectOpen, setIsRetentionTimeSelectOpen] =\n    useState<boolean>(false);\n\n  const onRetentionTimeToggle = (isOpen: boolean) => {\n    setIsRetentionTimeSelectOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (event, value) => {\n    const inputUnit: CustomSelect = {\n      unit: value as TimeUnit,\n      value: 1,\n    };\n    setCustomTimeValue(inputUnit);\n\n    onRetentionTimeToggle(false);\n  };\n\n  const onChange = (input: string) => {\n    const inputValue: CustomSelect = {\n      ...customTimeValue,\n      value: Number(input),\n    };\n    if (inputValue.value > -1) setCustomTimeValue(inputValue);\n  };\n\n  return (\n    <div className=\"kafka-ui--radio__parameters\">\n      <Flex>\n        <FlexItem>\n          <TextInput\n            aria-label={\"Retention time\"}\n            type=\"number\"\n            value={customTimeValue.value == 0 ? \"\" : customTimeValue.value}\n            onChange={onChange}\n            min={1}\n          />\n        </FlexItem>\n        <FlexItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={onRetentionTimeToggle}\n            onSelect={(event, value) => onSelect(event, value as string)}\n            placeholder=\"days\"\n            selections={customTimeValue.unit}\n            isOpen={isRetentionTimeSelectOpen}\n          >\n            {retentionTimeSelectOptions?.map((s) => (\n              <SelectOption\n                key={s.key}\n                value={s.value}\n                isPlaceholder={s.isPlaceholder}\n              >\n                {s.value}\n              </SelectOption>\n            ))}\n          </Select>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n\nexport { CustomRetentionMessage };\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { TextInput } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport type { CustomRetentionSizeSelect, CustomRetentionUnit } from \"./types\";\nimport { retentionSizeSelectOptions } from \"./types\";\nimport { useState } from \"react\";\n\nexport type CustomRetentionSizeProps = {\n  id?: string;\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n};\n\nconst CustomRetentionSize: React.FC<CustomRetentionSizeProps> = ({\n  customRetentionSizeValue,\n  setCustomRetentionSizeValue,\n}) => {\n  const [isRetentionSizeSelectOpen, setIsRetentionSizeSelectOpen] =\n    useState<boolean>(false);\n\n  const onRetentionSizeToggle = (isOpen: boolean) => {\n    setIsRetentionSizeSelectOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (event, value) => {\n    const inputUnit: CustomRetentionSizeSelect = {\n      unit: value as CustomRetentionUnit,\n      value: 1,\n    };\n    setCustomRetentionSizeValue(inputUnit);\n    onRetentionSizeToggle(false);\n  };\n\n  const onChange = (input: string) => {\n    const inputValue: CustomRetentionSizeSelect = {\n      ...customRetentionSizeValue,\n      value: Number(input),\n    };\n    if (inputValue.value > -1) setCustomRetentionSizeValue(inputValue);\n  };\n  return (\n    <div className=\"kafka-ui--radio__parameters\">\n      <Flex>\n        <FlexItem>\n          <TextInput\n            aria-label=\"Retention size\"\n            type=\"number\"\n            value={\n              customRetentionSizeValue.value == 0\n                ? \"\"\n                : customRetentionSizeValue.value\n            }\n            onChange={onChange}\n            min={1}\n          />\n        </FlexItem>\n        <FlexItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={onRetentionSizeToggle}\n            onSelect={onSelect}\n            selections={customRetentionSizeValue.unit}\n            isOpen={isRetentionSizeSelectOpen}\n          >\n            {retentionSizeSelectOptions?.map((s) => (\n              <SelectOption\n                key={s.key}\n                value={s.value}\n                isPlaceholder={s.isPlaceholder}\n              />\n            ))}\n          </Select>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n\nexport { CustomRetentionSize };\n","import { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { useCallback } from \"react\";\n\nexport const useValidateTopic = (): {\n  validateName: (name: string) => string | undefined;\n} => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return {\n    validateName: useCallback(\n      (name) => {\n        const legalNameChars = new RegExp(\"^[a-zA-Z0-9._-]+$\");\n        if (name.length && !legalNameChars.test(name)) {\n          return t(\"topic_name_helper_text\");\n        } else if (name.length > 249) {\n          return t(\"cannot_exceed_characters\");\n        } else if (name === \".\" || name === \"..\") {\n          return t(\"invalid_name_with_dot\");\n        }\n        return undefined;\n      },\n      [t]\n    ),\n  };\n};\n","import type { NumberInputProps } from \"@patternfly/react-core\";\nimport {\n  FormSection,\n  NumberInput,\n  Radio,\n  Stack,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport {\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useCallback } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type { TopicPartition } from \"ui-models/src/models/topic-partition\";\nimport { CustomRetentionMessage } from \"./CustomRetentionMessage\";\nimport { CustomRetentionSize } from \"./CustomRetentionSize\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"./types\";\nimport { useValidateTopic } from \"./useValidateTopic\";\n\nexport type CoreConfigurationProps = {\n  isCreate?: boolean;\n  topicData: Topic;\n  setTopicData: (data: Topic) => void;\n  invalidText: string;\n  setInvalidText: (message: string) => void;\n  setTopicValidated: (error: ValidatedOptions) => void;\n  topicValidated: ValidatedOptions;\n  setWarning: (isWarning: boolean) => void;\n  warning: boolean;\n  availablePartitionLimit: number;\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n  radioTimeSelectValue: RadioSelectType;\n  setRadioTimeSelectValue: (value: RadioSelectType) => void;\n  radioSizeSelectValue: RetentionSizeRadioSelect;\n  setRadioSizeSelectValue: (data: RetentionSizeRadioSelect) => void;\n};\n\nconst CoreConfiguration: FunctionComponent<CoreConfigurationProps> = ({\n  isCreate,\n  topicData,\n  setTopicData,\n  invalidText,\n  setInvalidText,\n  setTopicValidated,\n  topicValidated,\n  availablePartitionLimit,\n  customTimeValue,\n  setCustomTimeValue,\n  radioTimeSelectValue,\n  setRadioTimeSelectValue,\n  setCustomRetentionSizeValue,\n  customRetentionSizeValue,\n  radioSizeSelectValue,\n  setRadioSizeSelectValue,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  const [initialPartitions] = useState<TopicPartition[]>(topicData.partitions);\n  const { validateName } = useValidateTopic();\n  const validationCheck = useCallback(\n    (value: string) => {\n      const errorMessage = validateName(value);\n      if (errorMessage) {\n        setInvalidText(errorMessage);\n        setTopicValidated(ValidatedOptions.error);\n      } else {\n        setTopicValidated(ValidatedOptions.default);\n      }\n    },\n    [setInvalidText, setTopicValidated, validateName]\n  );\n\n  const handleRetentionMessageTime = (value: RadioSelectType) => {\n    if (value === \"unlimited\") {\n      setCustomTimeValue({ value: -1, unit: \"unlimited\" });\n      setRadioTimeSelectValue(value);\n    } else {\n      setCustomTimeValue({ value: 7, unit: \"days\" });\n      setRadioTimeSelectValue(value);\n    }\n  };\n\n  const handleRetentionMessageSize = (value: RetentionSizeRadioSelect) => {\n    if (value === \"unlimited\") {\n      setRadioSizeSelectValue(value);\n      setCustomRetentionSizeValue({ value: -1, unit: \"unlimited\" });\n    } else {\n      setCustomRetentionSizeValue({ value: 1, unit: \"bytes\" });\n      setRadioSizeSelectValue(value);\n    }\n  };\n  const handleTextInputChange = (value: string) => {\n    validationCheck(value);\n    setTopicData({ ...topicData, name: value });\n  };\n\n  const onPartitionsChange: NumberInputProps[\"onChange\"] = (event) => {\n    const partitions = Number((event.target as HTMLInputElement).value);\n\n    const updatedPartitions = Array(partitions)\n      .fill(null)\n      .map((_, index) => ({ partition: index }));\n    //Donot allow to set a value below original value in case of edit topic\n    setTopicData({\n      ...topicData,\n      partitions: isCreate\n        ? updatedPartitions\n        : updatedPartitions.length > initialPartitions.length\n        ? updatedPartitions\n        : initialPartitions,\n    });\n  };\n\n  const handleOnPlus = () => {\n    const currentPartitions = topicData.partitions;\n    const updatedPartitions = [\n      ...currentPartitions,\n      { partition: currentPartitions.length },\n    ];\n    setTopicData({\n      ...topicData,\n      partitions: updatedPartitions,\n    });\n  };\n\n  const handleOnMinus = () => {\n    const { partitions } = topicData;\n    const newPartitions = partitions.slice(0, partitions.length - 1);\n    setTopicData({\n      ...topicData,\n      partitions: newPartitions,\n    });\n  };\n\n  const retentionTimeInput = (\n    <CustomRetentionMessage\n      customTimeValue={customTimeValue}\n      setCustomTimeValue={setCustomTimeValue}\n    />\n  );\n\n  const retentionSizeInput = (\n    <CustomRetentionSize\n      customRetentionSizeValue={customRetentionSizeValue}\n      setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n    />\n  );\n\n  return (\n    <FormSection\n      title={t(\"core_configuration\")}\n      id=\"core-configuration\"\n      titleElement={\"h2\"}\n    >\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"core_config_info\")}\n        </Text>\n      </TextContent>\n      {isCreate ? (\n        <FormGroupWithPopover\n          labelHead={t(\"topic_name\")}\n          fieldId=\"create-topic-name\"\n          fieldLabel={t(\"topic_name\")}\n          labelBody={t(\"topic_name_description\")}\n          buttonAriaLabel=\"More info for topic name field\"\n          helperTextInvalid={invalidText}\n          validated={topicValidated}\n          isRequired={true}\n          helperText={t(\"topic_name_helper_text\")}\n        >\n          <TextInput\n            isRequired\n            type=\"text\"\n            id=\"create-topic-name\"\n            name=\"name\"\n            value={topicData.name}\n            onChange={handleTextInputChange}\n            label={t(\"topic_name\")}\n            placeholder={t(\"enter_name\")}\n            validated={topicValidated}\n          />\n        </FormGroupWithPopover>\n      ) : (\n        <TextWithLabelPopover\n          fieldId=\"topic-name\"\n          btnAriaLabel=\"topic detail name\"\n          fieldLabel=\"Name\"\n          fieldValue={topicData.name}\n          popoverBody={t(\"topic_name_description\")}\n          popoverHeader={t(\"topic_name\")}\n        />\n      )}\n\n      <FormGroupWithPopover\n        fieldId=\"create-topic-partitions\"\n        fieldLabel=\"Partitions\"\n        labelHead={t(\"partitions\")}\n        labelBody={t(\"partitions_description\")}\n        buttonAriaLabel=\"More info for partitions field\"\n        helperText={\n          topicData.partitions.length >= availablePartitionLimit\n            ? t(\"partitions_warning\")\n            : t(\"partition_helper_text\")\n        }\n        validated={\n          topicData.partitions.length >= availablePartitionLimit\n            ? \"warning\"\n            : \"default\"\n        }\n      >\n        <NumberInput\n          id=\"create-topic-partitions\"\n          inputName=\"num-partitions\"\n          onChange={onPartitionsChange}\n          data-testid={t(\"partitions\")}\n          onPlus={handleOnPlus}\n          onMinus={handleOnMinus}\n          value={\n            topicData.partitions.length == 0 ? \"\" : topicData.partitions.length\n          }\n          plusBtnProps={{ name: \"num-partitions\" }}\n          minusBtnProps={{ name: \"num-partitions\" }}\n          min={isCreate ? 1 : initialPartitions.length}\n        />\n      </FormGroupWithPopover>\n\n      {/*<TextWithLabelPopover\n        fieldId=\"replicas\"\n        btnAriaLabel={t(\"replicas\")}\n        fieldLabel={t(\"replicas\")}\n        popoverBody={t(\"replicas_description\")}\n        popoverHeader={t(\"replicas\")}\n      />*/}\n      <TextWithLabelPopover\n        fieldId=\"min-insync-replicas\"\n        btnAriaLabel=\"topic detail min-in-sync replica\"\n        fieldLabel=\"Minimum in-sync replicas\"\n        fieldValue={topicData[\"min.insync.replicas\"].toString()}\n        popoverBody={t(\"min_insync_replicas_description\")}\n        popoverHeader={t(\"min_insync_replicas\")}\n      />\n      <FormGroupWithPopover\n        fieldId=\"retention\"\n        fieldLabel=\"Retention time\"\n        labelHead={t(\"retention_time\")}\n        labelBody={t(\"retention_time_description\")}\n        buttonAriaLabel=\"More info for retention time field\"\n      >\n        <Stack hasGutter>\n          <Radio\n            isChecked={radioTimeSelectValue === \"custom\"}\n            name=\"custom-retention-time\"\n            onChange={() => handleRetentionMessageTime(\"custom\")}\n            label={retentionTimeInput}\n            className=\"kafka-ui--radio-label__number-input\"\n            aria-label=\"custom duration\"\n            id=\"custom-retention-time\"\n            value={radioTimeSelectValue}\n          />\n          <Radio\n            isChecked={radioTimeSelectValue === \"unlimited\"}\n            name=\"unlimited-retention-time\"\n            onChange={() => handleRetentionMessageTime(\"unlimited\")}\n            label=\"Unlimited time\"\n            aria-label=\"Unlimited\"\n            id=\"unlimited-retention-time\"\n            value={radioTimeSelectValue}\n          />\n        </Stack>\n      </FormGroupWithPopover>\n      <FormGroupWithPopover\n        fieldId=\"retention-size\"\n        fieldLabel=\"Retention size\"\n        labelHead={t(\"retention_size\")}\n        labelBody={t(\"retention_size_description\")}\n        buttonAriaLabel=\"More info for retention size field\"\n      >\n        <Stack hasGutter>\n          <Radio\n            isChecked={radioSizeSelectValue === \"custom\"}\n            name=\"custom-retention-size\"\n            onChange={() => handleRetentionMessageSize(\"custom\")}\n            label={retentionSizeInput}\n            className=\"kafka-ui--radio-label__number-input\"\n            aria-label=\"custom size\"\n            id=\"custom-retention-size\"\n            value={radioSizeSelectValue}\n          />\n          <Radio\n            isChecked={radioSizeSelectValue === \"unlimited\"}\n            name=\"unlimited-retention-size\"\n            onChange={() => handleRetentionMessageSize(\"unlimited\")}\n            label=\"Unlimited size\"\n            aria-label=\"Unlimited\"\n            id=\"unlimited-retention-size\"\n            value={radioSizeSelectValue}\n          />\n        </Stack>\n      </FormGroupWithPopover>\n    </FormSection>\n  );\n};\n\nexport { CoreConfiguration };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype FlushProps = {\n  defaultFlushIntervalMessages: bigint;\n  defaultFlushIntervalTime: bigint;\n};\n\nconst Flush: React.FC<FlushProps> = ({\n  defaultFlushIntervalMessages,\n  defaultFlushIntervalTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"flush\")} id=\"flush\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"flush_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"flush-interval-messages\"\n        btnAriaLabel={t(\"flush_interval_messages\")}\n        fieldLabel={t(\"flush_interval_messages\")}\n        fieldValue={t(\"messages_time\", {\n          value: defaultFlushIntervalMessages,\n        })}\n        popoverBody={t(\"flush_interval_messages_description\")}\n        popoverHeader={t(\"flush_interval_messages\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"flush-interval-time\"\n        btnAriaLabel={t(\"flush_interval_time\")}\n        fieldLabel={t(\"flush_interval_time\")}\n        fieldValue={t(\"milliseconds_time\", { value: defaultFlushIntervalTime })}\n        popoverBody={t(\"flush_interval_time_description\")}\n        popoverHeader={t(\"flush_interval_time\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Flush };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport {\n  DropdownWithToggle,\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\nimport type { IDropdownOption } from \"./types\";\nimport { TopicConfig } from \"ui-models/src/models/topic-config\";\n\nexport type LogProps = {\n  topicData: Topic;\n  setTopicData: (data: Topic) => void;\n  defaultDeleteRetentionTime: bigint;\n  defaultMinCleanbleRatio: number;\n  defaultMinimumCompactionLagTime: bigint;\n};\n\nconst Log: React.FC<LogProps> = ({\n  topicData,\n  setTopicData,\n  defaultDeleteRetentionTime,\n  defaultMinCleanbleRatio,\n  defaultMinimumCompactionLagTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  const cleanupPolicyOptions: IDropdownOption[] = [\n    {\n      key: \"compact\",\n      value: \"compact\",\n      label: t(\"compact\"),\n      isDisabled: false,\n    },\n    {\n      key: \"delete\",\n      value: \"delete\",\n      label: t(\"common:delete\"),\n      isDisabled: false,\n    },\n    {\n      key: \"delete, compact\",\n      value: \"compact,delete\",\n      label: `${t(\"compact\")},${t(\"common:delete\")}`,\n      isDisabled: false,\n    },\n  ];\n\n  const onSelectOption = (value: string) => {\n    setTopicData({\n      ...topicData,\n      \"cleanup.policy\": value as TopicConfig[\"cleanup.policy\"],\n    });\n  };\n\n  return (\n    <FormSection title={t(\"log\")} id=\"log\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p}>{t(\"log_section_info\")}</Text>\n        <Text component={TextVariants.small}>{t(\"log_section_info_note\")}</Text>\n      </TextContent>\n\n      <FormGroupWithPopover\n        fieldId=\"cleanup-policy\"\n        fieldLabel={t(\"cleanup_policy\")}\n        labelHead={t(\"cleanup_policy\")}\n        labelBody={t(\"cleanup_policy_description\")}\n        buttonAriaLabel={t(\"cleanup_policy\")}\n      >\n        <DropdownWithToggle\n          id=\"log-section-policy-type-dropdown\"\n          toggleId=\"log-section-policy-type-dropdowntoggle\"\n          ariaLabel={t(\"select_policy\")}\n          onSelectOption={onSelectOption}\n          items={cleanupPolicyOptions}\n          name=\"cleanup-policy\"\n          value={topicData[\"cleanup.policy\"]}\n          isLabelAndValueNotSame={true}\n          key={topicData[\"cleanup.policy\"]}\n        />\n      </FormGroupWithPopover>\n\n      <TextWithLabelPopover\n        fieldId=\"delete-retention-time\"\n        btnAriaLabel={t(\"delete_retention_time\")}\n        fieldLabel={t(\"delete_retention_time\")}\n        fieldValue={t(\"milliseconds_time_to_day\", {\n          value: defaultDeleteRetentionTime,\n          days: convert(Number(defaultDeleteRetentionTime), \"milliseconds\").to(\n            \"days\"\n          ),\n        })}\n        popoverBody={t(\"delete_retention_time_description\")}\n        popoverHeader={t(\"delete_retention_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"min-cleanable-ratio\"\n        btnAriaLabel={t(\"min_cleanable_ratio\")}\n        fieldLabel={t(\"min_cleanable_ratio\")}\n        fieldValue={String(defaultMinCleanbleRatio)}\n        popoverBody={t(\"min_cleanable_ratio_description\")}\n        popoverHeader={t(\"min_cleanable_ratio\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"min-compaction-lag-time-description\"\n        btnAriaLabel={t(\"min_compaction_lag_time\")}\n        fieldLabel={t(\"min_compaction_lag_time\")}\n        fieldValue={t(\"milliseconds_time\", {\n          value: defaultMinimumCompactionLagTime,\n        })}\n        popoverBody={t(\"min_compaction_lag_time_description\")}\n        popoverHeader={t(\"min_compaction_lag_time\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Log };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype MessageProps = {\n  defaultMaximumMessageBytes: bigint;\n  defaultMessageTimestampType: string;\n  defaultMaxMessageTimestampDiff: bigint;\n};\n\nconst Message: React.FC<MessageProps> = ({\n  defaultMaximumMessageBytes,\n  defaultMessageTimestampType,\n  defaultMaxMessageTimestampDiff,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"messages\")} id=\"messages\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"message_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"max-message-size\"\n        btnAriaLabel={t(\"max_message_size\")}\n        fieldLabel={t(\"max_message_size\")}\n        fieldValue={t(\"bytes_size\", { value: defaultMaximumMessageBytes })}\n        popoverBody={t(\"max_message_size_description\")}\n        popoverHeader={t(\"max_message_size\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"message-timestamp-type\"\n        btnAriaLabel={t(\"message_timestamp_type\")}\n        fieldLabel={t(\"message_timestamp_type\")}\n        fieldValue={String(defaultMessageTimestampType)}\n        popoverBody={t(\"message_timestamp_type_description\")}\n        popoverHeader={t(\"message_timestamp_type\")}\n      />\n      <TextWithLabelPopover\n        fieldId=\"max-message-timestamp-diff\"\n        btnAriaLabel={t(\"max_message_timestamp_diff\")}\n        fieldLabel={t(\"max_message_timestamp_diff\")}\n        fieldValue={t(\"milliseconds_time\", {\n          value: defaultMaxMessageTimestampDiff,\n        })}\n        popoverBody={t(\"max_message_timestamp_diff_description\")}\n        popoverHeader={t(\"max_message_timestamp_diff\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"compression-type\"\n        btnAriaLabel={t(\"compression_type\")}\n        fieldLabel={t(\"compression_type\")}\n        fieldValue={\"Producer\"}\n        popoverBody={t(\"compression_type_description\")}\n        popoverHeader={t(\"compression_type\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"message-format\"\n        btnAriaLabel={t(\"message_format\")}\n        fieldLabel={t(\"message_format\")}\n        fieldValue={\"2.7-IV2\"}\n        popoverBody={t(\"message_format_description\")}\n        popoverHeader={t(\"message_format\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Message };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\nconst Replication: React.FC = () => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <FormSection title={t(\"replication\")} id=\"replication\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {t(\"replication_section_info\")}\n          <Text component={TextVariants.small}>\n            {t(\"replication_section_info_note\")}\n          </Text>\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"unclean-leader-election\"\n        btnAriaLabel={t(\"unclean_leader_election\")}\n        fieldLabel={t(\"unclean_leader_election\")}\n        fieldValue={t(\"common:disabled\")}\n        popoverBody={t(\"unclean_leader_election_description\")}\n        popoverHeader={t(\"unclean_leader_election\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Replication };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype TopicAdavanceIndexProps = {\n  defaultIndexIntervalSize: bigint;\n  defaultSegmentIndexSize: bigint;\n};\n\nconst TopicAdvanceIndex: React.FC<TopicAdavanceIndexProps> = ({\n  defaultIndexIntervalSize,\n  defaultSegmentIndexSize,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"index\")} id=\"index\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"index_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"index-interval-size\"\n        btnAriaLabel={t(\"index_interval_size\")}\n        fieldLabel={t(\"index_interval_size\")}\n        fieldValue={t(\"bytes_to_kibibytes\", {\n          bytes: defaultIndexIntervalSize,\n          kibibytes: convert(Number(defaultIndexIntervalSize), \"bytes\").to(\n            \"kibibytes\"\n          ),\n        })}\n        popoverBody={t(\"index_interval_size_description\")}\n        popoverHeader={t(\"index_interval_size\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segment-index-size\"\n        btnAriaLabel={t(\"segment_index_size\")}\n        fieldLabel={t(\"segment_index_size\")}\n        fieldValue={t(\"bytes_to_mebibytes\", {\n          bytes: defaultSegmentIndexSize,\n          mebibytes: convert(Number(defaultIndexIntervalSize), \"bytes\").to(\n            \"mebibytes\"\n          ),\n        })}\n        popoverBody={t(\"segment_index_size_description\")}\n        popoverHeader={t(\"segment_index_size\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { TopicAdvanceIndex };\n","import { JumpLinks, JumpLinksItem, SidebarPanel } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\n\nexport type TopicAdvanceJumpLinksProps = {\n  canHaveDelete?: boolean;\n};\nconst TopicAdvanceJumpLinks: React.FC<TopicAdvanceJumpLinksProps> = ({\n  canHaveDelete,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <SidebarPanel variant=\"sticky\">\n      <JumpLinks\n        isVertical\n        label={t(\"jump_to_section\")}\n        scrollableSelector=\".topic-properties\"\n        style={{ position: \"sticky\" }}\n        // offset={-164} // for header\n      >\n        <JumpLinksItem key={0} href=\"#core-configuration\">\n          {t(\"core_configuration\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={1} href=\"#messages\">\n          {t(\"messages\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={2} href=\"#log\">\n          {t(\"log\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={3} href=\"#replication\">\n          {t(\"replication\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={4} href=\"#cleanup\">\n          {t(\"cleanup\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={5} href=\"#index\">\n          {t(\"index\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={6} href=\"#flush\">\n          {t(\"flush\")}\n        </JumpLinksItem>\n        {canHaveDelete ? (\n          <JumpLinksItem key={7} href=\"#delete\">\n            {t(\"delete\")}\n          </JumpLinksItem>\n        ) : (\n          <></>\n        )}\n      </JumpLinks>\n    </SidebarPanel>\n  );\n};\n\nexport { TopicAdvanceJumpLinks };\n","import {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  PageGroup,\n  PageSection,\n  Sidebar,\n  SidebarContent,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"..\";\nimport { Cleanup } from \"./Cleanup\";\nimport { CoreConfiguration } from \"./CoreConfiguration\";\nimport { Flush } from \"./Flush\";\nimport { Log } from \"./Log\";\nimport { Message } from \"./Message\";\nimport { Replication } from \"./Replication\";\nimport { TopicAdvanceIndex } from \"./TopicAdvanceIndex\";\nimport { TopicAdvanceJumpLinks } from \"./TopicAdvanceJumpLinks\";\n\nexport type TopicAdvancePageProps = {\n  isCreate: boolean;\n  onConfirm: (data: Topic) => void;\n  handleCancel?: () => void;\n  topicData: Topic;\n  setTopicData: (val: Topic) => void;\n  checkTopicName?: (value: string) => boolean;\n  availablePartitionLimit: number;\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n  radioTimeSelectValue: RadioSelectType;\n  setRadioTimeSelectValue: (value: RadioSelectType) => void;\n  radioSizeSelectValue: RetentionSizeRadioSelect;\n  setRadioSizeSelectValue: (data: RetentionSizeRadioSelect) => void;\n};\n\nexport const TopicAdvancePage: React.FunctionComponent<\n  TopicAdvancePageProps\n> = ({\n  isCreate,\n  onConfirm,\n  handleCancel,\n  topicData,\n  setTopicData,\n  checkTopicName,\n  availablePartitionLimit,\n  customTimeValue,\n  setCustomTimeValue,\n  radioTimeSelectValue,\n  setRadioTimeSelectValue,\n  setCustomRetentionSizeValue,\n  customRetentionSizeValue,\n  radioSizeSelectValue,\n  setRadioSizeSelectValue,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n  const actionText = isCreate ? t(\"create_topic\") : t(\"common:save\");\n\n  //states\n\n  const [topicValidated, setTopicValidated] = useState<ValidatedOptions>(\n    ValidatedOptions.default\n  );\n  const [invalidText, setInvalidText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [warning, setWarning] = useState<boolean>(false);\n  const onValidateTopic = () => {\n    if (isCreate) {\n      if (topicData?.name.length < 1) {\n        setInvalidText(t(\"common:required\"));\n        setTopicValidated(ValidatedOptions.error);\n      } else {\n        setIsLoading(true);\n\n        const isTopicNameValid =\n          checkTopicName && checkTopicName(topicData?.name);\n        if (!isTopicNameValid) {\n          setIsLoading(false);\n          setInvalidText(t(\"already_exists\", { name: topicData?.name })),\n            setTopicValidated(ValidatedOptions.error);\n        } else onConfirm(topicData);\n      }\n    } else {\n      onConfirm(topicData);\n    }\n  };\n  return (\n    <PageSection padding={{ default: \"noPadding\" }}>\n      <Sidebar hasGutter>\n        <TopicAdvanceJumpLinks />\n        <SidebarContent>\n          <PageGroup\n            hasOverflowScroll={true}\n            id=\"topic-detail-view\"\n            aria-label={\"TODO\"}\n          >\n            <PageSection padding={{ default: \"noPadding\" }}>\n              <Form>\n                <CoreConfiguration\n                  isCreate={isCreate}\n                  topicData={topicData}\n                  setTopicData={setTopicData}\n                  availablePartitionLimit={availablePartitionLimit}\n                  invalidText={invalidText}\n                  setInvalidText={setInvalidText}\n                  setTopicValidated={setTopicValidated}\n                  topicValidated={topicValidated}\n                  setWarning={setWarning}\n                  warning={warning}\n                  customRetentionSizeValue={customRetentionSizeValue}\n                  setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n                  customTimeValue={customTimeValue}\n                  setCustomTimeValue={setCustomTimeValue}\n                  radioTimeSelectValue={radioTimeSelectValue}\n                  setRadioTimeSelectValue={setRadioTimeSelectValue}\n                  radioSizeSelectValue={radioSizeSelectValue}\n                  setRadioSizeSelectValue={setRadioSizeSelectValue}\n                />\n                <Message\n                  defaultMaximumMessageBytes={\n                    topicData[\"max.message.bytes\"].value\n                  }\n                  defaultMessageTimestampType={\n                    topicData[\"message.timestamp.type\"]\n                  }\n                  defaultMaxMessageTimestampDiff={\n                    topicData[\"message.timestamp.difference.max.ms\"].value\n                  }\n                />\n                <Log\n                  topicData={topicData}\n                  setTopicData={setTopicData}\n                  defaultDeleteRetentionTime={topicData[\"retention.ms\"].value}\n                  defaultMinCleanbleRatio={\n                    topicData[\"min.cleanable.dirty.ratio\"]\n                  }\n                  defaultMinimumCompactionLagTime={\n                    topicData[\"min.compaction.lag.ms\"].value\n                  }\n                />\n                <Replication />\n                <Cleanup\n                  defaultLogSegmentSize={topicData[\"segment.bytes\"].value}\n                  defaultSegmentTime={topicData[\"segment.ms\"].value}\n                  defaultSegmentJitterTime={\n                    topicData[\"segment.jitter.ms\"].value\n                  }\n                  defaultFileDeleteDelay={\n                    topicData[\"file.delete.delay.ms\"].value\n                  }\n                />\n                <TopicAdvanceIndex\n                  defaultIndexIntervalSize={\n                    topicData[\"index.interval.bytes\"].value\n                  }\n                  defaultSegmentIndexSize={\n                    topicData[\"segment.index.bytes\"].value\n                  }\n                />\n                <Flush\n                  defaultFlushIntervalMessages={\n                    topicData[\"flush.messages\"].value\n                  }\n                  defaultFlushIntervalTime={topicData[\"flush.ms\"].value}\n                />\n              </Form>\n\n              <ActionGroup className=\"kafka-ui--sticky-footer\">\n                <Divider className=\"kafka-ui--divider--FlexShrink\" />\n                <Button\n                  isLoading={isLoading}\n                  onClick={onValidateTopic}\n                  variant=\"primary\"\n                  data-testid={\n                    isCreate\n                      ? \"topicAdvanceCreate-actionCreate\"\n                      : \"tabProperties-actionSave\"\n                  }\n                  isDisabled={topicValidated !== \"default\"}\n                >\n                  {actionText}\n                </Button>\n                <Button\n                  onClick={handleCancel}\n                  variant=\"link\"\n                  data-testid={\n                    isCreate\n                      ? \"topicAdvanceCreate-actionCancel\"\n                      : \"tabProperties-actionCancel\"\n                  }\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </ActionGroup>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import { convert } from \"convert\";\nimport type { CustomRetentionSizeSelect } from \"./types\";\n\nexport const retentionSizeTransformer = (size: CustomRetentionSizeSelect) => {\n  switch (size.unit) {\n    case \"bytes\":\n      return BigInt(size.value);\n    case \"kibibytes\":\n      return convert(BigInt(size.value), \"kibibytes\").to(\"bytes\");\n    case \"mebibytes\":\n      return convert(BigInt(size.value), \"mebibytes\").to(\"bytes\");\n    case \"gibibytes\":\n      return convert(BigInt(size.value), \"gibibytes\").to(\"bytes\");\n    case \"tebibytes\":\n      return convert(BigInt(size.value), \"tebibytes\").to(\"bytes\");\n    case \"unlimited\":\n      return BigInt(size.value);\n  }\n};\n","import type { WizardStep } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  PageSection,\n  PageSectionTypes,\n  PageSectionVariants,\n  ValidatedOptions,\n  Wizard,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type { IWizardFooter } from \"./index\";\nimport {\n  StepMessageRetention,\n  StepPartitions,\n  StepReplicas,\n  StepTopicName,\n  WizardCustomFooter,\n} from \"./index\";\nimport { PartitionLimitWarning } from \"./PartitionLimitWarning\";\nimport { retentionTimeTransformer } from \"./retentionTimeTransformer\";\nimport { TopicAdvancePage } from \"./TopicAdvancePage\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"./types\";\nimport { retentionSizeTransformer } from \"./retentionSizeTransformer\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\n\nexport type CreateTopicWizardProps = {\n  isSwitchChecked: boolean;\n  setIsCreateTopic?: (value: boolean) => void;\n  onCloseCreateTopic: () => void;\n  onSave: (topicData: Topic) => void;\n  initialFieldsValue: Topic;\n  checkTopicName: (value: string) => boolean;\n  availablePartitionLimit: number;\n  availabilityZone: AZ;\n};\n\nexport const CreateTopicWizard: React.FC<CreateTopicWizardProps> = ({\n  isSwitchChecked,\n  onCloseCreateTopic,\n  onSave,\n  initialFieldsValue,\n  checkTopicName,\n  availablePartitionLimit,\n  availabilityZone,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  const [customTimeValue, setCustomTimeValue] = useState<CustomSelect>({\n    unit: \"days\",\n    value: 7,\n  });\n\n  const [customRetentionSizeValue, setCustomRetentionSizeValue] =\n    useState<CustomRetentionSizeSelect>({ unit: \"unlimited\", value: -1 });\n\n  const [topicNameValidated, setTopicNameValidated] =\n    useState<ValidatedOptions>(ValidatedOptions.default);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [invalidText, setInvalidText] = useState<string>(\"\");\n  const [topicData, setTopicData] = useState<Topic>(initialFieldsValue);\n  const [warningModalOpen, setWarningModalOpen] = useState<boolean>(false);\n  const [radioTimeSelectValue, setRadioTimeSelectValue] =\n    useState<RadioSelectType>(\"week\");\n\n  const [radioSizeSelectValue, setRadioSizeSelectValue] =\n    useState<RetentionSizeRadioSelect>(\"unlimited\");\n\n  const closeWizard = () => {\n    onCloseCreateTopic && onCloseCreateTopic();\n  };\n\n  const steps: WizardStep[] = [\n    {\n      name: t(\"topic_name\"),\n      enableNext:\n        topicData?.name.trim() !== \"\" &&\n        topicNameValidated === ValidatedOptions.default,\n      component: (\n        <StepTopicName\n          newTopicData={topicData}\n          onTopicNameChange={setTopicData}\n          topicNameValidated={topicNameValidated}\n          onValidationCheck={setTopicNameValidated}\n          invalidText={invalidText}\n          setInvalidText={setInvalidText}\n        />\n      ),\n    },\n    {\n      name: t(\"partitions\"),\n      canJumpTo: topicData?.name.trim() !== \"\",\n      component: (\n        <StepPartitions\n          newTopicData={topicData}\n          onPartitionsChange={setTopicData}\n          availablePartitionLimit={availablePartitionLimit}\n        />\n      ),\n    },\n    {\n      name: t(\"message_retention\"),\n      canJumpTo: topicData?.name.trim() !== \"\",\n      component: (\n        <StepMessageRetention\n          customRetentionSizeValue={customRetentionSizeValue}\n          setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n          customTimeValue={customTimeValue}\n          setCustomTimeValue={setCustomTimeValue}\n          radioTimeSelectValue={radioTimeSelectValue}\n          setRadioTimeSelectValue={setRadioTimeSelectValue}\n          radioSizeSelectValue={radioSizeSelectValue}\n          setRadioSizeSelectValue={setRadioSizeSelectValue}\n        />\n      ),\n    },\n    {\n      name: t(\"replicas\"),\n      canJumpTo: topicData?.name.trim() !== \"\",\n      component: (\n        <StepReplicas\n          minInSyncReplica={topicData[\"min.insync.replicas\"]}\n          availabilityZone={availabilityZone}\n        />\n      ),\n      nextButtonText: t(\"finish\"),\n    },\n  ];\n\n  const title = t(\"wizard_title\");\n\n  const onTransform = () => {\n    const tranformedValueInMilliseconds =\n      retentionTimeTransformer(customTimeValue);\n    const tranformedValueInBytes = retentionSizeTransformer(\n      customRetentionSizeValue\n    );\n    const transformedTopic: Topic = {\n      ...topicData,\n      \"retention.ms\": {\n        type: \"ms\",\n        value: tranformedValueInMilliseconds || BigInt(-1),\n      },\n      \"retention.bytes\": { type: \"bytes\", value: tranformedValueInBytes },\n    };\n    onSaveTopic(transformedTopic);\n  };\n\n  const onValidate: IWizardFooter[\"onValidate\"] = (onNext) => {\n    if (topicData?.name.length < 1) {\n      setInvalidText(t(\"common:required\"));\n      setTopicNameValidated(ValidatedOptions.error);\n    } else {\n      setIsLoading(true);\n\n      const isTopicNameValid = checkTopicName(topicData?.name);\n      if (!isTopicNameValid) {\n        setIsLoading(false);\n        setInvalidText(t(\"already_exists\", { name: topicData?.name })),\n          setTopicNameValidated(ValidatedOptions.error);\n      } else onNext();\n    }\n  };\n  const onSaveTopic = (transformedTopic: Topic) => {\n    if (topicData.partitions.length >= availablePartitionLimit)\n      setWarningModalOpen(true);\n    else onSave(transformedTopic);\n  };\n  return (\n    <>\n      {isSwitchChecked ? (\n        <>\n          <Divider className=\"kafka-ui--divider--FlexShrink\" />\n          <PageSection\n            variant={PageSectionVariants.light}\n            hasOverflowScroll={true}\n            aria-label={\"TODO\"}\n          >\n            {\n              <TopicAdvancePage\n                isCreate={true}\n                onConfirm={onTransform}\n                handleCancel={onCloseCreateTopic}\n                topicData={topicData}\n                setTopicData={setTopicData}\n                checkTopicName={checkTopicName}\n                availablePartitionLimit={availablePartitionLimit}\n                customRetentionSizeValue={customRetentionSizeValue}\n                setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n                customTimeValue={customTimeValue}\n                setCustomTimeValue={setCustomTimeValue}\n                radioTimeSelectValue={radioTimeSelectValue}\n                setRadioTimeSelectValue={setRadioTimeSelectValue}\n                radioSizeSelectValue={radioSizeSelectValue}\n                setRadioSizeSelectValue={setRadioSizeSelectValue}\n              />\n            }\n            {warningModalOpen && (\n              <PartitionLimitWarning\n                topicData={topicData}\n                onSave={onSaveTopic}\n                isModalOpen={warningModalOpen}\n                setIsModalOpen={setWarningModalOpen}\n              />\n            )}\n          </PageSection>\n        </>\n      ) : (\n        <PageSection\n          variant={PageSectionVariants.light}\n          type={PageSectionTypes.wizard}\n          hasOverflowScroll={true}\n          aria-label={\"TODO\"}\n        >\n          <Wizard\n            navAriaLabel={`${title} steps`}\n            mainAriaLabel={`${title} content`}\n            steps={steps}\n            onClose={closeWizard}\n            onSave={onTransform}\n            data-testid=\"topicBasicCreate-Wizard\"\n            footer={\n              <WizardCustomFooter\n                isLoading={isLoading}\n                onValidate={onValidate}\n                topicNameValidated={topicNameValidated}\n                closeWizard={closeWizard}\n              />\n            }\n          />\n          {warningModalOpen && (\n            <PartitionLimitWarning\n              topicData={topicData}\n              onSave={onSave}\n              isModalOpen={warningModalOpen}\n              setIsModalOpen={setWarningModalOpen}\n            />\n          )}\n        </PageSection>\n      )}\n    </>\n  );\n};\n","import {\n  Form,\n  FormGroup,\n  FormSection,\n  Radio,\n  Stack,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { CustomRetentionMessage } from \"./CustomRetentionMessage\";\nimport { CustomRetentionSize } from \"./CustomRetentionSize\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"./types\";\n\nexport type StepMessageRetentionProps = {\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n  radioTimeSelectValue: RadioSelectType;\n  setRadioTimeSelectValue: (value: RadioSelectType) => void;\n  radioSizeSelectValue: RetentionSizeRadioSelect;\n  setRadioSizeSelectValue: (data: RetentionSizeRadioSelect) => void;\n};\n\nexport const StepMessageRetention: React.FC<StepMessageRetentionProps> = ({\n  customTimeValue,\n  setCustomTimeValue,\n  radioTimeSelectValue,\n  setRadioTimeSelectValue,\n  setCustomRetentionSizeValue,\n  customRetentionSizeValue,\n  radioSizeSelectValue,\n  setRadioSizeSelectValue,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  const handleRetentionMessageSize = (value: RetentionSizeRadioSelect) => {\n    if (value === \"unlimited\") {\n      setRadioSizeSelectValue(value);\n      setCustomRetentionSizeValue({ value: -1, unit: \"unlimited\" });\n    } else {\n      setCustomRetentionSizeValue({ value: 1, unit: \"bytes\" });\n      setRadioSizeSelectValue(value);\n    }\n  };\n\n  const retentionTime = (value: RadioSelectType) => {\n    switch (value) {\n      case \"day\":\n        setCustomTimeValue({ value: 1, unit: \"days\" });\n        break;\n      case \"week\":\n        setCustomTimeValue({ value: 1, unit: \"weeks\" });\n        break;\n      case \"custom\":\n        setCustomTimeValue({ value: 7, unit: \"days\" });\n        break;\n      case \"unlimited\":\n        setCustomTimeValue({ value: -1, unit: \"unlimited\" });\n        break;\n    }\n    setRadioTimeSelectValue(value);\n  };\n\n  return (\n    <>\n      <Form onSubmit={(event) => event.preventDefault()}>\n        <FormSection\n          title={t(\"message_retention\")}\n          id=\"message-retention\"\n          titleElement={\"h2\"}\n        >\n          <TextContent>\n            <Text component={TextVariants.p}>\n              {t(\"message_retention_info\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"message_retention_info_note\")}\n            </Text>\n          </TextContent>\n\n          <FormGroup\n            fieldId=\"form-group-retention-time-in-wizard\"\n            label={t(\"retention_time\")}\n            isRequired\n          >\n            <Stack hasGutter>\n              <Radio\n                isChecked={radioTimeSelectValue === \"day\"}\n                name=\"radioDay\"\n                onChange={() => retentionTime(\"day\")}\n                label=\"A day\"\n                aria-label=\"A day\"\n                id=\"radio-controlled-1\"\n                value={radioTimeSelectValue}\n              />\n              <Radio\n                isChecked={radioTimeSelectValue === \"week\"}\n                name=\"radioWeek\"\n                onChange={() => retentionTime(\"week\")}\n                label=\"A week\"\n                aria-label=\"A week\"\n                id=\"radio-controlled-2\"\n                value={radioTimeSelectValue}\n              />\n              <Radio\n                isChecked={radioTimeSelectValue === \"custom\"}\n                name=\"radioCustomTime\"\n                onChange={() => retentionTime(\"custom\")}\n                label=\"Custom duration\"\n                aria-label=\"custom input\"\n                id=\"radio-controlled-4\"\n                value={radioTimeSelectValue}\n              />\n              {radioTimeSelectValue === \"custom\" && (\n                <CustomRetentionMessage\n                  customTimeValue={customTimeValue}\n                  setCustomTimeValue={setCustomTimeValue}\n                />\n              )}\n              <Radio\n                isChecked={radioTimeSelectValue === \"unlimited\"}\n                name=\"radioUnlimitedTime\"\n                onChange={() => retentionTime(\"unlimited\")}\n                label=\"Unlimited time\"\n                aria-label=\"Unlimited\"\n                id=\"radio-controlled-3\"\n                value={radioTimeSelectValue}\n              />\n            </Stack>\n          </FormGroup>\n          <FormGroup\n            fieldId=\"form-group-retention-size-in-wizard\"\n            label=\"Retention size\"\n          >\n            <Stack hasGutter>\n              <Radio\n                isChecked={radioSizeSelectValue === \"unlimited\"}\n                name=\"radioUnlimitedSize\"\n                onChange={() => handleRetentionMessageSize(\"unlimited\")}\n                label=\"Unlimited size\"\n                aria-label=\"Unlimited\"\n                id=\"radio-controlled-6\"\n                value={radioSizeSelectValue}\n              />\n              <Radio\n                isChecked={radioSizeSelectValue === \"custom\"}\n                name=\"radioCustomSize\"\n                onChange={() => handleRetentionMessageSize(\"custom\")}\n                label=\"Custom size\"\n                aria-label=\"custom size\"\n                id=\"radio-controlled-5\"\n                value={radioSizeSelectValue}\n              />\n              {radioSizeSelectValue === \"custom\" && (\n                <CustomRetentionSize\n                  customRetentionSizeValue={customRetentionSizeValue}\n                  setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n                />\n              )}\n            </Stack>\n          </FormGroup>\n        </FormSection>\n      </Form>\n    </>\n  );\n};\n","import type { NumberInputProps } from \"@patternfly/react-core\";\nimport {\n  Form,\n  FormGroup,\n  FormSection,\n  NumberInput,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\n\nexport type StepPartitionsProps = {\n  newTopicData: Topic;\n  onPartitionsChange: (value: Topic) => void;\n  availablePartitionLimit: number;\n};\n\nexport const StepPartitions: React.FC<StepPartitionsProps> = ({\n  newTopicData,\n  onPartitionsChange,\n  availablePartitionLimit,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  const handleOnPlus = () => {\n    const newPartitions = [\n      ...newTopicData.partitions,\n      { partition: newTopicData.partitions.length },\n    ];\n    onPartitionsChange({\n      ...newTopicData,\n      partitions: newPartitions,\n    });\n  };\n\n  const handleOnMinus = () => {\n    const { partitions } = newTopicData;\n    const newPartitions = partitions.slice(0, partitions.length - 1);\n    onPartitionsChange({\n      ...newTopicData,\n      partitions: newPartitions,\n    });\n  };\n\n  const handlePartitionTouchspinChange: NumberInputProps[\"onChange\"] = (\n    event\n  ) => {\n    const newPartitionCount = Number((event.target as HTMLInputElement).value);\n    const newPartitions = Array.from(\n      { length: newPartitionCount },\n      (_, i) => newTopicData.partitions[i] ?? { partition: i }\n    );\n    onPartitionsChange({\n      ...newTopicData,\n      partitions: newPartitions,\n    });\n  };\n  const onBlur = () => {\n    if (newTopicData.partitions.length < 1) {\n      onPartitionsChange({ ...newTopicData, partitions: [{ partition: 1 }] });\n    }\n  };\n\n  return (\n    <Form>\n      <FormSection title={t(\"partitions\")} id=\"partitions\" titleElement={\"h2\"}>\n        <TextContent>\n          <Text component={TextVariants.p}>{t(\"partition_info\")}</Text>\n          <Text component={TextVariants.small}>{t(\"partition_info_note\")}</Text>\n        </TextContent>\n\n        <FormGroup\n          label=\"Partitions\"\n          fieldId=\"step-topic-name-form\"\n          helperText={\n            newTopicData.partitions.length >= availablePartitionLimit\n              ? t(\"partitions_warning\")\n              : t(\"partition_helper_text\")\n          }\n          validated={\n            newTopicData.partitions.length >= availablePartitionLimit\n              ? \"warning\"\n              : \"default\"\n          }\n          isRequired\n        >\n          <NumberInput\n            onPlus={handleOnPlus}\n            onMinus={handleOnMinus}\n            value={\n              Number(newTopicData.partitions.length) == 0\n                ? \"\"\n                : Number(newTopicData.partitions.length)\n            }\n            inputName=\"input\"\n            onChange={handlePartitionTouchspinChange}\n            widthChars={20}\n            onBlur={onBlur}\n            min={1}\n          />\n        </FormGroup>\n      </FormSection>\n    </Form>\n  );\n};\n","import {\n  Alert,\n  Form,\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\nexport type StepReplicasProps = {\n  //replicationFactor: number;\n  minInSyncReplica: number;\n  availabilityZone: AZ;\n};\n\nexport const StepReplicas: React.FC<StepReplicasProps> = ({\n  minInSyncReplica,\n  availabilityZone,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <Form>\n      <FormSection\n        title={t(\"replicas\")}\n        id=\"replica-section\"\n        titleElement={\"h2\"}\n      >\n        <TextContent>\n          <Text component={TextVariants.p}>{t(\"replicas_info\")}</Text>\n          <Text component={TextVariants.small}>{t(\"replicas_detail\")}</Text>\n        </TextContent>\n        <Alert\n          variant=\"info\"\n          isInline\n          title={\n            availabilityZone == \"multi\"\n              ? t(\"replicas_helper_text_multi_az\")\n              : t(\"replicas_helper_text_single_az\")\n          }\n        />\n\n        {/*<TextWithLabelPopover\n          fieldId=\"replicas\"\n          btnAriaLabel={t(\"replicas\")}\n          fieldLabel={t(\"replicas\")}\n          popoverBody={t(\"replicas_description\")}\n          popoverHeader={t(\"replicas\")}\n        />*/}\n\n        <TextWithLabelPopover\n          fieldId=\"min-insync-replicas\"\n          btnAriaLabel=\"topic detail min-in-sync replica\"\n          fieldLabel=\"Minimum in-sync replicas\"\n          fieldValue={minInSyncReplica.toString()}\n          popoverBody={t(\"min_insync_replicas_description\")}\n          popoverHeader={t(\"min_insync_replicas\")}\n        />\n      </FormSection>\n    </Form>\n  );\n};\n","import {\n  Form,\n  FormGroup,\n  FormSection,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { useValidateTopic } from \"./useValidateTopic\";\n\nexport type StepTopicNameProps = {\n  newTopicData: Topic;\n  onTopicNameChange: (value: Topic) => void;\n  topicNameValidated: ValidatedOptions;\n  onValidationCheck: (value: ValidatedOptions) => void;\n  invalidText: string;\n  setInvalidText: (value: string) => void;\n};\n\nexport const StepTopicName: React.FC<StepTopicNameProps> = ({\n  newTopicData,\n  onTopicNameChange,\n  topicNameValidated,\n  onValidationCheck,\n  invalidText,\n  setInvalidText,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  const { validateName } = useValidateTopic();\n\n  const validationCheck = useCallback(\n    (inputValue: string) => {\n      const errorMessage = validateName(inputValue);\n      if (errorMessage) {\n        setInvalidText(errorMessage);\n        onValidationCheck(ValidatedOptions.error);\n      } else {\n        onValidationCheck(ValidatedOptions.default);\n      }\n    },\n    [setInvalidText, onValidationCheck, validateName]\n  );\n\n  useEffect(() => {\n    validationCheck(newTopicData.name);\n  }, [newTopicData.name, validationCheck]);\n\n  const handleTopicNameChange = (value: string) => {\n    validationCheck(value);\n    onTopicNameChange({ ...newTopicData, name: value });\n  };\n\n  return (\n    <Form onSubmit={(event) => event.preventDefault()}>\n      <FormSection title={t(\"topic_name\")} id=\"topic-name\" titleElement={\"h2\"}>\n        <TextContent>\n          <Text component={TextVariants.p}>{t(\"topic_name_info\")}</Text>\n          <Text component={TextVariants.small}>\n            {t(\"topic_name_info_note\")}\n          </Text>\n        </TextContent>\n        <FormGroup\n          label={t(\"topic_name\")}\n          fieldId=\"step-topic-name-form\"\n          helperText={t(\"topic_name_helper_text\")}\n          helperTextInvalid={invalidText}\n          validated={topicNameValidated}\n          isRequired\n        >\n          <TextInput\n            ouiaId={\"text-input\"}\n            isRequired\n            type=\"text\"\n            id=\"step-topic-name-input\"\n            name=\"step-topic-name\"\n            value={newTopicData.name}\n            onChange={handleTopicNameChange}\n            placeholder={t(\"enter_name\")}\n            validated={topicNameValidated}\n          />\n        </FormGroup>\n      </FormSection>\n    </Form>\n  );\n};\n","import type React from \"react\";\nimport {\n  WizardContextConsumer,\n  Button,\n  WizardFooter,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport interface IWizardFooter {\n  isLoading: boolean;\n  onValidate: (value: () => void) => void;\n  topicNameValidated: ValidatedOptions;\n  closeWizard: () => void;\n}\n\nexport const WizardCustomFooter: React.FC<IWizardFooter> = ({\n  isLoading,\n  onValidate,\n  closeWizard,\n  topicNameValidated,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack }) => {\n          if (activeStep.name == t(\"topic_name\")) {\n            return (\n              <>\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isLoading={isLoading}\n                  onClick={() => onValidate(onNext)}\n                  isDisabled={\n                    topicNameValidated == ValidatedOptions.default\n                      ? false\n                      : true\n                  }\n                  ouiaId={\"button-next\"}\n                >\n                  {t(\"common:next\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-back\"}\n                  variant=\"secondary\"\n                  isDisabled={true}\n                >\n                  {t(\"common:back\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-cancel\"}\n                  variant=\"link\"\n                  onClick={closeWizard}\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </>\n            );\n          }\n\n          if (activeStep.name == \"Replicas\") {\n            return (\n              <>\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={onNext}\n                  ouiaId={\"button-finish\"}\n                >\n                  {t(\"common:finish\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-back\"}\n                  variant=\"secondary\"\n                  onClick={onBack}\n                >\n                  {t(\"common:back\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-cancel\"}\n                  variant=\"link\"\n                  onClick={closeWizard}\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </>\n            );\n          }\n          return (\n            <>\n              <Button\n                ouiaId={\"button-next\"}\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={onNext}\n              >\n                {t(\"common:next\")}\n              </Button>\n              <Button\n                ouiaId={\"button-back\"}\n                variant=\"secondary\"\n                onClick={onBack}\n              >\n                {t(\"common:back\")}\n              </Button>\n              <Button\n                ouiaId={\"button-cancel\"}\n                variant=\"link\"\n                onClick={closeWizard}\n              >\n                {t(\"common:cancel\")}\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n};\n","import type React from \"react\";\nimport { useState } from \"react\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { CreateTopicHead, CreateTopicWizard } from \"../components\";\n\nexport type CreateTopicPageProps = {\n  kafkaName: string;\n  kafkaPageLink: string;\n  kafkaInstanceLink: string;\n  onSave: (topicData: Topic) => void;\n  initialTopicValues: Topic;\n  onCloseCreateTopic: () => void;\n  checkTopicName: (value: string) => boolean;\n  availablePartitionLimit: number;\n  availabilityZone: AZ;\n};\n\nexport const CreateTopic: React.FC<CreateTopicPageProps> = ({\n  kafkaName,\n  kafkaPageLink,\n  kafkaInstanceLink,\n  onSave,\n  initialTopicValues,\n  onCloseCreateTopic,\n  checkTopicName,\n  availablePartitionLimit,\n  availabilityZone,\n}) => {\n  const [isSwitchChecked, setIsSwitchChecked] = useState<boolean>(false);\n\n  return (\n    <>\n      <CreateTopicHead\n        showAllOptions={isSwitchChecked}\n        kafkaName={kafkaName}\n        kafkaInstanceLink={kafkaInstanceLink}\n        kafkaPageLink={kafkaPageLink}\n        onShowAllOptions={setIsSwitchChecked}\n      />\n      <CreateTopicWizard\n        isSwitchChecked={isSwitchChecked}\n        onCloseCreateTopic={onCloseCreateTopic}\n        onSave={onSave}\n        initialFieldsValue={initialTopicValues}\n        checkTopicName={checkTopicName}\n        availablePartitionLimit={availablePartitionLimit}\n        availabilityZone={availabilityZone}\n      />\n    </>\n  );\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { TopicAdvancePage } from \"../components/TopicAdvancePage\";\nimport { PartitionLimitWarning } from \"../components\";\nimport type {\n  CustomSelect,\n  CustomRetentionSizeSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n  TimeUnit,\n} from \"../../\";\nimport { bytesToMemorySize, millisecondsToTime } from \"../../KafkaTopics/types\";\nimport type { CustomRetentionUnit } from \"../components/types\";\nimport { retentionSizeTransformer } from \"../components/retentionSizeTransformer\";\nimport { retentionTimeTransformer } from \"../components/retentionTimeTransformer\";\n\nexport type EditTopicPropertiesProps = {\n  topic: Topic;\n  onCancel: () => void;\n  onSave: (data: Topic) => void;\n  availablePartitionLimit: number;\n};\n\nexport const EditTopicProperties: FunctionComponent<\n  EditTopicPropertiesProps\n> = ({ topic, onCancel, onSave, availablePartitionLimit }) => {\n  const millisecondsToTimeValue = millisecondsToTime(\n    topic[\"retention.ms\"].value\n  );\n  const bytesToSizeValue = bytesToMemorySize(topic[\"retention.bytes\"].value);\n  const [customTimeValue, setCustomTimeValue] = useState<CustomSelect>({\n    unit:\n      topic[\"retention.ms\"].value != BigInt(-1)\n        ? (millisecondsToTimeValue.unit as TimeUnit)\n        : \"days\",\n    value:\n      topic[\"retention.ms\"].value != BigInt(-1)\n        ? Number(millisecondsToTimeValue.value)\n        : 7,\n  });\n\n  const [customRetentionSizeValue, setCustomRetentionSizeValue] =\n    useState<CustomRetentionSizeSelect>({\n      unit:\n        topic[\"retention.bytes\"].value != BigInt(-1)\n          ? (bytesToSizeValue.unit as CustomRetentionUnit)\n          : \"bytes\",\n      value:\n        topic[\"retention.bytes\"].value != BigInt(-1)\n          ? Number(bytesToSizeValue.value)\n          : 1,\n    });\n\n  const [radioTimeSelectValue, setRadioTimeSelectValue] =\n    useState<RadioSelectType>(\n      topic[\"retention.ms\"].value == BigInt(-1) ? \"unlimited\" : \"custom\"\n    );\n\n  const [radioSizeSelectValue, setRadioSizeSelectValue] =\n    useState<RetentionSizeRadioSelect>(\n      topic[\"retention.bytes\"].value == BigInt(-1) ? \"unlimited\" : \"custom\"\n    );\n\n  const [topicData, setTopicData] = useState<Topic>(topic);\n\n  const [warningModalOpen, setWarningModalOpen] = useState<boolean>(false);\n\n  const onSaveTopic = (transformedTopic: Topic) => {\n    if (topicData.partitions.length >= availablePartitionLimit)\n      setWarningModalOpen(true);\n    else onSave(transformedTopic);\n  };\n\n  const onTransform = () => {\n    const tranformedValueInMilliseconds =\n      retentionTimeTransformer(customTimeValue);\n    const tranformedValueInBytes = retentionSizeTransformer(\n      customRetentionSizeValue\n    );\n    const transformedTopic: Topic = {\n      ...topicData,\n      \"retention.ms\": {\n        type: \"ms\",\n        value: tranformedValueInMilliseconds || BigInt(-1),\n      },\n      \"retention.bytes\": { type: \"bytes\", value: tranformedValueInBytes },\n    };\n    onSaveTopic(transformedTopic);\n  };\n\n  return (\n    <PageSection\n      variant={\"light\"}\n      className={\"topic-properties\"}\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n    >\n      <TopicAdvancePage\n        isCreate={false}\n        onConfirm={onTransform}\n        handleCancel={onCancel}\n        topicData={topicData}\n        setTopicData={setTopicData}\n        availablePartitionLimit={availablePartitionLimit}\n        customRetentionSizeValue={customRetentionSizeValue}\n        setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n        customTimeValue={customTimeValue}\n        setCustomTimeValue={setCustomTimeValue}\n        radioTimeSelectValue={radioTimeSelectValue}\n        setRadioTimeSelectValue={setRadioTimeSelectValue}\n        radioSizeSelectValue={radioSizeSelectValue}\n        setRadioSizeSelectValue={setRadioSizeSelectValue}\n      />\n      {warningModalOpen && (\n        <PartitionLimitWarning\n          topicData={topicData}\n          onSave={onSave}\n          isModalOpen={warningModalOpen}\n          setIsModalOpen={setWarningModalOpen}\n        />\n      )}\n    </PageSection>\n  );\n};\n","import {\n  Button,\n  Divider,\n  Form,\n  FormSection,\n  PageGroup,\n  PageSection,\n  Sidebar,\n  SidebarContent,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport {\n  formattedRetentionSize,\n  formattedRetentionTime,\n} from \"../../KafkaTopics/types\";\nimport { TextWithLabelPopover } from \"../components\";\nimport { Cleanup } from \"../components/Cleanup\";\nimport { Flush } from \"../components/Flush\";\nimport { Message } from \"../components/Message\";\nimport { Replication } from \"../components/Replication\";\nimport { TopicAdvanceIndex } from \"../components/TopicAdvanceIndex\";\nimport { TopicAdvanceJumpLinks } from \"../components/TopicAdvanceJumpLinks\";\n\nexport type TopicViewDetailProps = {\n  topic: Topic;\n  deleteTopicHref: string;\n  updateTopicHref: string;\n};\n\nexport const TopicProperties: React.FunctionComponent<TopicViewDetailProps> = ({\n  topic,\n  deleteTopicHref,\n  updateTopicHref,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  return (\n    <PageSection\n      variant={\"light\"}\n      className={\"topic-properties\"}\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n    >\n      <Sidebar hasGutter>\n        <TopicAdvanceJumpLinks canHaveDelete={true} />\n        <SidebarContent>\n          <PageGroup\n            hasOverflowScroll={true}\n            aria-label={\"TODO\"}\n            id=\"topic-detail-view\"\n            className={\"pf-u-mb-4xl\"}\n          >\n            <PageSection padding={{ default: \"noPadding\" }}>\n              <Split>\n                <SplitItem isFilled>\n                  <Form id=\"topic-form\">\n                    <FormSection\n                      title={t(\"core_configuration\")}\n                      id=\"core-configuration\"\n                      titleElement={\"h2\"}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className=\"section-info\"\n                        >\n                          {t(\"core_config_info\")}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"topic-name\"\n                        btnAriaLabel={t(\"topic_name\")}\n                        fieldLabel={t(\"topic_name\")}\n                        fieldValue={topic.name}\n                        popoverBody={t(\"topic_name_description\")}\n                        popoverHeader={t(\"topic_name\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"partitions\"\n                        btnAriaLabel={t(\"partitions\")}\n                        fieldLabel={t(\"partitions\")}\n                        fieldValue={topic.partitions.length.toString()}\n                        popoverBody={t(\"partitions_description\")}\n                        popoverHeader={t(\"partitions\")}\n                      />\n\n                      {/*<TextWithLabelPopover\n                        fieldId=\"replicas\"\n                        btnAriaLabel={t(\"replicas\")}\n                        fieldLabel={t(\"replicas\")}\n                        fieldValue={}\n                        popoverBody={t(\"replicas_description\")}\n                        popoverHeader={t(\"replicas\")}\n                      />*/}\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-insync-replicas\"\n                        btnAriaLabel={t(\"min_insync_replicas\")}\n                        fieldLabel={t(\"min_insync_replicas\")}\n                        fieldValue={topic[\"min.insync.replicas\"].toString()}\n                        popoverBody={t(\"min_insync_replicas_description\")}\n                        popoverHeader={t(\"min_insync_replicas\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"retention-time\"\n                        btnAriaLabel={t(\"retention_time\")}\n                        fieldLabel={t(\"retention_time\")}\n                        fieldValue={formattedRetentionTime(\n                          topic[\"retention.ms\"].value\n                        )}\n                        popoverBody={t(\"retention_time_description\")}\n                        popoverHeader={t(\"retention_time\")}\n                        showUnlimited={true}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"retention-size\"\n                        btnAriaLabel={t(\"retention_size\")}\n                        fieldLabel={t(\"retention_size\")}\n                        fieldValue={formattedRetentionSize(\n                          topic[\"retention.bytes\"].value\n                        )}\n                        popoverHeader={t(\"retention_size\")}\n                        popoverBody={t(\"retention_size_description\")}\n                        showUnlimited={true}\n                      />\n                    </FormSection>\n                    <Message\n                      defaultMaximumMessageBytes={\n                        topic[\"max.message.bytes\"].value\n                      }\n                      defaultMessageTimestampType={\n                        topic[\"message.timestamp.type\"]\n                      }\n                      defaultMaxMessageTimestampDiff={\n                        topic[\"message.timestamp.difference.max.ms\"].value\n                      }\n                    />\n                    <FormSection title={t(\"log\")} id=\"log\" titleElement={\"h2\"}>\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t(\"log_section_info\")}\n                          <Text\n                            component={TextVariants.small}\n                            className=\"section-info-note\"\n                          >\n                            {t(\"log_section_info_note\")}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"cleanup-policy\"\n                        btnAriaLabel={t(\"cleanup_policy\")}\n                        fieldLabel={t(\"cleanup_policy\")}\n                        fieldValue={topic[\"cleanup.policy\"]}\n                        popoverBody={t(\"cleanup_policy_description\")}\n                        popoverHeader={t(\"cleanup_policy\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"delete-retention-time\"\n                        btnAriaLabel={t(\"delete_retention_time\")}\n                        fieldLabel={t(\"delete_retention_time\")}\n                        fieldValue={topic[\n                          \"delete.retention.ms\"\n                        ].value.toString()}\n                        popoverBody={t(\"delete_retention_time_description\")}\n                        popoverHeader={t(\"delete_retention_time\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-cleanable-ratio\"\n                        btnAriaLabel={t(\"min_cleanable_ratio\")}\n                        fieldLabel={t(\"min_cleanable_ratio\")}\n                        fieldValue={topic[\n                          \"min.cleanable.dirty.ratio\"\n                        ].toString()}\n                        popoverBody={t(\"min_cleanable_ratio_description\")}\n                        popoverHeader={t(\"min_cleanable_ratio\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-compaction-lag-time\"\n                        btnAriaLabel={t(\"min_compaction_lag_time\")}\n                        fieldLabel={t(\"min_compaction_lag_time\")}\n                        fieldValue={topic[\n                          \"min.compaction.lag.ms\"\n                        ].value.toString()}\n                        popoverBody={t(\"min_compaction_lag_time_description\")}\n                        popoverHeader={t(\"min_compaction_lag_time\")}\n                      />\n                    </FormSection>\n                    <Replication />\n                    <Cleanup\n                      defaultLogSegmentSize={topic[\"segment.bytes\"].value}\n                      defaultSegmentTime={topic[\"segment.ms\"].value}\n                      defaultSegmentJitterTime={\n                        topic[\"segment.jitter.ms\"].value\n                      }\n                      defaultFileDeleteDelay={\n                        topic[\"file.delete.delay.ms\"].value\n                      }\n                    />\n                    <TopicAdvanceIndex\n                      defaultIndexIntervalSize={\n                        topic[\"index.interval.bytes\"].value\n                      }\n                      defaultSegmentIndexSize={\n                        topic[\"segment.index.bytes\"].value\n                      }\n                    />\n                    <Flush\n                      defaultFlushIntervalMessages={\n                        topic[\"flush.messages\"].value\n                      }\n                      defaultFlushIntervalTime={topic[\"flush.ms\"].value}\n                    />\n                  </Form>\n\n                  <Divider className=\"pf-u-mt-2xl pf-u-mb-2xl\" />\n\n                  <TextContent>\n                    <Text component={TextVariants.h2} id=\"delete\">\n                      {t(\"delete_topic_irreversible\")}\n                    </Text>\n                    <Text component={TextVariants.p} className=\"section-info\">\n                      {t(\"delete_topic_info\")}\n                    </Text>\n                    <Button\n                      variant=\"danger\"\n                      data-testid=\"tabProperties-actionDelete\"\n                      component={(props) => (\n                        <Link {...props} to={deleteTopicHref}>\n                          {t(\"delete_topic\")}\n                        </Link>\n                      )}\n                    />\n                  </TextContent>\n                </SplitItem>\n                <SplitItem>\n                  <Button\n                    variant=\"primary\"\n                    data-testid=\"tabProperties-actionEdit\"\n                    component={(props) => (\n                      <Link {...props} to={updateTopicHref}>\n                        {t(\"edit_props\")}\n                      </Link>\n                    )}\n                  />\n                </SplitItem>\n              </Split>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n"],"names":["NewInstanceSegment","ClusterSegment","ControlPlaneSpecialSegments","ControlPlaneRouteRoot","ControlPlaneRoutePath","ControlPlaneNewInstancePath","ControlPlaneDeleteInstancePath","ControlPlaneChangeOwnerPath","DedicatedControlPlaneRouteRoot","DedicatedControlPlaneRoutePath","DedicatedControlPlaneClustersPath","DedicatedControlPlaneNewInstancePath","DedicatedControlPlaneDeleteInstancePath","DedicatedControlPlaneChangeOwnerPath","DrawerContext","createContext","DrawerProvider","children","standardMatch","useRouteMatch","dedicatedMatch","match","Error","selectedInstance","params","id","includes","undefined","section","instance","useState","isExact","isExpanded","setIsExpanded","activeTab","setActiveTab","onClose","useRef","toggleExpanded","useCallback","newValue","prev","current","useEffect","value","useMemo","Provider","onTabChange","useDrawer","context","useContext","RedirectOnGateError","redirectUrl","key","useLocation","ErrorBoundary","resetKeys","fallbackRender","RedirectAndResetError","reset","Redirect","to","ConnectedControlPlaneHeader","activeSection","sectionsHref","standard","dedicated","clusters","useKafkaInstancesTable","instancesHref","instanceSelectedHref","instanceCreationHref","instanceDeletionHref","instanceChangeOwnerHref","history","useHistory","setActiveQuickStart","QuickStartContext","replace","labels","usePaginationSearchParams","page","perPage","setPagination","setPaginationQuery","resetPaginationQuery","namesChips","useURLSearchParamsChips","ownersChips","statusesChips","useSortableSearchParams","fields","isColumnSortable","sort","sortDirection","onClearAllFilters","clearChained","openDrawer","tab","onDetailsClick","onConnectionsClick","onCreate","push","onDelete","onChangeOwner","onQuickstartGuide","KafkaInstancesRoute","getUrlForInstance","data","name","chips","owner","status","direction","deployment","columns","instances","itemCount","count","names","owners","statuses","onPageChange","onSearchName","add","onRemoveNameChip","remove","onRemoveNameChips","clear","onSearchOwner","onRemoveOwnerChip","onRemoveOwnerChips","onSearchStatus","toggle","onRemoveStatusChip","onRemoveStatusChips","isRowSelected","onDetails","onConnection","onClickConnectionTabLink","onClickSupportLink","onInstanceLinkClick","canHaveInstanceLink","canOpenConnection","canChangeOwner","canDelete","CreateKafkaInstanceRoute","callbacks","auth","useChrome","getUsername","getUser","username","identity","user","Promise","reject","checkDeveloperAvailabilityQuery","standardQuotaQuery","providersWithRegionsQuery","getProvidersInfo","getProviderRegionsSizes","checkDeveloperAvailability","onAvailable","onUsed","onUnavailable","checkStandardQuota","onQuotaAvailable","onNoQuotaAvailable","onOutOfQuota","hasTrialQuota","remainingPrepaidQuota","remainingMarketplaceQuota","marketplaceSubscriptions","quota","fetchProvidersWithRegions","plan","providers","getStandardSizes","provider","region","providersInfo","providerInfo","find","p","getTrialSizes","standardSizes","length","displayName","trialSizes","trial","useCreateKafkaCallbacks","createKafkaInstance","qsContext","onClickKafkaOverview","onClickQuickStart","onSuccess","onError","mutateAsync","onCancel","isModalOpen","onClickContactUs","onLearnHowToAddStreamingUnits","onLearnMoreAboutSizes","subscriptionOptionsHref","document","location","href","appendTo","getElementById","body","CreateDedicatedKafkaInstanceRoute","dedicatedQuotaQuery","dedicatedClustersQuery","dedicatedClusterSizesQuery","checkDedicatedQuota","remainingDedicatedQuota","fetchClusters","defaultCluster","getDedicatedSizes","cluster","clusterId","useCreateDedicatedKafkaCallbacks","createDedicatedKafkaInstance","useControlPlaneGate","enterpriseMatch","DeleteKafkaInstanceRoute","isDeleting","instanceName","ChangeOwnerRoute","accounts","updateInstance","onConfirm","newOwner","mutate","updates","savingState","isLoading","isError","error","type","currentOwner","map","a","ControlPlaneRoutes","Route","path","exact","useDedicatedGate","refetchInterval","ams","account","useApi","useQuery","queryKey","queryFn","apiAccountsMgmtV1CurrentAccountGet","args","organization","apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet","useStandardQuota","refetch","isSuccess","hasStandardQuota","isFetched","DedicatedClustersRoute","DedicatedClustersWithEntitlementRoute","DedicatedKafkaInstancesRoute","props","DedicatedKafkaInstancesWithEntitlementRoute","dedicatedClusters","hasReadyClusters","filter","c","DedicatedControlPlaneRoutes","Switch","DataPlaneRoutePath","root","DataPlaneTopicRoutePath","DataPlaneConsumerGroupRoutePath","DataPlaneTopicConsumerGroupRoutePath","DataPlanePermissionsRoutePath","useDataPlaneGate","DataPlaneHeaderConnected","url","dashboard","topics","consumer","permissions","settings","PermissionsRoute","managePermissionsHref","editPermissionsHref","dispatch","useDispatch","acls","adminUrl","serviceAccounts","userAccounts","userAccount","email","principalType","serviceAccountList","serviceAccount","allAccounts","onDeleteSelected","rowIndex","rowToDelete","groups","instanceId","acl","patternType","resource","permissionType","permission","principal","resourceName","operation","resourceType","_","message","addNotification","variant","title","dismissable","onManagePermissionsActionItem","onManagePermission","onManagePermissions","onPerPageChange","TopicsRoute","topicChips","onDeleteTopic","topicName","onEditTopic","getUrlFortopic","row","onEdit","onSearchTopic","onCreateTopic","onRemoveTopicChip","onRemoveTopicChips","SettingsRoute","onSubmitReAuthentication","reauthenticationEnabled","reauthentication_enabled","request","DashboardRoute","hasUserAlreadyClosedAlert","setHasUserAlreadyClosedAlert","onAlertClose","queryInstance","queryKpisMetrics","queryInstanceMetrics","queryTopicMetrics","queryTopics","getMetricsKpi","kpis","topicPartitionsLimit","maxPartitions","getKafkaInstanceMetrics","interval","duration","all","metrics","diskSpaceLimit","max_data_retention_size","bytes","connectionsLimit","connections","connectionRateLimit","connectionRate","getTopicsMetrics","selectedTopic","kafkaTopics","t","ConsumerGroupsRoute","instanceConsumerGroupsHref","groupId","consumerName","onDeletConsumerGroup","onViewPartition","onClickResetOffset","consumers","onSearchConsumer","onRemoveConsumerChip","onRemoveConsumerChips","onViewResetOffset","useTopicGate","topic","DataPlaneTopicHeaderConnected","instanceDetailsHref","instanceTopicsHref","tabsHref","messages","properties","schemas","instanceDetailHref","TopicConsumerGroupsRoute","TopicMessagesGroupsRoute","kafkaTopicMessagesFetchQuery","getMessages","partitions","TopicPropertiesRoute","deleteTopicHref","updateTopicHref","TopicSchemasRoute","chrome","processor2","entry","e","basename","srs","getToken","AuthContext","ConfigContext","apiBasePath","I18nProvider","lng","resources","en","common","srsTemporaryFixMe","debug","ScalprumComponent","appName","module","scope","ErrorComponent","processor","renderSchema","registry","version","registryId","useConsumerGroupGate","consumerGroup","consumerGroupId","ConsumerGroupDeleteRoute","onDeleteConsumer","state","ConsumerGroupResetOffsetRoute","onConfirmResetOffset","offset","customOffsetValue","Array","from","Set","onClickClose","ConsumerGroupViewPartitionRoute","viewPartitionConsumerGroupHref","consumerGroupByTopic","activeMembers","activeConsumers","partitionsWithLag","laggingPartitions","onSelectDeleteConsumerGroup","onSelectResetOffsetConsumerGroup","useTopicConsumerGroupGate","TopicConsumerGroupDeleteRoute","instanceTopicConsumerGroupsHref","TopicConsumerGroupResetOffsetRoute","TopicConsumerGroupViewPartitionRoute","viewTopicPartitionConsumerGroupHref","DeleteKafkaTopic","useTranslation","DeleteModal","confirmationValue","Trans","ns","i18nKey","components","values","TopicDeleteRoute","TopicEditPropertiesRoute","updateTopic","onSave","topicData","availablePartitionLimit","PermissionsEditRoute","consumerGroups","consumerGroupsList","topicsList","updatePermissions","onSaveAcls","aclPermission","deletedPermissions","aclData","aclToDelete","existingAcls","aclsForSelectedAccount","selectedAccount","kafkaName","PermissionsSelectAccountRoute","loggedInUser","setCurrentlyLoggedInUser","filteredAccounts","onNext","TopicCreateRoute","createTopic","availabilityZone","az","checkTopicName","onCloseCreateTopic","initialTopicValues","partition","kafkaPageLink","kafkaInstanceLink","topicPropertyHref","topicHref","instanceTopicConsumerGroupHref","permissionsModalHref","DataPlaneRoutes","InvalidObject","DefaultServiceRedirect","gate","Loading","OverviewRoute","Routes","render","memo","updateDocumentTitle","on","register","notifications","unregister","event","console","dir","navId","basePath","getPath","QuickstartLoader","loaded","setLoaded","quickStarts","AssetsContext","showDrafts","onLoad","qs","set","init","errorDescriptionKey","middleware","useDedicatedClusterSizesFetchQuery","queryClient","api","fetchQuery","getEnterpriseClusterById","useDedicatedClustersFetchQuery","getEnterpriseOsdClusters","useDedicatedQuotaFetchQuery","skipCache","staleTime","Infinity","useConsumerGroup","suspense","getConsumerGroupById","enabled","Boolean","useConsumerGroups","getConsumerGroups","useDedicatedClusters","refetchOnWindowFocus","refetchOnReconnect","refetchOnMount","retry","kafkaRequestToKafkaInstanceEnhanched","developerPlanInstanceLimits","standardPlanInstanceLimits","enhancedInstance","billing","createdAt","created_at","Date","toISOString","egress","expiryDate","expires_at","ingress","messageSize","BigInt","instance_type","cloud_provider","size","accepted","preparing","provisioning","ready","failed","deprovision","deleting","storage","updatedAt","updated_at","cluster_id","bootstrapUrl","bootstrap_server_host","admin_api_server_url","multi_az","marketplaceForBilling","ms","subscriptions","s","billing_cloud_account_id","marketplace","billing_model","subscription","warn","thisInstanceLimits","l","size_id","APIErrorCodes","useKafkaInstanceTransformer","getStandardQuotaQuery","useStandardQuotaFetchQuery","useProvidersWithRegionsFetchQuery","useProviderRegionSizesFetchQuery","JSON","stringify","standardQuota","standardPlanLimitsQuery","developerPlanLimitsQuery","standardPlanLimits","developerPlanLimits","useKafka","dataMapper","kafkasFleet","getKafkaById","useKafkas","clusterIds","getKafkas","res","forEach","i","setQueryData","useTopic","getTopic","useTopics","getTopics","useUserAccounts","getUserAccounts","listPrincipals","useAcls","getAcls","useServiceAccounts","getServiceAccounts","useDeveloperInstanceAvailabilityFetchQuery","fleetApi","clustersApi","clusterResponse","some","k","useKafkaFetchQuery","useKafkaKpisFetchQuery","getMetricsByInstantQuery","useKafkaMetricsFetchQuery","getMetricsByRangeQuery","useMessagesFetchQuery","records","consumeRecords","kms","getInstanceTypesByCloudProviderAndRegion","getCloudProviders","getCloudProviderRegions","useTopicsFetchQuery","useTopicsMetricsFetchQuery","useCreateDedicatedKafkaMutation","useMutation","kafkaRequest","sizeId","createKafka","isServiceApiError","response","DUPLICATE_INSTANCE_NAME","INTERNAL_CAPACITY_ERROR","INSUFFICIENT_QUOTA","invalidateQueries","UNAUTHORIZED_USER","TRIAL_USED","FAILED_TO_CHECK_QUOTA","OWNER_DOES_NOT_EXIST","useCreateKafkaMutation","code","useDeleteKafkaMutation","deleteKafkaById","useDeleteTopicMutation","deleteTopic","useUpdateKafkaMutation","updateKafkaById","getErrorCode","reason","AxiosError","useDeleteConsumerGroupMutation","deleteConsumerGroupById","useResetConsumerGroupMutation","resetConsumerGroupOffset","useDeletePermissionsMutation","deleteAcls","useUpdatePermissionsMutation","createAcl","useCreateTopicMutation","useUpdateTopicMutation","KafkaInstancesSortableColumns","KafkaTopicsSortableColumns","Object","TopicOrderKey","KafkaConsumerGroupSortableColumns","ConsumerGroupOrderKey","ReactQueryDevtoolsProduction","lazy","then","d","default","ReactQueryDevtools","ApiContext","ApiProvider","showDevTools","client","Suspense","fallback","useApiConfiguration","consumerGroupTransformer","stateMapping","lag","memberId","logEndOffset","unassignedPartitions","DEAD","EMPTY","STABLE","UNKNOWN","COMPLETING_REBALANCE","PREPARING_REBALANCE","fetchConsumerGroup","fetchConsumerGroups","items","total","dedicatedClusterTransformer","requiresPrivateNetwork","access_kafkas_via_private_network","cloudProvider","cloudRegion","fetchDedicatedClusters","MissingDedicatedEntitlement","isStandardQuota","q","related_resources","r","isMarketplaceQuota","fetchDedicatedQuota","organizationId","quotaResponse","statusText","dedicatedQuotas","resource_name","product","dedicatedQuota","hasDedicatedQuota","allowed","consumed","apiSizeToComponentSize","isDisabled","apiSize","display_name","quota_consumed","ingress_throughput_per_sec","egress_throughput_per_sec","Math","round","total_max_connections","max_connection_attempts_per_sec","max_partitions","max_message_size","maturity_status","trialDurationHours","lifespan_seconds","fetchDedicatedClusterSizes","supported_instance_types","instance_types","flatMap","sizes","fetchKafkaKpis","topicPartitions","metric","fetchKafkaMetrics","safeMetrics","m","persistentvolumeclaim","usedDiskSpaceMetrics","connectionAttemptRateMetrics","clientConnectionsMetrics","addAggregatedValuesTo","timestamp","valuesToQuery","field","comparison","join","v","trim","uiColumnMapping","fetchKafkas","search","filtersToSearch","toString","rawInstances","fetchMessages","limit","headers","fetchOrganization","fetchProviderRegionSizes","instanceType","regions","regionInfo","availableSizes","capacity","available_sizes","bind","allProviders","fetchProviderRegions","firstProvider","defaultProvider","max_capacity_reached","fetchStandardQuota","standardQuotas","prepaidQuota","marketplaceQuotas","reduce","agg","unaggregatedSubscriptions","cloud_accounts","subscriptionMarketplaces","cloud_provider_id","cloud_account_id","fetchTopic","topicTransformer","fetchTopics","fetchTopicsMetrics","filteredMetrics","bytesIncoming","bytesOutgoing","bytesPerPartition","incomingMessageRate","addAggregatedTotalBytesTo","metricsTopics","fetchUserAccounts","fullObject","first_name","last_name","isOrgAdmin","is_org_admin","fetchPermissions","fetchServiceAccounts","masQueries","_root","entity","standardAvailable","subentity","dedicatedAvailable","developerAvailability","standardAvailability","dedicatedQueries","clusterSizes","kafkaQueries","list","details","topicMessages","kpi","providerQueries","limits","developer","developerDefaults","preallocate","standardDefaults","topicTransformerFactory","cm","fromEntries","config","configValueToMilliseconds","configValueToBytes","configValueToBoolean","configValueToNumber","defaultIfEmpty","defaultIfError","parseInt","parse","convertToTopicSettings","inputObj","keyValuePairs","configEntries","numPartitions","accessToken","DefaultApi","Configuration","token","PrincipalApi","SecurityApi","AppServicesApi","TopicsApi","GroupsApi","AclsApi","RecordsApi","EnterpriseDataplaneClustersApi","REACT_QUERY_DEVTOOLS","METRICS_LAG_ALERT","isReactQueryDevToolsEanbled","localStorage","getItem","metricsIsLagAlertsDismissed","metricsDismissLagAlerts","setItem","CreatingStatuses","ReadyStatuses","DegradedStatuses","SuspendingStatuses","SuspendedStatuses","DeletingStatuses","ResumingStatuses","SimplifiedStatuses","creating","degraded","suspended","resuming","suspending","SelectOwner","isOpen","setIsOpen","selectOptions","filterRegExp","RegExp","test","SelectOption","description","Select","SelectVariant","onToggle","placeholderText","isCreatable","createText","menuAppendTo","maxHeight","selections","onSelect","onFilter","ChangeKafkaOwner","setAccount","submittedAccount","isSaving","onConfirmOwner","Modal","position","actions","Button","onClick","Form","onSubmit","preventDefault","Alert","AlertVariant","isInline","renderAlert","FormGroup","fieldId","label","Skeleton","width","ConsumerGroupPopover","Popover","headerContent","bodyContent","OutlinedQuestionCircleIcon","ConsumerGroupStateLabel","ConsumerGroupByKafka","columnNames","consumer_id","current_offset","log_end_offset","offset_lag","Stack","hasGutter","DescriptionList","columnModifier","lg","className","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","TableComposable","TableVariant","Thead","noWrap","Tr","Th","Tbody","Td","dataLabel","ConsumerGroupByTopic","ConsumerGroupDetails","ConsumerGroupEmptyState","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","CubesIcon","Title","headingLevel","TitleSizes","EmptyStateBody","OffsetSelect","onChange","offsetValueOption","absolute","latest","earliest","toggleAriaLabel","selection","entries","TopicSelect","index","ConsumerGroupResetOffset","disableFocusTrap","setSelectedTopic","selectedOffset","setSelectedOffset","setcustomOffsetValue","isResetAccepted","setIsResetAccepted","selectedConsumer","setSelectedConsumer","isDisconnected","consumerList","isResetOffsetDisabled","tableColumns","clientId","new_offset","areAllConsumerSelected","isConsumerSelected","onResetOffset","ModalVariant","showClose","StackItem","isHorizontal","TextInput","readOnlyVariant","select","_event","isSelecting","onSelectAllConsumer","isSelected","String","Checkbox","isChecked","DeleteConsumerGroup","isConsumerConnected","Text","ConsumerGroupDrawer","dropdownItems","DropdownItem","panelContent","DrawerPanelContent","widths","DrawerHead","TextContent","component","TextVariants","DrawerActions","Dropdown","KebabToggle","isPlain","DropdownPosition","DrawerCloseButton","DrawerPanelBody","Drawer","DrawerContent","DrawerContentBody","useKafkaLabels","statusesSimplified","aws","gcp","azure","providerRegions","useTopicLabels","useConsumerGroupLabels","Columns","ConsumerGroups","isFiltered","PageSection","isFilled","hasOverflowScroll","TableView","tableOuiaId","ariaLabel","renderHeader","column","info","popover","popoverProps","renderCell","renderActions","ActionsColumn","filters","onSearch","onRemoveChip","onRemoveGroup","validate","errorMessage","emptyStateNoData","emptyStateNoResults","EmptyStateNoResults","ControlPlaneHeader","PageSectionVariants","padding","hasShadowBottom","Level","LevelItem","Nav","NavList","NavItem","style","borderTop","ouiaId","isActive","Link","Divider","ExternalLink","testId","onProviderChange","selectedProvider","defaultRegion","StandardPlanMachine","capabilities","form","creationError","tsTypes","predictableActionArguments","schema","events","services","initial","states","verifyAvailability","always","cond","target","overQuota","tags","instanceUnavailable","regionsUnavailable","configuring","unsubmitted","submitted","create","invalid","valid","fieldInvalid","submit","saving","createSuccess","createError","saved","empty","nameChange","providerChange","regionChange","idle","disabled","waitingForQuota","loading","invoke","src","onDone","sizeChange","billingChange","prepaidOnly","singleSubscription","onlySubscriptions","selectSubscription","prepaidAndSubscriptions","prepaid","selectPrepaid","setInitialContext","availableProviders","setName","setProvider","setRegion","setSize","setSizes","smallestSize","b","resetCreationErrorMessage","_context","setCreationError","triggerSave","triggerSubmit","triggerBillingChange","setBillingToPrepaid","setBillingToSubscription","unsetSubscription","guards","isOverQuota","instanceAvailability","isInstanceUnavailable","isRegionsUnavailable","nameIsEmpty","nameIsValid","providerIsValid","selectedProviderInfo","regionIsValid","noProviderOrRegion","noSizes","emptySizes","sizeIsDisabled","billingRequiredButNotSelected","meta","hasTag","sizeIsOverQuota","availableQuota","didProviderChange","didRegionChange","didSizeChange","onlyPrepaid","matchesSelectedProviderOrRHMarketplaceAndHasQuota","hasPrepaidQuota","noSelectedProvider","TrialPlanMachine","trialUsed","trialUnavailable","isTrialUsed","isTrialUnavailable","noProviderAndRegion","CreateKafkaInstanceMachine","save","complete","setDeveloperAvailable","setDeveloperUnavailable","setDeveloperUsed","setStandardAvailable","setStandardOutOfQuota","setStandardUnavailable","setProviders","setProvidersOrRegionsUnavailable","setCapabilities","notifyCreateErrorToStandardPlan","notifyCreateErrorToTrialPlan","CreateKafkaInstanceContext","CreateKafkaInstanceProvider","service","useInterpret","checkStandardQuotaCb","checkDeveloperAvailabilityCb","fetchProvidersWithRegionsCb","getStandardSizesCb","getTrialSizesCb","withConfig","send","createInstance","standardPlan","withContext","getSizes","trialPlan","makeCreateKafkaInstanceMachine","devTools","BillingHelp","LogoAWS","URL","LogoAzure","LogoGCP","LogoRedhat","AWSLogo","alt","height","AzureLogo","GCPLogo","BillingTiles","hasPrepaid","isPrepaidOverQuota","isMarketplaceOverQuota","marketplaceQuota","onPrepaid","onSubscription","validated","marketplaces","rhm","Flex","role","md","flex","spaceItems","FlexItem","Tile","tiles","isStacked","HelperText","HelperTextItem","Gallery","GalleryItem","FormSelect","FormSelectOption","CloudProvidersTiles","screenreaderText","justifyContent","spacer","providerDisabled","grow","CloudRegionSelect","isSizeUnavailable","makeRegionOptions","toggleId","prevState","FieldAZ","options","validity","enabledZone","trigger","helperTextInvalid","ToggleGroup","Tooltip","content","ToggleGroupItem","text","buttonId","FieldBillingTiles","isValid","billingType","isRequired","FieldCloudProvider","FieldCloudRegion","allRegionsUnavailable","every","disableControl","someRegionsUnavailable","validation","placeholder","hasIcon","helperText","FieldInstanceName","autoFocus","FieldSizeHelperText","remainingQuota","isPreview","isUnavailable","FieldSizeHelperTextOverQuota","ButtonVariant","FieldSizeHelperTextTrial","FieldSize","isLoadingError","helperTextTrial","FormGroupWithPopover","labelHead","fieldLabel","labelBody","buttonAriaLabel","Grid","sm","GridItem","fontSize","valueIndex","findIndex","steps","helperTextOverQuota","Slider","max","showTicks","customSteps","FormAlerts","onClickContactUS","AlertGroup","InstanceInfo","isTrial","trialDurationInHours","streamingUnits","Card","isFlat","CardTitle","CardBody","isCompact","ClockIcon","color","isSmall","InstanceInfoSkeleton","ModalAlertsLoading","customIcon","Spinner","ModalAlertsStandardPlan","ModalAlertsDedicatedPlan","ModalAlertsSystemUnavailable","ModalAlertsTrialPlan","time","LoadingForm","alignItems","DisabledFieldInstanceName","DisabledFieldCloudProvider","DisabledFieldCloudRegion","DisabledFieldAZ","DisabledFieldSize","DedicatedPlanMachine","clusterUnavailable","clusterChange","setCluster","isClusterUnavailable","clusterIsValid","selectedCluster","availableClusters","noCluster","didClusterChange","CreateDedicatedKafkaInstanceMachine","setDedicatedAvailable","setDedicatedOutOfQuota","setDedicatedUnavailable","setClusters","setClustersUnavailable","notifyCreateErrorToDedicatedPlan","CreateDedicatedKafkaInstanceContext","CreateDedicatedKafkaInstanceProvider","checkDedicatedQuotaCb","fetchClustersCb","getDedicatedSizesCb","dedicatedPlan","makeCreateDedicatedKafkaInstanceMachine","useCreateKafkaInstance","useSelector","standardPlanMachine","trialPlanMachine","isSystemUnavailable","isStandardPlan","isTrialPlan","isSaved","done","useCreateDedicatedKafkaInstance","dedicatedPlanMachine","isAvailable","useStandardPlanMachine","setBillingSubscription","setBillingPrepaid","isBlocked","isFormInvalid","isNameTaken","isConfigurable","isLoadingSizes","isBillingSelectionRequired","isBillingSingleSubscription","isBillingSingleMarketplace","isBillingPrepaidAvailable","selectedSize","selectedBilling","isBillingPrepaidOverQuota","isBillingMarketplaceOverQuota","isFormEnabled","isNameInvalid","isNameEmpty","isNameError","isSizeDisabled","isSizeOverQuota","isSizeLoadingError","isSizeAvailable","isSizeError","isProviderError","isRegionError","isBillingError","useTrialPlanMachine","useDedicatedPlanMachine","isClusterError","StandardInstanceForm","formId","instanceInfoBilling","ConnectedFieldInstanceName","ConnectedFieldCloudProvider","ConnectedFieldCloudRegion","ConnectedFieldAZ","ConnectedFieldSize","ConnectedBillingTiles","mq","TrialInstanceForm","CreateKafkaInstance","ConnectedCreateKafkaInstance","FORM_ID","footer","OutlinedClockIcon","spinnerAriaValueText","DedicatedClusterTiles","hasSelectableInput","isSelectableRaised","isDisabledRaised","onSelectableInputChange","CardFooter","OkIcon","ErrorCircleOIcon","FieldDedicatedCluster","DedicatedInstanceForm","CreateDedicatedKafkaInstance","ConnectedCreateDedicatedKafkaInstance","KafkaInstanceActions","rowData","hackZIndex","customChild","DropdownGroup","tooltipProps","tooltip","pointerEvents","cursor","isSeparator","actionProps","zIndex","DataPlaneHeader","actionsProps","Breadcrumb","BreadcrumbItem","DataPlaneTopicHeader","EmptyStateNoDedicatedClusters","PlusCircleIcon","DedicatedClusters","toolbarBreakpoint","DeleteKafkaInstance","kafka","it","resolve","delete","DetailsTabAlert","hoursLeft","differenceInHours","now","FormatDate","date","format","KafkaDetailsTab","kafkaVersion","renderTextListItem","TextListItem","TextListItemVariants","contentName","TextList","TextListVariants","SuspendedConnection","ExclamationTriangleIcon","KafkaConnectionTabP2","isKafkaSuspended","isKafkaPending","externalServer","tokenEndPointUrl","linkToServiceAccount","linkToAccessTab","adminAPIUrl","kafkaFleetManagerUrl","showCreateServiceAccountModal","ClipboardCopy","textAriaLabel","isReadOnly","ExpandableSection","toggleContent","HelpIcon","Label","SampleCodeSnippet","expandableCode","codeBlockCode","codeSnippet","copied","setCopied","copyCode","CodeBlockAction","ClipboardCopyButton","textId","exitDelay","maxWidth","navigator","clipboard","writeText","catch","CodeBlock","CodeBlockCode","isDetached","contentId","ExpandableSectionToggle","javaConfigCodeBlock","kafkaBootstrapUrl","tokenEndpointUrl","pythonConfigCodeBlock","pythonConfigExpandabledBlock","quarkusConfigExpandableBlock","springBootConfigCodeBlock","KafkaSampleCode","clientSelect","setClientSelect","clientProvider","java","python","quarkus","springboot","client_type","KafkaInstanceDrawer","KafkaInstanceDrawerPanel","handleSelect","Tabs","activeKey","Tab","eventKey","TabTitleText","parseISO","getExternalServer","getAdminServerUrl","endsWith","StatusLabel","forwardRef","ref","showWarning","showError","withPopover","buttonVariant","Split","SplitItem","CheckCircleIcon","PopoverStatusOrder","KafkaToPopoverMapping","StatusProgressStepper","currentStatus","currentStep","getVariant","ProgressStepper","isVertical","ProgressStep","titleId","isCurrent","StatusPopoverContent","StatusPopover","initialOpen","reference","isVisible","setIsVisible","handleClickConnectionTabLink","handleClickSupportLink","shouldOpen","shouldClose","enableFlip","SuspendedPopover","alertSeverityVariant","headerIcon","KafkaInstanceStatus","warningAfterMinutes","errorAfterMinutes","popoverStatus","alert","setAlert","labelRef","checkCreatedAt","elapsed","differenceInMinutes","useInterval","EmptyStateNoDedicatedEntitlement","EmptyStateNoDedicatedInstances","EmptyStateNoInstances","SearchIcon","StandardColumns","DedicatedColumns","KafkaInstances","timeCreatedDate","instanceLinkEnable","isAriaDisabled","changeOwnerEnabled","deleteEnabled","openConnectionEnabled","onRowClick","isRowDeleted","isPrimary","DateTimePicker","timeSelected","setIsTimeSelected","InputGroup","DatePicker","formatInTimeZone","newDate","formatISO","TimePicker","hour","minute","__","setHours","setMinutes","FilterGroup","epoch","onOffsetChange","onTimestampChange","onEpochChange","onLatest","currentCategory","setCurrentCategory","ToolbarItem","DropdownToggle","DropdownSeparator","newOffset","Number","isInteger","LimitSelector","InputGroupText","hidden","idx","isSameMessage","m1","m2","beautifyUnknownValue","RetentionTimeUnits","RetentionSizeUnits","NoDataCell","columnLabel","MessageDetails","defaultTab","isResizable","minSize","MessageDetailsBody","messageKey","defaultActiveKey","isCode","random","NoDataEmptyState","onRefresh","NoResultsEmptyState","onReset","OffsetRange","min","PartitionSelector","handleChange","valueAsNum","allPartitions","fill","makeOptions","slice","hiddenOptionsCount","handleFilter","typeAheadAriaLabel","isInputValuePersisted","onClear","InputGroupTextVariant","UnknownValuePreview","truncateAt","shouldTruncate","substring","truncate","preview","truncated","stopPropagation","MessageBrowserMachine","selectedMessage","initialLoading","fetchSuccess","fetchFail","verifyMessages","noData","refresh","pristine","dirty","shouldSearch","setPartition","setEpoch","setTimestamp","setOffset","setLatest","setLimit","selectMessage","deselectMessage","refreshing","setMessages","offsetMin","offsetMax","lastUpdated","noMessages","selectedMessageNotAvailable","areFiltersChanged","columnWidths","KafkaMessageBrowser","useMachine","KafkaMessageBrowserConnected","isFirstLoad","matches","isNoData","isRefreshing","requiresSearch","filterOffset","filterEpoch","filterTimestamp","setDefaultTab","columnLabels","OuterScrollContainer","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","FilterIcon","breakpoint","ToolbarGroup","RefreshButton","alignment","InnerScrollContainer","ResponsiveTable","expectedLength","colIndex","keys","KafkaInstanceCapacityTable","firstStreamingUnit","secondStreamingUnit","table","MarketingPageHero","tagLine","description2","heroImage","heroImageSize","heroImageCanRepeat","heroImagePositionY","cta","MarketingPageSection","isWidthLimited","KafkaPageV3","CardHeader","CardHeaderMain","bold","alignSelf","xl","orientation","EmptyStateNoTopic","PrincipalType","unitsToBytes","BYTE","KIBIBYTE","MEBIBYTE","GIBIBYTE","TEBIBYTE","unitsToMilliSecond","MILLISECOND","SECOND","MINUTE","HOUR","DAY","millisecondsToTime","days","unit","hours","minutes","seconds","formattedRetentionTime","formattedRetentionSize","bytesToMemorySize","tebibytes","gibibytes","mebibytes","kibibytes","KafkaTopics","DurationOptions","createEmptyManageAccessAcl","PermissionsDropdown","onAddPermission","onShortcutConsumeTopic","onShortcutProduceTopic","onShortcutManageAccess","menuRef","handleMenuKeys","contains","handleClickOutside","window","addEventListener","removeEventListener","onToggleClick","open","ev","setTimeout","firstElement","querySelector","focus","menu","Menu","itemId","MenuContent","MenuList","MenuGroup","MenuItem","splitButtonItems","DropdownToggleAction","splitButtonVariant","Popper","popper","popperMatchesTriggerWidth","labelColor","DisplayResourceName","PatternType","ResourceCell","PermissionOperationCell","ALLOW","DENY","operations","ALL","READ","WRITE","CREATE","DELETE","ALTER","DESCRIBE","DESCRIBE_CONFIGS","ALTER_CONFIGS","LabelGroup","numLabels","isArray","PrincipalCell","isDeleteEnabled","isAllAccounts","onRemoveAcl","isReviewTable","ServiceAccount","tabIndex","split","InfoCircleIcon","RemoveButton","PermissionsTableEmptyState","openManagePermissions","PermissionsTable","checkedRows","setCheckedRows","kebabActions","onCheck","isRowChecked","SelectAccount","isDirty","setIsDirty","setSelectedAccount","useLayoutEffect","noServiceAccounts","isNoResultsOption","noUserAccounts","filterValue","toLowerCase","serviceAccountOptions","localeCompare","userAccountOperations","UserAccount","SelectGroup","ValidatedOptions","onEscapePress","labelIcon","noVerticalAlign","newState","isGrouped","onCreateOption","ResourceName","onChangeValue","resourcePrefixRule","onFetchOptions","setIsNameValid","AsyncTypeaheadSelect","required","onValidationCheck","validationMessage","resourcePreixCondition","regExp","validationCheck","ResourceOperation","resourceTypeOptions","ResourcePermission","resourcePermissionOptions","allow","deny","ResourcePrefixRule","resourcePrefixRuleOptions","Is","ResourceType","ShortcutsTableHead","KafkaInstanceManualPermissions","resourceOperation","resourcePermission","onChangeResourceOperation","onChangeResourcePermission","onChangeResourceType","AssignPermissionsManual","resourcePrefix","onChangeResourcePrefix","onChangeResource","onFetchResourceNameOptions","multipleShorctutPermissions","ProduceTopicRow","prefixRuleValue","resourceNameValue","onChangeResourceName","isConsumeTopicShortcut","borderBottom","colSpan","ConsumeTopicShortcut","onChangeConsumerResourceName","topicPrefixRuleValue","topicResourceNameValue","consumerPrefixRuleValue","consumerResourceNameValue","onChangeConsumerResourcePrefixRule","onChangeTopicResourceName","onChangeTopicResourcePrefixRule","onFetchConsumerResourceNameOptions","onFetchTopicResourceNameOptions","ManageAccessShortcut","ProduceTopicShortcut","AssignPermissions","topicNameOptions","consumerGroupNameOptions","onAddManualPermissions","onAddProduceTopicShortcut","onConsumeTopicShortcut","onManageAccessShortcut","addedAcls","setAddedAcls","aclTemplate","resourceValues","consumerResourcePrefixRule","topicResourcePrefixRule","consumerResourceName","topicResourceName","ActionList","ActionListItem","paddingTop","PreCancelModal","closeModal","resumeEditing","titleIconVariant","ReviewPermissionsTable","selectedAccountId","ViewAccountDetails","accountId","transformResourceType","AclResourceType","transformResourceOperation","EditPermissions","escapeClosesModal","isExpandedExistingPermissionSection","setIsExpandedExistingPermissionSection","isAclDeleted","setIsAclDeleted","isExpandedAssignPermissionsSection","setIsExpandedAssignPermissionsSection","isNameValid","canSave","setCanSave","setSubmitted","isOpenPreCancelModal","setIsOpenPreCancelModal","setExistingAcls","newAcls","setNewAcls","deletedAcls","setDeletedAcls","checkValidation","aclsToSave","accountDisplayName","isAclValid","transformAclData","selectedAccountName","transformPermissions","isIndented","Badge","isRead","updateExistingAcls","toggleText","EmptyStateInitialLoading","EmptyStateMetricsUnavailable","TachometerAltIcon","MetricsLayout","metricsLagAlert","topicsKpi","topicPartitionsKpi","consumerGroupKpi","diskSpaceMetrics","topicMetrics","CardBodyLoading","Bullseye","isSVG","timeIntervalsMapping","Last5minutes","ticks","showDate","Last15minutes","Last30minutes","Last1hour","Last3hours","Last6hours","Last12hours","Last24hours","Last2days","Last7days","chartHeight","chartPadding","bottom","left","right","top","ChartSkeletonLoader","useChartWidth","containerRef","setWidth","handleResize","clientWidth","formatBytes","units","shouldShowDate","timeDuration","dateToChartValue","fromUnixTime","timestampsToTicks","timestamps","allTimestamps","mostRecentTs","sub","getTime","ChartLinearWithOptionalLimit","chartName","xLabel","yLabel","usageLimit","formatValue","emptyState","itemsPerRow","lineLabel","limitLabel","legendData","symbol","chart_color_black_500","chart_color_blue_300","areaColor","softLimitColor","chartData","area","softLimit","x","y","tickValues","getChartData","hasMetrics","Chart","ariaTitle","containerComponent","ChartVoronoiContainer","datum","constrainToVisibleArea","legendPosition","legendComponent","ChartLegend","themeColor","ChartTheme","legendAllowWrap","ChartAxis","C","tickFormat","dependentAxis","ChartGroup","ChartArea","ChartThreshold","stroke","colors","chart_color_cyan_300","ChartLogSizePerPartition","dataMap","ChartPopover","ChartTotalBytes","incomingTopicsData","outgoingTopicsData","incomingTopic","outgoingTopic","incomingTopicName","outgoingTopicName","incomingLine","metricsToLine","line","outgoingLine","chart_color_green_300","getBytesChartData","tickCount","ChartLine","EmptyStateNoMetricsData","EmptyStateNoMetricsDataForSelection","EmptyStateNoTopics","WrenchIcon","EmptyStateNoTopicSelected","DurationOptionsMap","FilterByTime","keyText","disableToolbar","onDurationChange","isTimeSelectOpen","setIsTimeSelectOpen","ariaId","mapping","timeOptions","FilterByTopic","topicList","onSetSelectedTopic","isTopicSelectOpen","setIsTopicSelectOpen","selectKey","setSelectKey","allTopicsLabel","topicOptions","textInput","filteredTopics","indexOf","hasInlineFilter","ToolbarRefresh","ToolbarTopicsMetrics","onSetTimeDuration","CardTopicsMetrics","backendUnavailable","isInitialLoading","isJustCreated","onSelectedTopic","noTopics","selectedTopicNotInList","chartEmptyState","TotalBytesTitle","IncomingMessageRate","PartitionSizeTitle","ToolbarKafkaInstanceMetric","CardKafkaInstanceMetrics","usedDiskMetrics","ChartTitle","CardKpi","isFullHeight","shape","MetricsLagAlert","isClosed","actionClose","AlertActionCloseButton","PartitionCard","ExclamationCircleIcon","isExpandable","apiState","failure","after","KafkaInstanceMetricsMachine","fetchFailures","callApi","criticalFail","justCreated","withResponse","selectDuration","setFetchTimestamp","setMetrics","incrementRetries","resetRetries","setDuration","canRetryFetching","TopicsMetricsMachine","selectTopic","setTopic","MetricsKpiMachine","KafkaInstanceMetricsContext","KafkaInstanceMetricsProvider","callback","results","MetricsKpiContext","MetricsKpiProvider","TopicsMetricsContext","TopicsMetricsProvider","useKafkaInstanceMetrics","isFailed","useTopicsMetrics","onTopicChange","Metrics","ConnectedMetrics","kafkaInstanceMetrics","topicsMetrics","metricsKpi","useMetricsKpi","ConnectedKafkaInstanceMetrics","ConnectedTopicsMetrics","Settings","connectionStatus","setConnectionStatus","setIsModalOpen","handleReAuthentication","reAuthValue","reauthentication","flexWrap","checked","retentionTimeSelectOptions","isPlaceholder","retentionSizeSelectOptions","CreateTopicHead","showAllOptions","onShowAllOptions","mainBreadcrumbs","labelOff","PartitionLimitWarning","handleModalToggle","retentionTimeTransformer","TextWithLabelPopover","btnAriaLabel","fieldValue","popoverBody","popoverHeader","displayText","Cleanup","defaultFileDeleteDelay","defaultLogSegmentSize","defaultSegmentJitterTime","defaultSegmentTime","FormSection","titleElement","gibibyte","milliseconds","CustomRetentionMessage","customTimeValue","setCustomTimeValue","isRetentionTimeSelectOpen","setIsRetentionTimeSelectOpen","onRetentionTimeToggle","input","inputValue","CustomRetentionSize","customRetentionSizeValue","setCustomRetentionSizeValue","isRetentionSizeSelectOpen","setIsRetentionSizeSelectOpen","onRetentionSizeToggle","useValidateTopic","validateName","legalNameChars","CoreConfiguration","isCreate","setTopicData","invalidText","setInvalidText","setTopicValidated","topicValidated","radioTimeSelectValue","setRadioTimeSelectValue","radioSizeSelectValue","setRadioSizeSelectValue","initialPartitions","handleRetentionMessageTime","handleRetentionMessageSize","retentionTimeInput","retentionSizeInput","NumberInput","inputName","updatedPartitions","onPlus","currentPartitions","onMinus","newPartitions","plusBtnProps","minusBtnProps","Radio","Flush","defaultFlushIntervalMessages","defaultFlushIntervalTime","Log","defaultDeleteRetentionTime","defaultMinCleanbleRatio","defaultMinimumCompactionLagTime","cleanupPolicyOptions","DropdownWithToggle","onSelectOption","isLabelAndValueNotSame","Message","defaultMaximumMessageBytes","defaultMessageTimestampType","defaultMaxMessageTimestampDiff","Replication","TopicAdvanceIndex","defaultIndexIntervalSize","defaultSegmentIndexSize","TopicAdvanceJumpLinks","canHaveDelete","SidebarPanel","JumpLinks","scrollableSelector","JumpLinksItem","TopicAdvancePage","handleCancel","actionText","setIsLoading","warning","setWarning","Sidebar","SidebarContent","PageGroup","ActionGroup","retentionSizeTransformer","CreateTopicWizard","isSwitchChecked","initialFieldsValue","topicNameValidated","setTopicNameValidated","warningModalOpen","setWarningModalOpen","closeWizard","enableNext","StepTopicName","newTopicData","onTopicNameChange","canJumpTo","StepPartitions","onPartitionsChange","StepMessageRetention","StepReplicas","minInSyncReplica","nextButtonText","onTransform","tranformedValueInMilliseconds","tranformedValueInBytes","transformedTopic","onSaveTopic","PageSectionTypes","Wizard","navAriaLabel","mainAriaLabel","WizardCustomFooter","onValidate","retentionTime","newPartitionCount","widthChars","onBlur","WizardFooter","WizardContextConsumer","activeStep","onBack","CreateTopic","setIsSwitchChecked","EditTopicProperties","millisecondsToTimeValue","bytesToSizeValue","TopicProperties","showUnlimited"],"sourceRoot":""}