{"version":3,"file":"js/2927.8dbf4fdb2657e9a69ce6.js","mappings":"yPAAMA,EAAqB,SACrBC,EAAgB,SAChBC,EAAqB,eACrBC,EAA4B,uBACrBC,EAA8B,CACzCJ,EACAG,GAGW,EAAwB,UACxBE,EACX,UAAG,EAAqB,0BAAkBJ,EAAa,YAAIC,EAAkB,MAClEI,EACX,UAAG,EAAqB,YAAIN,GACjBO,EACX,UAAG,EAAqB,YAAIJ,GACjBK,EACX,UAAG,EAAqB,eACbC,EACX,UAAG,EAAqB,qBAEbC,EAAiC,UAEjCC,EACX,UAAGD,GACQE,EACX,UAAGD,EAA8B,YAAIX,GAC1Ba,EAAiD,SAC5DC,GACG,gBAAGH,EAA8B,YAAIG,EAArC,EACQC,EAA+C,SAC1DD,GAEA,gBAAGD,EACDC,GACD,YAAIb,EAFL,EAGWe,EAA4C,SAACF,GACxD,gBAAGD,EACDC,GACD,YAAIZ,EAFL,EAIWe,EACX,UAAGN,EAA8B,0BAAkBV,EAAa,YAAIC,EAAkB,MAC3EgB,EACX,UAAGP,EAA8B,YAAIR,GAC1BgB,EACX,UAAGR,EAA8B,YAAIX,GAC1BoB,EACX,UAAGT,EAA8B,gBAAQV,GAC9BoB,EACX,UAAGV,EAA8B,gBAAQT,GAE9BoB,EAAoC,Y,gNCtB3CC,GAAgB,IAAAC,eAAkC,MAE3CC,EAAoC,SAAC,G,IAAEC,EAAQ,WACpDC,GAAgB,IAAAC,eACpBvB,GAEIwB,GAAiB,IAAAD,eACrBX,GAEIa,EAAQH,GAAiBE,EAC/B,IAAKC,EACH,MAAMC,MAAM,kDAEd,IAAMC,EACHF,EAAMG,OAAOC,IACZ9B,EAA4B+B,SAASL,EAAMG,OAAOC,UAC3BE,IAAzBN,EAAMG,OAAOI,aACTD,EACAN,EAAMG,OAAOC,GACLI,GAAa,QAASN,GAAiB,KAC/C,GAA8B,IAAAO,eACbH,IAArBJ,GAAkCF,EAAMU,SADnCC,EAAU,KAAEC,EAAa,KAG1B,GAA4B,IAAAH,UAAiC,WAA5DI,EAAS,KAAEC,EAAY,KACxBC,GAAU,IAAAC,UAEFC,GAAqB,UAAgB,KAE7CC,GAAiB,IAAAC,cAAY,SAACC,GAClCR,GAAc,SAACS,GACb,IAAMV,OAA0BL,IAAbc,EAAyBA,GAAYC,EAIxD,OAHmB,IAAfV,GAAwBI,EAAQO,SAClCP,EAAQO,UAEHX,CACT,GACF,GAAG,KAEH,IAAAY,YAAU,WACHf,GACHI,GAAc,EAElB,GAAG,CAACJ,IAEJ,IAAMgB,GAAQ,IAAAC,UAAQ,WAGpB,MAAO,CACLvB,iBAAgB,EAChBW,UAAS,EACTC,aAAY,EACZH,gBAN4CL,IAArBJ,GAAkCS,EAOzDO,eAAc,EACdH,QAAO,EAEX,GAAG,CAACF,EAAWF,EAAYT,EAAkBgB,IAE7C,OACE,SAACzB,EAAciC,SAAQ,GAACF,MAAOA,GAAK,WAClC,SAAC,KAAmB,GAClBhB,SAAUA,EACVK,UAAWA,EACXc,YAAab,EACbH,WAAYA,EACZI,QAAS,WAAM,OAAAG,GAAe,EAAf,EACfU,iBAAkBX,GAAgB,UAEjCrB,OAIT,EAEO,SAASiC,EAAUd,GACxB,IAAMe,GAAU,IAAAC,YAAWtC,GAE3B,OADAqC,EAAQf,QAAQO,QAAUP,EACnBe,CACT,C,+NCrGaE,EAER,SAAC,G,IAAEpC,EAAQ,WAAEqC,EAAW,cAEnBC,GAAQ,IAAAC,eAAa,IAE7B,OACE,SAAC,EAAAC,cAAa,GACZC,UAAW,CAACH,GACZI,eAAgB,WAAM,gBAACC,EAAqB,CAACN,YAAaA,GAApC,GAAmD,UAExErC,IAGP,EAEM2C,EAAwE,SAAC,G,IAC7EN,EAAW,cAEHO,GAAU,UAA4B,MAE9C,OADA,IAAAjB,YAAU,WAAM,OAAAiB,CAAA,GAAO,CAACA,KACjB,SAAC,EAAAC,SAAQ,CAACC,GAAIT,GACvB,E,42CCxBO,SAASU,IAAhB,WACUC,GAAS,SAAW,KACtBC,GAAU,IAAA1B,cAAY,gD,oEACb,SAAMyB,EAAKC,W,OAGxB,OAHMC,EAAO,SACPC,EAA+B,QAApB,EAAc,QAAd,EAAAD,aAAI,EAAJA,EAAME,gBAAQ,eAAEF,YAAI,eAAEC,SACjCE,EAAiC,QAApB,EAAc,QAAd,EAAAH,aAAI,EAAJA,EAAME,gBAAQ,eAAEF,YAAI,eAAEI,aAClC,CAAP,EAAO,CACLH,SAAQ,EACRE,WAAU,I,SAEX,CAACL,IAEJ,MAAO,CAAEO,UADkB,QAAQ,CAAEN,QAAO,EAAEO,UAAU,IAAO,KAEjE,C,gDCKO,SAASC,EAAuB,G,IACrCC,EAAa,gBACbC,EAAoB,uBACpBC,EAAoB,uBACpBC,EAAoB,uBACpBC,EAAuB,0BAGjBC,GAAU,IAAAC,cACRC,GAAwB,IAAA9B,YAAW,EAAA+B,mBAAkB,oBAEvD,EACJjC,GACE,IAAAV,cAAY,WAEVwC,EAAQI,QAAQT,EAClB,GAAG,CAACK,EAASL,KALTpD,EAAgB,mBAAEgB,EAAc,iBAAEJ,EAAY,eAAEH,EAAU,aAQ5DqD,GAAS,UAET,GACJ,EAAAC,EAAA,KADMC,EAAI,OAAEC,EAAO,UAAEC,EAAa,gBAAEC,EAAkB,qBAElDC,GAAuB,IAAAnD,cAC3B,WAAM,OAAAkD,EAAmB,EAAGF,EAAtB,GACN,CAACA,EAASE,IAGNE,GAAa,EAAAC,EAAA,GAAwB,QAASF,GAC9CG,GAAc,EAAAD,EAAA,GAAwB,SAAUF,GAChDI,GAAgB,EAAAF,EAAA,GACpB,WACAF,GAGI,GAA0C,EAAAK,EAAA,GAC9C,KACAX,EAAOY,OACP,YACA,QAJKC,EAAgB,KAAEC,EAAI,KAAEC,EAAa,KAOtCC,GAAoB,IAAA7D,cAAY,WACpCoD,EAAWU,aACTR,EAAYQ,aACVP,EAAcO,aAAaZ,EAAmB,EAAGF,MAEnD,EAEJ,GAAG,CAACI,EAAYE,EAAaN,EAASE,EAAoBK,IAEpDQ,GAAa,IAAA/D,cACjB,SAACf,EAAY+E,GACPjF,IAAqBE,GAAMO,EAC7BO,GAAe,IAGfyC,EAAQI,QAAQR,EAAqBnD,IACrCc,GAAe,GACfJ,EAAaqE,GAEjB,GACA,CACExB,EACAJ,EACA5C,EACAT,EACAY,EACAI,IAIEkE,GAAmD,IAAAjE,cACvD,SAACX,GACC0E,EAAW1E,EAASJ,GAAI,UAC1B,GACA,CAAC8E,IAGGG,GAAuD,IAAAlE,cAC3D,SAACX,GACC0E,EAAW1E,EAASJ,GAAI,cAC1B,GACA,CAAC8E,IAGGI,GAAW,IAAAnE,cAAY,WAE3BwC,EAAQ4B,KAAK/B,EACf,GAAG,CAACG,EAASH,IAEPgC,GAAW,IAAArE,cACf,SAAC,G,IAAEf,EAAE,KAEHuD,EAAQ4B,KAAK9B,EAAqBrD,GACpC,GACA,CAACuD,EAASF,IAENgC,GAAgB,IAAAtE,cACpB,SAAC,G,IAAEf,EAAE,KAEHuD,EAAQ4B,KAAK7B,EAAwBtD,GACvC,GACA,CAACuD,EAASD,IAGNgC,GAAoB,IAAAvE,cACxB,WAAM,OAAA0C,GAAuBA,EAAoB,kBAA3C,GACN,CAACA,IAGH,MAAO,CACL3D,iBAAgB,EAChBgE,KAAI,EACJC,QAAO,EACPC,cAAa,EACbG,WAAU,EACVE,YAAW,EACXC,cAAa,EACbG,iBAAgB,EAChBC,KAAI,EACJC,cAAa,EACbC,kBAAiB,EACjBI,eAAc,EACdC,mBAAkB,EAClBC,SAAQ,EACRE,SAAQ,EACRC,cAAa,EACbC,kBAAiB,EAErB,CCvIO,IAAMC,EAA8D,SAAC,GAC7D,gB,IACbrC,EAAa,gBACbG,EAAoB,uBACpBF,EAAoB,uBACpBC,EAAoB,uBACpBE,EAAuB,0BACvBkC,EAAiB,oBAEX,EAkBFvC,EAAuB,CACzBC,cAAa,EACbG,qBAAoB,EACpBF,qBAAoB,EACpBC,qBAAoB,EACpBE,wBAAuB,IAtBvBxD,EAAgB,mBAChBgE,EAAI,OACJC,EAAO,UACPC,EAAa,gBACbG,EAAU,aACVE,EAAW,cACXC,EAAa,gBACbG,EAAgB,mBAChBC,EAAI,OACJC,EAAa,gBACbC,EAAiB,oBACjBI,EAAc,iBACdC,EAAkB,qBAClBC,EAAQ,WACRE,EAAQ,WACRC,EAAa,gBACbC,EAAiB,oBAQXvC,EAAaR,IAAoB,SACjCkD,GAAS,QAAU,CACzB3B,KAAI,EACJC,QAAO,EACP2B,KAAMvB,EAAWwB,MACjBC,MAAOvB,EAAYsB,MACnBE,OAAQvB,EAAcqB,MACtBjB,KAAMA,GAAQ,YACdoB,UAAWnB,EACXoB,WAAY,aACZ,KAEF,OACE,iCACE,SAAC,KAAwB,KACzB,SAAC,KAAc,CACbC,QAAS,WACTC,UAAWR,aAAI,EAAJA,EAAMQ,UACjBC,UAAWT,aAAI,EAAJA,EAAMU,MACjBrC,KAAMA,EACNC,QAASA,EACTqC,MAAOjC,EAAWwB,MAClBU,OAAQhC,EAAYsB,MACpBW,SAAUhC,EAAcqB,MACxBlB,iBAAkBA,EAClB8B,aAAcvC,EACdwC,aAAcrC,EAAWsC,IACzBC,iBAAkBvC,EAAWwC,OAC7BC,kBAAmBzC,EAAW0C,MAC9BC,cAAezC,EAAYoC,IAC3BM,kBAAmB1C,EAAYsC,OAC/BK,mBAAoB3C,EAAYwC,MAChCI,eAAgB3C,EAAc4C,OAC9BC,mBAAoB7C,EAAcqC,OAClCS,oBAAqB9C,EAAcuC,MACnCjC,kBAAmBA,EACnBS,cAAeA,EACfD,SAAUA,EACVF,SAAUA,EACVmC,cAAe,SAAC,GAAY,OAAP,MAAWrH,KAAOF,CAAX,EAC5B0F,kBAAmBA,EACnB8B,UAAWtC,EACXuC,aAActC,EACduC,yBAA0B,WAE1B,EACAC,mBAAoB,WAEpB,EACAC,oBAAqB,WAErB,EACApC,kBAAmBA,EACnBqC,oBAAqB,SAAC,G,IAAE9B,EAAM,SAAO,qBAAuBA,EAAvB,EACrC+B,kBAAmB,SAACC,GAAQ,OAAA9E,EAAS6E,kBAAkBC,EAAIhC,OAA/B,EAC5BiC,eAAgB,SAAC,G,IAAElC,EAAK,QAAEC,EAAM,SAC9B,OAAA9C,EAAS+E,eAAelC,EAAOC,EAA/B,EAEFkC,UAAW,SAAC,G,IAAEnC,EAAK,QAAO,OAAA7C,EAASiF,mBAAmBpC,EAA5B,MAIlC,E,ujDCrGaqC,GAET,SAAC,G,IAAE/E,EAAa,gBAEZK,GAAU,IAAAC,cACV0E,ECTD,WAAP,WACQC,GAAsB,SAA4B,GAClDC,GAAyB,UACzBC,GAA6B,UAqDnC,MAAO,CACLC,qBApD0B,IAAAvH,cAG1B,SAAO,G,IAAEwH,EAAgB,mBAAEC,EAAkB,qBAAEC,EAAY,e,+FAEnB,O,sBAAA,GAAMN,K,mBAEVjI,KAFxBwI,EAA4B,SAA2B,yBAGtB,KAAlCA,GAA2B,GAC9BD,EAAa,CAAC,GAEdF,EAAiB,CACfI,MAAO,CACLD,wBAAuB,KAK7BF,EAAmB,CAAC,G,6BAGtBA,EAAmB,CAAC,G,gCAGxB,CAACL,IA6BDS,eA1BoB,IAAA7H,cAGpB,SAAO8H,EAAM,G,IAAEC,EAAW,cAAEC,EAAa,gB,+FAEhB,O,sBAAA,GAAMX,K,cAAnBY,EAAa,SAA8B,SACnDF,EAAY,CACVE,SAAQ,EACRC,eAAgBD,EAASE,OAAS,EAAIF,EAAS,QAAK9I,I,6BAGtD6I,I,gCAGJ,CAACX,IAaDe,mBAVwB,IAAApI,cAGxB,SAACqI,GAAY,OAAAf,EAA2B,CAAEgB,UAAWD,EAAQpJ,IAAhD,GACb,CAACqI,IAQL,CDpDoBiB,GACZC,GAA+B,UAC/BC,GAAY,IAAA7H,YAAW,EAAA+B,oBEjBxB,WAGL,IAAyC,KAFxB,QAAmB,GAAK,KAErB+F,iBAClB,MAAM,IAAI5J,MAAM,oCAKpB,CFSE,GAEA,IAAM6J,EAAuB,WAE3BnG,EAAQ4B,KAAK,WACf,EAEMwE,GAAoB,IAAA5I,cAAY,WACpCyI,EAAU/F,qBACR+F,EAAU/F,oBAAoB,kBAClC,GAAG,CAAC+F,IAEEtE,GAAW,IAAAnE,cAGf,SAAUX,EAAUwJ,EAAWC,GAMxBN,EAA6BO,YAAY,CAC5C1J,SAAQ,EACRwJ,UAPkB,WAClBA,IAEArG,EAAQ4B,KAAK1G,EACf,EAIEoL,QAAO,GAEX,GACA,CAACN,EAA8BhG,IAG3BwG,GAAW,IAAAhJ,cAAY,WAE3BwC,EAAQ4B,KAAKjC,EACf,GAAG,CAACK,EAASL,IAEb,OACE,SAAC,KAA4B,MACvBgF,EAAS,CACb8B,aAAa,EACbD,SAAUA,EACVE,iBAAkBP,EAClBA,qBAAsBA,EACtBC,kBAAmBA,EACnBzE,SAAUA,EACVgF,8BAA+BR,EAC/BS,sBAAuBT,EACvBU,wBAAyBC,SAASC,SAASC,KAAO,eAClDC,SAAU,WACR,OAACH,SAASI,eAAe,2BACzBJ,SAASK,IADT,IAKR,EGjEO,SAASC,KACd,IAAMlL,GAAgB,IAAAC,eACpBvB,GAEIyM,GAAkB,IAAAlL,eACtBX,GAEIa,EAAQH,GAAiBmL,EAC/B,IAAKhL,EACH,MAAMC,MAAM,uDAGd,MAAO,CAAEO,UADkB,QAASR,EAAMG,OAAOC,IAAI,GAAK,KACGJ,MAAK,EACpE,C,4BCjBaiL,GAAY,WACvB,IAAMC,GAAW,KAAAC,eAoBjB,MAAO,CAAEC,SAlBQ,SACfC,EACAC,EACAC,EACAnL,EACAoL,GAEAN,GACE,KAAAO,iBAAgB,CACdJ,QAASA,EACTK,MAAOJ,EACPE,YAAaA,EACbD,YAAaA,EACbnL,GAAIA,IAGV,EAGF,EChBauL,GAET,SAAC,G,IAAErI,EAAa,gBAEZK,GAAU,IAAAC,cAERwH,EAAaH,KAAW,SAExBzK,EAAauK,KAAqB,SACpC,GAAyC,UAAvCb,EAAW,cAAa0B,EAAU,YAEpCzB,GAAW,IAAAhJ,cAAY,WAE3BwC,EAAQ4B,KAAKjC,EACf,GAAG,CAACK,EAASL,IAEPkC,GAAW,IAAArE,cAAY,WACtB+I,EAAY,CACf9J,GAAII,EAASJ,GACb6J,QAAS,WACPmB,EACE,SACA,wBACA,EACA,8BAEJ,EACApB,UAAW,WAETrG,EAAQI,QAAQT,EAClB,GAEJ,GAAG,CAAC4G,EAAa1J,EAASJ,GAAIgL,EAAUzH,EAASL,IAEjD,OACE,SAAC,KAAmB,CAClB8G,aAAa,EACbwB,WAAYA,EACZzB,SAAUA,EACV3E,SAAUA,EACVqG,aACE,cAAuBrL,EAASyF,QAAUzF,EAASsF,UAAOxF,EAE5DsK,SAAU,WACR,OAACH,SAASI,eAAe,2BACzBJ,SAASK,IADT,GAKR,ECrDagB,GAGR,SAAC,G,IAAEC,EAAU,aAAEC,EAAU,aAEtBrI,GAAU,IAAAC,cACFqI,GAAoB,SAAoB,KAChDC,EACJC,OAAOzB,SAAS0B,OAEfzI,EAAQoI,WAAW,CAClBM,SAAUN,IAERO,EACJH,OAAOzB,SAAS0B,OAEfzI,EAAQoI,WAAW,CAClBM,SAAUL,IAERO,EAAWN,aAAe,EAAfA,EAAiBM,SAChCL,EACAI,GAEIE,GAAc,IAAArL,cAClB,gBACmBb,IAAbiM,IACFJ,OAAOzB,SAASC,KAAO4B,EAE3B,GACA,CAACA,IAGGpC,GAAW,IAAAhJ,cAAY,WAE3BwC,EAAQ4B,KAAKyG,EACf,GAAG,CAACrI,EAASqI,IAEb,OACE,SAAC,KAAwB,CACvBS,QAAQ,EACRD,YAAaA,EACbrC,SAAUA,EACVS,SAAU,WACR,OAACH,SAASI,eAAe,2BACzBJ,SAASK,IADT,GAKR,EC3Ca4B,GAET,SAAC,G,IAAEpJ,EAAa,gBAEZK,GAAU,IAAAC,cAERpD,EAAauK,KAAqB,SAC5B4B,GAAa,QAAgB,CAAC,GAAE,KACxCC,GAAiB,UAEfxB,EAAaH,KAAW,SAE1Bd,GAAW,IAAAhJ,cAAY,WAE3BwC,EAAQ4B,KAAKjC,EACf,GAAG,CAACK,EAASL,IAEPuJ,GAAY,IAAA1L,cAChB,SAAC2L,GACCF,EAAeG,OACb,CACE3M,GAAII,EAASJ,GACb4M,QAAS,CAAEhH,MAAO8G,IAEpB,CACE9C,UAAW,WAETrG,EAAQI,QAAQT,GAChB8H,EACE,UACA,gCACA,EACA,uBACA,UAAG0B,EAAQ,oCAA4BtM,EAASsF,KAAI,oBAExD,GAGN,GACA,CACEsF,EACAzH,EACAnD,EAASJ,GACTI,EAASsF,KACTxC,EACAsJ,IAIEK,EACAL,EAAeM,UAAkB,SACjCN,EAAeO,QACoB,iBAA9BP,EAAeQ,MAAMC,KACxB,eACA,gBAEC,OAGT,OACE,SAAC,KAAgB,CACfC,aAAc9M,EAASwF,MACvB2G,SAAUA,aAAQ,EAARA,EAAUA,SAASY,KAAI,SAACC,GAAM,OACtCpN,GAAIoN,EAAEzK,SACN0K,YAAaD,EAAEC,YAFuB,IAIxCZ,UAAWA,EACX1C,SAAUA,EACV8C,YAAaA,GAGnB,E,mNC/DaS,GAA4C,WACvD,OACE,UAAC,EAAAC,MAAK,IAACC,KAAMrP,EAAuBsP,OAAK,eACvC,SAAC,EAAAF,MAAK,IAACC,KAAMnP,GAAkC,WAC7C,SAACqN,GAAuB,CACtBC,WAAYvN,EACZwN,WAAY,QAGhB,SAAChK,EAAmB,IAACC,YAAaxD,GAAkC,WAClE,SAAC,EAAAqP,SAAQ,IAACC,SAAU,MAAI,WACtB,SAAC,EAAAJ,MAAK,IAACC,KAAMpP,GAA2B,WAEtC,SAAC,EAAAiE,SAAQ,CAACC,GAAI,cAIpB,UAACV,EAAmB,IAACC,YAAa,GAAqB,YACrD,SAAC,EAAA0L,MAAK,IAACC,KAAMlP,GAA8B,WACzC,SAACiN,GAAwB,CAACrI,cAAe,QAE3C,SAAC,EAAAqK,MAAK,IAACC,KAAMjP,GAA2B,WACtC,SAAC+N,GAAgB,CAACpJ,cAAe,YAGrC,SAACqC,EAAmB,CAClBqI,cAAe,YACf1K,cAAe,EACfC,qBAAsB,SAACnD,GAAO,gBAAG,EAAqB,YAAIA,EAA5B,EAC9BoD,qBAAsB,UAAG,EAAqB,WAC9CC,qBAAsB,SAACrD,GAAO,gBAAG,EAAqB,YAAIA,EAAE,UAA9B,EAC9BsD,wBAAyB,SAACtD,GACxB,gBAAG,EAAqB,YAAIA,EAAE,gBAA9B,EAEFwF,kBAAmB,SAACpF,GAClB,gBAAG,EAAqB,YAAIA,EAASJ,GAAE,WAAvC,OAKV,E,wBClDa6N,GAET,SAAC,G,IAAED,EAAa,gBAAE1K,EAAa,gBAAE4K,EAAY,eAC/C,OACE,SAAC,KAAkB,CACjBF,cAAeA,EACfG,aAAc,CACZ9H,UAAW/C,EACX8F,SAAU8E,IAIlB,E,mNCEaE,GAET,SAAC,G,MACHJ,EAAa,gBACb1K,EAAa,gBACb4K,EAAY,eACZzK,EAAoB,uBACpBF,EAAoB,uBACpBC,EAAoB,uBACpBE,EAAuB,0BACvBkC,EAAiB,oBAETwF,EAAaH,KAAW,SAC1B,EAkBF5H,EAAuB,CACzBC,cAAa,EACbG,qBAAoB,EACpBF,qBAAoB,EACpBC,qBAAoB,EACpBE,wBAAuB,IAtBvBxD,EAAgB,mBAChBgE,EAAI,OACJC,EAAO,UACPC,EAAa,gBACbG,EAAU,aACVE,EAAW,cACXC,EAAa,gBACbG,EAAgB,mBAChBC,EAAI,OACJC,EAAa,gBACbC,EAAiB,oBACjBI,EAAc,iBACdC,EAAkB,qBAClBC,EAAQ,WACRE,EAAQ,WACRC,EAAa,gBACbC,EAAiB,oBAQb2I,GAAoB,UAClBxI,GAAS,QAAU,CACzB3B,KAAI,EACJC,QAAO,EACP2B,KAAMvB,EAAWwB,MACjBC,MAAOvB,EAAYsB,MACnBE,OAAQvB,EAAcqB,MACtBjB,KAAMA,GAAQ,YACdoB,UAAWnB,EACXoB,WAAY,aACZ,KACYmI,GAAsB,QAAU,CAC5CpK,KAAM,EACNC,QAAS,EACT2B,KAAM,GACNE,MAAO,GACPC,OAAQ,GACRnB,KAAM,YACNoB,UAAW,OACXC,WAAY,aACZ,KACIoI,GAA6B,IAAAvN,SAAO,GAEpCwN,GAAmBH,EAAkBnB,aAEhB,QAAtB,EAAAmB,EAAkBxI,YAAI,eAAEuD,WAAY,IAAIqF,QACvC,SAACC,GAAM,MAAa,UAAbA,EAAEzI,MAAF,IACPqD,OAAS,EA2Bf,OAzBA,IAAA/H,YAAU,WAEN+M,GACAA,EAAkB/H,MAAQ,IACa,IAAvCgI,EAA2BjN,UAE3BiN,EAA2BjN,SAAU,EACrC8J,EACE,OACA,6BACA,EACA,mBACA,wFACwD,KACtD,SAAC,EAAAuD,KAAI,IAACjM,GAAI,aAAW,oBAAa,wEAElC,mBACA,SAAC,GAAAkM,OAAM,CACLC,UAAW,WAAM,gBAAC,EAAAF,KAAI,IAACjM,GAAI,aAAW,4BAArB,QAK3B,GAAG,CAAC0I,EAAUkD,KAGZ,iCACE,SAACL,GAA2B,CAC1BD,cAAeA,EACf1K,cAAeA,EACf4K,aAAcA,KAEhB,SAAC,KAAc,CACb9H,QAAS,YACTC,UAAWR,aAAI,EAAJA,EAAMQ,UACjBC,UAAWT,aAAI,EAAJA,EAAMU,MACjBrC,KAAMA,EACNC,QAASA,EACTqC,MAAOjC,EAAWwB,MAClBU,OAAQhC,EAAYsB,MACpBW,SAAUhC,EAAcqB,MACxBlB,iBAAkBA,EAClB8B,aAAcvC,EACdwC,aAAcrC,EAAWsC,IACzBC,iBAAkBvC,EAAWwC,OAC7BC,kBAAmBzC,EAAW0C,MAC9BC,cAAezC,EAAYoC,IAC3BM,kBAAmB1C,EAAYsC,OAC/BK,mBAAoB3C,EAAYwC,MAChCI,eAAgB3C,EAAc4C,OAC9BC,mBAAoB7C,EAAcqC,OAClCS,oBAAqB9C,EAAcuC,MACnCjC,kBAAmBA,EACnBS,cAAeA,EACfD,SAAUA,EACVF,SAAUA,EACVmC,cAAe,SAAC,GAAY,OAAP,MAAWrH,KAAOF,CAAX,EAC5B0F,kBAAmBA,EACnB8B,UAAWtC,EACXuC,aAActC,EACduC,yBAA0B,WAE1B,EACAC,mBAAoB,WAEpB,EACAC,oBAAqB,WAErB,EACApC,kBAAmBA,EACnBqC,oBAAqB,SAAC,G,IAAE9B,EAAM,SAAO,qBAAuBA,EAAvB,EACrC+B,kBAAmB,SAAC,G,IAAE/B,EAAM,SAAO,qBAAuBA,EAAvB,EACnCiC,eAAgB,WAAM,UACtBC,UAAW,WAAM,UACjB2G,iBACEN,GACE,SAAC,MAA8B,CAC7BlJ,SAAUA,EACVI,kBAAmBA,KAGrB,SAAC,KAAgC,CAC/BA,kBAAmBA,QAOjC,E,mNC1JaqJ,GAAqD,WAChE,OACE,UAAC,EAAApB,MAAK,IAACC,KAAMzO,EAAiC0O,OAAO,GAAI,YACvD,SAAC,EAAAF,MAAK,IAACC,KAAMxO,GAA4C,WACvD,SAAC0M,GAAuB,CACtBC,WAAYjN,EACZkN,WAAYnN,QAGhB,SAAC,EAAA8O,MAAK,IAACC,KAAMvO,GAAqC,WAChD,UAAC2C,EAAmB,IAClBC,YAAa7C,GAA4C,YAEzD,SAAC,EAAA0O,SAAQ,IAACC,SAAU,MAAI,WACtB,SAAC1F,GAAiC,CAChC/E,cAAezE,EACfqP,aAAc1O,OAEP,YAIf,UAACwC,EAAmB,IAACC,YAAapD,GAA8B,YAC9D,SAAC,EAAA8O,MAAK,IAACC,KAAMtO,GAAwC,WACnD,SAACqM,GAAwB,CACvBrI,cAAezE,QAGnB,SAAC,EAAA8O,MAAK,IAACC,KAAMrO,GAAqC,WAChD,SAACmN,GAAgB,CAACpJ,cAAezE,YAIrC,SAACuP,GAA4B,CAC3BJ,cAAe,YACf1K,cAAezE,EACfqP,aAAc1O,EACd+D,qBAAsBxE,EACtByE,qBAAsB1E,EACtB2E,qBAAsBxE,EACtByE,wBAAyBxE,EACzB0G,kBAAmB,SAACpF,GAClB,gBAAG3B,EAA8B,YAAI2B,EAASJ,GAAE,WAAhD,OAKV,E,+5CCjEO,IAAM4O,GAET,SAAC,G,ICLGjG,EACAkG,EDIDf,EAAY,eAAE5K,EAAa,gBAE1B4L,EAAkC,kBCPlCnG,ECED,WAAP,WACUoG,GAAoB,WAAqB,gBAE3CC,GAAMC,GADQ,EAAAC,GAAA,KAAQ,WAG5B,OAAO,EAAAC,GAAA,GAAS,CACdC,SAAU,gCACVC,QAAS,iD,yDACc,UAAM,UAAkB,W,IAAC,sDAC5C,OAAAL,EAAIM,mCAAkC,MAAtCN,EAA0CO,EAA1C,K,OAEF,OAHMC,EAAe,UAMd,CAAP,GAAO,UACL,W,IAAC,sDACC,OAAAR,EAAIS,gDAA+C,MAAnDT,EAAuDO,EAAvD,GACFC,IALO,CAAP,EAAOE,QAAQC,OAAO,4B,QAQ1BZ,gBAAe,GAEnB,CDxBgBa,IACRf,GAAY,QAAqB,CAAEgB,SAAS,KAGtCC,WACVnH,EAAMlD,OAC0B,IAAhCkD,EAAMlD,KAAKsK,iBAEJ,iBAGLlB,EAAU9B,QACL,gBAGJpE,EAAMqH,WAAcnB,EAAUmB,UAI5B,yBAHE,WDPT,OACE,iCACE,SAACnC,GAA2B,CAC1BD,cAAe,WACfE,aAAcA,EACd5K,cAAeA,IAEhB4L,GACC,SAAC,KAAgC,CAC/BxJ,kBAAmB,WAEnB,KAGF,SAAC2K,GAAqC,MAI9C,EAEaA,GACX,WACU,IAAAxK,GAAS,UAAsB,KAEvC,OACE,SAAC,KAAiB,CAChBuD,SAAUvD,aAAI,EAAJA,EAAMuD,SAChB9C,UAAWT,aAAI,EAAJA,EAAMU,MACjBrC,KAAM,EACNyC,aAAc,WAEd,EACAjB,kBAAmB,WAEnB,GAGN,E,YGhDW4K,GAAqB,SAACC,GACjC,gBAAGA,EAAI,eAAP,EAEWC,GAA0B,SAACD,GACtC,gBAAGA,EAAI,iCAAP,EAEWE,GAAkC,SAACF,GAC9C,gBAAGA,EAAI,gDAAP,EAEWG,GAAuC,SAACH,GACnD,gBAAGA,EAAI,kEAAP,EAEWI,GAAgC,SAACJ,GAC5C,gBAAGA,EAAI,oDAAP,ECNK,SAASK,KACd,IAAM/Q,GAAgB,IAAAC,eACpBwQ,GAAmB,IAEfvQ,GAAiB,IAAAD,eACrBwQ,GAAmB1R,IAEfoB,EAAQH,GAAiBE,EAC/B,IAAKC,EACH,MAAMC,MAAM,oDAGd,MAAO,CAAEO,UADkB,QAASR,EAAMG,OAAOC,IAAI,GAAK,KACGJ,MAAK,EACpE,CCZO,IAAM6Q,GAET,SAAC,G,IAAEvN,EAAa,gBAAE0K,EAAa,gBAE3BrK,GAAU,IAAAC,cACV,EAAmC/B,IAAjCf,EAAY,eAAEI,EAAc,iBAE5BiC,EAAaR,IAAoB,SAEnC,EAGFiO,KAFFpQ,EAAQ,WACCsQ,EAAG,YAGR3C,EAAe,CACnB4C,UAAW,UAAGD,EAAG,cACjBE,OAAQ,UAAGF,EAAG,WACdG,SAAU,UAAGH,EAAG,oBAChBI,YAAa,UAAGJ,EAAG,SACnBK,SAAU,UAAGL,EAAG,cAGZtL,GAAW,IAAArE,cAAY,WAG3BwC,EAAQ4B,KAAK,UAAGjC,EAAa,YAAI9C,EAASJ,GAAE,WAC9C,GAAG,CAACuD,EAASnD,EAAU8C,IAEjBmC,GAAgB,IAAAtE,cAAY,WAGhCwC,EAAQ4B,KAAK,UAAGjC,EAAa,YAAI9C,EAASJ,GAAE,iBAC9C,GAAG,CAACuD,EAASnD,EAAU8C,IAEvB,OACE,SAAC,IAAe,CACdA,cAAeA,EACfuI,cAAcrL,aAAQ,EAARA,EAAUsF,OAAQ,GAChCkI,cAAeA,EACfG,aAAcA,EACdzG,UAAW,WACT5G,EAAa,WACbI,GAAe,EACjB,EACAyG,aAAc,WACZ7G,EAAa,eACbI,GAAe,EACjB,EACA8G,kBAAmB7E,EAAS6E,kBAAkBxH,EAASyF,QACvDiC,eAAgB/E,EAAS+E,eAAe1H,EAASwF,MAAOxF,EAASyF,QACjEkC,UAAWhF,EAASiF,mBAAmB5H,EAASwF,OAChDP,cAAeA,EACfD,SAAUA,GAGhB,E,mMC/Ca4L,GAET,SAAC,G,IAAE9N,EAAa,gBAAE+N,EAAqB,wBAAEC,EAAmB,sBACxD,GACJ,EAAArN,EAAA,KADMC,EAAI,OAAEC,EAAO,UAAEC,EAAa,gBAAEC,EAAkB,qBAEhD7D,EAAaoQ,KAAkB,SAC/B1G,GAAgB,UAA8B,YAChDgB,GAAW,KAAAC,eAGXxH,GAAU,IAAAC,cAEF2N,GAAS,QAAQ,CAC7BnR,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,SACnBtN,KAAI,EACJC,QAAO,IACP,KAEYwI,GAAa,QAAgB,CACzCvM,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,WACnB,KAEYC,GAAoB,QAAmB,CACnDrR,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,WACnB,KAEIE,EAAsC/E,aAAQ,EAARA,EAAUA,SAASY,KAC7D,SAACoE,GACC,MAAO,CACLvR,GAAIuR,EAAY5O,SAChB0K,YAAakE,EAAYlE,YACzBmE,MAAOD,EAAYC,MACnBC,cAAe,iBAEnB,IAGIC,EACJL,aAAe,EAAfA,EAAiBA,gBAAgBlE,KAAI,SAACwE,GACpC,MAAO,CACL3R,GAAI2R,EAAe3R,GACnBqN,YAAasE,EAAetE,YAC5BoE,cAAe,oBAEnB,IAEIG,EACkB1R,MAAtBwR,GAAmDxR,MAAhBoR,EAC/B,GAAD,MAAKI,GAAoB,GAAGJ,GAAY,QACvCpR,EAEA2R,GAAmB,IAAA9Q,cACvB,SAAC+Q,GACCA,EAAS3E,KAAI,SAAC/L,GACZ,IAAM2Q,EAAcZ,aAAI,EAAJA,EAAMa,OAAO5Q,GAC5B0I,EAAY,CACflL,WAAYwB,EAASJ,GACrBoR,SAAUhR,EAASgR,UAAY,GAC/Ba,IAAK,CACHC,YAAaH,aAAW,EAAXA,EAAaI,SAASD,YACnCE,eAAgBL,aAAW,EAAXA,EAAaM,WAAWA,WACxCC,UAAWP,aAAW,EAAXA,EAAa9C,QACxBsD,aAAcR,aAAW,EAAXA,EAAaI,SAASI,aACpCC,UAAWT,aAAW,EAAXA,EAAaM,WAAWG,UACnCC,aAAcV,aAAW,EAAXA,EAAaI,SAASM,cAEtC5I,QAAS,SAAC6I,EAAGxH,GACXJ,GACE,KAAAO,iBAAgB,CACdJ,QAAS,SACTK,MAAOJ,EACPC,aAAa,EACbnL,GAAI,iBAGV,EACA4J,UAAW,WAEX,GAEJ,GACF,GACA,CAACuH,aAAI,EAAJA,EAAMa,OAAQlI,EAAa1J,EAASJ,GAAII,EAASgR,SAAUtG,IAGxD1F,GAAW,IAAArE,cACf,SAAC+Q,GACC,IAAMC,EAAcZ,aAAI,EAAJA,EAAMa,OAAOF,GAC5BhI,EAAY,CACflL,WAAYwB,EAASJ,GACrBoR,SAAUhR,EAASgR,UAAY,GAC/Ba,IAAK,CACHC,YAAaH,aAAW,EAAXA,EAAaI,SAASD,YACnCE,eAAgBL,aAAW,EAAXA,EAAaM,WAAWA,WACxCC,UAAWP,aAAW,EAAXA,EAAa9C,QACxBsD,aAAcR,aAAW,EAAXA,EAAaI,SAASI,aACpCC,UAAWT,aAAW,EAAXA,EAAaM,WAAWG,UACnCC,aAAcV,aAAW,EAAXA,EAAaI,SAASM,cAEtC5I,QAAS,SAAC6I,EAAGxH,GACXJ,GACE,KAAAO,iBAAgB,CACdJ,QAAS,SACTK,MAAOJ,EACPC,aAAa,EACbnL,GAAI,iBAGV,EACA4J,UAAW,WAEX,GAEJ,GACA,CAACuH,aAAI,EAAJA,EAAMa,OAAQlI,EAAa1J,EAASJ,GAAII,EAASgR,SAAUtG,IAGxD6H,GAAgC,IAAA5R,cACpC,SAACkO,GAEC1L,EAAQ4B,KAAK+L,EAAoB9Q,EAASJ,GAAIiP,GAChD,GACA,CAAC1L,EAASnD,EAASJ,GAAIkR,IAEnB0B,GAAqB,IAAA7R,cAAY,WAErCwC,EAAQ4B,KAAK8L,EAAsB7Q,EAASJ,IAC9C,GAAG,CAACuD,EAASnD,EAASJ,GAAIiR,IAE1B,OACE,iCACE,SAACR,GAAwB,CACvBvN,cAAeA,EACf0K,cAAe,iBAGjB,SAAC,KAAgB,CACfgE,YAAaA,EACbd,YAAaK,aAAI,EAAJA,EAAMa,OACnB5M,SAAUA,EACVyM,iBAAkBA,EAClBgB,oBAAqBD,EACrBE,gBAAiB7O,EACjBiC,UAAWiL,aAAI,EAAJA,EAAMhL,MACjBrC,KAAMA,EACNC,QAASA,EACTwC,aAAcvC,EACd2O,8BAA+BA,MAIvC,EC7JaI,GAET,SAAC,G,IAAE7P,EAAa,gBACZU,GAAS,UAGTL,GAAU,IAAAC,cAERpD,EAAaoQ,KAAkB,SACjC,GACJ,EAAA3M,EAAA,KADMC,EAAI,OAAEC,EAAO,UAAEC,EAAa,gBAAEC,EAAkB,qBAElDC,GAAuB,IAAAnD,cAC3B,WAAM,OAAAkD,EAAmB,EAAGF,EAAtB,GACN,CAACA,EAASE,IAGNiB,GAAW,IAAAnE,cAAY,WAE3BwC,EAAQ4B,KACN,UAAG,EAAqB,YAAI/E,EAASJ,GAAE,gCAE3C,GAAG,CAACuD,EAASnD,EAASJ,KAEhBgT,GAAa,EAAA5O,EAAA,GAAwB,QAASF,GAC9C,GAA0C,EAAAK,EAAA,GAC9C,KACAX,EAAOY,QAFFC,EAAgB,KAAEC,EAAI,KAAEC,EAAa,KAIpCc,GAAS,QAAU,CACzBzF,GAAII,aAAQ,EAARA,EAAUJ,GACdoR,SAAUhR,aAAQ,EAARA,EAAUgR,SACpBtN,KAAI,EACJC,QAAO,EACPW,KAAMA,QAAQxE,EACd4F,UAAWnB,EACX0J,OAAQ2E,EAAWrN,MAAM,GACzBkD,KAAMzI,EAASyI,OACf,KAEIoK,GAAgB,IAAAlS,cACpB,SAACmS,GAGC3P,EAAQ4B,KACN,UAAG,EAAqB,YAAI/E,EAASJ,GAAE,2BAAmBkT,EAAS,WAEvE,GACA,CAAC3P,EAASnD,EAASJ,KAGfmT,GAAc,IAAApS,cAClB,SAACmS,GAGC3P,EAAQ4B,KACN,UAAG,EAAqB,YAAI/E,EAASJ,GAAE,2BAAmBkT,EAAS,SAEvE,GACA,CAAC3P,EAASnD,EAASJ,KAErB,OACE,iCACE,SAACyQ,GAAwB,CACvBvN,cAAeA,EACf0K,cAAe,YAEjB,SAAC,KAAW,CACVgD,OAAQnL,aAAI,EAAJA,EAAMmL,OACd1K,UAAWT,aAAI,EAAJA,EAAMU,MACjBrC,KAAMA,EACNC,QAASA,EACTmP,UAAWF,EAAWrN,MACtByN,eAAgB,SAACvL,GAAQ,yBAAYA,EAAInC,KAAhB,EACzBjB,iBAAkBA,EAClBW,SAAU,SAACyC,GAAQ,OAAAoL,EAAcpL,EAAInC,KAAlB,EACnB2N,OAAQ,SAACxL,GAAQ,OAAAsL,EAAYtL,EAAInC,KAAhB,EACjB4N,cAAe,SAAClS,GACd4R,EAAWnM,QACXmM,EAAW9L,OAAO9F,EACpB,EACAwD,kBAAmBoO,EAAWnM,MAC9B0M,cAAerO,EACfqB,aAAcvC,EACdwP,kBAAmBR,EAAWnM,MAC9B4M,mBAAoBT,EAAWnM,UAIvC,EC7Fa6M,GAET,SAAC,G,IAAExQ,EAAa,gBACV9C,EAAaoQ,KAAkB,SACjChE,GAAiB,UAEfxB,EAAaH,KAAW,SAE1B8I,GAA2B,IAAA5S,cAG/B,SAAO6S,GAAuB,O,OAAA,E,OAAA,E,EAAA,W,0mCAE1B,O,sBAAA,GAAMpH,EAAe1C,YAAY,CAC/B9J,GAAII,EAASJ,GACb4M,QAAS,CAAEiH,yBAA0BD,M,OASvC,OAXA,SAKA5I,EACE,UACA,8CAHa4I,EAA0B,KAAO,MAGD,MAC7C,EACA,mCAEK,CAAP,EAAOA,G,OASP,O,SAPA5I,EACE,SACA,wBACA,EACA,gCACA,sFAEK,CAAP,EAAO5K,EAAS0T,QAAQD,0B,kCAtBE,K,gRAyB9B,CACE7I,EACA5K,EAASJ,GACTI,EAAS0T,QAAQD,yBACjBrH,IAGJ,OACE,iCACE,SAACiE,GAAwB,CACvBvN,cAAeA,EACf0K,cAAe,cAEjB,SAAC,KAAY,CACX+F,yBAA0BA,EAC1BC,wBAAyBxT,EAAS0T,QAAQD,6BAIlD,E,mkDC5CaE,GAET,SAAC,G,IAAE7Q,EAAa,gBACZ,EAGFsN,KAFFpQ,EAAQ,WACCL,EAAM,eAGXwD,GAAU,IAAAC,cAEV,GAA4D,IAAAnD,WAChE,YADK2T,EAAyB,KAAEC,EAA4B,KAIxDC,GAAe,IAAAnT,cAAY,WAC/BkT,GAA6B,IAC7B,UACF,GAAG,IAEGE,GAAgB,UAChBC,GAAmB,UACnBC,GAAuB,UACvBC,GAAoB,UACpBC,GAAc,UAEdC,GAA+C,IAAAzT,cAAY,sD,yDAClD,SAAMqT,EAAiBrU,EAAOC,K,OAC3C,OADMyU,EAAO,SACN,CAAP,WACKA,GAAI,CACPC,qBAAsBtU,EAASuU,eAAiB,K,SAEjD,CAACvU,EAAUL,EAAOC,GAAIoU,IAEnBQ,GACJ,IAAA7T,cACE,SAAO,G,IAAE8T,EAAQ,WAAEC,EAAQ,WAAEC,EAAc,iB,0GACb,SAAMrF,QAAQsF,IAAI,CAC5Cb,EAAcpU,EAAOC,IACrBqU,EAAqB,CACnBrU,GAAID,EAAOC,GACX8U,SAAQ,EACRD,SAAQ,EACRE,eAAc,O,OAGlB,OATM,EAAsB,SAArB3U,EAAQ,KAAE6U,EAAO,KASnB7U,EAGE,CAAP,WACK6U,GAAO,CACVC,iBAC2C,QAAxC,EAAA9U,EAAS0T,QAAQqB,+BAAuB,eAAEC,QAAS,GAAK,WAC3DC,iBAAkBjV,EAASkV,aAAe,EAC1CC,oBAAqBnV,EAASoV,gBAAkB,KAPzC,CAAP,EAAO9F,QAAQC,OAAO,4B,SAU1B,CAAC5P,EAAOC,GAAImU,EAAeE,IAGzBoB,GAAqD,IAAA1U,cACzD,SAAO,G,IAAE8T,EAAQ,WAAEC,EAAQ,WAAEY,EAAa,gB,0GACZ,SAAMhG,QAAQsF,IAAI,CAC5Cb,EAAcpU,EAAOC,IACrBsU,EAAkB,CAAEtU,GAAID,EAAOC,GAAI8U,SAAQ,EAAED,SAAQ,EAAEa,cAAa,O,OAEtE,OAJM,EAAsB,SAArBtV,EAAQ,KAAE6U,EAAO,KAInB7U,GAAaA,EAASgR,SAIzB,GAAMmD,EAAY,CAChBvU,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,SACnBtN,KAAM,EACNC,QAAS,IACT8E,KAAMzI,EAASyI,QARV,CAAP,EAAO6G,QAAQC,OAAO,4B,OAWxB,OATMgG,EACJ,SAOA/E,OAAOzD,KAAI,SAACyI,GAAM,OAAAA,EAAElQ,IAAF,IACb,CAAP,WACKuP,GAAO,CACVU,YAAW,K,SAGf,CAAC5V,EAAOC,GAAImU,EAAeG,EAAmBC,IAG1ChB,GAAgB,IAAAxS,cAAY,WAEhCwC,EAAQ4B,KACN,UAAG,EAAqB,YAAI/E,EAASJ,GAAE,gCAE3C,GAAG,CAACuD,EAASnD,EAASJ,KAEtB,OACE,iCACE,SAACyQ,GAAwB,CACvBvN,cAAeA,EACf0K,cAAe,eAEjB,SAAC,KAAO,CACN2F,cAAeA,EACfW,aAAcA,EACdF,0BAA2BA,EAC3BY,wBAAyBA,EACzBa,iBAAkBA,EAClBjB,cAAeA,MAIvB,EChHaqB,GAET,SAAC,G,IAAE3S,EAAa,gBAAE4S,EAA0B,6BACtC1V,EAAaoQ,KAAkB,SAGjCjN,GAAU,IAAAC,cAEVI,GAAS,UAET,GACJ,EAAAC,EAAA,KADMC,EAAI,OAAEC,EAAO,UAAEC,EAAa,gBAAEC,EAAkB,qBAElDC,GAAuB,IAAAnD,cAC3B,WAAM,OAAAkD,EAAmB,EAAGF,EAAtB,GACN,CAACA,EAASE,IAGN8R,GAAe,EAAA3R,EAAA,GACnB,WACAF,GAEI,GAA0C,EAAAK,EAAA,GAC9C,KACAX,EAAOY,QAFFC,EAAgB,KAAEC,EAAI,KAAEC,EAAa,KAIpCc,GAAS,QAAkB,CACjCzF,GAAII,aAAQ,EAARA,EAAUJ,GACdoR,SAAUhR,aAAQ,EAARA,EAAUgR,SACpBtN,KAAI,EACJC,QAAO,EACPW,KAAMA,QAAQxE,EACd4F,UAAWnB,EACXqR,QAASD,EAAapQ,MAAM,KAC5B,KAEIsQ,GAAuB,IAAAlV,cAC3B,SAACiV,GAGCzS,EAAQ4B,KACN,UAAG2Q,EAA2B1V,EAASJ,IAAG,YAAIgW,EAAO,WAEzD,GACA,CAACzS,EAASnD,EAASJ,GAAI8V,IAGnBI,GAAkB,IAAAnV,cACtB,SAACiV,GAGCzS,EAAQ4B,KACN,UAAG2Q,EAA2B1V,EAASJ,IAAG,YAAIgW,EAAO,mBAEzD,GACA,CAACzS,EAASnD,EAASJ,GAAI8V,IAGnBK,GAAqB,IAAApV,cACzB,SAACiV,GAGCzS,EAAQ4B,KACN,UAAG2Q,EAA2B1V,EAASJ,IAAG,YAAIgW,EAAO,iBAEzD,GACA,CAACzS,EAASnD,EAASJ,GAAI8V,IAEzB,OACE,iCACE,SAACrF,GAAwB,CACvBvN,cAAeA,EACf0K,cAAe,cAEjB,SAAC,KAAc,CACbwI,UAAW3Q,aAAI,EAAJA,EAAMuM,OACjB9L,UAAWT,aAAI,EAAJA,EAAMU,MACjBrC,KAAMA,EACNC,QAASA,EACTgS,aAAcA,EAAapQ,MAC3B0B,cAAe,WAAM,UACrB5C,iBAAkBA,EAClBW,SAAU,SAACyC,GAAQ,OAAAoO,EAAqBpO,EAAInC,KAAzB,EACnB2Q,iBAAkB,SAACjV,GACjB2U,EAAalP,QACbkP,EAAa7O,OAAO9F,EACtB,EACAwD,kBAAmBmR,EAAalP,MAChCN,aAAcvC,EACdsS,qBAAsBP,EAAalP,MACnC0P,sBAAuBR,EAAalP,MACpCqP,gBAAiB,SAACrO,GAAQ,OAAAqO,EAAgBrO,EAAInC,KAApB,EAC1B8Q,kBAAmB,SAAC3O,GAAQ,OAAAsO,EAAmBtO,EAAInC,KAAvB,MAIpC,ECtGO,SAAS+Q,KACN,IAAArW,EAAaoQ,KAAkB,SACjC/Q,GAAgB,IAAAC,eACpB0Q,GAAwB,IAEpBzQ,GAAiB,IAAAD,eACrB0Q,GAAwB5R,IAEpBoB,EAAQH,GAAiBE,EAC/B,IAAKC,EACH,MAAMC,MAAM,oDAYd,MAAO,CACLO,SAAQ,EACRsW,OAZsB,QACtB,CACE1W,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,SACnB8B,UAAWtT,EAAMG,OAAOmT,UACxBrK,KAAMzI,EAASyI,OAEjB,GACD,KAKCjJ,MAAK,EAET,CC3BO,IAAM+W,GAET,SAAC,G,IACHC,EAAmB,sBACnBC,EAAkB,qBAClB3T,EAAa,gBACb0K,EAAa,gBAGPrK,GAAU,IAAAC,cACV,EAAmC/B,IAAjCf,EAAY,eAAEI,EAAc,iBAC5BiC,EAAaR,IAAoB,SACnC,EAIFkU,KAHFrW,EAAQ,WACRsW,EAAK,QACIhG,EAAG,YAGRoG,EAAW,CACfjG,SAAU,UAAGH,EAAG,oBAChBqG,SAAU,UAAGrG,EAAG,aAChBsG,WAAY,UAAGtG,EAAG,eAClBuG,QAAS,UAAGvG,EAAG,aAGXtL,GAAW,IAAArE,cAAY,WAG3BwC,EAAQ4B,KAAK,UAAGjC,EAAa,YAAI9C,EAASJ,GAAE,WAC9C,GAAG,CAACuD,EAASnD,EAAU8C,IAEjBmC,GAAgB,IAAAtE,cAAY,WAGhCwC,EAAQ4B,KAAK,UAAGjC,EAAa,YAAI9C,EAASJ,GAAE,iBAC9C,GAAG,CAACuD,EAASnD,EAAU8C,IAEvB,OACE,SAAC,KAAoB,CACnBA,cAAeA,EACfuI,aAAcrL,EAASsF,KACvBwR,mBAAoBN,EAAoBxW,EAASJ,IACjD6W,mBAAoBA,EAAmBzW,EAASJ,IAChD4N,cAAeA,EACfsF,UAAWwD,EAAMhR,KACjBoR,SAAUA,EACVxP,UAAW,WACT5G,EAAa,WACbI,GAAe,EACjB,EACAyG,aAAc,WACZ7G,EAAa,eACbI,GAAe,EACjB,EACA8G,kBAAmB7E,EAAS6E,kBAAkBxH,EAASyF,QACvDiC,eAAgB/E,EAAS+E,eAAe1H,EAASwF,MAAOxF,EAASyF,QACjEkC,UAAWhF,EAASiF,mBAAmB5H,EAASwF,OAChDP,cAAeA,EACfD,SAAUA,GAGhB,ECrDa+R,GAET,SAAC,G,IACHP,EAAmB,sBACnBC,EAAkB,qBAClB3T,EAAa,gBACb4S,EAA0B,6BAEpB,EAAsBW,KAApBrW,EAAQ,WAAEsW,EAAK,QAGjBnT,GAAU,IAAAC,cAEVI,GAAS,UAET,GACJ,EAAAC,EAAA,KADMC,EAAI,OAAEC,EAAO,UAAEC,EAAa,gBAAEC,EAAkB,qBAGlDC,GAAuB,IAAAnD,cAC3B,WAAM,OAAAkD,EAAmB,EAAGF,EAAtB,GACN,CAACA,EAASE,IAGN8R,GAAe,EAAA3R,EAAA,GACnB,WACAF,GAEI,GAA0C,EAAAK,EAAA,GAC9C,KACAX,EAAOY,QAFFC,EAAgB,KAAEC,EAAI,KAAEC,EAAa,KAKpCc,GAAS,QAAkB,CACjCzF,GAAII,aAAQ,EAARA,EAAUJ,GACdoR,SAAUhR,aAAQ,EAARA,EAAUgR,SACpBtN,KAAI,EACJC,QAAO,EACPW,KAAMA,QAAQxE,EACd4F,UAAWnB,EACXqR,QAASD,EAAapQ,MAAM,GAC5B+Q,MAAOA,EAAMhR,OACb,KAEIuQ,GAAuB,IAAAlV,cAC3B,SAACiV,GAGCzS,EAAQ4B,KACN,UAAG,EAAqB,YAAI/E,EAASJ,GAAE,2BAAmB0W,EAAMhR,KAAI,4BAAoBsQ,EAAO,WAEnG,GACA,CAACzS,EAASnD,EAASJ,GAAI0W,EAAMhR,OAGzBwQ,GAAkB,IAAAnV,cACtB,SAACiV,GAGCzS,EAAQ4B,KACN,UAAG,EAAqB,YAAI/E,EAASJ,GAAE,2BAAmB0W,EAAMhR,KAAI,4BAAoBsQ,EAAO,mBAEnG,GACA,CAACzS,EAASnD,EAASJ,GAAI0W,EAAMhR,OAGzByQ,GAAqB,IAAApV,cACzB,SAACiV,GAGCzS,EAAQ4B,KACN,UAAG,EAAqB,YAAI/E,EAASJ,GAAE,2BAAmB0W,EAAMhR,KAAI,4BAAoBsQ,EAAO,iBAEnG,GACA,CAACzS,EAASnD,EAASJ,GAAI0W,EAAMhR,OAG/B,OACE,iCACE,SAACiR,GAA6B,CAC5BzT,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,EAC5BlI,cAAe,cAEjB,SAAC,KAAc,CACbwI,UAAW3Q,aAAI,EAAJA,EAAMuM,OACjB9L,UAAWT,aAAI,EAAJA,EAAMU,MACjBrC,KAAMA,EACNC,QAASA,EACTgS,aAAcA,EAAapQ,MAC3B0B,cAAe,WAAM,UACrB5C,iBAAkBA,EAClBW,SAAU,SAACyC,GAAQ,OAAAoO,EAAqBpO,EAAInC,KAAzB,EACnB2Q,iBAAkB,SAACjV,GACjB2U,EAAalP,QACbkP,EAAa7O,OAAO9F,EACtB,EACAwD,kBAAmBmR,EAAalP,MAChCN,aAAcvC,EACdsS,qBAAsBP,EAAalP,MACnC0P,sBAAuBR,EAAalP,MACpCqP,gBAAiB,SAACrO,GAAQ,OAAAqO,EAAgBrO,EAAInC,KAApB,EAC1B8Q,kBAAmB,SAAC3O,GAAQ,OAAAsO,EAAmBtO,EAAInC,KAAvB,MAIpC,E,mNCpHa0R,GAET,SAAC,G,IACHR,EAAmB,sBACnBC,EAAkB,qBAClB3T,EAAa,gBACb4S,EAA0B,6BAEpB,EAAsBW,KAApBrW,EAAQ,WAAEsW,EAAK,QACjBW,GAA+B,UAE/BC,GAAc,IAAAvW,cAClB,SAAOhB,GAAM,O,OAAA,E,OAAA,E,EAAA,W,0mCACX,IAAKK,EAASgR,SACZ,MAAMvR,MAAM,6BAEG,SAAMwX,EAA6B,SAC/CtX,GAAM,CACTC,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,SACnB8B,UAAWwD,EAAMhR,S,OAEnB,MAAO,CAAP,EAAO,CACLqR,SAPe,SAQfQ,WAAYb,EAAMa,WAAWrO,S,iBAZpB,K,gRAeb,CACE9I,EAASgR,SACThR,EAASJ,GACTqX,EACAX,EAAMhR,KACNgR,EAAMa,WAAWrO,SAIrB,OACE,iCACE,SAACyN,GAA6B,CAC5BzT,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,EAC5BlI,cAAe,cAEjB,SAAC,KAAmB,CAAC0J,YAAaA,MAGxC,ECnDaE,GAET,SAAC,G,IACHZ,EAAmB,sBACnBC,EAAkB,qBAClBf,EAA0B,6BAC1B5S,EAAa,gBACbuU,EAAe,kBACfC,EAAe,kBAET,EAAsBjB,KAApBrW,EAAQ,WAAEsW,EAAK,QAEvB,OACE,iCACE,SAACC,GAA6B,CAC5BzT,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,EAC5BlI,cAAe,gBAEjB,SAAC,KAAe,CACd8I,MAAOA,EACPe,gBAAiBA,EAAgBrX,EAASJ,GAAI0W,EAAMhR,MACpDgS,gBAAiBA,EAAgBtX,EAASJ,GAAI0W,EAAMhR,UAI5D,E,sPCnBaiS,GAET,SAAC,G,IACHf,EAAmB,sBACnBC,EAAkB,qBAClB3T,EAAa,gBACb4S,EAA0B,6BAEpB8B,GAAS,SACPlB,EAAUD,KAAc,MAK1BoB,EAAa,SAAE,GACnB,OADqB,KAAG,KACtBC,MAAM3K,KACN,SAAC4K,GAAM,sCAAyBA,EAAzB,GACR,EACGC,EAAW,oBACXxV,EAAa,CACjByV,IAAK,CAAEC,SAAUN,EAAOpV,KAAK0V,WAK/B,OACE,iCACE,SAACvB,GAA6B,CAC5BzT,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,EAC5BlI,cAAe,aAEjB,SAAC,GAAAuK,YAAA,SAAoB,IAAC/W,MAAOoB,GAAI,WAC/B,SAAC,GAAA4V,cAAA,SAAsB,IAAChX,MAbP,CACrB6W,IAAK,CAAEI,YAAa,MAYqB,WACnC,SAACC,GAAAA,aAAY,IACXC,IAAK,KACLC,UAAW,CACTC,GAAI,CACFC,OAAQ,WACN,4CAGF,mBAAoB,WAClB,6CAGFC,kBAAmB,WAAM,+CAG7BC,OAAO,GAAI,WAEX,SAAC,GAAAC,kBAAiB,CAChBC,QAAQ,MACRC,OAAO,2BACPC,MAAM,MACNC,gBAAgB,mCAChBC,UAhDM,SAAE,GAClB,OADoB,KAAG,KACrBpB,MAAM3K,KACN,SAAC4K,GAAM,uCAA0BA,EAA1B,GACR,EA8CSC,SAAUA,EACV9E,UAAWwD,EAAMhR,KACjByT,aAAc,SAACC,GACb,OACE,SAAC,GAAAP,kBAAiB,CAChBC,QAAQ,KACRE,MAAM,KACNC,gBAAgB,mCAChBC,UAAWrB,EACXkB,OAAO,2BACPK,SAAUA,EACVlG,UAAWwD,EAAMhR,KACjBsQ,QAAS,KACTqD,QAAS,SACTC,WAAYF,aAAQ,EAARA,EAAUpZ,GACtBgY,SAAUA,GAGhB,eAOd,ECzFO,SAASuB,KACN,IAAAnZ,EAAaoQ,KAAkB,SACjC/Q,GAAgB,IAAAC,eACpB2Q,GAAgC,IAE5B1Q,GAAiB,IAAAD,eACrB2Q,GAAgC7R,IAE5BoB,EAAQH,GAAiBE,EAC/B,IAAKC,EACH,MAAMC,MAAM,wDAWd,MAAO,CACLO,SAAQ,EACRoZ,eAX8B,QAC9B,CACExZ,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,SACnBqI,gBAAiB7Z,EAAMG,OAAO0Z,kBAEhC,GACD,KAKC7Z,MAAK,EAET,CC3BO,IAAM8Z,GAET,SAAC,G,IAAE5D,EAA0B,6BAEzBvS,GAAU,IAAAC,cAERwH,EAAaH,KAAW,SAE1B,EAA8B0O,KAA5BnZ,EAAQ,WAAEoZ,EAAa,gBAEvB1P,GAAgB,UAAgC,YAElDC,GAAW,IAAAhJ,cAAY,WAE3BwC,EAAQ4B,KAAK2Q,EAA2B1V,EAASJ,IACnD,GAAG,CAACuD,EAASnD,EAASJ,GAAI8V,IAEpB1Q,GAAW,IAAArE,cAAY,WACtB+I,EAAY,CACflL,WAAYwB,EAASJ,GACrBoR,SAAUhR,EAASgR,SACnBqI,gBAAiBD,EAAc9T,KAC/BmE,QAAS,SAAC6I,EAAGxH,GACXF,EAAS,SAAUE,GAAS,EAAM,8BACpC,EACAtB,UAAW,WAETrG,EAAQI,QAAQmS,EAA2B1V,EAASJ,KACpDgL,EACE,UACA,8CAAuCwO,EAAc9T,OACrD,EACA,gCAEJ,GAEJ,GAAG,CACDoE,EACA1J,EAASJ,GACTI,EAASgR,SACToI,EAAc9T,KACdsF,EACAzH,EACAuS,IAGF,OACE,SAAC,KAAmB,CAClB9L,aAAa,EACbrJ,QAASoJ,EACT4P,iBAAkBvU,EAClBwU,MAAOJ,EAAcI,MACrB7D,aAAcyD,EAAc9T,KAC5B8E,SAAU,WACR,OAACH,SAASI,eAAe,2BACzBJ,SAASK,IADT,GAKR,EC1DamP,GAET,SAAC,G,IAgBKjJ,EAhBHkF,EAA0B,6BACzB,EAA8ByD,KAA5BnZ,EAAQ,WAAEoZ,EAAa,gBAEvBxO,EAAaH,KAAW,SAExBf,GAAgB,UAA+B,YAGjDvG,GAAU,IAAAC,cAEVuG,GAAW,IAAAhJ,cAAY,WAE3BwC,EAAQ4B,KAAK2Q,EAA2B1V,EAASJ,IACnD,GAAG,CAACuD,EAASnD,EAASJ,GAAI8V,IAUpBgE,GAAuB,IAAA/Y,cAC3B,SACE2V,EACAqD,EACAxC,EACAyC,GAEKlQ,EAAY,CACflL,WAAYwB,EAASJ,GACrBoR,SAAUhR,EAASgR,SACnBqI,gBAAiBD,EAAc9T,KAC/BgR,MAAOA,EACPqD,OAAQA,EACRxC,WAAYA,EACZnW,MAAO4Y,EACPnQ,QAAS,SAAC6I,EAAGxH,GACXF,EAAS,SAAUE,GAAS,EAAM,qBACpC,EACAtB,UAAW,WAETrG,EAAQI,QAAQmS,EAA2B1V,EAASJ,KACpDgL,EACE,UACA,+DACA,EACA,uBAEJ,GAEJ,GACA,CACElB,EACA1J,EAASJ,GACTI,EAASgR,SACToI,EAAc9T,KACdsF,EACAzH,EACAuS,IAIJ,OACE,SAAC,KAAwB,CACvB9L,aAAa,EACb4P,MAAOJ,EAAcI,MACrB5D,QAASwD,EAAc9T,KACvBkL,QArDIA,GAAU4I,EAAcpD,WAAa,IAAIjJ,KAC7C,SAAC0D,GAAa,OAAAA,EAAS6F,KAAT,IAEOuD,MAAMC,KAAK,IAAIC,IAAIvJ,KAmDxCwF,UAAWoD,EAAcpD,UACzBgE,aAAcrQ,EACdoM,mBAAoB2D,GAG1B,E,mNC/EaO,GAET,SAAC,G,IACHvE,EAA0B,6BAC1BwE,EAA8B,iCAC9BpX,EAAa,gBACb0T,EAAmB,sBACnBC,EAAkB,qBAEZ,EAA8B0C,KAA5BnZ,EAAQ,WAAEoZ,EAAa,gBAGzBjW,GAAU,IAAAC,cAEVuG,GAAW,IAAAhJ,cAAY,WAE3BwC,EAAQ4B,KAAK2Q,EAA2B1V,EAASJ,IACnD,GAAG,CAACuD,EAASnD,EAASJ,GAAI8V,IAEpB1Q,GAAW,IAAArE,cAAY,WAE3BwC,EAAQ4B,KACN,UAAGmV,EACDla,EAASJ,GACTwZ,EAAc9T,MACf,WAEL,GAAG,CACDnC,EACAnD,EAASJ,GACTwZ,EAAc9T,KACd4U,IAGInE,GAAqB,IAAApV,cAAY,WAErCwC,EAAQ4B,KACN,UAAGmV,EACDla,EAASJ,GACTwZ,EAAc9T,MACf,iBAEL,GAAG,CACDnC,EACAnD,EAASJ,GACTwZ,EAAc9T,KACd4U,IAGF,OACE,SAAC,KAAmB,IAClBC,sBAAsB,EACtBX,MAAOJ,EAAcI,MACrBY,cAAehB,EAAciB,gBAC7BC,kBAAmBlB,EAAcmB,kBACjCvE,UAAWoD,EAAcpD,UACzBJ,QAASwD,EAAc9T,KACvBkV,4BAA6BxV,EAC7ByV,iCAAkC1E,EAClC5V,YAAY,EACZ6Z,aAAcrQ,GAAQ,WAEtB,SAAC8L,GAAmB,CAClB3S,cAAeA,EACf2T,mBAAoBA,EACpBD,oBAAqBA,EACrBd,2BAA4BA,MAIpC,ECpEO,SAASgF,KACR,MAAsBrE,KAApBrW,EAAQ,WAAEsW,EAAK,QACjBjX,GAAgB,IAAAC,eACpB4Q,GAAqC,IAEjC3Q,GAAiB,IAAAD,eACrB4Q,GAAqC9R,IAEjCoB,EAAQH,GAAiBE,EAC/B,IAAKC,EACH,MAAMC,MAAM,6DAWd,MAAO,CACLO,SAAQ,EACRoZ,eAX8B,QAC9B,CACExZ,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,SACnBqI,gBAAiB7Z,EAAMG,OAAO0Z,kBAEhC,GACD,KAKC7Z,MAAK,EACL8W,MAAK,EAET,CC5BO,IAAMqE,GAET,SAAC,G,IAAEC,EAA+B,kCAE9BzX,GAAU,IAAAC,cAERwH,EAAaH,KAAW,SAE1B,EAAqCiQ,KAAnC1a,EAAQ,WAAEoZ,EAAa,gBAAE9C,EAAK,QAE9B5M,GAAgB,UAAgC,YAElDC,GAAW,IAAAhJ,cAAY,WAE3BwC,EAAQ4B,KAAK6V,EAAgC5a,EAASJ,GAAI0W,EAAMhR,MAClE,GAAG,CAACnC,EAASnD,EAASJ,GAAI0W,EAAMhR,KAAMsV,IAEhC5V,GAAW,IAAArE,cAAY,WACtB+I,EAAY,CACflL,WAAYwB,EAASJ,GACrBoR,SAAUhR,EAASgR,SACnBqI,gBAAiBD,EAAc9T,KAC/BmE,QAAS,SAAC6I,EAAGxH,GACXF,EAAS,SAAUE,GAAS,EAAM,8BACpC,EACAtB,UAAW,WAETrG,EAAQI,QACNqX,EAAgC5a,EAASJ,GAAI0W,EAAMhR,OAErDsF,EACE,UACA,8CAAuCwO,EAAc9T,OACrD,EACA,gCAEJ,GAEJ,GAAG,CACDoE,EACA1J,EAASJ,GACTI,EAASgR,SACToI,EAAc9T,KACdsF,EACAzH,EACAyX,EACAtE,EAAMhR,OAGR,OACE,SAAC,KAAmB,CAClBsE,aAAa,EACbrJ,QAASoJ,EACT4P,iBAAkBvU,EAClBwU,MAAOJ,EAAcI,MACrB7D,aAAcyD,EAAc9T,KAC5B8E,SAAU,WACR,OAACH,SAASI,eAAe,2BACzBJ,SAASK,IADT,GAKR,EC7DauQ,GAET,SAAC,G,IAgBKrK,EAhBHoK,EAA+B,kCAC9B,EAAqCF,KAAnC1a,EAAQ,WAAEsW,EAAK,QAAE8C,EAAa,gBAE9BxO,EAAaH,KAAW,SAExBf,GAAgB,UAA+B,YAGjDvG,GAAU,IAAAC,cAEVuG,GAAW,IAAAhJ,cAAY,WAE3BwC,EAAQ4B,KAAK6V,EAAgC5a,EAASJ,GAAI0W,EAAMhR,MAClE,GAAG,CAACnC,EAASnD,EAASJ,GAAI0W,EAAMhR,KAAMsV,IAUhClB,GAAuB,IAAA/Y,cAC3B,SACEmS,EACA6G,EACAxC,EACAyC,GAEKlQ,EAAY,CACflL,WAAYwB,EAASJ,GACrBoR,SAAUhR,EAASgR,SACnBqI,gBAAiBD,EAAc9T,KAC/BgR,MAAOxD,EACP6G,OAAQA,EACRxC,WAAYA,EACZnW,MAAO4Y,EACPnQ,QAAS,SAAC6I,EAAGxH,GACXF,EAAS,SAAUE,GAAS,EAAM,qBACpC,EACAtB,UAAW,WAETrG,EAAQI,QACNqX,EAAgC5a,EAASJ,GAAI0W,EAAMhR,OAErDsF,EACE,UACA,+DACA,EACA,uBAEJ,GAEJ,GACA,CACElB,EACA1J,EAASJ,GACTI,EAASgR,SACToI,EAAc9T,KACdsF,EACAzH,EACAyX,EACAtE,EAAMhR,OAIV,OACE,SAAC,KAAwB,CACvBsE,aAAa,EACb4P,MAAOJ,EAAcI,MACrB5D,QAASwD,EAAc9T,KACvBkL,QAxDIA,GAAU4I,EAAcpD,WAAa,IAAIjJ,KAC7C,SAAC0D,GAAa,OAAAA,EAAS6F,KAAT,IAEOuD,MAAMC,KAAK,IAAIC,IAAIvJ,KAsDxCwF,UAAWoD,EAAcpD,UACzBgE,aAAcrQ,EACdoM,mBAAoB2D,GAG1B,E,mNClFaoB,GAET,SAAC,G,IACHF,EAA+B,kCAC/B9X,EAAa,gBACbiY,EAAmC,sCACnCvE,EAAmB,sBACnBC,EAAkB,qBAClBf,EAA0B,6BAEpB,EAAqCgF,KAAnC1a,EAAQ,WAAEsW,EAAK,QAAE8C,EAAa,gBAGhCjW,GAAU,IAAAC,cAEVuG,GAAW,IAAAhJ,cAAY,WAE3BwC,EAAQ4B,KAAK6V,EAAgC5a,EAASJ,GAAI0W,EAAMhR,MAClE,GAAG,CAACnC,EAASnD,EAASJ,GAAI0W,EAAMhR,KAAMsV,IAEhC5V,GAAW,IAAArE,cAAY,WAE3BwC,EAAQ4B,KACN,UAAGgW,EACD/a,EAASJ,GACT0W,EAAMhR,KACN8T,EAAc9T,MACf,WAEL,GAAG,CACDnC,EACAnD,EAASJ,GACTwZ,EAAc9T,KACdgR,EAAMhR,KACNyV,IAGIhF,GAAqB,IAAApV,cAAY,WAErCwC,EAAQ4B,KACN,UAAGgW,EACD/a,EAASJ,GACT0W,EAAMhR,KACN8T,EAAc9T,MACf,iBAEL,GAAG,CACDnC,EACAnD,EAASJ,GACT0W,EAAMhR,KACN8T,EAAc9T,KACdyV,IAGF,OACE,SAAC,KAAmB,IAClBZ,sBAAsB,EACtBX,MAAOJ,EAAcI,MACrBY,cAAehB,EAAciB,gBAC7BC,kBAAmBlB,EAAcmB,kBACjCvE,UAAWoD,EAAcpD,UACzBJ,QAASwD,EAAc9T,KACvBkV,4BAA6BxV,EAC7ByV,iCAAkC1E,EAClC5V,YAAY,EACZ6Z,aAAcrQ,GAAQ,WAEtB,SAACoN,GAAwB,CACvBjU,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,MAIpC,E,+NCpEasF,GAAiE,SAAC,GAC7E,IAAAlI,EAAS,YACNmI,E,yUAAK,GAFqE,eAIrEzF,GAAM,IAAA0F,gBAAe,SAAQ,EAErC,OACE,SAACC,GAAA,GAAW,MACNF,EAAK,CACTpQ,QAAS,cACTK,MAAOsK,EAAE,sBACT4F,kBAAmBtI,GAAS,WAE5B,SAAC,EAAAuI,MAAK,CACJC,GAAI,QACJC,QAAS,uBACTC,WAAY,EAAC,uBACbC,OAAQ,CACN3I,UAAS,OAKnB,EC9Ba4I,GAET,SAAC,G,IAAEjF,EAAkB,qBAEjBtT,GAAU,IAAAC,cAEV,EAAsBiT,KAApBrW,EAAQ,WAAEsW,EAAK,QACjB,GAAyC,UAAvC5M,EAAW,cAAa0B,EAAU,YAEpCzB,GAAW,IAAAhJ,cAAY,WAE3BwC,EAAQ4B,KAAK0R,EAAmBzW,EAASJ,IAC3C,GAAG,CAACuD,EAASnD,EAASJ,GAAI6W,IAEpBzR,GAAW,IAAArE,cAAY,WAC3B,IAAKX,EAASgR,SACZ,MAAMvR,MAAM,6BAETiK,EAAY,CACflL,WAAYwB,EAASJ,GACrBoR,SAAUhR,EAASgR,SACnB1L,KAAMgR,EAAMhR,KACZmE,QAAS,WAET,EACAD,UAAW,WAETrG,EAAQI,QAAQkT,EAAmBzW,EAASJ,IAC9C,GAEJ,GAAG,CACDI,EAASgR,SACThR,EAASJ,GACT8J,EACA4M,EAAMhR,KACNnC,EACAsT,IAGF,OACE,SAACuE,GAAgB,CACflI,UAAWwD,EAAMhR,KACjBsE,aAAa,EACbwB,WAAYA,EACZhB,SAAU,WACR,OAACH,SAASI,eAAe,2BACzBJ,SAASK,IADT,EAGFtF,SAAUA,EACV2E,SAAUA,GAGhB,EChDagS,GAET,SAAC,G,IAAEnF,EAAmB,sBAAEC,EAAkB,qBAAE3T,EAAa,gBAAE4S,EAA0B,6BAEjFvS,GAAU,IAAAC,cACV,EAAsBiT,KAApBrW,EAAQ,WAAEsW,EAAK,QAEvB,QAA+BxW,IAA3BE,EAASuU,cACX,MAAM,IAAI9U,MACR,2EAAoEO,EAASsF,OAIjF,IAAMoF,GAAW,KAAAC,eAEXiR,GAAc,UAEdC,GAAS,IAAAlb,cACb,SAACmb,GACC,QAA0Bhc,IAAtBE,EAASgR,SACX,MAAM,IAAIvR,MACR,0DAAmDO,EAASsF,OAG3DsW,EAAYlS,YAAY,CAC3BlL,WAAYwB,EAASJ,GACrBoR,SAAUhR,EAASgR,SACnBsF,MAAOwF,EAEPtS,UAAW,WAETrG,EAAQ4B,KAAK0R,EAAmBzW,EAASJ,IAC3C,EACA6J,QAAS,SAAC6I,EAAGxH,GACXJ,GACE,KAAAO,iBAAgB,CACdJ,QAAS,SACTK,MAAOJ,EACPC,aAAa,EACbnL,GAAI,eAGV,GAEJ,GACA,CACEI,EAASgR,SACThR,EAASJ,GACTI,EAASsF,KACTsW,EACAzY,EACAsT,EACA/L,IAIEf,GAAW,IAAAhJ,cAAY,WAE3BwC,EAAQ4B,KAAK0R,EAAmBzW,EAASJ,IAC3C,GAAG,CAACuD,EAASnD,EAASJ,GAAI6W,IAE1B,OACE,iCACE,SAACF,GAA6B,CAC5BzT,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,EAC5BlI,cAAe,gBAEjB,SAAC,KAAmB,CAClB8I,MAAOA,EACP3M,SAAUA,EACVkS,OAAQA,EACRE,wBAAyB/b,EAASuU,kBAI1C,EClEayH,GAET,SAAC,G,IAAEnL,EAAqB,wBAClB7Q,EAAaoQ,KAAkB,SAC/BxF,EAAaH,KAAW,SAE1BpL,GAAgB,IAAAC,eACpB6Q,GAA8B,IAE1B5Q,GAAiB,IAAAD,eACrB6Q,GAA8B/R,IAE1BoB,EAAQH,GAAiBE,EAC/B,IAAKC,EACH,MAAMC,MAAM,mDAGN,IAAMsR,GAAS,QAAQ,CAC7BnR,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,WACnB,KAEYR,GAAW,QAAU,CACjC5Q,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,SACnBvI,KAAMzI,EAASyI,OACf,KAEYwT,GAAmB,QAAkB,CACjDrc,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,WACnB,KAEIkL,EAAqBD,aAAc,EAAdA,EAAgBrK,OAAO7E,KAChD,SAAC0D,GAAa,OAAAA,EAASnL,IAAT,IAEV6W,EAAa3L,aAAM,EAANA,EAAQA,OAAOzD,KAAI,SAACuJ,GAAU,OAAAA,EAAMhR,IAAN,IACzCoE,GAAgB,UAA8B,YAChD0S,GAAoB,UAGpBjZ,GAAU,IAAAC,cAEViZ,GAAa,IAAA1b,cACjB,SACE2b,EACAC,GAEqBzc,MAAjBwc,GAA8BA,EAAcxT,OAAS,GACvDwT,EAAcvP,KACZ,SAACyP,GACMJ,EAAkB1S,YAAY,CACjClL,WAAYwB,EAASJ,GACrBoR,UAAUhR,aAAQ,EAARA,EAAUgR,WAAY,GAChCa,IAAK,CACHC,YAAa0K,EAAQ1K,YACrBG,WAAYuK,EAAQvK,WACpBC,UAAWsK,EAAQtK,UACnBE,UAAWoK,EAAQpK,UACnBD,aAAcqK,EAAQrK,aACtBE,aAAcmK,EAAQnK,cAGxB7I,UAAW,WAETrG,EAAQ4B,KAAK8L,EAAsB7Q,EAASJ,IAC9C,EACA6J,QAAS,SAAC6I,EAAGxH,GACXF,EAAS,SAAUE,GAAS,EAAM,aACpC,GAlBF,IAuBoBhL,MAAtByc,GAAmCA,EAAmBzT,OAAS,GACjEyT,EAAmBxP,KAAI,SAAC0P,GACjB/S,EAAY,CACflL,WAAYwB,EAASJ,GACrBoR,SAAUhR,EAASgR,UAAY,GAC/Ba,IAAK,CACHC,YAAa2K,EAAY3K,YACzBE,eAAgByK,EAAYxK,WAC5BC,UAAWuK,EAAYvK,UACvBC,aAAcsK,EAAYtK,aAC1BC,UAAWqK,EAAYrK,UACvBC,aAAcoK,EAAYpK,cAE5B5I,QAAS,SAAC6I,EAAGxH,GACXF,EAAS,SAAUE,GAAS,EAAM,eACpC,EACAtB,UAAW,WAETrG,EAAQ4B,KAAK8L,EAAsB7Q,EAASJ,IAC9C,GAEJ,GAEJ,GACA,CACEgL,EACAzH,EACAnD,EAASgR,SACThR,EAASJ,GACTiR,EACAnH,EACA0S,IAIEM,EAAyC3L,aAAI,EAAJA,EAAMa,OAAO7E,KAAI,SAAC8E,GAC/D,MAAO,CACLM,aAAcN,EAAIE,SAASI,aAC3BL,YAAaD,EAAIE,SAASD,YAC1BG,WAAYJ,EAAII,WAAWA,WAC3BG,UAAWP,EAAII,WAAWG,UAC1BF,UAAWL,EAAIhD,QACfwD,aAAcR,EAAIE,SAASM,aAE/B,IAEMsK,EAAyBD,aAAY,EAAZA,EAAczO,QAC3C,SAACjN,GACC,OAAAA,EAAMkR,WAAa,eAAQ1S,EAAMG,OAAOid,kBACrB,UAAnB5b,EAAMkR,SADN,IAIE3R,GAAU,IAAAI,cAAY,WAE1BwC,EAAQ4B,KAAK8L,EAAsB7Q,EAASJ,IAC9C,GAAG,CAACuD,EAASnD,EAASJ,GAAIiR,IAE1B,OACE,SAAC,KAAe,CACdlH,SAAUpJ,EACVsc,UAAW7c,EAASsF,KACpBuW,OAAQQ,EACRF,WAAYA,GAAc,GAC1BD,mBAAoBA,GAAsB,GAC1CU,gBACkC,gBAAhCpd,EAAMG,OAAOid,gBACT,eACApd,EAAMG,OAAOid,gBAEnB7L,KAAM4L,GAA0B,IAGtC,E,mMChKaG,GAET,SAAC,G,IAAEjM,EAAqB,wBAAEC,EAAmB,sBACvC9Q,EAAaoQ,KAAkB,SACzBjE,GAAa,QAAgB,CACzCvM,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,WACnB,KAEYC,GAAoB,QAAmB,CACnDrR,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,WACnB,KAEMrO,EAAaR,IAAoB,SACnC+O,EAAsC/E,aAAQ,EAARA,EAAUA,SAASY,KAC7D,SAACoE,GACC,MAAO,CACLlE,YAAakE,EAAYlE,YACzBrN,GAAIuR,EAAY5O,SAChB8O,cAAe,iBAEnB,IAGIC,EACJL,aAAe,EAAfA,EAAiBA,gBAAgBlE,KAAI,SAACoE,GACpC,MAAO,CACLlE,YAAakE,EAAYlE,YACzBrN,GAAIuR,EAAYvR,GAChByR,cAAe,oBAEnB,IAEIG,EACY1R,MAAhBoR,GAAmDpR,MAAtBwR,EACzB,SAAIA,GAAoB,GAAGJ,GAAY,QACvCpR,EACAid,EAAmBvL,aAAW,EAAXA,EAAavD,QACpC,SAACjN,GAAU,OAAAA,EAAMpB,KAAOI,EAASwF,OAASxE,EAAMpB,KAAO+C,EAASJ,QAArD,IAIPY,GAAU,IAAAC,cAEV4Z,GAAS,IAAArc,cACb,SAACic,GAECzZ,EAAQ4B,KACN+L,EACE9Q,EAASJ,GACW,iBAApBgd,EACI,eACAA,GAAmB,IAG7B,GACA,CAACzZ,EAASnD,EAASJ,GAAIkR,IAGnBvQ,GAAU,IAAAI,cAAY,WAE1BwC,EAAQ4B,KAAK8L,EAAsB7Q,EAASJ,IAC9C,GAAG,CAACuD,EAASnD,EAASJ,GAAIiR,IAE1B,OACE,SAAC,KAAa,CACZ1E,SAAU4Q,EACVF,UAAW7c,EAASsF,KACpB0X,OAAQA,EACRzc,QAASA,GAGf,E,+NCnEa0c,GAET,SAAC,G,IAAEna,EAAa,gBAAE2T,EAAkB,qBAEhCtT,GAAU,IAAAC,cACRpD,EAAaoQ,KAAkB,SACjC8M,GAAc,UACdxS,GAAW,KAAAC,eACXwS,EAAmBnd,EAASod,GACpB5M,GAAW,QAAU,CACjC5Q,GAAII,EAASJ,GACboR,SAAUhR,EAASgR,SACnBvI,KAAMzI,EAASyI,OACf,KAEF,QAA+B3I,IAA3BE,EAASuU,cACX,MAAM,IAAI9U,MACR,2EAAoEO,EAASsF,OAIjF,IAAM+X,GAAyD,IAAA1c,cAC7D,SAACmS,GACC,IAAMwC,EAAgB9E,aAAM,EAANA,EAAQA,OAAOvC,QACnC,SAACqI,GAAU,OAAAA,EAAMhR,OAASwN,CAAf,IAEb,QAAIwC,IAAiBA,aAAa,EAAbA,EAAexM,QAAS,EAK/C,GACA,CAAC0H,aAAM,EAANA,EAAQA,SAGL8M,GAAqB,IAAA3c,cAAY,WAErCwC,EAAQ4B,KAAK0R,EAAmBzW,EAASJ,IAC3C,GAAG,CAACuD,EAASnD,EAASJ,GAAI6W,IAEpBoF,GAAS,IAAAlb,cACb,SAACmb,GACMoB,EAAYxT,YAAY,CAC3BlL,WAAYwB,EAASJ,GACrBoR,UAAUhR,aAAQ,EAARA,EAAUgR,WAAY,GAChCsF,MAAOwF,EAEPtS,UAAW,WAETrG,EAAQ4B,KAAK0R,EAAmBzW,EAASJ,IAC3C,EACA6J,QAAS,SAAC6I,EAAGxH,GACXJ,GACE,KAAAO,iBAAgB,CACdJ,QAAS,SACTK,MAAOJ,EACPC,aAAa,EACbnL,GAAI,eAGV,GAEJ,GACA,CACEsd,EACAxS,EACAvH,EACAnD,aAAQ,EAARA,EAAUgR,SACVhR,EAASJ,GACT6W,IAIE8G,GAAqB,IAAAtc,UAAQ,WACjC,MAAyB,cAAlBjB,EAASyI,KACZ,IACEnD,KAAM,GACN6R,WAAY,CAAC,CAAEqG,UAAW,EAAG5d,GAAI,KAC9B,OAEL,IACE0F,KAAM,GACN6R,WAAY,CAAC,CAAEqG,UAAW,EAAG5d,GAAI,KAC9B,MAEX,GAAG,CAACI,EAASyI,OAEb,OACE,+BACE,SAAC,KAAW,CACVoU,UAAW7c,EAASsF,KACpBmY,cAAehH,EAAmBzW,EAASJ,IAC3C8d,kBAAmB5a,EACnB+Y,OAAQA,EACR0B,mBAAoBA,EACpBD,mBAAoBA,EACpBD,eAAgBA,EAChBtB,wBAAyB/b,EAASuU,cAClC4I,iBAAkBA,KAI1B,E,mNClFaQ,GAA+D,SAAC,G,IAC3E5N,EAAI,OACJjN,EAAa,gBACbtE,EAAU,aAEJgY,EAAsB,SAAC5W,GAAe,gBAAGkD,EAAa,YAAIlD,EAAE,WAAtB,EAEtC6W,EAAqB,SAAC7W,GAC1B,gBAAGkD,EAAa,YAAIlD,EAAE,kBAAtB,EAKIge,EAAY,SAAChe,EAAY0W,GAC7B,gBAAGE,EAAoB5W,GAAG,mBAAW0W,EAArC,EAEIgB,EAAkB,SAAC1X,EAAY0W,GACnC,gBAAGsH,EAAUhe,EAAI0W,GAAM,QAAvB,EAEIe,EAAkB,SAACzX,EAAY0W,GACnC,gBAAGsH,EAAUhe,EAAI0W,GAAM,UAAvB,EAEIZ,EAA6B,SAAC9V,GAClC,gBAAG4W,EAAoB5W,GAAG,mBAA1B,EAEIsa,EAAiC,SACrCta,EACAyZ,GAEA,gBAAG7C,EACD5W,GACD,4BAAoByZ,EAAe,kBAFpC,EAIIwE,EAAiC,SAACje,EAAY0W,GAClD,gBAAGE,EAAoB5W,GAAG,mBAAW0W,EAAK,mBAA1C,EAEIyE,EAAsC,SAC1Cnb,EACA0W,EACA+C,GAEA,gBAAG7C,EACD5W,GACD,mBAAW0W,EAAK,4BAAoB+C,EAAe,kBAFpD,EAOIvI,EAAsB,SAAClR,EAAYgd,GACvC,gBAAGpG,EACD5W,GACD,gCAAwBgd,EAAe,oBAFxC,EAIIkB,EAAuB,SAACle,GAC5B,gBAAG4W,EAAoB5W,GAAG,QAA1B,EAEF,OACE,SAAC,EAAAuN,MAAK,IAACC,KAAM2C,GAAI,WACf,SAACvO,EAAmB,IAACC,YAAa,GAAqB,WACrD,UAAC,EAAAsc,OAAM,YACL,SAAC,EAAA5Q,MAAK,IAACC,KAAM,UAAG2C,EAAI,cAAc1C,OAAK,cACrC,SAACsG,GAAc,CAAC7Q,cAAeA,QAGjC,SAAC,EAAAqK,MAAK,IAACC,KAAM,UAAG2C,EAAI,WAAW1C,OAAK,cAClC,SAACsF,GAAW,CAAC7P,cAAeA,QAG9B,SAAC,EAAAqK,MAAK,IAACC,KAAM,UAAG2C,EAAI,oBAAoB1C,OAAK,cAC3C,SAACoI,GAAmB,CAClB3S,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,QAIhC,UAAC,EAAAvI,MAAK,IAACC,KAAM,UAAG2C,EAAI,UAAO,YACzB,SAAC,EAAA5C,MAAK,IAACC,KAAM,UAAG2C,EAAI,yBAAsB,WACxC,SAAC+M,GAA6B,CAC5Bha,cAAeA,EACf+N,sBAAuBiN,EACvBhN,oBAAqBA,QAGzB,SAAC,EAAA3D,MAAK,IACJC,KAAM,UAAG2C,EAAI,2DAAwD,WAErE,SAACiM,GAAoB,CACnBlZ,cAAeA,EACf+N,sBAAuBiN,EACvBhN,oBAAqBA,QAGzB,SAACF,GAAgB,CACf9N,cAAeA,EACf+N,sBAnDkB,SAACjR,GAC7B,gBAAG4W,EAAoB5W,GAAG,uBAA1B,EAmDUkR,oBAAqBA,SAIzB,SAAC,EAAA3D,MAAK,IAACC,KAAM,UAAG2C,EAAI,aAAa1C,OAAK,cACpC,SAACiG,GAAa,CAACxQ,cAAeA,QAEhC,SAAC,EAAAqK,MAAK,IAACC,KAAM,UAAG2C,EAAI,YAAS,WAC3B,SAACvO,EAAmB,IAACC,YAAagV,EAAmBjY,IAAW,WAC9D,UAAC,EAAAuf,OAAM,YACL,SAAC,EAAA5Q,MAAK,IAACC,KAAM,UAAG2C,EAAI,wBAAwB1C,OAAK,cAC/C,SAAC4P,GAAgB,CACfna,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,QAGhC,UAAC,EAAAvI,MAAK,IAACC,KAAM,UAAG2C,EAAI,uCAAoC,YACtD,SAACvO,EAAmB,IAClBC,YAAagV,EAAmBjY,IAAW,WAE3C,UAAC,EAAAuf,OAAM,YACL,UAAC,EAAA5Q,MAAK,IACJC,KAAM,UAAG4C,GACPD,GACD,qDAAkD,YAEnD,SAAC,EAAA5C,MAAK,IACJC,KAAM,UAAG4C,GACPD,GACD,4DAAyD,WAE1D,SAAC4K,GAA6B,CAC5B7X,cAAeA,EACf8X,gCACEiD,EAEF9C,oCACEA,EAEFvE,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BACEA,QAIN,SAAC,EAAAvI,MAAK,IACJC,KAAM,UAAG4C,GACPD,GACD,kEAA+D,WAEhE,SAAC8K,GAAkC,CACjC/X,cAAeA,EACf8X,gCACEiD,EAEF9C,oCACEA,EAEFvE,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BACEA,QAIN,SAACoF,GAAoC,CACnChY,cAAeA,EACf8X,gCACEiD,EAEF9C,oCACEA,EAEFvE,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BACEA,SAIN,SAAC,EAAAvI,MAAK,IACJC,KAAM,UAAG4C,GACPD,GACD,mDAAgD,WAEjD,SAAC8K,GAAkC,CACjC/X,cAAeA,EACf8X,gCACEiD,EAEF9C,oCACEA,EAEFvE,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BACEA,QAIN,SAAC,EAAAvI,MAAK,IACJC,KAAM,UAAG4C,GACPD,GACD,6CAA0C,WAE3C,SAAC4K,GAA6B,CAC5B7X,cAAeA,EACf8X,gCACEiD,EAEF9C,oCACEA,EAEFvE,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BACEA,cAMV,SAACqB,GAAwB,CACvBjU,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,SAGhC,SAAC,EAAAvI,MAAK,IAACC,KAAM,UAAG2C,EAAI,+BAA+B1C,OAAK,cACtD,SAAC2J,GAAwB,CACvBlU,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,QAIhC,SAAC,EAAAvI,MAAK,IAACC,KAAM,UAAG2C,EAAI,sCAAsC1C,OAAK,cAC7D,SAACsO,GAAwB,CACvB7Y,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,QAGhC,UAAC,EAAAvI,MAAK,IAACC,KAAM,UAAG2C,EAAI,kCAA+B,YACjD,SAAC,EAAA5C,MAAK,IAACC,KAAM,UAAG2C,EAAI,yCAAsC,WACxD,SAAC2L,GAAgB,CACf5Y,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,EAC5BkI,UAAWA,EACXtG,gBAAiBA,EACjBD,gBAAiBA,QAGrB,SAACD,GAAoB,CACnBtU,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,EAC5BkI,UA7PQ,SAAChe,EAAY0W,GACrC,gBAAGE,EAAoB5W,GAAG,mBAAW0W,EAAK,cAA1C,EA6PgBgB,gBAAiBA,EACjBD,gBAAiBA,SAGrB,SAAC,EAAAlK,MAAK,IAACC,KAAM,UAAG2C,EAAI,8BAA8B1C,OAAK,cACrD,SAACkK,GAAiB,CAChBzU,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,QAGhC,SAAC,EAAAvI,MAAK,IAACC,KAAM,UAAG2C,EAAI,6BAA6B1C,OAAK,cACpD,SAACqO,GAAgB,CACf5Y,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,EAC5BkI,UAAWA,EACXtG,gBAAiBA,EACjBD,gBAAiBA,QAGrB,SAAC,EAAAlK,MAAK,IAACC,KAAM,UAAG2C,EAAI,2BAA2B1C,OAAK,cAClD,SAACsO,GAAwB,CACvB7Y,cAAeA,EACf0T,oBAAqBA,EACrBC,mBAAoBA,EACpBf,2BAA4BA,QAGhC,SAAC,EAAAzT,SAAQ,CACP6X,KAAM,UAAG/J,EAAI,uBACb7N,GAAI,UAAG6N,EAAI,sCACX1C,OAAK,cAKb,SAAC,EAAAF,MAAK,IAACC,KAAM,UAAG2C,EAAI,qBAAkB,WACpC,SAACvO,EAAmB,IAClBC,YAAaiU,EAA2BlX,IAAW,WAEnD,UAAC,EAAAuf,OAAM,YACL,UAAC,EAAA5Q,MAAK,IACJC,KAAM,UAAG2C,EAAI,qDAAkD,YAE/D,SAAC,EAAA5C,MAAK,IACJC,KAAM,UAAG2C,EAAI,4DAAyD,WAEtE,SAACuJ,GAAwB,CACvBxW,cAAeA,EACf0T,oBAAqBA,EACrBd,2BAA4BA,EAC5Be,mBAAoBA,EACpByD,+BACEA,QAIN,SAAC,EAAA/M,MAAK,IACJC,KAAM,UAAG2C,EAAI,kEAA+D,WAE5E,SAAC0J,GAA6B,CAC5B3W,cAAeA,EACf0T,oBAAqBA,EACrBd,2BAA4BA,EAC5Be,mBAAoBA,EACpByD,+BACEA,QAIN,SAACD,GAA+B,CAC9BnX,cAAeA,EACf0T,oBAAqBA,EACrBd,2BAA4BA,EAC5Be,mBAAoBA,EACpByD,+BACEA,SAIN,SAAC,EAAA/M,MAAK,IACJC,KAAM,UAAG2C,EAAI,mDAAgD,WAE7D,SAAC0J,GAA6B,CAC5B3W,cAAeA,EACf0T,oBAAqBA,EACrBd,2BAA4BA,EAC5Be,mBAAoBA,EACpByD,+BACEA,QAIN,SAAC,EAAA/M,MAAK,IAACC,KAAM,UAAG2C,EAAI,6CAA0C,WAC5D,SAACuJ,GAAwB,CACvBxW,cAAeA,EACf0T,oBAAqBA,EACrBd,2BAA4BA,EAC5Be,mBAAoBA,EACpByD,+BACEA,iBAOZ,SAAC,EAAAjY,SAAQ,CAAC6X,KAAM,UAAG/J,GAAQ7N,GAAI,UAAG6N,EAAI,cAAc1C,OAAK,KAEzD,SAAC,EAAAF,MAAK,WACJ,SAAC,GAAA6Q,cAAa,cAM1B,EChaaC,GAAuC,WAClD,OAAO,SAAC,KAAW,GACrB,E,mNCaaC,GAAgC,WAC3C,OACE,UAAC,EAAAH,OAAM,YACL,SAAC,EAAA5Q,MAAK,IAACC,KAAM,YAAaC,OAAK,cAC7B,SAAC4Q,GAAa,QAEhB,SAAC,EAAA9Q,MAAK,IAACC,KAAM,IAAKC,OAAK,cACrB,SAAC,EAAApL,SAAQ,CAACC,GAAI7D,QAEhB,SAAC,EAAA8O,MAAK,IAACC,KAAM,GAAqB,WAChC,UAACjO,EAAc,YAEb,SAAC+N,GAAkB,KACnB,SAAC,EAAAC,MAAK,CACJC,KAAM0C,GAAmB,GACzBqO,OAAQ,SAAC,G,IAAE3e,EAAK,QAAO,OACrB,SAACme,GAAe,CACd5N,KAAMD,GAAmB,GACzBhN,cAAe,EACftE,WAAYgB,EAAMG,OAAOC,IAJN,WAU7B,SAAC,EAAAuN,MAAK,IAACC,KAAMhP,GAA8B,WACzC,UAACe,EAAc,YAEb,SAACoP,GAA2B,KAC5B,SAAC,EAAApB,MAAK,CACJC,KAAM0C,GAAmBzR,GACzB8f,OAAQ,SAAC,G,IAAE3e,EAAK,QAAO,OACrB,SAACme,GAAe,CACd5N,KAAMD,GAAmBzR,GACzByE,cAAe1E,EACfI,WAAYgB,EAAMG,OAAOC,IAJN,WAU7B,SAAC,EAAAuN,MAAK,IAACC,KAAMpO,GAAiC,WAC5C,SAACwP,GAAsB,CACrB1L,cAAezE,EACfqP,aAAc1O,SAKxB,EClBA,UApCY,IAAAof,OAAK,WAEf,IAAMjb,GAAU,IAAAC,cACV,GAA8B,SAA5Bib,EAAmB,sBAAEC,EAAE,KAGzBpT,GAAQsK,GADA,IAAA0F,kBAAgB,GACd,qBAsBhB,OApBA,IAAAna,YAAU,YACS,UACRwd,SAAS,CAAEC,cAAe,OAEnCH,EAAoBnT,GAEpB,IAAMuT,EAAaH,EAAG,kBAAkB,SAACI,GACvCC,QAAQC,IAAIF,GACRA,EAAMG,OAER1b,EAAQ4B,KAAK,IAAM2Z,EAAMG,OAAU,IAAM,GAAKH,EAAMG,MAExD,IACA,OAAO,WACDJ,GACFA,GAEJ,CACF,GAAG,CAACtb,EAASmb,EAAIpT,EAAOmT,KAGtB,iCACE,SAAC,KAAmB,KACpB,SAACH,GAAM,MAGb,G,wTCpCMY,EAAW,2BACXC,EAAU,WACd,OAAOD,CACT,EAEaE,EAA0C,WAC/C,OAAsB,IAAA/e,WAAS,GAA9Bgf,EAAM,KAAEC,EAAS,KAEhBC,GADO,SACe,YAc9B,OACE,SAAC,EAAAvd,cAAa,GAACE,eAAgB,WAAM,cAAI,WACvC,SAAC,EAAAsd,cAAA,SAAsB,GAACpe,MAAO,CAAE+d,QAAO,IAAE,UACtCE,EAUE,MATF,SAAC,EAAAxG,kBAAiB,CAChBC,QAAQ,SACRE,MAAM,SACND,OAAO,qBACPE,gBAAgB,mCAChBC,UAdQ,SAACuG,GAEjB,OAAOA,EAAKC,OAAO5H,MAAM3K,KADT,SAAC4K,GAAM,gBAAGmH,GAAQ,OAAGnH,EAAd,GAEzB,EAYU4H,YAAY,EACZC,OAvBK,SAACC,GACVN,IACFD,GAAU,GACVC,EAAYO,IAfW,sBAeQD,GAEnC,SAwBF,C,kRCzCO,SAASE,I,IAAK,sDAMnB,OALW,QAAY,CAAC,EAAG,EAAF,CACvB,KACA,aAAwB,CAAEC,oBAAqB,CAAC,SAAU,YACvDC,GAAU,GAGjB,C,mxDCVO,SAASC,IAAhB,WACQC,GAAc,UACZlS,GAAsB,SAAQ,kBACtC,OAAO,SAAO,G,IACZ5E,EAAS,Y,6EAGT,OADM+W,EAAMnS,IACL,CAAP,EAAOkS,EAAYE,WAAW,CAC5BjR,SAAU,kBAA8B,CAAE/F,UAAS,IACnDgG,QAAS,gD,2BACP,MAAO,CAAP,GAAO,QAA2B,CAChChG,UAAS,EACTiX,yBAA0B,W,IAAC,sDACzB,OAAAF,EAAIE,yBAAwB,MAA5BF,EAAgC7Q,EAAhC,I,iBAKZ,C,s2CCnBO,SAASgR,IAAhB,WACQJ,GAAc,UACZlS,GAAsB,SAAQ,kBACtC,OAAO,gD,wCAEL,OADMmS,EAAMnS,IACL,CAAP,EAAOkS,EAAYE,WAAW,CAC5BjR,SAAU,gBACVC,QAAS,gD,2BACP,MAAO,CAAP,GAAO,QAAuB,CAC5BmR,yBAA0B,W,IAAC,sDACzB,OAAAJ,EAAII,yBAAwB,MAA5BJ,EAAgC7Q,EAAhC,I,iBAKZ,C,s2CCfO,SAASkR,EAA4BC,GAA5C,gBAA4C,IAAAA,IAAAA,GAAA,GAC1C,IAAMP,GAAc,UAEdnR,GAAMC,GADQ,SAAQ,WAG5B,OAAO,gD,wDACgB,SAAMkR,EAAYE,WAAW,CAChDjR,SAAU,oBACVC,QAAS,WACP,gBAAkB,W,IAAC,sDACjB,OAAAL,EAAIM,mCAAkC,MAAtCN,EAA0CO,EAA1C,GADF,EAGFoR,UAAWC,O,OAEb,OARMpR,EAAe,UAWd,CAAP,EAAO2Q,EAAYE,WAAW,CAC5BjR,SAAU,gCACVC,QAAS,WACP,gBACE,W,IAAC,sDACC,OAAAL,EAAIS,gDAA+C,MAAnDT,EAAuDO,EAAvD,GACFC,EAHF,EAKFmR,UAAWD,OAAYxgB,EAAY0gB,OAV5B,CAAP,EAAOlR,QAAQC,OAAO,4B,OAa5B,C,yOC1BO,SAASkR,EACd9gB,EAIAiD,QAAA,IAAAA,IAAAA,GAAA,GAEQ,IAAA+L,GAAoB,UAAqB,gBACzCsN,GAAmB,SAAQ,eAEnC,OAAO,EAAAlN,EAAA,GAAS,CACdC,SAAU,4BAAoCrP,GAC9CsP,QAAS,WACP,IAAKtP,EAAOC,GACV,OAAO0P,QAAQC,OAAO,cAExB,IAAK5P,EAAOqR,SACV,OAAO1B,QAAQC,OAAO,oBAExB,IAAK5P,EAAO0Z,gBACV,OAAO/J,QAAQC,OAAO,2BAExB,IAAMyQ,EAAM/D,EAAetc,EAAOqR,UAElC,OAAO,QAAmB,EAAD,CACvB0P,qBAAsB,W,IAAC,sDAAY,OAAAV,EAAIU,qBAAoB,MAAxBV,EAA4B7Q,EAA5B,GAChCxP,GAEP,EACAghB,QACEC,QAAQjhB,EAAOqR,WACf4P,QAAQjhB,EAAOC,KACfghB,QAAQjhB,EAAO0Z,iBACjB1K,gBAAe,EACf/L,SAAQ,GAEZ,C,oNCpCO,SAASie,EACdlhB,EAIAiD,QAAA,IAAAA,IAAAA,GAAA,GAEQ,IAAA+L,GAAoB,UAAqB,gBACzCsN,GAAmB,SAAQ,eAEnC,OAAO,EAAAlN,EAAA,GAAS,CACdC,SAAU,6BAAqCrP,GAC/CsP,QAAS,WACP,IAAKtP,EAAOC,GACV,OAAO0P,QAAQC,OAAO,cAExB,IAAK5P,EAAOqR,SACV,OAAO1B,QAAQC,OAAO,oBAExB,IAAMyQ,EAAM/D,EAAetc,EAAOqR,UAElC,OAAO,QAAoB,GACzB8P,kBAAmB,W,IAAC,sDAAY,OAAAd,EAAIc,kBAAiB,MAArBd,EAAyB7Q,EAAzB,GAC7BxP,GAEP,EACAghB,QAASC,QAAQjhB,EAAOqR,WAAa4P,QAAQjhB,EAAOC,IACpD+O,gBAAe,EACf/L,SAAQ,GAEZ,C,cC/BO,SAASme,EACd,G,IAAEtR,QAAF,MAAoC,CAAEA,SAAS,GAAM,GAA5C,QAEDd,GAAoB,UAAqB,gBACzCd,GAAsB,SAAQ,kBAEtC,OAAO,EAAAkB,EAAA,GAAS,CACdC,SAAU,gBACVC,QAAS,WACP,IAAM+Q,EAAMnS,IAEZ,OAAO,QAAuB,CAC5BuS,yBAA0B,W,IAAC,sDACzB,OAAAJ,EAAII,yBAAwB,MAA5BJ,EAAgC7Q,EAAhC,GAEN,EACAR,kBAAiBc,GAAUd,EAC3BqS,uBAAuBvR,QAAkB3P,EACzCmhB,qBAAqBxR,QAAkB3P,EACvCohB,iBAAiBzR,QAAkB3P,EACnCqhB,OAAO,GAEX,CCZO,SAASC,EACdphB,EACAqhB,EACAC,EACAC,G,QA4F2B9b,EA1FrB+b,EAA0C,CAC9CC,aAAS3hB,EACTsV,eAAgB,EAChBF,YAAa,EACbwM,UAAY1hB,EAAS2hB,aACnB,IAAIC,MAAOC,cACbC,OAAQ,EACRC,WAAY/hB,EAASgiB,WACrBpiB,GAAII,EAASJ,GACbqiB,QAAS,EACT1N,cAAe,EACf2N,YAAa,CAAErV,KAAM,QAAS7L,MAAOmhB,OAAO,IAC5C7c,KAAMtF,EAASsF,MAAQ,GACvBE,MAAOxF,EAASwF,OAAS,GACzBiD,KAAMzI,EAASoiB,cACfC,SAAUriB,EAASsiB,eACnBC,OAAQviB,EAASuiB,QAAU,GAC3BC,KAAM,IACN/c,QAwEyBA,EAxEGzF,EAASyF,QAAU,GAyEN,CACzCgd,SAAU,WACVC,UAAW,YACXC,aAAc,eACdC,MAAO,QACPC,OAAQ,WACRC,YAAa,cACbC,SAAU,YAEGtd,IAAW,YAjFxBud,QAAS,CAAEnW,KAAM,QAAS7L,MAAOmhB,OAAO,IACxCc,UAAYjjB,EAASkjB,aACnB,IAAItB,MAAOC,cACbnO,QAAS1T,EACTiJ,UAAWjJ,EAASmjB,WAAanjB,EAASmjB,gBAAarjB,EACvDmZ,QAASjZ,EAASiZ,SAAW,GAC7BmK,aAAcpjB,EAASqjB,sBACvBrS,SAAUhR,EAASsjB,qBACnBlG,GAAyB,GAArBpd,EAASujB,SAAmB,QAAU,UAI5C,IACE,IAAMC,EAEL,QAF6B,EAAAnC,EAAyBoC,MAAK,SAACC,GAC3D,OAAAA,EAAGC,cAAcF,MAAK,SAACG,GAAM,OAAAA,IAAM5jB,EAAS6jB,wBAAf,GAA7B,WACD,eAAEC,YAEGrC,EACuB,eAA3BzhB,EAAS+jB,cACL,YAC2B,aAA3B/jB,EAAS+jB,cACT,UACAP,GAAyBxjB,EAAS6jB,yBAClC,CACEC,YAAaN,EACbQ,aAAchkB,EAAS6jB,+BAEzB/jB,EACN0hB,EAAiBC,QAAUA,C,CAC3B,MAAO9J,GACPgH,QAAQsF,KACN,8BACA,yCACAjkB,E,CAKJ,IACE,IAIMkkB,GAHuB,cAA3BlkB,EAASoiB,cACLd,EACAC,GAC4BkC,MAAK,SAACU,GAAM,OAAAA,EAAEvkB,KAAOI,EAASokB,OAAlB,IAC1CF,IACF1C,EAAiBgB,KAAO0B,EAAmBjX,YAC3CuU,EAAiBS,QAAUiC,EAAmBjC,QAC9CT,EAAiBM,OAASoC,EAAmBpC,OAC7CN,EAAiBwB,QAAU,CACzBnW,KAAM,QACN7L,MAAOmhB,QAAuC,QAAhC,EAAAniB,EAAS+U,+BAAuB,eAAEC,QAAS,IAE3DwM,EAAiBtM,YAAcgP,EAAmBhP,YAClDsM,EAAiBpM,eAAiB8O,EAAmB9O,eACrDoM,EAAiBjN,cAAgB2P,EAAmB3P,cACpDiN,EAAiBU,YAAc,CAC7BrV,KAAM,QACN7L,MAAOmhB,OAAO+B,EAAmBhC,c,CAGrC,MAAOvK,GACPgH,QAAQsF,KACN,8BACA,wCACAjkB,E,CAIJ,OAAOwhB,CACT,CCvGqB,EAAA6C,cAAA,QAEM,EAAAA,cAAA,SAEA,EAAAA,cAAA,SAEL,EAAAA,cAAA,UAER,EAAAA,cAAA,QAEW,EAAAA,cAAA,UAED,EAAAA,cAAA,S,s2CCXjB,SAAS,IACd,ICFMtE,EACEuE,EDCFC,EEJD,SAAoCjE,GAA3C,gBAA2C,IAAAA,IAAAA,GAAA,GACzC,IAAMP,GAAc,UAEdnR,GAAMC,GADQ,SAAQ,WAG5B,OAAO,iD,yDACgB,SAAMkR,EAAYE,WAAW,CAChDjR,SAAU,oBACVC,QAAS,WACP,gBAAkB,W,IAAC,sDACjB,OAAAL,EAAIM,mCAAkC,MAAtCN,EAA0CO,EAA1C,GADF,EAGFoR,UAAWC,O,OAEb,OARMpR,EAAe,UAWd,CAAP,EAAO2Q,EAAYE,WAAW,CAC5BjR,SAAU,+BACVC,QAAS,WACP,gBACE,W,IAAC,sDACC,OAAAL,EAAIS,gDAA+C,MAAnDT,EAAuDO,EAAvD,GACFC,EAHF,EAKFmR,UAAWD,OAAYxgB,EAAY0gB,OAV5B,CAAP,EAAOlR,QAAQC,OAAO,4B,OAa5B,CFxBgCiV,GACxBC,GCHA1E,GAAc,UACZuE,GAAgB,SAAQ,YAEzB,SAAC7b,GACN,IAAMic,EAAMJ,IACZ,OAAOvE,EAAYE,WAAW,CAC5BjR,SAAU,UAAqB,CAAEvG,KAAI,IACrCwG,QAAS,WACP,gBACE,W,IAAC,sDAAY,OAAAyV,EAAIC,kBAAiB,MAArBD,EAAyBvV,EAAzB,IACb,W,IAAC,sDAAY,OAAAuV,EAAIE,wBAAuB,MAA3BF,EAA+BvV,EAA/B,GACb1G,EAHF,EAKF8X,UAAWC,KAEf,GDXMqE,EGJD,WACL,IAAM9E,GAAc,UACZuE,GAAgB,SAAQ,YAEhC,OAAO,SACLjC,EACAE,EACA9Z,GAEA,IAAMic,EAAMJ,IACZ,OAAOvE,EAAYE,WAAW,CAC5BjR,SAAU,YACC,aAATvG,EAAsB,WAAa,aACnC,CAAE4Z,SAAUA,EAASziB,GAAI2iB,OAAM,IACjCtT,QAAS,WACP,gBACE,W,IAAC,sDAAY,OAAAyV,EAAII,yCAAwC,MAA5CJ,EAAgDvV,EAAhD,GACbkT,EACAE,EACA9Z,EAJF,EAMF8X,UAAWC,KAEf,CACF,CHpBkCuE,GAEhC,OAAO,SAAwC/kB,G,8GAC7C,IAAKA,EAASuiB,OACZ,MAAM,IAAI9iB,MACR,8CAAuCulB,KAAKC,UAAUjlB,KAGpC,SAAMukB,K,OAEN,OAFhBW,EAAgB,SAEA,GAAMT,EACC,aAA3BzkB,EAAS+jB,cAA+B,YAAc,a,OAKxD,OANMoB,EAAgB,UAGhBC,EAAeD,EAAcE,UAAU5B,MAC3C,SAAC6B,GAAM,OAAAA,EAAE1lB,KAAOI,EAASsiB,cAAlB,MAKHiD,EAA0BV,EAC9BO,EACAplB,EAASuiB,OACT,YAEIiD,EAA2BX,EAC/BO,EACAplB,EAASuiB,OACT,aAEgD,GAAMjT,QAAQsF,IAAI,CAClE2Q,EACAC,MAdO,CAAP,EAAOlW,QAAQC,OAAO,2B,OAgBxB,OAJM,EAA4C,SAA3CkW,EAAkB,KAAEC,EAAmB,KAIvC,CAAP,EAAOtE,EACLphB,EACAklB,EAAc7D,yBACdqE,EACAD,I,OAGN,C,s2CI7CO,SAASE,EAAS/lB,EAAwBgD,GAAjD,gBAAiD,IAAAA,IAAAA,GAAA,GACvC,IAAA+L,GAAoB,UAAqB,gBAC3CiX,EAAa,IAEb5F,GAAMsE,GADY,SAAQ,eAGhC,OAAO,EAAAvV,EAAA,GAAS,CACd4R,QAASC,QAAQhhB,GACjBoP,SAAU,sBAA8B,CAAEpP,GAAE,IAC5CqP,QAAS,gD,wDACP,OAAKrP,EAGY,GAAMogB,EAAI6F,aAAajmB,IAF/B,CAAP,EAAO0P,QAAQC,OAAO,8B,OAGxB,OADMvP,EAAW,SACV,CAAP,EAAO4lB,EAAW5lB,EAASqF,O,QAE7BsJ,gBAAe,EACf/L,SAAQ,GAEZ,C,sjDChBO,SAASkjB,EACdnmB,GADF,WAGUgP,GAAoB,UAAqB,gBAC3C,EAAoBoS,IAAlB1b,EAAI,OAAEsH,EAAO,UACfoT,GAAc,UACd6F,EAAa,IAEb5F,GAAMsE,GADY,SAAQ,eAE1ByB,EAAa1gB,aAAI,EAAJA,EAAMuD,SAASmE,KAAI,SAACmB,GAAM,OAAAA,EAAEtO,EAAF,IAE7C,OAAO,EAAAmP,EAAA,GAAS,CACdC,SAAU,UAAkB,OAAKrP,GAAM,CAAEomB,WAAU,KACnD9W,QAAS,gD,wDACK,UAAM,QAAY,KAC5B+W,UAAW,W,IAAC,sDAAY,OAAAhG,EAAIgG,UAAS,MAAbhG,EAAiB7Q,EAAjB,EACxByW,WAAU,GACPjmB,GAAM,CACTomB,WAAU,M,OAKZ,OATME,EAAM,UAMRpgB,UAAUqgB,SAAQ,SAACC,GACrB,OAAApG,EAAYqG,aAAa,sBAA8B,CAAExmB,GAAIumB,EAAEvmB,KAAOumB,EAAtE,IAEK,CAAP,EAAOF,G,QAETtF,QAASC,QAAQmF,IAAepZ,EAChCgC,gBAAe,GAEnB,C,oNC9BO,SAAS0X,EACd1mB,EAIAiD,QAAA,IAAAA,IAAAA,GAAA,GAEQ,IAAA+L,GAAoB,UAAqB,gBACzC6B,GAAW,SAAQ,OAE3B,OAAO,EAAAzB,EAAA,GAAS,CACdC,SAAU,oBAA4BrP,GACtCsP,QAAS,WACP,IAAKtP,EAAOC,GACV,OAAO0P,QAAQC,OAAO,cAExB,IAAK5P,EAAOqR,SACV,OAAO1B,QAAQC,OAAO,oBAExB,IAAMyQ,EAAMxP,EAAO7Q,EAAOqR,UAE1B,OAAO,OAAW,GAChBsV,SAAU,W,IAAC,sDAAY,OAAAtG,EAAIsG,SAAQ,MAAZtG,EAAgB7Q,EAAhB,GACpBxP,GAEP,EACAghB,QACEC,QAAQjhB,EAAOqR,WACf4P,QAAQjhB,EAAOC,KACfghB,QAAQjhB,EAAOmT,WACjBnE,gBAAe,EACf/L,SAAQ,GAEZ,C,oNCjCO,SAAS2jB,EACd5mB,EAIAiD,QAAA,IAAAA,IAAAA,GAAA,GAEQ,IAAA+L,GAAoB,UAAqB,gBACzC6B,GAAW,SAAQ,OAE3B,OAAO,EAAAzB,EAAA,GAAS,CACdC,SAAU,qBAA6BrP,GACvCsP,QAAS,WACP,IAAKtP,EAAOC,GACV,OAAO0P,QAAQC,OAAO,cAExB,IAAK5P,EAAOqR,SACV,OAAO1B,QAAQC,OAAO,oBAExB,IAAMyQ,EAAMxP,EAAO7Q,EAAOqR,UAE1B,OAAO,QAAY,GACjBwV,UAAW,W,IAAC,sDAAY,OAAAxG,EAAIwG,UAAS,MAAbxG,EAAiB7Q,EAAjB,GACrBxP,GAEP,EACAghB,QAASC,QAAQjhB,EAAOqR,WAAa4P,QAAQjhB,EAAOC,IACpD+O,gBAAe,EACf/L,SAAQ,GAEZ,C,sjDC9BO,SAAS6jB,EACd9mB,EACAiD,GAFF,gBAEE,IAAAA,IAAAA,GAAA,GAEQ,IAAA+L,GAAoB,UAAqB,gBACzCuC,GAAiB,SAAQ,aAEjC,OAAO,EAAAnC,EAAA,GAAS,CACdC,SAAU,kBAAwBrP,GAClCsP,QAAS,gD,wDACK,SAAMiC,K,OAElB,OAFM8O,EAAM,SAEL,CAAP,GAAO,QAAkB,GACvB0G,gBAAiB,W,IAAC,sDAAY,OAAA1G,EAAI2G,eAAc,MAAlB3G,EAAsB7Q,EAAtB,GAC3BxP,K,QAGPgP,gBAAe,EACf/L,SAAQ,GAEZ,C,oNCpBO,SAASgkB,EACdjnB,EAIAiD,QAAA,IAAAA,IAAAA,GAAA,GAEQ,IAAA+L,GAAoB,UAAqB,gBACzCoC,GAAS,SAAQ,KAEzB,OAAO,EAAAhC,EAAA,GAAS,CACdC,SAAU,0BAAkCrP,GAC5CsP,QAAS,WACP,IAAKtP,EAAOqR,SACV,OAAO1B,QAAQC,OAAO,oBAExB,IAAK5P,EAAOC,GACV,OAAO0P,QAAQC,OAAO,cAExB,IAAMyQ,EAAMjP,EAAKpR,EAAOqR,UAExB,OAAO,QAAiB,GACtB6V,QAAS,W,IAAC,sDAAY,OAAA7G,EAAI6G,QAAO,MAAX7G,EAAe7Q,EAAf,GACnBxP,GAEP,EACAghB,QAASC,QAAQjhB,EAAOqR,UACxBrC,gBAAe,EACf/L,SAAQ,GAEZ,C,oNC9BO,SAASkkB,EACdnnB,EACAiD,QAAA,IAAAA,IAAAA,GAAA,GAEQ,IAAA+L,GAAoB,UAAqB,gBACzC4C,GAAmB,SAAQ,eAEnC,OAAO,EAAAxC,EAAA,GAAS,CACdC,SAAU,8BAAsCrP,GAChDsP,QAAS,WACP,IAAM+Q,EAAMzO,IAEZ,OAAO,QAAqB,GAC1BwV,mBAAoB,W,IAAC,sDAAY,OAAA/G,EAAI+G,mBAAkB,MAAtB/G,EAA0B7Q,EAA1B,GAC9BxP,GAEP,EACAgP,gBAAe,EACf/L,SAAQ,GAEZ,C,g3CCtBO,SAASokB,EAAQ,GAAxB,WACE3kB,EAAO,UACPO,EAAQ,WAQR,OAAO,EAAAmM,EAAA,GAAS,CACdC,SAAU,YACVC,QAAS,gD,4DAC0B,SAAM5M,K,OAEvC,OAFM,EAA2B,SAAzBE,EAAQ,WAAEE,EAAU,kBAEX3C,IAAbyC,QAIezC,IAAf2C,EAHK,CAAP,EAAO6M,QAAQC,OAAO,qBAsBjB,CAAP,EAAO,CACLhN,SAAQ,EACRE,WAAU,EACV+E,kBAlBwB,SAAC/B,GACzB,OAAO,cAAuBA,EAChC,EAiBEmC,mBAfyB,SAACpC,GAC1B,OAAOA,IAAUjD,GAAYE,CAC/B,EAcEiF,eAZqB,SAAClC,EAAeC,GACrC,OACED,IAAUjD,GACTE,IAAe,cAA2BgD,EAE/C,I,QAUF7C,SAAQ,GAEZ,C,ICjDaqkB,EAAiB,WACpB,IAAAnI,GAAa,UAAqB,SAE1C,OAAO,EAAA/P,EAAA,GAAS,CACdC,SAAU,wBACVC,QAAS,kB,OAAA,E,OAAA,E,EAAA,W,knCACU,SAAMiY,MACrB,UAAGpI,EAAQ,uC,OAEM,SAHF,SAGiBqI,Q,OAElC,OAFM9B,EAAa,cAEDvlB,KADVsnB,EAAc/B,EAAS,YACc,KAAd+B,EACtB,CAAP,EAAO9X,QAAQC,OAAO,0BAEjB,CAAP,EAAO6X,G,iBATA,K,gRAYb,E,k2CChBO,SAASC,GAAmBzkB,GAAnC,gBAAmC,IAAAA,IAAAA,GAAA,GACzB,IAAAiM,GAAY,SAAQ,QAE5B,OAAO,EAAAE,EAAA,GAAS,CACdC,SAAU,uBACVC,QAAS,gD,iCAGP,OAFM+Q,EAAMnR,IAEL,CAAP,GAAO,SAAqB,W,IAAC,sDAC3B,OAAAmR,EAAIsH,uCAAsC,MAA1CtH,EAA8C7Q,EAA9C,I,QAGJvM,SAAQ,GAEZ,C,w2CCdO,SAAS2kB,KAAhB,WACQxH,GAAc,UACd6F,EAAa,IACXtB,GAAgB,SAAQ,YAChC,OAAO,SAAO1kB,GAAU,sC,yCAEtB,OADMogB,EAAMsE,IACL,CAAP,EAAOvE,EAAYE,WAAW,CAC5BjR,SAAU,sBAA8B,CAAEpP,GAAE,IAC5CqP,QAAS,iD,yDACU,SAAM+Q,EAAI6F,aAAajmB,I,OACxC,OADMI,EAAW,SACV,CAAP,EAAO4lB,EAAW5lB,EAASqF,O,iBAInC,C,w2CCdO,SAASmiB,KAAhB,WACUlD,GAAgB,SAAQ,YAC1BvE,GAAc,UAEpB,OAAO,SAACngB,GACN,IAAMogB,EAAMsE,IAEZ,OAAOvE,EAAYE,WAAW,CAC5BjR,SAAU,0BAAkC,CAAEpP,GAAE,IAChDqP,QAAS,iD,4BACP,MAAO,CAAP,GAAO,SACL,W,IAAC,sDAAY,OAAA+Q,EAAIyH,yBAAwB,MAA5BzH,EAAgC7Q,EAAhC,GACbvP,G,SAIR,CACF,C,2jDChBO,SAAS8nB,KAAhB,WACUpD,GAAgB,SAAQ,YAC1BvE,GAAc,UAEpB,OAAO,SAACpgB,GACN,IAAMqgB,EAAMsE,IAEZ,OAAOvE,EAAYE,WAAW,CAC5BjR,SAAU,+BAAuCrP,GACjDsP,QAAS,iD,4BACP,MAAO,CAAP,GAAO,QAAkB,IACvB0Y,uBAAwB,W,IAAC,sDACvB,OAAA3H,EAAI2H,uBAAsB,MAA1B3H,EAA8B7Q,EAA9B,GACCxP,I,SAIX,CACF,C,uNClBO,SAASioB,KACN,IAAAC,GAAY,SAAQ,QACtB9H,GAAc,UAEpB,OAAO,SACLpgB,GAKA,IAAMqgB,EAAM6H,EAAQloB,EAAOqR,UAE3B,OAAO+O,EAAYE,WAAW,CAC5BjR,SAAU,4BAAoCrP,GAC9CsP,QAAS,WACP,OAAKtP,EAAOC,GAGPD,EAAOqR,UAIL,QAAc,IACnB8W,eAAgB,W,IAAC,sDAAY,OAAA9H,EAAI8H,eAAc,MAAlB9H,EAAsB7Q,EAAtB,GAC1BxP,IALI2P,QAAQC,OAAO,oBAHfD,QAAQC,OAAO,aAU1B,GAEJ,CACF,C,+5FC7BO,SAASwY,KAAhB,WACUvX,GAAW,SAAQ,OACrBuP,GAAc,UAEpB,OAAO,SACLpgB,GAKA,IAAMqgB,EAAMxP,EAAO7Q,EAAOqR,UAE1B,OAAO+O,EAAYE,WAAW,CAC5BjR,SAAU,qBAA6BrP,GACvCsP,QAAS,iD,4BACP,MAAO,CAAP,GAAO,QAAY,IACjBuX,UAAW,W,IAAC,sDAAY,OAAAxG,EAAIwG,UAAS,MAAbxG,EAAiB7Q,EAAjB,GACrBxP,I,SAIX,CACF,C,2jDCtBO,SAASqoB,KAAhB,WACU1D,GAAgB,SAAQ,YAC1BvE,GAAc,UAEpB,OAAO,SAACpgB,GACN,IAAMqgB,EAAMsE,IAEZ,OAAOvE,EAAYE,WAAW,CAC5BjR,SAAU,4BAAoCrP,GAC9CsP,QAAS,iD,4BACP,MAAO,CAAP,GAAO,QAAmB,IACxB0Y,uBAAwB,W,IAAC,sDACvB,OAAA3H,EAAI2H,uBAAsB,MAA1B3H,EAA8B7Q,EAA9B,GACCxP,I,SAIX,CACF,C,o3CCdO,SAASsoB,KACN,IAAA3D,GAAgB,SAAQ,YAC1BvE,GAAc,UAEpB,OAAO,SACL,SAAmC9E,G,kHAKzBjb,EAAiCib,EAAK,SAA5BzR,EAAuByR,EAAK,UAAjBxR,EAAYwR,EAAK,QACxC+E,EAAMsE,KACN4D,EAAoC,CACxC5iB,KAAMtF,EAASsF,KACf6d,WAAYnjB,EAASgJ,QAAQpJ,KAElB6I,KAAO,YAAczI,EAASmoB,OAC3CD,EAAanE,cAAgB,a,iBAE3B,O,sBAAA,GAAM/D,EAAIoI,aAAY,EAAMF,I,cAA5B,SACA1e,I,aAEA,G,YAAI,IAAA6e,mBAAkB,GAGpB,SAFgC,QAAf,eAAK,EAAL,EAAOC,gBAAQ,eAAEjjB,OAAQ,CAAC,GAAC,MAG1C,KAAK,GAAWkjB,wBACd9e,EAAQ,cACR,MAEF,KAAK,GAAW+e,wBACd/e,EAAQ,uBACR,MAEF,KAAK,GAAWgf,mBACdhf,EAAQ,sBACR,MAEF,QACEkV,QAAQ/R,MACN,kCACA,4BACA,GAEFnD,EAAQ,W,sCAKlB,CACED,UAAW,WACJuW,EAAY2I,kBAAkB,CAAC,eAC/B3I,EAAY2I,kBAAkB,CAAC,qBAC/B3I,EAAY2I,kBAAkB,CAAC,cACtC,GAGN,CAEA,IAAM,GAAa,CAEjBC,kBAAmB,EAAAtE,cAAA,QAEnBkE,wBAAyB,EAAAlE,cAAA,SAEzBmE,wBAAyB,EAAAnE,cAAA,SAEzBoE,mBAAoB,EAAApE,cAAA,UAEpBuE,WAAY,EAAAvE,cAAA,QAEZwE,sBAAuB,EAAAxE,cAAA,UAEvByE,qBAAsB,EAAAzE,cAAA,UCkBH,EAAAA,cAAA,QAEM,EAAAA,cAAA,SAEA,EAAAA,cAAA,SAEL,EAAAA,cAAA,UAER,EAAAA,cAAA,QAEW,EAAAA,cAAA,UAED,EAAAA,cAAA,SAdxB,I,o2CC9FO,SAAS0E,KACN,IAAAzE,GAAgB,SAAQ,YAC1BvE,GAAc,UAEpB,OAAO,SACL,SAAmC9E,G,oHAKzBrb,EAA2Bqb,EAAK,GAA5BzR,EAAuByR,EAAK,UAAjBxR,EAAYwR,EAAK,QAClC+E,EAAMsE,I,iBAEV,O,sBAAA,GAAMtE,EAAIgJ,gBAAgBppB,GAAI,I,cAA9B,SACA4J,I,gCAEI,IAAA6e,mBAAkB,KACdvd,EAAU,aAAK,EAAL,EAAOA,QACfme,IAAwB,QAAf,eAAK,EAAL,EAAOX,gBAAQ,eAAEjjB,OAAQ,CAAC,GAAC,KAE5CoE,EAAQwf,GAAQ,IAAKne,I,gCAI3B,CACEtB,UAAW,WACJuW,EAAY2I,kBAAkB,CAAC,eAC/B3I,EAAY2I,kBAAkB,CAAC,oBACtC,GAGN,C,w2CC/BO,SAASQ,KACN,IAAA1Y,GAAW,SAAQ,OACrBuP,GAAc,UAEpB,OAAO,SACL,SAAmC,G,MACjC/O,EAAQ,WACR1L,EAAI,OACJkE,EAAS,YACTC,EAAO,U,wGAQDuW,EAAMxP,EAAOQ,G,iBAEjB,O,sBAAA,GAAMgP,EAAImJ,YAAY7jB,I,cAAtB,SACAkE,I,gCAEI,IAAA6e,mBAAkB,KACdvd,EAAU,aAAK,EAAL,EAAOA,QACfme,IAAwB,QAAf,eAAK,EAAL,EAAOX,gBAAQ,eAAEjjB,OAAQ,CAAC,GAAC,KAE5CoE,EAAQwf,GAAQ,IAAKne,I,gCAI3B,CACEtB,UAAW,SAAC8I,EAAG,G,IAAEtB,EAAQ,WAAExS,EAAU,aAC9BuhB,EAAY2I,kBAAkB,CACjC,oBAA4B,CAC1B9oB,GAAIpB,EACJwS,SAAQ,KAGd,GAGN,C,o3CCjCO,SAASoY,KACN,IAAA9E,GAAgB,SAAQ,YAC1BvE,GAAc,UAEpB,OAAO,SAML,SAAmC,G,QAAEngB,EAAE,KAAE4M,EAAO,U,oGACxCwT,EAAMsE,I,iBAEH,O,sBAAA,GAAMtE,EAAIqJ,gBAAgBzpB,EAAI4M,I,OAArC,MAAO,CAAP,EAAO,U,OAEP,O,YAAI,IAAA6b,mBAAkB,GAIb,oBAHM,IAAAiB,cAAa,GAIf,CAAP,EAAOha,QAAQC,OAAO,CACpB1C,KAAM,eACN/B,QAAuB,QAAd,IAAMwd,gBAAQ,eAAEjjB,KAAKkkB,UAIzB,CAAP,EAAOja,QAAQC,OAAO,CACpB1C,KAAM,QACN/B,QAAuB,QAAd,IAAMwd,gBAAQ,eAAEjjB,KAAKkkB,UAI3B,aAAiB,GAAAC,WACnB,CAAP,EAAOla,QAAQC,OAAO,CAAE1C,KAAM,UAAW/B,QAAS,EAAMA,WAEjD,CAAP,EAAOwE,QAAQC,OAAO,CAAE1C,KAAM,UAAW/B,QAAS,a,0BAIxD,CACEtB,UAAW,WACJuW,EAAY2I,kBAAkB,CAAC,cACtC,GAGN,C,w2CCrDO,SAASe,KACN,IAAAxN,GAAmB,SAAQ,eAC7B8D,GAAc,UAEpB,OAAO,SACL,SAAmC9E,G,sHAQ/BA,EAAK,WADajK,EAClBiK,EAAK,SADuB5B,EAC5B4B,EAAK,gBADwCzR,EAC7CyR,EAAK,UADmDxR,EACxDwR,EAAK,QACD+E,EAAM/D,EAAejL,G,iBAEzB,O,sBAAA,GAAMgP,EAAI0J,wBAAwBrQ,I,cAAlC,SACA7P,I,gCAEI,IAAA6e,mBAAkB,KACdvd,EAAU,aAAK,EAAL,EAAOA,QACfme,IAAwB,QAAf,eAAK,EAAL,EAAOX,gBAAQ,eAAEjjB,OAAQ,CAAC,GAAC,KAE5CoE,EAAQwf,GAAQ,IAAKne,I,gCAI3B,CACEtB,UAAW,SAAC8I,EAAG,G,IAAEtB,EAAQ,WAAExS,EAAU,aAC9BuhB,EAAY2I,kBAAkB,CACjC,oBAA4B,CAC1B9oB,GAAIpB,EACJwS,SAAQ,KAGd,GAGN,C,w2CCrCO,SAAS2Y,KACN,IAAA1N,GAAmB,SAAQ,eAC7B8D,GAAc,UAEpB,OAAO,SACL,SAAwC9E,G,8HAqBlCA,EAAK,WARPjK,EAQEiK,EAAK,SAPP5B,EAOE4B,EAAK,gBANPtB,EAMEsB,EAAK,OALP3E,EAKE2E,EAAK,MAJP9D,EAIE8D,EAAK,WAHPja,EAGEia,EAAK,MAFPzR,EAEEyR,EAAK,UADPxR,EACEwR,EAAK,QACH+E,EAAM/D,EAAejL,G,iBAEzB,O,sBAAA,GAAMgP,EAAI4J,yBAAyBvQ,EAAiB,CAClDrY,MAAK,EACL2Y,OAAM,EACNnJ,OAAQ,CAAC,CAAE8F,MAAK,EAAEa,WAAU,O,cAH9B,SAKA3N,I,gCAEI,IAAA6e,mBAAkB,KACdvd,EAAU,aAAK,EAAL,EAAOA,QACfme,IAAwB,QAAf,eAAK,EAAL,EAAOX,gBAAQ,eAAEjjB,OAAQ,CAAC,GAAC,KAE5CoE,EAAQwf,GAAQ,IAAKne,I,gCAI3B,CACEtB,UAAW,SAAC8I,EAAG,G,IAAEtB,EAAQ,WAAExS,EAAU,aAC9BuhB,EAAY2I,kBAAkB,CACjC,oBAA4B,CAC1B9oB,GAAIpB,EACJwS,SAAQ,KAGd,GAGN,C,w2CCvDO,SAAS6Y,KACN,IAAA9Y,GAAS,SAAQ,KACnBgP,GAAc,UAEpB,OAAO,SACL,SAAiC9E,G,wHAOvBjK,EAAsCiK,EAAK,SAAjCpJ,EAA4BoJ,EAAK,IAA5BzR,EAAuByR,EAAK,UAAjBxR,EAAYwR,EAAK,QAC7C+E,EAAMjP,EAAKC,G,iBAEf,O,sBAAA,GAAMgP,EAAI8J,WACRjY,EAAIQ,aACJR,EAAIM,aACJN,EAAIC,YACJD,EAAIK,UACJL,EAAIO,UACJP,EAAIG,iB,cANN,SAQAxI,I,gCAEI,IAAA6e,mBAAkB,KACdvd,GAAyB,QAAf,eAAK,EAAL,EAAOwd,gBAAQ,eAAEjjB,KAAKkkB,SAAU,GACxCN,IAAwB,QAAf,eAAK,EAAL,EAAOX,gBAAQ,eAAEjjB,OAAQ,CAAC,GAAC,KAE5CoE,EAAQwf,GAAQ,IAAKne,I,gCAI3B,CACEtB,UAAW,SAAC8I,EAAG,G,IAAEtB,EAAQ,WAAExS,EAAU,aAC9BuhB,EAAY2I,kBAAkB,CACjC,0BAAkC,CAChC9oB,GAAIpB,EACJwS,SAAQ,KAGd,GAGN,C,w2CC5CO,SAAS+Y,KACN,IAAAhZ,GAAS,SAAQ,KACnBgP,GAAc,UAEpB,OAAO,SACL,SAA4C9E,G,sHAOlCjK,EAAsCiK,EAAK,SAAjCpJ,EAA4BoJ,EAAK,IAA5BzR,EAAuByR,EAAK,UAAjBxR,EAAYwR,EAAK,QAC7C+E,EAAMjP,EAAKC,G,iBAEf,O,sBAAA,GAAMgP,EAAIgK,UAAU,CAClB7X,aAAcN,EAAIM,aAClBE,aAAcR,EAAIQ,aAClBP,YAAaD,EAAIC,YACjBG,WAAYJ,EAAII,WAChBC,UAAWL,EAAIK,UACfE,UAAWP,EAAIO,a,cANjB,SAQA5I,I,gCAEI,IAAA6e,mBAAkB,KACdvd,EAAU,aAAK,EAAL,EAAOA,QACfme,IAAwB,QAAf,eAAK,EAAL,EAAOX,gBAAQ,eAAEjjB,OAAQ,CAAC,GAAC,KAE5CoE,EAAQwf,GAAQ,IAAKne,I,gCAI3B,CACEtB,UAAW,SAAC8I,EAAG,G,IAAEtB,EAAQ,WAAExS,EAAU,aAC9BuhB,EAAY2I,kBAAkB,CACjC,oBAA4B,CAC1B9oB,GAAIpB,EACJwS,SAAQ,KAGd,GAGN,C,o3CCtCO,SAASiZ,KACN,IAAAzZ,GAAW,SAAQ,OACrBuP,GAAc,UAEpB,OAAO,SACL,SAA2B9E,G,0HAOjBjK,EAAwCiK,EAAK,SAAnC3E,EAA8B2E,EAAK,MAA5BzR,EAAuByR,EAAK,UAAjBxR,EAAYwR,EAAK,QAC/C+E,EAAMxP,EAAOQ,GAEbkM,EAAc,SAAC5G,GAGnB,MAAO,CACLhR,KAHegR,EAAK,KAIpB3F,UAHoB,SAAuB2F,GAK/C,E,iBAGE,O,sBAAA,GAAM0J,EAAI9C,YAAYA,EAAY5G,K,cAAlC,SACA9M,I,gCAEI,IAAA6e,mBAAkB,KACdvd,EAAyB,QAAf,eAAK,EAAL,EAAOwd,gBAAQ,eAAEjjB,KAAKkkB,OAC9BN,IAAwB,QAAf,eAAK,EAAL,EAAOX,gBAAQ,eAAEjjB,OAAQ,CAAC,GAAC,KAE5CoE,EAAQwf,GAAQ,IAAKne,GAAW,M,gCAItC,CACEtB,UAAW,SAAC8I,EAAG,G,IAAEtB,EAAQ,WAAExS,EAAU,aAC9BuhB,EAAY2I,kBAAkB,CACjC,oBAA4B,CAC1B9oB,GAAIpB,EACJwS,SAAQ,KAGd,GAGN,C,w2CChDO,SAASkZ,KACN,IAAA1Z,GAAW,SAAQ,OACrBuP,GAAc,UAEpB,OAAO,SACL,SAAmC,G,QACjC/O,EAAQ,WACRsF,EAAK,QACL9M,EAAS,YACTC,EAAO,U,0GAQDuW,EAAMxP,EAAOQ,GAEb4K,EAAc,SAACtF,GAEnB,OADsB,SAAuBA,EAE/C,E,iBAGE,O,sBAAA,GAAM0J,EAAIpE,YAAYtF,EAAMhR,MAAQ,GAAIsW,EAAYtF,K,cAApD,SACA9M,I,gCAEI,IAAA6e,mBAAkB,KACdvd,EAAyB,QAAf,eAAK,EAAL,EAAOwd,gBAAQ,eAAEjjB,KAAKkkB,OAC9BN,IAAwB,QAAf,eAAK,EAAL,EAAOX,gBAAQ,eAAEjjB,OAAQ,CAAC,GAAC,KAE5CoE,EAAQwf,GAAQ,IAAKne,GAAW,M,gCAItC,CACEtB,UAAW,SAAC8I,EAAG,G,IAAEtB,EAAQ,WAAExS,EAAU,aAC9BuhB,EAAY2I,kBAAkB,CACjC,oBAA4B,CAC1B9oB,GAAIpB,EACJwS,SAAQ,KAGd,GAGN,C,mNCxCamZ,GAAgC,CAC3C,OACA,QACA,YACA,WACA,UAMWC,GAA6B,MACrCC,OAAO5O,OAAO,GAAA6O,gBAAc,GAMpBC,GAAoC,MAC5CF,OAAO5O,OAAO,GAAA+O,wBAAsB,E,6UC/BnCC,GAA+B,IAAAC,OAAK,WACxC,uCAAiEC,MAC/D,SAACC,GAAM,OACLC,QAASD,EAAEE,mBADN,GADT,IAcIC,GAAa,IAAA7rB,eAA+B,MAE5C6gB,EAAc,IAAI,IAEXiL,EAAkD,SAAC,GAC9D,IAAA5rB,EAAQ,WACLkC,E,yUAAO,GAFoD,cAIxD2pB,GAAe,UACrB,OACE,SAAC,KAAmB,GAACC,OAAQnL,GAAW,WACtC,UAACgL,EAAW7pB,SAAQ,GAACF,MAAOM,GAAO,WAChClC,EACA6rB,IACC,SAAC,EAAA3d,SAAQ,GAACC,SAAU,MAAI,WACtB,SAACkd,EAA4B,aAMzC,EAEO,SAASU,IACd,OAAO,IAAA5pB,YAAWwpB,EACpB,C,kBCrCO,SAASK,EAAyB5V,G,UACjCgE,EAAQ6R,EAAa7V,EAAEgE,OAC7B,MAAO,CACLlU,KAAMkQ,EAAEI,QACR4D,MAAOA,EACPxD,UAAWR,EAAEQ,UAAUjJ,KAAc,SAAC0D,GAAa,OACjDmF,QAASnF,EAASmF,QAClBU,MAAO7F,EAAS6F,MAChBgV,IAAK7a,EAAS6a,IACdC,SAAU9a,EAAS8a,SACnB/N,UAAW/M,EAAS+M,UACpB7D,OAAQlJ,EAASkJ,OACjB6R,aAAc/a,EAAS+a,aAP0B,IASnDnR,gBAA0B,QAAT,EAAA7E,EAAEX,eAAO,eAAEwF,gBAC5BE,kBAA4B,QAAT,EAAA/E,EAAEX,eAAO,eAAE0F,kBAC9BkR,qBAA+B,QAAT,EAAAjW,EAAEX,eAAO,eAAE4W,qBAErC,C,mMAEO,IAAMJ,EAET,CACFK,KAAM,OACNC,MAAO,QACPC,OAAQ,SACRC,QAAS,UACTC,qBAAsB,sBACtBC,oBAAqB,sB,k2CC5BhB,SAAeC,EAAmB,G,IACvCtL,EAAoB,uBACpBrH,EAAe,kB,qBACa/J,SAAO,W,kDAClB,SAAMoR,EAAqBrH,I,OAC5C,MAAO,CAAP,EAAO+R,EADU,SACwB/lB,O,62CCKpC,SAAe4mB,EAAoB,G,IACxCnL,EAAiB,oBACjBpd,EAAI,OACJC,EAAO,UACP2S,EAAK,QACLV,EAAO,UACPtR,EAAI,OACJoB,EAAS,Y,qBACoB4J,SAAO,W,0DAInB,SAAMwR,OACrBhhB,OACAA,EACA6D,EACAD,EACA4S,EACAV,EACAlQ,EACApB,I,OAYF,OApBMgkB,EAAW,SAUX1W,GAAU0W,EAASjjB,KAAK6mB,OAAS,IAAInf,KAAmB,SAACyI,G,UAAM,OACnElQ,KAAMkQ,EAAEI,SAAW,GACnB4D,MAAO6R,EAAa7V,EAAEgE,OACtBxD,UAAWR,EAAEQ,UACbqE,gBAA0B,QAAT,EAAA7E,EAAEX,eAAO,eAAEwF,gBAC5BE,kBAA4B,QAAT,EAAA/E,EAAEX,eAAO,eAAE0F,kBAC9BkR,qBAA+B,QAAT,EAAAjW,EAAEX,eAAO,eAAE4W,qB,IAI5B,CAAP,EAAO,CAAE1lB,MAFKuiB,EAASjjB,KAAK8mB,MAEZva,OAAM,I,OChDjB,SAASwa,EACdle,GAEA,QAAqBpO,IAAjBoO,EAAEiV,iBAAyCrjB,IAAboO,EAAEzI,OAClC,MAAM,IAAIhG,MAAM,kCAElB,MAAO,CACLG,GAAIsO,EAAEiV,WACN1d,OACe,UAAbyI,EAAEzI,OACE,QACa,WAAbyI,EAAEzI,OACF,SACA,eACN4mB,uBAAwBne,EAAEoe,kCAC1BlP,GAAIlP,EAAEqV,SAAW,QAAU,SAE3BgJ,cAAere,EAAEoU,eAEjBkK,YAAate,EAAEqU,OAEnB,C,2yDChBO,SAAekK,EAAuB,G,IAC3CrM,EAAwB,2B,qBACQ9Q,SAAO,W,wDAItB,SAAM8Q,K,OACvB,GAAwB,OADlBkI,EAAW,UACJ7iB,OACX,MAAM,IAAIinB,EAEZ,MAAO,CAAP,EAAO,CACL9jB,UAAW0f,EAASjjB,KAAK6mB,OAAS,IAAInf,IAAIqf,GAC1CrmB,MAAOuiB,EAASjjB,KAAK8mB,Q,OAIzB,+B,8CAAwD,QAAP,OAAO,EAAxD,CAAiD1sB,OCnBpC0S,EAAe,SAErB,SAASwa,EAAgBC,G,MAC9B,OAA0B,QAAnB,EAAAA,EAAEC,yBAAiB,eAAEpJ,MAAK,SAACqJ,GAAM,MAAoB,aAApBA,EAAE/I,aAAF,GAC1C,CAEO,SAASgJ,EAAmBH,G,MACjC,OAA0B,QAAnB,EAAAA,EAAEC,yBAAiB,eAAEpJ,MAAK,SAACqJ,GAAM,MAAoB,gBAApBA,EAAE/I,aAAF,GAC1C,C,ICCaiJ,EAAsB,SACjChN,EACAiN,GAAsB,O,OAAA,E,OAAA,E,EAAA,W,0nCAEA,SAAMjN,EAC1BiN,OACAntB,GACA,OACAA,GACA,I,OAEF,GAA6B,OAPvBotB,EAAgB,UAOJznB,OAChB,MAAM,IAAIhG,MAAMytB,EAAcC,YAehC,OAbMC,EAA0C,QAAxB,EAAAF,EAAc7nB,KAAK6mB,aAAK,eAAEje,QAAO,SAAC2e,G,MACxD,OAAmB,QAAnB,EAAAA,EAAEC,yBAAiB,eAAEpJ,MACnB,SAACqJ,GAAM,OAAAA,EAAEO,gBAAkBlb,GD1BN,aC0BsB2a,EAAEQ,OAAtC,G,IAILC,EAAiBH,aAAe,EAAfA,EAAiB3J,KAAKkJ,GACvCa,OAAuC1tB,IAAnBytB,EAEpBjlB,EAA0BilB,EAC5BA,EAAeE,QAAUF,EAAeG,cACxC5tB,EAEG,CAAP,EAAO,CACL0tB,kBAAiB,EACjBllB,wBAAuB,I,iBA3BH,K,+QCbjB,SAASqlB,EACdC,EACAC,GAEA,IAAMjK,EAAIiK,EACV,MAAO,CACLjuB,GAAIgkB,EAAEhkB,GACNqN,YAAa2W,EAAEkK,aACfvlB,MAAOqb,EAAEmK,eACT9L,SAAU2B,EAAEoK,2BAA2BhZ,OAAS,GAAK,QACrD8M,QAAS8B,EAAEqK,0BAA0BjZ,OAAS,GAAK,QACnDgO,QAASkL,KAAKC,OAAOvK,EAAE7O,wBAAwBC,OAAS,GAAK,YAC7DE,YAAa0O,EAAEwK,sBACfhZ,eAAgBwO,EAAEyK,gCAClB9Z,cAAeqP,EAAE0K,eACjBpM,aAAc0B,EAAE2K,iBAAiBvZ,OAAS,GAAK,QAC/CvP,OAA8B,WAAtBme,EAAE4K,gBAA+B,SAAW,UACpDC,mBAAoB7K,EAAE8K,iBAAmB9K,EAAE8K,iBAAmB,GAAK,GAAK,EACxEd,WAAYA,EAAWhK,EAAEhkB,IAE7B,C,s2CCXO,SAAe+uB,EAA2B,G,IAC/CzO,EAAwB,2BACxBjX,EAAS,Y,qBAC2BqG,SAAO,W,0DAC1B,SAAM4Q,EAAyBjX,I,OAQhD,OARMqf,EAAW,SACXjjB,EAAOijB,EAASjjB,KAOf,CAAP,EAL+BA,EAAKupB,yBAAyBC,eAG1DC,SAAQ,SAAC3I,GAAuC,OAAAA,EAAE4I,KAAF,IAChDhiB,KAAI,SAAC6W,GAA0B,OAAA+J,GAAuB,WAAM,WAAO/J,EAApC,K,62CCpB7B,SAAeoL,EACpBvH,EACA7nB,G,oGAMiB,OAJb4Q,EAAS,EACXye,EAAkB,EAClBhT,EAAiB,EAEF,GAAMwL,EAAyB7nB,EAAI,CAClD,yCACA,2CACA,qD,OAqBF,OAxBiB,SAM+CyF,KAAK6mB,OACnE,IAEUhG,SAAQ,SAAC,G,IAAEgJ,EAAM,SAAEluB,EAAK,QAGlC,OAF2BkuB,EAAM,UAG/B,IAAK,yCACHD,EAAkBjuB,EAClB,MACF,IAAK,2CACHwP,EAASxP,EACT,MACF,IAAK,kDACHib,EAAiBjb,EAGvB,IACO,CAAP,EAAO,CACLib,eAAc,EACdgT,gBAAe,EACfze,OAAM,I,62CCrBH,SAAe2e,EAAkB,G,IACtCxH,EAAsB,yBACtB/nB,EAAE,KACF8U,EAAQ,WACRD,EAAQ,WACRE,EAAc,iB,qBACYrF,SAAO,W,oEAChB,SAAMqY,EAAuB/nB,EAAI8U,EAAUD,EAAU,CACpE,kCACA,2CACA,4CACA,kFACA,6E,OAuFF,OA5FM6T,EAAW,SAWX8G,GAAiC9G,EAASjjB,KAAK6mB,OAAS,IAAIje,QAChE,SAACohB,GAEC,QACEA,EAAE5T,QACF4T,EAAEH,QACFG,EAAEH,OAAO5Y,OACT+Y,EAAEH,OAAO5pB,MACT+pB,EAAEH,OAAOI,WACTD,EAAEH,OAAOK,cACTF,EAAEH,OAAOM,uBACTH,EAAEH,OAAOM,sBAAsB3vB,SAAS,aAR1C,IAYE4vB,EAAU5V,MAAMC,KACpB,IAAIC,IAAIqV,EAAYriB,KAAI,SAACsiB,GAAM,OAAAA,EAAEH,OAAOI,SAAT,MAG3BI,EAA0C,CAAC,EAC3CC,EAAkD,CAAC,EACnDC,EAA8C,CAAC,EAC/CC,EAAiD,CAAC,EAMxDT,EAAYlJ,SAAQ,SAACmJ,GACb,IA2BES,EAGAtS,EA9BF,EAAqD6R,EAAEH,OAA3C5pB,EAAI,WAAEgR,EAAK,QAAEiZ,EAAY,eAAED,EAAS,YAEtD,SAASS,EAAsBb,GAC7BG,EAAE5T,OAAOyK,SACP,SAAC,G,IAAEllB,EAAK,QAAEgvB,EAAS,YACjB,OAACd,EAAOc,GAAahvB,GAASkuB,EAAOc,IAAc,EAAnD,GAEN,CA6BA,OAAQ1qB,GACN,IAAK,kCACL,IAAK,4CA7BP,WACE,GAAa,oCAATA,EAA4C,CAC9C,IAAM,EAASoqB,EAA4B,OAAK,CAAC,EACjDL,EAAE5T,OAAOyK,SAAQ,SAAC,G,IAAEllB,EAAK,QAAEgvB,EAAS,YAClC,EAAOA,GAAahvB,GAAS,EAAOgvB,IAAc,EACpD,IACAN,EAA4B,MAAI,C,KAC3B,CACL,IAAM,EAASA,EAAqBJ,IAAc,CAAC,EACnDD,EAAE5T,OAAOyK,SACP,SAAC,G,IAAE8J,EAAS,YAAEhvB,EAAK,QACjB,OAAC,EAAOgvB,GAAahvB,EAAQ,EAAOgvB,IAAc,CAAlD,IAEJN,EAAqBJ,GAAa,C,CAEtC,CAeIW,GACA,MACF,IAAK,4CAdCH,EAAenb,EACjB2B,EAAQ,MAAQiZ,EAChBD,EAAY,MAAQhZ,EAAQ,MAAQiZ,EAClC/R,EAAYqS,EAAyBP,IAAc,CAAC,EAC1DD,EAAE5T,OAAOyK,SAAQ,SAAC,G,IAAEllB,EAAK,QAAEgvB,EAAS,YAClCxS,EAAUwS,GAAahvB,GAASwc,EAAUwS,IAAc,EAC1D,IACAH,EAAyBC,GAAgBtS,EASvC,MACF,IAAK,kFACHuS,EAAsBJ,GACtB,MACF,IAAK,0EACHI,EAAsBH,GAG5B,IACO,CAAP,EAAO,CACLH,QAAO,EACPC,qBAAoB,EACpBG,yBAAwB,EACxBD,yBAAwB,EACxBD,6BAA4B,EAC5B7a,eA7DiB,EA8DjBK,oBAhE0B,EAiE1BF,iBAhEmB,I,qBC5DhB,SAASib,EACdC,EACA1U,EACA2U,EACAC,GAEA,OAAO5U,EACJ1O,KAAI,SAACujB,GACJ,MAAe,MAAfF,EACI,UAAGD,EAAK,kBAAUG,EAAEC,OAAM,KAC1B,UAAGJ,EAAK,YAAIC,EAAU,YAAIE,EAAEC,OAFhC,IAIDF,KAAK,WAAIA,EAAI,KAClB,C,s2CCNMG,EAEF,CACFlrB,KAAM,OACNE,MAAO,QACP6c,SAAU,iBACVE,OAAQ,SACRb,UAAW,cAgBN,SAAe+O,EAAY9wB,G,qBAA4B2P,SAAO,W,oFAmBnE,OAdEhK,EAWE3F,EAAM,KAVR8F,EAUE9F,EAAM,OATR6F,EASE7F,EAAM,MARR2E,EAQE3E,EAAM,KAPR+F,EAOE/F,EAAM,UANR+D,EAME/D,EAAM,KALRgE,EAKEhE,EAAM,QAJRomB,EAIEpmB,EAAM,WAHRgG,EAGEhG,EAAM,WAFRimB,EAEEjmB,EAAM,WADRqmB,EACErmB,EAAM,UACJ+wB,EAuBD,SACLprB,EACAE,EACAC,EACAmD,EACAjD,GAwBA,MAtBoB,CAClBuqB,EAAc,OAAQ5qB,EAAM,IAAK,MACjC4qB,EAAc,QAAS1qB,EAAO,IAAK,MACnC0qB,EACE,SACAzqB,EAAOqpB,SAAQ,SAAClL,GAAM,YAAmBA,EAAnB,IACtB,IACA,MAEFhb,EACIsnB,EACE,aACAtnB,EACe,aAAfjD,EAA4B,KAAO,IACpB,aAAfA,EAA4B,MAAQ,MAEtC,MAEHsI,OAAO2S,SAEP7T,KAAI,SAAC6f,GAAM,iBAAIA,EAAE,IAAN,IACXyD,KAAK,QAEV,CArDiBM,CAAgBrrB,EAAME,EAAOC,EAAQsgB,EAAYpgB,GAG/C,aAAfA,QACgB7F,IAAfimB,GAAmD,KAAvBA,aAAU,EAAVA,EAAYjd,QAI/B,GAAMkd,EAChBtiB,EAAKktB,SAAS,IACdjtB,EAAQitB,SAAS,IACjBtsB,EAAO,UAAGksB,EAAgBlsB,GAAK,YAAIoB,QAAc5F,EACjD4wB,IANO,CAAP,EAAOphB,QAAQuhB,QAAQ,CAAEhrB,UAAW,GAAIE,MAAO,K,OAU/B,OARZkgB,EAAM,SAMN6K,EAAe7K,EAAI5gB,KAAK6mB,MACxBnmB,EAAQkgB,EAAI5gB,KAAK8mB,MACL,GAAM7c,QAAQsF,IAAIkc,EAAa/jB,IAAI6Y,K,OACrD,MAAO,CAAP,EAAO,CACL/f,UAFgB,SAGhBE,MAAK,I,62CCrDF,SAAegrB,EAAc,G,IAClCje,EAAS,YACTgV,EAAc,iBACdtK,EAAS,YACT7D,EAAM,SACNqW,EAAS,YACTgB,EAAK,Q,qBACkB1hB,SAAO,W,kDACb,SAAMwY,EACrBhV,OACAhT,EACAkxB,OACAlxB,EACA6Z,EACA6D,EACAwS,I,OAEF,MAAO,CAAP,EATiB,SASD3qB,KAAK6mB,MAAMnf,KAAI,SAACsiB,GAAc,OAC5C7R,UAAW6R,EAAE7R,UACb7D,OAAQ0V,EAAE1V,OACVqW,UAAWX,EAAEW,UACbtuB,IAAK2tB,EAAE3tB,IACPV,MAAOquB,EAAEruB,MACTiwB,QAAS5B,EAAE4B,SAAW,CAAC,EANqB,K,62CC5BzC,SAAeC,EACpBlR,G,wGAEgB,SAAMA,K,OAEtB,OAFMnR,EAAU,SAET,CAAP,EADyC,QAA3B,EAAa,QAAb,EAAAA,aAAO,EAAPA,EAASxJ,YAAI,eAAE+J,oBAAY,eAAExP,I,62CCCtC,SAAeuxB,EACpBnR,EACAoF,EACA7C,EACA6O,G,gHAQc,OANRC,EAAUjM,EAAaiM,QACvBC,EAAaD,EAAQ5N,MAAK,SAACqJ,GAAM,OAAAA,EAAEltB,KAAO2iB,CAAT,IACjCgP,GACJD,aAAU,EAAVA,EAAYE,SAAS1C,SAAQ,SAAC5gB,GAC5B,OAAAA,EAAEujB,gBAAgB1kB,KAAI,SAAC6W,GAAM,gBAAG1V,EAAEkU,cAAa,YAAIwB,EAAtB,GAA7B,MACG,GACO,GAAM5D,EAAIoF,EAAaxlB,GAAI2iB,I,OACzC,GADMwM,EAAQ,WACE,QAAX,EAAAA,aAAK,EAALA,EAAO1pB,YAAI,eAAEwpB,gBAChB,MAAM,IAAIpvB,MAAM,kCAMlB,MAAO,CAAP,IAFgE,QAA9D,EAAW,QAAX,EAAAsvB,aAAK,EAALA,EAAO1pB,YAAI,eAAEwpB,eAAepL,MAAK,SAAC0C,GAAM,OAAAA,EAAEvmB,KAAOwxB,CAAT,WAAsB,eAAErC,QAAS,IAEtDhiB,IACnB4gB,EAAuB+D,UACrB5xB,GACA,SAACF,GAAO,OAAC2xB,EAAe1xB,SAAS,UAAGuxB,EAAY,YAAIxxB,GAA5C,M,62CCnBP,SAAe+xB,EACpBhN,EACAC,EACAnc,G,mHAEY,SAAMkc,K,OAIhB,OAJIsB,EAAM,SACN2L,GAAwB,QAAT,EAAA3L,aAAG,EAAHA,EAAK5gB,YAAI,eAAE6mB,QAAS,GAGvC,GAAM5c,QAAQsF,IACZgd,EACG3jB,QAAO,SAACqX,GAAM,OAAAA,EAAE3E,OAAF,IACd5T,KAAI,SAAOsV,GAAQ,qC,0DACF,SAAMwP,EACpBjN,EAEAvC,EAASziB,GACT6I,I,OAQF,OAZM4oB,EAAU,SAMVjM,EAAqD,CACzDxlB,GAAIyiB,EAASziB,GAEbqN,YAAaoV,EAASyL,aACtBuD,QAAO,GAEF,CAAP,EAAOA,EAAQvoB,OAAS,EAAIsc,EAAe,M,mBAInD,GAAyB,KArBnBC,EACJ,SAmBApX,QAAO,SAACqX,GAAM,OAAA1E,QAAQ0E,EAAR,KACFxc,OACZ,MAAM,IAAIrJ,MAAM,0CAGlB,OADMqyB,EAAgBzM,EAAU,GACzB,CAAP,EAAO,CAAEA,UAAS,EAAE0M,gBAAiBD,aAAa,EAAbA,EAAelyB,K,OAG/C,SAAeiyB,EACpBjN,EACAvC,EACA+O,G,sGAEY,SAAMxM,EAAwBvC,I,OAE1C,OAFM4D,EAAM,UAEE,QAAT,EAAAA,aAAG,EAAHA,EAAK5gB,YAAI,eAAE6mB,OAUT,CAAP,EAN2BjG,EAAI5gB,KAAK6mB,MAAMje,QACxC,SAACsU,GACC,OAAAA,EAAO5B,SACP4B,EAAOiP,SAASQ,MAAK,SAAC9jB,GAAM,OAAAA,EAAEkU,gBAAkBgP,CAApB,GAD5B,IAIsBrkB,KAAI,SAAC+f,G,MACvBmF,EAAiC,QAAV,EAAAnF,EAAE0E,gBAAQ,eAAEQ,MACvC,SAAC9jB,GAAC,MAAK,OAAAA,EAAEkU,gBAAkBgP,GAA8C,KAAb,QAAjB,EAAAljB,EAAEujB,uBAAe,eAAE3oB,OAAY,IAG5E,MAAO,CACLlJ,GAAIktB,EAAEltB,GAENqN,YAAa6f,EAAEgB,aAEfF,WAAYqE,EACZT,SAAU1E,EAAE0E,SAEhB,KAtBS,CAAP,EAAOliB,QAAQC,OAAO,qB,WCpCb2iB,EAAqB,SAChClS,EACAiN,GAAsB,O,OAAA,E,OAAA,E,EAAA,W,woCAEA,SAAMjN,EAC1BiN,OACAntB,GACA,OACAA,GACA,I,OAEF,GAA6B,OAPvBotB,EAAgB,UAOJznB,OAChB,MAAM,IAAIhG,MAAMytB,EAAcC,YAkDhC,OAhDMgF,EAAyC,QAAxB,EAAAjF,EAAc7nB,KAAK6mB,aAAK,eAAEje,QAAO,SAAC2e,G,MACvD,OAAmB,QAAnB,EAAAA,EAAEC,yBAAiB,eAAEpJ,MACnB,SAACqJ,GAAM,OAAAA,EAAEO,gBAAkBlb,GZjCP,WYiCuB2a,EAAEQ,OAAtC,G,IAIL8E,EAAeD,aAAc,EAAdA,EAAgB1O,KAAKkJ,GACpChd,OAAoC7P,IAAjBsyB,EAEnBC,GAAoBF,aAAc,EAAdA,EAAgBH,KAAKjF,IAC3CoF,aAAc,EAAdA,EAAgBlkB,OAAO8e,QACvBjtB,EAEEwyB,OACcxyB,IAAjBsyB,QACuBtyB,IAAtBuyB,IACwB,QAAxB,EAAAnF,EAAc7nB,KAAK6mB,aAAK,eAAE8F,MAAK,SAACpF,G,MAC9B,OAAmB,QAAnB,EAAAA,EAAEC,yBAAiB,eAAEpJ,MACnB,SAACqJ,GAAM,OAAAA,EAAEO,gBAAkBlb,GZhDV,gBYgD0B2a,EAAEQ,OAAtC,G,OAGb,EAEIiF,EAAwBH,EAC1BA,EAAa3E,QAAU2E,EAAa1E,cACpC5tB,EACE0yB,EAA4BH,EAC9BA,EAAkBI,QAAO,SAACC,EAAK9F,GAAM,OAAAA,EAAEa,QAAUb,EAAEc,SAAWgF,CAAzB,GAA8B,QACnE5yB,EACE6yB,EAA4BN,aAAiB,EAAjBA,EAC9BpkB,QAAO,SAAC2e,GAAM,YAAqB9sB,IAArB8sB,EAAEgG,cAAF,IACf9D,SAAQ,SAAClC,GAAM,OAAAA,EAAEgG,gBAAkB,EAApB,IACZC,EAA2BhZ,MAAMC,KACrC,IAAIC,IACF4Y,aAAyB,EAAzBA,EAA2B5lB,KAAI,SAAC6W,GAAM,OAAAA,EAAEkP,iBAAF,MAGpCzR,EACJsR,EACIE,EAAyB9lB,KAAI,SAAC+W,GAAgB,OAC5CA,YAAW,EACXH,cAAegP,EACZ1kB,QAAO,SAAC2V,GAAM,OAAAA,EAAEkP,oBAAsBhP,CAAxB,IAEd/W,KAAI,SAAC6W,GAAM,OAAAA,EAAEmP,gBAAF,IAL8B,IAO9C,GAEC,CAAP,EAAO,CACLpjB,iBAAgB,EAChB2iB,cAAa,EACbC,sBAAqB,EACrBC,0BAAyB,EACzBnR,yBAAwB,I,iBAjEJ,K,6nDCVjB,SAAe2R,GAAW,G,IAC/B1M,EAAQ,WACRxT,EAAS,YACTrK,EAAI,O,qBACgB6G,SAAO,W,yDACV,SAAMgX,EAASxT,I,OAChC,OADMwV,EAAW,SACV,CAAP,GAAO,EAAA2K,EAAA,IAAwBxqB,EAAxB,CAA8B6f,EAASjjB,O,+2CCDzC,SAAe6tB,GAAY,G,IAChC1M,EAAS,YACT9iB,EAAI,OACJC,EAAO,UACPsK,EAAM,SACN3J,EAAI,OACJoB,EAAS,YACT+C,EAAI,O,sBACiB6G,SAAO,W,2DACX,SAAMkX,OACrB1mB,OACAA,EACA6D,EACAsK,EACAvK,EACAgC,EACApB,I,OAMF,OAbMgkB,EAAW,SASX9X,GAAU8X,EAASjjB,KAAK6mB,OAAS,IAAInf,KACzC,EAAAkmB,EAAA,IAAwBxqB,IAGnB,CAAP,EAAO,CAAE1C,MADKuiB,EAASjjB,KAAK8mB,MACZ3b,OAAM,I,+2CCrBjB,SAAe2iB,GAAmB,G,IACvCxL,EAAsB,yBACtB/nB,EAAE,KACF8U,EAAQ,WACRD,EAAQ,WACRa,EAAa,gB,sBACchG,SAAO,W,uEAGjB,SAAMqY,EAAuB/nB,EAAI8U,EAAUD,EAAU,CACpE,oEACA,qEACA,qCACA,0E,OA6DF,OAjEM6T,EAAW,SASX8G,GAAiC9G,EAASjjB,KAAK6mB,OAAS,IAAIje,QAChE,SAACohB,GAEC,QAAEA,EAAE5T,QAAU4T,EAAEH,QAAUG,EAAEH,OAAO5Y,OAAS+Y,EAAEH,OAAO5pB,KAArD,IAIE8tB,EAAkBhE,EAAYnhB,QAAO,SAACohB,GAAC,MAE3C,YAAkBvvB,IAAlBwV,IAAsC,QAAR,EAAA+Z,EAAEH,cAAM,eAAE5Y,SAAUhB,CAAoB,IAIlE9E,EAASqJ,MAAMC,KAAK,IAAIC,IAAIqV,EAAYriB,KAAI,SAACsiB,GAAM,OAAAA,EAAEH,OAAO5Y,KAAT,MAEnD+c,EAAmC,CAAC,EACpCC,EAAmC,CAAC,EACpCC,EAA0C,CAAC,EAC3CC,EAAyC,CAAC,EAEhDJ,EAAgBlN,SAAQ,SAACmJ,GACjB,IAUES,EACAtS,EAXF,EAAqD6R,EAAEH,OAA3C5pB,EAAI,WAASiqB,GAAF,QAAc,gBAE3C,SAASkE,EAA0BvE,GACjCG,EAAE5T,OAAOyK,SACP,SAAC,G,IAAEllB,EAAK,QAAEgvB,EAAS,YACjB,OAACd,EAAOc,GAAahvB,GAASkuB,EAAOc,IAAc,EAAnD,GAEN,CAYA,OAnBsD,YAmB9C1qB,GACN,IAAK,oEACHmuB,EAA0BJ,GAC1B,MACF,IAAK,qEACHI,EAA0BH,GAC1B,MACF,IAAK,qCAhBCxD,EAAe,UAAGP,GAClB/R,EAAY+V,EAAkBzD,IAAiB,CAAC,EACtDT,EAAE5T,OAAOyK,SACP,SAAC,G,IAAEllB,EAAK,QAAEgvB,EAAS,YACjB,OAACxS,EAAUwS,GAAahvB,GAASwc,EAAUwS,IAAc,EAAzD,IAEJuD,EAAkBzD,GAAgBtS,EAYhC,MACF,IAAK,uEACHiW,EAA0BD,GAGhC,IAEO,CAAP,EAAO,CACLE,cAAeljB,EACf8iB,cAAa,EACbD,cAAa,EACbE,kBAAiB,EACjBC,oBAAmB,I,+2CCtFhB,SAAeG,GAAkB,G,IACtCjN,EAAe,kB,sBACYpX,SAAO,W,2DAIjB,SAAMoX,GAAiB,I,OAaxC,OAbM4B,EAAW,SAaV,CAAP,EAAO,CAAEviB,OAZHoG,EAAWmc,EAASjjB,KAAKA,KAAK0H,KAAiB,SAACuY,GACpD,IAAMsO,EAAatO,EACnB,MAAO,CACL/iB,SAAUqxB,EAAWrxB,SACrB0K,YAAa,UAAG2mB,EAAWC,YAAc,GAAE,YACzCD,EAAWE,WAAa,IACvBvD,OACHnf,MAAOwiB,EAAWxiB,MAClB3O,WAAYmxB,EAAWlxB,eAAgB,EAE3C,KACuBoG,OACPqD,SAAQ,I,+2CCpBnB,SAAe4nB,GAAiB,G,IACrClN,EAAO,UACPnjB,EAAI,OACJC,EAAO,U,sBACmB2L,SAAO,W,2DAIhB,SAAMuX,OACrB/mB,OACAA,OACAA,OACAA,OACAA,OACAA,EACA4D,EACAC,I,OAYF,OApBM2kB,EAAW,SAUX1W,GAAU0W,EAASjjB,KAAK6mB,OAAS,IAAInf,KAAiB,SAACyI,GAAM,OACjE3G,QAAS2G,EAAEtD,WAAa,GACxBD,WAAY,CAAEA,WAAYuD,EAAEvD,WAAYG,UAAWoD,EAAEpD,WACrDL,SAAU,CACRI,aAAcqD,EAAErD,aAChBL,YAAa0D,EAAE1D,YACfO,aAAcmD,EAAEnD,cAN+C,IAU5D,CAAP,EAAO,CAAEtM,MADKuiB,EAASjjB,KAAK8mB,MACZva,OAAM,I,03CC7BjB,SAAeoiB,GAAqB,G,IACzCjN,EAAkB,qB,sBACYzX,SAAO,W,yDAGpB,SAAMyX,K,OASvB,OATMuB,EAAW,SASV,CAAP,EAAO,CAAErX,gBARIqX,EAASjjB,KAAK6mB,MACanf,KAAI,SAACyI,GAC3C,MAAO,CACLnE,cAAe,qBACfzR,GAAI4V,EAAE5V,IAAM,GACZqN,YAAauI,EAAElQ,MAAQ,GAE3B,M,+2CCnBK,SAAe2uB,GACpBjU,G,4GAEiB,SAAMA,EAAI,CACzBkU,WAAY,WACZC,UAAW,S,OAKb,GAPM7L,EAAW,SAIX,EAAoDA,EAASjjB,KAA3D+uB,EAAc,iBAAEC,EAAe,kBAAEC,EAAY,gBAG5B,IAFnBjrB,GACe,IAAnB+qB,IAAgD,IAApBC,SACqBv0B,IAAjBw0B,EAChC,MAAM,IAAI70B,MAAM,iCAElB,MAAO,CAAP,EAAO,CACL4J,iBAAgB,EAChB0C,SAAU,SAACR,EAAoBC,GAC7B,QAAqB1L,IAAjBw0B,EACF,MAAM,IAAI70B,MAAM,iCAElB,IAAM6Q,EAAM,IAAIikB,IAAID,GAGpB,OAFAhkB,EAAIkkB,aAAa9U,IAAI,WAAYnU,GACjC+E,EAAIkkB,aAAa9U,IAAI,iBAAkBlU,GAChC8E,EAAInG,IACb,I,smBCVSsqB,EAAa,CACxBC,MAAO,WAAM,OAAG9b,MAAO,MAAV,EACbxJ,aAAc,WACZ,cAAMqlB,EAAWC,SAAO,CAAEC,OAAQ,iBAAlC,EACFlpB,gBAAiB,WACf,cAAMgpB,EAAWC,SAAO,CAAEC,OAAQ,oBAAlC,EACFzjB,aAAc,SAACvR,GACb,cAAM80B,EAAWC,SAAO,CAAEC,OAAQ,iBAAkBh1B,EAApD,EACF2C,KAAM,WAAM,cAAMmyB,EAAWC,SAAO,CAAEC,OAAQ,SAAlC,EACZl0B,iBAAkB,WAChB,cAAMg0B,EAAWC,SAAO,CAAEC,OAAQ,qBAAlC,EAEFpsB,MAAO,CACLmsB,MAAO,WAAM,OAAC,OAAKD,EAAWC,SAAO,CAAEC,OAAQ,SAAlC,EACbC,kBAAmB,WACjB,O,OACOH,EAAWlsB,MAAMmsB,SAAO,CAAEG,UAAW,sBAD5C,EAGFC,mBAAoB,WAClB,O,OACOL,EAAWlsB,MAAMmsB,SAAO,CAAEG,UAAW,uBAD5C,EAGFE,sBAAuB,WACrB,O,OACON,EAAWlsB,MAAMmsB,SAAO,CAAEG,UAAW,0BAD5C,EAGFG,qBAAsB,WACpB,O,OACOP,EAAWlsB,MAAMmsB,SAAO,CAAEG,UAAW,yBAD5C,IAMOI,EAAmB,CAC9BP,MAAO,WAAM,OAAC,OAAKD,EAAWC,SAAO,CAAEC,OAAQ,aAAlC,EACb/rB,SAAU,WACR,cAAMqsB,EAAiBP,SAAO,CAAEG,UAAW,aAA3C,EACFK,aAAc,SACZv1B,GAEA,O,OACOs1B,EAAiBP,SAAO,CAAEG,UAAW,gBAC1Cl1B,EAFF,GAMSw1B,EAAe,CAC1BT,MAAO,WAAM,OAAG9b,MAAO,QAAV,EACbwc,KAAM,SAACz1B,GACL,O,OAEOw1B,EAAaT,SAAO,CACvBC,OAAQ,SAEVh1B,EALF,EAOFK,SAAU,CACR00B,MAAO,SAAC,G,IAAE90B,EAAE,KAAEoR,EAAQ,WACpB,OAAC,OAAKmkB,EAAaT,SAAO,CAAEC,OAAQ,WAAY/0B,GAAE,EAAEoR,SAAQ,GAA5D,EACFqkB,QAAS,SAAC11B,GACR,O,OACOw1B,EAAan1B,SAAS00B,MAAM/0B,IAAO,CAAEk1B,UAAW,YADvD,EAGFrkB,OAAQ,SAAC,GACP,IAAA5Q,EAAE,KACFoR,EAAQ,WACLrR,EAAM,IAHF,mBAQP,O,OAEOw1B,EAAan1B,SAAS00B,MAAM,CAAE90B,GAAE,EAAEoR,SAAQ,KAAG,CAChD6jB,UAAW,WAEbl1B,E,EAEJ2W,MAAO,SAAC,G,IACN1W,EAAE,KACFoR,EAAQ,WACR8B,EAAS,YAKT,O,OAEOqiB,EAAan1B,SAAS00B,MAAM,CAAE90B,GAAE,EAAEoR,SAAQ,KAAG,CAChD6jB,UAAW,UAEb,CAAE/hB,UAAS,GALb,EAOFwiB,cAAe,SAAC,GACd,IAAA11B,EAAE,KACFoR,EAAQ,WACR8B,EAAS,YACNnT,EAAM,IAJK,+BASd,O,OAEOw1B,EAAan1B,SAAS00B,MAAM,CAAE90B,GAAE,EAAEoR,SAAQ,KAAG,CAChD6jB,UAAW,kB,GAEX/hB,UAAS,GAAKnT,G,EAEpBsc,eAAgB,SACdtc,GAKA,O,OAEOw1B,EAAan1B,SAAS00B,MAAM/0B,IAAO,CACtCk1B,UAAW,oBAEbl1B,EALF,EAOFyZ,cAAe,SAAC,G,IACdxZ,EAAE,KACFoR,EAAQ,WACRqI,EAAe,kBAKf,O,OAEO8b,EAAan1B,SAAS00B,MAAM,CAAE90B,GAAE,EAAEoR,SAAQ,KAAG,CAChD6jB,UAAW,kBAEb,CAAExb,gBAAe,GALnB,EAOFpI,gBAAiB,SACftR,GAEA,cAAM80B,EAAWC,SAAO,CAAEC,OAAQ,oBAAqBh1B,EAAvD,EACF+Q,YAAa,SACX/Q,GAKA,O,OAEOw1B,EAAan1B,SAAS00B,MAAM/0B,IAAO,CACtCk1B,UAAW,SAEbl1B,EALF,EAOFkV,QAAS,CACP6f,MAAO,SAAC,G,IAAE90B,EAAE,KACV,OAAC,OACIu1B,EAAan1B,SAAS00B,MAAM,CAAE90B,GAAE,KAAG,CACtCi1B,UAAW,UACXj1B,GAAE,GAHJ,EAKF21B,IAAK,SAAC51B,GACJ,cAAMw1B,EAAan1B,SAAS00B,MAAM/0B,IAAO,CAAEkN,KAAM,QAAjD,EACF7M,SAAU,SAAC,GACT,IAAAJ,EAAE,KACCD,EAAM,IAFA,QAIT,O,OAEOw1B,EAAan1B,SAAS00B,MAAM,CAAE90B,GAAE,KAAG,CACtCiN,KAAM,aAERlN,E,EAEJ2W,MAAO,SAAC,GACN,IAAA1W,EAAE,KACCD,EAAM,IAFH,QAIN,O,OAEOw1B,EAAan1B,SAAS00B,MAAM,CAAE90B,GAAE,KAAG,CACtCiN,KAAM,UAERlN,E,KAMG61B,EAAkB,CAC7Bd,MAAO,WAAM,OAAG9b,MAAO,YAAV,EACbwc,KAAM,SAACz1B,GACL,gBAAM61B,EAAgBd,SAAO,CAAEC,OAAQ,SAAWh1B,GAAlD,EACF81B,OAAQ,CACNf,MAAO,SAAC,G,IAAErS,EAAQ,WAChB,OAAC,OACImT,EAAgBd,SAAO,CAC1BC,OAAQ,SACRtS,SAAQ,GAHV,EAKFqT,SAAU,SAAC,G,IAAErT,EAAQ,WAAEE,EAAM,SAA8C,O,OAEpEiT,EAAgBC,OAAOf,MAAM,CAAErS,SAAQ,KAAG,CAC7C5Z,KAAM,WACN8Z,OAAM,IAJiE,EAO3EoT,UAAW,SAAC,G,IACVtT,EAAQ,WACRE,EAAM,SAIF,O,OAECiT,EAAgBC,OAAOf,MAAM,CAAErS,SAAQ,KAAG,CAC7C5Z,KAAM,YACN8Z,OAAM,IAJJ,G,mRCrNGqT,EAAiC,CAC5C,iBAAkB,SAClB,sBAAuB,CAAE/oB,KAAM,KAAM7L,MAAOmhB,OAAO,aACnD,wBAAyB,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,wBACrD,oBAAqB,CAAEtV,KAAM,QAAS7L,MAAOmhB,OAAO,YACpD,iCAAiC,EACjC,sCAAuC,CACrCtV,KAAM,KACN7L,MAAOmhB,OAAO,wBAEhB,yBAA0B,aAC1B,wBAAyB,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,MACrD,kBAAmB,CAAEtV,KAAM,QAAS7L,MAAOmhB,OAAO,OAClD,eAAgB,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,cAC5C,gBAAiB,CAAEtV,KAAM,QAAS7L,MAAOmhB,OAAO,eAChD,aAAc,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,cAC1C,mBAAoB,WACpB,uBAAwB,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,UACpD,iBAAkB,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,wBAC9C,WAAY,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,wBACxC,uBAAwB,CAAEtV,KAAM,QAAS7L,MAAOmhB,OAAO,SACvD,yBAA0B,UAC1B,4BAA6B,GAC7B,sBAAuB,EACvB,sBAAuB,CAAEtV,KAAM,QAAS7L,MAAOmhB,OAAO,aACtD,oBAAqB,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,MACjD,kCAAkC,EAClC0T,aAAa,GAGFC,EAAgC,CAC3C,iBAAkB,SAClB,sBAAuB,CAAEjpB,KAAM,KAAM7L,MAAOmhB,OAAO,aACnD,wBAAyB,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,wBACrD,oBAAqB,CAAEtV,KAAM,QAAS7L,MAAOmhB,OAAO,YACpD,iCAAiC,EACjC,sCAAuC,CACrCtV,KAAM,KACN7L,MAAOmhB,OAAO,wBAEhB,yBAA0B,aAC1B,wBAAyB,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,MACrD,kBAAmB,CAAEtV,KAAM,QAAS7L,MAAOmhB,OAAO,OAClD,eAAgB,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,cAC5C,gBAAiB,CAAEtV,KAAM,QAAS7L,MAAOmhB,OAAO,eAChD,aAAc,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,cAC1C,mBAAoB,WACpB,uBAAwB,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,UACpD,iBAAkB,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,wBAC9C,WAAY,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,wBACxC,uBAAwB,CAAEtV,KAAM,QAAS7L,MAAOmhB,OAAO,SACvD,yBAA0B,UAC1B,4BAA6B,GAC7B,sBAAuB,EACvB,sBAAuB,CAAEtV,KAAM,QAAS7L,MAAOmhB,OAAO,aACtD,oBAAqB,CAAEtV,KAAM,KAAM7L,MAAOmhB,OAAO,MACjD,kCAAkC,EAClC0T,aAAa,GAGR,SAASE,EAAwBttB,GACtC,IAAMmiB,EAAa,cAATniB,EAAuBmtB,EAAoBE,EAErD,OAAO,SAA0BtgB,G,MAC/B,IAAKA,EAAElQ,KACL,MAAM,IAAI7F,MAAM,wCAAiCulB,KAAKC,UAAUzP,KAElE,IAAMwgB,EAAK3L,OAAO4L,aACR,QAAR,EAAAzgB,EAAE0gB,cAAM,eAAEnpB,KAAI,SAACmB,GAAM,OAACA,EAAExM,IAAyBwM,EAAElN,MAA9B,MAAyC,IAE1Dk1B,EAAsB,CAC1B,iBAAkBF,EAAG,kBACrB,sBAAuBG,EACrBH,EAAG,uBACHpL,EAAE,wBAEJ,wBAAyBuL,EACvBH,EAAG,yBACHpL,EAAE,0BAEJ,oBAAqBwL,EACnBJ,EAAG,qBACHpL,EAAE,sBAEJ,gCAAiCyL,EAC/BL,EAAG,iCACHpL,EAAE,kCAEJ,sCAAuCuL,EACrCH,EAAG,uCACHpL,EAAE,wCAEJ,yBAA0BoL,EACxB,0BAEF,wBAAyBG,EACvBH,EAAG,yBACHpL,EAAE,0BAEJ,kBAAmBwL,EACjBJ,EAAG,mBACHpL,EAAE,oBAEJ,eAAgBuL,EACdH,EAAG,gBACHpL,EAAE,iBAEJ,gBAAiBwL,EACfJ,EAAG,iBACHpL,EAAE,kBAEJ,aAAcuL,EACZH,EAAG,cACHpL,EAAE,eAEJ,mBAAoBoL,EAClB,oBAEF,uBAAwBG,EACtBH,EAAG,wBACHpL,EAAE,yBAEJ,iBAAkBuL,EAChBH,EAAG,kBACHpL,EAAE,mBAEJ,WAAYuL,EAA0BH,EAAG,YAAapL,EAAE,aACxD,0CACEoL,EAAG,2CACL,uBAAwBI,EACtBJ,EAAG,wBACHpL,EAAE,yBAEJ,wCACEoL,EAAG,yCACL,yBAA0BA,EAAG,0BAC7B,4BAA6BM,EAC3BN,EAAG,6BACHpL,EAAE,8BAEJ,sBAAuB0L,EACrBN,EAAG,uBACHpL,EAAE,wBAEJ,sBAAuBwL,EACrBJ,EAAG,uBACHpL,EAAE,wBAEJ,oBAAqBuL,EACnBH,EAAG,qBACHpL,EAAE,sBAEJ,iCAAkCyL,EAChCL,EAAG,kCACHpL,EAAE,mCAEJiL,YAAaQ,EAAqBL,EAAgB,YAAGpL,EAAe,cAEtE,OAAO,EAAP,CACEtlB,KAAMkQ,EAAElQ,KACR6R,WAAY3B,EAAE2B,YAAc,IACzB+e,EAEP,CACF,CAEA,SAASC,EACPn1B,EACAu1B,GAEA,OAAOv1B,GAASA,EAAMuvB,OAAOznB,OAAS,EAClC,CAAE+D,KAAM,KAAM7L,MAAOmhB,OAAOnhB,EAAMuvB,SAClCgG,CACN,CAEA,SAASH,EAAmBp1B,EAAeu1B,GACzC,OAAOv1B,GAASA,EAAMuvB,OAAOznB,OAAS,EAClC,CAAE+D,KAAM,QAAS7L,MAAOmhB,OAAOnhB,EAAMuvB,SACrCgG,CACN,CAEA,SAASD,EAAoBt1B,EAAew1B,GAC1C,OAAOC,SAASz1B,EAAO,KAAOw1B,CAChC,CAEA,SAASH,EAAqBr1B,EAAew1B,GAC3C,IACE,IAAMlG,EAAatL,KAAK0R,MAAM11B,GAC9B,GAAiB,kBAANsvB,EACT,OAAOA,C,CAET,S,CAGF,OAAOkG,CACT,CAEO,IA0BMG,EAAyB,SAACrgB,GAC7B,IA3B6BsgB,EAC/BC,EA0BE1f,EAA0Bb,EAAK,WACjCwgB,GA3BAD,EAAuD,IADxBD,E,yUA2BR,CAAKtgB,EAA5B,iBAzBO,iBACXugB,EAAc9xB,KAAK,CACjBrD,IAAK,eACLV,MAAO41B,EAAS,gBAAgB51B,MAAM4vB,aAItCgG,EAAS,oBACXC,EAAc9xB,KAAK,CACjBrD,IAAK,kBACLV,MAAO41B,EAAS,mBAAmB51B,MAAM4vB,aAIzCgG,EAAS,mBACXC,EAAc9xB,KAAK,CACjBrD,IAAK,iBACLV,MAAO41B,EAAS,oBAIbC,GAUP,MAJqC,CACnCE,cAAe5f,EAAWrO,OAC1BotB,OAAQY,EAGZ,C,oGCrOahoB,EAAS,WACd,OAA4B,UAA1BgQ,EAAQ,WAAEkY,EAAW,cAEvB1S,GAAc,IAAA3jB,cAClB,WACE,WAAI,EAAAs2B,WACF,IAAI,EAAAC,cAAc,CAChBF,YAAW,EACXlY,SAAQ,IAHZ,GAMF,CAACkY,EAAalY,IAGV5N,GAAe,IAAAvQ,cAAY,kB,OAAA,E,OAAA,E,EAAA,W,gnCACjB,SAAMq2B,K,OACpB,OADMG,EAAQ,SACP,CAAP,EAAO,IAAI,EAAAC,aAAa,CACtBJ,YAAaG,EACbrY,SAAU,kB,iBAJmB,K,gRAM9B,CAACkY,IAEEzlB,GAAiB,IAAA5Q,cACrB,WACE,WAAI,EAAA02B,YACF,IAAI,EAAAH,cAAc,CAChBF,YAAW,EACXlY,SAAQ,IAHZ,GAMF,CAACkY,EAAalY,IAGVjQ,GAAU,IAAAlO,cACd,WACE,WAAI,EAAA22B,eACF,IAAI,EAAAJ,cAAc,CAChBF,YAAW,EACXlY,SAAQ,IAHZ,GAMF,CAACkY,EAAalY,IAGVtO,GAAS,IAAA7P,cACb,SAACqQ,GACC,WAAI,EAAAumB,UACF,IAAI,EAAAL,cAAc,CAChBF,YAAW,EACXlY,SAAU9N,IAHd,GAMF,CAACgmB,IAGG/a,GAAiB,IAAAtb,cACrB,SAACqQ,GACC,WAAI,EAAAwmB,UACF,IAAI,EAAAN,cAAc,CAChBF,YAAW,EACXlY,SAAU9N,IAHd,GAMF,CAACgmB,IAGGjmB,GAAO,IAAApQ,cACX,SAACqQ,GACC,WAAI,EAAAymB,QACF,IAAI,EAAAP,cAAc,CAChBF,YAAW,EACXlY,SAAU9N,IAHd,GAMF,CAACgmB,IAyBH,MAAO,CACL1S,YAAW,EACXzV,QAAO,EACP2B,OAAM,EACNyL,eAAc,EACd4L,SA3Bc,IAAAlnB,cACd,SAACqQ,GACC,WAAI,EAAA0mB,WACF,IAAI,EAAAR,cAAc,CAChBF,YAAW,EACXlY,SAAU9N,IAHd,GAMF,CAACgmB,IAoBD9lB,aAAY,EACZH,KAAI,EACJQ,eAAc,EACd1D,mBApBwB,IAAAlN,cACxB,WACE,WAAI,EAAAg3B,+BACF,IAAI,EAAAT,cAAc,CAChBF,YAAW,EACXlY,SAAQ,IAHZ,GAMF,CAACkY,EAAalY,IAclB,C,sDC/HA,IAAM8Y,EAAuB,eACvBC,EAAoB,sCAEnB,SAASC,IACd,MAAsD,SAA/CC,aAAaC,QAAQJ,EAC9B,CAEO,SAASK,IACd,MAAmD,SAA5CF,aAAaC,QAAQH,EAC9B,CAEO,SAASK,IACd,OAAOH,aAAaI,QAAQN,EAAmB,OACjD,C,kGCgFO,IAeMO,EAAsC,CACjD,WACA,eACA,aAEWC,EAAmC,CAAC,SACpCC,EAAsC,CAAC,YACvCC,EAAwC,CAAC,cACzCC,EAAuC,CAAC,aACxCC,EAAsC,CAAC,WAAY,eACnDC,EAAsC,CAAC,YAEvCC,EAAqB,CAChCC,SAAUR,EACVxV,MAAOyV,EACPQ,SAAUP,EACVQ,UAAWN,EACXzV,SAAU0V,EACVM,SAAUL,EACVM,WAAYT,E,umBCtHDU,EAET,SAAC,G,IAAE/tB,EAAK,QAAEF,EAAW,cACvB,OACE,SAAC,EAAAkuB,QAAO,gBACK,0BACXC,eAAe,yBAAMjuB,IACrBkuB,aAAa,yBAAMpuB,KAAkB,WAErC,SAAC,EAAAquB,2BAA0B,MAGjC,ECbaC,EAET,SAAC,G,IAAE9f,EAAK,QACFhE,GAAM,IAAA0F,gBAAe,CAAC,UAAS,EAEvC,OAAQ1B,GACN,IAAK,SACH,OAAOhE,EAAE,8BACX,IAAK,QACH,OAAOA,EAAE,6BACX,IAAK,OACH,OAAOA,EAAE,4BACX,IAAK,sBACH,OAAOA,EAAE,4CACX,IAAK,qBACH,OAAOA,EAAE,2CACX,IAAK,UACH,OAAOA,EAAE,+BACX,QACE,OAAO,KAEb,E,gNCAa+jB,EAET,SAAC,G,IAAE/f,EAAK,QAAExD,EAAS,YAAEoE,EAAa,gBAAEE,EAAiB,oBAC/C9E,GAAM,IAAA0F,gBAAe,CAAC,UAAS,EAEjCse,EAAc,CAClBljB,MAAOd,EAAE,eACTgI,UAAWhI,EAAE,2BACbikB,YAAajkB,EAAE,6BACfkkB,eAAgBlkB,EAAE,gCAClBmkB,eAAgBnkB,EAAE,gCAClBokB,WAAYpkB,EAAE,6BAGhB,OACE,UAAC,EAAAqkB,MAAK,GAACC,WAAS,eACd,UAAC,EAAAC,gBAAe,GACdC,eAAgB,CAAEC,GAAI,QACtBC,UAAW,oBAAkB,YAE7B,UAAC,EAAAC,qBAAoB,YACnB,SAAC,EAAAC,oBAAmB,UACjB5kB,EAAE,mCAEL,SAAC,EAAA6kB,2BAA0B,UACxBjgB,QAGL,UAAC,EAAA+f,qBAAoB,YACnB,UAAC,EAAAC,oBAAmB,WACjB5kB,EAAE,qCAAsC,KACzC,SAACyjB,EAAoB,CACnB/tB,MAAOsK,EAAE,0CACTxK,YAAawK,EAAE,uDAGnB,SAAC,EAAA6kB,2BAA0B,UACxB/f,QAGL,UAAC,EAAA6f,qBAAoB,YACnB,SAAC,EAAAC,oBAAmB,UACjB5kB,EAAE,iCAEL,SAAC,EAAA6kB,2BAA0B,WACzB,SAACf,EAAuB,CAAC9f,MAAOA,cAItC,UAAC,EAAA8gB,gBAAe,gBACF9kB,EAAE,gDACd3K,QAAS,EAAA0vB,aAAA,SAAoB,YAE7B,SAAC,EAAAC,MAAK,GAACC,QAAM,cACX,UAAC,EAAAC,GAAE,YACD,SAAC,EAAAC,GAAE,GAACC,MAAO,IAAE,UAAGpB,EAAYljB,UAC5B,SAAC,EAAAqkB,GAAE,GAACC,MAAO,IAAE,UAAGpB,EAAYhc,cAC5B,SAAC,EAAAmd,GAAE,GAACC,MAAO,IAAE,UAAGpB,EAAYC,gBAC5B,SAAC,EAAAkB,GAAE,GAACC,MAAO,IAAE,UAAGpB,EAAYE,mBAC5B,SAAC,EAAAiB,GAAE,GAACC,MAAO,IAAE,UAAGpB,EAAYG,mBAC5B,SAAC,EAAAgB,GAAE,GAACC,MAAO,IAAE,UAAGpB,EAAYI,qBAGhC,SAAC,EAAAiB,MAAK,UACH7kB,EAAUjJ,KACT,SAAC,G,IACC6I,EAAO,UACP4H,EAAS,YACTlH,EAAK,QACLiV,EAAQ,WACR5R,EAAM,SACN6R,EAAY,eACZF,EAAG,MAEH,OACE,UAAC,EAAAoP,GAAE,YACD,SAAC,EAAAI,GAAE,GAACC,UAAWvB,EAAYljB,OAAK,UAAGA,MACnC,SAAC,EAAAwkB,GAAE,GAACC,UAAWvB,EAAYhc,WAAS,UAAGA,MACvC,SAAC,EAAAsd,GAAE,GAACC,UAAWvB,EAAYC,aAAW,UACnClO,EACC,UAAG3V,EAAO,aAAK2V,IAEf,uBAAI/V,EAAE,kCAGV,SAAC,EAAAslB,GAAE,GAACC,UAAWvB,EAAYE,gBAAc,UAAG/f,MAC5C,SAAC,EAAAmhB,GAAE,GAACC,UAAWvB,EAAYG,gBAAc,UAAGnO,MAC5C,SAAC,EAAAsP,GAAE,GAACC,UAAWvB,EAAYI,YAAU,UAAGtO,OAZjC1V,EAeb,aAMZ,E,gNChGaolB,EAET,SAAC,G,IAAExhB,EAAK,QAAExD,EAAS,YAAEoE,EAAa,gBAAEE,EAAiB,oBAC/C9E,GAAM,IAAA0F,gBAAe,CAAC,UAAS,EAEjCse,EAAc,CAClBhc,UAAWhI,EAAE,2BACbikB,YAAajkB,EAAE,6BACfkkB,eAAgBlkB,EAAE,gCAClBmkB,eAAgBnkB,EAAE,gCAClBokB,WAAYpkB,EAAE,6BAGhB,OACE,UAAC,EAAAqkB,MAAK,GAACC,WAAS,eACd,UAAC,EAAAC,gBAAe,GACdC,eAAgB,CAAEC,GAAI,QACtBC,UAAW,oBAAkB,YAE7B,UAAC,EAAAC,qBAAoB,YACnB,SAAC,EAAAC,oBAAmB,UACjB5kB,EAAE,6CAEL,SAAC,EAAA6kB,2BAA0B,UACxBjgB,QAGL,UAAC,EAAA+f,qBAAoB,YACnB,UAAC,EAAAC,oBAAmB,WACjB5kB,EAAE,+CAAgD,KACnD,SAACyjB,EAAoB,CACnB/tB,MAAOsK,EAAE,0CACTxK,YAAawK,EAAE,uDAGnB,SAAC,EAAA6kB,2BAA0B,UACxB/f,QAGL,UAAC,EAAA6f,qBAAoB,YACnB,SAAC,EAAAC,oBAAmB,UACjB5kB,EAAE,iCAEL,SAAC,EAAA6kB,2BAA0B,WACxB,SAACf,EAAuB,CAAC9f,MAAOA,cAIvC,UAAC,EAAA8gB,gBAAe,gBACF9kB,EAAE,gDACd3K,QAAS,EAAA0vB,aAAA,SAAoB,YAE7B,SAAC,EAAAC,MAAK,GAACC,QAAM,cACX,UAAC,EAAAC,GAAE,YACD,SAAC,EAAAC,GAAE,GAA6BC,MAAO,IAAE,UACtCpB,EAAYhc,YADNgc,EAAYhc,YAGrB,SAAC,EAAAmd,GAAE,GAA+BC,MAAO,IAAE,UACxCpB,EAAYC,cADND,EAAYC,cAGrB,SAAC,EAAAkB,GAAE,GAAkCC,MAAO,IAAE,UAC3CpB,EAAYE,iBADNF,EAAYE,iBAGrB,SAAC,EAAAiB,GAAE,GAAkCC,MAAO,IAAE,UAC3CpB,EAAYG,iBADNH,EAAYG,iBAGrB,SAAC,EAAAgB,GAAE,GAA8BC,MAAO,IAAE,UACvCpB,EAAYI,aADNJ,EAAYI,mBAKzB,SAAC,EAAAiB,MAAK,UACH7kB,EAAUjJ,KACT,SAAC,G,IAAE6I,EAAO,UAAE4H,EAAS,YAAE+N,EAAQ,WAAE5R,EAAM,SAAE6R,EAAY,eAAEF,EAAG,MACxD,OACE,UAAC,EAAAoP,GAAE,YACD,SAAC,EAAAI,GAAE,GAACC,UAAWvB,EAAYhc,WAAS,UAAGA,MACvC,UAAC,EAAAsd,GAAE,GAACC,UAAWvB,EAAYC,aAAW,WACnClO,EACC,UAAG3V,EAAO,aAAK2V,IAEf,uBAAI/V,EAAE,8BACL,SAEL,SAAC,EAAAslB,GAAE,GAACC,UAAWvB,EAAYE,gBAAc,UAAG/f,MAC5C,SAAC,EAAAmhB,GAAE,GAACC,UAAWvB,EAAYG,gBAAc,UAAGnO,MAC5C,SAAC,EAAAsP,GAAE,GAACC,UAAWvB,EAAYI,YAAU,UAAGtO,OAXjC1V,EAcb,aAMZ,EC/GaqlB,EAET,SAAC,G,IACH9gB,EAAoB,uBACpBX,EAAK,QACLxD,EAAS,YACToE,EAAa,gBACbE,EAAiB,oBAEjB,OACE,yBACGH,GACC,SAAC6gB,EAAoB,CACnBxhB,MAAOA,EACPxD,UAAWA,EACXoE,cAAeA,EACfE,kBAAmBA,KAGrB,SAACif,EAAoB,CACnB/f,MAAOA,EACPxD,UAAWA,EACXoE,cAAeA,EACfE,kBAAmBA,KAK7B,E,2NC7Ba4gB,EAA6C,WAChD,IAAA1lB,GAAM,IAAA0F,gBAAe,CAAC,UAAS,EACvC,OACE,UAAC,EAAAigB,WAAU,GAACtwB,QAAS,EAAAuwB,kBAAA,OAAuB,YAC1C,SAAC,EAAAC,eAAc,CAACC,KAAM,EAAAC,aACtB,SAAC,EAAAC,MAAK,GAACC,aAAc,KAAMjZ,KAAM,EAAAkZ,WAAA,IAAa,UAC3ClmB,EAAE,0CAEL,SAAC,EAAAmmB,eAAc,UAAEnmB,EAAE,0CAGzB,E,gNCXaomB,EAAqD,SAAC,G,IACjEC,EAAQ,WACR76B,EAAK,QAEGwU,GAAM,IAAA0F,gBAAe,SAAQ,EAC/B,GAAsB,IAAAjb,WAAkB,GAAvCgM,EAAM,KAAE6vB,EAAS,KAMlBC,EAAsD,CAC1DC,SAAUxmB,EAAE,iCACZymB,OAAQzmB,EAAE,+BACV0mB,SAAU1mB,EAAE,kCAgBd,OACE,SAAC,EAAA2mB,OAAM,gBACO3mB,EAAE,+CACd4mB,gBAAiB5mB,EAAE,+CACnB5V,GAAI,gBACJy8B,SA5Ba,SAACpwB,GAChB6vB,EAAU7vB,EACZ,EA2BIqwB,SAnBsC,SAAChqB,EAAGiqB,GAC5CV,EAASU,GACTT,GAAU,EACZ,EAiBIjxB,QAAS,EAAA2xB,cAAA,OACTvwB,OAAQA,EACRwwB,gBAAiBjnB,EAAE,+BACnBknB,WAAY17B,EACZ27B,aAAc,UAAQ,UAlBjBtS,OAAOuS,QAAQb,GAAmBhvB,KAAI,SAAC,G,IAAC/L,EAAK,KAAE67B,EAAK,KAAM,OAC/D,SAAC,EAAAC,aAAY,GAAa97B,MAAOA,GAAK,UACnC67B,IADgB77B,EAD4C,MAuBrE,E,gNC9Ca+7B,EAAmD,SAAC,G,IAC/DvsB,EAAM,SACNqrB,EAAQ,WACR76B,EAAK,QAEGwU,GAAM,IAAA0F,gBAAe,SAAQ,EAE/B,GAAsB,IAAAjb,WAAkB,GAAvCgM,EAAM,KAAE6vB,EAAS,KAWxB,OACE,SAAC,EAAAK,OAAM,gBACO3mB,EAAE,0CACd4mB,gBAAiB5mB,EAAE,0CACnB5V,GAAI,eACJiL,QAAS,EAAA2xB,cAAA,OACTH,SAfa,SAACpwB,GAChB6vB,EAAU7vB,EACZ,EAcIqwB,SAZsC,SAAChqB,EAAGgE,GAC5CulB,EAASvlB,GACTwlB,GAAU,EACZ,EAUI7vB,OAAQA,EACRywB,WAAY17B,EACZy7B,gBAAiBjnB,EAAE,8BACnBmnB,aAAc,SACd/O,WAAYpd,EAAO1H,QAAU,GAAC,UAE7B0H,EAAOzD,KAAI,SAACuJ,EAAO0mB,GAAU,OAC5B,SAAC,EAAAF,aAAY,GAAa97B,MAAOsV,GAAK,UACnCA,IADgB0mB,EADS,MAOpC,E,kZCJaC,EAET,SAAC,G,IACHrnB,EAAO,UACPpF,EAAM,SACNwJ,EAAY,eACZpQ,EAAW,cACXmM,EAAkB,qBAClBmnB,EAAgB,mBAChB9yB,EAAQ,WACR4L,EAAS,YACTwD,EAAK,QAEGhE,GAAM,IAAA0F,gBAAe,CAAC,UAAS,EAEjC,GAAoC,IAAAjb,UAAiB,IAApDqV,EAAa,KAAE6nB,EAAgB,KAChC,GAAsC,IAAAl9B,UAAsB,YAA3Dm9B,EAAc,KAAEC,EAAiB,KAClC,GAA4C,IAAAp9B,YAA3C2Z,EAAiB,KAAE0jB,EAAoB,KAExC,GAAwC,IAAAr9B,WAAkB,GAAzDs9B,EAAe,KAAEC,EAAkB,KAEpC,GAA0C,IAAAv9B,UAAqB,IAA9Dw9B,EAAgB,KAAEC,EAAmB,KAEtCC,EAA2B,WAAVnkB,EAEjBokB,EACJ5nB,EAAU/H,QAAO,SAACwC,GAAa,OAAAA,EAAS6F,QAAUhB,CAAnB,KAAqC,GAEhEuoB,IACHvoB,GACA8nB,GACAG,GACAI,GAC2B,IAA5BF,EAAiB30B,QAEbg1B,EAAe,CACnBtgB,UAAWhI,EAAE,2BACbuoB,SAAU,UAAGvoB,EAAE,2BAA0B,cAAMA,EAC7C,4BAEFkkB,eAAgBlkB,EAAE,gCAClBmkB,eAAgBnkB,EAAE,gCAClBokB,WAAYpkB,EAAE,4BACdwoB,WAAYxoB,EAAE,6BAGVyoB,EACJR,EAAiB30B,SAAW80B,EAAa90B,OAMrCo1B,EAAqB,SAACztB,GAC1B,OAAOgtB,EAAiB59B,SAAS4Q,EACnC,EASM0tB,GAAgB,IAAAx9B,cAAY,WAChC,IAAMwW,EAAasmB,EAAiB1wB,KAAI,SAAC,GAAkB,OAAP,WAAO,IAC3DgJ,EACET,EACA8nB,EACAjmB,EACAyC,GAAqB,IAEzB,GAAG,CACD7D,EACAT,EACA8nB,EACAK,EACA7jB,IAGF,OACE,SAAC,EAAAwkB,MAAK,GACJvzB,QAAS,EAAAwzB,aAAA,MACTpyB,OAAQrC,EAAW,aACP4L,EAAE,0CACdtK,MAAOsK,EAAE,8BACT8oB,WAAW,EACX/9B,QAASyZ,EAAY,mBACJ,gBACjBkjB,iBAAkBA,EAClB9yB,SAAUA,EACVm0B,SAAS,MACTC,QAAS,EACP,SAAC,EAAApwB,OAAM,GACLvD,QAAQ,SAER+iB,WAAYiQ,EACZY,QAASN,GAAa,UAErB3oB,EAAE,gCAJE,IAMP,SAAC,EAAApH,OAAM,GAACvD,QAAQ,OAAe4zB,QAASzkB,GAAY,UACjDxE,EAAE,mBADuB,KAG7B,WAED,UAAC,EAAAqkB,MAAK,GAACC,WAAS,eACd,SAAC,EAAA4E,UAAS,WACR,UAAC,EAAAC,KAAI,GAACC,cAAY,eAChB,SAAC,EAAAC,UAAS,GACR3E,UAAU,qDACV2C,MAAOrnB,EAAE,mDACTspB,QAAQ,wBAAsB,WAE9B,SAAC,EAAAC,UAAS,CACRC,gBAAiB,UACjBnyB,KAAK,OACLvH,KAAMkQ,EAAE,mDACR5V,GAAI,uBACJoB,MAAO4U,OAGV+nB,IACC,SAAC,EAAAkB,UAAS,GACRhC,MAAOrnB,EAAE,0CACTspB,QAAQ,gBAAc,WAEtB,SAAC/B,EAAW,CACV/7B,MAAOsU,EACP9E,OAAQA,EACRqrB,SAAUsB,OAIfQ,GAAkBroB,IACjB,SAAC,EAAAupB,UAAS,GACRhC,MAAOrnB,EAAE,+CACTspB,QAAQ,iBAAe,WAEvB,SAAClD,EAAY,CACX56B,MAAOo8B,EACPvB,SAAUwB,OAIfM,GACCroB,GACmB,aAAnB8nB,IACE,SAAC,EAAAyB,UAAS,GACRhC,MAAOrnB,EAAE,kDACTspB,QAAQ,uBAAqB,WAE7B,SAAC,EAAAC,UAAS,CACRn/B,GAAG,sBACH0F,KAAMkQ,EAAE,kDACRxU,MAAO4Y,EACPiiB,SAAUyB,EACVzwB,KAAK,qBAMjB,SAAC,EAAA6xB,UAAS,WACNf,IACA,SAAC,EAAAsB,MAAK,GACJ/E,UAAU,cACVrvB,QAAQ,SACRq0B,UAAQ,EACRh0B,MAAOsK,EAAE,qDAAmD,WAE5D,uBAAIA,EAAE,2DAIZ,SAAC,EAAAkpB,UAAS,UACPf,GAAkBC,EAAa90B,OAAS,GAAKwM,IAC5C,UAAC,EAAAukB,MAAK,GAACC,WAAS,eACd,SAAC,EAAA4E,UAAS,WACR,UAAC,EAAApE,gBAAe,gBACF9kB,EAAE,+CACd0kB,UAAU,kBAAgB,YAE1B,SAAC,EAAAM,MAAK,WACJ,UAAC,EAAAE,GAAE,YACD,SAAC,EAAAC,GAAE,CACDwE,OAAQ,CACN7C,SAAU,SAAC8C,EAAQC,GACjB,OA3IE,SAACA,QAAA,IAAAA,IAAAA,GAAA,GAC3B3B,EAAoB2B,EAAczB,EAAe,GACnD,CAyI0B0B,CAAoBD,EAApB,EACFE,WAAYtB,MAGhB,SAAC,EAAAtD,GAAE,UAAEmD,EAAatgB,aAClB,SAAC,EAAAmd,GAAE,UAAEmD,EAAaC,YAClB,SAAC,EAAApD,GAAE,UAAEmD,EAAapE,kBAClB,SAAC,EAAAiB,GAAE,UAAEmD,EAAanE,kBAClB,SAAC,EAAAgB,GAAE,UAAEmD,EAAalE,cAClB,SAAC,EAAAe,GAAE,UAAEmD,EAAaE,mBAGtB,SAAC,EAAAnD,MAAK,UACH+C,EAAa7wB,KAAI,SAAC0D,EAAUusB,GAC3B,OACE,UAAC,EAAAtC,GAAE,YACD,SAAC,EAAAI,GAAE,CACDqE,OAAQ,CACNztB,SAAUsrB,EACVuC,WAAYrB,EAAmBztB,GAC/B6rB,SAAU,SAAC8C,EAAQC,GACjB,OAzJb,SAAC5uB,EAAoB4uB,QAAA,IAAAA,IAAAA,GAAA,GACpC3B,EACE2B,EACI,EAAD,KAAK5B,GAAkB,GAAF,CAAEhtB,IAAQ,GAC9BgtB,EAAiBxvB,QAAO,SAAC6e,GAAM,OAAAA,IAAMrc,CAAN,IAEvC,CAmJ8B6rB,CAAS7rB,EAAU4uB,EAAnB,MAGN,SAAC,EAAAvE,GAAE,GAACC,UAAW+C,EAAatgB,WAAS,UAClC/M,EAAS+M,cAEZ,UAAC,EAAAsd,GAAE,GAACC,UAAW+C,EAAaC,UAAQ,WACjCyB,OAAO/uB,EAASmF,SAChB4pB,OAAO/uB,EAAS8a,eAEnB,SAAC,EAAAuP,GAAE,GAACC,UAAW+C,EAAapE,gBAAc,UACvCjpB,EAASkJ,WAEZ,SAAC,EAAAmhB,GAAE,GAACC,UAAW+C,EAAanE,gBAAc,UACvClpB,EAAS+a,iBAEZ,SAAC,EAAAsP,GAAE,GAACC,UAAW+C,EAAalE,YAAU,UACnCnpB,EAAS6a,QAEZ,SAAC,EAAAwP,GAAE,GAACC,UAAW+C,EAAalE,YAAU,UACnCsE,EAAmBztB,IAAa2sB,EACV,aAAnBA,EACExjB,GAAqB,EACrBwjB,EACF,SA9BCJ,EAkCb,aAIN,SAAC,EAAA0B,UAAS,WACR,SAAC,EAAAe,SAAQ,CACP5C,MAAOrnB,EAAE,qCACT5V,GAAG,uBACH8/B,UAAWnC,EACX1B,SAAU2B,kBAS5B,E,2NC9RamC,EAET,SAAC,G,IACH/1B,EAAW,cACXrJ,EAAO,UACPgZ,EAAgB,mBAChBC,EAAK,QACL7D,EAAY,eACZvL,EAAQ,WACR8yB,EAAgB,mBAER1nB,GAAM,IAAA0F,gBAAe,SAAQ,EAE/B0kB,EAAgC,WAAVpmB,EAE5B,OACE,0BACE,SAAC2B,EAAA,GAAW,GACV/P,YAAY,EACZxB,YAAaA,EACbsB,MAAOsK,EAAE,wBACT7L,SAAUpJ,EACVyE,SAAUuU,EACV1O,QAAS,kBACTT,SAAUA,EACV8yB,iBAAkBA,EAClBtP,WAAYgS,GAAmB,UAE9BA,GACC,SAAC,EAAAX,MAAK,GACJ/E,UAAU,cACVrvB,QAAQ,SACRq0B,UAAQ,EACRh0B,MAAOsK,EAAE,sDAAuD,CAC9DlQ,KAAMqQ,KACN,UAEDH,EAAE,0DAGL,SAAC,EAAAqqB,KAAI,GAACjgC,GAAG,iBAAe,WACtB,SAAC,EAAAyb,MAAK,CACJC,GAAI,QACJC,QAAS,8CACTE,OAAQ,CACNnW,KAAMqQ,YAQtB,E,gNC9BamqB,EAET,SAAC,G,IACH1gC,EAAQ,WACR+a,EAAoB,uBACpBX,EAAK,QACLY,EAAa,gBACbE,EAAiB,oBACjBtE,EAAS,YACTJ,EAAO,UACP4E,EAA2B,8BAC3BC,EAAgC,mCAChCta,EAAU,aACV6Z,EAAY,eAEJxE,GAAM,IAAA0F,gBAAe,CAAC,UAAS,EAEjC,GAAsB,IAAAjb,WAAkB,GAAvCgM,EAAM,KAAE6vB,EAAS,KASlBiE,EAAgB,EACpB,SAAC,EAAAC,aAAY,GAAoBvB,QAAShkB,GAAgC,UACvEjF,EAAE,gCADa,iBAGlB,SAAC,EAAAwqB,aAAY,GAAcvB,QAASjkB,GAA2B,UAC5DhF,EAAE,mBADa,WAKdyqB,GACJ,UAAC,EAAAC,mBAAkB,GAACC,OAAQ,CAAEtV,QAAS,aAAY,YACjD,UAAC,EAAAuV,WAAU,YACT,UAAC,EAAAC,YAAW,YACV,SAAC,EAAAR,KAAI,GACHxxB,UAAW,EAAAiyB,aAAA,MACXpG,UAAW,oCAAkC,UAE5C1kB,EAAE,uCAEL,SAAC,EAAAgmB,MAAK,GAACC,aAAc,KAAMvB,UAAW,gCAA8B,UACjEtkB,SAGL,UAAC,EAAA2qB,cAAa,YACZ,SAAC,EAAAC,SAAQ,CACPlE,SA7BO,WACfR,GAAW7vB,EACb,EA4BUnF,QAAQ,SAAC,EAAA25B,YAAW,CAACpE,SAjCd,SAACpwB,GAChB6vB,EAAU7vB,EACZ,EA+BmDrM,GAAG,sBAC5CmgC,cAAeA,EACf9zB,OAAQA,EACRy0B,SAAO,EACPnC,SAAU,EAAAoC,iBAAA,SAEZ,SAAC,EAAAC,kBAAiB,CAACnC,QAASzkB,WAGhC,SAAC,EAAA6mB,gBAAe,WACd,SAAC5F,EAAoB,CACnB9gB,qBAAsBA,EACtBX,MAAOA,EACPY,cAAeA,EACfE,kBAAmBA,EACnBtE,UAAWA,UAMnB,OACE,SAAC,EAAA8qB,OAAM,GACL3gC,WAAYA,EAAU,mBACJ,iCAClB++B,UAAU,GAAI,WAEd,SAAC,EAAA6B,cAAa,GAACd,aAAcA,GAAY,WACvC,SAAC,EAAAe,kBAAiB,GAAC9G,UAAU,8CAA4C,UACtE96B,UAKX,E,sBCrHO,SAAS6hC,IACN,IAAAzrB,GAAM,IAAA0F,gBAAe,SAAQ,EAE/BhV,EAA2C,CAC/C0c,MAAOpN,EAAE,kBACTqjB,SAAUrjB,EAAE,qBACZiN,SAAUjN,EAAE,qBACZmN,aAAcnN,EAAE,yBAChBkN,UAAWlN,EAAE,sBACbsN,YAAatN,EAAE,wBACfuN,SAAUvN,EAAE,qBACZsjB,UAAWtjB,EAAE,sBACbwjB,WAAYxjB,EAAE,uBACdujB,SAAUvjB,EAAE,sBAER0rB,EAA+D,CACnEtI,SAAUpjB,EAAE,+BACZoN,MAAOpN,EAAE,4BACTqjB,SAAUrjB,EAAE,+BACZuN,SAAUvN,EAAE,+BACZsjB,UAAWtjB,EAAE,gCACbwjB,WAAYxjB,EAAE,iCACdujB,SAAUvjB,EAAE,gCAER6P,EAAqD,CACzD8b,IAAK3rB,EAAE,6BACP4rB,IAAK5rB,EAAE,6BACP6rB,MAAO7rB,EAAE,gCAqCX,MAAO,CACLpR,OA3BE,CACFxE,GAAI4V,EAAE,aACNlQ,KAAMkQ,EAAE,eACRkM,UAAWlM,EAAE,oBACbyN,UAAWzN,EAAE,oBACbuM,WAAYvM,EAAE,qBACdhQ,MAAOgQ,EAAE,gBACT6M,SAAU7M,EAAE,mBACZ+M,OAAQ/M,EAAE,iBACV/P,OAAQ+P,EAAE,iBACV/M,KAAM+M,EAAE,eACRgN,KAAMhN,EAAE,eACRyM,QAASzM,EAAE,kBACXsM,OAAQtM,EAAE,iBACVwN,QAASxN,EAAE,kBACXjB,cAAeiB,EAAE,wBACjBN,YAAaM,EAAE,sBACfJ,eAAgBI,EAAE,yBAClB0M,YAAa1M,EAAE,sBACfiM,QAASjM,EAAE,kBACXvM,UAAWuM,EAAE,oBACbxE,SAAUwE,EAAE,mBACZ4N,aAAc5N,EAAE,uBAChByD,QAASzD,EAAE,kBACX4H,GAAI5H,EAAE,4BAINtP,SAAQ,EACRg7B,mBAAkB,EAClB7b,UAAS,EACTic,gBAtCE,CACFH,IAAK,CAAC,EACNC,IAAK,CAAC,EACNC,MAAO,CAAC,GAqCZ,CC5EO,SAASE,IACN,IAAA/rB,GAAM,IAAA0F,gBAAe,SAAQ,EA0CrC,MAAO,CACL9W,OAvCE,CACFkB,KAAMkQ,EAAE,eACR2B,WAAY3B,EAAE,qBACd,iBAAkBA,EAAE,yBACpB,sBAAuBA,EAAE,8BACzB,wBAAyBA,EAAE,gCAC3B,oBAAqBA,EAAE,4BACvB,gCAAiCA,EAAE,wCACnC,sCAAuCA,EACrC,8CAEF,yBAA0BA,EAAE,iCAC5B,wBAAyBA,EAAE,gCAC3B,kBAAmBA,EAAE,0BACrB,eAAgBA,EAAE,uBAClB,gBAAiBA,EAAE,wBACnB,aAAcA,EAAE,qBAChB,mBAAoBA,EAAE,2BACtB,uBAAwBA,EAAE,+BAC1B,iBAAkBA,EAAE,yBACpB,WAAYA,EAAE,mBACd,0CAA2CA,EACzC,kDAEF,uBAAwBA,EAAE,+BAC1B,wCAAyCA,EACvC,gDAEF,yBAA0BA,EAAE,iCAC5B,4BAA6BA,EAAE,oCAC/B,sBAAuBA,EAAE,8BACzB,sBAAuBA,EAAE,8BACzB,oBAAqBA,EAAE,4BACvB,iCAAkCA,EAChC,yCAEFqgB,YAAargB,EAAE,uBAKnB,CC9CO,SAASgsB,IACN,IAAAhsB,GAAM,IAAA0F,gBAAe,SAAQ,EAUrC,MAAO,CACL9W,OAPE,CACFkB,KAAMkQ,EAAE,mCACR6E,gBAAiB7E,EAAE,gCACnB+E,kBAAmB/E,EAAE,qCACrBgE,MAAOhE,EAAE,+BAKb,C,eCdMisB,GAAkB,IAAA/W,OAAK,WAAM,0CAE5B,SAASgX,IAEd,OADqB,UACCD,EAAkB,WAAM,YAChD,C,oNCSME,EAGA,CAAC,OAAQ,kBAAmB,oBAAqB,SAsB1CC,EAAiB,SAA0B,G,MACtD5rB,EAAS,YACThR,EAAQ,WACR8Q,EAAe,kBACfzR,EAAgB,mBAChByB,EAAS,YACTsQ,EAAiB,oBACjB5R,EAAiB,oBACjBd,EAAI,OACJC,EAAO,UACPwC,EAAY,eACZwP,EAAY,eACZM,EAAgB,mBAChBC,EAAoB,uBACpBC,EAAqB,wBAEbX,GAAM,IAAA0F,gBAAe,SAAQ,EAE/B1X,EAASg+B,IAETK,EAAalsB,EAAa7M,OAAS,EACzC,OACE,SAAC,EAAAg5B,YAAW,GAACC,UAAU,EAAMC,mBAAmB,EAAI,aAAc,QAAM,WACtE,SAACC,EAAA,EAAS,CACRp3B,QAAS,EAAA0vB,aAAA,QACT2H,YAAa,aACbC,UAAW3sB,EAAE,qCACbnQ,KAAM2Q,EACNpQ,QAAS+7B,EACTS,aAAc,SAAC,G,IAAEC,EAAM,SAAE1H,EAAE,KAAEj5B,EAAG,MAAO,OACrC,SAACi5B,EAAE,GAED2H,KACa,sBAAXD,EACI,CACEE,SACE,yBACG/sB,EAAE,mDAGP2sB,UAAW,sBACXK,aAAc,CACZrJ,cAAe3jB,EACb,iDAIN1V,GAAS,UAGd0D,EAAOY,OAAOi+B,KAnBV3gC,EAF8B,EAwBvC+gC,WAAY,SAAC,G,IAAEJ,EAAM,SAAE56B,EAAG,MAAEqzB,EAAE,KAAEp5B,EAAG,MACjC,OACE,SAACo5B,EAAE,GAAWC,UAAWv3B,EAAOY,OAAOi+B,IAAO,UAC3C,WACC,OAAQA,GACN,IAAK,OACH,OAAO56B,EAAInC,KACb,IAAK,kBACH,OAAOmC,EAAI4S,gBACb,IAAK,oBACH,OAAO5S,EAAI8S,kBACb,IAAK,QACH,OAAO,SAAC+e,EAAuB,CAAC9f,MAAO/R,EAAI+R,QAEhD,CAXA,KADM9X,EAeb,EACAghC,cAAe,SAAC,G,IAAEj7B,EAAG,MAAEk7B,EAAa,gBAAO,OACzC,SAACA,EAAa,CACZzW,MAAO,CACL,CACEhhB,MAAOsK,EAAE,yCACTipB,QAAS,WAAM,OAAA3oB,EAAgBrO,EAAhB,GAEjB,CACEyD,MAAOsK,EAAE,8BACTipB,QAAS,WAAM,OAAAroB,EAAkB3O,EAAlB,GAEjB,CACEyD,MAAOsK,EAAE,iBACTipB,QAAS,WAAM,OAAAz5B,EAASyC,EAAT,KAboB,EAkB3CpD,iBAAkBA,EAClBu+B,SAAO,KACL,EAACp/B,EAAOY,OAAOkB,MAAO,CACpBuH,KAAM,SACNtH,MAAOoQ,EACPktB,SAAU5sB,EACV6sB,aAAc5sB,EACd6sB,cAAe5sB,EACf6sB,SAAU,SAAChiC,GAAkB,OAAC,yBAAyBiiC,KAAKjiC,EAA/B,EAC7BkiC,aAAc1tB,EAAE,gC,GAGpB1P,UAAWA,EACXpC,KAAMA,EACNyC,aAAcA,EACdxC,QAASA,EACTk+B,WAAYA,EACZr9B,kBAAmBA,EACnB8J,kBAAkB,SAAC4sB,EAAuB,IAC1CiI,qBAAqB,SAACC,EAAA,EAAmB,QAIjD,E,sOC/HaC,EAET,SAAC,G,IAAE71B,EAAa,gBAAEG,EAAY,eACxB6H,GAAM,IAAA0F,gBAAe,SAAQ,EAErC,OACE,+BACE,UAAC,EAAA4mB,YAAW,GACVj3B,QAAS,EAAAy4B,oBAAA,MACTC,QAAS,CAAE1Y,QAAS,aACpB2Y,iBAAiB,EACjB32B,KAAM,QAAM,YAEZ,SAAC,EAAA42B,MAAK,WACJ,SAAC,EAAAC,UAAS,WACR,UAAC,EAAArD,YAAW,GAACnG,UAAW,6BAA2B,YACjD,SAAC,EAAA2F,KAAI,GAACxxB,UAAU,MAAI,UAAEmH,EAAE,mBACxB,uBAAIA,EAAE,gCAIQ,cAAlBhI,GAAmD,aAAlBA,KACjC,SAAC,EAAAm2B,IAAG,GAAC94B,QAAQ,WAAWqvB,UAAU,oBAAkB,WAClD,UAAC,EAAA0J,QAAO,YACN,SAAC,EAAAC,QAAO,GACNC,MAAO,CAAEC,UAAW,GAAG,cACX,yBACZnkC,GAAG,wBAAuB,aACd4V,EAAE,8CACdwuB,OAAQ,gBACRC,SAA4B,cAAlBz2B,GAA6B,WAEvC,SAAC,EAAAW,KAAI,GAACjM,GAAIyL,EAAwB,WAAC,UAChC6H,EAAE,qDAGP,SAAC,EAAAquB,QAAO,GACNC,MAAO,CAAEC,UAAW,GAAG,cACX,wBACZnkC,GAAG,wBAAuB,aACd4V,EAAE,mCACdwuB,OAAQ,eACRC,SAA4B,aAAlBz2B,GAA4B,WAEtC,SAAC,EAAAW,KAAI,GAACjM,GAAIyL,EAAuB,UAAC,UAC/B6H,EAAE,gDAMb,SAAC,EAAA0uB,QAAO,KACR,kBAAKhK,UAAU,6BAA2B,UACvC,WACC,OAAQ1sB,GACN,IAAK,YACH,OACE,SAAC,EAAA6N,MAAK,CACJC,GAAI,QACJC,QAAS,wBACTC,WAAY,EACV,SAAC2oB,EAAA,EAAY,CACXh6B,KAAM,0CACNi6B,OAAQ,mCACRlK,UAAW,kBAKrB,IAAK,WACH,OACE,SAAC,EAAA7e,MAAK,CACJC,GAAI,QACJC,QAAS,uBACTC,WAAY,EACV,SAAC2oB,EAAA,EAAY,CACXh6B,KAAM,0CACNi6B,OAAQ,wBACRlK,UAAW,kBAMxB,CA/BA,WAoCX,E,qBCjHO,SAASmK,EACdhf,EACAhD,G,MAEMiiB,EAAmBjf,EAAU5B,MAAK,SAAC6B,GAAM,OAAAA,EAAE1lB,KAAOyiB,CAAT,IACzCE,GACJ+hB,aAAgB,EAAhBA,EAAkBC,iBACkD,QAApE,EAAAD,aAAgB,EAAhBA,EAAkBjT,QAAQpjB,QAAO,SAAC6e,GAAM,OAAmB,KAAjBA,EAAEc,UAAJ,IAA0B,UAAE,eAAEhuB,IACxE,MAAO,CAAEyiB,SAAQ,EAAEE,OAAM,EAC3B,C,wNC0BE,OACE,CACEjhB,QAAS,CACPkjC,aAAc,CAAC,EACfzV,WAAOjvB,EACP2kC,KAAM,CAAC,EACPC,mBAAe5kC,GAEjB6kC,QAAS,CAAC,EACVC,4BAA4B,EAC5BC,OAAQ,CACNvjC,QAAS,CAAC,EACVwjC,OAAQ,CAAC,EAmBTC,SAAU,CAAC,GAMbC,QAAS,qBACTplC,GAAI,sBACJqlC,OAAQ,CACNC,mBAAoB,CAClBxtB,MAAO,oBACPytB,OAAQ,CACN,CACEC,KAAM,cACNC,OAAQ,aAEV,CACED,KAAM,wBACNC,OAAQ,uBAEV,CACED,KAAM,uBACNC,OAAQ,sBAEV,CACEA,OAAQ,iBAIdC,UAAW,CACTC,KAAM,WAERC,oBAAqB,CACnBD,KAAM,WAERE,mBAAoB,CAClBF,KAAM,WAERG,YAAa,CACX74B,KAAM,WACNo4B,OAAQ,CACNx/B,OAAQ,CACNu/B,QAAS,cACTC,OAAQ,CACNU,YAAa,CACXJ,KAAM,eAERK,WAAY,CACVluB,MAAO,gBACPytB,OAAQ,CAAC,cAEXU,UAAW,CACTN,KAAM,cAGVjnB,GAAI,CACFwnB,OAAQ,CACN96B,YACE,8IACFq6B,OAAQ,iBAIdZ,KAAM,CACJO,QAAS,UACTC,OAAQ,CACNc,QAAS,CACPR,KAAM,eAERS,MAAO,CACLtuB,MAAO,4BACP6tB,KAAM,YACNjnB,GAAI,CACF2nB,aAAc,CACZZ,OAAQ,WAEVa,OAAQ,CACNb,OAAQ,YAIdc,OAAQ,CACNzuB,MAAO,CAAC,4BAA6B,eACrC6tB,KAAM,aACNjnB,GAAI,CACF8nB,cAAe,CACbf,OAAQ,SAEVgB,YAAa,CACX7H,QAAS,mBACT6G,OAAQ,aAIdiB,MAAO,CACLz5B,KAAM,UAGVyR,GAAI,CACF2nB,aAAc,CACZj7B,YACE,sQACFq6B,OAAQ,cAIdjhC,OAAQ,CACNmhC,KAAM,eACN14B,KAAM,WACNo4B,OAAQ,CACN3/B,KAAM,CACJ0/B,QAAS,WACTC,OAAQ,CACNsB,MAAO,CACLhB,KAAM,aAERQ,QAAS,CACPruB,MAAO,eACP6tB,KAAM,eAERS,MAAO,CACLT,KAAM,YACN14B,KAAM,SAERm2B,SAAU,CACRmC,OAAQ,CACN,CACEC,KAAM,cACNC,OAAQ,SAEV,CACED,KAAM,cACNC,OAAQ,SAEV,CACEA,OAAQ,cAKhB/mB,GAAI,CACFwnB,OAAQ,CACNT,OAAQ,aAEVmB,WAAY,CACVhI,QAAS,UACT6G,OAAQ,eAIdhjB,SAAU,CACR2iB,QAAS,WACTC,OAAQ,CACNjC,SAAU,CACRmC,OAAQ,CACN,CACEC,KAAM,kBACNC,OAAQ,SAEV,CACEA,OAAQ,aAIdU,QAAS,CACPruB,MAAO,eACP6tB,KAAM,mBAERS,MAAO,CACLT,KAAM,gBACN14B,KAAM,UAGVyR,GAAI,CACFwnB,OAAQ,CACNT,OAAQ,aAEVoB,eAAgB,CACdjI,QAAS,cACT4G,KAAM,oBACNC,OAAQ,eAId9iB,OAAQ,CACNyiB,QAAS,WACTC,OAAQ,CACNjC,SAAU,CACRmC,OAAQ,CACN,CACEC,KAAM,gBACNC,OAAQ,SAEV,CACEA,OAAQ,aAIdU,QAAS,CACPruB,MAAO,eACP6tB,KAAM,iBAERS,MAAO,CACLT,KAAM,cACN14B,KAAM,UAGVyR,GAAI,CACFwnB,OAAQ,CACNT,OAAQ,aAEVoB,eAAgB,CACdpB,OAAQ,aAEVqB,aAAc,CACZlI,QAAS,YACT4G,KAAM,kBACNC,OAAQ,eAId7iB,KAAM,CACJwiB,QAAS,WACTC,OAAQ,CACNjC,SAAU,CACRmC,OAAQ,CACN,CACEC,KAAM,qBACNC,OAAQ,QAEV,CACED,KAAM,UACNC,OAAQ,WAEV,CACED,KAAM,aACNC,OAAQ,SAEV,CACED,KAAM,iBACNC,OAAQ,YAEV,CACED,KAAM,gCACNC,OAAQ,mBAEV,CACED,KAAM,kBACNC,OAAQ,aAEV,CACEA,OAAQ,WAIdsB,KAAM,CACJjvB,MAAO,eACP6tB,KAAM,YAERqB,SAAU,CACRlvB,MAAO,eACP6tB,KAAM,gBAERsB,gBAAiB,CACfnvB,MAAO,eACP6tB,KAAM,uBAERD,UAAW,CACT5tB,MAAO,eACP6tB,KAAM,iBAERS,MAAO,CACLT,KAAM,YACN14B,KAAM,SAERD,MAAO,CACL8K,MAAO,eACP6tB,KAAM,aAERuB,QAAS,CACP97B,YACE,iEACF+7B,OAAQ,CACNC,IAAK,WACLC,OAAQ,CACN,CACEzI,QAAS,WACT6G,OAAQ,aAGZ57B,QAAS,CACP,CACE47B,OAAQ,WAIdE,KAAM,gBAGVjnB,GAAI,CACFwnB,OAAQ,CACNT,OAAQ,aAEVoB,eAAgB,CACdpB,OAAQ,aAEVqB,aAAc,CACZrB,OAAQ,aAEV6B,WAAY,CACV1I,QAAS,UACT4G,KAAM,gBACNC,OAAQ,aAEV8B,cAAe,CACb9B,OAAQ,eAId5jB,QAAS,CACPujB,QAAS,WACTC,OAAQ,CACNjC,SAAU,CACRmC,OAAQ,CACN,CACEC,KAAM,cACNC,OAAQ,eAEV,CACED,KAAM,qBACNC,OAAQ,sBAEV,CACED,KAAM,oBACNC,OAAQ,qBAEV,CACEr6B,YACE,sDACFq6B,OAAQ,6BAId+B,YAAa,CACXp8B,YACE,gKACFu6B,KAAM,CAAC,YAAa,gBACpB7tB,MAAO,sBACP7K,KAAM,SAERw6B,mBAAoB,CAClBr8B,YACE,gKACFu6B,KAAM,CAAC,YAAa,eAAgB,sBACpC7tB,MAAO,2BACP7K,KAAM,SAERy6B,kBAAmB,CACjBt8B,YACE,6EACFg6B,QAAS,UACTn4B,KAAM,QACNo4B,OAAQ,CACNc,QAAS,CAAC,EACVC,MAAO,CACLtuB,MAAO,uBACP6tB,KAAM,eACN14B,KAAM,UAGVyR,GAAI,CACFipB,mBAAoB,CAClB,CACE/I,QAAS,2BACT4G,KAAM,oDACNC,OAAQ,UAEV,CACED,KAAM,qBACNC,OAAQ,aAKhBmC,wBAAyB,CACvBx8B,YACE,0HACFg6B,QAAS,QACTn4B,KAAM,QACNo4B,OAAQ,CACNsB,MAAO,CAAC,EACRviB,aAAc,CACZtM,MAAO,uBACP6tB,KAAM,eACN14B,KAAM,SAER46B,QAAS,CACP/vB,MAAO,uBACP6tB,KAAM,eACN14B,KAAM,UAGVyR,GAAI,CACFipB,mBAAoB,CAClB,CACE/I,QAAS,2BACT4G,KAAM,oDACNC,OAAQ,iBAEV,CACED,KAAM,qBACNC,OAAQ,kBAGZqC,cAAe,CACblJ,QAAS,sBACT4G,KAAM,kBACNC,OAAQ,eAKhB/mB,GAAI,CACFmoB,eAAgB,CACdjI,QAAS,oBACTxzB,YACE,kFACFq6B,OAAQ,gBAKhB4B,OAAQ,CACN5B,OAAQ,iDAId4B,OAAQ,CACN5B,OAAQ,UAGZiB,MAAO,CACLz5B,KAAM,WAIZ,CACE2xB,QAAS,CACPmJ,mBAAmB,SAAO,SAACrmC,GACzB,MAAO,CACLmjC,KAAM,KACAnjC,EAAQkjC,aAAazS,gBACrBsS,EACE/iC,EAAQkjC,aAAaoD,mBACrBtmC,EAAQkjC,aAAazS,iBAEvB,CAAC,GAGX,IACAkU,cAAc,QAAK,gBACnB4B,SAAS,SAAO,SAACvmC,EAAS,G,IAAEgE,EAAI,OAC9B,MAA8B,eAA1BhE,EAAQojC,cACH,CACLD,KAAM,OAAKnjC,EAAQmjC,MAAI,CAAEn/B,KAAI,IAC7Bo/B,mBAAe5kC,GAGZ,CAAE2kC,KAAM,OAAKnjC,EAAQmjC,MAAI,CAAEn/B,KAAI,IACxC,IACAwiC,aAAa,SAAO,SAACxmC,EAAS,G,IAAE+gB,EAAQ,WACtC,MAAO,CACLoiB,KAAM,OACDnjC,EAAQmjC,MACRJ,EACD/iC,EAAQkjC,aAAaoD,mBACrBvlB,IAGJ0M,WAAOjvB,EAEX,IACAioC,WAAW,SAAO,SAACzmC,EAAS,G,IAAEihB,EAAM,SAClC,MAA8B,uBAA1BjhB,EAAQojC,cACH,CACLD,KAAM,OAAKnjC,EAAQmjC,MAAI,CAAEliB,OAAM,IAC/BwM,WAAOjvB,EACP4kC,mBAAe5kC,GAGZ,CACL2kC,KAAM,OACDnjC,EAAQmjC,MAAI,CACfliB,OAAM,IAERwM,WAAOjvB,EAEX,IACAkoC,SAAS,SAAO,SAAC1mC,EAAS,G,IAAEkhB,EAAI,OAAO,OACrCiiB,KAAM,OACDnjC,EAAQmjC,MAAI,CACfjiB,KAAI,IAH+B,IAMvCylB,UAAU,SAAO,SAAC3mC,EAASod,GACzB,IAAMqQ,EAAQrQ,EAAMrZ,KACd6iC,EAAenZ,EAAMzqB,MAAK,SAAC0I,EAAGm7B,GAAM,OAAAn7B,EAAEzE,MAAQ4/B,EAAE5/B,KAAZ,IAAmB,GAC7D,MAAO,CACLwmB,MAAK,EACL0V,KAAM,OACDnjC,EAAQmjC,MAAI,CACfjiB,KAAM0lB,IAGZ,IAEAE,2BAA2B,SAAO,SAACC,GAAa,OAC9C3D,mBAAe5kC,EAD+B,IAGhDwoC,kBAAkB,SAAO,SAACD,EAAU,GAClC,MAAO,CACL3D,cAFuC,QAI3C,IACA6D,aAAa,SAAW,SAACjnC,GACvB,IAAMmjC,EAAOnjC,EAAQmjC,KAUrB,MAAO,CACL53B,KAAM,OACNxH,KAVgC,CAChCoD,KAAM,WACNnD,KAAMm/B,EAAKn/B,KACX+c,SAAUoiB,EAAKpiB,SACfE,OAAQkiB,EAAKliB,OACb4F,OAAQsc,EAAKjiB,KAAK5iB,GAClB6hB,QAASgjB,EAAKhjB,SAMlB,IACA+mB,eAAe,QAAK,UACpBC,sBAAsB,QAAK,iBAC3BC,qBAAqB,SAAO,SAACpnC,GAC3B,IAAMmjC,EAAO,KAAKnjC,EAAQmjC,MAE1B,OADAA,EAAKhjB,QAAU,UACR,CAAEgjB,KAAI,EACf,IACAkE,0BAA0B,SAAO,SAACrnC,EAASod,GACzC,IAAM+lB,EAAO,KAAKnjC,EAAQmjC,MAC1B,GAAmB,uBAAf/lB,EAAM7R,KACR43B,EAAKhjB,QAAU/C,EAAMsF,iBAChB,CAEL,IAAMN,EAAKpiB,EAAQkjC,aAAanjB,yBAAyB,GACzDojB,EAAKhjB,QAAU,CACbqC,YAAaJ,EAAGI,YAChBE,aAAcN,EAAGC,cAAc,G,CAGnC,MAAO,CAAE8gB,KAAI,EACf,IACAmE,mBAAmB,SAAO,SAACtnC,GACzB,IAAMmjC,EAAO,KAAKnjC,EAAQmjC,MAE1B,OADAA,EAAKhjB,aAAU3hB,EACR,CAAE2kC,KAAI,EACf,KAEFoE,OAAQ,CACNC,YAAa,SAAC,G,IAAEtE,EAAY,eAC1B,YAAiB1kC,IAAjB0kC,GACsC,iBAAtCA,EAAauE,oBADb,EAEFC,sBAAuB,SAAC,G,IAAExE,EAAY,eACpC,YAAiB1kC,IAAjB0kC,GACsC,yBAAtCA,EAAauE,oBADb,EAEFE,qBAAsB,SAAC,G,IAAEzE,EAAY,eACnC,YAAiB1kC,IAAjB0kC,GACsC,wBAAtCA,EAAauE,oBADb,EAEFG,YAAa,SAAC,G,IAAEzE,EAAI,OAClB,YAAc3kC,IAAd2kC,EAAKn/B,MAA2C,IAArBm/B,EAAKn/B,KAAKwD,MAArC,EACFqgC,YAAa,SAAC,G,IAAE1E,EAAI,OAClB,qCAA+BxB,KAAKwB,EAAKn/B,MAAQ,GAAjD,EACF8jC,gBAAiB,SAAC,G,IAAE3E,EAAI,OAAED,EAAY,eAC9B6E,EAAuB7E,aAAY,EAAZA,EAAcoD,mBAAmBnkB,MAC5D,SAAC6B,GAAM,OAAAA,EAAE1lB,KAAO6kC,EAAKpiB,QAAd,IAET,QAEGmiB,aAAY,EAAZA,EAAcoD,qBAAsB,IAAI9+B,OAAS,QAEzBhJ,IAAzBupC,CAEJ,EACAC,cAAe,SAAC,G,IAAE7E,EAAI,OAAED,EAAY,eAC5B6E,EAAuB7E,aAAY,EAAZA,EAAcoD,mBAAmBnkB,MAC5D,SAAC6B,GAAM,OAAAA,EAAE1lB,KAAO6kC,EAAKpiB,QAAd,IAET,YAEkBviB,IAAhB2kC,EAAKliB,aAGHziB,KADFupC,aAAoB,EAApBA,EAAsBhY,QAAQ5N,MAAK,SAACqJ,GAAM,OAAAA,EAAEltB,KAAO6kC,EAAKliB,MAAd,IAG9C,EACAgnB,mBAAoB,SAAC,G,IAAE9E,EAAI,OACzB,YAAkB3kC,IAAlB2kC,EAAKpiB,eAA0CviB,IAAhB2kC,EAAKliB,MAApC,EACFinB,QAAS,SAAC,GAAc,YAAU1pC,IAAjB,OAAO,EACxB2pC,WAAY,SAAC,G,IAAE1a,EAAK,QAAO,YAAUjvB,IAAVivB,GAAwC,IAAjBA,EAAMjmB,MAA7B,EAC3B4gC,eAAgB,SAAC,G,MAAEjF,EAAI,OACrB,YAAqB3kC,IADc,iBAEF,KAAjB,QAAT,EAAA2kC,EAAKjiB,YAAI,eAAEoL,WACpB,EACA+b,8BAA+B,SAAC,EAAUr3B,EAAGs3B,G,IAAXnF,EAAI,OACpC,OAAImF,EAAKpwB,MAAMqwB,OAAO,mBAGE/pC,IAAjB2kC,EAAKhjB,OACd,EACAqoB,gBAAiB,SAAC,G,IAAErF,EAAI,OAAED,EAAY,eACpC,QAAqB1kC,IAAjB0kC,IAA+BC,EAAKjiB,KAAM,OAAO,EACrD,IAAMunB,EACa,YAAjBtF,EAAKhjB,cAA0C3hB,IAAjB2kC,EAAKhjB,QAC/B+iB,EAAajS,sBACbiS,EAAahS,0BACnB,OAAKuX,GACEtF,EAAKjiB,KAAKja,MAAQwhC,CAC3B,EACAC,kBAAmB,SAAC1oC,EAASod,GAC3B,OAAApd,EAAQmjC,KAAKpiB,WAAa3D,EAAM2D,QAAhC,EACF4nB,gBAAiB,SAAC3oC,EAASod,GACzB,OAAApd,EAAQmjC,KAAKliB,SAAW7D,EAAM6D,MAA9B,EACF2nB,cAAe,SAAC5oC,EAASod,GAAK,MAC5B,OAAiB,QAAjB,EAAApd,EAAQmjC,KAAKjiB,YAAI,eAAE5iB,MAAO8e,EAAM8D,KAAK5iB,EAAE,EACzCuqC,YAAa,SAAC7oC,GACZ,OAAyD,IAAzDA,EAAQkjC,aAAanjB,yBAAyBvY,MAA9C,EACFu+B,mBAAoB,SAAC/lC,GACnB,YAA+CxB,IAA/CwB,EAAQkjC,aAAajS,uBAGR,IAFbjxB,EAAQkjC,aAAanjB,yBAAyByN,SAC5C,SAACO,GAAM,OAAAA,EAAE1L,aAAF,IACP7a,MAHF,EAIFw+B,kBAAmB,SAAChmC,GAClB,YAA+CxB,IAA/CwB,EAAQkjC,aAAajS,uBACrBjxB,EAAQkjC,aAAanjB,yBAAyBvY,OAAS,CADvD,EAEFshC,kDAAmD,SACjD,EACA,G,IADE3F,EAAI,OAAED,EAAY,eAClBxgB,EAAY,eAEd,YAA2ClkB,IAA3C0kC,EAAahS,2BACbgS,EAAahS,0BAA4B,IACX,QAA7BxO,EAAaF,aACZ2gB,EAAKpiB,WAAa2B,EAAaF,YAHjC,EAIFumB,gBAAiB,SAAC/oC,GAChB,YAA+CxB,IAA/CwB,EAAQkjC,aAAajS,uBACrBjxB,EAAQkjC,aAAajS,sBAAwB,CAD7C,EAEF+X,mBAAoB,SAAC,GAAa,YAAkBxqC,IAAzB,OAAYuiB,QAAL,K,gNCtrBxC,OACE,CACE/gB,QAAS,CACPkjC,aAAc,CAAC,EACfzV,WAAOjvB,EACP2kC,KAAM,CAAC,EACPC,mBAAe5kC,GAEjB6kC,QAAS,CAAC,EACVC,4BAA4B,EAC5BC,OAAQ,CACNvjC,QAAS,CAAC,EACVwjC,OAAQ,CAAC,EAYTC,SAAU,CAAC,GAMbC,QAAS,qBACTplC,GAAI,mBACJqlC,OAAQ,CACNC,mBAAoB,CAClBxtB,MAAO,oBACPytB,OAAQ,CACN,CACEC,KAAM,cACNC,OAAQ,aAEV,CACED,KAAM,qBACNC,OAAQ,oBAEV,CACEA,OAAQ,iBAIdkF,UAAW,CACThF,KAAM,WAERiF,iBAAkB,CAChBjF,KAAM,WAERE,mBAAoB,CAClBF,KAAM,WAERG,YAAa,CACX74B,KAAM,WACNo4B,OAAQ,CACNx/B,OAAQ,CACNu/B,QAAS,cACTC,OAAQ,CACNU,YAAa,CACXJ,KAAM,eAERK,WAAY,CACVluB,MAAO,gBACPytB,OAAQ,CAAC,cAEXU,UAAW,CACTN,KAAM,cAGVjnB,GAAI,CACFwnB,OAAQ,CACN96B,YACE,8IACFq6B,OAAQ,iBAIdZ,KAAM,CACJO,QAAS,UACTC,OAAQ,CACNc,QAAS,CACPR,KAAM,eAERS,MAAO,CACLtuB,MAAO,4BACP4G,GAAI,CACF2nB,aAAc,CACZZ,OAAQ,WAEVa,OAAQ,CACNb,OAAQ,YAIdc,OAAQ,CACNzuB,MAAO,CAAC,4BAA6B,eACrC6tB,KAAM,aACNjnB,GAAI,CACF8nB,cAAe,CACbf,OAAQ,SAEVgB,YAAa,CACX7H,QAAS,mBACT6G,OAAQ,aAIdiB,MAAO,CACLz5B,KAAM,UAGVyR,GAAI,CACF2nB,aAAc,CACZj7B,YACE,sQACFq6B,OAAQ,cAIdjhC,OAAQ,CACNmhC,KAAM,eACN14B,KAAM,WACNo4B,OAAQ,CACN3/B,KAAM,CACJ0/B,QAAS,WACTC,OAAQ,CACNsB,MAAO,CACLhB,KAAM,aAERQ,QAAS,CACPruB,MAAO,eACP6tB,KAAM,eAERS,MAAO,CACLT,KAAM,YACN14B,KAAM,SAERm2B,SAAU,CACRmC,OAAQ,CACN,CACEC,KAAM,cACNC,OAAQ,SAEV,CACED,KAAM,cACNC,OAAQ,SAEV,CACEA,OAAQ,cAKhB/mB,GAAI,CACFwnB,OAAQ,CACNT,OAAQ,aAEVmB,WAAY,CACVhI,QAAS,UACT6G,OAAQ,eAIdhjB,SAAU,CACR2iB,QAAS,WACTC,OAAQ,CACNjC,SAAU,CACRmC,OAAQ,CACN,CACEC,KAAM,kBACNC,OAAQ,SAEV,CACEA,OAAQ,aAIdU,QAAS,CACPruB,MAAO,eACP6tB,KAAM,mBAERS,MAAO,CACLT,KAAM,gBACN14B,KAAM,UAGVyR,GAAI,CACFwnB,OAAQ,CACNT,OAAQ,aAEVoB,eAAgB,CACdjI,QAAS,cACT4G,KAAM,oBACNC,OAAQ,eAId9iB,OAAQ,CACNyiB,QAAS,WACTC,OAAQ,CACNjC,SAAU,CACRmC,OAAQ,CACN,CACEC,KAAM,gBACNC,OAAQ,SAEV,CACEA,OAAQ,aAIdU,QAAS,CACPruB,MAAO,eACP6tB,KAAM,iBAERS,MAAO,CACLT,KAAM,cACN14B,KAAM,UAGVyR,GAAI,CACFwnB,OAAQ,CACNT,OAAQ,aAEVoB,eAAgB,CACdpB,OAAQ,aAEVqB,aAAc,CACZlI,QAAS,YACT4G,KAAM,kBACNC,OAAQ,eAId7iB,KAAM,CACJwiB,QAAS,WACTC,OAAQ,CACNjC,SAAU,CACRmC,OAAQ,CACN,CACEC,KAAM,sBACNC,OAAQ,QAEV,CACED,KAAM,UACNC,OAAQ,WAEV,CACED,KAAM,aACNC,OAAQ,SAEV,CACEA,OAAQ,WAIdsB,KAAM,CACJjvB,MAAO,eACP6tB,KAAM,YAERS,MAAO,CACLT,KAAM,YACN14B,KAAM,SAERD,MAAO,CACL8K,MAAO,eACP6tB,KAAM,aAERuB,QAAS,CACP97B,YACE,iEACF+7B,OAAQ,CACNC,IAAK,WACLC,OAAQ,CACN,CACEzI,QAAS,WACT6G,OAAQ,aAGZ57B,QAAS,CACP,CACE47B,OAAQ,WAIdE,KAAM,gBAGVjnB,GAAI,CACFwnB,OAAQ,CACNT,OAAQ,aAEVoB,eAAgB,CACdpB,OAAQ,aAEVqB,aAAc,CACZrB,OAAQ,gBAKhB4B,OAAQ,CACN5B,OAAQ,8CAId4B,OAAQ,CACN5B,OAAQ,UAGZiB,MAAO,CACLz5B,KAAM,WAIZ,CACE2xB,QAAS,CACPmJ,mBAAmB,SAAO,SAACrmC,GACzB,MAAO,CACLmjC,KAAM,KACAnjC,EAAQkjC,aAAazS,gBACrBsS,EACE/iC,EAAQkjC,aAAaoD,mBACrBtmC,EAAQkjC,aAAazS,iBAEvB,CAAC,GAGX,IACAkU,cAAc,QAAK,gBACnB4B,SAAS,SAAO,SAACvmC,EAAS,G,IAAEgE,EAAI,OAC9B,MAA8B,eAA1BhE,EAAQojC,cACH,CACLD,KAAM,OAAKnjC,EAAQmjC,MAAI,CAAEn/B,KAAI,IAC7Bo/B,mBAAe5kC,GAGZ,CAAE2kC,KAAM,OAAKnjC,EAAQmjC,MAAI,CAAEn/B,KAAI,IACxC,IACAwiC,aAAa,SAAO,SAACxmC,EAAS,G,IAAE+gB,EAAQ,WACtC,MAAO,CACLoiB,KAAM,OACDnjC,EAAQmjC,MACRJ,EACD/iC,EAAQkjC,aAAaoD,mBACrBvlB,IAGJ0M,WAAOjvB,EAEX,IACAioC,WAAW,SAAO,SAACzmC,EAAS,G,IAAEihB,EAAM,SAClC,MAA8B,uBAA1BjhB,EAAQojC,cACH,CACLD,KAAM,OAAKnjC,EAAQmjC,MAAI,CAAEliB,OAAM,IAC/BwM,WAAOjvB,EACP4kC,mBAAe5kC,GAGZ,CACL2kC,KAAM,OACDnjC,EAAQmjC,MAAI,CACfliB,OAAM,IAERwM,WAAOjvB,EAEX,IACAmoC,UAAU,SAAO,SAACI,EAAU3pB,GAE1B,MAAO,CACLqQ,MAFYrQ,EAAMrZ,KAItB,IAEA+iC,2BAA2B,SAAO,SAACC,GAAa,OAC9C3D,mBAAe5kC,EAD+B,IAGhDwoC,kBAAkB,SAAO,SAACD,EAAU,GAAc,OAChD3D,cADyC,QAAO,IAGlD6D,aAAa,SAAW,SAACjnC,GACvB,IAAMmjC,EAAOnjC,EAAQmjC,KAUrB,MAAO,CACL53B,KAAM,OACNxH,KAXgC,CAChCoD,KAAM,YACNnD,KAAMm/B,EAAKn/B,KACX+c,SAAUoiB,EAAKpiB,SACfE,OAAQkiB,EAAKliB,OAEb4F,OAAQ7mB,EAAQytB,MAAO0b,MAAM7qC,GAC7B6hB,aAAS3hB,GAMb,IACA0oC,eAAe,QAAK,WAEtBK,OAAQ,CACN6B,YAAa,SAAC,G,IAAElG,EAAY,eAC1B,YAAiB1kC,IAAjB0kC,GACsC,SAAtCA,EAAauE,oBADb,EAEF4B,mBAAoB,SAAC,G,IAAEnG,EAAY,eACjC,YAAiB1kC,IAAjB0kC,GACsC,gBAAtCA,EAAauE,oBADb,EAEFG,YAAa,SAAC,G,IAAEzE,EAAI,OAClB,YAAc3kC,IAAd2kC,EAAKn/B,MAA2C,IAArBm/B,EAAKn/B,KAAKwD,MAArC,EACFqgC,YAAa,SAAC,G,IAAE1E,EAAI,OAClB,qCAA+BxB,KAAKwB,EAAKn/B,MAAQ,GAAjD,EACF8jC,gBAAiB,SAAC,G,IAAE3E,EAAI,OAAED,EAAY,eAC9B6E,EAAuB7E,aAAY,EAAZA,EAAcoD,mBAAmBnkB,MAC5D,SAAC6B,GAAM,OAAAA,EAAE1lB,KAAO6kC,EAAKpiB,QAAd,IAET,QAEGmiB,aAAY,EAAZA,EAAcoD,qBAAsB,IAAI9+B,OAAS,QAEzBhJ,IAAzBupC,CAEJ,EACAC,cAAe,SAAC,G,IAAE7E,EAAI,OAAED,EAAY,eAC5B6E,EAAuB7E,aAAY,EAAZA,EAAcoD,mBAAmBnkB,MAC5D,SAAC6B,GAAM,OAAAA,EAAE1lB,KAAO6kC,EAAKpiB,QAAd,IAET,YAEkBviB,IAAhB2kC,EAAKliB,aAGHziB,KADFupC,aAAoB,EAApBA,EAAsBhY,QAAQ5N,MAAK,SAACqJ,GAAM,OAAAA,EAAEltB,KAAO6kC,EAAKliB,MAAd,IAG9C,EACAqoB,oBAAqB,SAAC,G,IAAEnG,EAAI,OAC1B,YAAkB3kC,IAAlB2kC,EAAKpiB,eAA0CviB,IAAhB2kC,EAAKliB,MAApC,EACFinB,QAAS,SAAC,GAAc,YAAU1pC,IAAjB,OAAO,EACxB2pC,WAAY,SAAC,G,IAAE1a,EAAK,QAClB,YAAUjvB,IAAVivB,GAAiD,IAA1BA,EAAM2G,SAAS5sB,MAAtC,EACFkhC,kBAAmB,SAAC1oC,EAASod,GAC3B,OAAApd,EAAQmjC,KAAKpiB,WAAa3D,EAAM2D,QAAhC,EACF4nB,gBAAiB,SAAC3oC,EAASod,GACzB,OAAApd,EAAQmjC,KAAKliB,SAAW7D,EAAM6D,MAA9B,MCrbR,OACE,CACEjhB,QAAS,CACP+jB,eAAWvlB,EACXiyB,qBAAiBjyB,EACjByI,WAAOzI,EACP0kC,kBAAc1kC,GAEhB8kC,4BAA4B,EAC5BD,QAAS,CAAC,EACVE,OAAQ,CACNvjC,QAAS,CAAC,EACVwjC,OAAQ,CAAC,EAsCTC,SAAU,CAAC,GAkBbnlC,GAAI,sBACJolC,QAAS,UACTC,OAAQ,CACN6B,QAAS,CACP97B,YAAa,qDACbu6B,KAAM,UACNP,QAAS,QACTC,OAAQ,CACN18B,MAAO,CACLy8B,QAAS,0BACTC,OAAQ,CACN,0BAA2B,CACzB8B,OAAQ,CACNC,IAAK,qBACLv9B,QAAS,CACP,CACE+0B,QAAS,yBACT6G,OAAQ,cAId/mB,GAAI,CACF,2BAA4B,CAC1BkgB,QAAS,uBACT6G,OAAQ,YAEV,wBAAyB,CACvB7G,QAAS,wBACT6G,OAAQ,YAEV,8BAA+B,CAC7BA,OAAQ,qCAId3P,SAAU,CACR7oB,KAAM,QACNs4B,OAAQ,CACNE,OAAQ,oDAGZ1P,UAAW,CACT9oB,KAAM,QACNs4B,OAAQ,CACNE,OAAQ,oDAGZ,kCAAmC,CACjC0B,OAAQ,CACNC,IAAK,6BACLv9B,QAAS,CACP,CACE+0B,QAAS,0BACT6G,OAAQ,eAId/mB,GAAI,CACF,iBAAkB,CAChBkgB,QAAS,mBACT6G,OAAQ,aAEV,sBAAuB,CACrB7G,QAAS,wBACT6G,OAAQ,aAEV,wBAAyB,CACvB7G,QAAS,0BACT6G,OAAQ,iBAMlB,qBAAsB,CACpB0B,OAAQ,CACNC,IAAK,4BACLv9B,QAAS,CACP,CACE+0B,QAAS,mCACT6G,OAAQ,WAId/mB,GAAI,CACF,kCAAmC,CACjCkgB,QAAS,eACT6G,OAAQ,SAEV,mCAAoC,CAClC7G,QAAS,mCACT6G,OAAQ,WAIdziB,MAAO,CACL/V,KAAM,QACN6K,MAAO,oBAGXuvB,OAAQ,CACN,CACE7B,KAAM,gBACNC,OAAQ,iBAEV,CACED,KAAM,iBACNC,OAAQ,kBAEV,CACEA,OAAQ,wBAId,qBAAsB,CACpBE,KAAM,oBACN14B,KAAM,SAER,gBAAiB,CACfk6B,OAAQ,CACNC,IAAK,eACLpnC,GAAI,uBAEN2lC,KAAM,eACNP,QAAS,OACTC,OAAQ,CACN0B,KAAM,CACJroB,GAAI,CACFusB,KAAM,CACJxF,OAAQ,YAIdc,OAAQ,CACNY,OAAQ,CACNC,IAAK,kBAEPzB,KAAM,SACNjnB,GAAI,CACF8nB,cAAe,CACbf,OAAQ,iCAEVgB,YAAa,CACX7H,QAAS,kCACT6G,OAAQ,YAMlB,iBAAkB,CAChB0B,OAAQ,CACNC,IAAK,YACLpnC,GAAI,oBAEN2lC,KAAM,YACNP,QAAS,OACTC,OAAQ,CACN0B,KAAM,CACJroB,GAAI,CACFusB,KAAM,CACJxF,OAAQ,YAIdc,OAAQ,CACNY,OAAQ,CACNC,IAAK,kBAEPzB,KAAM,SACNjnB,GAAI,CACF8nB,cAAe,CACbf,OAAQ,iCAEVgB,YAAa,CACX7H,QAAS,+BACT6G,OAAQ,YAMlByF,SAAU,CACRj+B,KAAM,WAIZ,CACE2xB,QAAS,CAEPuM,uBAAuB,SAAO,SAACz4B,GAAM,OACnC/J,MAAO,CACLE,KAAM,YACNsgC,qBAAsB,aAHW,IAMrCiC,yBAAyB,SAAO,SAAC14B,GAAM,OACrC/J,MAAO,CACLE,KAAM,YACNsgC,qBAAsB,eAHa,IAMvCkC,kBAAkB,SAAO,SAAC34B,GAAM,OAC9B/J,MAAO,CACLE,KAAM,YACNsgC,qBAAsB,QAHM,IAMhCmC,sBAAsB,SAAO,SAAC54B,EAAGoM,GAAU,OACzCnW,MAAO,CACLE,KAAM,WACNsgC,qBAAsB,YACtBxW,sBAAuB7T,EAAMnW,MAAMgqB,sBACnClR,yBAA0B3C,EAAMnW,MAAM8Y,yBACtCmR,0BAA2B9T,EAAMnW,MAAMiqB,2BANA,IAS3C2Y,uBAAuB,SAAO,SAAC74B,EAAGoM,GAAU,OAC1CnW,MAAO,CACLE,KAAM,WACNsgC,qBAAsB,eACtB1nB,yBAA0B3C,EAAMnW,MAAM8Y,yBACtCmR,0BAA2B,EAC3BD,sBAAuB,GANiB,IAS5C6Y,wBAAwB,SAAO,SAAC94B,GAAM,OACpC/J,MAAO,CACLE,KAAM,WACNsgC,qBAAsB,uBACtB1nB,yBAA0B,GAC1BmR,0BAA2B,EAC3BD,sBAAuB,GANW,IAStC8Y,cAAc,SAAO,SAAC/4B,EAAGoM,GACvB,MAAO,CACL2G,UAAW3G,EAAM2G,UACjB0M,gBAAiBrT,EAAMqT,gBAE3B,IACAuZ,kCAAkC,SAAO,SAAChqC,GAExC,IAAMiH,EAAQjH,EAAQiH,MAMtB,MALmB,aAAfA,EAAME,KACRF,EAAMwgC,qBAAuB,sBAE7BxgC,EAAMwgC,qBAAuB,cAExB,CACL1jB,UAAW,GACX9c,MAAK,EAET,IACAgjC,iBAAiB,SAAO,SAACjqC,GACf,IAAA+jB,EAAsC/jB,EAAO,UAAlCywB,EAA2BzwB,EAAO,gBAAjBiH,EAAUjH,EAAO,MACrD,IAAK+jB,IAAc9c,EACjB,MAAM,IAAI9I,MAAM,+CAElB,MAAmB,aAAf8I,EAAME,KAUD,CAAE+7B,aAT4C,CACnD/7B,KAAM,WACNm/B,mBAAoBviB,EACpB0M,gBAAe,EACfgX,qBAAsBxgC,EAAMwgC,qBAC5B1nB,yBAA0B9Y,EAAM8Y,yBAChCmR,0BAA2BjqB,EAAMiqB,0BACjCD,sBAAuBhqB,EAAMgqB,wBAUxB,CAAEiS,aANyC,CAChD/7B,KAAM,YACNm/B,mBAAoBviB,EACpB0M,gBAAe,EACfgX,qBAAsBxgC,EAAMwgC,sBAIlC,IACAyC,iCAAiC,QAAU,uBAC3CC,8BAA8B,SAC5B,SAACn5B,EAAGoM,GACF,MAAO,CAAE7R,KAAM,cAAeD,MAAO8R,EAAM9R,MAC7C,GACA,CAAE1K,GAAI,sBAIV2mC,OAAQ,CACN,gBAAiB,SAACvnC,GAAO,MAAK,MAAwB,cAAX,QAAb,EAAAA,EAAQiH,aAAK,eAAEE,KAAmB,EAChE,iBAAkB,SAACnH,GAAO,MAAK,MAAwB,eAAX,QAAb,EAAAA,EAAQiH,aAAK,eAAEE,KAAoB,MCtYhC,IAAAvJ,eAGvC,M,oNCCU,EAAuD,SAAC,G,IACnE2N,EAAI,OACJ7C,EAAuB,0BAEfwL,GAAM,IAAA0F,gBAAe,yBAAwB,EACrD,OACE,SAAC,EAAAge,QAAO,gBACM1jB,EAAE,uBACd2jB,cAAe3jB,EAAE,uBACjB4jB,aACE,SAAC,EAAA/d,MAAK,CACJE,QACW,YAAT1O,EACI,gCACA,6CAENyO,GAAI,wBACJE,WAAY,EAAC,SAAC,EAAArN,KAAI,CAACjM,GAAI8H,QACvB,WAGJ,SAAC,EAAAqvB,2BAA0B,MAGjC,ECnCaqS,EAAU,IAAInX,IAAI,cAC5BpqB,KACUwhC,GAAY,IAAIpX,IAC3B,cAEApqB,KACWyhC,GAAU,IAAIrX,IAAI,cAC5BpqB,KACU0hC,GAAa,IAAItX,IAC5B,cAEApqB,KCRW2hC,GAA6B,WACxC,OACE,+BACE,gBAAK9E,IAAK0E,EAASK,IAAK,GAAIjI,MAAO,CAAEkI,OAAQ,WAGnD,ECNaC,GAA+B,WAC1C,OACE,+BACE,gBAAKjF,IAAK2E,GAAWI,IAAK,GAAIjI,MAAO,CAAEkI,OAAQ,WAGrD,ECNaE,GAA6B,WACxC,OACE,+BACE,gBAAKlF,IAAK4E,GAASG,IAAK,GAAIjI,MAAO,CAAEkI,OAAQ,WAGnD,E,KC0LO,SAACF,GAAO,KACR,SAACI,GAAO,KACN,SAACD,GAAS,KACZ,UCnMsC,WAC3C,OACE,+BACE,gBAAKjF,IAAK6E,GAAYE,IAAK,GAAIjI,MAAO,CAAEkI,OAAQ,WAGtD,GD6LkB,I,iNEhLLG,GAET,SAAC,G,IAAE9mB,EAAS,YAAErkB,EAAK,QAAE66B,EAAQ,WAAEjO,EAAU,aAAEwe,EAAS,YAC9C52B,GAAM,IAAA0F,gBAAe,yBAAwB,EACrD,OACE,gCACwB,IAArBmK,EAAUvc,SACT,SAAC,EAAAujC,SAAQ,CACPnS,UAAU,gBACVoS,iBAAiB,sBAGrB,mBAAKC,KAAK,UAAS,aAAa/2B,EAAE,0BAAwB,WACxD,SAAC,EAAAg3B,KAAI,IACHC,eAAgB,CAAE5hB,QAAS,8BAC3B6hB,OAAQ,CAAE7hB,QAAS,cACnB8hB,WAAY,CAAE9hB,QAAS,iBAAgB,UAEtCxF,EAAUtY,KACT,SAAC,G,IAAEnN,EAAE,KAAEqN,EAAW,cAAc2/B,EAAgB,aAAO,OACrD,SAAC,EAAAC,SAAQ,IAACC,KAAM,CAAEjiB,QAAS,SAAQ,WACjC,UAAC,EAAAkiB,KAAI,IACH7S,UAAW,aACXhvB,MAAO+B,EACPquB,KAAM,GAAM17B,GACZotC,WAAW,EACXzN,WAAYv+B,IAAUpB,EACtBguB,WAAYgf,GAAoBhf,EAChC6Q,QAAS,WAAM,OAAA5C,EAASj8B,EAAT,GAAY,WAE1BgtC,GACCp3B,EAAE,sDAAqD,UAXnB5V,EADW,WAoB7D,SAAC,EAAAqtC,WAAU,IACT/S,UAAW,oBACXl5B,MAAOA,EACPpB,GAAG,6BACH0F,KAAK,iBACLsoB,WAAYA,EACZwe,UAAWA,EACXvQ,SAAU,SAAC76B,GAAU,OAAA66B,EAAS76B,EAAT,GAAgC,UAEpD,EACC,SAAC,EAAAksC,iBAAgB,CACflsC,MAAM,GAEN67B,MAAOrnB,EAAE,0BADL,eAGN6P,EAAUtY,KAAI,SAAC,EAAqBiwB,G,IAAnBp9B,EAAE,KAAEqN,EAAW,cAC9B,OACE,SAAC,EAAAigC,iBAAgB,CAAalsC,MAAOpB,EAAIi9B,MAAO5vB,GAAzB+vB,EAE3B,UAKV,EAEM,GAAgD,CACpDmE,KAAK,SAAC2K,GAAO,IACb1K,KAAK,SAAC8K,GAAO,IACb7K,OAAO,SAAC4K,GAAS,K,mNCxENkB,GAAyD,SAAC,G,IACrEnsC,EAAK,QACLqwB,EAAO,UACPzD,EAAU,aACVwf,EAAiB,oBACjBhB,EAAS,YACTvQ,EAAQ,WACRY,EAAe,kBAEPjnB,GAAM,IAAA0F,kBAAgB,EACxB,GAAsB,IAAAjb,WAAkB,GAAvCgM,EAAM,KAAE6vB,EAAS,KAWlBuR,EAAoBhc,aAAO,EAAPA,EAAStkB,KACjC,SAAC,EAAiCiwB,G,IAA/Bp9B,EAAE,KAAEqN,EAAW,cAAE2gB,EAAU,aAAc,OAC1C,SAAC,EAAAkP,aAAY,IACXlP,WAAYA,EACZgZ,SAAUhZ,EAEV5sB,MAAOpB,EACPoL,YACE4iB,EACIpY,EAAE,sDACF1V,GAAS,UAGdmN,IARI+vB,EAJmC,IAiB9C,OACE,SAAC,EAAAb,OAAM,IACLv8B,GAAG,2BACH0tC,SAAS,2BACThoC,KAAK,2BACLuF,QAAS,EAAA2xB,cAAA,OACTH,SAjCa,SAACpwB,GAChB6vB,EAAU7vB,EACZ,EAgCIqwB,SA9BsC,SAAChqB,EAAGtR,GAC5C86B,GAAU,SAACyR,GAAc,OAACA,CAAD,IACzB1R,EAAS76B,EACX,EA4BIorC,UAAWA,EACX1P,WAAY17B,EACZiL,OAAQA,EACR2hB,WAAYA,EAAU,mBAEpBwf,EACI,4BACA,2BAEN3Q,gBAAiBA,GAAe,UAE/B4Q,IAGP,E,mNC9Da,GAA+C,SAAC,G,IAC3DrsC,EAAK,QACLwsC,EAAO,UACPC,EAAQ,WACR7f,EAAU,aACViO,EAAQ,WAEArmB,GAAM,IAAA0F,gBAAe,yBAAwB,EAC/CkxB,EAAyB,UAAbqB,EAAuB,QAAU,UAE7CC,EAA0B,UAAZF,EAAsB,QAAU,SAC9CG,EAF+B,QAAZH,GAAqB5f,EAEX,cAAW9tB,EAC9C,OACE,SAAC,EAAA++B,UAAS,IACRhC,MAAOrnB,EAAE,sBACTspB,QAAQ,qBACRsN,UAAWA,EACXwB,kBAAmBp4B,EAAE,mBAAkB,cAC1B,MAAI,WAEjB,UAAC,EAAAq4B,YAAW,iBAAar4B,EAAE,gCAA8B,YACvD,SAAC,EAAAs4B,QAAO,IACNC,QAASv4B,EAAE,qCAAsC,CAC/Ck4B,YAAW,IAEbC,QAASA,GAAO,WAEhB,SAAC,EAAAK,gBAAe,CACdC,KAAMz4B,EAAE,aACRxU,MAAO,SACP4sB,WAAYA,GAA0B,UAAZ4f,EAC1BU,SAAS,SACT3O,WAAsB,WAAVv+B,EACZ66B,SAAU,WAAM,OAAAA,EAAS,SAAT,QAIpB,SAAC,EAAAiS,QAAO,IACNH,QAASA,EACTI,QAASv4B,EAAE,qCAAsC,CAC/Ck4B,YAAW,KACX,WAEF,SAAC,EAAAM,gBAAe,CACdC,KAAMz4B,EAAE,YACRxU,MAAM,QACNktC,SAAS,QACTtgB,WAAYA,GAA0B,WAAZ4f,EAC1BjO,WAAsB,UAAVv+B,EACZ66B,SAAU,WAAM,OAAAA,EAAS,QAAT,aAM5B,E,mNC/Da,GAET,SAAC,G,IAAE76B,EAAK,QAAEqkB,EAAS,YAAEwW,EAAQ,WAAEjO,EAAU,aAAEugB,EAAO,UAC5C34B,GAAM,IAAA0F,gBAAe,yBAAwB,EAE/CkxB,EAAa+B,EAAoB,UAAV,QAE7B,OACE,SAAC,EAAAtP,UAAS,IACRhC,MAAOrnB,EAAE,kBACTspB,QAAQ,6BACRsN,UAAWA,EACXwB,kBAAmBp4B,EAAE,mBACrB44B,YAAU,cAEV,SAACjC,GAAmB,CAClB9mB,UAAWA,EACXrkB,MAAOA,EACP66B,SAAUA,EACVjO,WAAYA,EACZwe,UAAWA,MAInB,E,mNCxBa,GAAiE,SAAC,G,IAC7EprC,EAAK,QACLqwB,EAAO,UACPwK,EAAQ,WACRjO,EAAU,aACVwf,EAAiB,oBACjBK,EAAQ,WAEAj4B,GAAM,IAAA0F,gBAAe,yBAAwB,EAE/CmzB,GAAwBhd,GAC1BA,EAAQid,OAAM,SAAC,GAAmB,OAAe,IAAtB,YAAO,KACf,IAAnBjd,EAAQvoB,OAGNylC,EACJ3gB,GAAcygB,GAA6C,KAApBhd,aAAO,EAAPA,EAASvoB,QAE5C0lC,GACHH,IACDhd,aAAO,EAAPA,EAASW,MAAK,SAAC,GAAmB,OAAe,IAAtB,YAAO,KAE9Byc,EACS,UAAbhB,QACc3tC,IAAVkB,EACE,QAEF,UAEA0tC,EAEAl5B,EADJ64B,GAAyBhd,EACnB,kCACA,iBAEFuc,EAAoBhgB,OAAa9tB,EACrC,uBADiD2tC,GAEjD,SAAC,EAAAkB,WAAU,IAACzU,UAAW,0BAAwB,WAC7C,SAAC,EAAA0U,eAAc,IAAC/jC,QAAQ,QAAQgkC,SAAO,aACpCr5B,EAAE,gDAIPA,EADE64B,EACA,qCAEA,mBAGJ,OACE,SAAC,EAAAxP,UAAS,kBACI,cACZhC,MAAOrnB,EAAE,gBACTspB,QAAQ,2BACRsP,YAAU,EACVhC,UAAWqC,EACXK,WACEzd,IAAYgd,GAAyBG,IACnC,SAAC,EAAAG,WAAU,IAACzU,UAAW,0BAAwB,WAC7C,SAAC,EAAA0U,eAAc,IACb/jC,QAAS2jC,EAAyB,UAAY,QAC9CK,SAAO,aAGHr5B,EADHg5B,EACK,sCACA,iDAGR1uC,EAEN8tC,kBAAmBA,GAAiB,WAEpC,SAACT,GAAiB,CAChBnsC,MAAOA,EACPqwB,QAASA,EACTwK,SAAUA,EACVjO,WAAY2gB,EACZnB,kBAAmBA,EACnBhB,UAAWqC,EACXhS,gBAAiBiS,MAIzB,E,mNChFa,GAET,SAAC,G,IAAE1tC,EAAK,QAAEysC,EAAQ,WAAE7f,EAAU,aAAEiO,EAAQ,WAClCrmB,GAAM,IAAA0F,gBAAe,yBAAwB,EAC/CuzB,EAA0B,UAAbhB,EAAuB,QAAU,UAEpD,OACE,SAAC,EAAA5O,UAAS,IACRhC,MAAOrnB,EAAE,iBACTs5B,WAAYt5B,EAAE,oCACdo4B,kBACe,UAAbH,EACIj4B,EAAE,8CAA+C,CAAElQ,KAAMtE,IAEzDwU,EADa,YAAbi4B,EACE,mCACA,mBAERW,YAAU,EACVhC,UAAWqC,EACX3P,QAAQ,sBAAoB,WAE5B,SAAC,EAAAC,UAAS,CACRn/B,GAAG,qBACHwuC,YAAU,EACVhC,UAAWqC,EACX5hC,KAAK,OACL7L,MAAOA,EACP66B,SAAUA,EACVkT,WAAW,EACXnhB,WAAYA,MAIpB,E,+NCjCaohB,GAKR,SAAC,G,IAAEC,EAAc,iBAAEC,EAAS,YAAEC,EAAa,gBAAExiC,EAAO,UAC/C6I,GAAM,IAAA0F,gBAAe,yBAAwB,EACrD,OACE,UAAC,EAAAyzB,WAAU,IAACzU,UAAW,0BAAwB,WAC5C+U,IACC,SAAC,EAAAL,eAAc,UACZp5B,EAAE,gCAAiC,CAClCzP,MAAOkpC,MAKZE,IACC,SAAC,EAAAlQ,MAAK,IACJr/B,GAAG,4BAA2B,YACpB,SACV2sC,KAAM,QACNrS,UAAU,wBACVrvB,QAAS8B,EAAU,SAAW,UAC9BzB,MAAOsK,EAAE,0BACT0pB,UAAQ,aAEP1pB,EAAE,+BAGN05B,IACC,SAAC,EAAAjQ,MAAK,gBACM,SACVsN,KAAM,QACNrS,UAAW,qBAAciV,EAAgB,GAAK,cAC9CtkC,QAAS,EAAAukC,aAAA,KACTlkC,MAAOsK,EAAE,sBACT0pB,UAAQ,cAER,SAAC,EAAA7jB,MAAK,CACJC,GAAI,wBACJC,QAAS,uBACTC,WAAY,EACV,SAAC2oB,EAAA,EAAY,CACXh6B,KAAM,6CACNi6B,OAAQ,4BACRlK,UAAW,wBAQ3B,E,mNCvDamV,GAGR,SAAC,G,IAAEJ,EAAc,iBAAExQ,EAAO,UACrBjpB,GAAM,IAAA0F,gBAAe,yBAAwB,EACrD,OACE,iCACE,SAAC,EAAAyzB,WAAU,IAACzU,UAAW,0BAAwB,WAC7C,SAAC,EAAA0U,eAAc,IAAC/jC,QAAQ,QAAQgkC,SAAO,aACpCr5B,EAAE,gCAAiC,CAClCzP,MAAOkpC,WAIb,SAAC,EAAAN,WAAU,WACT,SAAC,EAAAC,eAAc,WACb,SAAC,EAAAxgC,OAAM,IACL8rB,UAAU,yBACVrvB,QAAS,EAAAykC,cAAA,KACTpQ,UAAQ,EACRT,QAASA,GAAO,UAEfjpB,EAAE,4CAMf,E,mNC5Ba+5B,GAER,SAAC,G,IAAE9Q,EAAO,UACLjpB,GAAM,IAAA0F,gBAAe,yBAAwB,EACrD,OACE,iCACE,SAAC,EAAAyzB,WAAU,IAACzU,UAAW,0BAAwB,WAC7C,SAAC,EAAA0U,eAAc,UAAEp5B,EAAE,sCAErB,SAAC,EAAAm5B,WAAU,WACT,SAAC,EAAAC,eAAc,WACb,SAAC,EAAAxgC,OAAM,IACL8rB,UAAU,yBACVrvB,QAAS,EAAAykC,cAAA,KACTpQ,UAAQ,EACRT,QAASA,GAAO,UAEfjpB,EAAE,8BAMf,E,mNCPa,GAAmD,SAAC,G,QAC/DxU,EAAK,QACL+tB,EAAK,QACLkgB,EAAc,iBACdrhB,EAAU,aACVlhB,EAAS,YACTC,EAAO,UACP6iC,EAAc,iBACd/B,EAAQ,WACR5R,EAAQ,WACR/xB,EAA6B,gCAC7BC,EAAqB,wBAEbyL,GAAM,IAAA0F,gBAAe,yBAAwB,EAE/CkzB,EAA0B,cAAbX,EAEbgC,GACJ,SAACF,GAAwB,CAAC9Q,QAAS10B,IAGrC,GAAI2C,GAAa8iC,EACf,OACE,SAACE,GAAA,EAAoB,CACnBC,UAAWn6B,EAAE,eACbspB,QAAQ,iBACR8Q,WAAYp6B,EAAE,eACdq6B,UAAWr6B,EAAE,qBACbs6B,gBAAiBt6B,EAAE,mBACnB44B,WAAYA,EACZU,YACE,UAAC,EAAAiB,KAAI,IAACC,GAAI,EAAG/V,GAAI,GAAIH,WAAS,gBAAc,gBAAc,YACxD,SAAC,EAAAmW,SAAQ,WACP,SAAC,EAAA5D,SAAQ,CAACzR,MAAO,MAAOsV,SAAU,WAEpC,SAAC,EAAAD,SAAQ,WACP,SAAC,EAAA5D,SAAQ,CAACzR,MAAO,MAAOsV,SAAU,aAIxC9D,UAAWoD,EAAiB,QAAU,UACtC5B,kBAAmBp4B,EAAE,iBAK3B,QAAc1V,IAAVivB,EACF,OACE,SAAC2gB,GAAA,EAAoB,IACnBC,UAAWn6B,EAAE,eACbspB,QAAQ,iBACR8Q,WAAYp6B,EAAE,eACdq6B,UAAWr6B,EAAE,qBACbs6B,gBAAiBt6B,EAAE,mBACnB44B,WAAYA,EACZU,WACe,cAAbrB,EAA2BgC,EAAkBj6B,EAAE,kBAAgB,WAGjE,8BAAkB,mBAKxB,IAAM26B,EACS,cAAb1C,EACI1e,EAAMqhB,WAAU,SAAC5tB,GAAS,OAAAA,EAAKja,QAAUvH,CAAf,KACzB,EAEDqvC,EAAoCthB,EAAMhiB,KAAI,SAAC6W,EAAGoZ,GAAU,OAChEh8B,MAAOg8B,EACPH,MAAO,UAAGjZ,EAAErb,OAFoD,IAK5D4mC,EAAiC,QAAjB,EAAApgB,EAAMohB,UAAW,eAAEviB,WAEnCkhB,GACJ,SAACE,GAAmB,CAClBC,eAAgBA,EAChBC,UAAyC,aAAb,QAAjB,EAAAngB,EAAMohB,UAAW,eAAE1qC,QAC9B0pC,cAAeA,EACfxiC,QAASA,IAGP2jC,EAAsBrB,IAC1B,SAACI,GAA4B,CAC3BJ,eAAgBA,EAChBxQ,QAAS30B,IAQP2kC,EACJQ,GACAjuC,IACc,UAAbysC,GAAwBwB,EAAiBjuC,IAC7B,cAAbysC,GACA9gC,EACI,QACA,UAEN,OACE,SAAC+iC,GAAA,EAAoB,IACnBC,UAAWn6B,EAAE,eACbspB,QAAQ,iBACR8Q,WAAYp6B,EAAE,eACdq6B,UAAWr6B,EAAE,qBACbs6B,gBAAiBt6B,EAAE,mBACnB44B,WAAYA,EACZhC,UAAWqC,EACXK,WAAyB,cAAbrB,EAA2BqB,EAAaW,EACpD7B,kBACe,iBAAbH,EAA8B6C,EAAsBxB,GAAU,WAGhE,oBAAK5U,UAAU,8BAA4B,YACzC,SAAC,EAAAqW,OAAM,CACL3wC,GAAG,iBAAgB,cACN,cACb4wC,IAAKH,EAAMvnC,OAAS,EACpB9H,MAAOmvC,EACPM,WAAW,EACXC,YAAaL,EACbnW,UAAU,aACVtM,WAAYA,GAA2B,cAAb6f,EAC1B5R,SArCa,SAACmB,GACpBnB,EAAS9M,EAAMiO,GACjB,EAmC8B,mBAEpBmS,EAAgB,4BAA8B,oBAGlD,oBAAMjV,UAAU,sDAAoD,UACjE1kB,EAAE,2BAKb,E,mNC7Ia,GAAqD,SAAC,G,IACjE5I,EAAK,QACL+jC,EAAgB,mBAERn7B,GAAM,IAAA0F,gBAAe,yBAAwB,EAErD,OACE,SAAC,EAAA01B,WAAU,gBAAW,aAAW,UAC9B,WACC,OAAQhkC,GACN,IAAK,eACL,IAAK,aACH,OACE,SAAC,EAAAqyB,MAAK,CACJsN,KAAM,QACNrS,UAAU,aACVrvB,QAAS,EAAAukC,aAAA,OACTlkC,MAAOsK,EAAE,4BACT0pB,UAAQ,IAId,IAAK,qBACH,OACE,SAAC,EAAAD,MAAK,IACJsN,KAAM,QACNrS,UAAU,aACVrvB,QAAS,EAAAukC,aAAA,OACTlkC,MAAOsK,EAAE,kCACT0pB,UAAQ,cAER,SAAC,EAAA7jB,MAAK,CACJC,GAAI,CAAC,yBACLC,QAAS/F,EAAE,oCACXgG,WAAY,EACV,SAAC,EAAApN,OAAM,CAELvD,QAAS,EAAAykC,cAAA,KACT7Q,QAASkS,EACTzR,UAAQ,GAHJ,wBAShB,IAAK,wBACH,OACE,SAAC,EAAAD,MAAK,IACJsN,KAAM,QACNrS,UAAU,aACVrvB,QAAS,EAAAukC,aAAA,OACTlkC,MAAOsK,EAAE,uCACT0pB,UAAQ,aAEP1pB,EAAE,4CAGT,IAAK,qBACH,OACE,SAAC,EAAAypB,MAAK,IACJsN,KAAM,QACNrS,UAAU,aACVrvB,QAAS,EAAAukC,aAAA,OACTlkC,MAAOsK,EAAE,wCACT0pB,UAAQ,aAEP1pB,EAAE,6CAGT,IAAK,UACH,OACE,SAAC,EAAAypB,MAAK,IACJsN,KAAM,QACNrS,UAAU,aACVrvB,QAAS,EAAAukC,aAAA,OACTlkC,MAAOsK,EAAE,mCACT0pB,UAAQ,aAEP1pB,EAAE,wCAIX,OAAO,IACR,CA3EA,KA8EP,E,mNCxDa,GAAyD,SAAC,G,IACrEq7B,EAAO,UACPC,EAAoB,uBACpB7uB,EAAO,UACPH,EAAM,SACNkB,EAAO,UACPzO,EAAa,gBACbW,EAAW,cACXE,EAAc,iBACd8M,EAAW,cACX3Y,EAAiB,oBACjBwnC,EAAc,iBACdtvB,EAAO,UAECjM,GAAM,IAAA0F,gBAAe,yBAAwB,EAErD,OACE,UAAC,EAAA2e,MAAK,IAACC,WAAS,gBAAc,iBAAe,YAC3C,SAAC,EAAA4E,UAAS,WACR,UAAC,EAAAsS,KAAI,IAACC,QAAM,eACV,SAAC,EAAAC,UAAS,IAAC7iC,UAAU,MAAI,UAAEmH,EAAE,4BAC7B,SAAC,EAAA27B,SAAQ,WACP,SAAC,EAAApX,gBAAe,IAACqX,WAAS,cACxB,SAAC,EAAAjX,qBAAoB,WACnB,UAAC,EAAA4V,KAAI,IAACC,GAAI,EAAG/V,GAAI,GAAIH,WAAS,eAC1B+W,IACA,UAAC,EAAAZ,SAAQ,kBAAc,iBAAe,YACpC,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,kBAEL,SAAC,EAAA6kB,2BAA0B,UACxB7kB,EAAE,oBAAqB,CAAEgN,KAAMuuB,UAIrCF,IACC,UAAC,EAAAZ,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,qBAEL,UAAC,EAAA6kB,2BAA0B,YACzB,SAAC,EAAAgX,UAAS,CAACC,MAAM,sCAAuC,IACvD97B,EAAE,iBAAkB,CACnBxU,MAAO8vC,WAKf,UAAC,EAAAb,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,oBAEL,SAAC,EAAA6kB,2BAA0B,UACxB7kB,EAAE,gBAAiB,CAClBxU,MAAOihB,UAIb,UAAC,EAAAguB,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,mBAEL,SAAC,EAAA6kB,2BAA0B,UACxB7kB,EAAE,eAAgB,CACjBxU,MAAO8gB,UAIb,UAAC,EAAAmuB,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,oBAEL,SAAC,EAAA6kB,2BAA0B,UACxB7kB,EAAE,gBAAiB,CAClBxU,MAAOgiB,UAIb,UAAC,EAAAitB,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,uBAEL,SAAC,EAAA6kB,2BAA0B,UACxB7kB,EAAE,mBAAoB,CACrBxU,MAAOuT,UAIb,UAAC,EAAA07B,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,+BAEL,SAAC,EAAA6kB,2BAA0B,UACxB7kB,EAAE,2BAA4B,CAC7BxU,MAAOkU,UAIb,UAAC,EAAA+6B,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,4BAEL,SAAC,EAAA6kB,2BAA0B,UACxB7kB,EAAE,wBAAyB,CAC1BxU,MAAOoU,UAIb,UAAC,EAAA66B,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,yBAEL,SAAC,EAAA6kB,2BAA0B,UACxB7kB,EAAE,qBAAsB,CACvBxU,MAAOkhB,SAIZT,IACC,UAAC,EAAAwuB,SAAQ,YACP,UAAC,EAAA7V,oBAAmB,WACjB5kB,EAAE,uBAAsB,KACzB,SAAC,EAAW,CACV3I,KAAM4U,EAAQ5U,KACd7C,wBACEyX,EAAQzX,8BAId,SAAC,EAAAqwB,2BAA0B,UACxB,WACC,GAAsB,YAAlB5Y,EAAQzgB,MACV,OAAOwU,EAAE,0BACJ,GAAsB,cAAlBiM,EAAQzgB,MACjB,OAAOwU,EAAE,4BAEX,OAAQiM,EAAQzgB,MAAM8iB,aACpB,IAAK,MACH,OACE,gCACGtO,EAAE,4BACH,kBACCiM,EAAQzgB,MAAMgjB,gBAGrB,IAAK,MACH,OACE,gCACGxO,EAAE,4BACH,kBACCiM,EAAQzgB,MAAMgjB,gBAGrB,IAAK,QACH,OACE,gCACGxO,EAAE,8BACH,kBACCiM,EAAQzgB,MAAMgjB,gBAGrB,IAAK,MACH,OACE,gCACGxO,EAAE,2BACH,kBACCiM,EAAQzgB,MAAMgjB,gBAIxB,CAxCA,0BAkDnB,SAAC,EAAA0a,UAAS,WACR,UAAC,EAAAsS,KAAI,IAACC,QAAM,EAACG,WAAS,eACpB,SAAC,EAAAF,UAAS,IAAC7iC,UAAU,MAAI,UAAEmH,EAAE,+BAC7B,SAAC,EAAA27B,SAAQ,WACP,SAAC,EAAA/iC,OAAM,IACLmjC,SAAO,EACPrS,UAAQ,EACRr0B,QAAS,EAAAykC,cAAA,KACT7Q,QAASl1B,GAAiB,UAEzBiM,EAAE,+CAOjB,E,mNCjOa,GAET,SAAC,G,IAAEq7B,EAAO,UAAEtnC,EAAiB,oBACvBiM,GAAM,IAAA0F,gBAAe,yBAAwB,EACrD,OACE,UAAC,EAAA2e,MAAK,IAACC,WAAS,gBAAc,iBAAe,YAC3C,SAAC,EAAA4E,UAAS,WACR,UAAC,EAAAsS,KAAI,IAACC,QAAM,eACV,SAAC,EAAAC,UAAS,IAAC7iC,UAAU,MAAI,UAAEmH,EAAE,4BAC7B,SAAC,EAAA27B,SAAQ,WACP,SAAC,EAAApX,gBAAe,IAACqX,WAAS,cACxB,SAAC,EAAAjX,qBAAoB,WACnB,UAAC,EAAA4V,KAAI,IAACC,GAAI,EAAG/V,GAAI,GAAIH,WAAS,eAC1B+W,IACA,UAAC,EAAAZ,SAAQ,kBAAc,iBAAe,YACpC,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,kBAEL,SAAC,EAAA6kB,2BAA0B,WACzB,SAAC,EAAAgS,SAAQ,CACPzR,MAAM,MACN0R,iBAAiB,2BAKxBuE,IACC,UAAC,EAAAZ,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,qBAEL,UAAC,EAAA6kB,2BAA0B,YACzB,SAAC,EAAAgX,UAAS,CAACC,MAAM,sCAAuC,KACxD,SAAC,EAAAjF,SAAQ,CACPzR,MAAM,MACN0R,iBAAiB,4BAKzB,UAAC,EAAA2D,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,oBAEL,SAAC,EAAA6kB,2BAA0B,WACzB,SAAC,EAAAgS,SAAQ,CAACzR,MAAM,cAGpB,UAAC,EAAAqV,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,mBAEL,SAAC,EAAA6kB,2BAA0B,WACzB,SAAC,EAAAgS,SAAQ,CAACzR,MAAM,cAGpB,UAAC,EAAAqV,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,oBAEL,SAAC,EAAA6kB,2BAA0B,WACzB,SAAC,EAAAgS,SAAQ,CAACzR,MAAM,cAGpB,UAAC,EAAAqV,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,uBAEL,SAAC,EAAA6kB,2BAA0B,WACzB,SAAC,EAAAgS,SAAQ,CAACzR,MAAM,cAGpB,UAAC,EAAAqV,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,+BAEL,SAAC,EAAA6kB,2BAA0B,WACzB,SAAC,EAAAgS,SAAQ,CAACzR,MAAM,cAGpB,UAAC,EAAAqV,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,4BAEL,SAAC,EAAA6kB,2BAA0B,WACzB,SAAC,EAAAgS,SAAQ,CAACzR,MAAM,cAGpB,UAAC,EAAAqV,SAAQ,YACP,SAAC,EAAA7V,oBAAmB,UACjB5kB,EAAE,yBAEL,SAAC,EAAA6kB,2BAA0B,WACzB,SAAC,EAAAgS,SAAQ,CAACzR,MAAM,+BAShC,SAAC,EAAA8D,UAAS,WACR,UAAC,EAAAsS,KAAI,IAACC,QAAM,EAACG,WAAS,eACpB,SAAC,EAAAF,UAAS,IAAC7iC,UAAU,MAAI,UAAEmH,EAAE,+BAC7B,SAAC,EAAA27B,SAAQ,WACP,SAAC,EAAA/iC,OAAM,IACLmjC,SAAO,EACPrS,UAAQ,EACRr0B,QAAS,EAAAykC,cAAA,KACT7Q,QAASl1B,GAAiB,UAEzBiM,EAAE,+CAOjB,EC5Ia,GAA4C,WAC/C,IAAAA,GAAM,IAAA0F,gBAAe,yBAAwB,EAErD,OACE,SAAC,EAAA+jB,MAAK,CACJsN,KAAM,QACNrS,UAAU,aACVrvB,QAAS,EAAAukC,aAAA,KACTlkC,MAAOsK,EAAE,2BACT0pB,UAAQ,EACRsS,YACE,SAAC,EAAAC,QAAO,CAACjvB,KAAK,KAAI,iBAAiBhN,EAAE,gCAI7C,E,mNCHak8B,GAET,SAAC,G,IAAE3I,EAAoB,uBAAEl/B,EAAgB,mBACnC2L,GAAM,IAAA0F,gBAAe,yBAAwB,EAErD,OACE,SAAC,EAAA01B,WAAU,UACR,WACC,OAAQ7H,GACN,IAAK,eACH,OACE,SAAC,EAAA9J,MAAK,IACJsN,KAAM,QACNrS,UAAU,aACVrvB,QAAS,EAAAukC,aAAA,QACTlkC,MAAOsK,EAAE,mCACT0pB,UAAQ,cAER,SAAC,EAAA7jB,MAAK,CACJC,GAAI,CAAC,yBACLC,QAAS/F,EAAE,qCACXgG,WAAY,EACV,SAAC,EAAApN,OAAM,CAELvD,QAAS,EAAAykC,cAAA,KACT7Q,QAAS50B,EACTq1B,UAAQ,GAHJ,wBAShB,IAAK,uBACH,OACE,SAAC,EAAAD,MAAK,IACJsN,KAAM,QACNrS,UAAU,aACVrvB,QAAS,EAAAukC,aAAA,QACTlkC,MAAOsK,EAAE,0CACT0pB,UAAQ,aAEP1pB,EAAE,+CAGT,IAAK,YACH,OAAO,KAEZ,CAxCA,IA2CP,E,mNC9Da,GAAsD,WACzD,IAAAA,GAAM,IAAA0F,gBAAe,yBAAwB,EAErD,OACE,SAAC,EAAA+jB,MAAK,IACJsN,KAAM,QACNrS,UAAU,aACVrvB,QAAS,EAAAukC,aAAA,QACTlkC,MAAOsK,EAAE,yCACT0pB,UAAQ,aAEP1pB,EAAE,6CAGT,E,mNCAa,GAAuD,SAAC,G,IACnE1L,EAA6B,gCAC7BC,EAAqB,wBACrBR,EAAiB,oBAEjB,OACE,+BACE,UAAC,EAAAijC,KAAI,IACH9mC,UAAW,CAAEmlB,QAAS,SAAUoP,GAAI,OACpC0X,WAAY,CAAE1X,GAAI,wBAAuB,YAEzC,SAAC,EAAA4S,SAAQ,IAAC+E,KAAM,CAAE/mB,QAAS,WAAU,WACnC,UAAC,EAAA8T,KAAI,IAACkT,SAAU,WAAM,WAAK,YACzB,SAACC,GAAyB,KAC1B,SAACC,GAA0B,KAC3B,SAACC,GAAwB,KACzB,SAACC,GAAe,KAChB,SAACC,GAAiB,CAChBpoC,8BAA+BA,EAC/BC,sBAAuBA,YAI7B,SAAC,EAAA8iC,SAAQ,IACP+E,KAAM,CAAE/mB,QAAS,UACjBqP,UAAU,qCAAmC,WAE7C,SAAC,GAAoB,CACnB2W,SAAS,EACTtnC,kBAAmBA,YAM/B,EAEauoC,GAAmD,WAC9D,OACE,SAAC,GAAiB,CAChB9wC,MAAO,GACPysC,SAAU,QACV7f,YAAY,EACZiO,SAAU,WAAM,WAGtB,EAEakW,GAAoD,WAC/D,OACE,SAAC,GAAkB,CACjB5D,SAAS,EACT9oB,UAAW,GACXrkB,WAAOlB,EACP8tB,YAAY,EACZiO,SAAU,WAAM,WAGtB,EAEamW,GAAkD,WAC7D,OACE,SAAC,GAAgB,CACfvE,SAAU,QACVpc,aAASvxB,EACTkB,WAAOlB,EACP8tB,YAAY,EACZwf,mBAAmB,EACnBvR,SAAU,WAAM,WAGtB,EAEaoW,GAAyC,WACpD,OACE,SAAC,GAAO,CACNxE,SAAU,QACVD,QAAS,QACTxsC,MAAO,QACP4sB,YAAY,EACZiO,SAAU,WAAM,WAGtB,EAEaqW,GAKT,SAAC,G,IAAEpoC,EAA6B,gCAAEC,EAAqB,wBACzD,OACE,SAAC,GAAS,CACR/I,MAAO,EACP+tB,WAAOjvB,EAEPmvC,eAAgB,EAChBrhB,YAAY,EACZlhB,WAAW,EACXC,SAAS,EACT6iC,gBAAgB,EAChB/B,SAAU,WACV5R,SAAU,WAAM,UAChB/xB,8BAA+BA,EAC/BC,sBAAuBA,GAG7B,E,mNClGaooC,IAEX,OACE,CACE7wC,QAAS,CACPkjC,aAAc,CAAC,EACfzV,WAAOjvB,EACP2kC,KAAM,CAAC,EACPC,mBAAe5kC,GAEjB6kC,QAAS,CAAC,EACVC,4BAA4B,EAC5BC,OAAQ,CACNvjC,QAAS,CAAC,EACVwjC,OAAQ,CAAC,EAkBTC,SAAU,CAAC,GAMbC,QAAS,qBACTplC,GAAI,uBACJqlC,OAAQ,CACNC,mBAAoB,CAClBxtB,MAAO,oBACPytB,OAAQ,CACN,CACEC,KAAM,cACNC,OAAQ,aAEV,CACED,KAAM,uBACNC,OAAQ,sBAEV,CACEA,OAAQ,iBAIdC,UAAW,CACTC,KAAM,WAER6M,mBAAoB,CAClB7M,KAAM,WAERG,YAAa,CACX74B,KAAM,WACNo4B,OAAQ,CACNx/B,OAAQ,CACNu/B,QAAS,cACTC,OAAQ,CACNU,YAAa,CACXJ,KAAM,eAERK,WAAY,CACVluB,MAAO,gBACPytB,OAAQ,CAAC,cAEXU,UAAW,CACTN,KAAM,cAGVjnB,GAAI,CACFwnB,OAAQ,CACN96B,YACE,8IACFq6B,OAAQ,iBAIdZ,KAAM,CACJO,QAAS,UACTC,OAAQ,CACNc,QAAS,CACPR,KAAM,eAERS,MAAO,CACLtuB,MAAO,4BACP6tB,KAAM,YACNjnB,GAAI,CACF2nB,aAAc,CACZZ,OAAQ,WAEVa,OAAQ,CACNb,OAAQ,YAIdc,OAAQ,CACNzuB,MAAO,CAAC,4BAA6B,eACrC6tB,KAAM,aACNjnB,GAAI,CACF8nB,cAAe,CACbf,OAAQ,SAEVgB,YAAa,CACX7H,QAAS,mBACT6G,OAAQ,aAIdiB,MAAO,CACLz5B,KAAM,UAGVyR,GAAI,CACF2nB,aAAc,CACZj7B,YACE,sQACFq6B,OAAQ,cAIdjhC,OAAQ,CACNmhC,KAAM,eACN14B,KAAM,WACNo4B,OAAQ,CACN3/B,KAAM,CACJ0/B,QAAS,WACTC,OAAQ,CACNsB,MAAO,CACLhB,KAAM,aAERQ,QAAS,CACPruB,MAAO,eACP6tB,KAAM,eAERS,MAAO,CACLT,KAAM,YACN14B,KAAM,SAERm2B,SAAU,CACRmC,OAAQ,CACN,CACEC,KAAM,cACNC,OAAQ,SAEV,CACED,KAAM,cACNC,OAAQ,SAEV,CACEA,OAAQ,cAKhB/mB,GAAI,CACFwnB,OAAQ,CACNT,OAAQ,aAEVmB,WAAY,CACVhI,QAAS,UACT6G,OAAQ,eAIdr8B,QAAS,CACPg8B,QAAS,WACTC,OAAQ,CACNjC,SAAU,CACRmC,OAAQ,CACN,CACEC,KAAM,iBACNC,OAAQ,SAEV,CACEA,OAAQ,aAIdU,QAAS,CACPruB,MAAO,eACP6tB,KAAM,kBAERS,MAAO,CACLT,KAAM,eACN14B,KAAM,UAGVyR,GAAI,CACFwnB,OAAQ,CACNT,OAAQ,aAEVgN,cAAe,CACb7T,QAAS,aACT4G,KAAM,mBACNC,OAAQ,eAId7iB,KAAM,CACJwiB,QAAS,WACTC,OAAQ,CACNjC,SAAU,CACRmC,OAAQ,CACN,CACEC,KAAM,YACNC,OAAQ,QAEV,CACED,KAAM,UACNC,OAAQ,WAEV,CACED,KAAM,aACNC,OAAQ,SAEV,CACED,KAAM,iBACNC,OAAQ,YAEV,CACED,KAAM,gCACNC,OAAQ,mBAEV,CACED,KAAM,kBACNC,OAAQ,aAEV,CACEA,OAAQ,WAIdsB,KAAM,CACJjvB,MAAO,eACP6tB,KAAM,YAERqB,SAAU,CACRlvB,MAAO,eACP6tB,KAAM,gBAERsB,gBAAiB,CACfnvB,MAAO,eACP6tB,KAAM,uBAERD,UAAW,CACT5tB,MAAO,eACP6tB,KAAM,iBAERS,MAAO,CACLT,KAAM,YACN14B,KAAM,SAERD,MAAO,CACL8K,MAAO,eACP6tB,KAAM,aAERuB,QAAS,CACP97B,YACE,iEACF+7B,OAAQ,CACNC,IAAK,WACLC,OAAQ,CACN,CACEzI,QAAS,WACT6G,OAAQ,aAGZ57B,QAAS,CACP,CACE47B,OAAQ,WAIdE,KAAM,gBAGVjnB,GAAI,CACFwnB,OAAQ,CACNT,OAAQ,aAEVgN,cAAe,CACbhN,OAAQ,aAEV6B,WAAY,CACV1I,QAAS,UACT4G,KAAM,gBACNC,OAAQ,aAEV8B,cAAe,CACb9B,OAAQ,eAId5jB,QAAS,CACPujB,QAAS,WACTC,OAAQ,CACNjC,SAAU,CACRmC,OAAQ,CACN,CACEE,OAAQ,iBAId+B,YAAa,CACXp8B,YACE,gKACFu6B,KAAM,CAAC,YAAa,gBACpB7tB,MAAO,sBACP7K,KAAM,YAKdo6B,OAAQ,CACN5B,OAAQ,kDAId4B,OAAQ,CACN5B,OAAQ,UAGZiB,MAAO,CACLz5B,KAAM,WAIZ,CACE2xB,QAAS,CACPmJ,mBAAmB,SAAO,SAACrmC,GACzB,MAAO,CACLmjC,KAAM,CACJz7B,QAAS1H,EAAQkjC,aAAa37B,gBAGpC,IACAo9B,cAAc,QAAK,gBACnB4B,SAAS,SAAO,SAACvmC,EAAS,G,IAAEgE,EAAI,OAC9B,MAA8B,eAA1BhE,EAAQojC,cACH,CACLD,KAAM,SAAKnjC,EAAQmjC,MAAI,CAAEn/B,KAAI,IAC7Bo/B,mBAAe5kC,GAGZ,CAAE2kC,KAAM,SAAKnjC,EAAQmjC,MAAI,CAAEn/B,KAAI,IACxC,IACAgtC,YAAY,SAAO,SAAChxC,EAAS,GAC3B,MAAO,CACLmjC,KAAM,CACJz7B,QAHgC,WAKlC+lB,WAAOjvB,EAEX,IACAkoC,SAAS,SAAO,SAAC1mC,EAAS,G,IAAEkhB,EAAI,OAAO,OACrCiiB,KAAM,SACDnjC,EAAQmjC,MAAI,CACfjiB,KAAI,IAH+B,IAMvCylB,UAAU,SAAO,SAAC3mC,EAASod,GACzB,IAAMqQ,EAAQrQ,EAAMrZ,KACd6iC,EAAenZ,EAAMzqB,MAAK,SAAC0I,EAAGm7B,GAAM,OAAAn7B,EAAEzE,MAAQ4/B,EAAE5/B,KAAZ,IAAmB,GAC7D,MAAO,CACLwmB,MAAK,EACL0V,KAAM,SACDnjC,EAAQmjC,MAAI,CACfjiB,KAAM0lB,IAGZ,IAEAE,2BAA2B,SAAO,SAACC,GAAa,OAC9C3D,mBAAe5kC,EAD+B,IAGhDwoC,kBAAkB,SAAO,SAACD,EAAU,GAClC,MAAO,CACL3D,cAFuC,QAI3C,IACA6D,aAAa,SAAW,SAACjnC,GACvB,IAAMmjC,EAAOnjC,EAAQmjC,KAQrB,MAAO,CACL53B,KAAM,OACNxH,KATyC,CACzCoD,KAAM,YACNnD,KAAMm/B,EAAKn/B,KACX0D,QAASy7B,EAAKz7B,QACdmf,OAAQsc,EAAKjiB,KAAK5iB,GAClB6hB,QAAS,aAMb,IACA+mB,eAAe,QAAK,UACpBE,qBAAqB,SAAO,SAACpnC,GAC3B,IAAMmjC,EAAO,MAAKnjC,EAAQmjC,MAE1B,OADAA,EAAKhjB,QAAU,UACR,CAAEgjB,KAAI,EACf,KAEFoE,OAAQ,CACNC,YAAa,SAAC,G,IAAEtE,EAAY,eAC1B,YAAiB1kC,IAAjB0kC,GACsC,iBAAtCA,EAAauE,oBADb,EAEFwJ,qBAAsB,SAAC,G,IAAE/N,EAAY,eACnC,YAAiB1kC,IAAjB0kC,GACsC,yBAAtCA,EAAauE,oBADb,EAEFG,YAAa,SAAC,G,IAAEzE,EAAI,OAClB,YAAc3kC,IAAd2kC,EAAKn/B,MAA2C,IAArBm/B,EAAKn/B,KAAKwD,MAArC,EACFqgC,YAAa,SAAC,G,IAAE1E,EAAI,OAClB,qCAA+BxB,KAAKwB,EAAKn/B,MAAQ,GAAjD,EACFktC,eAAgB,SAAC,G,IAAE/N,EAAI,OAAED,EAAY,eAC7BiO,EAAkBjO,aAAY,EAAZA,EAAckO,kBAAkBjvB,MACtD,SAAC6B,GAAC,MAAK,OAAAA,EAAE1lB,MAAmB,QAAZ,EAAA6kC,EAAKz7B,eAAO,eAAEpJ,GAAE,IAElC,QAEG4kC,aAAY,EAAZA,EAAckO,oBAAqB,IAAI5pC,OAAS,QAE7BhJ,IAApB2yC,CAEJ,EACAE,UAAW,SAAC,GAAa,YAAiB7yC,IAAxB,OAAYkJ,OAAL,EACzBwgC,QAAS,SAAC,GAAc,YAAU1pC,IAAjB,OAAO,EACxB2pC,WAAY,SAAC,G,IAAE1a,EAAK,QAAO,YAAUjvB,IAAVivB,GAAwC,IAAjBA,EAAMjmB,MAA7B,EAC3B4gC,eAAgB,SAAC,G,MAAEjF,EAAI,OACrB,YAAqB3kC,IADc,iBAEF,KAAjB,QAAT,EAAA2kC,EAAKjiB,YAAI,eAAEoL,WACpB,EACA+b,8BAA+B,SAAC,EAAUr3B,EAAGs3B,G,IAAXnF,EAAI,OACpC,OAAImF,EAAKpwB,MAAMqwB,OAAO,mBAGE/pC,IAAjB2kC,EAAKhjB,OACd,EACAqoB,gBAAiB,SAAC,G,IAAErF,EAAI,OAAED,EAAY,eACpC,QAAqB1kC,IAAjB0kC,IAA+BC,EAAKjiB,KAAM,OAAO,EACrD,IAAMunB,EAAiBvF,EAAal8B,wBACpC,OAAKyhC,GACEtF,EAAKjiB,KAAKja,MAAQwhC,CAC3B,EACA6I,iBAAkB,SAACtxC,EAASod,GAC1B,OAAApd,EAAQmjC,KAAKz7B,UAAY0V,EAAM1V,OAA/B,EACFkhC,cAAe,SAAC5oC,EAASod,GAAK,MAC5B,OAAiB,QAAjB,EAAApd,EAAQmjC,KAAKjiB,YAAI,eAAE5iB,MAAO8e,EAAM8D,KAAK5iB,EAAE,KCzc3CizC,IAEJ,OACE,CACEvxC,QAAS,CACPsH,cAAU9I,EACV+I,oBAAgB/I,EAChByI,WAAOzI,EACP0kC,kBAAc1kC,GAEhB8kC,4BAA4B,EAC5BD,QACE,CAAC,EACHE,OAAQ,CACNvjC,QAAS,CAAC,EACVwjC,OAAQ,CAAC,EAuBTC,SAAU,CAAC,GAYbnlC,GAAI,+BACJolC,QAAS,UACTC,OAAQ,CACN6B,QAAS,CACP97B,YAAa,qDACbu6B,KAAM,UACNP,QAAS,QACTC,OAAQ,CACN18B,MAAO,CACLy8B,QAAS,2BACTC,OAAQ,CACN,2BAA4B,CAC1B8B,OAAQ,CACNC,IAAK,sBACLv9B,QAAS,CACP,CACE+0B,QAAS,0BACT6G,OACE,sDAIR/mB,GAAI,CACF,4BAA6B,CAC3BkgB,QAAS,wBACT6G,OAAQ,aAEV,yBAA0B,CACxB7G,QAAS,yBACT6G,OAAQ,aAEV,+BAAgC,CAC9B7G,QAAS,0BACT6G,OACE,sDAIR52B,UAAW,CACT5B,KAAM,QACNs4B,OAAQ,CACNE,OACE,8DAKV,oBAAqB,CACnB0B,OAAQ,CACNC,IAAK,gBACLv9B,QAAS,CACP,CACE+0B,QAAS,yBACT6G,OAAQ,WAId/mB,GAAI,CACF,qBAAsB,CACpBkgB,QAAS,cACT6G,OAAQ,SAEV,uBAAwB,CACtB7G,QAAS,yBACT6G,OAAQ,WAIdziB,MAAO,CACL/V,KAAM,QACN6K,MAAO,oBAGXuvB,OAAQ,CACN,CACE7B,KAAM,iBACNC,OAAQ,kBAEV,CACEA,OAAQ,wBAId,qBAAsB,CACpBE,KAAM,oBACN14B,KAAM,SAER,iBAAkB,CAChBk6B,OAAQ,CACNC,IAAK,gBACLpnC,GAAI,wBAEN2lC,KAAM,gBACNP,QAAS,OACTC,OAAQ,CACN0B,KAAM,CACJroB,GAAI,CACFusB,KAAM,CACJxF,OAAQ,YAIdc,OAAQ,CACNY,OAAQ,CACNC,IAAK,kBAEPzB,KAAM,SACNjnB,GAAI,CACF8nB,cAAe,CACbf,OAAQ,0CAEVgB,YAAa,CACX7H,QAAS,mCACT6G,OAAQ,YAMlByF,SAAU,CACRj+B,KAAM,WAIZ,CACE2xB,QAAS,CACPsU,uBAAuB,SAAO,SAACxgC,EAAGoM,GAAU,OAC1CnW,MAAO,CACLE,KAAM,YACNsgC,qBAAsB,YACtBzgC,wBAAyBoW,EAAMnW,MAAMD,yBAJG,IAO5CyqC,wBAAwB,SAAO,SAACzgC,EAAGoM,GAAU,OAC3CnW,MAAO,CACLE,KAAM,YACNsgC,qBAAsB,eACtBzgC,wBAAyB,GAJgB,IAO7C0qC,yBAAyB,SAAO,SAAC1gC,GAAM,OACrC/J,MAAO,CACLE,KAAM,YACNsgC,qBAAsB,uBACtBzgC,wBAAyB,GAJU,IAOvC2qC,aAAa,SAAO,SAAC3gC,EAAGoM,GACtB,MAAO,CACL9V,SAAU8V,EAAM9V,SAChBC,eAAgB6V,EAAM7V,eAE1B,IACAqqC,wBAAwB,SAAO,SAAC5xC,GAE9B,IAAMiH,EAAQjH,EAAQiH,MAEtB,OADAA,EAAMwgC,qBAAuB,uBACtB,CACL1jB,UAAW,GACX9c,MAAK,EAET,IACAgjC,iBAAiB,SAAO,SAACjqC,GACf,IAAAsH,EAAoCtH,EAAO,SAAjCuH,EAA0BvH,EAAO,eAAjBiH,EAAUjH,EAAO,MACnD,IAAKsH,IAAaL,GAAwB,cAAfA,EAAME,KAC/B,MAAM,IAAIhJ,MAAM,uCASlB,MAAO,CAAE+kC,aAP6C,CACpD/7B,KAAM,YACNiqC,kBAAmB9pC,EACnBC,eAAc,EACdkgC,qBAAsBxgC,EAAMwgC,qBAC5BzgC,wBAAyBC,EAAMD,yBAGnC,IACA6qC,kCAAkC,QAAU,yBAE9CtK,OAAQ,CACN,iBAAkB,SAACvnC,GAAO,MAAK,MAAwB,eAAX,QAAb,EAAAA,EAAQiH,aAAK,eAAEE,KAAoB,K,+NCxP7D2qC,IAAsC,IAAAl0C,eAKhD,MAEUm0C,GAET,SAAC,G,IACHvuC,EAAQ,WACRoD,EAAmB,sBACnBM,EAAa,gBACbO,EAAiB,oBACjB3J,EAAQ,WAEFk0C,GAAU,SACd,WACE,OD4QC,SAAiD,G,IACjCC,EAAqB,sBAC3BC,EAAe,gBACXC,EAAmB,oBACtC3uC,EAAQ,WAER,OAAO+tC,GAAoCa,WAAW,CACpD3O,SAAU,CACR78B,oBAAqB,WACnB,OAAO,SAACyrC,GACN,OAAAJ,EAAsB,CACpBnrC,mBAAoB,WAClBurC,EAAK,CAAE9mC,KAAM,gCACf,EACAxE,aAAc,WACZsrC,EAAK,CAAE9mC,KAAM,0BACf,EACA1E,iBAAkB,SAAC,G,IAAEI,EAAK,QACxBorC,EAAK,CAAE9mC,KAAM,4BAA6BtE,MAAK,GACjD,GATF,CAWJ,EACAC,cAAe,SAAClH,GAEd,IAAM8vB,EAAe9vB,EAAQiH,MAAOE,KACpC,OAAO,SAACkrC,GACNH,EAAgBpiB,EAAc,CAC5B1oB,YAAa,SAAC,G,IAAEE,EAAQ,WAAEC,EAAc,iBACtC,OAAA8qC,EAAK,CACH9mC,KAAM,qBACNjE,SAAQ,EACRC,eAAc,GAHhB,EAKFF,cAAe,WAAM,OAAAgrC,EAAK,uBAAL,GAEzB,CACF,EACAC,eAAgB,SAACvL,EAAU3pB,GACzB,IAAM+lB,EAAO/lB,EAAMrZ,KAEnB,OAAO,SAACsuC,GASN7uC,EACE,CACE2D,KAAMg8B,EAAKh8B,KACXnD,KAAMm/B,EAAKn/B,KACX0D,QAASy7B,EAAKz7B,QACdmf,OAAQsc,EAAKtc,OACb1G,QAASgjB,EAAKhjB,UAdlB,WACEkyB,EAAK,gBACP,IAEA,SAAiB/mC,GACf+mC,EAAK,CAAE9mC,KAAM,cAAeD,MAAK,GACnC,GAaF,CACF,EACAinC,cAAe,SAACvyC,GACd,OAAO6wC,GAAqB2B,YAAY,CACtCtP,aAAcljC,EAAQkjC,aACtBzV,WAAOjvB,EACP2kC,KAAM,CAAC,EACPC,mBAAe5kC,IACd4zC,WAAW,CACZ3O,SAAU,CACRgP,SAAU,SAACzyC,GACT,IAAMmjC,EAAOnjC,EAAQmjC,KACrB,OAAOgP,EAAoBhP,EAAKz7B,QAClC,IAGN,IAGN,CC3VMgrC,CAAwC,CACtC9rC,oBAAmB,EACnBM,cAAa,EACbO,kBAAiB,EACjBjE,SAAQ,GAJV,GAMF,CAAEmvC,UAAU,IAGd,OACE,SAACb,GAAoClyC,SAAQ,IAACF,MAAO,CAAEsyC,QAAO,IAAE,UAC7Dl0C,IAGP,E,YCxBO,SAAS80C,KACN,IAAAZ,GAAY,IAAA/xC,YAAW6xC,IAAoC,QACnE,OAAO,QAILE,GACA,IAAA3yC,cAAY,SAAC6Y,GAWX,MAAO,CACL26B,qBAX2B36B,EAAMpa,SAA+B,qBAYhEsN,UARgB8M,EAAMqwB,OAAO,WAS7BuK,oBAR0B56B,EAAMqwB,OAAO,qBASvCwK,YARkB76B,EAAMqwB,OAAO,iBAS/ByK,SARe96B,EAAMqwB,OAAO,UAS5B0K,SAR6B,IAAf/6B,EAAMg7B,KAUxB,GAAG,IAEP,CCGO,SAASC,KACR,MAIFP,KAHoBZ,EAAO,uBAC7B5mC,EAAS,YACT4nC,EAAQ,WAGV,IAAKhB,EACH,MAAM,IAAI7zC,MACR,2HAIJ,IAAMooC,GAAU,IAAAlnC,cACd,SAAC2E,GAAiB,OAAAguC,EAAQK,KAAK,CAAE9mC,KAAM,aAAcvH,KAAI,GAAvC,GAClB,CAACguC,IAEGhB,GAAa,IAAA3xC,cACjB,SAACqI,GACC,OAAAsqC,EAAQK,KAAK,CAAE9mC,KAAM,gBAAiB7D,QAAO,GAA7C,GACF,CAACsqC,IAEGxuC,GAAW,IAAAnE,cAAY,WAAM,OAAA2yC,EAAQK,KAAK,SAAb,GAAwB,CAACL,IACtDtL,GAAU,IAAArnC,cACd,SAAC6hB,GAAe,OAAA8wB,EAAQK,KAAK,CAAE9mC,KAAM,aAAc2V,KAAI,GAAvC,GAChB,CAAC8wB,IAGGoB,GAAoB,IAAA/zC,cACxB,WACE,OAAA2yC,EAAQK,KAAK,CACX9mC,KAAM,iBADR,GAGF,CAACymC,IAGH,OAAO,QACLA,GACA,IAAA3yC,cACE,SAAC6Y,GACO,MAA+CA,EAAMlY,QAAnDojC,EAAa,gBAAEF,EAAY,eAAEC,EAAI,OAAE1V,EAAK,QAC1C4lB,EAAYn7B,EAAMqwB,OAAO,WACzB+K,EACJp7B,EAAMqwB,OAAO,gBAAkBrwB,EAAMqwB,OAAO,aACxCgL,EAAgC,eAAlBnQ,EACdoQ,EAAiBt7B,EAAMqwB,OAAO,gBAC9BkL,EAAiBv7B,EAAMqwB,OAAO,eAE9BmL,OACqCl1C,IAAzC0kC,EAAal8B,wBAETmqC,EAAkBkC,OACpB70C,EACA0kC,EAAakO,kBAAkBjvB,MAC7B,SAAC6B,GAAC,MAAK,OAAAA,EAAE1lB,MAAmB,QAAZ,EAAA6kC,EAAKz7B,eAAO,eAAEpJ,GAAE,IAGhCq1C,EAAeN,GAEjB5lB,aADAjvB,EACAivB,EAAOtL,MAAK,SAACG,GAAC,MAAK,OAAS,QAAT,EAAA6gB,EAAKjiB,YAAI,eAAE5iB,MAAOgkB,EAAEhkB,EAAE,IAEvCgN,EAAiC83B,IAEnCkQ,EACA,oBACA90C,GAEEmvC,EAAiBzK,EAAal8B,wBAE9B4sC,OAEuCp1C,IAAzC0kC,EAAal8B,yBAC4B,IAAzCk8B,EAAal8B,6BAIb2sC,aAAY,EAAZA,EAAc1sC,SACdi8B,EAAal8B,0BAEN2sC,EAAa1sC,MAAQi8B,EAAal8B,wBAK7C,MAAO,CACLm8B,KAAMA,EACND,aAAY,EACZiO,gBAAe,EACfwC,aAAY,EACZlmB,MAAOA,EACPkgB,eAAc,EAEdkG,eAAgBzoC,IAAc4nC,IAAaK,EAC3CS,cAAe57B,EAAMqwB,OAAO,eAC5BwL,YAAa77B,EAAMqwB,OAAO,aAC1ByL,YACE97B,EAAMqwB,OAAO,gBACbgL,IACEr7B,EAAMqwB,OAAO,cAAgB+K,EACjCC,YAAW,EACXU,eAAgB/7B,EAAMqwB,OAAO,gBAC7B2L,gBAAiBh8B,EAAMqwB,OAAO,iBAC9B4L,mBAAoBj8B,EAAMqwB,OAAO,aACjC6L,iBAAkBl8B,EAAMqwB,OAAO,YAC/B8L,aAAcn8B,EAAMqwB,OAAO,cAAgB+K,EAC3CgB,gBAAiBp8B,EAAMqwB,OAAO,iBAAmB+K,EACjDiB,gBAAiBr8B,EAAMqwB,OAAO,iBAAmB+K,EACjDI,0BAAyB,EACzBE,0BAAyB,EACzBxoC,UAAS,EACTqoC,eAAc,EACdD,eAAc,EACdR,SAAQ,EAER1nC,MAAK,EAELi7B,QAAO,EACPyK,WAAU,EACVxtC,SAAQ,EACRkjC,QAAO,EACP0M,kBAAiB,EAErB,GACA,CACEhoC,EACA4nC,EACAxvC,EACA4vC,EACA7M,EACAyK,EACAtK,IAIR,CCsHO,I,mNCjRM8N,GAET,SAAC,G,IAAEltC,EAAQ,WAAE5H,EAAK,QAAE66B,EAAQ,WAAEjO,EAAU,aAAEwe,EAAS,YAC7C52B,GAAM,IAAA0F,gBAAe,yBAAwB,EACrD,OACE,gCACuB,IAApBtS,EAASE,SACR,SAAC,EAAAujC,SAAQ,CACPnS,UAAU,gBACVoS,iBAAiB,sBAGrB,mBAAKC,KAAK,UAAS,aAAa/2B,EAAE,0BAAwB,WACxD,SAAC,EAAAg3B,KAAI,IACHC,eAAgB,CAAE5hB,QAAS,8BAC3B6hB,OAAQ,CAAE7hB,QAAS,cACnB8hB,WAAY,CAAE9hB,QAAS,iBAAgB,UAEtCjiB,EAASmE,KAAI,SAACmB,GAAM,OACnB,SAAC,EAAA2+B,SAAQ,IAACC,KAAM,CAAEjiB,QAAS,SAAQ,WACjC,UAAC,EAAAmmB,KAAI,IACH9W,UAAW,aACX6b,oBAAoB,EACpBxW,WAAYv+B,IAAUkN,EACtB8nC,oBAAoB,EACpBC,iBAAkBroB,GAA2B,UAAb1f,EAAEzI,OAClCywC,wBAAyB,WAAM,OAAAra,EAAS3tB,EAAT,GAAW,YAE1C,SAAC,EAAAgjC,UAAS,UAAE17B,EAAE,wBACd,SAAC,EAAA27B,SAAQ,UAAEjjC,EAAEtO,MACb,UAAC,EAAAu2C,WAAU,WACR,WACC,OAAQjoC,EAAEzI,QACR,IAAK,QACH,OAAO,SAAC,EAAA2wC,OAAM,IAChB,IAAK,eACH,OAAO,SAAC,EAAA3E,QAAO,CAACjvB,KAAM,OACxB,IAAK,SACH,OAAO,SAAC,EAAA6zB,iBAAgB,IAE7B,CATA,GASG,IAEHnoC,EAAEzI,gBAvBiCyI,EAAEtO,GADzB,WA+BzB,SAAC,EAAAqtC,WAAU,IACT/S,UAAW,oBACXl5B,MAAOA,EACPpB,GAAG,6BACH0F,KAAK,iBACLsoB,WAAYA,EACZwe,UAAWA,EACXvQ,SAAU,SAAC76B,GAAU,OAAA66B,EAAS76B,EAAT,GAA8C,UAElE,EACC,SAAC,EAAAksC,iBAAgB,CACflsC,MAAM,GAEN67B,MAAOrnB,EAAE,6BADL,eAGN5M,EAASmE,KAAI,SAACmB,EAAG8uB,GACf,OAAO,SAAC,EAAAkQ,iBAAgB,CAAalsC,MAAOkN,EAAG2uB,MAAO3uB,EAAEtO,IAA1Bo9B,EAChC,UAKV,E,mNCvFasZ,GAET,SAAC,G,IAAEt1C,EAAK,QAAE4H,EAAQ,WAAEizB,EAAQ,WAAEjO,EAAU,aAAEugB,EAAO,UAC3C34B,GAAM,IAAA0F,gBAAe,yBAAwB,EAE/CkxB,EAAa+B,EAAoB,UAAV,QAE7B,OACE,SAAC,EAAAtP,UAAS,IACRhC,MAAOrnB,EAAE,kBACTspB,QAAQ,6BACRsN,UAAWA,EACXwB,kBAAmBp4B,EAAE,mBACrB44B,YAAU,cAEV,SAAC0H,GAAqB,CACpBltC,SAAUA,EACV5H,MAAOA,EACP66B,SAAUA,EACVjO,WAAYA,EACZwe,UAAWA,MAInB,E,mNCRamK,GAET,SAAC,G,IACHC,EAAM,SACN3sC,EAAgB,mBAChBC,EAA6B,gCAC7BC,EAAqB,wBACrBR,EAAiB,oBACjBS,EAAuB,0BAEjB,EACJyqC,KADMjQ,EAAY,eAAEyQ,EAAY,eAAEroC,EAAK,QAAE9H,EAAQ,WAG7C+sC,GAAW,IAAAlxC,cACf,SAAC+d,GACCA,EAAM+3B,iBACN3xC,GACF,GACA,CAACA,IAGH,OACE,iCACE,SAAC4sC,GAAwB,CACvB3I,qBAAsBvE,EAAauE,qBACnCl/B,iBAAkBA,KAGpB,UAAC,EAAA2iC,KAAI,IACH9mC,UAAW,CAAEmlB,QAAS,SAAUoP,GAAI,OACpC0X,WAAY,CAAE1X,GAAI,wBAAuB,YAEzC,UAAC,EAAA4S,SAAQ,IAAC+E,KAAM,CAAE/mB,QAAS,WAAU,YACnC,SAAC,GAAU,CAACje,MAAOA,EAAO+jC,iBAAkB9mC,KAC5C,UAAC,EAAA80B,KAAI,IAACkT,SAAUA,EAAUjyC,GAAI42C,GAAM,YAClC,SAAC,GAA0B,KAC3B,SAAC,GAA2B,KAC5B,SAAC,GAAgB,KACjB,SAAC,GAAkB,CACjB1sC,8BAA+BA,EAC/BC,sBAAuBA,aAI7B,SAAC,EAAA8iC,SAAQ,IACP+E,KAAM,CAAE/mB,QAAS,UACjBqP,UAAU,qCAAmC,eAE3Bp6B,IAAjBm1C,GACC,SAAC,GAAoB,CACnBpE,SAAS,EACTtnC,kBAAmBA,KAGrB,SAAC,GAAY,CACXsnC,SAAS,EACTC,0BAAsBhxC,EACtBmiB,QAASgzB,EAAahzB,QACtBH,OAAQmzB,EAAanzB,OACrBkB,QAASiyB,EAAajyB,QACtBzO,cAAe0gC,EAAa1gC,cAC5BW,YAAa+/B,EAAa//B,YAC1BE,eAAgB6/B,EAAa7/B,eAC7B8M,YAAa+yB,EAAa/yB,YAC1B3Y,kBAAmBA,EACnBwnC,eAAgBkE,EAAahoC,YAC7BwU,QAAS,CACPzgB,MAAO,YACPgJ,wBAAuB,EACvB6C,KAAM,sBAQtB,EAEa,GAAoD,WACzD,MAQF4nC,KAPFhQ,EAAI,OACJoQ,EAAW,cACXO,EAAa,gBACbC,EAAW,cACXC,EAAW,cACXH,EAAa,gBACbtN,EAAO,UAGH4F,EACAoH,EACK,QACEO,EACF,UACEC,GAAeC,EACjB,WAEF,QAGT,OACE,SAAC,GAAiB,CAChBt0C,MAAOyjC,EAAKn/B,MAAQ,GACpBmoC,SAAUA,EACV7f,YAAaunB,EACbtZ,SAAUgM,GAGhB,EAEa,GAAqD,WAC1D,MACJ4M,KADMhQ,EAAI,OAAED,EAAY,eAAEoR,EAAc,iBAAET,EAAa,gBAAE7C,EAAU,aAG/D1pC,EAAW47B,EAAakO,kBAE9B,OACE,SAAC4D,GAAqB,CACpBnI,SAAUyH,EACVhtC,SAAUA,EACV5H,MAAOyjC,EAAKz7B,QACZ4kB,YAAaunB,EACbtZ,SAAUyW,GAGhB,EAEa,GAA0C,WAC7C,IAAA6C,EAAkBV,KAAyB,cAEnD,OACE,SAAC,GAAO,CACNhH,SAAU,QACVD,QAAS,QACTxsC,MAAO,QACP4sB,YAAaunB,EACbtZ,SAAU,WAAM,WAGtB,EAEa,GAKT,SAAC,G,MAAE/xB,EAA6B,gCAAEC,EAAqB,wBACnD,EAYF0qC,KAXFhQ,EAAI,OACJ1V,EAAK,QACLymB,EAAe,kBACfD,EAAc,iBACdI,EAAW,cACXF,EAAkB,qBAClBN,EAAa,gBACbJ,EAAc,iBACdroC,EAAS,YACTs7B,EAAO,UACPiH,EAAc,iBAGhB,OACE,SAAC,GAAS,CACRjuC,MAAgB,QAAT,EAAAyjC,EAAKjiB,YAAI,eAAEja,MAClBwmB,MAAOA,EACPkgB,eAAgBA,EAChBrhB,YAAaunB,QAA2Br1C,IAAVivB,EAC9BriB,UAAWA,GAAaqoC,EACxBpoC,QAASgpC,EACTnG,eAAgBiG,EAChBhI,SACE+H,EAAkB,eAAiBD,EAAiB,WAAa,QAEnE1Z,SAAUmM,EACVl+B,8BAA+BA,EAC/BC,sBAAuBA,GAG7B,E,mNCnLa2sC,GAET,SAAC,GACH,IAAAxuC,EAAmB,sBACnBa,EAAiB,oBACjBP,EAAa,gBACb1D,EAAQ,WACLmW,E,yUAAK,GALL,wEAOH,OAAAA,EAAMrR,aACJ,SAACypC,GAAoC,IACnCnrC,oBAAqBA,EACrBa,kBAAmBA,EACnBP,cAAeA,EACf1D,SAAUA,GAAQ,WAElB,SAAC6xC,GAAqC,MAAK17B,OAE3C,I,EA6BO07B,GAET,SAAC,G,IACH/sC,EAAW,cACXQ,EAAQ,WACRb,EAAiB,oBACjBI,EAAQ,WACRuzB,EAAgB,mBAChBrzB,EAAgB,mBAChBC,EAA6B,gCAC7BC,EAAqB,wBAErBC,GADoB,uBACG,2BAEfwL,GAAM,IAAA0F,gBAAe,yBAAwB,EAE/C,EACJg5B,KADMxnC,EAAS,YAAE2nC,EAAW,cAAEC,EAAQ,WAGlCsC,EAAU,6BAEhB,OACE,SAAC,EAAAxY,MAAK,IACJx+B,GAAG,mBACHiL,QAAS,EAAAwzB,aAAA,MACTnzB,MAAOsK,EAAE,yBACT0nB,iBAAkBA,EAClBjxB,OAAQrC,EACRo6B,OAAO,qBACPzjC,QAASoJ,EACTS,SAAUA,EACVm0B,SAAS,MACTsY,QACE,UAAC,EAAAhd,MAAK,IAACC,WAAW,GAAI,YACpB,SAAC,EAAA4E,UAAS,WACR,SAAC,EAAAO,MAAK,CACJ/E,UAAU,uDACVsX,YAAY,SAAC,EAAAsF,kBAAiB,IAC9BjsC,QAAQ,OACRq0B,UAAQ,EACRwB,SAAO,EACPx1B,MAAOsK,EAAE,qCAGb,UAAC,EAAAkpB,UAAS,YACR,SAAC,EAAAtwB,OAAM,IAELvD,QAAQ,UACRgC,KAAK,SACL43B,KAAMmS,EACNG,qBAAsBvhC,EAAE,6BACxBoY,WAAYlhB,GAAa4nC,EACzB5nC,UAAW4nC,EAAQ,cACP,gCACZtQ,OAAO,iBAAe,UAErBxuB,EAAE,qBAVC,WAYN,SAAC,EAAApH,OAAM,IAELvD,QAAQ,OACR4zB,QAAS90B,EAAQ,cACL,iCAA+B,UAE1C6L,EAAE,mBALC,kBAQF,UAGT,WACC,QAAQ,GACN,KAAK9I,EACH,OACE,iCACE,SAAC,GAAkB,KACnB,SAAC,GAAW,CACV5C,8BAA+BA,EAC/BC,sBAAuBA,EACvBR,kBAAmBA,OAI3B,KAAK8qC,EACH,OACE,SAACkC,GAAqB,CACpBC,OAAQI,EACR/sC,iBAAkBA,EAClBC,8BAA+BA,EAC/BC,sBAAuBA,EACvBR,kBAAmBA,EACnBS,wBAAyBA,IAG/B,QACE,OACE,iCACE,SAAC,GAA4B,KAC7B,SAAC,GAAW,CACVF,8BAA+BA,EAC/BC,sBAAuBA,EACvBR,kBAAmBA,OAK9B,CApCA,KAuCP,E,mNCtKaytC,GAET,SAAC,G,IACH9vC,EAAS,YACTC,EAAY,eACZK,EAAiB,oBACjBE,EAAc,iBACdzC,EAAa,gBACb0C,EAAS,YACT3C,EAAQ,WAEAwQ,GAAM,IAAA0F,gBAAe,SAAQ,EACrC,OACE,SAAC,EAAAynB,cAAa,CACZzW,MAAO,CACL,CACE+qB,aACE,SAAC,EAAAC,cAAa,CACZra,MAAOrnB,EAAE,8CAIf,CACEtK,MAAOsK,EAAE,yBACTipB,QAASv3B,G,IAGTgE,MAAOsK,EAAE,6BACJhO,EAaD,CACEi3B,QAASt3B,GAbX,CACEymB,YAAY,EACZupB,aAAc,CACZ5Y,SAAU,OACVwP,QAASv4B,EAAE,2CAEb4hC,SAAS,EACTtT,MAAO,CACLuT,cAAe,OACfC,OAAQ,aAOlB,CACEC,aAAa,G,IAGbrsC,MAAOsK,EAAE,+BACJ9N,EAaD,CACE+2B,QAASx5B,GAbX,CACE2oB,YAAY,EACZupB,aAAc,CACZ5Y,SAAU,OACVwP,QAASv4B,EAAE,wCAEb4hC,SAAS,EACTtT,MAAO,CACLuT,cAAe,OACfC,OAAQ,a,IAQhBpsC,MAAOsK,EAAE,yBACJ7N,EAaD,CACE82B,QAASz5B,GAbX,CACE4oB,YAAY,EACZupB,aAAc,CACZ5Y,SAAU,OACVwP,QAASv4B,EAAE,wCAEb4hC,SAAS,EACTtT,MAAO,CACLuT,cAAe,OACfC,OAAQ,eAU1B,E,mNCvEaE,GAA+D,SAAC,GAC3E,IAAA10C,EAAa,gBACbuI,EAAY,eACZmC,EAAa,gBACbG,EAAY,eACT8pC,E,yUAAY,GAL4D,iEAOnEjiC,GAAM,IAAA0F,gBAAe,SAAQ,EAErC,OACE,+BACE,UAAC,EAAA4mB,YAAW,IACVj3B,QAAS,EAAAy4B,oBAAA,MACTC,QAAS,CAAE1Y,QAAS,aACpB2Y,iBAAiB,GAAI,YAErB,UAAC,EAAAkU,WAAU,IACT1T,OAAQ,aACR9J,UAAU,8BAA4B,YAEtC,SAAC,EAAAyd,eAAc,CACbx5B,OAAQ,WAAM,OACZ,SAAC,EAAAhQ,KAAI,IAACjM,GAAIY,GAAa,UAAG0S,EAAE,2BADhB,KAIhB,SAAC,EAAAmiC,eAAc,IAAC1T,UAAU,GAAI,UAAG54B,UAEnC,UAAC,EAAAo4B,MAAK,YACJ,SAAC,EAAAC,UAAS,WACR,SAAC,EAAArD,YAAW,IAACnG,UAAW,6BAA2B,WACjD,SAAC,EAAA2F,KAAI,IAACxxB,UAAU,MAAI,UAAEhD,WAG1B,SAAC,EAAAq4B,UAAS,WACR,SAACsT,GAAoB,MAAKS,UAG9B,SAAC,EAAA9T,IAAG,IACF94B,QAAQ,WAAU,cACN,0BACZqvB,UAAU,oBAAkB,WAE5B,UAAC,EAAA0J,QAAO,YACN,SAAC,EAAAC,QAAO,IACNC,MAAO,CAAEC,UAAW,GAAG,cACX,yBACZnkC,GAAG,wBAAuB,aACd4V,EAAE,iCACdwuB,OAAQ,gBACRC,SAA4B,cAAlBz2B,GAA6B,WAEvC,SAAC,EAAAW,KAAI,IAACjM,GAAIyL,EAAwB,WAAC,UAChC6H,EAAE,wCAGP,SAAC,EAAAquB,QAAO,IACNC,MAAO,CAAEC,UAAW,GAAG,cACX,sBACZnkC,GAAG,qBAAoB,aACX4V,EAAE,8BACdwuB,OAAQ,aACRC,SAA4B,WAAlBz2B,GAA0B,WAEpC,SAAC,EAAAW,KAAI,IAACjM,GAAIyL,EAAqB,QAAC,UAC7B6H,EAAE,qCAGP,SAAC,EAAAquB,QAAO,IACNC,MAAO,CAAEC,UAAW,GAAG,cACX,yBACZnkC,GAAG,8BAA6B,aACpB4V,EAAE,uCACdwuB,OAAQ,gBACRC,SAA4B,aAAlBz2B,GAA4B,WAEtC,SAAC,EAAAW,KAAI,IAACjM,GAAIyL,EAAuB,UAAC,UAC/B6H,EAAE,8CAGP,SAAC,EAAAquB,QAAO,IACNC,MAAO,CAAEC,UAAW,GAAG,cACX,2BACZnkC,GAAG,0BAAyB,aAChB4V,EAAE,mCACdwuB,OAAQ,kBACRC,SAA4B,gBAAlBz2B,GAA+B,WAEzC,SAAC,EAAAW,KAAI,IAACjM,GAAIyL,EAA0B,aAAC,UAClC6H,EAAE,0CAGP,SAAC,EAAAquB,QAAO,IACNC,MAAO,CAAEC,UAAW,GAAG,cACX,wBACZnkC,GAAG,uBAAsB,aACb4V,EAAE,gCACdwuB,OAAQ,eACRC,SAA4B,aAAlBz2B,GAA4B,WAEtC,SAAC,EAAAW,KAAI,IAACjM,GAAIyL,EAAuB,UAAC,UAC/B6H,EAAE,iDAQnB,E,mNC9GaoiC,GAET,SAAC,GACH,IAAA90C,EAAa,gBACbuI,EAAY,eACZyL,EAAkB,qBAClBL,EAAkB,qBAClB3D,EAAS,YACTtF,EAAa,gBACbkJ,EAAQ,WACL+gC,E,yUAAY,GARZ,mHAUKjiC,GAAM,IAAA0F,gBAAe,SAAQ,EAErC,OACE,iCACE,uBAASgf,UAAU,8BAA4B,WAC7C,UAAC,EAAAwd,WAAU,IAAC1T,OAAQ,cAAY,YAC9B,SAAC,EAAA2T,eAAc,CACbx5B,OAAQ,WAAM,OACZ,SAAC,EAAAhQ,KAAI,IAACjM,GAAIY,GAAa,UAAG0S,EAAE,2BADhB,KAIhB,SAAC,EAAAmiC,eAAc,CACbx5B,OAAQ,WAAM,gBAAC,EAAAhQ,KAAI,IAACjM,GAAI4U,GAAkB,UAAGzL,IAA/B,KAEhB,SAAC,EAAAssC,eAAc,CACbx5B,OAAQ,WAAM,OACZ,SAAC,EAAAhQ,KAAI,IAACjM,GAAIuU,GAAkB,UACzBjB,EAAE,gCAFO,KAMhB,SAAC,EAAAmiC,eAAc,IAAC1T,UAAU,GAAI,UAAGnxB,aAGrC,SAAC,EAAAgvB,YAAW,IAACj3B,QAAS,EAAAy4B,oBAAA,OAAyB,WAC7C,UAAC,EAAAG,MAAK,YACJ,SAAC,EAAAC,UAAS,WACR,SAAC,EAAArD,YAAW,WACV,SAAC,EAAAR,KAAI,IAACxxB,UAAU,MAAI,UAAEyE,UAG1B,SAAC,EAAA4wB,UAAS,WACR,SAACsT,GAAoB,MAAKS,aAIhC,SAAC,EAAA3V,YAAW,IACVj3B,QAAS,EAAAy4B,oBAAA,MACTC,QAAS,CAAE1Y,QAAS,aACpBqP,UAAU,uBACVsJ,iBAAiB,GAAI,WAErB,SAAC,EAAAG,IAAG,IAAC94B,QAAQ,WAAWqvB,UAAU,oBAAkB,WAClD,UAAC,EAAA0J,QAAO,YACN,SAAC,EAAAC,QAAO,IACNC,MAAO,CAAEC,UAAW,GAAG,aACXvuB,EAAE,4CACdwuB,OAAQ,gBACRC,SAA4B,aAAlBz2B,GAA4B,WAEtC,SAAC,EAAAW,KAAI,IAACjM,GAAIwU,EAAmB,UAAC,UAC3BlB,EAAE,mDAGP,SAAC,EAAAquB,QAAO,IACNC,MAAO,CAAEC,UAAW,GAAG,aACXvuB,EAAE,qCACdwuB,OAAQ,aACRC,SAA4B,aAAlBz2B,GAA4B,WAEtC,SAAC,EAAAW,KAAI,IAACjM,GAAIwU,EAAmB,UAAC,UAC3BlB,EAAE,4CAGP,SAAC,EAAAquB,QAAO,IACNC,MAAO,CAAEC,UAAW,GAAG,aACXvuB,EAAE,uCACdwuB,OAAQ,kBACRC,SAA4B,eAAlBz2B,GAA8B,WAExC,SAAC,EAAAW,KAAI,IAACjM,GAAIwU,EAAqB,YAAC,UAC7BlB,EAAE,8CAGP,SAAC,EAAAquB,QAAO,IACNC,MAAO,CAAEC,UAAW,GAAG,aACXvuB,EAAE,oCACdwuB,OAAQ,eACRC,SAA4B,YAAlBz2B,GAA2B,WAErC,SAAC,EAAAW,KAAI,IAACjM,GAAIwU,EAAkB,SAAC,UAC1BlB,EAAE,qDAQnB,E,mNCpHaqiC,GAET,SAAC,G,IAAE3yC,EAAiB,oBACdsQ,GAAM,IAAA0F,gBAAe,SAAQ,EACrC,OACE,UAAC,EAAAigB,WAAU,IAACtwB,QAAS,EAAAuwB,kBAAA,IAAoB,YACvC,SAAC,EAAAC,eAAc,CAACC,KAAM,EAAAwc,kBACtB,SAAC,EAAAtc,MAAK,IAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,+CAEL,SAAC,EAAAmmB,eAAc,WACb,SAAC,EAAAtgB,MAAK,CACJC,GAAI,QACJC,QAAS,yCACTC,WAAY,EAAC,cAAGijB,QAASv5B,UAG7B,SAAC,EAAAkJ,OAAM,IACL41B,OAAO,gBACPn5B,QAAQ,UACR4zB,QAASv5B,GAAiB,UAEzBsQ,EAAE,+DAIX,E,mNClCM,GAAU,CAAC,KAAM,UAYVuiC,GAAoB,SAA6B,G,IChBpDviC,EDiBR5M,EAAQ,WACR9C,EAAS,YACTpC,EAAI,OACJyC,EAAY,eACZjB,EAAiB,oBAEX1B,ECXC,CACLY,OATE,CACFxE,IALM4V,GAAM,IAAA0F,gBAAe,WAAU,GAK/B,aACNzV,OAAQ+P,EAAE,iBACV+W,cAAe/W,EAAE,wBACjB4H,GAAI5H,EAAE,aACNgX,YAAahX,EAAE,sBACf6W,uBAAwB7W,EAAE,mCDgB5B,OACE,SAAC,EAAAssB,YAAW,IAACC,UAAU,GAAI,WACzB,SAACE,EAAA,EAAS,CACRE,UAAW,OACX98B,KAAMuD,EACNhD,QAAS,GACTw8B,aAAc,SAAC,G,IAAEC,EAAM,SAAE1H,EAAE,KAAEj5B,EAAG,MAAO,OACrC,SAACi5B,EAAE,UAAYn3B,EAAOY,OAAOi+B,IAApB3gC,EAD4B,EAGvC+gC,WAAY,SAAC,G,IAAEJ,EAAM,SAAE56B,EAAG,MAAEqzB,EAAE,KAAEp5B,EAAG,MACjC,OACE,SAACo5B,EAAE,IAAWC,UAAWv3B,EAAOY,OAAOi+B,IAAO,UAC3C,WACC,OAAQA,GACN,IAAK,KACH,OAAO56B,EAAI7H,GACb,IAAK,SACH,OAAO6H,EAAIhC,OAEhB,CAPA,KADM/D,EAWb,EACAs2C,kBAzBa,KA0BblyC,UAAWA,EACXpC,KAAMA,EACNyC,aAAcA,EACdmI,kBACE,SAACupC,GAA6B,CAC5B3yC,kBAAmBA,IAGvBi+B,qBACE,wCAKV,E,mNErDa8U,GAET,SAAC,GAAE,IAAA5sC,EAAY,eAAK4P,E,yUAAK,GAAxB,kBACKzF,GAAM,IAAA0F,gBAAe,SAAQ,EAErC,OACE,SAACC,EAAA,GAAW,MACNF,EAAK,CACTpQ,QAAS,cACTK,MAAOsK,EAAE,yBACT4F,kBAAmB/P,GAAY,WAE/B,SAAC,EAAAgQ,MAAK,CACJC,GAAI,QACJC,QAAS,0BACTC,WAAY,EAAC,uBACbC,OAAQ,CACNpQ,aAAY,OAKtB,E,+NCjCa,GAET,SAAC,G,IAAE8M,EAAG,MAAEK,EAAK,QAAEpZ,EAAQ,WACzB,OACE,SAAC,gBAAwB,IACvB+Y,IAAKA,EACLC,UAAW,CACTC,GAAI,CACFC,OAAQ,WACN,6CACF,wBAAyB,WACvB,4CACF4/B,MAAO,WAAM,4CACb,mBAAoB,WAAM,4CAC1BrjC,QAAS,WAAM,6CACfyB,MAAO,WAAM,6CACb,2BAA4B,WAC1B,6CACF,eAAgB,WAAM,6CACtB,kBAAmB,WAAM,6CACzB,iBAAkB,WAAM,6CACxB,oBAAqB,WACnB,6CACF,uBAAwB,WACtB,6CACFtN,QAAS,WAAM,8CAEjBmvC,GAAI,CACF7/B,OAAQ,WAAM,OAAAhJ,QAAQuhB,QAAQ,CAAEunB,OAAQ,WAA1B,IAGlB5/B,MAAOA,GAAK,UAEXpZ,IAGP,E,+CC9Bai5C,GAA2D,SAAC,G,IACvEt2B,EAAU,aAEJu2B,EAAYv2B,GAAa,EAAAw2B,GAAA,GAAkBx2B,EAAYH,KAAK42B,OAAS,EAC3E,OACE,SAAC,EAAAvZ,MAAK,CACJp0B,QACEytC,EAAY,GACR,OACAA,EAAY,IAAMA,EAAY,EAC9B,UACA,SAENptC,OACE,SAAC,EAAAmQ,MAAK,CACJE,QAAQ,oBACRC,WAAY,CACVi9B,MAAM,SAACC,GAAA,EAAU,CAACC,KAAM52B,EAAY62B,OAAO,kBAE7C,YAEM,SACV1Z,UAAQ,EACRhF,UAAU,cAGhB,E,mNCGa2e,GAA+D,SAAC,G,IAC3Ej5C,EAAE,KACF8hB,EAAS,YACTuB,EAAS,YACTzd,EAAK,QACL6c,EAAQ,WACRE,EAAM,SACNR,EAAU,aACVqP,EAAY,eACZ5O,EAAI,OACJP,EAAO,UACPH,EAAM,SACNkB,EAAO,UACPzO,EAAa,gBACbW,EAAW,cACXE,EAAc,iBACd8M,EAAW,cACXT,EAAO,UACPq3B,EAAY,eAEJtjC,GAAM,IAAA0F,gBAAe,SAAQ,EAE/B69B,EAAqB,SAAC7tC,EAAelK,GAAkC,OAC3E,iCACE,SAAC,EAAAg4C,aAAY,IAAC3qC,UAAW,EAAA4qC,qBAAA,IAAuB,UAAG/tC,KAClDlK,GACC,SAAC,EAAAg4C,aAAY,IAAC3qC,UAAW,EAAA4qC,qBAAA,IAAuB,UAAGj4C,MAEnD,SAAC,EAAAqrC,SAAQ,CACPzR,MAAM,MACN0R,iBAAkB92B,EAAE,2CAA4C,CAC9D0jC,YAAahuC,QATsD,EAe7E,OACE,oBAAKgvB,UAAU,qCAAmC,WAC9B,aAAjB9I,GAA+BrP,IAC9B,SAACs2B,GAAe,CAACt2B,WAAYA,KAE/B,SAAC,EAAAse,YAAW,WACV,UAAC,EAAA8Y,SAAQ,IAAC9qC,UAAW,EAAA+qC,iBAAA,IAAmB,WACpB,aAAjBhoB,GACC2nB,EACEvjC,EAAE,eACFgN,EACIhN,EAAE,6CAA8C,CAC9CxU,MAAOwhB,SAET1iB,GAEPi5C,EACCvjC,EAAE,WACFyM,EACIzM,EAAE,sCAAuC,CACvCxU,MAAOihB,SAETniB,GAELi5C,EACCvjC,EAAE,UACFsM,EACItM,EAAE,qCAAsC,CACtCxU,MAAO8gB,SAEThiB,GAELi5C,EACCvjC,EAAE,YACFwN,aAAO,EAAPA,EAAShiB,OACLwU,EAAE,sCAAuC,CACvCxU,MAAOgiB,EAAQhiB,aAEjBlB,GAELi5C,EACCvjC,EAAE,cACFjB,EACIiB,EAAE,yCAA0C,CAC1CxU,MAAOuT,SAETzU,GAELi5C,EACCvjC,EAAE,sBACFN,EACIM,EAAE,iDAAkD,CAClDxU,MAAOkU,SAETpV,GAELi5C,EACCvjC,EAAE,mBACFJ,EACII,EAAE,8CAA+C,CAC/CxU,MAAOoU,SAETtV,GAELi5C,EACCvjC,EAAE,iBACF0M,aAAW,EAAXA,EAAalhB,OACTwU,EAAE,2CAA4C,CAC5CxU,MAAOkhB,EAAYlhB,aAErBlB,GAGLi5C,EAAmBvjC,EAAE,aAAc5V,GACnCm5C,EAAmBvjC,EAAE,wBAAyBsjC,GAC9CC,EAAmBvjC,EAAE,gBAAiBhQ,GACtCuzC,EACCvjC,EAAE,wBACF,SAACkjC,GAAA,EAAU,CAACC,KAAMj3B,EAAWk3B,OAAQ,UAEtCG,EACCvjC,EAAE,wBACF,SAACkjC,GAAA,EAAU,CAACC,KAAM11B,EAAW21B,OAAQ,UAEtCG,EAAmBvjC,EAAE,yBAA0B6M,GAC/C02B,EAAmBvjC,EAAE,iBAAkB+M,GACvCw2B,EACCvjC,EAAE,6CACF,WACE,QAAgB1V,IAAZ2hB,EAAJ,CAEO,GAAgB,YAAZA,EACT,OAAOjM,EAAE,gDACJ,GAAgB,cAAZiM,EACT,OAAOjM,EAAE,kDAET,OAAQiM,EAAQqC,aACd,IAAK,MACH,OACE,gCACGtO,EAAE,kDACH,kBACCiM,EAAQuC,gBAGf,IAAK,QACH,OACE,gCACGxO,EAAE,oDACH,kBACCiM,EAAQuC,gBAGf,IAAK,MACH,OACE,gCACGxO,EAAE,kDACH,kBACCiM,EAAQuC,gBAGf,IAAK,MACH,OACE,gCACGxO,EAAE,iDACH,kBACCiM,EAAQuC,gB,CAKpB,CA3CD,aAiDZ,E,mNCzMaq1B,GAA6C,WAChD,IAAA7jC,GAAM,IAAA0F,gBAAe,SAAQ,EACrC,OACE,UAAC,EAAAigB,WAAU,IAACtwB,QAAS,EAAAuwB,kBAAA,OAAuB,YAC1C,SAAC,EAAAC,eAAc,CAACC,KAAM,EAAAge,wBAAyBhI,MAAO,aACtD,SAAC,EAAA9V,MAAK,IAACC,aAAc,KAAMjZ,KAAM,EAAAkZ,WAAA,IAAa,UAC3ClmB,EAAE,iCAEL,SAAC,EAAAmmB,eAAc,UAAEnmB,EAAE,iCAGzB,E,mNCYa+jC,GAET,SAAC,G,IACHC,EAAgB,mBAChBC,EAAc,iBACdC,EAAc,iBACdj5C,EAAgB,mBAChBk5C,EAAoB,uBACpBC,EAAe,kBACfC,EAAW,cACXC,EAAoB,uBAGZtkC,GAFqB,iCAEf,IAAA0F,kBAAgB,GAExB,GAA8B,IAAAjb,WAAkB,GAA/CE,EAAU,KAAEC,EAAa,KAMhC,OAAOo5C,GACL,SAACH,GAAmB,KAEpB,oBAAKnf,UAAU,qCAAmC,YAChD,UAAC,EAAAmG,YAAW,IAACnG,UAAU,cAAY,YACjC,SAAC,EAAA2F,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,6DAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiBpG,UAAU,cAAY,UACrD1kB,EAAE,uCAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,kDAEJikC,GACC,SAAC,EAAApN,SAAQ,CAAC6D,SAAS,SAEnB,SAAC,EAAA6J,cAAa,kBACA,iCACZC,cAAexkC,EAAE,mCACjBykC,YAAU,aAETP,UAIP,UAAC,EAAArZ,YAAW,IAACnG,UAAU,cAAY,YACjC,SAAC,EAAA2F,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiBpG,UAAU,cAAY,UACrD1kB,EAAE,6CAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,WAE/B,SAAC,EAAAjlB,MAAK,CACJE,QACE,gEAEFC,WAAY,CACVxa,OACE,SAAC,EAAAmN,KAAI,CACHjM,GAAIy3C,EAAoB,cACZ,sCAQ1B,SAAC,EAAAvrC,OAAM,IACLvD,QAAS,EAAAykC,cAAA,UACTpQ,UAAQ,gBACI,2CACZ/0B,KAAM,UACJF,SAASC,SAAS2B,SAASquC,WAAW,SAAW,QAAU,GAAE,yCAE/D7rC,UAAW,KAAG,UAEbmH,EAAE,6CAEL,SAAC,EAAA6qB,YAAW,IAACnG,UAAU,cAAY,WACjC,SAAC,EAAA2F,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,WAE/B,SAAC,EAAAjlB,MAAK,CACJE,QAAS,kCACTC,WAAY,CACVxa,OAAO,SAAC,EAAAmN,KAAI,CAACjM,GAAI03C,cAM3B,SAAC,EAAAvZ,YAAW,IAACnG,UAAU,cAAY,WACjC,UAAC,EAAAigB,kBAAiB,IAChBC,eACE,mBAAKlgB,UAAU,gBAAc,WAC3B,SAAC,EAAA2F,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiBpG,UAAW,gBAAc,UACxD1kB,EAAE,wCAITrV,WAAYA,EACZk8B,SArFwB,WAC9Bj8B,GAAeD,EACjB,EAoFQ+5B,UAAU,cAAY,YAEtB,SAAC,EAAAmG,YAAW,IAACnG,UAAU,cAAY,WACjC,SAAC,EAAA2F,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,8CAGP,UAAC,EAAA6qB,YAAW,YACV,8BACG7qB,EAAE,4CACH,SAAC,EAAA0jB,QAAO,IACNC,eACE,yBACG3jB,EAAE,qDAGP4jB,aACE,UAAC,EAAAiH,YAAW,YACV,uBAAI7qB,EAAE,qDACN,wBACE,SAAC,EAAA6F,MAAK,CACJC,GAAI,iBACJC,QAAS,sBACTC,WAAY,EACV,SAAC,EAAApN,OAAM,CACL8wB,UAAQ,EACRr0B,QAAS,EAAAykC,cAAA,KACTjhC,UAAU,IACVlE,KAAK,6LAEP,SAACg6B,EAAA,EAAY,CACXC,OAAQ,sBACRj6B,KAAK,oIACL+vB,UAAW,wBAKP,WAGhB,SAAC,EAAA9rB,OAAM,IACLvD,QAAS,EAAAykC,cAAA,MAAmB,aAChB95B,EACV,wDACD,WAED,SAAC,EAAA6kC,SAAQ,aAIdR,GACC,SAAC,EAAAE,cAAa,IACZC,cAAexkC,EAAE,2CACjBykC,YAAU,aAETJ,MAGH,SAAC,EAAAxN,SAAQ,CAAC6D,SAAS,SAErB,SAAC,EAAA7P,YAAW,IAACnG,UAAU,cAAY,WACjC,SAAC,EAAA2F,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,2DAIT,UAAC,EAAA6qB,YAAW,IAACnG,UAAU,cAAY,YACjC,8BACG1kB,EAAE,wCACH,SAAC,EAAA0jB,QAAO,IACNC,eACE,yBACG3jB,EAAE,oDAGP4jB,aACE,UAAC,EAAAiH,YAAW,YACV,uBAAI7qB,EAAE,mDACN,wBACE,SAAC,EAAA6F,MAAK,CACJC,GAAI,iBACJC,QAAS,sBACTC,WAAY,EACV,SAAC,EAAApN,OAAM,CACL8wB,UAAQ,EACRr0B,QAAS,EAAAykC,cAAA,KACTjhC,UAAU,IACVlE,KAAK,4KAEP,SAACg6B,EAAA,EAAY,CACXC,OAAQ,sBACRj6B,KAAK,oIACL+vB,UAAW,wBAKP,WAGhB,SAAC,EAAA9rB,OAAM,IACLvD,QAAS,EAAAykC,cAAA,MAAmB,aAChB95B,EACV,sDACD,WAED,SAAC,EAAA6kC,SAAQ,aAIdZ,GACC,SAAC,EAAApN,SAAQ,CAAC6D,SAAS,SAEnB,SAAC,EAAA6J,cAAa,IACZC,cAAexkC,EAAE,uCACjBykC,YAAU,aAETH,MAGL,SAAC,EAAAzZ,YAAW,IAACnG,UAAU,cAAY,WACjC,SAAC,EAAA2F,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,iEAMb,UAAC,EAAA6qB,YAAW,IAACnG,UAAU,cAAY,YACjC,SAAC,EAAA2F,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiBpG,UAAU,cAAY,UACrD1kB,EAAE,4CAEL,UAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiBpG,UAAU,cAAY,WACrD1kB,EAAE,mCAAoC,KACvC,SAAC,EAAA8kC,MAAK,IAAChJ,MAAM,SAAO,UAAE97B,EAAE,kCACxB,SAAC,EAAA0jB,QAAO,iBACM1jB,EAAE,mCACd4jB,aACE,yBAAM5jB,EAAE,sDAAyD,WAGnE,SAAC,EAAApH,OAAM,IACLvD,QAAS,EAAAykC,cAAA,MAAmB,aAChB95B,EAAE,oDAAkD,WAEhE,SAAC,EAAA6kC,SAAQ,eAIf,SAAC,EAAAxa,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,mDAEL,4BAASA,EAAE,4CACW1V,IAArBW,GACC,SAAC,EAAA4rC,SAAQ,CAAC6D,SAAS,SAEnB,SAAC,EAAA6J,cAAa,IACZC,cAAexkC,EAAE,qCACjBykC,YAAU,aAETx5C,UAIP,UAAC,EAAA4/B,YAAW,IAACnG,UAAU,cAAY,YACjC,SAAC,EAAA2F,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiBpG,UAAU,cAAY,UACrD1kB,EAAE,iCAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,mDAKb,E,mNCtSa+kC,GAET,SAAC,G,IAAEC,EAAc,iBAAEC,EAAa,gBAAEC,EAAW,cACzC,GAA8B,IAAAz6C,WAAS,GAAtCE,EAAU,KAAEC,EAAa,KAE1B,GAAsB,IAAAH,WAAkB,GAAvC06C,EAAM,KAAEC,EAAS,MAExB,IAAA75C,YAAU,WACRX,GAAc,EAChB,GAAG,CAACs6C,IAEJ,IAeMG,EAAWL,EACbC,EAAgB,KAAOD,EACvBC,EAEEjc,GACJ,SAAC,EAAAsc,gBAAe,WACd,SAAC,EAAAC,oBAAmB,IAClBn7C,GAAG,oBACHo7C,OAAO,eAAc,aACV,oBACXC,UAAW,IACXC,SAAS,QACTrwC,QAAQ,QACR4zB,QAAS,SAAC9mB,GAAM,OA5BkBs2B,EA4BG4M,OA3BzCM,UAAUC,UACPC,UAAUpN,EAAKrd,YACfjG,MAAK,WACJiwB,GAAU,EACZ,IACCU,OAAM,WACLV,GAAU,EACZ,IARsB,IAAc3M,CA4BlB,GAA8B,UAE7C0M,EAAS,oCAAsC,yBAKtD,OACE,UAAC,EAAAY,UAAS,IAAC/c,QAASA,GAAO,YACzB,UAAC,EAAAgd,cAAa,IAAC57C,GAAG,gBAAc,WAC7B66C,GAED,SAAC,EAAAN,kBAAiB,IAChBh6C,WAAYA,EACZs7C,YAAU,EACVC,UAAU,qBAAmB,UAE5BlB,SAGJA,GACC,SAAC,EAAAmB,wBAAuB,IACtBx7C,WAAYA,EACZk8B,SAxCS,SAACl8B,GAChBC,EAAcD,EAChB,EAuCQu7C,UAAU,oBACVh2C,UAAU,MAAI,UAEbvF,EAAa,YAAc,eAE5B,QAGV,EC1Fay7C,GAAsB,SACjCC,EACAz6C,GAEA,MAAO,0OAQqBy6C,EAAiB,0JAGRz6C,EAAgB,KACvD,EAmFa06C,GAAwB,SAAC16C,GACpC,MAAO,oMAMEA,EAAgB,uHAO3B,EAEa26C,GAA+B,SAACF,GAC3C,MAAO,0KAKmBA,EAAiB,gJAO7C,EA8CaG,GAA+B,SAC1CH,EACAz6C,GAEA,MAAO,sYAW0By6C,EAAiB,2UAOhBz6C,EAAgB,wHAEpD,EA8Da66C,GAA4B,SACvCJ,EACAz6C,GAEA,MAAO,oQAUoBy6C,EAAiB,uJAGRz6C,EAAgB,KACtD,E,mNCrOa86C,GAA+D,SAAC,G,IAC3EL,EAAiB,oBACjBz6C,EAAgB,mBAERoU,GAAM,IAAA0F,gBAAe,SAAQ,EAE/B,GAAkC,IAAAjb,UAAqB,QAAtDk8C,EAAY,KAAEC,EAAe,KAE9BC,EAAuD,CAC3DC,KAAM9mC,EAAE,4BACR+mC,OAAQ/mC,EAAE,8BACVgnC,QAAShnC,EAAE,+BACXinC,WAAYjnC,EAAE,oCAGhB,OACE,mBAAK0kB,UAAU,qCAAmC,WAChD,UAAC,EAAAmG,YAAW,IAACnG,UAAU,cAAY,YACjC,SAAC,EAAA2F,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,8CAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,8CAEL,UAAC,EAAAq4B,YAAW,YACV,SAAC,EAAAG,gBAAe,CACdC,KAAMoO,EAAqB,KAC3Br7C,MAAM,OACNktC,SAAS,OACT3O,WAA6B,SAAjB4c,EACZtgB,SAAU,WAAM,OAAAugB,EAAgB,OAAhB,KAElB,SAAC,EAAApO,gBAAe,CACdC,KAAMoO,EAAuB,OAC7Br7C,MAAM,SACNktC,SAAS,SACT3O,WAA6B,WAAjB4c,EACZtgB,SAAU,WAAM,OAAAugB,EAAgB,SAAhB,KAElB,SAAC,EAAApO,gBAAe,CACdC,KAAMoO,EAAwB,QAC9Br7C,MAAM,UACNktC,SAAS,UACT3O,WAA6B,YAAjB4c,EACZtgB,SAAU,WAAM,OAAAugB,EAAgB,UAAhB,KAElB,SAAC,EAAApO,gBAAe,CACdC,KAAMoO,EAA2B,WACjCr7C,MAAM,aACNktC,SAAS,aACT3O,WAA6B,eAAjB4c,EACZtgB,SAAU,WAAM,OAAAugB,EAAgB,aAAhB,QAGpB,SAAC,EAAAvc,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiBpG,UAAU,cAAY,UACrD1kB,EAAE,6CAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,yDAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,+BAEJ,WACC,OAAQ2mC,GACN,IAAK,OACH,OAAO/6C,GACL,SAACm5C,GAAiB,CAChBE,cAAemB,GACbC,EACAz6C,GAEFo5C,eDvGwB,m6BCwGxBE,YAAayB,KAGf,SAAC,EAAA9P,SAAQ,CAAC6D,SAAS,QAEvB,IAAK,SACH,OAAO9uC,GACL,SAACm5C,GAAiB,CAChBE,cAAeqB,GAAsB16C,GACrCo5C,eAAgBuB,GACdF,GAEFnB,YAAayB,KAGf,SAAC,EAAA9P,SAAQ,CAAC6D,SAAS,QAEvB,IAAK,UACH,OAAO9uC,GACL,SAACm5C,GAAiB,CAChBE,cDmBoB,gkBClBpBD,eAAgBwB,GACdH,EACAz6C,GAEFs5C,YAAayB,KAGf,SAAC,EAAA9P,SAAQ,CAAC6D,SAAS,QAEvB,IAAK,aACH,OAAO9uC,GACL,SAACm5C,GAAiB,CAChBE,cAAewB,GACbJ,EACAz6C,GAEFo5C,eDyH6B,yuBCxH7BE,YAAayB,KAGf,SAAC,EAAA9P,SAAQ,CAAC6D,SAAS,QAEvB,QACE,OAAO,KAEZ,CAxDA,IAyDD,SAAC,EAAArQ,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiBpG,UAAU,cAAY,UACrD1kB,EAAE,uCAEa,YAAjB2mC,GACC,iCACE,SAAC,EAAAtc,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,4DAEL,SAAC+kC,GAAiB,CAChBE,cDsB0B,wOCrB1BD,eD8BgC,8gBC7BhCE,YAAayB,QAIjB,iCACE,SAAC,EAAAtc,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,WACjC,SAAC,EAAAjlB,MAAK,CACJC,GAAI,QACJC,QAAS,+CACTE,OAAQ,CACNihC,YAAaL,EAAeF,UAIlC,SAAC,EAAAtc,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,+BAEJ,WACC,OAAQ2mC,GACN,IAAK,OACH,OACE,SAAC5B,GAAiB,CAChBE,cDvKe,0VCwKfD,eD7JqB,+fC8JrBE,YAAayB,IAGnB,IAAK,SACH,OAAO,SAAC5B,GAAiB,CAACE,cD9Ed,+JC+Ed,IAAK,aACH,OACE,SAACF,GAAiB,CAChBE,cDmFqB,snBClFrBD,eDgG2B,42BC/F3BE,YAAayB,IAGnB,QACE,OAAO,KAEZ,CAvBA,OA2BL,SAAC,EAAAtc,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiBpG,UAAU,cAAY,UACrD1kB,EAAE,uCAEa,eAAjB2mC,GACC,iCACE,SAAC,EAAAtc,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,gEAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiBpG,UAAU,cAAY,UACrD1kB,EAAE,sDAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,kEAEL,SAAC+kC,GAAiB,CAChBE,cDmImC,soBClInCD,eDiJyC,u0BChJzCE,YAAayB,KAEf,SAAC,EAAAtc,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiBpG,UAAU,cAAY,UACrD1kB,EAAE,wCAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,oDAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,gCAEL,SAAC+kC,GAAiB,CAChBE,cDwF6B,mmBCvF7BD,eDqGmC,6UCpGnCE,YAAayB,KAEf,SAAC,EAAAtc,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiBpG,UAAU,cAAY,UACrD1kB,EAAE,wCAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,oDAEL,SAAC+kC,GAAiB,CAChBE,cDmJoC,mKClJpCD,eDwJ0C,8LCvJ1CE,YAAayB,QAIjB,iCACE,SAAC,EAAAtc,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,WACjC,SAAC,EAAAjlB,MAAK,CACJC,GAAI,QACJC,QAAS,+CACTE,OAAQ,CACNihC,YAAaL,EAAeF,SAIhB,YAAjBA,EAA6B,MAC5B,SAAC,EAAAtc,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,+BAGN,WACC,OAAQ2mC,GACN,IAAK,OACH,OACE,SAAC5B,GAAiB,CAChBE,cDtOe,4XCuOfD,eD5NqB,inCC6NrBE,YAAayB,IAGnB,IAAK,SACH,OACE,SAAC5B,GAAiB,CAChBE,cDjKiB,4QCkKjBD,eDtJuB,6KCuJvBE,YAAayB,IAGnB,IAAK,UACH,OACE,SAAC5B,GAAiB,CAChBE,cD9EkB,4hBC+ElBD,eDhEwB,8fCiExBE,YAAayB,IAGnB,QACE,OAAO,KAEZ,CA7BA,YAmCb,E,mNCvRaQ,GAET,SAAC,G,IACH38C,EAAQ,WACRK,EAAS,YACTF,EAAU,aACVgB,EAAW,cACXZ,EAAO,UACPnB,EAAQ,WACRgC,EAAgB,mBAEV2sC,GAAU,IAAA9sC,UAAQ,WACtB,OACE,SAAC,EAAAi/B,mBAAkB,UAChBlgC,GACC,SAAC48C,GAAwB,CACvB58C,SAAUA,EACVK,UAAWA,EACXc,YAAaA,EACbZ,QAASA,EACTa,iBAAkBA,IAElB,MAGV,GAAG,CAACf,EAAWL,EAAUO,EAASY,EAAaC,IAC/C,OACE,SAAC,EAAA0/B,OAAM,IAAC3gC,WAAYA,EAAY++B,UAAU,GAAI,WAC5C,SAAC,EAAA6B,cAAa,IAACd,aAAc8N,GAAO,WAClC,SAAC,EAAA/M,kBAAiB,IAChB9G,UAAW,gDAA8C,UAExD96B,UAKX,EAIaw9C,GAIT,SAAC,G,IAAE58C,EAAQ,WAAEK,EAAS,YAAEc,EAAW,cAAEZ,EAAO,UAAEa,EAAgB,mBACxDoU,GAAM,IAAA0F,gBAAe,CAAC,UAAS,EACjC1X,EAASy9B,IAET4b,GAAsC,IAAAl8C,cAC1C,SAAC2R,EAAG3N,GAEFxD,EADUwD,EAEZ,GACA,CAACxD,IAGGs4C,EAAiB,eAA0Bz5C,EAASyF,QAE1D,OACE,iCACE,UAAC,EAAA26B,WAAU,YACT,UAAC,EAAAC,YAAW,YACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,MAAoBpG,UAAW,aAAW,UACxD1kB,EAAE,mBAEL,SAAC,EAAAgmB,MAAK,IACJC,aAAc,KACdjZ,KAAM,EAAAkZ,WAAA,GACNxB,UAAW,aAAW,UAErBl6B,EAASsF,YAGd,SAAC,EAAAi7B,cAAa,WACZ,SAAC,EAAAK,kBAAiB,CAACnC,QAASl+B,UAGhC,SAAC,EAAAsgC,gBAAe,WACd,UAAC,EAAAic,KAAI,IAACC,UAAW18C,EAAWi8B,SAAUugB,GAAY,YAChD,SAAC,EAAAG,IAAG,IACFC,SAAU,UACV/xC,OAAO,SAAC,EAAAgyC,aAAY,UAAE1nC,EAAE,0BAAsC,WAE9D,mBAAK0kB,UAAW,yBAAuB,WACrC,SAAC2e,GAAe,CACdj5C,GAAII,EAASJ,GACb4F,MAAOxF,EAASwF,MAChBkc,WAAW,EAAAy7B,GAAA,GAASn9C,EAAS0hB,WAC7BuB,WAAW,EAAAk6B,GAAA,GAASn9C,EAASijB,WAC7BlB,WACE/hB,EAAS+hB,YACL,EAAAo7B,GAAA,GAASn9C,EAAS+hB,iBAClBjiB,EAEN0iB,KAAMxiB,EAASwiB,KACfP,QAASjiB,EAASiiB,QAClBH,OAAQ9hB,EAAS8hB,OACjBkB,QAAShjB,EAASgjB,QAClBzO,cAAevU,EAASuU,cACxBW,YAAalV,EAASkV,YACtBE,eAAgBpV,EAASoV,eACzB8M,YAAaliB,EAASkiB,YACtBG,SACE7e,EAAO6hB,UAAUrlB,EAASqiB,WAAariB,EAASqiB,SAElDE,OACE/e,EAAO89B,gBAAgBthC,EAASqiB,UAAUriB,EAASuiB,SACnDviB,EAASuiB,OAEX6O,aAAcpxB,EAASyI,KACvBgZ,QAASzhB,EAASyhB,QAClBq3B,aAAc94C,EAASiZ,iBAI7B,SAAC,EAAA+jC,IAAG,IACFC,SAAU,cACV/xC,OAAO,SAAC,EAAAgyC,aAAY,UAAE1nC,EAAE,6BAA0C,cACtD,4BAA0B,WAEtC,mBAAK0kB,UAAW,yBAAuB,WACrC,SAACqf,GAAoB,CACnBE,eAAgBA,EAChBC,eAAgB0D,GAAkBp9C,EAASojB,cAC3C3iB,iBAAkBW,EAClBu4C,qBAAsB,mBACtBC,gBAAiB,YACjBC,YAAawD,GAAkBr9C,EAASgR,UACxCssC,8BAA+B,WAE/B,EACAxD,qBACE,gEAKR,SAAC,EAAAkD,IAAG,IACFC,SAAU,aACV/xC,OAAO,SAAC,EAAAgyC,aAAY,UAAE1nC,EAAE,8BAA0C,WAElE,mBAAK0kB,UAAW,yBAAuB,WACrC,SAACgiB,GAAe,CACdL,kBAAmBuB,GAAkBp9C,EAASojB,cAC9ChiB,iBAAkBA,kBAQlC,EAEMg8C,GAAoB,SAACh6B,GACzB,GAAKA,EAGL,OAAOA,aAAY,EAAZA,EAAcm6B,SAAS,SAAUn6B,EAAe,UAAGA,EAAY,OACxE,EAEMi6B,GAAoB,SAACrsC,GACzB,OAAOA,EAAW,UAAGA,EAAQ,iBAAalR,CAC5C,E,2OCrKa09C,IAAc,IAAAC,aACzB,SACE,EACAC,G,IADE18C,EAAK,QAAE,IAAA28C,YAAAA,OAAW,IAAG,GAAK,EAAE,IAAAC,UAAAA,OAAS,IAAG,GAAK,EAAE,IAAAC,YAAAA,OAAW,IAAG,GAAK,EAG5DroC,GAAM,IAAA0F,gBAAe,SAAQ,EAE/B4iC,EAAgBD,EAAc,OAAS,QAE7C,QAAQ,GACN,KAAK,eAAuB78C,GAC1B,OACE,0BACE,UAAC,EAAA+8C,MAAK,IAACjkB,WAAS,EAACI,UAAU,gBAAc,YACvC,SAAC,EAAA8jB,UAAS,WACR,SAAC,EAAAC,gBAAe,CAAC/jB,UAAU,mBAE7B,SAAC,EAAA8jB,UAAS,UAAExoC,EAAE,0BAKtB,KAAK,eAA0BxU,GAC7B,QAAQ,GACN,KAAK28C,EACH,OACE,4BACE,UAAC,EAAAI,MAAK,IAACjkB,WAAS,EAACI,UAAU,gBAAc,YACvC,SAAC,EAAA8jB,UAAS,WACR,SAAC,EAAAvM,QAAO,CAACjvB,KAAK,UAEhB,SAAC,EAAAw7B,UAAS,WACR,SAAC,EAAA5vC,OAAM,IAACsvC,IAAKA,EAAK7yC,QAASizC,EAAe5e,UAAQ,aAC/C1pB,EAAE,+BAIT,SAAC,EAAAypB,MAAK,CACJp0B,QAAQ,UACRq0B,UAAQ,EACRwB,SAAO,EACPx1B,MAAM,4CAId,KAAK0yC,EACH,OACE,4BACE,UAAC,EAAAG,MAAK,IAACjkB,WAAS,EAACI,UAAU,gBAAc,YACvC,SAAC,EAAA8jB,UAAS,WACR,SAAC,EAAAvM,QAAO,CAACjvB,KAAK,UAEhB,SAAC,EAAAw7B,UAAS,WACR,SAAC,EAAA5vC,OAAM,IAACsvC,IAAKA,EAAK7yC,QAASizC,EAAe5e,UAAQ,aAC/C1pB,EAAE,+BAIT,SAAC,EAAAypB,MAAK,CACJp0B,QAAQ,SACRq0B,UAAQ,EACRwB,SAAO,EACPx1B,MAAOsK,EAAE,sCAIjB,QACE,OACE,0BACE,UAAC,EAAAuoC,MAAK,IAACjkB,WAAS,EAACI,UAAU,gBAAc,YACvC,SAAC,EAAA8jB,UAAS,WACR,SAAC,EAAAvM,QAAO,CAACjvB,KAAK,UAEhB,UAAC,EAAAw7B,UAAS,YACR,SAAC,EAAA5vC,OAAM,IAACsvC,IAAKA,EAAK7yC,QAASizC,EAAe5e,UAAQ,aAC/C1pB,EAAE,yBAEL,SAAC,EAAAg3B,KAAI,WACH,SAAC,EAAAK,SAAQ,WACP,SAAC,EAAA8B,WAAU,WACT,SAAC,EAAAC,eAAc,IAAC/jC,QAAQ,iBAAe,UACpC2K,EAAE,iDAWzB,KAAK,eAA0BxU,GAC7B,OACE,0BACE,UAAC,EAAA+8C,MAAK,IAACjkB,WAAS,EAACI,UAAU,gBAAc,YACvC,SAAC,EAAA8jB,UAAS,WACR,SAAC,EAAA1E,wBAAuB,CAACpf,UAAU,sBAErC,SAAC,EAAA8jB,UAAS,UAAExoC,EAAE,6BAKtB,KAAK,eAA4BxU,GAC/B,OACE,0BACE,kBAAGk5B,UAAU,kBAAgB,eAAG1kB,EAAE,6BAGxC,KAAK,eAA2BxU,GAC9B,OACE,0BACE,UAAC,EAAA+8C,MAAK,IAACjkB,WAAS,EAACI,UAAU,gBAAc,YACvC,SAAC,EAAA8jB,UAAS,WACR,SAAC,EAAA1E,wBAAuB,CAACpf,UAAU,sBAErC,SAAC,EAAA8jB,UAAS,WACR,SAAC,EAAA5vC,OAAM,IAACsvC,IAAKA,EAAK7yC,QAASizC,EAAe5e,UAAQ,aAC/C1pB,EAAE,iCAMf,KAAK,eAA0BxU,GAC7B,OACE,0BACE,UAAC,EAAA+8C,MAAK,IAACjkB,WAAS,EAACI,UAAU,gBAAc,YACvC,SAAC,EAAA8jB,UAAS,WACR,SAAC,EAAAvM,QAAO,CAACjvB,KAAK,UAEhB,SAAC,EAAAw7B,UAAS,UAAExoC,EAAE,6BAItB,KAAK,eAA0BxU,GAC7B,OACE,0BACE,kBAAGk5B,UAAU,kBAAgB,eAAG1kB,EAAE,2BAGxC,QACE,OAAO,KAEb,ICtKW0oC,GAAsC,CACjD,UACA,YACA,gBAGWC,GAET,CACFv7B,MAAO,KACPiW,SAAU,KACVpW,SAAU,UACVE,aAAc,eACdD,UAAW,YACXI,YAAa,KACbC,SAAU,KACV+V,UAAW,YACXE,WAAY,KACZD,SAAU,M,mNC3BCqlB,GAET,SAAC,G,IAAEC,EAAa,gBACV7oC,GAAM,IAAA0F,gBAAe,yBAAwB,EAE/CojC,EAAcJ,GAAmB9N,WAAU,SAACxsB,GAAM,OAAAA,IAAMy6B,CAAN,IAElDE,EAAa,SAACvhB,GAClB,OAACshB,IAAgBthB,EAAS,OACzBshB,EAActhB,GAAS,YACxB,SAFA,EAIF,OACE,UAAC,EAAAwhB,gBAAe,IAACC,YAAY,GAAI,YAC/B,SAAC,EAAAC,aAAY,IACX9+C,GAAI,UACJ++C,QAAS,UACTC,UAA6B,YAAlBP,EACXrzC,YAAawK,EAAE,4CAA2C,aAC9CA,EAAE,4CACd3K,QAAS0zC,EAAW,IAAE,UAErB/oC,EAAE,0CAGL,SAAC,EAAAkpC,aAAY,IACX9+C,GAAI,eACJ++C,QAAS,eACTC,UAA6B,iBAAlBP,EACXrzC,YAAawK,EAAE,iDAAgD,aACnDA,EAAE,iDACd3K,QAAS0zC,EAAW,IAAE,UAErB/oC,EAAE,+CAEL,SAAC,EAAAkpC,aAAY,IACX9+C,GAAI,YACJ++C,QAAS,YACTC,UAA6B,cAAlBP,EACXrzC,YAAawK,EAAE,8CAA6C,aAChDA,EAAE,8CACd3K,QAAS0zC,EAAW,IAAE,UAErB/oC,EAAE,8CAIX,E,mNCjCaqpC,GAET,SAAC,G,IACHR,EAAa,gBACb,IAAAV,YAAAA,OAAW,IAAG,GAAK,EACnB,IAAAC,UAAAA,OAAS,IAAG,GAAK,EACjBx2C,EAAwB,2BACxBC,EAAkB,qBAEVmO,GAAM,IAAA0F,gBAAe,yBAAwB,EAE/CojC,EAAcJ,GAAmB9N,WAAU,SAACxsB,GAAM,OAAAA,IAAMy6B,CAAN,IAExD,OACE,0BACE,UAAC,EAAAxkB,MAAK,IAACC,WAAS,eACd,UAAC,EAAA4E,UAAS,WACPif,IACC,SAAC,EAAA1e,MAAK,IACJp0B,QAAQ,UACRq0B,UAAQ,EACRwB,SAAO,EACPx1B,MAAOsK,EAAE,gDAA8C,WAEvD,SAAC,EAAA6qB,YAAW,WACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,WACjC,SAAC,EAAAjlB,MAAK,CACJC,GAAI,CAAC,yBACLC,QAAQ,mDACRC,WAAY,EACV,SAAC,EAAApN,OAAM,CAELvD,QAAS,EAAAykC,cAAA,KACT7Q,QAASr3B,EACT83B,UAAQ,GAHJ,iCAWjB0e,IACC,SAAC,EAAA3e,MAAK,IACJp0B,QAAQ,SACRq0B,UAAQ,EACRwB,SAAO,EACPx1B,MAAOsK,EAAE,gDAA8C,WAEvD,SAAC,EAAA6qB,YAAW,WACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,WACjC,SAAC,EAAAjlB,MAAK,CACJC,GAAI,CAAC,yBACLC,QAAQ,iDACRC,WAAY,EACV,SAAC,EAAApN,OAAM,CAELvD,QAAS,EAAAykC,cAAA,KACT7Q,QAASr3B,EACT83B,UAAQ,GAHJ,uBAKN,SAAC,EAAA9wB,OAAM,CAELvD,QAAS,EAAAykC,cAAA,KACT7Q,QAASp3B,EACT63B,UAAQ,GAHJ,gCAWhB0e,IAAcD,IACd,SAAC,EAAAtd,YAAW,WACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,WACjC,SAAC,EAAAjlB,MAAK,CACJC,GAAI,CAAC,yBACLC,QAAQ,sCACRC,WAAY,EACV,SAAC,EAAApN,OAAM,CAELvD,QAAS,EAAAykC,cAAA,KACT7Q,QAASr3B,EACT83B,UAAQ,GAHJ,kCAWlB,SAAC,EAAAR,UAAS,UACPlpB,EAAE,uCAAwC,CACzC8oC,YAAW,EACXnyB,MAAO+xB,GAAmBp1C,YAG9B,SAAC,EAAA41B,UAAS,WACR,SAAC0f,GAAqB,CAACC,cAAeA,WAKhD,E,mNC3FaS,GAA2D,SAAC,G,IACvE,IAAAC,YAAAA,OAAW,IAAG,GAAK,EACnBt5C,EAAM,SACN,IAAAk4C,YAAAA,OAAW,IAAG,GAAK,EACnB,IAAAC,UAAAA,OAAS,IAAG,GAAK,EACjBx2C,EAAwB,2BACxBC,EAAkB,qBAClB23C,EAAS,YACT5/C,EAAQ,WAEAoW,GAAM,IAAA0F,gBAAe,yBAAwB,EAE/C,GAA4B,IAAAjb,UAAS8+C,GAApCE,EAAS,KAAEC,EAAY,KACxB3+C,EAAU,WAAM,OAAA2+C,GAAa,EAAb,EAEhBC,GAA+B,IAAAx+C,cAAY,WAC/CJ,IACA6G,GACF,GAAG,CAACA,IAEEg4C,GAAyB,IAAAz+C,cAAY,WACzCJ,IACA8G,GACF,GAAG,CAACA,IAEJ,OACE,SAAC,EAAA6xB,QAAO,IACNC,cAAe3jB,EAAE,8BACjB4jB,aACE,SAACylB,GAAoB,CACnBR,cAAe54C,EACfk4C,YAAaA,EACbC,UAAWA,EACXx2C,yBAA0B+3C,EAC1B93C,mBAAoB+3C,IAGxBH,UAAWA,EACXI,WAAY,WAAM,OAAAH,GAAa,EAAb,EAClBI,YAAa,WAAM,OAAAJ,GAAa,EAAb,EACnB3gB,SAAU,QACVghB,YAAY,EACZP,UAAWA,GAAS,UAEnB5/C,IAGP,E,mNCzEaogD,GAAiE,SAAC,G,IAC7EpgD,EAAQ,WACR4/C,EAAS,YAEDxpC,GAAM,IAAA0F,gBAAe,SAAQ,EACrC,OACE,SAAC,EAAAge,QAAO,IACNumB,qBAAsB,UACtBC,YAAY,SAAC,EAAApG,wBAAuB,IACpCngB,cAAe3jB,EAAE,yBACjB4jB,aACE,SAAC,EAAAiH,YAAW,WACV,uBAAI7qB,EAAE,8BAGV+oB,SAAU,QACVygB,UAAWA,GAAS,UAEnB5/C,IAGP,ECXaugD,GAET,SAAC,G,IACHl6C,EAAM,SACNic,EAAS,YACT,IAAAk+B,oBAAAA,OAAmB,IAAG,KAAE,EACxB,IAAAC,kBAAAA,OAAiB,IAAG,KAAE,EACtBz4C,EAAwB,2BACxBC,EAAkB,qBAEZy4C,EAAgB3B,GAAsB14C,GACtC,GAAoB,IAAAxF,WAAsC,GAAzD8/C,EAAK,KAAEC,EAAQ,KAChBC,GAAW,IAAAz/C,QAA0B,MAErC0/C,GAAiB,IAAAv/C,cAAY,WACjC,IAAMw/C,GAAU,EAAAC,GAAA,GAAoB,IAAIx+B,KAAQF,GAE9Cs+B,EADEG,EAAUN,EACH,QACAM,EAAUP,GACV,UAIb,GAAG,CAACl+B,EAAWm+B,EAAmBD,KAElC,EAAAS,GAAA,GAAYH,EAAgB,KAC5B,IAAMvC,EAAwB,YAAVoC,EACdnC,EAAsB,UAAVmC,EAClB,OACE,gCACqB,cAAlBD,GACC,SAACN,GAAgB,CAACR,UAAWiB,IAE7BH,IACE,SAAChB,GAAa,CACZr5C,OAAQq6C,EACRnC,YAAaA,EACbC,UAAWA,EACXx2C,yBAA0BA,EAC1BC,mBAAoBA,EACpB23C,UAAWiB,KAIjB,SAACzC,GAAW,CACVx8C,MAAOyE,EACPk4C,YAAaA,EACbC,UAAWA,EACXC,iBAA+B/9C,IAAlBggD,EACbpC,IAAKuC,MAIb,E,+NCrDMK,GAAkB,CACtB,OACA,QACA,YACA,WACA,SACA,UAGIC,GAAmB,CACvB,OACA,QACA,YACA,YACA,UAwDWC,GAAiB,SAE5B,G,MACA56C,EAAO,UACPC,EAAS,YACTC,EAAS,YACTpC,EAAI,OACJC,EAAO,UACPqC,EAAK,QACLC,EAAM,SACNC,EAAQ,WACRd,EAAiB,oBACjB6B,EAAa,gBACb5C,EAAgB,mBAChB8B,EAAY,eACZe,EAAS,YACTC,EAAY,eACZO,EAAc,iBACdzC,EAAa,gBACb0C,EAAS,YACT3C,EAAQ,WACRF,EAAQ,WACRI,EAAiB,oBACjBkC,EAAwB,2BACxBC,EAAkB,qBAClBC,EAAmB,sBACnBlB,EAAY,eACZE,EAAgB,mBAChBE,EAAiB,oBACjBE,EAAa,gBACbC,EAAiB,oBACjBC,EAAkB,qBAClBC,EAAc,iBACdE,EAAkB,qBAClBC,EAAmB,sBACnBxC,EAAiB,oBACjB8J,EAAgB,mBAChB/G,EAAmB,sBACnBC,EAAiB,oBAETgO,GAAM,IAAA0F,gBAAe,SAAQ,EAC/B1X,EAASy9B,IAGTY,EACJ77B,EAAM8C,OAAS,GAAK7C,EAAO6C,OAAS,GAAK5C,EAAS4C,OAAS,EAE7D,OACE,SAAC,EAAAg5B,YAAW,IAACC,UAAU,GAAI,WACzB,SAACE,EAAA,EAAS,CACR58B,KAAMQ,EACND,QAAqB,aAAZA,EAAyB06C,GAAkBC,GACpDne,aAAc,SAAC,G,IAAEC,EAAM,SAAE1H,EAAE,KAAEj5B,EAAG,MAAO,OACrC,SAACi5B,EAAE,UAAYn3B,EAAOY,OAAOi+B,IAApB3gC,EAD4B,EAGvC+gC,WAAY,SAAC,G,IAAEJ,EAAM,SAAE56B,EAAG,MAAEqzB,EAAE,KAAEp5B,EAAG,MAC3B++C,GAAkB,EAAAtD,GAAA,GAAS11C,EAAIia,WAC/Bg/B,EAAqBn5C,EAAoBE,GAC/C,OACE,SAACqzB,EAAE,IAAWC,UAAWv3B,EAAOY,OAAOi+B,IAAO,UAC3C,WACC,OAAQA,GACN,IAAK,OACH,OACE,SAAC,EAAAj0B,OAAM,CACLvD,QAAQ,OACRwD,UAAW,SAAC4M,GAAU,OACpB,SAAC,EAAA9M,KAAI,IAACjM,GAAIkD,EAAkBqC,IAAUwT,EAAK,UACxCxT,EAAInC,OAFa,EAKtB45B,UAAU,EACVyhB,gBAAiBD,EACjB9yB,YAAa8yB,EACbjiB,QAAS,WAAM,OAAAn3B,EAAoBG,EAApB,IAGrB,IAAK,WACH,OAAOjE,EAAO6hB,UAAU5d,EAAI4a,UAC9B,IAAK,YACH,OACE,UAAC,EAAAwX,MAAK,YACJ,SAAC,EAAA6E,UAAS,WACR,SAACga,GAAA,EAAU,CACTC,KAAM8H,EACN7H,OAAQ,2BAGXnxC,EAAIsa,aACH,SAAC,EAAA2c,UAAS,WACR,SAAC,EAAArjB,MAAK,CACJE,QAAQ,oBACRD,GAAI,CAAC,SACLE,WAAY,CACVi9B,MACE,SAACC,GAAA,EAAU,CACTC,MAAM,EAAAwE,GAAA,GAAS11C,EAAIsa,YACnB62B,OAAO,uBASzB,IAAK,SACH,OACE,SAAC+G,GAAmB,CAClBl6C,OAAQgC,EAAY,OACpBia,UAAW++B,EACXr5C,yBAA0B,WACxB,OAAAA,EAAyBK,EAAzB,EAEFJ,mBAAoBA,IAG1B,IAAK,YACH,OAAOI,EAAIwB,UACb,QACE,OAAOxB,EAAI46B,GAEhB,CA9DA,KADM3gC,EAkEb,EACAghC,cAAe,SAAC,G,IAAEj7B,EAAG,MACbm5C,EAAqBl5C,EAAeD,GACpCo5C,EAAgBl5C,EAAUF,GAC1Bq5C,EAAwBt5C,EAAkBC,GAChD,OACE,SAACuvC,GAAoB,CACnB9vC,UAAW,WAAM,OAAAA,EAAUO,EAAV,EACjBN,aAAc,WAAM,OAAAA,EAAaM,EAAb,EACpBD,kBAAmBs5C,EACnBp5C,eAAgBk5C,EAChB37C,cAAe,WAAM,OAAAA,EAAcwC,EAAd,EACrBE,UAAWk5C,EACX77C,SAAU,WAAM,OAAAA,EAASyC,EAAT,GAGtB,EACAs5C,WAAY,SAAC,G,IAAEt5C,EAAG,MAAO,OAAAP,EAAUO,EAAV,EACzBpD,iBAAkBA,EAClB4C,cAAeA,EACf+5C,aAAc,SAAC,G,IAAEv5C,EAAG,MAAO,sBAA0BA,EAAY,OAAtC,EAC3BuwC,kBAxGa,KAyGbpV,SAAO,KACL,EAACp/B,EAAOY,OAAOkB,MAAO,CACpBuH,KAAM,SACNtH,MAAOS,EACP68B,SAAUz8B,EACV08B,aAAcx8B,EACdy8B,cAAev8B,EACfw8B,SAAU,SAAChiC,GAAU,qCAA+BiiC,KAAKjiC,EAApC,EACrBkiC,aAAc1tB,EAAE,sCAElB,EAAChS,EAAOY,OAAOoB,OAAQ,CACrBqH,KAAM,SACNtH,MAAOU,EACP48B,SAAUn8B,EACVo8B,aAAcn8B,EACdo8B,cAAen8B,EACfo8B,SAAU,SAAChiC,GAAkB,OAAC,yBAAyBiiC,KAAKjiC,EAA/B,EAC7BkiC,aAAc1tB,EAAE,sCAElB,EAAChS,EAAOY,OAAOqB,QAAS,CACtBoH,KAAM,WACNtH,MAAOW,EACPsnC,QAAShqC,EAAO09B,mBAChB7E,SAAUx1B,EACVi8B,aAAc/7B,EACdg8B,cAAe/7B,G,GAGnBw3B,QAAS,CACP,CACE3B,MAAOrnB,EAAE,mBACTipB,QAAS35B,EACTm8C,WAAW,IAGfn7C,UAAWA,EACXpC,KAAMA,EACNC,QAASA,EACTwC,aAAcA,EACd3B,kBAAmBA,EACnB29B,UAAW3sB,EAAE,eACbqsB,WAAYA,EACZvzB,iBACEA,IACE,SAAC,MAAqB,CACpBxJ,SAAUA,EACVI,kBAAmBA,IAIzBi+B,qBACE,SAAC,MAAmB,CAAC3+B,kBAAmBA,QAKlD,E,sHCzRa08C,GAA6D,SAAC,G,IACzEtzB,EAAU,aACV5sB,EAAK,QACL66B,EAAQ,WAEF,GAAoC,IAAA57B,WAAS,GAA5CkhD,EAAY,KAAEC,EAAiB,KAChCzI,EAAO33C,GAAQ,EAAAm8C,GAAA,GAASn8C,QAASlB,EAmCvC,OACE,UAAC,EAAAuhD,WAAU,YACT,SAAC,EAAAC,WAAU,CACT1zB,WAAYA,EACZ5sB,MAAO23C,GAAO,KAAA4I,kBAAiB5I,EAAM,MAAO,mBAAgB74C,EAC5D+7B,SAtCgD,SAACvpB,EAAGkvC,GACpDA,GACF3lB,GAAS,EAAA4lB,GAAA,GAAUD,GAEvB,KAoCI,SAAC,EAAAE,WAAU,CACT9zB,YAAa+qB,GAAQ/qB,EACrB6qB,KAAM0I,EAAexI,OAAO74C,EAC5B+7B,SArC4C,SAChD4c,EACAkJ,EACAC,EACAC,EACA1T,GAEA,GACEA,GACAwK,GACQ74C,MAAR6hD,GACAA,EAAO,IACNlJ,EAAK54C,SAAS,OAAS44C,EAAK54C,SAAS,OACtC,CACA,IAAI2hD,EAAU7I,OACD74C,IAAT6hD,IACFH,GAAU,EAAAM,GAAA,GAASN,EAASG,SAEf7hD,IAAX8hD,IACFJ,GAAU,EAAAO,GAAA,GAAWP,EAASI,IAGhC/lB,GAAS,EAAA4lB,GAAA,GAAUD,IACnBJ,GAAkB,E,CAEtB,MAgBF,E,mNCzCaY,GAAuD,SAAC,G,IACnEp0B,EAAU,aACVjU,EAAM,SACNsoC,EAAK,QACLjyB,EAAS,YACTkyB,EAAc,iBACdC,EAAiB,oBACjBC,EAAa,gBACbC,EAAQ,WAEA7sC,GAAM,IAAA0F,gBAAe,mBAAkB,EACzC,GAAwC,IAAAjb,UAAmB,UAA1DqiD,EAAe,KAAEC,EAAkB,KACpC,GAAsB,IAAAtiD,WAAS,GAA9BgM,EAAM,KAAE6vB,EAAS,KAClBt4B,EAAwC,CAC5CmW,OAAQnE,EAAE,iBACVwa,UAAWxa,EAAE,oBACbysC,MAAOzsC,EAAE,gBACTymB,OAAQzmB,EAAE,kBAEZ,OACE,SAAC,EAAAgtC,YAAW,WACV,UAAC,EAAAnB,WAAU,YACT,SAAC,EAAA7gB,SAAQ,eACM,wBACb15B,QACE,SAAC,EAAA27C,eAAc,IACbpmB,SAAUP,EACVlO,WAAYA,EAAU,cACT,gBAAc,UAE1BpqB,EAAO8+C,MAGZ/jB,SAAU,EAAAoC,iBAAA,KACV10B,OAAQA,EACRqwB,SAAU,WAAM,OAAAR,GAAU,EAAV,EAChBiE,cAAe,EACb,SAAC,EAAAC,aAAY,IAEXh/B,MAAM,SACN+tC,UAA+B,WAApBuT,EACX7jB,QAAS,WAAM,OAAA8jB,EAAmB,SAAnB,GAA4B,UAE1C/+C,EAAe,SALZ,WAON,SAAC,EAAAw8B,aAAY,IAEXh/B,MAAM,YACN+tC,UAA+B,cAApBuT,EACX7jB,QAAS,WAAM,OAAA8jB,EAAmB,YAAnB,GAA+B,UAE7C/+C,EAAkB,YALf,cAON,SAAC,EAAAw8B,aAAY,IAEXh/B,MAAM,QACN+tC,UAA+B,UAApBuT,EACX7jB,QAAS,WAAM,OAAA8jB,EAAmB,QAAnB,GAA2B,UAEzC/+C,EAAc,QALX,UAON,SAAC,EAAAk/C,kBAAiB,GAAM,YACxB,SAAC,EAAA1iB,aAAY,IAEXh/B,MAAM,SACN+tC,UAA+B,WAApBuT,EACX7jB,QAAS,WACP8jB,EAAmB,UACnBF,GACF,GAAC,UAEA7+C,EAAe,SARZ,aAYW,WAApB8+C,IACC,SAAC,EAAAvjB,UAAS,CACRnR,WAAYA,EACZ/gB,KAAM,SAAQ,aACF2I,EAAE,4BACdk5B,YAAal5B,EAAE,6BACfqmB,SAAU,SAAC76B,GACT,GAAc,KAAVA,EAAc,CAChB,IAAM2hD,EAAYlsB,SAASz1B,EAAO,IAC9B4hD,OAAOC,UAAUF,IACnBT,EAAeS,E,MAGjBT,OAAepiD,EAEnB,EACAkB,WAAkBlB,IAAX6Z,EAAuB,GAAKA,IAGlB,cAApB2oC,IACC,SAACpB,GAAc,CACbtzB,WAAYA,EACZ5sB,MAAOgvB,EACP6L,SAAUsmB,IAGO,UAApBG,IACC,SAAC,EAAAvjB,UAAS,CACRnR,WAAYA,EACZ/gB,KAAM,SAAQ,aACF2I,EAAE,2BACdk5B,YAAal5B,EAAE,4BACf0kB,UAAU,uDACV1X,KAAMhN,EAAE,4BAA4B1M,OACpC+yB,SAAU,SAAC76B,GACK,KAAVA,GAAgB4hD,OAAO5hD,IAAU,EACnCohD,EAAcQ,OAAO5hD,IAClBohD,OAActiD,EACrB,EACAkB,MAAgBlB,MAATmiD,EAAqB,GAAKA,QAM7C,E,mNCpIaa,GAA2D,SAAC,G,IACvE9hD,EAAK,QACL4sB,EAAU,aACViO,EAAQ,WAEArmB,GAAM,IAAA0F,gBAAe,mBAAkB,EACzC,GAAsB,IAAAjb,WAAS,GAA9BgM,EAAM,KAAE6vB,EAAS,KAIxB,OACE,UAAC,EAAAulB,WAAU,YACT,SAAC,EAAA0B,eAAc,IAAC7oB,UAAU,gBAAc,UACrC1kB,EAAE,mBAEL,4BACE,oBAAM5V,GARI,iBAQSojD,QAAM,kCAIzB,SAAC,EAAA7mB,OAAM,iBACO3mB,EAAE,uBACd6mB,SAfW,SAACpwB,GAAoB,OAAA6vB,EAAU7vB,EAAV,EAgBhCywB,gBAAsB58B,IAAVkB,EAAsB,CAACwU,EAAE,QAAS,CAAExU,MAAK,UAAOlB,EAC5DmM,OAAQA,EACR2hB,WAAYA,EACZ0O,SAAU,WAAM,OAAAR,GAAU,EAAV,EAAgB,cACnB,kBAAgB,UAE5B,CAAC,GAAI,GAAI,IAAI/uB,KAAI,SAAC/L,EAAOiiD,GAAQ,OAChC,SAAC,EAAAnmB,aAAY,CAEX97B,MAAOwU,EAAE,QAAS,CAAExU,MAAK,IACzBy9B,QAAS,WAAM,OAAA5C,EAAS76B,EAAT,GAFViiD,EAFyB,YAW5C,ECrDO,SAASC,GAAcC,EAAaC,GACzC,OAAOp+B,KAAKC,UAAUk+B,KAAQn+B,KAAKC,UAAUm+B,EAC/C,CAEO,SAASC,GAAqBriD,GACnC,IACE,OAAOgkB,KAAKC,UAAUD,KAAK0R,MAAM11B,GAAQ,KAAM,E,CAC/C,MAAO2W,G,CAGT,OAAO3W,CACT,C,UCbYsiD,GAWAC,G,mNCLCC,GAAqD,SAAC,G,IACjEC,EAAW,cAEHjuC,GAAM,IAAA0F,gBAAe,UAAS,EACtC,OACE,oBAAMgf,UAAU,kBAAgB,UAC7B1kB,EAAE,qBAAsB,CAAE6sB,OAAQohB,MAGzC,E,mNCiBaC,GAA6D,SAAC,G,IACzEnjD,EAAO,UACPojD,EAAU,aACV74C,EAAO,UAEC0K,GAAM,IAAA0F,gBAAe,mBAAkB,EAE/C,OACE,UAAC,EAAAglB,mBAAkB,IAAC0jB,aAAa,EAAMC,QAAS,SAAO,YACrD,UAAC,EAAAzjB,WAAU,YACT,SAAC,EAAAC,YAAW,WACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,IAAe,UAAG9qB,EAAE,iBAEvC,SAAC,EAAA+qB,cAAa,WACZ,SAAC,EAAAK,kBAAiB,CAACnC,QAASl+B,UAGhC,SAAC,EAAAygC,kBAAiB,UACfl2B,IACC,SAACg5C,GAAkB,IACjBH,WAAYA,EACZI,WAAYj5C,EAAQpJ,KAChBoJ,SAMhB,EAOag5C,GAET,SAAC,GAAE,IAAAH,EAAU,aAAK74C,E,yUAAO,GAAxB,gBACK0K,GAAM,IAAA0F,gBAAe,mBAAkB,EAE/C,OACE,UAAC,EAAAsxB,KAAI,IAAC9mC,UAAW,CAAEmlB,QAAS,UAAU,cAAe,mBAAiB,YACpE,SAAC,EAAAgiB,SAAQ,WACP,UAAC,EAAA9S,gBAAe,IAAC6E,cAAY,EAACwS,WAAS,eACrC,UAAC,EAAAjX,qBAAoB,YACnB,SAAC,EAAAC,oBAAmB,UAAE5kB,EAAE,sBACxB,SAAC,EAAA6kB,2BAA0B,UACxBvvB,EAAQ0S,gBAGb,UAAC,EAAA2c,qBAAoB,YACnB,SAAC,EAAAC,oBAAmB,UAAE5kB,EAAE,mBACxB,SAAC,EAAA6kB,2BAA0B,UACxBvvB,EAAQ6O,aAGb,UAAC,EAAAwgB,qBAAoB,YACnB,SAAC,EAAAC,oBAAmB,UAAE5kB,EAAE,sBACxB,SAAC,EAAA6kB,2BAA0B,UACxBvvB,EAAQklB,WACP,SAAC0oB,GAAA,EAAU,CACTC,MAAM,EAAAwE,GAAA,GAASryC,EAAQklB,WACvB4oB,OAAQ,0BAGV,SAAC4K,GAAU,CAACC,YAAajuC,EAAE,2BAIjC,UAAC,EAAA2kB,qBAAoB,YACnB,SAAC,EAAAC,oBAAmB,UAAE5kB,EAAE,kBACxB,SAAC,EAAA6kB,2BAA0B,UACxBvvB,EAAQklB,WACP,SAAC0oB,GAAA,EAAU,CACTC,MAAM,EAAAwE,GAAA,GAASryC,EAAQklB,WACvB4oB,OAAQ,WAGV,SAAC4K,GAAU,CAACC,YAAajuC,EAAE,uBAIjC,UAAC,EAAA2kB,qBAAoB,YACnB,SAAC,EAAAC,oBAAmB,UAAE5kB,EAAE,gBACxB,SAAC,EAAA6kB,2BAA0B,UACxBvvB,EAAQi5C,WACPj5C,EAAkB,YAElB,SAAC04C,GAAU,CAACC,YAAajuC,EAAE,2BAMrC,SAAC,EAAAq3B,SAAQ,WAEP,UAAC,EAAAiQ,KAAI,IAACkH,iBAAkBL,GAAU,YAChC,SAAC,EAAA3G,IAAG,IACFC,SAAU,QACV/xC,OAAO,SAAC,EAAAgyC,aAAY,UAAE1nC,EAAE,kBAA8B,WAEtD,SAAC,EAAAukC,cAAa,IAACkK,QAAQ,EAAM9jD,YAAY,EAAM85C,YAAY,GAAI,UAC5DoJ,GAAqBv4C,EAAQ9J,OAAS,WAG3C,SAAC,EAAAg8C,IAAG,IACFC,SAAU,UACV/xC,OAAO,SAAC,EAAAgyC,aAAY,UAAE1nC,EAAE,oBAAgC,WAExD,SAAC,EAAAukC,cAAa,IAACkK,QAAQ,EAAM9jD,YAAY,EAAM85C,YAAY,GAAI,UAC5DoJ,GAAqBr+B,KAAKC,UAAUna,EAAQmmB,UAAY,aAdtB/C,KAAKg2B,eAqBtD,E,mNCzIaC,GAER,SAAC,G,IAAEC,EAAS,YACP5uC,GAAM,IAAA0F,gBAAe,mBAAkB,EAC/C,OACE,UAAC,EAAAigB,WAAU,IAACtwB,QAAS,EAAAuwB,kBAAA,OAAuB,YAC1C,SAAC,EAAAC,eAAc,CAACC,KAAM,EAAAC,aACtB,SAAC,EAAAC,MAAK,IAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,qBAEL,SAAC,EAAAmmB,eAAc,UAAEnmB,EAAE,mBACnB,SAAC,EAAApH,OAAM,IAACqwB,QAAS2lB,GAAS,UAAG5uC,EAAE,yBAGrC,E,mNCda6uC,GAER,SAAC,G,IAAEC,EAAO,UACL9uC,GAAM,IAAA0F,gBAAe,mBAAkB,EAC/C,OACE,UAAC,EAAAigB,WAAU,IAACtwB,QAAS,EAAAuwB,kBAAA,OAAuB,YAC1C,SAAC,EAAAC,eAAc,CAACC,KAAM,EAAAipB,cACtB,SAAC,EAAA/oB,MAAK,IAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,wBAEL,SAAC,EAAAmmB,eAAc,UAAEnmB,EAAE,sBACnB,SAAC,EAAApH,OAAM,IAACvD,QAAS,OAAQ4zB,QAAS6lB,GAAO,UACtC9uC,EAAE,0BAIX,E,mNCxBagvC,GAGR,SAAC,G,IAAEC,EAAG,MAAEjU,EAAG,MACNh7B,GAAM,IAAA0F,gBAAe,mBAAkB,EAC/C,OACE,SAAC,EAAAmlB,YAAW,IAACnG,UAAU,kBAAgB,WACrC,UAAC,EAAA2F,KAAI,WACFrqB,EAAE,UAAS,KAAE,oBAAM0kB,UAAU,eAAa,UAAEuqB,KAAW,KAAG,KAC3D,oBAAMvqB,UAAU,eAAa,UAAEsW,UAIvC,E,sZCIakU,GAET,SAAC,G,IAAE1jD,EAAK,QAAEmW,EAAU,aAAEyW,EAAU,aAAEiO,EAAQ,WACpCrmB,GAAM,IAAA0F,gBAAe,mBAAkB,EACzC,GAAsB,IAAAjb,WAAS,GAA9BgM,EAAM,KAAE6vB,EAAS,KAElB6iB,EAAU,qBAEVgG,GAAe,IAAAhkD,cACnB,SAACK,GACC,GAAc,KAAVA,EAAc,CAChB,IAAM4jD,EAAanuB,SAASz1B,EAAO,IAC/B4hD,OAAOC,UAAU+B,IACnB/oB,EAAS+oB,E,CAGb9oB,GAAU,EACZ,GACA,CAACD,IAGGgpB,GAAgB,IAAA5jD,UAAQ,WAC5B,OAAO,IAAI4Y,MAAM1C,GAAY2tC,KAAK,GAAG/3C,KAAI,SAACuF,EAAG0qB,GAAU,OAAAA,EAAMpM,UAAN,GACzD,GAAG,CAACzZ,IAEE4tC,GAAc,IAAApkD,cAClB,SAAC8a,GACC,IAAM+xB,EAAU/xB,EACbupC,MAAM,EApCK,IAqCXj4C,KAAI,SAACujB,GAAM,gBAAC,EAAAwM,aAAY,CAAS97B,MAAOsvB,GAAVA,EAAnB,IACR20B,EAAqBxpC,EAAO3S,OAAS0kC,EAAQ1kC,OACnD,OAAOm8C,EACH,SACKzX,GAAO,KACV,SAAC,EAAA1Q,aAAY,CAEXlP,YAAY,EACZ5iB,YAAawK,EAAE,oBAAqB,CAClCzP,MAAOk/C,KAHJ,e,GAOTzX,CACN,GACA,CAACh4B,IAGGg4B,GAAU,IAAAvsC,UAAQ,WACtB,OAAO8jD,EAAYF,EACrB,GAAG,CAACA,EAAeE,IAEbG,GAAwC,IAAAvkD,cAC5C,SAAC2R,EAAGrE,GACF,MAAe,KAAXA,EACK82C,EACLF,EAAc52C,QAAO,SAACuP,GAAc,OAAAA,EAAU3d,SAASoO,EAAnB,KAGjCu/B,CACT,GACA,CAACqX,EAAeE,EAAavX,IAG/B,OACE,UAAC,EAAA6T,WAAU,YACT,SAAC,EAAA0B,eAAc,IAAC7oB,UAAU,gBAAc,UACrC1kB,EAAE,uBAEL,4BACE,oBAAM5V,GAAI++C,EAASqE,QAAM,aACtBxtC,EAAE,mCAEL,SAAC,EAAA2mB,OAAM,IACLtxB,QAAS,EAAA2xB,cAAA,UACT2oB,mBAAoB3vC,EAAE,8BACtB6mB,SAtEW,SAACpwB,GAAoB,OAAA6vB,EAAU7vB,EAAV,EAuEhCqwB,SAAU,SAAChqB,EAAGtR,GAAU,OAAA2jD,EAAa3jD,EAAb,EACxB07B,gBAAsB58B,IAAVkB,EAAsB,CAAC,UAAGA,SAAWlB,EACjDmM,OAAQA,EAAM,kBACG0yC,EACjByG,UAAW,IACXxqB,MAAO,IACPyqB,SAAUH,EACVI,uBAAuB,EACvB13B,WAAYA,EACZ6O,gBAAiBjnB,EAAE,yBACnB+vC,QAAS,WAAM,OAAA1pB,OAAS/7B,EAAT,EAAmB,cACrB,sBAAoB,UAEhC0tC,SAGL,SAAC,EAAAuV,eAAc,IACbnjD,GAAI,UAAG++C,EAAO,UACd9zC,QAAS,EAAA26C,sBAAA,MACTtrB,UAAU,gBAAc,UAEvB1kB,EAAE,4BAA6B,CAAE2B,WAAU,SAIpD,E,mNC9GasuC,GAET,SAAC,G,IAAEzkD,EAAK,QAAE,IAAA0kD,WAAAA,OAAU,IAAG,EATJ,IASkB,EAAEjnB,EAAO,UACxCjpB,GAAM,IAAA0F,gBAAe,mBAAkB,EACzC,ERDD,SAAkBla,EAAe8H,GACtC,IAAM68C,EAAiB3kD,EAAM8H,OAASA,EACtC,MAAO,CACL68C,EAAiB,UAAG3kD,EAAM4kD,UAAU,EAAG98C,GAAO,OAAQ9H,EACtD2kD,EAEJ,CQL+BE,CAAS7kD,EAAO0kD,GAAtCI,EAAO,KAAEC,EAAS,KACzB,OACE,UAAC,EAAAvZ,KAAI,IACH9mC,UAAW,CAAEmlB,QAAS,UACtB8hB,WAAY,CAAE9hB,QAAS,iBAAgB,YAEvC,SAAC,EAAAgiB,SAAQ,UAAEiZ,IACVC,IACC,SAAC,EAAAlZ,SAAQ,WACP,iBACEpO,QACEA,EACI,SAAC9mB,GACCA,EAAEquC,kBACFvnB,GACF,OACA3+B,GAAS,UAGd0V,EAAE,qBAMf,ECpBaywC,IAAwB,OACnC,CACErmD,GAAI,kBACJglC,4BAA4B,EAC5BD,QAAS,CAAC,EACVE,OAAQ,CACNvjC,QAAS,CAAC,EAYVwjC,OAAQ,CAAC,GAmBXE,QAAS,iBACT1jC,QAAS,CAEPgnB,cAAUxoB,EAEVkxB,MAAO,GAEPxT,eAAW1d,EACX6Z,YAAQ7Z,EACRkwB,eAAWlwB,EACXomD,qBAAiBpmD,EACjBmiD,WAAOniD,GAETmlC,OAAQ,CACNkhB,eAAgB,CACdpf,OAAQ,CACNC,IAAK,OAEP1oB,GAAI,CACF8nC,aAAc,CACZ5nB,QAAS,cACT6G,OAAQ,kBAEVghB,UAAW,UAGfC,eAAgB,CACdnhB,OAAQ,CAAC,CAAEC,KAAM,aAAcC,OAAQ,UAAY,CAAEA,OAAQ,WAE/DkhB,OAAQ,CACNjoC,GAAI,CACFkoC,QAAS,mBAGb55C,MAAO,CACL0R,GAAI,CACFkoC,QAAS,mBAGb5jC,MAAO,CACLoiB,QAAS,WACTC,OAAQ,CACNwhB,SAAU,CAAC,EACXC,MAAO,CACLnhB,KAAM,SAERohB,aAAc,CACZxhB,OAAQ,CACN,CACEC,KAAM,oBACNC,OAAQ,SAEV,CAAEA,OAAQ,eAIhBF,OAAQ,CACN,CACEC,KAAM,8BACN5G,QAAS,oBAGblgB,GAAI,CACFkoC,QAAS,aACTI,aAAc,CACZvhB,OAAQ,gBACR7G,QAAS,gBAEXqoB,SAAU,CACRroB,QAAS,WACT6G,OAAQ,iBAEVyhB,aAAc,CACZzhB,OAAQ,gBACR7G,QAAS,gBAEXuoB,UAAW,CACT1hB,OAAQ,gBACR7G,QAAS,aAEXwoB,UAAW,CACT3hB,OAAQ,gBACR7G,QAAS,aAEXyoB,SAAU,CACR5hB,OAAQ,gBACR7G,QAAS,YAEX0oB,cAAe,CACb1oB,QAAS,iBAEX2oB,gBAAiB,CACf3oB,QAAS,qBAIf4oB,WAAY,CACVrgB,OAAQ,CACNC,IAAK,OAEP1oB,GAAI,CACF8nC,aAAc,CACZ5nB,QAAS,cACT6G,OAAQ,SAEVghB,UAAW,CACThhB,OAAQ,aAMlB,CACE7G,QAAS,CACP6oB,aAAa,SACX,SAAC/lD,EAAS,G,IAAEqV,EAAQ,WAAEQ,EAAU,aAAEmwC,EAAS,YAAEC,EAAS,YAAO,OAC3Dj/B,SAAU,CACRk/B,YAAa,IAAI5lC,KACjBjL,SAAQ,EACRQ,WAAU,EACVmwC,UAAS,EACTC,UAAS,EACTt5C,OAAQ,CACNuP,UAAWlc,EAAQkc,UACnBwS,UAAW1uB,EAAQ0uB,UACnBrW,OAAQrY,EAAQqY,OAChBqX,MAAO1vB,EAAQ0vB,MACfixB,MAAO3gD,EAAQ2gD,QAZwC,IAiB/D2E,cAAc,SAAO,SAACt0C,EAAG,GAAc,OAAGkL,UAAV,QAAO,IACvCqpC,UAAU,SAAO,SAACv0C,EAAG,GAAc,OACjC2vC,MAD0B,QAAO,IAGnC6E,cAAc,SAAO,SAACx0C,EAAG,GAAc,OACrC0d,UAD8B,QAAO,IAGvC+2B,WAAW,SAAO,SAACz0C,EAAG,GAAc,OAClCqH,OAD2B,QAAO,IAGpCstC,UAAU,SAAO,SAAC30C,EAAG,GAAc,OACjC0e,MAD0B,QAAO,IAInCg2B,WAAW,SAAO,SAAC10C,GAAM,OACvB0d,eAAWlwB,EACX6Z,YAAQ7Z,EAFe,IAIzBonD,eAAe,SAAO,SAAC50C,EAAG,GAAgB,OAAG4zC,gBAAV,UAAO,IAE1CiB,iBAAiB,SAAO,SAAC70C,GAAM,OAAG4zC,qBAAiBpmD,EAApB,KAEjC+oC,OAAQ,CACN4e,WAAY,SAAC,G,IAAEn/B,EAAQ,WACrB,YAAaxoB,IAAbwoB,GAAuD,IAA7BA,EAAS3R,SAAS7N,MAA5C,EACF4+C,4BAA6B,SAAC,G,IAAEp/B,EAAQ,WAAE49B,EAAe,kBACvD,YAAoBpmD,IAApBomD,QAEEpmD,KADFwoB,aAAQ,EAARA,EAAU3R,SAAS8M,MAAK,SAAC4L,GAAM,OAAA6zB,GAAc7zB,EAAG62B,EAAjB,IAD/B,EAGFyB,kBAAmB,SAACrmD,G,cAClB,OAAgB,QAAhB,EAAAA,EAAQgnB,gBAAQ,eAAEra,OAAO+iB,SAAU1vB,EAAQ0vB,QAC3B,QAAhB,EAAA1vB,EAAQgnB,gBAAQ,eAAEra,OAAO0L,UAAWrY,EAAQqY,SAC5B,QAAhB,EAAArY,EAAQgnB,gBAAQ,eAAEra,OAAOuP,aAAclc,EAAQkc,YAC/B,QAAhB,EAAAlc,EAAQgnB,gBAAQ,eAAEra,OAAO+hB,aAAc1uB,EAAQ0uB,YAC/B,QAAhB,EAAA1uB,EAAQgnB,gBAAQ,eAAEra,OAAOg0C,SAAU3gD,EAAQ2gD,K,wNCjL7Cr8C,GAAU,CACd,YACA,SACA,YACA,MACA,UACA,SAGIgiD,GAAyC,CAAC,GAAI,GAAI,GAAI,QAAI9nD,EAAW,IAU9D+nD,GAET,SAAC,G,MAAE3wC,EAAW,cACV,GAAgB,EAAA4wC,GAAA,IAAW,WAAM,OAAA7B,EAAA,GAAuB,CAC5DhS,UAAU,EACVlP,SAAU,CACR/kB,IAAK,SAAC1e,GACJ,OAAO,SAACqyC,GACNz8B,EAAY,CACVsG,UAAWlc,EAAQkc,UACnB7D,OAAQrY,EAAQqY,OAChBqW,UAAW1uB,EAAQ0uB,UACnBgB,MAAO1vB,EAAQ0vB,QAEdrG,MAAK,SAAC,G,IAAEhU,EAAQ,WAAEQ,EAAU,aAC3B,OAAAw8B,EAAK,CACH9mC,KAAM,eACN8J,SAAQ,EACRQ,WAAU,EACVmwC,UAAWhmD,EAAQqY,QAAU,EAC7B4tC,UAAW5wC,EAAS8b,QAClB,SAAC+d,EAAKnhB,GAAM,OAAAnB,KAAKsiB,IAAIA,EAAKnhB,EAAE1V,QAAU,EAA1B,GACZ,IAPJ,IAWD2hC,OAAM,WAAM,OAAA3H,EAAK,CAAE9mC,KAAM,aAAb,GACjB,CACF,KAzBG2M,EAAK,KAAEm6B,EAAI,KA6BlB,OACE,SAACoU,GAA4B,CAC3BC,YAAaxuC,EAAMyuC,QAAQ,kBAC3BC,SAAU1uC,EAAMyuC,QAAQ,WAAazuC,EAAMyuC,QAAQ,SACnDE,aAAc3uC,EAAMyuC,QAAQ,cAC5BG,eAAgB5uC,EAAMqwB,OAAO,SAC7Bqc,gBAAiB1sC,EAAMlY,QAAQ4kD,gBAC/B59B,SAAU9O,EAAMlY,QAAQgnB,SACxBk/B,YAAmC,QAAtB,EAAAhuC,EAAMlY,QAAQgnB,gBAAQ,eAAEk/B,YACrChqC,UAAWhE,EAAMlY,QAAQkc,UACzBwT,MAAOxX,EAAMlY,QAAQ0vB,MACrBq3B,aAAc7uC,EAAMlY,QAAQqY,OAC5B2uC,YAAa9uC,EAAMlY,QAAQ2gD,MAC3BsG,gBAAiB/uC,EAAMlY,QAAQ0uB,UAC/B42B,aAAc,SAAC5lD,GACb,OAAA2yC,EAAK,CAAE9mC,KAAM,eAAgB7L,MAAK,GAAlC,EAEF+lD,UAAW,SAAC/lD,GACV,OAAA2yC,EAAK,CAAE9mC,KAAM,YAAa7L,MAAK,GAA/B,EAEF8lD,aAAc,SAAC9lD,GACb,OAAA2yC,EAAK,CAAE9mC,KAAM,eAAgB7L,MAAK,GAAlC,EAEF6lD,SAAU,SAAC7lD,GACT,OAAA2yC,EAAK,CAAE9mC,KAAM,WAAY7L,MAAK,GAA9B,EAEFgmD,UAAW,WAAM,OAAArT,EAAK,CAAE9mC,KAAM,aAAb,EACjBo6C,SAAU,SAACjmD,GAAkB,OAAA2yC,EAAK,CAAE9mC,KAAM,WAAY7L,MAAK,GAA9B,EAC7BwlD,QAAS,WAAM,OAAA7S,EAAK,CAAE9mC,KAAM,WAAb,EACfq6C,cAAe,SAACp8C,GACd,OAAA6oC,EAAK,CAAE9mC,KAAM,gBAAiB/B,QAAO,GAArC,EAEFq8C,gBAAiB,WAAM,OAAAxT,EAAK,CAAE9mC,KAAM,mBAAb,GAG7B,EAyBak7C,GAET,SAAC,G,MACHC,EAAW,cACXE,EAAQ,WACRC,EAAY,eACZC,EAAc,iBACdlC,EAAe,kBACf59B,EAAQ,WACR9K,EAAS,YACTwT,EAAK,QACLq3B,EAAY,eACZC,EAAW,cACXC,EAAe,kBACf3B,EAAY,eACZG,EAAS,YACTD,EAAY,eACZD,EAAQ,WACRG,EAAS,YACTC,EAAQ,WACRT,EAAO,UACPU,EAAa,gBACbC,EAAe,kBAEP3xC,GAAM,IAAA0F,gBAAe,mBAAkB,EACzC,GACJ,IAAAjb,UAA4C,SADvC0jD,EAAU,KAAE6E,EAAa,KAG1BC,GAA4D,IAAAxnD,UAChE,WACE,OACEuc,UAAWhI,EAAE,mBACbmE,OAAQnE,EAAE,gBACVwa,UAAWxa,EAAE,mBACb9T,IAAK8T,EAAE,aACPxU,MAAOwU,EAAE,eACTyb,QAASzb,EAAE,iBANb,GAQF,CAACA,IAGH,QAAQ,GACN,KAAKwyC,EACH,OAAO,SAACU,GAAA,EAAO,IACjB,KAAKR,EACH,OAAO,SAAC/D,GAAgB,CAACC,UAAWoC,IACtC,QACE,OACE,SAAC,EAAA1kB,YAAW,IACVC,UAAU,EACVC,mBAAmB,EAAI,aACX,QAAM,WAElB,SAAC,EAAAlB,OAAM,IAAC5B,UAAU,EAAM/+B,gBAAgCL,IAApBomD,GAA6B,WAC/D,SAAC,EAAAnlB,cAAa,IACZd,cACE,SAACyjB,GAAc,CACb54C,QAASo7C,EACTvC,WAAYA,EACZpjD,QAAS4mD,KACT,WAGJ,UAAC,EAAAwB,qBAAoB,YACnB,SAAC,EAAAC,QAAO,IACN1uB,UAAW,kCAAiC,cAC/B,2BAAyB,WAEtC,UAAC,EAAA2uB,eAAc,YACb,UAAC,EAAAC,mBAAkB,IACjBC,YAAY,SAAC,EAAAC,WAAU,IACvBC,WAAW,OAAK,YAEhB,SAAC,EAAAC,aAAY,IAACr+C,QAAQ,gBAAc,WAClC,SAAC,EAAA23C,YAAW,WACV,SAACkC,GAAiB,CAChB1jD,MAAOwc,EACPrG,YAAYmR,aAAQ,EAARA,EAAUnR,aAAc,EACpC0kB,SAAU+qB,EACVh5B,WAAYu6B,UAIlB,SAAC,EAAAe,aAAY,IAACr+C,QAAQ,gBAAc,WAClC,SAACm3C,GAAW,CACVp0B,WAAYu6B,EACZxuC,OAAQ0uC,EACRpG,MAAOqG,EACPt4B,UAAWu4B,EACXrG,eAAgB6E,EAChB5E,kBAAmB2E,EACnB1E,cAAeyE,EACfxE,SAAU2E,QAGd,SAAC,EAAAkC,aAAY,WACX,SAACpG,GAAa,CACZ9hD,MAAOgwB,EACP6K,SAAUorB,EACVr5B,WAAYu6B,WAIlB,UAAC,EAAAe,aAAY,YACX,SAAC,EAAA1G,YAAW,WACV,SAAC,EAAAp0C,OAAM,IACLvD,QAAS,QACT+iB,YAAaw6B,GAAkBD,EAAY,aAC/B3yC,EAAE,8BACdipB,QAAS+nB,GAAO,WAEhB,SAAC,EAAAjC,WAAU,UAGf,SAAC,EAAA/B,YAAW,WACV,SAAC2G,GAAA,EAAa,CACZ1qB,QAAS+nB,EACT2B,aAAcA,EACdv6B,WAAYw6B,UAIlB,SAAC,EAAAc,aAAY,IAACE,UAAW,CAAEv+B,QAAS,eAAc,eAChB/qB,KAA/BwoB,aAAQ,EAARA,EAAUra,OAAOuP,aAChB8K,aAAQ,EAARA,EAAU3R,SAAS7N,QAAS,IAC1B,SAAC07C,GAAW,CACVC,KAAKn8B,aAAQ,EAARA,EAAUg/B,YAAa,EAC5B9W,KAAKloB,aAAQ,EAARA,EAAUi/B,YAAa,cAMxC,SAAC,EAAA8B,qBAAoB,WACnB,SAACC,GAAA,GAAe,IACdnnB,UAAW3sB,EAAE,oBACb5P,QAASA,GACTP,KAAMijB,aAAQ,EAARA,EAAU3R,SAChB4yC,eAAkC,QAAlB,EAAAjhC,aAAQ,EAARA,EAAU3R,gBAAQ,eAAE7N,OACpCs5B,aAAc,SAAC,G,IAAEC,EAAM,SAAE1H,EAAE,KAAEj5B,EAAG,MAAO,OACrC,SAACi5B,EAAE,UAAY8tB,EAAapmB,IAAnB3gC,EAD4B,EAGvC+gC,WAAY,SAAC,G,IAAEJ,EAAM,SAAE56B,EAAG,MAAE+hD,EAAQ,WAAE1uB,EAAE,KAAEp5B,EAAG,MAAO,OAClD,SAACo5B,EAAE,IAEDC,UAAW0tB,EAAapmB,GACxBzH,MAAOgtB,GAAa4B,IAAS,UAE5B,WACC,IAAMjjB,GACJ,SAACid,GAAU,CAACC,YAAagF,EAAapmB,KAExC,OAAQA,GACN,IAAK,YACH,OAAO56B,EAAI+V,UACb,IAAK,SACH,OAAO/V,EAAIkS,OACb,IAAK,YACH,OAAOlS,EAAIuoB,WACT,SAAC0oB,GAAA,EAAU,CACTC,MAAM,EAAAwE,GAAA,GAAS11C,EAAIuoB,WACnB4oB,OAAQ,yBAER,EAGN,IAAK,MACH,OAAOnxC,EAAI/F,KACT,SAAC+jD,GAAmB,CAClBzkD,MAAOyG,EAAI/F,IACXgkD,WAAY,KAEZ,EAGN,IAAK,UACH,OAAOr7B,OAAOo/B,KAAKhiD,EAAIwpB,SAASnoB,OAAS,GACvC,SAAC28C,GAAmB,CAClBzkD,MAAOqiD,GACLr+B,KAAKC,UAAUxd,EAAIwpB,UAErBwN,QAAS,WACP+pB,EAAc,WACdtB,EAAcz/C,EAChB,IAEA,EAGN,IAAK,QACH,OAAOA,EAAIzG,OACT,SAACykD,GAAmB,CAClBzkD,MAAOqiD,GAAqB57C,EAAIzG,OAAS,IACzCy9B,QAAS,WACP+pB,EAAc,SACdtB,EAAcz/C,EAChB,IAEA,EAIT,CAtDA,KAJI/F,EAF2C,EA+DpDuF,cAAe,SAAC,G,IAAEQ,EAAG,MACnB,YAAoB3H,IAApBomD,GACAhD,GAAcz7C,EAAKy+C,EADnB,EAGFnF,WAAY,SAAC,G,IAAEt5C,EAAG,MAChB+gD,EAAc,SACdtB,EAAcz/C,EAChB,GAAC,WAED,SAAC48C,GAAmB,CAClBC,QAAS,WACP0C,IACAJ,OAAa9mD,GACb0mD,GACF,qBAUtB,E,+NClXakD,GAAgD,WACnD,IAAAl0C,GAAM,IAAA0F,gBAAe,oBAAmB,EAwC1Cse,EAAc,CAClBl0B,KAAM,GACNqkD,mBAAoBn0C,EAAE,sBACtBo0C,oBAAqBp0C,EAAE,wBAGzB,OACE,UAAC,EAAA8kB,gBAAe,YACd,SAAC,EAAAE,MAAK,WACJ,UAAC,EAAAE,GAAE,YACD,SAAC,EAAAC,GAAE,UAAEnB,EAAYl0B,QACjB,SAAC,EAAAq1B,GAAE,UAAEnB,EAAYmwB,sBACjB,SAAC,EAAAhvB,GAAE,UAAEnB,EAAYowB,4BAGrB,SAAC,EAAA/uB,MAAK,UArD6B,CACrC,CACEv1B,KAAM,sBACNqkD,mBAAoB,WACpBC,oBAAqB,aAEvB,CACEtkD,KAAM,qBACNqkD,mBAAoB,YACpBC,oBAAqB,aAEvB,CACEtkD,KAAM,gBACNqkD,mBAAoB,aACpBC,oBAAqB,cAEvB,CACEtkD,KAAM,mBACNqkD,mBAAoB,aACpBC,oBAAqB,cAEvB,CACEtkD,KAAM,qBACNqkD,mBAAoB,aACpBC,oBAAqB,cAEvB,CACEtkD,KAAM,uCACNqkD,mBAAoB,YACpBC,oBAAqB,aAEvB,CACEtkD,KAAM,oBACNqkD,mBAAoB,UACpBC,oBAAqB,YAoBJ78C,KAAI,SAAC88C,GAClB,OACE,UAAC,EAAAnvB,GAAE,YACD,SAAC,EAAAI,GAAE,IAACC,UAAWvB,EAAYl0B,MAAI,UAAGukD,EAAMvkD,SACxC,SAAC,EAAAw1B,GAAE,IAACC,UAAWvB,EAAYmwB,oBAAkB,UAC1CE,EAAMF,uBAET,SAAC,EAAA7uB,GAAE,IAACC,UAAWvB,EAAYowB,qBAAmB,UAC3CC,EAAMD,yBANFC,EAAMvkD,KAUnB,QAIR,E,0OCzDawkD,GAET,SAAC,G,IACH5+C,EAAK,QACL6+C,EAAO,UACP/+C,EAAW,cACXg/C,EAAY,eACZC,EAAS,YACTC,EAAa,gBACb,IAAAC,mBAAAA,OAAkB,IAAG,GAAI,EACzB,IAAAC,mBAAAA,OAAkB,IAAG,IAAC,EACtBC,EAAG,MACH,IAAAx/C,QAAAA,OAAO,IAAG,UAAO,EAEXi5B,EAAQ,CACZ,sDAAuD,cAAOmmB,EAAS,KACvE,qDAAsD,UAAGC,EAAa,MACtE,uDAAwDC,EACpD,SACA,YACJ,0DAA2D,UAAGC,EAAkB,OAElF,OACE,SAAC,EAAAtoB,YAAW,IACV5H,UAAW,KAAW,2BAA4B,CAChD,iCAA8C,SAAZrvB,EAClC,4BAAyC,UAAZA,IAE/BA,QACc,SAAZA,EACI,EAAAy4B,oBAAA,KACA,EAAAA,oBAAA,MAENQ,MAAOA,GAAK,WAEZ,UAAC,EAAAjK,MAAK,IAACC,WAAS,eACd,SAAC,EAAA0B,MAAK,IAACC,aAAa,KAAKjZ,KAAK,OAAK,UAChCtX,MAEH,SAAC,EAAA20B,KAAI,IACH3F,UAAW,4CACG,SAAZrvB,EAAqB,GAAK,mBAC1B,UAEDk/C,MAEH,SAAC,EAAAlqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAc,UAAGt1B,KACjCg/C,IACC,SAAC,EAAAnqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,EAAgBpG,UAAU,cAAY,UACpD8vB,KAGJK,IAAO,SAAC,EAAA3rB,UAAS,UAAE2rB,UAI5B,EAwBaC,GAIT,SAAC,G,IACH,IAAApwB,UAAAA,OAAS,IAAG,8CAA2C,EACvD,IAAArvB,QAAAA,OAAO,IAAG,YAAS,EACnBzL,EAAQ,WACJ,OACJ,SAAC,EAAA0iC,YAAW,IACVyoB,gBAAc,EACdrwB,UAAW,KAAWA,EAAW,CAC/B,iCAA8C,SAAZrvB,EAClC,4BAAyC,UAAZA,IAE/BA,QACc,SAAZA,EACI,EAAAy4B,oBAAA,KACY,UAAZz4B,EACA,EAAAy4B,oBAAA,MACA,EAAAA,oBAAA,SAA2B,UAGhClkC,IAfC,E,mNCxFOorD,GAAiC,WACpC,IAAAh1C,GAAM,IAAA0F,gBAAe,CAAC,qBAAoB,EAClD,OACE,iCACE,SAAC4uC,GAAiB,CAChB5+C,MAAOsK,EAAE,aACTu0C,QAASv0C,EAAE,eACXxK,YAAawK,EAAE,mBACfy0C,UAAW,MACXC,cAAe,IACfC,oBAAoB,EACpBC,oBAAqB,MAEvB,SAACE,GAAoB,WACnB,UAAC,EAAAva,KAAI,IAACjW,WAAS,EAACG,GAAI,GAAC,YACnB,UAAC,EAAA+W,KAAI,IACHhN,OAAO,6BAA4B,aACvBxuB,EAAE,oCAAkC,YAEhD,SAAC,EAAAi1C,WAAU,WACT,SAAC,EAAAC,eAAc,WACb,SAAC,EAAAxZ,UAAS,WACR,SAAC,EAAA1V,MAAK,IAACC,aAAa,MAAI,WACtB,SAAC,EAAApgB,MAAK,IACJC,GAAI,mBACJC,QAAS,qBAAmB,WAE5B,iBAAM2e,UAAU,kDAM1B,SAAC,EAAAiX,SAAQ,UAAE37B,EAAE,2BACb,SAAC,EAAA2gC,WAAU,WACT,UAAC,EAAA3J,KAAI,IAACG,WAAY,CAAE9hB,QAAS,kBAAiB,YAC5C,SAAC,EAAAgiB,SAAQ,WACP,SAAC1I,EAAA,EAAY,IACXh6B,KACE,2FAEFi6B,OAAQ,wBACRlK,UAAW,eAAa,WAExB,SAAC,EAAA7e,MAAK,CACJC,GAAI,mBACJC,QAAS,uCACTC,WAAY,CACVmvC,MAAM,sBACNnoC,MAAM,iBAAM0X,UAAU,+BAM9B,SAAC,EAAA2S,SAAQ,WACP,SAAC1I,EAAA,EAAY,IACXh6B,KACE,+DAEFi6B,OAAQ,yBACRlK,UAAW,cAAY,WAEvB,SAAC,EAAA7e,MAAK,CACJC,GAAI,mBACJC,QAAS,oCACTC,WAAY,CACVmvC,MAAM,sBACNnoC,MAAM,iBAAM0X,UAAU,yCAQpC,UAAC,EAAA8W,KAAI,IACHhN,OAAO,8BAA6B,aACxBxuB,EAAE,wCAAsC,YAEpD,SAAC,EAAAi1C,WAAU,WACT,SAAC,EAAAvZ,UAAS,WACR,SAAC,EAAA1V,MAAK,IAACC,aAAa,MAAI,WACtB,SAAC,EAAApgB,MAAK,IACJC,GAAI,mBACJC,QAAS,yBAAuB,WAEhC,iBAAM2e,UAAU,gDAKxB,SAAC,EAAAiX,SAAQ,UAAE37B,EAAE,+BACb,SAAC,EAAA2gC,WAAU,WACT,SAAChS,EAAA,EAAY,IACXh6B,KACE,iHAEFi6B,OAAQ,6BACRlK,UAAW,cAAY,WAEvB,SAAC,EAAA7e,MAAK,CACJC,GAAI,mBACJC,QAAS,qCACTC,WAAY,CACVmvC,MAAM,sBACNnoC,MAAM,iBAAM0X,UAAU,yCAQpC,SAACowB,GAAoB,IACnBpwB,UAAW,2CAAyC,WAEpD,UAAC,EAAA8W,KAAI,YACH,SAAC,EAAAE,UAAS,WACR,SAAC,EAAA1V,MAAK,IAACC,aAAa,MAAI,UAAEjmB,EAAE,2BAE9B,SAAC,EAAA27B,SAAQ,WACP,UAAC,EAAA3E,KAAI,IAACG,WAAY,CAAE9hB,QAAS,iBAAgB,YAC3C,SAAC,EAAA2hB,KAAI,IACHoe,UAAW,CAAE//B,QAAS,mBACtB4hB,eAAgB,CAAE5hB,QAAS,wBAC3B+mB,KAAM,CAAE/mB,QAAS,WAAU,WAE3B,SAAC,EAAAgiB,SAAQ,WACP,UAAC,EAAA9S,gBAAe,IAAC6E,cAAY,eAC3B,UAAC,EAAAzE,qBAAoB,YACnB,SAAC,EAAAC,oBAAmB,UACjB5kB,EAAE,mBAEL,SAAC,EAAA6kB,2BAA0B,UACxB7kB,EAAE,6BAGP,UAAC,EAAA2kB,qBAAoB,YACnB,SAAC,EAAAC,oBAAmB,UACjB5kB,EAAE,mBAEL,SAAC,EAAA6kB,2BAA0B,UACxB7kB,EAAE,4BAGP,UAAC,EAAA2kB,qBAAoB,YACnB,SAAC,EAAAC,oBAAmB,UAAE5kB,EAAE,cACxB,SAAC,EAAA6kB,2BAA0B,UACxB7kB,EAAE,gCAMb,SAAC,EAAA0uB,QAAO,CAACua,YAAU,KACnB,SAAC,EAAA5R,SAAQ,IAAC+E,KAAM,CAAE/mB,QAAS,WAAU,WACnC,SAAC,EAAAwV,YAAW,WACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAc,WAC7B,SAAC,EAAAjlB,MAAK,CACJC,GAAI,mBACJC,QAAS,oBACTC,WAAY,CAAEmvC,MAAM,8CASpC,SAACL,GAAoB,IACnBpwB,UAAW,2CAAyC,WAEpD,UAAC,EAAA8W,KAAI,YACH,SAAC,EAAAE,UAAS,WACR,SAAC,EAAA1V,MAAK,IAACC,aAAa,MAAI,UAAEjmB,EAAE,oCAE9B,SAAC,EAAA27B,SAAQ,WACP,UAAC,EAAAtX,MAAK,IAACC,WAAS,eACd,SAAC,EAAA+F,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAc,UAC5B9qB,EAAE,wCAEL,SAACk0C,GAA0B,WAG/B,SAAC,EAAAvT,WAAU,WACT,SAAC,EAAA9V,YAAW,IAACnG,UAAW,qBAAmB,WACzC,SAAC,EAAA7e,MAAK,CACJC,GAAI,mBACJC,QAAS,8BACTC,WAAY,EACV,SAAC2oB,EAAA,EAAY,CACXh6B,KAAM,oCACNi6B,OAAQ,cACRlK,UAAW,gBAEb,SAACiK,EAAA,EAAY,CACXh6B,KACE,wIAEFi6B,OAAQ,0BACRlK,UAAW,8BAQzB,SAACowB,GAAoB,IACnBpwB,UAAW,2CAAyC,WAEpD,UAAC,EAAA8W,KAAI,YACH,SAAC,EAAAE,UAAS,WACR,SAAC,EAAA1V,MAAK,IAACC,aAAa,MAAI,UAAEjmB,EAAE,6BAE9B,SAAC,EAAA27B,SAAQ,WACP,UAAC,EAAA3E,KAAI,IACHG,WAAY,CAAE9hB,QAAS,gBACvBnlB,UAAW,CAAEmlB,QAAS,SAAUggC,GAAI,QAAO,YAE3C,SAAC,EAAAre,KAAI,IACHC,eAAgB,CAAE5hB,QAAS,wBAC3B+mB,KAAM,CAAE/mB,QAAS,WAAU,WAE3B,SAAC,EAAAgiB,SAAQ,WACP,UAAC,EAAAkR,MAAK,IAACjkB,WAAS,eACd,SAAC,EAAAkkB,UAAS,WACR,gBAAKhX,IAAK0E,EAASK,IAAK,GAAIjI,MAAO,CAAEkI,OAAQ,aAE/C,SAAC,EAAAgS,UAAS,WACR,SAAC,EAAAxiB,MAAK,IAACC,aAAa,KAAKvB,UAAW,cAAY,UAC7C1kB,EAAE,qCAMb,SAAC,EAAA0uB,QAAO,CACN4mB,YAAa,CAAEjgC,QAAS,aAAcggC,GAAI,eAE5C,SAAC,EAAAre,KAAI,IACHC,eAAgB,CAAE5hB,QAAS,wBAC3B+mB,KAAM,CAAE/mB,QAAS,WAAU,WAE3B,SAAC,EAAAgiB,SAAQ,WACP,UAAC,EAAAkR,MAAK,IAACjkB,WAAS,eACd,SAAC,EAAAkkB,UAAS,WACR,gBAAKhX,IAAK4E,GAASG,IAAK,GAAIjI,MAAO,CAAEkI,OAAQ,aAE/C,UAAC,EAAAgS,UAAS,YACR,SAAC,EAAAxiB,MAAK,IAACC,aAAa,KAAKvB,UAAW,cAAY,UAC7C1kB,EAAE,gCAEL,SAAC,EAAAqqB,KAAI,IACHxxB,UAAW,EAAAiyB,aAAA,EACXpG,UAAW,kBAAgB,UAE1B1kB,EAAE,kDAMb,SAAC,EAAA0uB,QAAO,CACN4mB,YAAa,CAAEjgC,QAAS,aAAcggC,GAAI,eAE5C,SAAC,EAAAre,KAAI,IACHC,eAAgB,CAAE5hB,QAAS,wBAC3B+mB,KAAM,CAAE/mB,QAAS,WAAU,WAE3B,SAAC,EAAAgiB,SAAQ,WACP,UAAC,EAAAkR,MAAK,IAACjkB,WAAS,eACd,SAAC,EAAAkkB,UAAS,WACR,gBACEhX,IAAK2E,GACLI,IAAK,GACLjI,MAAO,CAAEkI,OAAQ,aAGrB,UAAC,EAAAgS,UAAS,YACR,SAAC,EAAAxiB,MAAK,IAACC,aAAa,KAAKvB,UAAW,cAAY,UAC7C1kB,EAAE,2BAEL,SAAC,EAAAqqB,KAAI,IACHxxB,UAAW,EAAAiyB,aAAA,EACXpG,UAAW,kBAAgB,UAE1B1kB,EAAE,0DAY3B,E,mNC9Tau1C,GAET,SAAC,G,IAAE53C,EAAa,gBACVqC,GAAM,IAAA0F,gBAAe,SAAQ,EAErC,OACE,UAAC,EAAAigB,WAAU,wBACS,mBAClBtwB,QAAS,EAAAuwB,kBAAA,OAAuB,YAEhC,SAAC,EAAAC,eAAc,CAACC,KAAM,EAAAwc,kBACtB,SAAC,EAAAtc,MAAK,IAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,0BAEL,SAAC,EAAAmmB,eAAc,UAAEnmB,EAAE,wBACnB,SAAC,EAAApH,OAAM,kBACO,oBACZ41B,OAAO,gBACPn5B,QAAQ,UACR4zB,QAAStrB,GAAa,UAErBqC,EAAE,sBAIX,GbzCA,SAAY8tC,GACV,6BACA,mBACA,mBACA,eACA,aACA,eACA,kBACA,uBACD,CATD,CAAYA,KAAAA,GAAkB,KAW9B,SAAYC,GACV,eACA,uBACA,uBACA,uBACA,uBACA,kBACA,uBACD,CARD,CAAYA,KAAAA,GAAkB,KAUvB,IcyDKyH,GdzDCC,KAAY,OACtB1H,GAAmB2H,MAAO/oC,OAAO,KAClC,GAACohC,GAAmB4H,UAAWhpC,OAAO,QACtC,GAACohC,GAAmB6H,UAAWjpC,OAAO,WACtC,GAACohC,GAAmB8H,UAAWlpC,OAAO,cACtC,GAACohC,GAAmB+H,UAAWnpC,OAAO,iB,IAG3BopC,KAAkB,OAC5BjI,GAAmBkI,aAAcrpC,OAAO,KACzC,GAACmhC,GAAmBmI,QAAStpC,OAAO,QACpC,GAACmhC,GAAmBoI,QAASvpC,OAAO,SACpC,GAACmhC,GAAmBqI,MAAOxpC,OAAO,WAClC,GAACmhC,GAAmBsI,KAAMzpC,OAAO,Y,IAQtB0pC,GAAqB,SAAC7qD,GACjC,GAAIA,EAAO,CACT,GAAIA,EAAQuqD,GAAmBO,MAAQ3pC,OAAO,GAC5C,MAAO,CAAEnhB,MAAOA,EAAQuqD,GAAmBO,KAAMC,KAAM,QACzD,GAAI/qD,EAAQuqD,GAAmBS,OAAS7pC,OAAO,GAC7C,MAAO,CAAEnhB,MAAOA,EAAQuqD,GAAmBS,MAAOD,KAAM,SAC1D,GAAI/qD,EAAQuqD,GAAmBU,SAAW9pC,OAAO,GAC/C,MAAO,CAAEnhB,MAAOA,EAAQuqD,GAAmBU,QAASF,KAAM,WAC5D,GAAI/qD,EAAQuqD,GAAmBW,SAAW/pC,OAAO,GAC/C,MAAO,CAAEnhB,MAAOA,EAAQuqD,GAAmBW,QAASH,KAAM,U,CAG9D,MAAO,CAAE/qD,MAAK,EAAE+qD,KAAM,eACxB,EAEaI,GAAyB,SAAC1T,GAC/B,MAAkBoT,GAAmBpT,GAAnCsT,EAAI,OAAE/qD,EAAK,QACnB,OAA0B,IAAnB4hD,OAAO5hD,GAAgB,YAAc,UAAGy3C,EAAI,gBAAQz3C,EAAK,YAAI+qD,EAAI,IAC1E,EAEaK,GAAyB,SAAC5pC,GAC/B,MAAkB6pC,GAAkB7pC,GAAlCupC,EAAI,OAAE/qD,EAAK,QACnB,OAA0B,IAAnB4hD,OAAO5hD,GACV,YACA,UAAGwhB,EAAI,mBAAWxhB,EAAK,YAAI+qD,EAAI,IACrC,EAEaM,GAAoB,SAACrrD,GAChC,GAAIA,EAAO,CACT,GAAIA,EAAQiqD,GAAaqB,WAAanqC,OAAO,GAC3C,MAAO,CAAEnhB,MAAOA,EAAQiqD,GAAaqB,UAAWP,KAAM,aACxD,GAAI/qD,EAAQiqD,GAAasB,WAAapqC,OAAO,GAC3C,MAAO,CAAEnhB,MAAOA,EAAQiqD,GAAasB,UAAWR,KAAM,aACxD,GAAI/qD,EAAQiqD,GAAauB,WAAarqC,OAAO,GAC3C,MAAO,CAAEnhB,MAAOA,EAAQiqD,GAAauB,UAAWT,KAAM,aACxD,GAAI/qD,EAAQiqD,GAAawB,WAAatqC,OAAO,GAC3C,MAAO,CAAEnhB,MAAOA,EAAQiqD,GAAawB,UAAWV,KAAM,Y,CAG1D,MAAO,CAAE/qD,MAAK,EAAE+qD,KAAM,QACxB,E,mNejEM,GAGA,CAAC,OAAQ,aAAc,eAAgB,mBAuBhCW,GAAc,SAAkB,G,MAC3Cl8C,EAAM,SACNxL,EAAQ,WACRiO,EAAM,SACN5O,EAAgB,mBAChByB,EAAS,YACToN,EAAa,gBACbJ,EAAS,YACTtO,EAAiB,oBACjB2O,EAAa,gBACbzP,EAAI,OACJC,EAAO,UACPwC,EAAY,eACZiN,EAAiB,oBACjBC,EAAkB,qBAClBL,EAAc,iBAENwC,GAAM,IAAA0F,gBAAe,SAAQ,EAE/B1X,EAAS+9B,IAETM,EAAa/uB,EAAUhK,OAAS,EACtC,OACE,SAAC,EAAAg5B,YAAW,IAACC,UAAU,EAAMC,mBAAmB,EAAI,aAAc,QAAM,WACtE,SAACC,EAAA,EAAS,CACRp3B,QAAS,EAAA0vB,aAAA,QACT2H,YAAa,aACbC,UAAW3sB,EAAE,oBACbnQ,KAAMmL,EACN5K,QAAS,GACTw8B,aAAc,SAAC,G,IAAEC,EAAM,SAAE1H,EAAE,KAAEj5B,EAAG,MAAO,OACrC,SAACi5B,EAAE,UAAYn3B,EAAOY,OAAOi+B,IAApB3gC,EAD4B,EAGvC+gC,WAAY,SAAC,G,IAAEJ,EAAM,SAAE56B,EAAG,MAAEqzB,EAAE,KAAEp5B,EAAG,MACjC,OACE,SAACo5B,EAAE,IAAWC,UAAWv3B,EAAOY,OAAOi+B,IAAO,UAC3C,WACC,OAAQA,GACN,IAAK,OACH,OACE,SAAC,EAAAl0B,KAAI,IACHjM,GAAI8Q,EAAevL,GAAI,cACX,wBAAuB,yBACZ,cAAY,UAElCA,EAAInC,QAGX,IAAK,aACH,OAAOmC,EAAI0P,WAAWrO,OACxB,IAAK,eACH,OAAOqjD,GAAuB1kD,EAAI,gBAAgBzG,OACpD,IAAK,kBACH,OAAOorD,GAAuB3kD,EAAI,mBAAmBzG,OAE1D,CAnBA,KADMU,EAuBb,EACAghC,cAAe,SAAC,G,IAAEj7B,EAAG,MAAEk7B,EAAa,gBAAO,OACzC,SAACA,EAAa,CACZzW,MAAO,CACL,CACEhhB,MAAOsK,EAAE,sBACTipB,QAAS,WAAM,OAAAxrB,EAAOxL,EAAP,GAEjB,CACEyD,MAAOsK,EAAE,wBACTipB,QAAS,WAAM,OAAAz5B,EAASyC,EAAT,KAToB,EAc3CpD,iBAAkBA,EAClBu+B,SAAO,KACL,EAACp/B,EAAOY,OAAOkB,MAAO,CACpBuH,KAAM,SACNtH,MAAOuN,EACP+vB,SAAU3vB,EACV4vB,aAAc1vB,EACd2vB,cAAe1vB,EACf2vB,SAAU,SAAChiC,GAAkB,OAAC,yBAAyBiiC,KAAKjiC,EAA/B,EAC7BkiC,aAAc1tB,EAAE,gC,GAGpBgpB,QAAS,CACP,CACE3B,MAAOrnB,EAAE,gBACTipB,QAAStrB,EACT8tC,WAAW,IAGfn7C,UAAWA,EACXpC,KAAMA,EACNyC,aAAcA,EACdxC,QAASA,EACTk+B,WAAYA,EACZr9B,kBAAmBA,EACnB8J,kBAAkB,SAACy8C,GAAiB,CAAC53C,cAAeA,IACpDgwB,qBAAqB,SAACC,EAAA,EAAmB,QAIjD,GDpEA,SAAY4nB,GACV,6BACA,kCACD,CAHD,CAAYA,KAAAA,GAAa,KAyClB,IE7GK2B,G,GFuICC,GAA6B,SAAC/vC,GACzC,MAAO,CACLhQ,KAAM,gBACNxB,aAAcwR,EAElB,E,mNG3HagwC,GAET,SAAC,G,IACHC,EAAe,kBACfC,EAAsB,yBACtBC,EAAsB,yBACtBC,EAAsB,yBAEdz3C,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EAEpD,GAAsB,IAAAjb,WAAS,GAA9BgM,EAAM,KAAE6vB,EAAS,MACxB,IAAA77B,UAAsC,GAEtC,IAAMitD,GAAU,IAAA1sD,QAAuB,MAEjC2sD,GAAiB,IAAAxsD,cACrB,SAAC+d,GAEGzS,GACAihD,EAAQpsD,SACR4d,EAAM2mB,QACN6nB,EAAQpsD,QAAQssD,SAAS1uC,EAAM2mB,UAEb,WAAd3mB,EAAMhd,KAAkC,QAAdgd,EAAMhd,KAClCo6B,GAAW7vB,GAGjB,GACA,CAACA,IAGGohD,GAAqB,IAAA1sD,cACzB,SAAC+d,GAEGzS,GACAihD,EAAQpsD,UACPosD,EAAQpsD,QAAQssD,SAAS1uC,EAAM2mB,SAEhCvJ,GAAU,EAEd,GACA,CAAC7vB,KAGH,IAAAlL,YAAU,WAIR,OAHA4K,OAAO2hD,iBAAiB,UAAWH,GACnCxhD,OAAO2hD,iBAAiB,QAASD,GAE1B,WACL1hD,OAAO4hD,oBAAoB,UAAWJ,GACtCxhD,OAAO4hD,oBAAoB,QAASF,EACtC,CACF,GAAG,CAACA,EAAoBF,EAAgBlhD,EAAQihD,IAEhD,IAAMM,GAAgB,IAAA7sD,cAAY,SAAC8sD,EAAeC,GAChDA,EAAG1H,kBACH2H,YAAW,WACT,GAAIT,EAAQpsD,QAAS,CACnB,IAAM8sD,EAAeV,EAAQpsD,QAAQ+sD,cACnC,oCAEFD,GAAiBA,EAA6BE,O,CAElD,GAAG,GACHhyB,EAAU2xB,EACZ,GAAG,IA2BGM,GACJ,SAAC,EAAAC,KAAI,IAAC1xB,SA1BoC,SAAC8C,EAAQ6uB,GAEnD,OADAnyB,GAAU,GACFmyB,GACN,IAAK,iBACHnB,IACA,MACF,IAAK,yBACHC,IACA,MACF,IAAK,yBACHC,IACA,MACF,IAAK,yBACHC,IAGN,EAUgDvP,IAAKwP,GAAO,WACxD,SAAC,EAAAgB,YAAW,WACV,UAAC,EAAAC,SAAQ,YACP,SAAC,EAAAC,UAAS,WACR,SAAC,EAAAD,SAAQ,WACP,SAAC,EAAAE,SAAQ,IAACJ,OAAQ,kBAAgB,UAC/Bz4C,EAAE,+CAKT,SAAC,EAAA0uB,QAAO,KACR,SAAC,EAAAkqB,UAAS,IAACvxB,MAAOrnB,EAAE,+CAA6C,WAC/D,UAAC,EAAA24C,SAAQ,YACP,SAAC,EAAAE,SAAQ,IACPJ,OAAQ,yBACRjjD,YAAawK,EACX,4DACD,UAEAA,EAAE,mDAEL,SAAC,EAAA64C,SAAQ,IACPJ,OAAQ,yBACRjjD,YAAawK,EACX,4DACD,UAEAA,EAAE,mDAEL,SAAC,EAAA64C,SAAQ,IACPJ,OAAQ,yBACRjjD,YAAawK,EACX,4DACD,UAEAA,EAAE,+DApCmB,aA6C9B1O,GACJ,SAAC,EAAA05B,SAAQ,CACP15B,QACE,SAAC,EAAA27C,eAAc,eACA,8BACb6L,iBAAkB,EAChB,SAAC,EAAAC,qBAAoB,iBAEP/4C,EAAE,uCACdipB,QA9DU,SACpB/f,GAEAA,EAAM+3B,iBACNqW,GACF,GAyDkC,UAErBt3C,EAAE,yCAJC,eAORg5C,mBAAmB,SACnBnyB,SAAUmxB,MAMlB,OACE,SAAC,EAAAiB,OAAM,CACL9gB,QAAS7mC,EACT4nD,OAAQX,EACR9O,UAAWhzC,EACX0iD,2BAA2B,GAGjC,E,mNCnLa,GAA0C,SAAC,G,IAAE9jD,EAAO,UAczD,EAba,WACjB,OAAQA,GACN,IAAK,QACH,MAAO,CAAE+jD,WAAY,QAAS7gB,QAAS,KACzC,IAAK,UACH,MAAO,CAAE6gB,WAAY,OAAQ7gB,QAAS,MACxC,IAAK,QACH,MAAO,CAAE6gB,WAAY,OAAQ7gB,QAAS,KACxC,IAAK,mBACH,MAAO,CAAE6gB,WAAY,SAAU7gB,QAAS,MAE9C,CAEgCwQ,IAAgB,CAAC,EAAzCqQ,EAAU,aAAE7gB,EAAO,UAE3B,OACE,SAAC,EAAAuM,MAAK,IAAClJ,WAAS,EAACE,MAAOsd,EAAY10B,UAAW,eAAa,UACzD6T,IAGP,E,+NCnBa8gB,GAA8D,SAAC,G,IAC1Ex8C,EAAY,eAEJmD,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EAE1D,OAAQ7I,GACN,IAAK,QACH,OAAOmD,EAAE,gCACX,IAAK,QACH,OAAOA,EAAE,uBACX,IAAK,UACH,OAAOA,EAAE,gCACX,IAAK,mBACH,OAAOA,EAAE,kCAEf,EAEMs5C,GAAoD,SAAC,G,IAAEh9C,EAAW,cAEtE,OACS0D,GAFK,IAAA0F,gBAAe,CAAC,6BAA4B,GACtC,aAAhBpJ,EACO,wBAEA,uBAEb,EAQai9C,GAAqD,SAAC,G,IACjE18C,EAAY,eACZP,EAAW,cACXK,EAAY,eAEZ,MAAqB,YAAjBE,GAEA,iCACE,SAAC,GAAiB,CAACxH,QAASwH,IAAiB,KAC7C,SAACw8C,GAAmB,CAACx8C,aAAcA,QAMvC,iCACE,SAAC,GAAiB,CAACxH,QAASwH,IAAiB,KAC7C,SAACw8C,GAAmB,CAACx8C,aAAcA,IAAiB,KACpD,SAACy8C,GAAW,CAACh9C,YAAaA,IAAe,KAAGK,EAAY,MAG9D,EAOa68C,GAET,SAAC,G,IAAE/8C,EAAU,aAAEG,EAAS,YAClBoD,GAAM,IAAA0F,gBAAe,4BAA2B,EAClDxK,EAAsD,CAC1Du+C,MAAOz5C,EAAE,qBACT05C,KAAM15C,EAAE,qBAEJ25C,EAAgD,CACpDC,IAAK55C,EAAE,kBACP65C,KAAM75C,EAAE,mBACR85C,MAAO95C,EAAE,oBACT+5C,OAAQ/5C,EAAE,qBACVg6C,OAAQh6C,EAAE,qBACVi6C,MAAOj6C,EAAE,oBACTk6C,SAAUl6C,EAAE,uBACZm6C,iBAAkBn6C,EAAE,+BACpBo6C,cAAep6C,EAAE,6BAEnB,OACE,UAAC,EAAAq6C,WAAU,IAACC,UAAW,GAAC,WACrB79C,IACC,SAAC,EAAAqoC,MAAK,IACJzvC,QAAQ,UACRymC,MAAsB,SAAfr/B,EAAwB,WAAQnS,GAAS,UAE/C4Q,EAAYuB,MAGhB4H,MAAMk2C,QAAQ39C,GACbA,EAAUrF,KAAI,SAAC/L,EAAOU,GAAQ,OAC5B,SAAC,EAAA44C,MAAK,IAAWzvC,QAAQ,WAAS,UAC/BskD,EAAWnuD,KADFU,EADgB,KAM9B,SAAC,EAAA44C,MAAK,IAACzvC,QAAQ,WAAS,UAAEskD,EAAW/8C,SAI7C,EAWa49C,GAAyC,SAAC,G,IACrDC,EAAe,kBACfC,EAAa,gBACbC,EAAW,cACX,IAAAC,cAAAA,OAAa,IAAG,GAAI,EACpBl+C,EAAS,YACTV,EAAW,cAEHgE,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EAoC1D,OACE,oBACEgf,UACEk2B,EACI,mHACA,IAAE,WAGPF,GAAiBE,GAChB,SAAC,EAAA9V,MAAK,IAACzvC,QAAQ,WAAS,UAAE2K,EAAE,yBACzB46C,GAA8B,UAAbl+C,GA3CjBV,aAAW,EAAXA,EAAaH,gBAAiB25C,GAAcqF,gBAChDD,GAcAA,IACC,SAAC,EAAAtiB,QAAO,IACNC,SACE,oCACSv8B,aAAW,EAAXA,EAAaH,cAAa,KAAE,kBAAM,SAClCG,aAAW,EAAXA,EAAavE,YAAW,KAAE,kBAAM,UAC/BuE,aAAW,EAAXA,EAAaJ,UACjB,WAGR,qBAAMk/C,SAAU,GAAC,WACdp+C,aAAS,EAATA,EAAWq+C,MAAM,KAAK,GAAE,KAAE,SAAC,EAAAC,eAAc,CAAClf,MAAM,iBAxBvD,SAAC,EAAAxD,QAAO,IACNC,SACE,oCACSv8B,GAAeA,EAAYH,cAAa,KAAE,sBAC7C,WAGR,qBAAMi/C,SAAU,GAAC,WACd,IACAp+C,aAAS,EAATA,EAAWq+C,MAAM,KAAK,GAAE,KAAE,SAAC,EAAAC,eAAc,CAAClf,MAAM,iBAiCnD,SAAC,EAAAgJ,MAAK,IAACzvC,QAAS,WAAS,UAAG2K,EAAE,yBAK/By6C,GAAkCnwD,MAAfqwD,IAClB,SAACM,GAAA,EAAY,CACX5lD,QAAQ,OACRusC,QAAS5hC,EAAE,6BACXipB,QAAS0xB,EACThuB,UAAW3sB,EAAE,0BAKvB,E,mNCvLak7C,GAET,SAAC,G,IAAEC,EAAqB,wBAClBn7C,GAAM,IAAA0F,gBAAe,4BAA2B,EACxD,OACE,UAAC,EAAAigB,WAAU,wBACS,mBAClBtwB,QAAS,EAAAuwB,kBAAA,OAAuB,YAEhC,SAAC,EAAAC,eAAc,CAACC,KAAM,EAAAipB,cACtB,SAAC,EAAA/oB,MAAK,IAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,wBAEL,SAAC,EAAAmmB,eAAc,UAAEnmB,EAAE,sBACnB,SAAC,EAAApH,OAAM,kBACO,0BACZ41B,OAAO,4BACPn5B,QAAQ,UACR4zB,QAASkyB,GAAqB,UAE7Bn7C,EAAE,sBAIX,E,sZC3BM,GAGA,CAAC,UAAW,aAAc,YAoBnBo7C,GAAmB,SAAwB,G,IACtDp/C,EAAW,cACXd,EAAW,cACX1L,EAAQ,WACRc,EAAS,YACTpC,EAAI,OACJC,EAAO,UACP8N,EAAgB,mBAChBtL,EAAY,eACZsM,EAAmB,sBACnBF,EAA6B,gCAErBiD,GAAM,IAAA0F,gBAAe,4BAA2B,EAClD,GAAgC,IAAAjb,UAAmB,IAAlD4wD,EAAW,KAAEC,EAAc,MAElC,IAAA/vD,YAAU,WAER+vD,EAAe,GACjB,GAAG,CAACpgD,IAEJ,IAAMlN,EAA0D,CAC9DqL,QAAS2G,EAAE,oBACXvD,WAAYuD,EAAE,kCACdzD,SAAUyD,EAAE,gCAoBd,OACE,SAAC,EAAAssB,YAAW,IAACE,mBAAmB,GAAI,WAClC,SAACC,EAAA,EAAS,CACRp3B,QAAS,EAAA0vB,aAAA,QACT2H,YAAa,aACbC,UAAW3sB,EAAE,qCACbgpB,QAAS,CACP,CACEC,QAAShsB,EACToqB,MAAOrnB,EAAE,gBACTyrC,WAAW,IAGf8P,aAAc,CACZ,CACEtyB,QAnBW,WACnBhtB,EAAiBo/C,EACnB,EAkBUh0B,MAAOrnB,EAAE,mBACToY,aAAYijC,EAAY/nD,OAAS,KAGrCzD,KAAMqL,EACN9K,QAAS,GACTorD,QAxCU,SAAC3xB,EAAsB3tB,GACrB5R,MAAZ4R,GACFo/C,EACEzxB,EACI,SAAIwxB,GAAa,GAAF,CAAEn/C,IAAQ,GACzBm/C,EAAY5iD,QAAO,SAACxG,GAAQ,OAAAA,IAAQiK,CAAR,IAGtC,EAiCMu/C,aAAc,SAAC,GAAiB,OA/BhBv/C,EA+BS,WA9BtBm/C,EAAYhxD,SAAS6R,GADT,IAACA,CA+BgB,EAChC0wB,aAAc,SAAC,G,IAAEC,EAAM,SAAE1H,EAAE,KAAEj5B,EAAG,MAAO,OACrC,SAACi5B,EAAE,UAAYn3B,EAAO6+B,IAAb3gC,EAD4B,EAGvC+gC,WAAY,SAAC,G,IAAEJ,EAAM,SAAE56B,EAAG,MAAEqzB,EAAE,KAAEp5B,EAAG,MACjC,OACE,SAACo5B,EAAE,IAAWC,UAAWv3B,EAAO6+B,IAAO,UACpC,WACC,OAAQA,GACN,IAAK,UACH,OACE,SAAC2tB,GAAa,CACZI,eAAe,EACfl+C,UAAWzK,EAAIoH,QACfohD,iBAAiB,EACjBz+C,YACEA,aAAW,EAAXA,EAAavD,QACX,SAACjN,GAAU,qBAAQA,EAAMpB,KAAQ6H,EAAIoH,OAA1B,IACX,KAIV,IAAK,aACH,OACE,SAACmgD,GAAuB,CACtB/8C,WAAYxK,EAAIwK,WAAWA,WAC3BG,UAAW3K,EAAIwK,WAAWG,YAGhC,IAAK,WACH,OACE,SAAC28C,GAAY,CACXj9C,YAAarK,EAAIsK,SAASD,YAC1BO,aAAc5K,EAAIsK,SAASM,aAC3BF,aAAc1K,EAAIsK,SAASI,eAIpC,CA/BA,KADMzQ,EAmCb,EACAghC,cAAe,SAAC,G,IAAEC,EAAa,gBAAEjxB,EAAQ,WAAEjK,EAAG,MAAO,OACnD,SAACk7B,EAAa,CACZzW,MAAO,CACL,CACEhhB,MAAOsK,EAAE,UACTipB,QAAS,W,MACP,OAAAlsB,EACiB,UAAf9K,EAAIoH,QACA,eACW,QAAX,EAAApH,EAAIoH,eAAO,eAAE0hD,MAAM,KAAK,G,GAGlC,CACErlD,MAAOsK,EAAE,iBACTipB,QAAS,WAAM,OAAAz5B,EAAS0M,EAAT,KAd8B,EAmBrD5L,UAAWA,EACXpC,KAAMA,EACNyC,aAAcA,EACdxC,QAASA,EACT2K,kBACE,SAACoiD,GAA0B,CACzBC,sBAAuBl+C,IAG3B0wB,qBACE,SAACutB,GAA0B,CACzBC,sBAAuBl+C,QAMnC,E,mNCvJay+C,GAA+C,SAAC,G,IAC3D/kD,EAAQ,WACR,IAAA4yC,YAAAA,OAAW,IAAG,GAAK,EACnBliC,EAAS,YACTjd,EAAE,KACFod,EAAM,SACNzc,EAAO,UAECiV,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EACpD,GAAsB,IAAAjb,WAAkB,GAAvCgM,EAAM,KAAE6vB,EAAS,KAClB,GAAwB,IAAA77B,WAAkB,GAAzCkxD,EAAO,KAAEC,EAAU,KACpB,GAAwC,IAAAnxD,YAAvC2c,EAAe,KAAEy0C,EAAkB,MAG1C,IAAAC,kBAAgB,WAAM,OAAAx1B,EAAUijB,EAAV,GAAwB,CAACA,IAE/C,IAUMwS,EAAoB,EACxB,SAAC,EAAAz0B,aAAY,IACX00B,mBAAmB,EACnB5jC,YAAY,GAAI,UAGfpY,EAAE,sBAFEA,EAAE,sBAKLi8C,EAAiB,EACrB,SAAC,EAAA30B,aAAY,IACX00B,mBAAmB,EACnB5jC,YAAY,GAAI,UAGfpY,EAAE,sBAFE,qBAMT,SAASuvC,EAAY2M,QAAA,IAAAA,IAAAA,EAAA,IACnB,IAAMzjD,EAASyjD,EAAYC,cACrB50C,EACO,KAAX9O,EACI9B,aAAQ,EAARA,EAAU8B,QACR,SAACiE,GACC,OAAAA,EAAUjF,YAAY0kD,cAAc9xD,SAASoO,IAC7CiE,EAAUtS,GAAGC,SAASoO,EADtB,IAGJ9B,EAEAylD,EAAwB70C,aAAgB,EAAhBA,EAC1B9O,QACA,SAACiE,GAAc,OAAAA,EAAUb,gBAAkB25C,GAAcqF,cAA1C,IAEhB/rD,MAAK,SAAC0I,EAAGm7B,GACR,OAAAn7B,EAAEC,aAAek7B,EAAEl7B,YACfD,EAAEC,YAAY4kD,cAAc1pB,EAAEl7B,cAC7B,CAFL,IAIDF,KAAI,SAACmF,EAAW8qB,GAAU,OACzB,SAAC,EAAAF,aAAY,IAEX97B,MAAOkR,EAAUtS,GACjBoL,YAAakH,EAAUjF,aAAW,UAEjCiF,EAAUtS,KAJNo9B,EAFkB,IAUvB80B,EAAwB/0C,aAAgB,EAAhBA,EAC1B9O,QACA,SAACiE,GAAc,OAAAA,EAAUb,gBAAkB25C,GAAc+G,WAA1C,IAEhBhlD,KAAI,SAACmF,EAAW8qB,GAAU,OACzB,SAAC,EAAAF,aAAY,IAEX97B,MAAOkR,EAAUtS,GACjBoL,YAAakH,EAAUjF,aAAW,UAEjCiF,EAAUtS,KAJNo9B,EAFkB,IAU7B,MAAO,EACL,SAAC,EAAAg1B,YAAW,WACV,SAAC,EAAAl1B,aAAY,IAEX97B,MAAOwU,EAAE,sBACTxK,YAAawK,EAAE,6BAA2B,UAEzCA,EAAE,wBAJEA,EAAE,wBAFM,uBAUjB,SAAC,EAAA0uB,QAAO,GAAK,yBACb,SAAC,EAAA8tB,YAAW,IACVn1B,MAAOrnB,EAAE,uCAAqC,WAG7Co8C,aAAqB,EAArBA,EAAuB9oD,QACpB8oD,EACAL,IAJA,2BAMN,SAAC,EAAArtB,QAAO,GAAK,0BACb,SAAC,EAAA8tB,YAAW,IACVn1B,MAAOrnB,EAAE,oCAAkC,WAG1Cs8C,aAAqB,EAArBA,EAAuBhpD,QAASgpD,EAAwBL,IAFrD,uBAKV,CAEA,IAMMrlB,EAA8B+kB,EAChC,EAAAc,iBAAA,MACA,EAAAA,iBAAA,QAEJ,OACE,SAAC,EAAA7zB,MAAK,IACJx+B,GAAG,2BACHiL,QAAS,QACToB,QAAQ,EAAI,aACAuJ,EAAE,qBACd+oB,SAAS,MACTrzB,MAAOsK,EAAE,gBACT8oB,WAAW,EAAI,mBACE,gBACjB/9B,QAASA,EACT2xD,cAAe3xD,EACf6J,SAAU,WACR,OAAAxK,GAAKqK,SAASI,eAAezK,IAAuBqK,SAASK,IAA7D,EAEFk0B,QAAS,EACP,SAAC,EAAApwB,OAAM,IAELvD,QAAQ,UACR+iB,WACqB,IAAnBhR,GAA4C9c,MAAnB8c,EAE3B6hB,QAAS,WAAM,OAAAzhB,EAAOJ,EAAP,EAAuB,aAC1BpH,EAAE,yBAAuB,UAEpCA,EAAE,0BARE,IAUP,SAAC,EAAApH,OAAM,IACLqwB,QAASl+B,EAETsK,QAAQ,YAAW,aACP2K,EAAE,kBAAgB,UAE7BA,EAAE,mBAJE,KAMR,WAED,UAAC,EAAAmpB,KAAI,IAACkT,SAAU,SAACl6B,GAAM,OAAAA,EAAE8+B,gBAAF,GAAkB,YACvC,SAAC,EAAA5X,UAAS,IACRC,QAAQ,sBACRjC,MAAOrnB,EAAE,kBACT5V,GAAG,iBAAe,UAEjBid,MAGH,SAAC,EAAAgiB,UAAS,IACRC,QAAQ,eACRsN,UAAWA,EACXwB,kBAAmBp4B,EAAE,mBACrB44B,YAAU,EACVvR,MAAOrnB,EAAE,oBACT28C,WACE,SAAC,EAAAj5B,QAAO,IAACE,YAAa5jB,EAAE,oBAAkB,WACxC,sBACE3I,KAAK,SACL4xB,QAAS,SAAC9mB,GAAM,OAAAA,EAAE8+B,gBAAF,EAChBvc,UAAU,8BAA6B,aAC3B1kB,EAAE,iBAAe,WAE7B,SAAC,EAAA6kC,SAAQ,CAAC+X,iBAAe,WAEnB,UAGXjmD,GACC,SAAC,EAAAgwB,OAAM,IACLv8B,GAAI,aAAY,cACJ,sBACZs6B,UAAU,iCACVrvB,QAAS,EAAA2xB,cAAA,UACT2oB,mBAAoB3vC,EAAE,oBACtB4vC,UAAW,IACX/oB,SA1LK,SAACg2B,GAChBv2B,EAAUu2B,EACZ,EAyLY/1B,SApF8B,SAAChqB,EAAGtR,GAC5CqwD,EAAmBrwD,GACnBowD,GAAW,GACXt1B,GAAU,EACZ,EAiFYypB,QAxLW,WACrB8L,OAAmBvxD,GACnBsxD,GAAW,GACXt1B,GAAU,EACZ,EAqLYY,WAAY9f,EACZyoC,SAAU,SAAC/yC,EAAGtR,GAAU,OAAA+jD,EAAY/jD,EAAZ,EACxBiL,OAAQA,EACRwwB,gBAAiBjnB,EAAE,oCACnB88C,aAAW,EACX31B,aAAa,SACbyP,UAAWA,EACXmmB,WAAY/8C,EAAE,8BACdg9C,WAAS,EACTC,eAAgB,WACd32B,GAAU,GACVs1B,GAAW,EACb,GAAC,UAEArM,QAGH,SAAC,EAAA1Y,SAAQ,CAACzR,MAAO,kBAM7B,E,YCjPa83B,GAA6C,SAAC,G,IACzD1xD,EAAK,QACL2xD,EAAa,gBACb9sB,EAAS,YACTxzB,EAAY,eACZugD,EAAkB,qBAClBC,EAAc,iBACdC,EAAc,iBAENt9C,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EA6C1D,OACE,SAAC63C,GAAA,EAAoB,CACnBnzD,GAAG,gBACHuiC,UAEM3sB,EADmB,OAAvBo9C,EACM,oCACA,6CADqC,CAAE5xD,MAAOqR,IAKtDrR,MAAOA,EACPy7B,gBAEMjnB,EADmB,OAAvBo9C,EACM,qCACA,+CAER/2B,SAAU82B,EACVK,UAAU,EACVntB,UAAWA,EACXgtB,eAAgBA,EAChBI,kBA9BiB,SAAChlD,GACpB,IAAMilD,EAnCgB,SACtB7gD,EACA8gD,EACAllD,GAEA,IAAMmlD,EAAS,IAAIC,OAAO,qBAE1B,YAAevzD,IAAXmO,GAAmC,KAAXA,GAA2B,KAAVA,EACpC,CAAEkgC,SAAS,EAAMrjC,aAAShL,GACL,MAA1BqzD,GAAkD,SAAhB9gD,GACtB,KAAVpE,GAA2B,MAAVA,EAOH,SAAhBoE,GAA4B+gD,EAAOnwB,KAAKh1B,GAMxB,kBAAhBoE,GAAqC+gD,EAAOnwB,KAAKh1B,GAKjDA,EAAOnF,OAAS,GACX,CAAEqlC,SAAS,EAAOrjC,QAAS0K,EAAE,kCAE/B,CAAE24B,SAAS,EAAMrjC,aAAShL,GAPxB,CACLquC,SAAS,EACTrjC,QAAS0K,EAAE,0CARN,CACL24B,SAAS,EACTrjC,QAAS0K,EAAE,iCATJ,CACL24B,SAAS,EACTrjC,QAAS0K,EAAE,qCAmBnB,CAG4B89C,CACxBjhD,EACAugD,EACA3kD,GAGF,OADA6kD,EAAeI,EAAkB/kB,SAC1B+kB,CACT,GAyBF,E,mNC9DaK,GAAuD,SAAC,G,IACnEvyD,EAAK,QACL2xD,EAAa,gBACb,IAAA5T,YAAAA,OAAW,IAAG,GAAK,EACnBhZ,EAAO,UACPytB,EAAmB,sBAEXh+C,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EACpD,GAAsB,IAAAjb,WAAkB,GAAvCgM,EAAM,KAAE6vB,EAAS,KAmBxB,OAjBA,IAAAw1B,kBAAgB,WAAM,OAAAx1B,EAAUijB,EAAV,GAAwB,CAACA,KAkB7C,SAAC,EAAAlgB,UAAS,IACRuN,UAAWrG,EAAU,EAAAksB,iBAAA,MAAyB,EAAAA,iBAAA,QAC9CrkB,kBAAmBp4B,EAAE,mBACrBspB,QAAS,6BAA2B,WAEpC,SAAC,EAAA3C,OAAM,IACLv8B,GAAI,4BAA2B,aACnB4V,EAAE,wBAAyBxU,GAAM,cACjC,iCACZ6J,QAAS,EAAA2xB,cAAA,OACTH,SA1BW,SAACr7B,GAChB86B,EAAU96B,EACZ,EAyBMs7B,SAxBoC,SAAChqB,EAAGiqB,GAC5Co2B,EAAcp2B,GACdT,GAAU,EACZ,EAsBM7vB,OAAQA,EACR2uB,MAAO,IACP6B,gBAAiBjnB,EAAE,+BACnB42B,UAAWrG,EAAU,EAAAksB,iBAAA,MAAyB,EAAAA,iBAAA,QAC9Cv1B,WAAY17B,EACZ27B,aAAc1yB,SAASK,MAAI,UAzBxBkpD,EAAoBzmD,KAAI,SAAC/L,EAAOg8B,GAAU,OAC/C,SAAC,EAAAF,aAAY,IAAa97B,MAAOA,GAAK,UACnCA,IADgBg8B,EAD4B,SA+BrD,E,mNCpEay2B,GAAyD,SAAC,G,IACrEzyD,EAAK,QACL2xD,EAAa,gBACb,IAAA5T,YAAAA,OAAW,IAAG,GAAK,EAEXvpC,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EACpD,GAAsB,IAAAjb,WAAkB,GAAvCgM,EAAM,KAAE6vB,EAAS,MAExB,IAAAw1B,kBAAgB,WAAM,OAAAx1B,EAAUijB,EAAV,GAAwB,CAACA,IAE/C,IAAM2U,EAEF,CACFC,MAAOn+C,EAAE,qBACTo+C,KAAMp+C,EAAE,qBAiBV,OACE,SAAC,EAAA2mB,OAAM,IACLv8B,GAAI,6BAA4B,aACpB4V,EAAE,yBAA0B,CAAExU,MAAK,IAAG,cACtC,kCACZ6J,QAAS,EAAA2xB,cAAA,OACTH,SArBa,SAACr7B,GAChB86B,EAAU96B,EACZ,EAoBIs7B,SAnBsC,SAAChqB,EAAGiqB,GAC5Co2B,EAAcp2B,GACdT,GAAU,EACZ,EAiBI7vB,OAAQA,EACR2uB,MAAO,IACP8B,WAAY17B,EACZ27B,aAAc1yB,SAASK,MAAI,UAlBtB+f,OAAOuS,QAAQ82B,GAA2B3mD,KAAI,SAAC,G,IAAC/L,EAAK,KAAE67B,EAAK,KAAM,OACvE,SAAC,EAAAC,aAAY,IAAa97B,MAAOA,GAAK,UACnC67B,IADgB77B,EADoD,MAuB7E,E,mNC/Ca6yD,GAAyD,SAAC,G,IACrE7yD,EAAK,QACL2xD,EAAa,gBACb,IAAA5T,YAAAA,OAAW,IAAG,GAAK,EAEXvpC,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EACpD,GAAsB,IAAAjb,WAAkB,GAAvCgM,EAAM,KAAE6vB,EAAS,MAExB,IAAAw1B,kBAAgB,WAAM,OAAAx1B,EAAUijB,EAAV,GAAwB,CAACA,IAE/C,IAAM+U,EAEF,CACF,cAAe,CACbj3B,MAAOrnB,EAAE,oCACTxK,YAAawK,EAAE,iDAEjBu+C,GAAI,CACFl3B,MAAOrnB,EAAE,2BACTxK,YAAawK,EAAE,yCAqBnB,OACE,SAAC,EAAA2mB,OAAM,IACLv8B,GAAI,8BAA6B,aACrB4V,EAAE,kCAAmC,CAAExU,MAAK,IAAG,cAC/C,mCACZ6J,QAAS,EAAA2xB,cAAA,OACTH,SAvBa,SAACr7B,GAChB86B,EAAU96B,EACZ,EAsBIs7B,SArBsC,SAAChqB,EAAGiqB,GAC5Co2B,EAAcp2B,GACdT,GAAU,EACZ,EAmBI7vB,OAAQA,EACR2uB,MAAO,IACP8B,WAAY17B,EACZ27B,aAAc1yB,SAASK,MAAI,UApBtB+f,OAAOuS,QAAQk3B,GAA2B/mD,KAC/C,SAAC,G,IAACrL,EAAG,KAAE,OAAEm7B,EAAK,QAAE7xB,EAAW,cAAQ,OACjC,SAAC,EAAA8xB,aAAY,IAAW97B,MAAOU,EAAKsJ,YAAaA,GAAW,UACzD6xB,IADgBn7B,EADc,MAwBzC,E,mNC7CasyD,GAA6C,SAAC,G,IACzDhzD,EAAK,QACL2xD,EAAa,gBACb,IAAA5T,YAAAA,OAAW,IAAG,GAAK,EACnBhZ,EAAO,UAECvwB,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EACpD,GAAsB,IAAAjb,WAAkB,GAAvCgM,EAAM,KAAE6vB,EAAS,MAExB,IAAAw1B,kBAAgB,WAAM,OAAAx1B,EAAUijB,EAAV,GAAwB,CAACA,IAE/C,IAAMyU,EAA8D,CAClE,iBAAkBh+C,EAAE,gCACpBc,MAAOd,EAAE,uBACT,iBAAkBA,EAAE,gCACpB,mBAAoBA,EAAE,mCAiBxB,OACE,SAAC,EAAAqpB,UAAS,IACRuN,UAAWrG,EAAU,EAAAksB,iBAAA,MAAyB,EAAAA,iBAAA,QAC9CrkB,kBAAmBp4B,EAAE,mBACrBspB,QAAS,wBAAsB,WAE/B,SAAC,EAAA3C,OAAM,IACLv8B,GAAI,uBAAsB,aAEfE,MAATkB,EACIwU,EAAE,uCAAwC,CAAExU,MAAOA,IACnDwU,EAAE,+BAA8B,cAE1B,4BACZ3K,QAAS,EAAA2xB,cAAA,OACTH,SA9BW,SAACr7B,GAChB86B,EAAU96B,EACZ,EA6BMs7B,SA5BoC,SAAChqB,EAAGiqB,GAC5Co2B,EAAcp2B,GACdT,GAAU,EACZ,EA0BM7vB,OAAQA,EACR2uB,MAAO,IACP6B,gBAAiBjnB,EAAE,kCACnB42B,UAAWrG,EAAU,EAAAksB,iBAAA,MAAyB,EAAAA,iBAAA,QAC9Cv1B,WAAY17B,EACZ27B,aAAc1yB,SAASK,MAAI,UA7BxB+f,OAAOuS,QAAQ42B,GAAqBzmD,KAAI,SAAC,G,IAAC/L,EAAK,KAAE67B,EAAK,KAAM,OACjE,SAAC,EAAAC,aAAY,IAAa97B,MAAOA,GAAK,UACnC67B,IADgB77B,EAD8C,SAmCvE,ECjFaizD,GAA+B,WAClC,IAAAz+C,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EAC1D,OACE,SAAC,EAAAsf,MAAK,WACJ,UAAC,EAAAE,GAAE,YACD,SAAC,EAAAC,GAAE,UAAEnlB,EAAE,kCACP,SAAC,EAAAmlB,GAAE,KAEH,SAAC,EAAAA,GAAE,KAEH,SAAC,EAAAA,GAAE,UAAEnlB,EAAE,qCACP,SAAC,EAAAmlB,GAAE,KACH,SAAC,EAAAA,GAAE,QAIX,E,mNCIau5B,GAET,SAAC,G,IACH7hD,EAAY,eACZ8hD,EAAiB,oBACjBC,EAAkB,qBAClBvuB,EAAS,YACTwuB,EAAyB,4BACzBC,EAA0B,6BAC1BC,EAAoB,uBACpB9sD,EAAG,MACHzC,EAAQ,WAEAwQ,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EAC1D,OACE,SAAC,EAAA2f,MAAK,WACJ,UAAC,EAAAH,GAAE,YACD,SAAC,EAAAI,GAAE,IAACF,MAAO,IAAE,WACX,SAACo5B,GAAY,CACXhzD,MAAOqR,EACPsgD,cAAe4B,EACfxuB,QAASF,QAA8B/lC,IAAjBuS,QAI1B,SAAC,EAAAyoB,GAAE,KACH,SAAC,EAAAA,GAAE,KAEH,SAAC,EAAAA,GAAE,WACD,SAAC24B,GAAkB,CACjBzyD,MAAOozD,EACPzB,cAAe2B,OAGnB,SAAC,EAAAx5B,GAAE,WACD,SAACy4B,GAAiB,CAChBvyD,MAAOmzD,EACPxB,cAAe0B,EACfb,oBAAqB,CACnBh+C,EAAE,oBACFA,EAAE,wBAEJuwB,QAASF,QAAmC/lC,IAAtBq0D,OAG1B,SAAC,EAAAr5B,GAAE,WACD,SAAC21B,GAAA,EAAY,CACX5lD,QAAQ,OACR4zB,QAAS,WAAM,OAAAz5B,EAASyC,EAAT,EACf2vC,QAAS5hC,EAAE,6BAMvB,EC1Cag/C,GAET,SAAC,G,IACHniD,EAAY,eACZkiD,EAAoB,uBACpB1uB,EAAS,YACT4uB,EAAc,iBACdC,EAAsB,yBACtBviD,EAAY,eACZwiD,EAAgB,mBAChBC,EAA0B,6BAC1BR,EAAkB,qBAClBD,EAAiB,oBACjBE,EAAyB,4BACzBC,EAA0B,6BAC1B,IAAAO,4BAAAA,OAA2B,IAAG,GAAI,EAClCptD,EAAG,MACHzC,EAAQ,WACR8tD,EAAc,iBAENt9C,GAAM,IAAA0F,gBAAe,4BAA2B,EAiCxD,OACE,gCACI25C,EAAuD,MAAzB,SAACZ,GAAkB,IACjC,mBAAjB5hD,GACC,SAAC6hD,GAA8B,CAC7BC,kBAAmBA,EACnBC,mBAAoBA,EACpB/hD,aAAcA,EACdwzB,UAAWA,EACXwuB,0BAA2BA,EAC3BC,2BAA4BA,EAC5BC,qBAAsBA,EACtBvvD,SAAUA,EACVyC,IAAKA,KAGP,SAAC,EAAAozB,MAAK,WACJ,UAAC,EAAAH,GAAE,YACD,SAAC,EAAAI,GAAE,WACD,SAACk5B,GAAY,CACXhzD,MAAOqR,EACPsgD,cAAe4B,EACfxuB,QAASF,QAA8B/lC,IAAjBuS,OAG1B,SAAC,EAAAyoB,GAAE,WACD,SAAC+4B,GAAkB,CACjB7yD,MAAOyzD,EACP9B,cAAe+B,OAGnB,SAAC,EAAA55B,GAAE,WACD,SAAC43B,GAAY,CACX1xD,MAAOmR,EACPwgD,cAAegC,EACf9B,eAAgB+B,EAChB/uB,UAAWA,EACXxzB,aAAcA,EACdugD,mBAAoB6B,EACpB3B,eAAgBA,OAGpB,SAAC,EAAAh4B,GAAE,WACD,SAAC24B,GAAkB,CACjBzyD,MAAOozD,EACPzB,cAAe2B,OAGnB,SAAC,EAAAx5B,GAAE,WACD,SAACy4B,GAAiB,CAChBC,oBAlFc,WAC1B,OAAQnhD,GACN,IAAK,iBACH,MAAO,CACLmD,EAAE,kBACFA,EAAE,mBACFA,EAAE,qBACFA,EAAE,wBAEN,IAAK,iBACH,MAAO,CAACA,EAAE,oBAAqBA,EAAE,wBACnC,IAAK,mBACH,MAAO,CACLA,EAAE,kBACFA,EAAE,oBACFA,EAAE,wBAEN,QACE,MAAO,CACLA,EAAE,kBACFA,EAAE,mBACFA,EAAE,oBACFA,EAAE,qBACFA,EAAE,qBACFA,EAAE,oBACFA,EAAE,uBACFA,EAAE,+BACFA,EAAE,6BAGV,CAoDmCg+C,GACrBxyD,MAAOmzD,EACPxB,cAAe0B,EACftuB,WACEF,QAAmC/lC,IAAtBq0D,QAInB,SAAC,EAAAr5B,GAAE,WACD,SAAC21B,GAAA,EAAY,CACX5lD,QAAQ,OACR4zB,QAAS,WAAM,OAAAz5B,EAASyC,EAAT,EACf2vC,QAAS5hC,EAAE,6BACX2sB,UAAW3sB,EAAE,4BAQ7B,E,mNC/Ias/C,GAAkD,SAAC,G,IAC9Dj5B,EAAQ,WACRk5B,EAAe,kBACfC,EAAiB,oBACjBC,EAAoB,uBACpBL,EAA0B,6BAC1B/uB,EAAS,YACTqvB,EAAsB,yBACtBpC,EAAc,iBAEd,OACE,UAAC,EAAAp4B,GAAE,IAACoJ,MAAO,CAAEqxB,aAAcD,EAAyB,OAAS,KAAI,YAC/D,UAAC,EAAAp6B,GAAE,WACA,KACD,SAAC,GAAiB,CAACjwB,QAAS,UAAY,KACxC,SAACgkD,GAAmB,CAACx8C,aAAc,UAAY,QAEjD,SAAC,EAAAyoB,GAAE,WAEC,SAAC+4B,GAAkB,CACjB7yD,MAAO+zD,EACPpC,cAAe92B,OAIrB,SAAC,EAAAf,GAAE,WACD,SAAC43B,GAAY,CACX1xD,MAAOg0D,EACPrC,cAAesC,EACfpC,eAAgB+B,EAChB/uB,UAAWA,EACXxzB,aAAc,QACdugD,mBAAoBmC,EACpBjC,eAAgBA,OAGpB,SAAC,EAAAh4B,GAAE,IAACs6B,QAAS,GAAC,WACZ,SAACpG,GAAuB,CACtB/8C,WAAY,QACZG,UACE8iD,EACI,CAAC,OAAQ,YACT,CAAC,QAAS,SAAU,oBAMpC,E,mNClCaG,GAA4D,SAAC,G,IACxEC,EAA4B,+BAC5BC,EAAoB,uBACpBC,EAAsB,yBACtBC,EAAuB,0BACvBC,EAAyB,4BACzB7vB,EAAS,YACT8vB,EAAkC,qCAClCC,EAAyB,4BACzBC,EAA+B,kCAC/BC,EAAkC,qCAClCC,EAA+B,kCAC/B/wD,EAAQ,WACR,IAAA6vD,4BAAAA,OAA2B,IAAG,GAAI,EAClCptD,EAAG,MACHqrD,EAAc,iBAENt9C,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EAE1D,OACE,gCACI25C,EAAuD,MAAzB,SAACZ,GAAkB,KAEnD,UAAC,EAAAp5B,MAAK,YACJ,UAAC,EAAAH,GAAE,IAACoJ,MAAO,CAAEqxB,aAAc,SAAQ,YACjC,SAAC,EAAAr6B,GAAE,IAACs6B,QAAS,GAAC,WACZ,UAAC,EAAA55B,MAAK,IAACC,aAAa,MAAI,WACrBjmB,EAAE,+CAAgD,KACnD,SAAC,EAAA0jB,QAAO,IACNC,cAAe3jB,EAAE,+CACjB4jB,YAAa5jB,EACX,4DACD,WAED,sBACE3I,KAAK,SACL4xB,QAAS,SAAC9mB,GAAM,OAAAA,EAAE8+B,gBAAF,EAChBvc,UAAU,+BAA6B,WAEvC,SAAC,EAAAmgB,SAAQ,CAAC+X,iBAAe,kBAMjC,SAAC,EAAAt3B,GAAE,WACD,SAAC21B,GAAA,EAAY,CACX5lD,QAAQ,OACR4zB,QAAS,WAAM,OAAAz5B,EAASyC,EAAT,EACf2vC,QAAS5hC,EAAE,6BACX2sB,UAAW3sB,EAAE,4BAInB,SAACs/C,GAAe,CACdhC,eAAgBA,EAChBoC,wBAAwB,EACxBr5B,SAAUg6B,EACVd,gBAAiBQ,EACjBP,kBAAmBQ,EACnBP,qBAAsBW,EACtBhB,2BAA4BmB,EAC5BlwB,UAAWA,KAEb,UAAC,EAAAnL,GAAE,YACD,UAAC,EAAAI,GAAE,WACA,KACD,SAAC,GAAiB,CAACjwB,QAAS,UAAY,KACxC,SAACgkD,GAAmB,CAACx8C,aAAc,UAAY,QAEjD,SAAC,EAAAyoB,GAAE,WACD,SAAC+4B,GAAkB,CACjB7yD,MAAOy0D,EACP9C,cAAegD,OAGnB,SAAC,EAAA76B,GAAE,WAEC,SAAC43B,GAAY,CACX1xD,MAAO00D,EACP/C,cAAe2C,EACfzC,eAAgBiD,EAChBjwB,UAAWA,EACXxzB,aAAc,QACdugD,mBAAoB6C,EACpB3C,eAAgBA,OAItB,SAAC,EAAAh4B,GAAE,WACD,SAACk0B,GAAuB,CACtB/8C,WAAY,QACZG,UAAW,CAAC,oBAO1B,E,mNCnHa4jD,GAA4D,SAAC,G,IACxEhxD,EAAQ,WACR,IAAA6vD,4BAAAA,OAA2B,IAAG,GAAI,EAClCxpD,EAAY,eACZ5D,EAAG,MAEK+N,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EAE1D,OACE,gCACI25C,EAAuD,MAAzB,SAACZ,GAAkB,KAEnD,UAAC,EAAAp5B,MAAK,YACJ,UAAC,EAAAH,GAAE,IAACoJ,MAAO,CAAEqxB,aAAc,SAAQ,YACjC,SAAC,EAAAr6B,GAAE,IAACs6B,QAAS,GAAC,WACZ,UAAC,EAAA55B,MAAK,IAACC,aAAa,MAAI,WACrBjmB,EAAE,+CAAgD,KACnD,SAAC,EAAA0jB,QAAO,IACNC,cAAe3jB,EAAE,+CACjB4jB,YAAa5jB,EACX,4DACD,WAED,sBACE3I,KAAK,SACL4xB,QAAS,SAAC9mB,GAAM,OAAAA,EAAE8+B,gBAAF,EAChBvc,UAAU,+BAA6B,WAEvC,SAAC,EAAAmgB,SAAQ,CAAC+X,iBAAe,kBAKjC,SAAC,EAAAt3B,GAAE,WACD,SAAC21B,GAAA,EAAY,CACX5lD,QAAQ,OACR4zB,QAAS,WAAM,OAAAz5B,EAASyC,EAAT,EACf2vC,QAAS5hC,EAAE,6BACX2sB,UAAW3sB,EAAE,0BAKnB,UAAC,EAAAklB,GAAE,YACD,UAAC,EAAAI,GAAE,IAACs6B,QAAS,GAAC,YACZ,SAAC,GAAiB,CAACvqD,QAAS,YAAc,KAC1C,SAACgkD,GAAmB,CAACx8C,aAAc,YAAc,IAChDmD,EAAE,oBAAqB,CAAExU,MAAOqK,SAGnC,SAAC,EAAAyvB,GAAE,KAEH,SAAC,EAAAA,GAAE,WACD,SAACk0B,GAAuB,CACtB/8C,WAAY,QACZG,UAAW,CAAC,qBAO1B,E,mNCvDa6jD,GAA4D,SAAC,G,IACxEp6B,EAAQ,WACR72B,EAAQ,WACR+vD,EAAe,kBACfE,EAAoB,uBACpBD,EAAiB,oBACjBnvB,EAAS,YACT+uB,EAA0B,6BAC1B,IAAAC,4BAAAA,OAA2B,IAAG,GAAI,EAClCptD,EAAG,MACHqrD,EAAc,iBAENt9C,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EAE1D,OACE,gCACI25C,EAAuD,MAAzB,SAACZ,GAAkB,KAEnD,UAAC,EAAAp5B,MAAK,YACJ,UAAC,EAAAH,GAAE,IAACoJ,MAAO,CAAEqxB,aAAc,SAAQ,YACjC,SAAC,EAAAr6B,GAAE,IAACs6B,QAAS,GAAC,WACZ,UAAC,EAAA55B,MAAK,IAACC,aAAa,MAAI,WACrBjmB,EAAE,+CAAgD,KACnD,SAAC,EAAA0jB,QAAO,IACNC,cAAe3jB,EAAE,+CACjB4jB,YAAa5jB,EACX,4DACD,WAED,sBACE3I,KAAK,SACL4xB,QAAS,SAAC9mB,GAAM,OAAAA,EAAE8+B,gBAAF,EAChBvc,UAAU,+BAA6B,WAEvC,SAAC,EAAAmgB,SAAQ,CAAC+X,iBAAe,kBAKjC,SAAC,EAAAt3B,GAAE,WACD,SAAC21B,GAAA,EAAY,CACX5lD,QAAQ,OACR4zB,QAAS,WAAM,OAAAz5B,EAASyC,EAAT,EACf2vC,QAAS5hC,EAAE,6BACX2sB,UAAW3sB,EAAE,4BAKnB,SAACs/C,GAAe,CACdj5B,SAAUA,EACVk5B,gBAAiBA,EACjBC,kBAAmBA,EACnBC,qBAAsBA,EACtBL,2BAA4BA,EAC5B/uB,UAAWA,EACXitB,eAAgBA,SAK1B,E,sZC1DaoD,GAAuD,SAAC,G,IACnErwB,EAAS,YACT7gC,EAAQ,WACRmxD,EAAgB,mBAChBC,EAAwB,2BACxBC,EAAsB,yBACtBC,EAAyB,4BACzBC,EAAsB,yBACtBC,EAAsB,yBACtBC,EAAS,YACT55C,EAAS,YACT65C,EAAY,eACZ5D,EAAc,iBAEd,OACE,iCACE,UAAC,EAAAx4B,gBAAe,IAACzvB,QAAQ,WAAS,WAC/B4rD,GAAaA,EAAU3tD,OAAS,IAAK,SAACmrD,GAAkB,IACxDwC,GACCA,EAAU1pD,KAAI,SAAC4pD,EAAa1T,GAC1B,OAAQ0T,EAAY9pD,MAClB,IAAK,SACH,OACE,SAAC2nD,GAAuB,CAEtB1B,eAAgBA,EAChBzgD,aAAcskD,EAAYtkD,aAC1BkiD,qBAAsB,SAACvzD,GACrB,OAAA01D,EACE,MAAID,GAAS,GAAE1pD,KAAI,SAAC6pD,EAAgBnvD,GAClC,OAAOA,IAAQw7C,EACX,SAAK2T,GAAc,CAAEvkD,aAAcrR,IACnC,MAAK41D,EACX,IALF,EAQF/wB,UAAWA,EACX4uB,eAAgBkC,EAAYlC,eAC5BC,uBAAwB,SAAC1zD,GACvB,OAAA01D,EACE,MAAID,GAAS,GAAE1pD,KAAI,SAAC6pD,EAAgBnvD,GAClC,OAAOA,IAAQw7C,EACX,SAAK2T,GAAc,CAAEnC,eAAgBzzD,IACrC,MAAK41D,EACX,IALF,EAQFzkD,aAAcwkD,EAAYxkD,aAC1BwiD,iBAAkB,SAAC3zD,GACjB,OAAA01D,EACE,MAAID,GAAS,GAAE1pD,KAAI,SAAC6pD,EAAgBnvD,GAClC,OAAOA,IAAQw7C,EACX,SAAK2T,GAAc,CAAEzkD,aAAcnR,IACnC,MAAK41D,EACX,IALF,EAQFhC,2BAA4BuB,EAC5B/B,mBAAoBuC,EAAYvC,mBAChCE,2BAA4B,SAACtzD,GAC3B,OAAA01D,EACE,MAAID,GAAS,GAAE1pD,KAAI,SAAC6pD,EAAgBnvD,GAClC,OAAOA,IAAQw7C,EACX,SACK2T,GAAc,CACjBxC,mBAAoBpzD,IAEtB,MAAK41D,EACX,IARF,EAWFzC,kBAAmBwC,EAAYxC,kBAC/BE,0BAA2B,SAACrzD,GAC1B,OAAA01D,EACE,MAAID,GAAS,GAAE1pD,KAAI,SAAC6pD,EAAgBnvD,GAClC,OAAOA,IAAQw7C,EACX,SACK2T,GAAc,CACjBzC,kBAAmBnzD,IAErB,MAAK41D,EACX,IARF,EAWFnvD,IAAKw7C,EACLj+C,SAAUA,GA7DLi+C,GAiEX,IAAK,gBACH,OACE,SAACoS,GAAoB,CAEnBvC,eAAgBA,EAChB6C,mCAAoC,SAAC30D,GACnC,OAAA01D,EACE,MAAID,GAAS,GAAE1pD,KAAI,SAAC6pD,EAAgBnvD,GAClC,OAAOA,IAAQw7C,EACX,SACK2T,GAAc,CACjBC,2BAA4B71D,IAE9B,MAAK41D,EACX,IARF,EAWFf,gCAAiC,SAAC70D,GAChC,OAAA01D,EACE,MAAID,GAAS,GAAE1pD,KAAI,SAAC6pD,EAAgBnvD,GAClC,OAAOA,IAAQw7C,EACX,SACK2T,GAAc,CACjBE,wBAAyB91D,IAE3B,MAAK41D,EACX,IARF,EAWFnB,wBACEkB,EAAYE,2BAEdtB,qBAAsBoB,EAAYG,wBAClCpB,0BAA2BiB,EAAYI,qBACvCvB,uBAAwBmB,EAAYK,kBACpC1B,6BAA8B,SAACt0D,GAC7B,OAAA01D,EACE,MAAID,GAAS,GAAE1pD,KAAI,SAAC6pD,EAAgBnvD,GAClC,OAAOA,IAAQw7C,EACX,SACK2T,GAAc,CACjBG,qBAAsB/1D,IAExB,MAAK41D,EACX,IARF,EAWFhB,0BAA2B,SAAC50D,GAC1B,OAAA01D,EACE,MAAID,GAAS,GAAE1pD,KAAI,SAAC6pD,EAAgBnvD,GAClC,OAAOA,IAAQw7C,EACX,SACK2T,GAAc,CACjBI,kBAAmBh2D,IAErB,MAAK41D,EACX,IARF,EAWFd,mCACEM,EAEFL,gCAAiCI,EACjCtwB,UAAWA,EACX7gC,SAAUA,EACVyC,IAAKw7C,GA9DAA,GAkEX,IAAK,gBACH,OACE,SAACgT,GAAoB,CAEnBnD,eAAgBA,EAChBj3B,SAAU,SAAC76B,GACT,OAAA01D,EACE,MAAID,GAAS,GAAE1pD,KAAI,SAAC6pD,EAAgBnvD,GAClC,OAAOA,IAAQw7C,EACX,SAAK2T,GAAc,CAAE7B,gBAAiB/zD,IACtC,MAAK41D,EACX,IALF,EAQF7B,gBAAiB4B,EAAY5B,gBAC7BC,kBAAmB2B,EAAY3B,kBAC/BC,qBAAsB,SAACj0D,GACrB,OAAA01D,EACE,MAAID,GAAS,GAAE1pD,KAAI,SAAC6pD,EAAgBnvD,GAClC,OAAOA,IAAQw7C,EACX,SACK2T,GAAc,CACjB5B,kBAAmBh0D,IAErB,MAAK41D,EACX,IARF,EAWFhC,2BAA4BuB,EAC5BtwB,UAAWA,EACX7gC,SAAUA,EACVyC,IAAKw7C,GA5BAA,GAgCX,IAAK,gBACH,OACE,SAAC+S,GAAoB,CAEnBvuD,IAAKw7C,EACL53C,aAAcwR,EACd7X,SAAUA,GAHLi+C,GAOf,SAEJ,SAAC,EAAAgU,WAAU,WACT,SAAC,EAAAC,eAAc,IAACpzB,MAAO,CAAEqzB,WAAY,SAAQ,WAC3C,SAACtK,GAAmB,CAClBC,gBAAiBuJ,EACjBtJ,uBAAwBwJ,EACxBvJ,uBAAwBsJ,EACxBrJ,uBAAwBuJ,WAMpC,E,mNCnOMY,GAAgD,SAAC,G,IACrDnrD,EAAM,SACNorD,EAAU,aACVC,EAAa,gBAEL9hD,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EAC1D,OACE,SAAC,EAAAkjB,MAAK,IACJx+B,GAAG,qCACHiL,QAAS,EAAAwzB,aAAA,MACTpyB,OAAQA,EAAM,aACFuJ,EAAE,oBACdtK,MAAOsK,EAAE,oBACT+hD,iBAAiB,UACjBj5B,WAAW,EAAI,mBACE,gBACjB/9B,QAAS+2D,EACTpF,cAAemF,EACf74B,QAAS,EACP,SAAC,EAAApwB,OAAM,IAACqwB,QAAS44B,EAAoBxsD,QAAS,EAAAykC,cAAA,SAAqB,UAChE95B,EAAE,qBAD6B,IAGlC,SAAC,EAAApH,OAAM,IACLqwB,QAAS64B,EAETzsD,QAAS,EAAAykC,cAAA,WAAuB,UAE/B95B,EAAE,oBAHE,KAKR,UAEAA,EAAE,wBAGT,E,mNC3BagiD,GAA2D,SAAC,G,IACvEC,EAAiB,oBACjB,IAAA1mD,KAAAA,OAAI,IAAG,KAAE,EACTo/C,EAAW,cAEH36C,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EAE1D,OACE,UAAC,EAAAof,gBAAe,IACdzvB,QAAS,EAAA0vB,aAAA,QAAoB,aACjB/kB,EAAE,6BAA2B,YAEzC,SAAC,EAAAglB,MAAK,IAACC,QAAM,cACX,UAAC,EAAAC,GAAE,YACD,SAAC,EAAAC,GAAE,IAACC,MAAO,IAAE,UAAGplB,EAAE,mCAClB,SAAC,EAAAmlB,GAAE,IAACC,MAAO,IAAE,UAAGplB,EAAE,sCAClB,SAAC,EAAAmlB,GAAE,CAACC,MAAO,YAGf,SAAC,EAAAC,MAAK,UACH9pB,EAAKhE,KAAI,SAAC8E,EAAKoxC,GAEZ,IAAAnxC,EAMED,EAAG,YALLQ,EAKER,EAAG,aAJLM,EAIEN,EAAG,aAHLO,EAGEP,EAAG,UAFLI,EAEEJ,EAAG,WADLK,EACEL,EAAG,UACDo+C,EACkB,iBAAtBwH,GACAvlD,IAAc,eAAQulD,IACT,UAAbvlD,EACIg+C,EAA8B,WAAdh+C,EAEtB,OACE,UAAC,EAAAwoB,GAAE,YACD,SAAC,EAAAI,GAAE,WACD,SAACi0B,GAAY,CACXj9C,YAAaA,EACbO,aAAcA,EACdF,aAAcA,OAGlB,SAAC,EAAA2oB,GAAE,WACD,SAACk0B,GAAuB,CACtB/8C,WAAYA,EACZG,UAAWA,OAGf,SAAC,EAAA0oB,GAAE,WACD,SAACk1B,GAAa,CACZC,gBAAiBA,EACjBC,cAAeA,EACfC,YAAa,WAAM,OAAAA,EAAYlN,EAAZ,QAlBhBA,EAuBb,SAIR,E,mNC1EayU,GAAyD,SAAC,G,IACrEC,EAAS,YACTj7C,EAAY,eACZyzC,EAAW,cAEH36C,GAAM,IAAA0F,gBAAe,CAAC,6BAA4B,EAe1D,OACE,iCACE,SAAC,EAAAmlB,YAAW,WACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,WACjC,UAlBoC,WAC1C,MAAkB,iBAAdq3B,EACKniD,EAAE,sBAGT,UAAC,EAAA6F,MAAK,IAACC,GAAI,CAAC,4BAA6BC,QAAQ,yBAAuB,uNAItE,6CAA6B,mEAInC,GAKmB,UAGf,SAACi8C,GAAsB,CACrBzmD,KAAM2L,EACN+6C,kBAAmBE,GAAwB,GAC3CxH,YAAaA,MAIrB,E,YCuFayH,GAAwB,SAAC52D,GACpC,OAAQA,GACN,IAAK,iBACH,OAAO,GAAA62D,gBAAA,MACT,IAAK,iBACH,OAAO,GAAAA,gBAAA,QACT,IAAK,QACH,OAAO,GAAAA,gBAAA,MACT,QACE,OAAO,GAAAA,gBAAA,gBAEb,EACaC,GAA6B,SACxC92D,GAEA,OAAQA,GACN,IAAK,MACH,MAAO,MACT,IAAK,QACH,MAAO,QACT,IAAK,gBACH,MAAO,gBACT,IAAK,SACH,MAAO,SACT,IAAK,SACH,MAAO,SACT,IAAK,WACH,MAAO,WACT,IAAK,mBACH,MAAO,mBACT,IAAK,OACH,MAAO,OACT,QACE,MAAO,QAEb,E,sZCtHa+2D,GAAkD,SAAC,G,IAC9DpuD,EAAQ,WACRkT,EAAS,YACT9L,EAAI,OACJ8K,EAAM,SACNM,EAAU,aACVD,EAAkB,qBAClBU,EAAe,kBACfhd,EAAE,KAEM4V,GAAM,IAAA0F,gBAAe,CAC3B,2BACA,0BACA,EAEI88C,GAAoB,IAAAx3D,SAAgB,GACpC,GAGF,IAAAP,WAAkB,GAFpBg4D,EAAmC,KACnCC,EAAsC,KAElC,GAAkC,IAAAj4D,WAAkB,GAAnDk4D,EAAY,KAAEC,EAAe,KAC9B,GAGF,IAAAn4D,WAAkB,GAFpBo4D,EAAkC,KAClCC,EAAqC,KAEjC,GAAgC,IAAAr4D,WAAkB,GAAjDs4D,EAAW,KAAEzF,EAAc,KAC5B,GAAwB,IAAA7yD,WAAkB,GAAzCu4D,EAAO,KAAEC,EAAU,KACpB,GAA4B,IAAAx4D,WAAkB,GAA7C4lC,EAAS,KAAE6yB,EAAY,KACxB,GACJ,IAAAz4D,WAAkB,GADb04D,EAAoB,KAAEC,EAAuB,KAE9C,GAAkC,IAAA34D,UAAuB8Q,GAAxD2L,EAAY,KAAEm8C,EAAe,KAC9B,GAAwB,IAAA54D,YAAvB64D,EAAO,KAAEC,EAAU,KACpB,GAAgC,IAAA94D,eACpCH,GADKk5D,EAAW,KAAEC,EAAc,KAI5BC,GAAkB,IAAAv4D,cAAY,WAClC,OAAIm4D,IACmBA,aAAO,EAAPA,EAAS/rD,KAAI,SAAC/L,GACjC,OAAc,UAAdA,EAAM6L,MACgB,kBAAtB7L,EAAMqR,cACqBvS,MAA3BkB,EAAMmzD,oBAEF9pC,OAAO5O,OAAOza,GAAOnB,cAASC,EAJlC,KAMWD,UAAS,GAAQ44D,GAAW,GAASA,GAAW,KAC9C,GAAXD,IAAmBD,OAGrBS,GAAeA,EAAYlwD,OAAS,KACtC2vD,GAAW,IACJ,EAEX,GAAG,CAACD,EAASQ,EAAaT,EAAaO,KAEvC,IAAA/3D,YAAU,WACRm4D,GACF,GAAG,CAACA,EAAiBJ,KAErB,IAAA/3D,YAAU,WAEWjB,MAAfk5D,GAA0BH,EAAgB9nD,EAChD,GAAG,CAACA,EAAMioD,IAEV,IAeMG,EAA2B,GA4D3BvrC,MACHiY,IAAc2yB,IACF14D,MAAXg5D,GAAwBA,EAAQhwD,OAAS,KAAOqvD,IACjDI,GAGGh4D,EAAU,YACbqtB,GAAekrC,IAAWA,aAAO,EAAPA,EAAShwD,QAAS,EACzC8vD,GAAwB,GACxBjvD,GACN,EAyBMyvD,EACgB,iBAApBx8C,EACIpH,EAAE,uBACFoH,aAAe,EAAfA,EAAiB/c,SAAS,UAC1B+c,aAAe,EAAfA,EAAiB2zC,MAAM,KAAK,GAC5B3zC,EACN,OACE,UAAC,EAAAwhB,MAAK,IACJx+B,GAAG,2BACHiL,QAAS,QACToB,QAAQ,EAAI,aACAuJ,EAAE,qBACd+oB,SAAS,MACTrzB,MAAOsK,EAAE,gBACT8oB,WAAW,EAAI,mBACE,gBACjB/9B,QAASA,EACT2xD,cA/HkB,WAChB8F,EAAkBl3D,SACpB6I,GAEJ,EA4HIS,SAAU,WACR,OAAAxK,GAAKqK,SAASI,eAAezK,IAAuBqK,SAASK,IAA7D,EAEFk0B,QAAS,EACP,SAAC,EAAApwB,OAAM,IAELvD,QAAQ,UACR+iB,WAAYA,EACZ6Q,QAvHc,WACpB,GACGq6B,GAAWA,EAAQhwD,OAAS,GAC5BkwD,GAAeA,EAAYlwD,OAAS,EACrC,CACA4vD,GAAa,GACb,IAAMW,EAAaH,KDlIW,SAClCI,EACAR,EACAl8C,GAGA,IAAM28C,EAAsB,eAAQ38C,GACpCk8C,SAAAA,EAAS/rD,KAAI,SAAC/L,GACZ,OAAQA,EAAM6L,MACZ,IAAK,SACHysD,EAAiBv0D,KAAK,CACpBoN,aACwB,kBAAtBnR,EAAMqR,aACF,gBACArR,EAAMmR,aACNnR,EAAMmR,aACN,GACNE,aAAculD,GAAsB52D,EAAMqR,cAC1CP,YAAqC,MAAxB9Q,EAAMyzD,eAAyB,UAAY,WACxDriD,UAAW0lD,GAA2B92D,EAAMmzD,mBAC5CliD,WAAwC,SAA5BjR,EAAMozD,mBAAgC,QAAU,OAC5DliD,UACqB,gBAAnB0K,EAAoC,SAAW28C,IAEnD,MAEF,IAAK,gBAEDD,EAAiBv0D,KAAK,CACpBoN,aAAc,gBACdE,aAAc,UACdP,YAAa,UACbM,UAAW,QACXH,WAAY,QACZC,UACqB,gBAAnB0K,EACI,SACA28C,IAGV,MACF,IAAK,gBAEDD,EAAiBv0D,KACf,CACEoN,aAAcnR,EAAMg2D,mBAAqB,GACzC3kD,aAAc,QACdP,YACmC,MAAjC9Q,EAAM81D,wBAAkC,UAAY,WACtD1kD,UAAW,OACXH,WAAY,QACZC,UACqB,gBAAnB0K,EACI,SACA28C,GAER,CACEpnD,aAAcnR,EAAMg2D,mBAAqB,GACzC3kD,aAAc,QACdP,YACmC,MAAjC9Q,EAAM81D,wBAAkC,UAAY,WACtD1kD,UAAW,WACXH,WAAY,QACZC,UACqB,gBAAnB0K,EACI,SACA28C,GAER,CACEpnD,aAAcnR,EAAM+1D,sBAAwB,GAC5C1kD,aAAc,QACdP,YACsC,MAApC9Q,EAAM61D,2BACF,UACA,WACNzkD,UAAW,OACXH,WAAY,QACZC,UACqB,gBAAnB0K,EACI,SACA28C,IAIZ,MACF,IAAK,gBACHD,EAAiBv0D,KACf,CACEoN,aAAcnR,EAAMg0D,mBAAqB,GACzC3iD,aAAc,QACdP,YAAsC,MAAzB9Q,EAAM+zD,gBAA0B,UAAY,WACzD3iD,UAAW,QACXH,WAAY,QACZC,UACqB,gBAAnB0K,EACI,SACA28C,GAER,CACEpnD,aAAcnR,EAAMg0D,mBAAqB,GACzC3iD,aAAc,QACdP,YAAsC,MAAzB9Q,EAAM+zD,gBAA0B,UAAY,WACzD3iD,UAAW,SACXH,WAAY,QACZC,UACqB,gBAAnB0K,EACI,SACA28C,GAER,CACEpnD,aAAcnR,EAAMg0D,mBAAqB,GACzC3iD,aAAc,QACdP,YAAsC,MAAzB9Q,EAAM+zD,gBAA0B,UAAY,WACzD3iD,UAAW,WACXH,WAAY,QACZC,UACqB,gBAAnB0K,EACI,SACA28C,IAKhB,GACF,CCOMC,CAAqBL,EAAYL,EAASl8C,GAC1Cy8C,GAAcx9C,EAAOs9C,EAAYH,E,CAErC,EA6G8B,aACVxjD,EAAE,yBAAuB,UAEpCA,EAAE,0BANE,IAQP,SAAC,EAAApH,OAAM,IACLqwB,QAASl+B,EAETsK,QAAQ,YAAW,aACP2K,EAAE,kBAAgB,UAE7BA,EAAE,mBAJE,KAMR,YAED,SAAC4hD,GAAc,CACbnrD,OAAQ0sD,EACRtB,WAlEsB,WAC1BuB,GAAwB,GACxBjvD,GACF,EAgEM2tD,cA9D2B,WAC/BsB,GAAwB,EAC1B,KA8DI,UAAC,EAAAj6B,KAAI,IAACkT,SAAU,SAACl6B,GAAM,OAAAA,EAAE8+B,gBAAF,GAAkB,YACvC,SAAC,EAAA5X,UAAS,IACRC,QAAQ,sBACRjC,MAAOrnB,EAAE,kBACT5V,GAAG,iBAAe,UAEjBid,MAGH,SAAC,EAAAgiB,UAAS,IACRC,QAAQ,eACRjC,MAAOrnB,EAAE,oBACT28C,WACE,SAAC,EAAAj5B,QAAO,IAACE,YAAa5jB,EAAE,oBAAkB,WACxC,sBACE3I,KAAK,SACL4xB,QAAS,SAAC9mB,GAAM,OAAAA,EAAE8+B,gBAAF,EAChBvc,UAAU,8BAA6B,aAC3B1kB,EAAE,iBAAe,WAE7B,SAAC,EAAA6kC,SAAQ,CAAC+X,iBAAe,WAEnB,UAGXgH,OAEAZ,IAAYD,IAAgB1yB,IAC7B,SAAC,EAAA5G,MAAK,CACJC,UAAQ,EACRh0B,MAAOsK,EAAE,kDACT3K,QAAS,YAGb,SAAC,EAAAsvC,kBAAiB,IAChBsf,YAAY,EACZt5D,WAAY83D,EACZ57B,SA7H2C,SAACr7B,GAClDk3D,EAAuCl3D,EACzC,EA4HQo5C,eACE,4BACE,0BAAO5kC,EAAE,2BAAiC,KAC1C,SAAC,EAAAkkD,MAAK,IAACC,OAA+B,GAAvBj9C,EAAa5T,QAA0B,UACnD4T,EAAa5T,cAEZ,WAGR,SAAC4uD,GAAkB,CACjBC,UAAW/6C,EACXF,aAAcA,EACdyzC,YA1GW,SAAC1oD,GACpBwxD,GAAe,SAAC1rB,GACd,OAAA7wB,GAA6B5c,MAAbytC,EACZ,SAAIA,GAAW,GAAF,CAAE7wB,EAAajV,KAAI,GAChCiV,GAAgB,CAACA,EAAajV,GAFlC,IAIF2wD,GAAgB,GAVS,SAAC3wD,GAC1BoxD,GAAiBn8C,GAAgB,IAAIzO,QAAO,SAACqE,EAAG0qB,GAAU,OAAAA,GAASv1B,CAAT,IAC5D,CASEmyD,CAAmBnyD,EACrB,QAqGM,SAAC,EAAAo3B,UAAS,WACR,UAAC,EAAAsb,kBAAiB,IAChB0f,WAAYrkD,EAAE,4BACdikD,YAAY,EACZt5D,WAAYk4D,EACZh8B,SA/IuC,SAACr7B,GAChDs3D,EAAsCt3D,EACxC,GA6I4D,YAElD,SAAC,EAAA69B,UAAS,WACR,UAAC,EAAAwB,YAAW,YACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UACZ,iBAApB1jB,EACGpH,EAAE,sCACFA,EAAE,iCAAkC,CAClCxU,MAAOo4D,OAGdN,IAAWA,aAAO,EAAPA,EAAShwD,QAAS,IAC5B,SAAC,EAAA+2B,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,gCAKX,SAAC0gD,GAAiB,CAChBpD,eAAgBA,EAChBjtB,UAAWA,EACXwwB,uBA9MmB,WAC7BqC,GAAa,GACbK,GAAW,SAACxrB,GACV,OAAAA,EACI,SAAIA,GAAW,GAAF,C1B1Bd,CACL1gC,KAAM,SACNsF,kBAAcrS,EACduS,kBAAcvS,EACdq0D,uBAAmBr0D,EACnB20D,eAAgB,KAChBL,mBAAoB,W0BoBuB,GACrC,C1B3BD,CACLvnD,KAAM,SACNsF,kBAAcrS,EACduS,kBAAcvS,EACdq0D,uBAAmBr0D,EACnB20D,eAAgB,KAChBL,mBAAoB,S0BmBlB,GAIJ,EAwMYkC,0BAvMsB,WAChCoC,GAAa,GACbK,GAAW,SAACxrB,GACV,OAAAA,EACI,SAAIA,GAAW,GAAF,C1BxBd,CACL1gC,KAAM,gBACNkoD,gBAAiB,KACjBC,uBAAmBl1D,K0BqB8B,GAC3C,C1BzBD,CACL+M,KAAM,gBACNkoD,gBAAiB,KACjBC,uBAAmBl1D,G0BoBjB,GAIJ,EAiMYy2D,uBAhMmB,WAC7BmC,GAAa,GACbK,GAAW,SAACxrB,GACV,OAAAA,EACI,SAAIA,GAAW,GAAF,C1BzBd,CACL1gC,KAAM,gBACNkqD,0BAAsBj3D,EACtB+2D,2BAA4B,KAC5BG,uBAAmBl3D,EACnBg3D,wBAAyB,Q0BoBwB,GAC3C,C1B1BD,CACLjqD,KAAM,gBACNkqD,0BAAsBj3D,EACtB+2D,2BAA4B,KAC5BG,uBAAmBl3D,EACnBg3D,wBAAyB,M0BmBvB,GAIJ,EA0LYN,uBAzLmB,WAC7BkC,GAAa,GACbK,GAAW,SAACxrB,GACV,OAAAA,EACI,SAAIA,GAAW,GAAF,CAAEqf,GAA2B/vC,KAAU,GACpD,CAAC+vC,GAA2B/vC,GAFhC,GAIJ,EAmLY7X,SAjLW,SAACyC,GACtBsxD,GACE,SAACxrB,GAAc,OAAAA,GAAaA,EAAUt/B,QAAO,SAACqE,EAAG0qB,GAAU,OAAAA,IAAUv1B,CAAV,GAA5C,GAEnB,EA8KY0uD,iBA3OQ,SAACloD,GACnB,MAAc,IAAVA,GAA0BnO,MAAVmO,EAA4BkO,EACpCA,EAAWlO,QAAO,SAACqiB,GAAM,OAAAA,EAAEzwB,SAASoO,EAAX,GACvC,EAyOYmoD,yBAvOiB,SAACnoD,GAC5B,MAAc,IAAVA,GAA0BnO,MAAVmO,EAA4BiO,EACpCA,EAAmBjO,QAAO,SAACqiB,GAAM,OAAAA,EAAEzwB,SAASoO,EAAX,GAC/C,EAqOYwoD,UAAWqC,EACXj8C,UAAWA,EACX65C,aAAcqC,iBAO5B,E,mNCnWae,GAAkD,WAC7D,OACE,SAAC,EAAAh4B,YAAW,IAACC,UAAU,GAAI,WACzB,SAAC,EAAA5G,WAAU,IAACtwB,QAAS,EAAAuwB,kBAAA,IAAoB,WACvC,SAAC,EAAAO,eAAc,qBAAgB,UAAQ,WACrC,SAAC,KAAkB,YAK7B,E,mNCPao+B,GAAkD,WACrD,IAAAvkD,GAAM,IAAA0F,kBAAgB,EAC9B,OACE,SAAC,EAAA4mB,YAAW,IAACC,UAAU,GAAI,WACzB,UAAC,EAAA5G,WAAU,IAACtwB,QAAS,EAAAuwB,kBAAA,IAAoB,YACvC,SAAC,EAAAC,eAAc,CAACC,KAAM,EAAA0+B,qBACtB,SAAC,EAAAx+B,MAAK,IAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,yCAEL,SAAC,EAAAmmB,eAAc,UAAEnmB,EAAE,4CAI3B,E,mNCdaykD,GAAuD,SAAC,G,IACnEC,EAAe,kBACfC,EAAS,YACTC,EAAkB,qBAClBC,EAAgB,mBAChBC,EAAgB,mBAChBC,EAAY,eAEZ,OACE,SAAC,EAAAz4B,YAAW,IACVE,mBAAmB,EAAI,aACX,OACZuB,QAAS,CAAE1Y,QAAS,aACpBqP,UACE,4EAA0E,WAG5E,UAAC,EAAA6V,KAAI,IAACjW,WAAS,eACb,SAAC,EAAAmW,SAAQ,UAAEiqB,KACX,SAAC,EAAAjqB,SAAQ,IAACD,GAAI,GAAC,UAAGmqB,MAClB,SAAC,EAAAlqB,SAAQ,IAACD,GAAI,GAAC,UAAGoqB,MAClB,SAAC,EAAAnqB,SAAQ,IAACD,GAAI,GAAC,UAAGqqB,MAClB,SAAC,EAAApqB,SAAQ,IAAChW,GAAI,GAAC,UAAGqgC,MAClB,SAAC,EAAArqB,SAAQ,IAAChW,GAAI,GAAC,UAAGsgC,WAI1B,ECnCaC,GAAqC,WAAM,OACtD,SAAC,EAAArpB,SAAQ,WACP,SAAC,EAAAspB,SAAQ,WACP,SAAC,EAAAhpB,QAAO,CAACipB,OAAK,mBAAgB,cAHoB,E,2G5BOxD,SAAY/N,GACV,mCACA,sCACA,sCACA,8BACA,iCACA,iCACA,mCACA,oCACA,gCACA,gCACD,CAXD,CAAYA,KAAAA,GAAe,K6BRpB,IAAMgO,KAAuB,OACjChO,GAAgBiO,cAAe,CAC9BnmD,SAAU,GACVomD,MAAO,EACPC,UAAU,GAEZ,GAACnO,GAAgBoO,eAAgB,CAC/BtmD,SAAU,IACVomD,MAAO,EACPC,UAAU,GAEZ,GAACnO,GAAgBqO,eAAgB,CAC/BvmD,SAAU,IACVomD,MAAO,EACPC,UAAU,GAEZ,GAACnO,GAAgBsO,WAAY,CAAExmD,SAAU,IAASomD,MAAO,EAAGC,UAAU,GACtE,GAACnO,GAAgBuO,YAAa,CAC5BzmD,SAAU,KACVomD,MAAO,EACPC,UAAU,GAEZ,GAACnO,GAAgBwO,YAAa,CAC5B1mD,SAAU,KACVomD,MAAO,EACPC,UAAU,GAEZ,GAACnO,GAAgByO,aAAc,CAC7B3mD,SAAU,KACVomD,MAAO,EACPC,UAAU,GAEZ,GAACnO,GAAgB0O,aAAc,CAC7B5mD,SAAU,MACVomD,MAAO,EACPC,UAAU,GAEZ,GAACnO,GAAgB2O,WAAY,CAC3B7mD,SAAU,MACVomD,MAAO,EACPC,UAAU,GAEZ,GAACnO,GAAgB4O,WAAY,CAC3B9mD,SAAU,MACVomD,MAAO,EACPC,UAAU,G,IAIDU,GAAc,IACdC,GAAe,CAC1BC,OAAQ,IACRC,KAAM,IACNC,MAAO,GACPC,IAAK,I,mNCnDMC,GAA6C,WAChD,IAAAtmD,GAAM,IAAA0F,kBAAgB,EAC9B,OACE,UAAC,EAAAsxB,KAAI,IAAC9mC,UAAW,CAAEmlB,QAAS,UAAU,iBAAiB,UAAQ,YAC7D,SAAC,EAAAgiB,SAAQ,WACP,SAAC,EAAAR,SAAQ,CACPL,OAAQ,UAAGwvB,GAAcC,GAAaC,OAAM,MAC5CpvB,iBAAkB92B,EAAE,iDAGxB,SAAC,EAAAq3B,SAAQ,WACP,SAAC,EAAAR,SAAQ,CAACL,OAAQ,UAAGyvB,GAAaC,OAAS,EAAI,KAAI,MAAM9gC,MAAM,WAEjE,SAAC,EAAAiS,SAAQ,WACP,SAAC,EAAAR,SAAQ,CAACL,OAAQ,UAAGyvB,GAAaC,OAAS,EAAI,KAAI,MAAM9gC,MAAM,aAIvE,ECpBO,SAASmhC,KACd,IAAMC,GAAe,IAAAx7D,QAAuB,MACtC,GAAoB,IAAAP,UAAiB,GAApC26B,EAAK,KAAEqhC,EAAQ,KAEhBC,EAAe,WACnB,OAAAF,EAAal7D,SAAWm7D,EAASD,EAAal7D,QAAQq7D,YAAtD,EAUF,OARA,IAAA7K,kBAAgB,WACd4K,GACF,GAAG,KAEH,IAAAn7D,YAAU,WAER,OADA4K,OAAO2hD,iBAAiB,SAAU4O,GAC3B,WAAM,OAAAvwD,OAAO4hD,oBAAoB,SAAU2O,EAArC,CACf,GAAG,IACI,CAACF,EAAcphC,EACxB,C,2OCbO,SAASwhC,GAAYpnD,GAC1B,OAAO,QAASA,EAAO,CAAEqnD,MAAO,QAASzrC,UAC3C,CAEO,IAAM0rC,GAAiB,SAACC,GAC7B,OAAO5B,GAAqB4B,GAAczB,QAC5C,EAEa0B,GAAmB,SAC9BxsC,EACA,G,IAAE8qC,QAAF,MAAsC,CAAEA,UAAU,GAAO,GAA/C,SAEJniB,GAAO,EAAA8jB,GAAA,GAAazsC,EAAY,KACtC,OAAO,KAAAuxB,kBAAiB5I,EAAM,MAAOmiB,EAAW,kBAAoB,QACtE,EAEO,SAAS4B,GACdC,EACAjoD,GAEA,IAAMkoD,EAAgB,MAAID,GAAU,GACpCC,EAAct4D,OACd,IAAMu4D,EACJpmC,SAASmmC,EAAcA,EAAc9zD,OAAS,KAAO8Y,KAAK42B,MAC5D,OAAO,IAAI3+B,MACTqU,KAAKsiB,IAAImqB,GAAqBjmD,GAAUmmD,MAAO+B,EAAc9zD,SAE5Dg8C,KAAK+X,GACL9vD,KAAI,SAAC6d,EAAWoS,GACf,SAAA8/B,GAAA,GAAI,IAAIl7C,KAAKgJ,GAAI,CACfshC,QAASyO,GAAqBjmD,GAAUD,SAAWuoB,IAClD+/B,SAFH,GAIN,C,uNCiBaC,GAET,SAAC,G,IACHnoD,EAAO,UACPH,EAAQ,WACRuoD,EAAS,YACTC,EAAM,SACNC,EAAM,SACNC,EAAU,aACV,IAAAC,YAAAA,OAAW,IAAG,WAACzyC,GAAM,gBAAGA,EAAH,EAAM,EAC3Ble,EAAS,YACT4wD,EAAU,aAEF9nD,GAAM,IAAA0F,kBAAgB,EACxB,EAAwB6gD,KAAvBC,EAAY,KAAEphC,EAAK,KAEpB2iC,EAAc3iC,GAASA,EAAQ,IAAM,EAAI,EAEzC,EAqFR,SACE/lB,EACAH,EACA8oD,EACAC,EACAL,GAMA,IAAMM,EAAa,CACjBN,EACI,CACE93D,KAAMm4D,EACNE,OAAQ,CAAE7Y,KAAM,GAAA8Y,sBAAA,MAA6B/wD,KAAM,mBAErD/M,EACJ,CAAEwF,KAAMk4D,EAAWG,OAAQ,CAAE7Y,KAAM,GAAA+Y,qBAAA,SACnC5vD,QAAO,SAAC2c,GAAM,QAAEA,CAAF,IAEVkzC,EAAY,GAAAD,qBAAA,MACZE,EAAiB,GAAAH,sBAAA,MACjBI,EAA8B,GAC9BC,EAA+B,GAC/BC,EAAoC,GAE1C7zC,OAAOuS,QAAQ/nB,GAAS9H,KAAI,SAAC,G,IAACijB,EAAS,KAAEhb,EAAK,KAC5CipD,EAAKl5D,KAAK,CAAEO,KAAMk4D,EAAWW,EAAG1nC,SAASzG,EAAW,IAAKouC,EAAGppD,GAC9D,IACAgpD,EAAUj5D,KAAK,CAAE+4D,UAAS,EAAEC,eAAc,EAAEE,KAAI,EAAEC,UAAS,IAE3D,IAAMG,EAAa3B,GAAkBryC,OAAOo/B,KAAK50C,GAAUH,GAY3D,OAVI0oD,GACFiB,EAAWn4C,SAAQ,SAAC8J,GAClB,OAAAkuC,EAAUn5D,KAAK,CACbO,KAAMm4D,EACNU,EAAGnuC,EACHouC,EAAGhB,GAHL,IAQG,CACLM,WAAU,EACVM,UAAS,EACTK,WAAU,EAEd,CAtIgDC,CAC5CzpD,EACAH,EACAuoD,EACAznD,EAAE,iBACF4nD,GALMY,EAAS,YAAEN,EAAU,aAAEW,EAAU,aAQnCE,EAAal0C,OAAOo/B,KAAK50C,GAAS/L,OAAS,EAC3CgyD,EAAWwB,GAAe5nD,GAEhC,QAAQ,GACN,KAAKhI,EACH,OAAO,SAACovD,GAAmB,IAC7B,KAAMyC,EACJ,OAAOjB,EACT,QAIE,OACE,mBAAK5f,IAAKse,GAAY,WACpB,UAACwC,GAAA,EAAK,IACJC,UAAWxB,EACXyB,oBACE,SAACC,GAAA,EAAqB,CAACn7D,OARsB,SAAC,G,IAAEo7D,EAAK,QAE3D,gBAAGA,EAAMt5D,KAAI,aAAK+3D,EAAYuB,EAAMR,GAApC,EAM6CS,wBAAsB,IAE/DC,eAAe,cACfC,iBACE,SAACC,GAAA,GAAW,CACVlU,YAAa,aACbzlD,KAAMq4D,EACNH,YAAaA,IAGjBvxB,OAAQwvB,GACRj4B,QAASk4B,GACTwD,WAAYC,GAAA,kBACZtkC,MAAOA,EACPukC,iBAAiB,GAAI,YAErB,SAACC,GAAAC,EAAS,CACRxiC,MAAO,MAAQqgC,GAAU1nD,EAAE,4BAA8B,IACzD6oD,WAAYA,EACZiB,WAAY,SAAC10C,GACX,OAAA4xC,GAAiB5xC,EAAG,CAClBkwC,SAAQ,GADV,KAKJ,SAACsE,GAAAC,EAAS,CACRxiC,MAAO,cAAgBsgC,GAAUF,GACjCsC,eAAa,EACbD,WAAYjC,KAEd,SAACmC,GAAA,EAAU,UACRxB,EAAUjxD,KAAI,SAAC/L,EAAOg8B,GAAU,OAC/B,SAACyiC,GAAA,EAAS,CAERp6D,KAAMrE,EAAMi9D,KACZn6B,MAAO,CACLz+B,KAAM,C,IAHH,qBAAc23B,GAFU,OAanC,SAAC0iC,GAAA,EAAc,CAEbr6D,KAAM24D,EAAU,GAAGE,UACnBp6B,MAAO,CACLz+B,KAAM,CACJs6D,OAAQ3B,EAAU,GAAGD,kBAJpB,0BAanB,E,+NClIM6B,GAAS,CAAC,GAAAC,qBAAA,MAA4B,GAAAhC,qBAAA,OAyB/BiC,GAET,SAAC,G,IACH3oD,EAAU,aACVb,EAAK,QACL5B,EAAQ,WACRhI,EAAS,YACT4wD,EAAU,aACVyC,EAAiB,oBAEPvqD,GAAM,IAAA0F,kBAAgB,EACxB,EAAwB6gD,KAAvBC,EAAY,KAAEphC,EAAK,KAEpB,EAqEH,SACLzjB,EACAb,EACA5B,EACAqrD,GAMA,IAAMrC,EAAgC,GAChCM,EAA8B,GAE9BgC,EAAiB31C,OAAOuS,QAAQzlB,GAAY7S,MAAK,SAAC0I,EAAGm7B,GACzD,IAAM83B,EAAS51C,OAAO5O,OAAOzO,EAAE,IAAIylB,QAAO,SAACytC,EAAKC,GAAQ,OAAAD,EAAMC,CAAN,GAAW,GAEnE,OADe91C,OAAO5O,OAAO0sB,EAAE,IAAI1V,QAAO,SAACytC,EAAKC,GAAQ,OAAAD,EAAMC,CAAN,GAAW,GACnDF,CAClB,IAEsB,UAAtBF,EACIC,EAAehb,MAAM,EAAG,IAAIj4C,KAAI,SAAC,EAAsBiwB,G,IAArBxf,EAAS,KAAE4iD,EAAO,KAC9C96D,EAAOgR,EAAQ,UAAGA,EAAK,cAAMkH,GAAcA,EAC3C8zB,EAAQsuB,GAAO5iC,GACrB0gC,EAAW34D,KAAK,CACdO,KAAI,IAEN,IAAM24D,EAAkC,GAExC5zC,OAAOuS,QAAQwjC,GAASrzD,KAAI,SAAC,G,IAACijB,EAAS,KAAEhvB,EAAK,KAC5Ci9D,EAAKl5D,KAAK,CAAEO,KAAI,EAAE64D,EAAG1nC,SAASzG,EAAW,IAAKouC,EAAGp9D,GACnD,IACAg9D,EAAUj5D,KAAK,CAAEusC,MAAK,EAAE2sB,KAAI,GAC9B,IACE+B,EACChb,MAAM,EAAG,IACT1gD,MAAK,SAAC0I,EAAGm7B,GACR,IAAMk4B,EAAiBh2C,OAAO5O,OAAOzO,EAAE,IACjCszD,EAAiBj2C,OAAO5O,OAAO0sB,EAAE,IACjCo4B,EAAYF,EAAe5tC,QAAO,SAACytC,EAAKC,GAAQ,OAAAD,EAAMC,CAAN,GAAW,GAEjE,OADkBG,EAAe7tC,QAAO,SAACytC,EAAKC,GAAQ,OAAAD,EAAMC,CAAN,GAAW,GAC9CI,CACrB,IACCj8D,MAAK,SAAC0I,EAAGm7B,GAAM,OAAAA,EAAE,GAAG,GAAKn7B,EAAE,GAAG,EAAf,IACfg4C,MAAM,EAAG,IACTj4C,KAAI,SAAC,EAAsBiwB,G,IAArBxf,EAAS,KAAE4iD,EAAO,KACjB96D,EAAOgR,EAAQ,UAAGA,EAAK,cAAMkH,GAAcA,EAC3C8zB,EAAQsuB,GAAO5iC,GACrB0gC,EAAW34D,KAAK,CACdO,KAAI,IAEN,IAAM24D,EAAkC,GAExC5zC,OAAOuS,QAAQwjC,GAASrzD,KAAI,SAAC,G,IAACijB,EAAS,KAAEhvB,EAAK,KAC5Ci9D,EAAKl5D,KAAK,CAAEO,KAAI,EAAE64D,EAAG1nC,SAASzG,EAAW,IAAKouC,EAAGp9D,GACnD,IACAg9D,EAAUj5D,KAAK,CAAEusC,MAAK,EAAE2sB,KAAI,GAC9B,IAEJ,IAGMI,EAAa3B,GAHG7iD,MAAMC,KAC1B,IAAIC,IAAIsQ,OAAO5O,OAAOtE,GAAY2X,SAAQ,SAACO,GAAM,OAAAhF,OAAOo/B,KAAKp6B,EAAZ,MAEC3a,GAEpD,MAAO,CACLgpD,WAAU,EACVM,UAAS,EACTK,WAAU,EAEd,CAzIkD,CAC5ClnD,EACAb,EACA5B,EACAqrD,GAJM/B,EAAS,YAAEN,EAAU,aAAEW,EAAU,aAOnCE,EAAal0C,OAAOo/B,KAAKtyC,GAAYrO,OAAS,EAE9CgyD,EAAWwB,GAAe5nD,GAEhC,OACE,mBAAKgpC,IAAKse,EAAcl4B,MAAO,CAAE08B,UAAW,QAASx0B,OAAQ,QAASpR,MAAO,UAAS,UACnF,WACC,QAAQ,GACN,KAAKluB,EACH,OAAO,SAACovD,GAAmB,IAC7B,KAAMyC,EACJ,OAAOjB,EACT,QAKE,OACE,UAACkB,GAAA,EAAK,IACJC,UAAWjpD,EAAE,kCACbkpD,oBACE,SAACC,GAAA,EAAqB,CACpBn7D,OAT6C,SAAC,G,IAAEo7D,EAAK,QAE3D,gBAAGA,EAAMt5D,KAAI,aAAK82D,GAAYwC,EAAMR,GAApC,EAQMS,wBAAsB,IAG1BC,eAAe,cACfC,iBAAiB,SAACC,GAAA,GAAW,CAAC35D,KAAMq4D,IACpC1xB,OAAQwvB,GACRj4B,QAASk4B,GACTwD,WAAYC,GAAA,gBACZtkC,MAAOA,EACPukC,iBAAiB,GAAI,YAErB,SAACC,GAAAC,EAAS,CACRxiC,MAAO,KAAOrnB,EAAE,2BAChB6oD,WAAYA,EACZiB,WAAY,SAAC10C,GACX,OAAA4xC,GAAiB5xC,EAAG,CAClBkwC,SAAQ,GADV,KAKJ,SAACsE,GAAAC,EAAS,CACRxiC,MAAO,aAAernB,EAAE,4BACxB+pD,eAAa,EACbD,WAAYlD,MAEd,SAACoD,GAAA,EAAU,UACRxB,EAAUjxD,KAAI,SAAC/L,EAAOg8B,GAAU,OAC/B,SAACyjC,GAAA,EAAS,CAA6Bp7D,KAAMrE,EAAMi9D,MAAnC,qBAAcjhC,GADC,UAQ5C,CAnDA,KAsDP,E,mNC1HW0jC,GAAyD,SAAC,G,IACrEx1D,EAAK,QACLF,EAAW,cAEHwK,GAAM,IAAA0F,kBAAgB,EAC9B,OACE,SAAC,EAAAge,QAAO,iBACMhuB,EACZiuB,eAAe,yBAAMjuB,IACrBkuB,aAAa,yBAAMpuB,KAAkB,WAErC,SAAC,EAAAquB,2BAA0B,cACb7jB,EAAE,+CAAgD,CAC5DtK,MAAK,QAKf,E,sZC0Bay1D,GAA2D,SAAC,G,IACvEC,EAAkB,qBAClBC,EAAkB,qBAClBvrD,EAAa,gBACbZ,EAAQ,WACRhI,EAAS,YACT4wD,EAAU,aAEF9nD,GAAM,IAAA0F,kBAAgB,EACxB,EAAwB6gD,KAAvBC,EAAY,KAAEphC,EAAK,KAEpB2iC,EAAc3iC,GAASA,EAAQ,IAAM,EAAI,EAEzC,EAmFD,SACLkmC,EACAC,EACArsD,EACAssD,EACAC,GAMA,IAAMvD,EAAgC,GAChCM,EAA8B,GAE9BkD,EAAeC,GAAcL,EAAeE,GAClD,GAAIE,EAAap4D,OAAS,EAAG,CAC3B,IAAMwoC,EAAQ,GAAAusB,qBAAA,MACdG,EAAUj5D,KAAK,CAAEusC,MAAK,EAAE8vB,KAAMF,IAC9BxD,EAAW34D,KAAK,CACdO,KAAM07D,EACNrD,OAAQ,CACN7Y,KAAMxT,I,CAKZ,IAAM+vB,EAAeF,GAAcJ,EAAeE,GAgBlD,OAfII,EAAav4D,OAAS,IAClBwoC,EAAQ,GAAAgwB,sBAAA,MACdtD,EAAUj5D,KAAK,CAAEusC,MAAK,EAAE8vB,KAAMC,IAC9B3D,EAAW34D,KAAK,CACdO,KAAM27D,EACNtD,OAAQ,CACN7Y,KAAMxT,MASL,CACLosB,WAAU,EACVM,UAAS,EACTK,WALiB3B,GAHG7iD,MAAMC,KAC1B,IAAIC,IAAI,SAAIsQ,OAAOo/B,KAAKqX,IAAgB,GAAGz2C,OAAOo/B,KAAKsX,IAAc,KAEnBrsD,GAOtD,CAlIgD6sD,CAC5CX,EACAC,EACAnsD,EACAY,EACIE,EAAE,yBAA0B,CAC1Bc,MAAOhB,IAETE,EAAE,qCACNF,EACIE,EAAE,yBAA0B,CAC1Bc,MAAOhB,IAETE,EAAE,sCAbAwoD,EAAS,YAAEN,EAAU,aAAEW,EAAU,aAgBnCE,EACJl0C,OAAOo/B,KAAKmX,GAAoB93D,OAAS,GACzCuhB,OAAOo/B,KAAKoX,GAAoB/3D,OAAS,EAErCgyD,EAAWwB,GAAe5nD,GAEhC,QAAQ,GACN,KAAKhI,EACH,OAAO,SAACovD,GAAmB,IAC7B,KAAMyC,EACJ,OAAOjB,EACT,QAIE,OACE,mBAAK5f,IAAKse,GAAY,WACpB,UAACwC,GAAA,EAAK,IACJC,UAAWjpD,EAAE,uBACbkpD,oBACE,SAACC,GAAA,EAAqB,CAACn7D,OAN7B,SAAC,G,IAAEo7D,EAAK,QAAO,gBAAGA,EAAMt5D,KAAI,aAAK82D,GAAYwC,EAAMR,GAApC,EAM8BS,wBAAsB,IAE/DM,iBAAiB,EACjBL,eAAe,cACfC,iBACE,SAACC,GAAA,GAAW,CAAC35D,KAAMq4D,EAAYH,YAAaA,IAE9CvxB,OAAQwvB,GACRj4B,QAASk4B,GACTwD,WAAYC,GAAA,kBACZtkC,MAAOA,GAAK,YAEZ,SAACwkC,GAAAC,EAAS,CACRxiC,MAAO,KAAOrnB,EAAE,2BAChB6oD,WAAYA,EACZmD,UAAW7G,GAAqBjmD,GAAUmmD,MAC1CyE,WAAY,SAAC10C,GACX,OAAA4xC,GAAiB5xC,EAAG,CAClBkwC,SAAQ,GADV,KAKJ,SAACsE,GAAAC,EAAS,CACRxiC,MAAO,aAAernB,EAAE,4BACxB+pD,eAAa,EACbD,WAAYlD,MAEd,SAACoD,GAAA,EAAU,UACRxB,EAAUjxD,KAAI,SAAC/L,EAAOg8B,GAAU,OAC/B,SAACyjC,GAAA,EAAS,CAERp7D,KAAMrE,EAAMogE,KACZt9B,MAAO,CACLz+B,KAAM,CACJs6D,OAAQ3+D,EAAMswC,SAJb,qBAActU,GAFU,aAiB/C,EAmDO,SAASmkC,GACdtsD,EACAvP,GAEA,IAAM87D,EAA8B,GAKpC,OAHA/2C,OAAOuS,QAAQ/nB,GAAS9H,KAAI,SAAC,G,IAACijB,EAAS,KAAEhb,EAAK,KAC5CosD,EAAKr8D,KAAK,CAAEO,KAAI,EAAE64D,EAAG1nC,SAASzG,EAAW,IAAKouC,EAAGppD,GACnD,IACOosD,CACT,C,0NCvMaK,GAA6C,WAChD,IAAAjsD,GAAM,IAAA0F,gBAAe,CAAC,YAAW,EACzC,OACE,UAAC,EAAAigB,WAAU,IAACtwB,QAAS,EAAAuwB,kBAAA,IAAoB,YACvC,SAAC,EAAAC,eAAc,CACbC,KAAM,EAAAge,wBACNhI,MAAM,0CAER,SAAC,EAAA9V,MAAK,IAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,8BAIX,E,mNCZaksD,GAAyD,WAC5D,IAAAlsD,GAAM,IAAA0F,kBAAgB,EAC9B,OACE,UAAC,EAAAigB,WAAU,IAACtwB,QAAS,EAAAuwB,kBAAA,IAAoB,YACvC,SAAC,EAAAC,eAAc,CAACC,KAAM,EAAAipB,cACtB,SAAC,EAAA/oB,MAAK,IAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,iDAEL,SAAC,EAAAmmB,eAAc,UACZnmB,EAAE,iDAIX,E,mNCTamsD,GAAiE,SAAC,G,IAC7ExuD,EAAa,gBAELqC,GAAM,IAAA0F,kBAAgB,EAC9B,OACE,UAAC,EAAAigB,WAAU,IAACtwB,QAAS,EAAAuwB,kBAAA,IAAoB,YACvC,SAAC,EAAAC,eAAc,CAACC,KAAM,EAAAsmC,cACtB,SAAC,EAAApmC,MAAK,IAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,2CAEL,SAAC,EAAAmmB,eAAc,UAAEnmB,EAAE,wCAClBrC,IACC,SAAC,EAAA/E,OAAM,IACL41B,OAAO,gBACPn5B,QAAQ,UACR4zB,QAAStrB,GAAa,UAErBqC,EAAE,oDAKb,E,mNC1BaqsD,GAAmD,WACtD,IAAArsD,GAAM,IAAA0F,kBAAgB,EAC9B,OACE,UAAC,EAAAigB,WAAU,IAACtwB,QAAS,EAAAuwB,kBAAA,IAAoB,YACvC,SAAC,EAAAC,eAAc,CAACC,KAAM,EAAA0tB,cACtB,SAAC,EAAAxtB,MAAK,IAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,2CAEL,SAAC,EAAAmmB,eAAc,WACb,SAAC,EAAAtgB,MAAK,CACJC,GAAI,UACJC,QAAS,6BACTC,WAAY,CAAEmvC,MAAM,8BAK9B,E,mNCXamX,GAET,SAAC,G,IAAEC,EAAc,iBAAEC,EAAsB,yBACnCxsD,GAAM,IAAA0F,gBAAe,WAAU,EAEjC,GACJ,IAAAjb,WAAkB,GADbgiE,EAAqB,KAAEC,EAAwB,KAOhDC,EAA8D,CAClEC,MAAO5sD,EAAE,oBACT6sD,MAAO7sD,EAAE,qBAgBX,OACE,SAAC,EAAAgtC,YAAW,WACV,SAAC,EAAArmB,OAAM,IACLtxB,QAAS,EAAA2xB,cAAA,OACTvwB,OAAQg2D,EACR5lC,SA3BiB,SAAC4lC,GACtBC,EAAyBD,EAC3B,EA0BM3lC,SAnB0C,SAAChqB,EAAGkL,GAClDwkD,EAAuBxkD,GACvB0kD,GAAyB,EAC3B,EAiBMxlC,WAAYqlC,EACZxjC,SAAS,OACT9B,gBAAiBjnB,EAAE,oBAAmB,aAC1BA,EAAE,yBAAuB,UAjBlC6U,OAAOuS,QAAQulC,GAAuBp1D,KAAI,SAAC,G,IAAC/L,EAAK,KAAE67B,EAAK,KAAM,OACnE,SAAC,EAAAC,aAAY,IAAa97B,MAAOA,GAAK,UACnC67B,IADgB77B,EADgD,QAuBzE,E,mNCnDashE,KAAqB,OAC/B3V,GAAgBiO,cAAe,iBAChC,GAACjO,GAAgBoO,eAAgB,kBACjC,GAACpO,GAAgBqO,eAAgB,kBACjC,GAACrO,GAAgBsO,WAAY,cAC7B,GAACtO,GAAgBuO,YAAa,eAC9B,GAACvO,GAAgBwO,YAAa,eAC9B,GAACxO,GAAgByO,aAAc,gBAC/B,GAACzO,GAAgB0O,aAAc,gBAC/B,GAAC1O,GAAgB2O,WAAY,cAC7B,GAAC3O,GAAgB4O,WAAY,c,IAWlBgH,GAAyD,SAAC,G,IACrE7tD,EAAQ,WACR8tD,EAAO,UACPrgC,EAAS,YACTsgC,EAAc,iBACdC,EAAgB,mBAEV,GAA0C,IAAAziE,WAAkB,GAA3D0iE,EAAgB,KAAEC,EAAmB,KAwBtCC,EAAS,yBAAkBjhD,KAAK42B,OACtC,OACE,UAAC,EAAAgK,YAAW,YACV,qBAAOQ,QAAM,EAACpjD,GAAIijE,GAAM,UACrB1gC,MAEH,SAAC,EAAAhG,OAAM,IACLtxB,QAAS,EAAA2xB,cAAA,OAAoB,kBACZqmC,EACjBxmC,SA/Be,SAACsmC,GACpBC,EAAoBD,EACtB,EA8BMrmC,SA5BwC,SAAChqB,EAAGiqB,GAChD,IAAMumC,EAAUz4C,OAAOuS,QAAQ0lC,IAAoB7+C,MAEjD,SAAC,GAAe,OAAb,KAAO,OAAgB8Y,CAAV,IAEdumC,GACFJ,EAAiBjsC,SAASqsC,EAAQ,GAAI,KAExCF,GAAoB,EACtB,EAoBMlmC,WAAY4lC,GAAmB5tD,GAC/BzI,OAAQ02D,EACR/0C,WAAY60C,GAAc,UApBZ,SAACD,GAAoB,QACvC,SAAC,EAAAxQ,YAAW,IAACn1B,MAAM,wBAAsB,UACtCxS,OAAO5O,OAAO6mD,IAAoBv1D,KAAI,SAAC8vB,EAAOomB,GAAQ,OACrD,SAAC,EAAAnmB,aAAY,CAA2B97B,MAAO67B,GAA5B,UAAG2lC,EAAO,YAAIvf,GADoB,MADV,UAAGuf,EAAO,WADlB,CAsBlCO,CAAYP,QAIrB,E,mNCrEMriC,GAAS,CACbtV,QAAS,QACTmlB,GAAI,QACJgzB,GAAI,QACJ/oC,GAAI,QACJ4wB,GAAI,QACJ,MAAO,SAWIoY,GAA2D,SAAC,G,IACvE3tD,EAAa,gBACb,IAAA4tD,UAAAA,OAAS,IAAG,KAAE,EACdT,EAAc,iBACdtgC,EAAS,YACTghC,EAAkB,qBAEV3tD,GAAM,IAAA0F,kBAAgB,EACxB,GAA4C,IAAAjb,WAAkB,GAA7DmjE,EAAiB,KAAEC,EAAoB,KACxC,GAA4B,IAAApjE,UAASiuB,KAAKg2B,UAAzCof,EAAS,KAAEC,EAAY,MAE9B,IAAAxiE,YAAU,WAAM,OAAAwiE,EAAar1C,KAAKg2B,SAAlB,GAA6B,CAACgf,IAE9C,IAAMM,EAAiBhuD,EAAE,sBAmBnBiuD,EAAe,SAACP,GAAwB,QAC5C,SAAC,EAAApmC,aAAY,CAAwB97B,MAAOwiE,GAAzB,mBACnB,SAAC,EAAAxR,YAAW,IAACn1B,MAAM,mBAAiB,UACjCqmC,EAAUn2D,KAAI,SAACuJ,EAAO0mB,GAAU,OAC/B,SAAC,EAAAF,aAAY,CAEX97B,MAAOsV,EACPpL,MAAOoL,GAFF,uBAAgB0mB,EAAQ,GAFA,MADM,sBAFG,EAaxCpP,EAAa60C,GAAuC,IAArBS,EAAUp6D,OACzC+5D,EAAS,0BAAmBjhD,KAAK42B,OAEvC,OACE,UAAC,EAAAgK,YAAW,IAACriB,OAAQA,IAAM,YACzB,qBAAO6iB,QAAM,EAACpjD,GAAIijE,GAAM,UACrB1gC,MAEH,SAAC,EAAAhG,OAAM,IAELtxB,QAAS,EAAA2xB,cAAA,OACTH,SAzCgB,SAAC+mC,GACrBC,EAAqBD,EACvB,EAwCM9mC,SAtCyC,SAAChqB,EAAGiqB,GAE7C4mC,EADJ5mC,IAAcinC,EACSjnC,OACAz8B,GACvBujE,GAAqB,EACvB,EAkCM3mC,WAAYpnB,GAAiBkuD,EAC7Bv3D,OAAQm3D,EACR3mC,iBACE,iCACE,SAAC,EAAAusB,WAAU,IAAG,IAAEwa,KACf,kBAEYX,EACjBxd,SAxCgB,SAAC/yC,EAAYoxD,GACjC,IAAMC,EACJT,EAAUj1D,QAAO,SAACqI,GAAU,OAA6B,GAA7BA,EAAMstD,QAAQF,EAAd,KAAmC,GACjE,OAAOD,EAAaE,EACtB,EAqCMnR,WAAS,EACTqR,iBAAe,EACfj2C,WAAYA,EACZ2Q,SAAS,OACTrE,UAAW,iCAA+B,UAEzCupC,EAAaP,KAnBTI,MAuBb,E,mNChGaQ,GAA6D,SAAC,G,IACzE3b,EAAY,eACZ,IAAAX,YAAAA,OAAW,IAAG,MAAI5lC,KAAM,EACxBugB,EAAS,YACTiiB,EAAS,YAED5uC,GAAM,IAAA0F,gBAAe,CAAC,YAAW,EAEzC,OACE,iCACE,SAAC,EAAAsnC,YAAW,WACV,SAAC2G,GAAA,EAAa,CACZhnB,UAAWA,EACX1D,QAAS2lB,EACT+D,aAAcA,OAGlB,SAAC,EAAA3F,YAAW,IACV4G,UAAW,CAAEv+B,QAAS,cACtBiZ,MAAO,CAAEwN,MAAO,iCAAgC,WAEhD,mBAAKpX,UAAU,qBAAmB,UAC/BiuB,EACC3yC,EAAE,uBAEF,gCACGA,EAAE,yBACH,mBACA,SAACkjC,GAAA,EAAU,CAACC,KAAM6O,EAAa5O,OAAO,kBACrCpjC,EAAE,4CAOjB,E,mNCxBauuD,GAET,SAAC,G,IACH74D,EAAK,QACLoK,EAAa,gBACb4tD,EAAS,YACTxuD,EAAQ,WACRkZ,EAAU,aACVu6B,EAAY,eACZX,EAAW,cACXwc,EAAiB,oBACjB5f,EAAS,YACT+e,EAAkB,qBAEV3tD,GAAM,IAAA0F,kBAAgB,EAC9B,OACE,iCACE,SAAC,EAAAuvC,WAAU,WACT,SAAC,EAAAvZ,UAAS,IAAC7iC,UAAU,MAAI,UAAEnD,QAE7B,SAAC,EAAAg5B,QAAO,KACR,SAAC,EAAA0kB,QAAO,WACN,UAAC,EAAAC,eAAc,YACb,SAACoa,GAAa,CACZ9gC,UAAW3sB,EAAE,kCACbF,cAAeA,EACf6tD,mBAAoBA,EACpBD,UAAWA,EACXT,eAAgB70C,KAElB,SAAC20C,GAAY,CACXpgC,UAAW3sB,EAAE,iCACbd,SAAUA,EACVguD,iBAAkBsB,EAClBvB,eAAgB70C,EAChB40C,QAAS,+BAEX,SAACsB,GAAc,CACb3b,aAAcA,EACdX,YAAaA,EACbpD,UAAWA,EACXjiB,UAAW3sB,EAAE,kCAInB,SAAC,EAAA0uB,QAAO,MAGd,E,mNCxBa+/B,GAA+D,SAAC,G,IAC3EzzD,EAAM,SACNowD,EAAkB,qBAClBC,EAAkB,qBAClBrtC,EAAmB,sBACnBle,EAAa,gBACbZ,EAAQ,WACRyC,EAAU,aACV+sD,EAAkB,qBAClBC,EAAgB,mBAChBz3D,EAAS,YACTy7C,EAAY,eACZic,EAAa,gBACb5c,EAAW,cACXr0C,EAAa,gBACbixC,EAAS,YACTigB,EAAe,kBACf3B,EAAgB,mBAChB3C,EAAiB,oBACjBuE,EAAmB,sBAEX9uD,GAAM,IAAA0F,kBAAgB,EACxBqpD,EAA6B,IAAlB/zD,EAAO1H,OAClB07D,OACc1kE,IAAlBwV,QAC4CxV,IAA5C0Q,EAAOiT,MAAK,SAACjO,GAAM,OAAAA,IAAMF,CAAN,IACfmvD,EAAkBD,GACtB,SAAC9C,GAAmC,KAEpC,SAACD,GAAuB,IAE1B,OACE,UAAC,EAAAzwB,KAAI,kBAAc,kBAAgB,YACjC,SAAC+yB,GAAoB,CACnB74D,MAAOsK,EAAE,yBACTd,SAAUA,EACVsvD,kBAAmBtB,EACnB90C,WACEs2C,GAAsBE,GAAiBG,GAAY73D,EAErDy7C,aAAcA,EACd7yC,cAAeA,EACf6tD,mBAAoBkB,EACpBjgB,UAAWA,EACX8e,UAAW1yD,EACXg3C,YAAaA,IAEd,WACC,QAAQ,GACN,KAAK2c,EACH,OAAO,SAAC3J,GAAe,IAEzB,KAAK0J,EACH,OACE,SAAC,EAAA/yB,SAAQ,WACP,SAACswB,GAAuB,MAI9B,KAAK2C,IAAkBG,EACrB,OACE,SAAC,EAAApzB,SAAQ,WACP,SAACwwB,GAAkB,MAIzB,KAAKyC,GAAiBG,EACpB,OACE,SAAC,EAAApzB,SAAQ,WACP,SAACwwB,GAAkB,CAACxuD,cAAeA,MAIzC,UAAuBrT,IAAlBwV,EACH,OACE,iCACE,SAACovD,GAAe,KAChB,SAAC,EAAAvzB,SAAQ,WACP,SAACwvB,GAAe,CACdC,mBAAoBA,EACpBC,mBAAoBA,EACpBvrD,cAAeA,EACfZ,SAAUA,EACVhI,UAAWA,EACX4wD,WAAYmH,OAGhB,SAAC,EAAAvgC,QAAO,KACR,SAACygC,GAAmB,KACpB,SAAC,EAAAxzB,SAAQ,WACP,SAAC6rB,GAA4B,CAC3BC,UAAWznD,EAAE,uCACb2nD,OAAQ3nD,EAAE,8CACVX,QAAS2e,EACT9e,SAAUA,EACVhI,UAAWA,EACX4wD,WAAYmH,OAGhB,SAAC,EAAAvgC,QAAO,KACR,SAAC0gC,GAAkB,KACnB,UAAC,EAAAzzB,SAAQ,YACP,SAAC,EAAAyX,QAAO,WACN,SAAC,EAAAC,eAAc,WACb,SAACiZ,GAAiB,CAChBE,uBAAwBsC,EACxBvC,eAAgBhC,SAItB,SAACD,GAAwB,CACvB3oD,WAAYA,EACZb,MAAOhB,EACPZ,SAAUA,EACVhI,UAAWA,EACX4wD,WAAYmH,EACZ1E,kBAAmBA,UAM7B,QACE,OACE,iCACE,SAAC2E,GAAe,KAChB,SAAC,EAAAvzB,SAAQ,WACP,SAACwvB,GAAe,CACdC,mBAAoBA,EACpBC,mBAAoBA,EACpBvrD,cAAeA,EACfZ,SAAUA,EACVhI,UAAWA,EACX4wD,WAAYmH,OAGhB,SAAC,EAAAvgC,QAAO,KACR,SAACygC,GAAmB,KACpB,SAAC,EAAAxzB,SAAQ,WACP,SAAC6rB,GAA4B,CAC3BC,UAAWznD,EAAE,uCACb2nD,OAAQ3nD,EAAE,8CACVX,QAAS2e,EACT9e,SAAUA,EACVhI,UAAWA,EACX4wD,WAAYmH,OAGhB,SAAC,EAAAvgC,QAAO,KACR,SAAC0gC,GAAkB,KACnB,SAAC,EAAAzzB,SAAQ,WACP,SAAC0wB,GAAyB,SAKrC,CA7GA,MAgHP,EAEM6C,GAAqC,WACjC,IAAAlvD,GAAM,IAAA0F,kBAAgB,EAC9B,OACE,UAAC,EAAAg2B,UAAS,IAAC7iC,UAAU,MAAI,WACtBmH,EAAE,uBAAwB,KAC3B,SAACkrD,GAAY,CACXx1D,MAAOsK,EAAE,sCACTxK,YAAawK,EAAE,wCAIvB,EAEMovD,GAAwC,WACpC,IAAApvD,GAAM,IAAA0F,kBAAgB,EAC9B,OACE,UAAC,EAAAg2B,UAAS,IAAC7iC,UAAU,MAAI,WACtBmH,EAAE,0BAA2B,KAC9B,SAACkrD,GAAY,CACXx1D,MAAOsK,EAAE,+CACTxK,YAAawK,EAAE,+CAIvB,EAEMmvD,GAAyC,WACrC,IAAAnvD,GAAM,IAAA0F,kBAAgB,EAC9B,OACE,UAAC,EAAAg2B,UAAS,IAAC7iC,UAAU,MAAI,WACtBmH,EAAE,uCAAwC,KAC3C,SAACkrD,GAAY,CACXx1D,MAAOsK,EAAE,sDACTxK,YAAawK,EAAE,sDAIvB,E,mNCnOaqvD,GAA6D,SAAC,G,IACzElwD,EAAc,iBACdmwD,EAAU,aACVC,EAAmB,sBACnBtC,EAAc,iBAENjtD,GAAM,IAAA0F,gBAAe,WAAU,EAEjC,GAA8C,IAAAjb,WAAkB,GAA/D+kE,EAAkB,KAAEC,EAAqB,KA0B1Cr3C,EAAa60C,GAAwC,IAAtBqC,EAAWh8D,OAEhD,OACE,SAAC,EAAA05C,YAAW,WACV,SAAC,EAAArmB,OAAM,IACLtxB,QAAS,EAAA2xB,cAAA,OACTvwB,OAAQ+4D,EACR3oC,SA/BiB,SAAC2oC,GACtBC,EAAsBD,EACxB,EA8BM1oC,SA5B0C,SAAChqB,EAAG4yD,GAClDA,IAAW1vD,EAAE,eACTuvD,EAAoBG,GACpBH,OAAoBjlE,GACxBmlE,GAAsB,EACxB,EAwBMvoC,WAAY/nB,GAAkBa,EAAE,eAChC+oB,SAAS,OACT9B,gBAAiBjnB,EAAE,eAAc,aACrBA,EAAE,oBACdoY,WAAYA,GAAU,UA1BN,SAACk3C,GAAyB,QAC9C,SAAC,EAAAhoC,aAAY,CAAyB97B,MAAOwU,EAAE,gBAA5B,oBACnB,SAAC,EAAAw8C,YAAW,IAACn1B,MAAM,oBAAkB,UAClCioC,EAAW/3D,KAAI,SAACm4D,EAAQloC,GAAU,OACjC,SAAC,EAAAF,aAAY,CAEX97B,MAAOkkE,EACPh6D,MAAOg6D,GAFF,wBAAiBloC,EAAQ,GAFC,MADK,uBAFI,CA4BzCmoC,CAAcL,OAIvB,E,mNChDaM,GAET,SAAC,G,IACHl6D,EAAK,QACL0iB,EAAU,aACVu6B,EAAY,eACZX,EAAW,cACX9yC,EAAQ,WACRsvD,EAAiB,oBACjB5f,EAAS,YACTzvC,EAAc,iBACdmwD,EAAU,aACVC,EAAmB,sBAEXvvD,GAAM,IAAA0F,kBAAgB,EAC9B,OACE,iCACE,SAAC,EAAAuvC,WAAU,WACT,SAAC,EAAAvZ,UAAS,IAAC7iC,UAAU,MAAI,UAAEnD,QAE7B,SAAC,EAAAg5B,QAAO,KACR,SAAC,EAAA0kB,QAAO,WACN,UAAC,EAAAC,eAAc,YACb,SAACgc,GAAc,CACblwD,eAAgBA,EAChBmwD,WAAYA,EACZC,oBAAqBA,EACrBtC,eAAgB70C,KAElB,SAAC20C,GAAY,CACXpgC,UAAW3sB,EAAE,yCACbd,SAAUA,EACVguD,iBAAkBsB,EAClBxB,QAAS,4BACTC,eAAgB70C,KAElB,SAACk2C,GAAc,CACb3b,aAAcA,EACdX,YAAaA,EACbpD,UAAWA,EACXjiB,UAAW3sB,EAAE,0CAInB,SAAC,EAAA0uB,QAAO,MAGd,EC5DamhC,GAAyD,SAAC,G,IACrErkE,EAAK,QACL66B,EAAQ,WACRlnB,EAAc,iBAENa,GAAM,IAAA0F,gBAAe,WAAU,EAEvC,OACE,UAAC,EAAA2yB,YAAW,YACV,SAAC,EAAAG,gBAAe,CACdC,KAAMz4B,EAAE,uBACRxU,MAAM,QACNktC,SAAS,QACT3O,WAAsB,UAAVv+B,EACZ66B,SAAU,WAAM,OAAAA,EAAS,QAAT,EAChBjO,gBAA+B9tB,IAAnB6U,KAEd,SAAC,EAAAq5B,gBAAe,CACdC,KAAMz4B,EAAE,4BACRxU,MAAM,YACNktC,SAAS,YACT3O,WAAsB,cAAVv+B,QAA4ClB,IAAnB6U,EACrCknB,SAAU,WAAM,OAAAA,EAAS,YAAT,MAIxB,E,mNCVM,GAAS,CAAC,GAAAgkC,qBAAA,MAA4B,GAAAhC,qBAAA,OAyB/ByH,GAET,SAAC,G,IACHnuD,EAAU,aACV+tD,EAAM,SACNxwD,EAAQ,WACRhI,EAAS,YACT4wD,EAAU,aACVyC,EAAiB,oBAEPvqD,GAAM,IAAA0F,kBAAgB,EACxB,EAAwB6gD,KAAvBC,EAAY,KAAEphC,EAAK,KAEpB,EAqEH,SACLzjB,EACA+tD,EACAxwD,EACAqrD,GAMA,IAAMrC,EAAgC,GAChCM,EAA8B,GAE9BgC,EAAiB31C,OAAOuS,QAAQzlB,GAAY7S,MAAK,SAAC0I,EAAGm7B,GACzD,IAAM83B,EAAS51C,OAAO5O,OAAOzO,EAAE,IAAIylB,QAAO,SAACytC,EAAKC,GAAQ,OAAAD,EAAMC,CAAN,GAAW,GAEnE,OADe91C,OAAO5O,OAAO0sB,EAAE,IAAI1V,QAAO,SAACytC,EAAKC,GAAQ,OAAAD,EAAMC,CAAN,GAAW,GACnDF,CAClB,IACsB,UAAtBF,EACIC,EAAehb,MAAM,EAAG,IAAIj4C,KAAI,SAAC,EAAsBiwB,G,IAArBxf,EAAS,KAAE4iD,EAAO,KAC9C96D,EAAO4/D,EAAS,WAAI1nD,GAAcA,EAClC8zB,EAAQ,GAAOtU,GACrB0gC,EAAW34D,KAAK,CACdO,KAAI,IAEN,IAAM24D,EAAkC,GAExC5zC,OAAOuS,QAAQwjC,GAASrzD,KAAI,SAAC,G,IAACijB,EAAS,KAAEhvB,EAAK,KAC5Ci9D,EAAKl5D,KAAK,CAAEO,KAAI,EAAE64D,EAAG1nC,SAASzG,EAAW,IAAKouC,EAAGp9D,GACnD,IACAg9D,EAAUj5D,KAAK,CAAEusC,MAAK,EAAE2sB,KAAI,GAC9B,IACE+B,EAAehb,MAAM,EAAG,IAAIj4C,KAAI,SAAC,EAAsBiwB,G,IAArBxf,EAAS,KAAE4iD,EAAO,KAC9C96D,EAAO4/D,EAAS,UAAG1nD,GAAcA,EACjC8zB,EAAQ,GAAOtU,GACrB0gC,EAAW34D,KAAK,CACdO,KAAI,IAEN,IAAM24D,EAAkC,GAExC5zC,OAAOuS,QAAQwjC,GAASrzD,KAAI,SAAC,G,IAACijB,EAAS,KAAEhvB,EAAK,KAC5Ci9D,EAAKl5D,KAAK,CAAEO,KAAI,EAAE64D,EAAG1nC,SAASzG,EAAW,IAAKouC,EAAGp9D,GACnD,IACAg9D,EAAUj5D,KAAK,CAAEusC,MAAK,EAAE2sB,KAAI,GAC9B,IAEF,IAGMI,EAAa3B,GAHG7iD,MAAMC,KAC1B,IAAIC,IAAIsQ,OAAO5O,OAAOtE,GAAY2X,SAAQ,SAACO,GAAM,OAAAhF,OAAOo/B,KAAKp6B,EAAZ,MAEC3a,GAEpD,MAAO,CACLgpD,WAAU,EACVM,UAAS,EACTK,WAAU,EAEd,CA7HkD,CAC5ClnD,EACA+tD,EACAxwD,EACAqrD,GAJM/B,EAAS,YAAEN,EAAU,aAAEW,EAAU,aAOnCE,EAAal0C,OAAOo/B,KAAKtyC,GAAYrO,OAAS,EAE9CgyD,EAAWwB,GAAe5nD,GAEhC,OACE,mBAAKgpC,IAAKse,EAAcl4B,MAAO,CAAEkI,OAAQ,UAAS,UAC/C,WACC,QAAQ,GACN,KAAKt/B,EACH,OAAO,SAACovD,GAAmB,IAC7B,KAAMyC,EACJ,OAAOjB,EACT,QAKE,OACE,UAACkB,GAAA,EAAK,IACJC,UAAWjpD,EAAE,kCACbkpD,oBACE,SAACC,GAAA,EAAqB,CACpBn7D,OAT6C,SAAC,G,IAAEo7D,EAAK,QAE3D,gBAAGA,EAAMt5D,KAAI,aAAK82D,GAAYwC,EAAMR,GAApC,EAQMS,wBAAsB,IAG1BC,eAAe,cACfC,iBAAiB,SAACC,GAAA,GAAW,CAAC35D,KAAMq4D,IACpC1xB,OAAQwvB,GACRj4B,QAASk4B,GACTwD,WAAYC,GAAA,gBACZtkC,MAAOA,EACPukC,iBAAiB,GAAI,YAErB,SAACC,GAAAC,EAAS,CACRxiC,MAAO,KAAOrnB,EAAE,2BAChB6oD,WAAYA,EACZiB,WAAY,SAAC10C,GACX,OAAA4xC,GAAiB5xC,EAAG,CAClBkwC,SAAQ,GADV,KAKJ,SAACsE,GAAAC,EAAS,CACRxiC,MAAO,aAAernB,EAAE,4BACxB+pD,eAAa,EACbD,WAAYlD,MAEd,SAACoD,GAAA,EAAU,UACRxB,EAAUjxD,KAAI,SAAC/L,EAAOg8B,GAAU,OAC/B,SAACyjC,GAAA,EAAS,CAA6Bp7D,KAAMrE,EAAMi9D,MAAnC,qBAAcjhC,GADC,UAQ5C,CAnDA,KAsDP,E,mNCvGI,GAAS,CAAC,GAAA6iC,qBAAA,MAA4B,GAAAhC,qBAAA,OAgC/B0H,GAAiE,SAAC,G,IAC7E1wD,EAAO,UACPqwD,EAAM,SACNxwD,EAAQ,WACRhI,EAAS,YACT4wD,EAAU,aACVkI,EAAY,eACZpI,EAAU,aAEF5nD,GAAM,IAAA0F,kBAAgB,EACxB,EAAwB6gD,KAAvBC,EAAY,KAAEphC,EAAK,KAEpB,EAgFD,SACL/lB,EACAqwD,EACAxwD,EACA8wD,EACA/H,EACAL,GAMA,IAAMM,EAAa,CACjBN,EACI,CACE93D,KAAMm4D,EACNE,OAAQ,CAAE7Y,KAAM,GAAA8Y,sBAAA,MAA6B/wD,KAAM,mBAErD/M,GACJmO,QAAO,SAAC2c,GAAM,QAAEA,CAAF,IAEVozC,EAA8B,GAC9BE,EAAoC,GACpCH,EAAiB,GAAAH,sBAAA,MAEvB,GAAIsH,GAAUrwD,EAAQqwD,GAAS,CAC7B,IAAM,EAA+B,GAC/B5zB,EAAQ,GAAAusB,qBAAA,MACdH,EAAW34D,KAAK,CAAEO,KAAM4/D,EAAQvH,OAAQ,CAAE7Y,KAAMxT,KAChDjnB,OAAOuS,QAAQ/nB,EAAQqwD,IAASh/C,SAAQ,SAAC,G,IAAC8J,EAAS,KAAEhb,EAAK,KACxD,EAAKjQ,KAAK,CAAEO,KAAM4/D,EAAQ/G,EAAG1nC,SAASzG,EAAW,IAAKouC,EAAGppD,GAC3D,IACAgpD,EAAUj5D,KAAK,CAAEusC,MAAK,EAAEysB,eAAc,EAAEE,KAAI,EAAEC,UAAS,G,MAClD,GAAqB,UAAjBsH,EAA0B,CACnC,IAAM,EAA+B,GAE/Bl0B,EAAQ,GAAAusB,qBAAA,MACdH,EAAW34D,KAAK,CAAEO,KAAM,WAAYq4D,OAAQ,CAAE7Y,KAAMxT,KACpDz8B,EAAQ2wD,IACNn7C,OAAOuS,QAAQ/nB,EAAQ2wD,IAAet/C,SAAQ,SAAC,G,IAAC8J,EAAS,KAAEhb,EAAK,KAC9D,EAAKjQ,KAAK,CAAEO,KAAM,WAAY64D,EAAG1nC,SAASzG,EAAW,IAAKouC,EAAGppD,GAC/D,IACFgpD,EAAUj5D,KAAK,CAAEusC,MAAK,EAAEysB,eAAc,EAAEE,KAAI,EAAEC,UAAS,G,MAEvD7zC,OAAOuS,QAAQ/nB,GACZ5G,QAAO,SAACihB,GAAW,MAAc,UAAdA,EAAO,EAAP,IACnBniB,KAAI,SAAC,EAAmBiwB,G,IAAlB9N,EAAM,KAAEkxC,EAAO,KACd96D,EAAO4pB,EAEPoiB,EAAQ,GAAOtU,GACrB0gC,EAAW34D,KAAK,CAAEO,KAAI,IACtB,IAAM24D,EAA+B,GAErC5zC,OAAOuS,QAAQwjC,GAASl6C,SAAQ,SAAC,G,IAAC8J,EAAS,KAAEhvB,EAAK,KAChDi9D,EAAKl5D,KAAK,CAAEO,KAAI,EAAE64D,EAAG1nC,SAASzG,EAAW,IAAKouC,EAAGp9D,GACnD,IACAg9D,EAAUj5D,KAAK,CAAEusC,MAAK,EAAEysB,eAAc,EAAEE,KAAI,EAAEC,UAAS,GACzD,IAGJ,IAGMG,EAAa3B,GAHG7iD,MAAMC,KAC1B,IAAIC,IAAIsQ,OAAO5O,OAAO5G,GAASia,SAAQ,SAACO,GAAM,OAAAhF,OAAOo/B,KAAKp6B,EAAZ,MAEI3a,GAWpD,OATI0oD,GACFiB,EAAWn4C,SAAQ,SAAC8J,GAClB,OAAAkuC,EAAUn5D,KAAK,CACbO,KAAMm4D,EACNU,EAAGnuC,EACHouC,EAAGhB,GAHL,IAOG,CACLM,WAAU,EACVM,UAAS,EACTK,WAAU,EAEd,CA/JgD,CAC5CxpD,EACAqwD,EACAxwD,EACA8wD,EACAhwD,EAAE,iBACF4nD,GANMY,EAAS,YAAEN,EAAU,aAAEW,EAAU,aASnCE,EAAal0C,OAAOo/B,KAAK50C,GAAS/L,OAAS,EAE3CgyD,EAAWwB,GAAe5nD,GAEhC,OACE,mBAAKgpC,IAAKse,EAAcl4B,MAAO,CAAEkI,OAAQ,UAAS,UAC/C,WACC,QAAQ,GACN,KAAKt/B,EACH,OAAO,SAACovD,GAAmB,IAC7B,KAAMyC,EACJ,OAAOjB,EACT,QAKE,OACE,UAACkB,GAAA,EAAK,IACJC,UAAWjpD,EAAE,kCACbkpD,oBACE,SAACC,GAAA,EAAqB,CACpBn7D,OAT6C,SAAC,G,IAAEo7D,EAAK,QAE3D,gBAAGA,EAAMt5D,KAAI,aAAK82D,GAAYwC,EAAMR,GAApC,EAQMS,wBAAsB,IAG1BC,eAAe,cACfC,iBAAiB,SAACC,GAAA,GAAW,CAAC35D,KAAMq4D,IACpC1xB,OAAQwvB,GACRj4B,QAASk4B,GACTwD,WAAYC,GAAA,gBACZtkC,MAAOA,EACPukC,iBAAiB,GAAI,YAErB,SAACC,GAAAC,EAAS,CACRxiC,MAAO,KAAOrnB,EAAE,2BAChB6oD,WAAYA,EACZiB,WAAY,SAAC10C,GACX,OAAA4xC,GAAiB5xC,EAAG,CAClBkwC,SAAQ,GADV,KAKJ,SAACsE,GAAAC,EAAS,CACRxiC,MAAO,aAAernB,EAAE,4BACxB+pD,eAAa,EACbD,WAAYlD,MAEd,SAACoD,GAAA,EAAU,UACRxB,EAAUjxD,KAAI,SAAC/L,EAAOg8B,GAAU,OAC/B,SAACyjC,GAAA,EAAS,CAA6Bp7D,KAAMrE,EAAMi9D,MAAnC,qBAAcjhC,GADC,OAInC,SAAC0iC,GAAA,EAAc,CAEbr6D,KAAM24D,EAAU,GAAGE,UACnBp6B,MAAO,CACLz+B,KAAM,CACJs6D,OAAQ3B,EAAU,GAAGD,kBAJpB,uBAYhB,CA5DA,KA+DP,E,mNCrFa0H,GAET,SAAC,G,IACHC,EAAe,kBACfj2C,EAAO,UACPG,EAAwB,2BACxBD,EAA4B,+BAC5Bjb,EAAQ,WACR8yC,EAAW,cACX0c,EAAkB,qBAClBC,EAAgB,mBAChBz3D,EAAS,YACTy7C,EAAY,eACZic,EAAa,gBACbtvD,EAAc,iBACdG,EAAgB,mBAChBE,EAAmB,sBACnBivC,EAAS,YACTse,EAAgB,mBAChB/tD,EAAc,iBACdgxD,EAAgB,mBAChBC,EAAY,eACZC,EAAgB,mBAChB9F,EAAiB,oBACjBuE,EAAmB,sBACnBwB,EAAkB,qBAEVtwD,GAAM,IAAA0F,gBAAe,WAAU,EAEvC,OACE,UAAC,EAAA81B,KAAI,kBAAc,0BAAwB,YACzC,SAACo0B,GAA0B,CACzBl6D,MAAOsK,EAAE,0BACTd,SAAUA,EACV8yC,YAAaA,EACbwc,kBAAmBtB,EACnB90C,WAAYs2C,GAAsBE,GAAiB13D,EACnDy7C,aAAcA,EACd/D,UAAWA,EACXzvC,eAAgBA,EAChBowD,oBAAqBY,EACrBb,WAAYr1C,IAEb,WACC,QAAQ,GACN,KAAK00C,EACH,OAAO,SAAC3J,GAAe,IAEzB,KAAK0J,EACH,OACE,SAAC,EAAA/yB,SAAQ,WACP,SAACswB,GAAuB,MAI9B,KAAK2C,EACH,OACE,SAAC,EAAAjzB,SAAQ,WACP,SAAC4oB,GAA4B,MAInC,QACE,OACE,iCACE,SAACgM,GAAU,CACT76D,MAAOsK,EAAE,mBACTs5B,WAAYt5B,EAAE,gCAEhB,UAAC,EAAA27B,SAAQ,YACP,SAACk0B,GAAY,CACXrkE,MAAO4kE,EACP/pC,SAAUgqC,EACVlxD,eAAgBA,KAElB,SAAC4wD,GAAkB,CACjB1wD,QAAS6wD,EACTR,OAAQvwD,EACRD,SAAUA,EACVhI,UAAWA,EACX4wD,YAAY,SAACmE,GAAuB,IACpC+D,aAAcI,EACdxI,WAAYtoD,QAGhB,SAAC,EAAAovB,QAAO,KACR,SAAC6hC,GAAU,CACT76D,MAAOsK,EAAE,kBACTs5B,WAAYt5B,EAAE,sCAEhB,SAAC,EAAA27B,SAAQ,WACP,UAAC,EAAAyX,QAAO,YACN,SAAC,EAAAC,eAAc,WACb,SAACiZ,GAAiB,CAChBE,uBAAwBsC,EACxBvC,eAAgBhC,OAGpB,SAACuF,GAA8B,CAC7BnuD,WAAY2uD,EACZZ,OAAQvwD,EACRD,SAAUA,EACVhI,UAAWA,EACXqzD,kBAAmBA,EACnBzC,YAAY,SAACmE,GAAuB,YAI1C,SAAC,EAAAv9B,QAAO,KACR,SAAC6hC,GAAU,CACT76D,MAAOsK,EAAE,sBACTs5B,WAAYt5B,EAAE,qCAEhB,SAAC,EAAA27B,SAAQ,WACP,UAAC,EAAApB,KAAI,IAACjW,WAAS,eACb,SAAC,EAAAmW,SAAQ,UACNt7B,GACC,SAAC,EAAAsqB,MAAK,CACJp0B,QAAQ,OACRq0B,UAAQ,EACRh0B,MAAOsK,EAAE,6BAET,QAEN,SAAC,EAAAy6B,SAAQ,WACP,SAAC+sB,GAA4B,CAC3BC,UAAWznD,EAAE,sBACb2nD,OAAQ3nD,EAAE,6BACVX,QAAS+a,EACTlb,SAAUA,EACV0oD,WAAYnoD,EACZvI,UAAWA,EACX4wD,YAAY,SAACmE,GAAuB,eAK5C,SAAC,EAAAv9B,QAAO,KACR,SAAC6hC,GAAU,CACT76D,MAAOsK,EAAE,2BACTs5B,WAAYt5B,EAAE,wCAEhB,SAAC,EAAA27B,SAAQ,WACP,UAAC,EAAApB,KAAI,IAACjW,WAAS,eACb,SAAC,EAAAmW,SAAQ,UACNt7B,GACC,SAAC,EAAAsqB,MAAK,CACJp0B,QAAQ,OACRq0B,UAAQ,EACRh0B,MAAOsK,EAAE,mCAET,QAEN,SAAC,EAAAy6B,SAAQ,WACP,SAAC+sB,GAA4B,CAC3BC,UAAWznD,EAAE,2BACb2nD,OAAQ3nD,EAAE,iCACVX,QAAS8a,EACTjb,SAAUA,EACV0oD,WAAYjoD,EACZzI,UAAWA,EACX4wD,YAAY,SAACmE,GAAuB,iBAQrD,CA9HA,MAiIP,EAEasE,GAAiD,SAAC,G,IAC7D76D,EAAK,QACL4jC,EAAU,aAEV,OACE,UAAC,EAAAoC,UAAS,IAAC7iC,UAAU,MAAI,WACtBnD,EAAK,KAAE,SAACw1D,GAAY,CAACx1D,MAAOA,EAAOF,YAAa8jC,OAGvD,E,mNCtOak3B,GAA+C,SAAC,G,IAC3D92C,EAAM,SACN5pB,EAAI,OACJi9B,EAAO,UACP71B,EAAS,YAET,OACE,UAAC,EAAAskC,KAAI,IAACi1B,cAAY,gBAAc3gE,GAAI,YAClC,UAAC,EAAA4rC,UAAS,IAAC7iC,UAAU,MAAI,WACtB/I,EAAI,KAAE,SAACo7D,GAAY,CAACx1D,MAAO5F,EAAM0F,YAAau3B,SAEjD,UAAC,EAAA4O,SAAQ,YACLzkC,SACY5M,IAAXovB,GACC,SAAC,EAAAurC,SAAQ,WACP,SAACgH,GAAuB,OAG1B,SAAC,EAAAjmC,MAAK,IACJC,aAAa,KACbjZ,KAAK,MAAK,iBACM,UAAG0M,EAAM,YAAI5pB,IAAM,UAElC4pB,MAGNxiB,IAAa,SAAC,EAAA2/B,SAAQ,CAACzR,MAAM,OAAOsrC,MAAM,iBAInD,E,mNCpCMC,GAAW,CACfnhC,QAAS,UACTC,OAAQ,CACN6B,QAAS,CACPC,OAAQ,CACNC,IAAK,OAEP1oB,GAAI,CACF+nC,UAAW,CACT7nB,QAAS,mBACT6G,OAAQ,aAId+gC,QAAS,CACPC,MAAO,CACL,IAAM,CACJ,CAAEjhC,KAAM,mBAAoBC,OAAQ,WACpC,CAAEA,OAAQ,2CA6BPihC,IAA8B,OACzC,CACE3hC,QAAS,CAAC,EACVE,OAAQ,CACNvjC,QAAS,CAAC,EACVwjC,OAAQ,CAAC,GAYXllC,GAAI,uBACJ0B,QAAS,CACPkmD,iBAAa1nD,EACb6U,oBAAgB7U,EAChB4U,SAAUi4C,GAAgBsO,UAC1BvrC,qBAAsB,CAAC,EACvBG,yBAA0B,CAAC,EAC3BD,yBAA0B,CAAC,EAC3BD,6BAA8B,CAAC,EAC/B7a,oBAAgBhV,EAChBmV,sBAAkBnV,EAClBqV,yBAAqBrV,EACrBymE,cAAe,EACf92C,QAAS,GACT+2C,eAAgB,QAChBzG,kBAAmB,SAErB/6B,QAAS,iBACTC,OAAQ,CACNkhB,eAAgB,SACXggB,IAAQ,CACX5gC,KAAM,iBACN7tB,MAAO,oBACP4G,GAAI,CACF8nC,aAAc,CACZ,CACEhhB,KAAM,gBACN5G,QAAS,aACT6G,OAAQ,sCAEV,CAAE7G,QAAS,aAAc6G,OAAQ,mBAIvCohC,QAAS,SACJN,IAAQ,CACX5gC,KAAM,UACN7tB,MAAO,oBACP4G,GAAI,CACF8nC,aAAc,CACZ5nB,QAAS,aACT6G,OAAQ,yCAIdqhC,aAAc,CACZnhC,KAAM,SACNjnB,GAAI,CACFkoC,QAAS,CACPhoB,QAAS,eACT6G,OAAQ,aAIdshC,YAAa,CACXphC,KAAM,cACNjnB,GAAI,CACFkoC,QAAS,CACPnhB,OAAQ,oBAIduhC,aAAc,CACZrhC,KAAM,eACNjnB,GAAI,CACFkoC,QAAS,CACPnhB,OAAQ,cAEVwhC,eAAgB,CACdroC,QAAS,cACT6G,OAAQ,WAEVyhC,aAAc,CACZtoC,QAAS,YACT6G,OAAQ,WAEVugC,aAAc,CACZpnC,QAAS,YACT6G,OAAQ,WAEV0hC,gBAAiB,CACfvoC,QAAS,kBAIf4oB,WAAY,CACV7hB,KAAM,aACN7tB,MAAO,oBACPqvB,OAAQ,CACNC,IAAK,OAEP1oB,GAAI,CACF8nC,aAAc,CACZ5nB,QAAS,aACT6G,OAAQ,gBAEVghB,UAAW,CAGThhB,OAAQ,oBAMlB,CACE7G,QAAS,CACPwoC,mBAAmB,QAAO,CAExBxf,YAAa,SAACnf,GAAa,WAAIzmB,IAAJ,IAE7BqlD,YAAY,SAAO,SAAC30D,EAAGoM,GAEnB,IAAAgR,EAQEhR,EAAK,qBAPPmR,EAOEnR,EAAK,yBANPkR,EAMElR,EAAK,yBALPiR,EAKEjR,EAAK,6BAJP5J,EAIE4J,EAAK,eAHPzJ,EAGEyJ,EAAK,iBAFPvJ,EAEEuJ,EAAK,oBACT,MAAO,CACL+Q,QAFE/Q,EAAK,QAGPgR,qBAAoB,EACpBG,yBAAwB,EACxBD,yBAAwB,EACxBD,6BAA4B,EAC5B7a,eAAgBA,EAAiB,cAAQ,GACzCG,iBAAgB,EAChBE,oBAAmB,EAEvB,IACA+xD,kBAAkB,QAAO,CACvBX,cAAe,SAACjlE,GAAY,OAAAA,EAAQilE,cAAgB,CAAxB,IAE9BY,cAAc,QAAO,CAEnBZ,cAAe,SAACl+B,GAAa,YAE/B++B,aAAa,SAAO,SAAC/+B,EAAU3pB,GAAU,OACvChK,SAAUgK,EAAMhK,SAChBgb,qBAAsB,CAAC,EACvBG,yBAA0B,CAAC,EAC3BD,yBAA0B,CAAC,EAC3BD,6BAA8B,CAAC,EALQ,IAOzC03C,WAAW,QAAO,CAChB1yD,eAAgB,SAAC0zB,EAAU3pB,GAAU,OAAAA,EAAMwmD,MAAN,IAEvCoC,WAAW,SAAO,SAACh1D,EAAG,GAAc,OAAGk0D,eAAV,QAAO,IACpC5f,cAAc,SAAO,SAACt0C,EAAG,GAAc,OAAGytD,kBAAV,QAAO,KAEzCl3B,OAAQ,CACN0+B,iBAAkB,SAACjmE,GAAY,OAAAA,EAAQilE,cA5NzB,CA4NiB,EAC/BnC,cAAe,SAAC9xD,EAAGoM,GACjB,MAAmB,iBAAfA,EAAM7R,OAENwd,OAAOo/B,KAAK/qC,EAAMkR,0BAA0B9mB,OAAS,GACrDuhB,OAAOo/B,KAAK/qC,EAAMiR,8BAA8B7mB,OAAS,GACzDuhB,OAAOo/B,KAAK/qC,EAAMgR,sBAAsB5mB,OAAS,GACjDuhB,OAAOo/B,KAAK/qC,EAAMmR,0BAA0B/mB,OAAS,EAI3D,K,mNCvOA,GAAW,CACfk8B,QAAS,UACTC,OAAQ,CACN6B,QAAS,CACPC,OAAQ,CACNC,IAAK,OAEP1oB,GAAI,CACF+nC,UAAW,CACT7nB,QAAS,mBACT6G,OAAQ,aAId+gC,QAAS,CACPC,MAAO,CACL,IAAM,CACJ,CAAEjhC,KAAM,mBAAoBC,OAAQ,WACpC,CAAEA,OAAQ,oCA0BPmiC,IAAuB,OAClC,CACE7iC,QAAS,CAAC,EACVE,OAAQ,CACNvjC,QAAS,CAAC,EACVwjC,OAAQ,CAAC,GAYXllC,GAAI,gBACJ0B,QAAS,CACPkmD,iBAAa1nD,EAGbwV,mBAAexV,EACf4U,SAAUi4C,GAAgBsO,UAC1B8E,kBAAmB,QAGnBxqD,YAAa,GACbme,cAAe,GACfJ,cAAe,CAAC,EAChBD,cAAe,CAAC,EAChBE,kBAAmB,CAAC,EACpBC,oBAAqB,CAAC,EAGtB+yC,cAAe,GAEjBvhC,QAAS,iBACTC,OAAQ,CACNkhB,eAAgB,SACX,IAAQ,CACX5gB,KAAM,iBACN7tB,MAAO,oBACP4G,GAAI,CACF8nC,aAAc,CACZ,CACEhhB,KAAM,gBACN5G,QAAS,aACT6G,OAAQ,+BAEV,CAAE7G,QAAS,aAAc6G,OAAQ,mBAIvCohC,QAAS,SACJ,IAAQ,CACXlhC,KAAM,UACN7tB,MAAO,oBACP4G,GAAI,CACF8nC,aAAc,CACZ5nB,QAAS,aACT6G,OAAQ,kCAIdqhC,aAAc,CACZnhC,KAAM,SACNjnB,GAAI,CACFkoC,QAAS,CACPhoB,QAAS,eACT6G,OAAQ,aAIdshC,YAAa,CACXphC,KAAM,cACNjnB,GAAI,CACFkoC,QAAS,CACPnhB,OAAQ,oBAIduhC,aAAc,CACZrhC,KAAM,eACNP,QAAS,OACTC,OAAQ,CACN0B,KAAM,CAAC,EACPygB,WAAY,CACV7hB,KAAM,aACN7tB,MAAO,oBACPqvB,OAAQ,CACNC,IAAK,OAEP1oB,GAAI,CACF8nC,aAAc,CACZ5nB,QAAS,aACT6G,OAAQ,+BAEVghB,UAAW,CAEThhB,OAAQ,kCAKhB/mB,GAAI,CACFkoC,QAAS,CACPnhB,OAAQ,0CAEVoiC,YAAa,CACXjpC,QAAS,WACT6G,OAAQ,WAEVwhC,eAAgB,CACdroC,QAAS,cACT6G,OAAQ,WAEV0hC,gBAAiB,CACfvoC,QAAS,oBAMnB,CACEA,QAAS,CACPwoC,mBAAmB,QAAO,CAExBxf,YAAa,SAACnf,GAAa,WAAIzmB,IAAJ,IAE7BqlD,YAAY,SAAO,SAAC5+B,EAAU3pB,GAS5B,MAAO,CACLnJ,YAFEmJ,EAAK,YAGPgV,cAHEhV,EAAK,cAIP6U,kBAJE7U,EAAK,kBAKP2U,cALE3U,EAAK,cAMP4U,cANE5U,EAAK,cAOP8U,oBAPE9U,EAAK,oBASX,IACAwoD,kBAAkB,QAAO,CACvBX,cAAe,SAACjlE,GAAY,OAAAA,EAAQilE,cAAgB,CAAxB,IAE9BY,cAAc,QAAO,CAEnBZ,cAAe,SAACl+B,GAAa,YAE/Bq/B,UAAU,QAAO,CACfpyD,cAAe,SAAC+yB,EAAU3pB,GAAU,OAAAA,EAAMpI,KAAN,IAEtC8wD,aAAa,QAAO,CAClB1yD,SAAU,SAACpC,EAAGoM,GAAU,OAAAA,EAAMhK,QAAN,IAE1BkyC,cAAc,SAAO,SAACt0C,EAAG,GAAc,OAAGytD,kBAAV,QAAO,KAEzCl3B,OAAQ,CACN0+B,iBAAkB,SAACjmE,GAAY,OAAAA,EAAQilE,cAlNzB,CAkNiB,EAC/BnC,cAAe,SAAC9xD,EAAGoM,GACjB,MAAmB,iBAAfA,EAAM7R,OAENwd,OAAOo/B,KAAK/qC,EAAM2U,eAAevqB,OAAS,GAC1CuhB,OAAOo/B,KAAK/qC,EAAM4U,eAAexqB,OAAS,GAC1CuhB,OAAOo/B,KAAK/qC,EAAM6U,mBAAmBzqB,OAAS,GAC9CuhB,OAAOo/B,KAAK/qC,EAAM8U,qBAAqB1qB,OAAS,EAItD,K,mNCjOA,GAAW,CACfk8B,QAAS,UACTC,OAAQ,CACN6B,QAAS,CACPC,OAAQ,CACNC,IAAK,OAEP1oB,GAAI,CACF+nC,UAAW,CACT7nB,QAAS,mBACT6G,OAAQ,aAId+gC,QAAS,CACPC,MAAO,CACL,IAAM,CACJ,CAAEjhC,KAAM,mBAAoBC,OAAQ,WACpC,CAAEA,OAAQ,2BAkBPsiC,IAAoB,OAC/B,CACEhjC,QAAS,CAAC,EACVC,4BAA4B,EAC5BC,OAAQ,CACNvjC,QAAS,CAAC,EACVwjC,OAAQ,CAAC,GAMXllC,GAAI,OACJ0B,QAAS,CACPkP,YAAQ1Q,EACRmvB,qBAAiBnvB,EACjBmc,oBAAgBnc,EAChBwU,0BAAsBxU,EACtBymE,cAAe,GAEjBvhC,QAAS,iBACTC,OAAQ,CACNkhB,eAAgB,SACX,IAAQ,CACX5gB,KAAM,iBACNjnB,GAAI,CACF8nC,aAAc,CACZ,CACEhhB,KAAM,gBACN5G,QAAS,aACT6G,OAAQ,sBAEV,CAAE7G,QAAS,aAAc6G,OAAQ,mBAIvCohC,QAAS,SACJ,IAAQ,CACXlhC,KAAM,UACNjnB,GAAI,CACF8nC,aAAc,CACZ5nB,QAAS,aACT6G,OAAQ,yBAIdqhC,aAAc,CACZnhC,KAAM,SACNjnB,GAAI,CACFkoC,QAAS,CACPhoB,QAAS,eACT6G,OAAQ,aAIdshC,YAAa,CACXphC,KAAM,cACNjnB,GAAI,CACFkoC,QAAS,CACPnhB,OAAQ,oBAIduhC,aAAc,CACZrhC,KAAM,eACNP,QAAS,OACTC,OAAQ,CACN0B,KAAM,CAAC,EACPygB,WAAY,CACV7hB,KAAM,aACNwB,OAAQ,CACNC,IAAK,OAEP1oB,GAAI,CACF8nC,aAAc,CACZ5nB,QAAS,aACT6G,OAAQ,sBAEVghB,UAAW,CAEThhB,OAAQ,yBAKhB/mB,GAAI,CACFkoC,QAAS,CACPnhB,OAAQ,qCAMlB,CACE7G,QAAS,CACPyoC,YAAY,SAAO,SAAC30D,EAAGoM,GAOrB,MAAO,CACLlO,OAFEkO,EAAK,OAGPuQ,gBAHEvQ,EAAK,gBAIPzC,eAJEyC,EAAK,eAKPpK,qBALEoK,EAAK,qBAOX,IAEAwoD,kBAAkB,QAAO,CACvBX,cAAe,SAACjlE,GAAY,OAAAA,EAAQilE,cAAgB,CAAxB,IAG9BY,cAAc,QAAO,CAEnBZ,cAAe,SAACl+B,GAAa,aAGjCQ,OAAQ,CACN0+B,iBAAkB,SAACjmE,GAAY,OAAAA,EAAQilE,cA9JzB,CA8JiB,EAC/BnC,cAAe,SAAC9xD,EAAGoM,GACjB,MAAmB,iBAAfA,EAAM7R,YAEW/M,IAAjB4e,EAAMlO,aACoB1Q,IAA1B4e,EAAMuQ,sBACmBnvB,IAAzB4e,EAAMzC,qBACyBnc,IAA/B4e,EAAMpK,qBAIZ,K,mNCnKOszD,IAA8B,IAAA1oE,eAGxC,MASU2oE,GAET,SAAC,G,IAAEzoE,EAAQ,WAAEoV,EAAuB,0BAChC8+B,GAAU,SACd,WACE,OAAAgzB,GAAA,WAAuC,CACrCvhC,SAAU,CACR/kB,IAAK,SAAC1e,GACJ,OAAO,SAACwmE,GACNtzD,EAAwB,CACtBG,eAAgBrT,EAAQqT,eACxBD,SAAUpT,EAAQoT,SAClBD,SAAUkmD,GAAqBr5D,EAAQoT,UAAUD,WAEhDkW,MAAK,SAACo9C,GACL,OAAAD,EAAS,IAAEj7D,KAAM,gBAAmBk7D,GAApC,IAEDzsB,OAAM,SAAC3jC,GACNgH,QAAQ/R,MAAM,uBAAwB+K,GACtCmwD,EAAS,YACX,GACJ,CACF,IAjBJ,GAoBF,CACE7zB,UAAU,IAGd,OACE,SAAC2zB,GAA4B1mE,SAAQ,IACnCF,MAAO,CACLsyC,QAAO,IACR,UAEAl0C,IAGP,E,mNCnDa4oE,IAAoB,IAAA9oE,eAG9B,MAKU+oE,GAAiE,SAAC,G,IAC7E7oE,EAAQ,WACRgV,EAAa,gBAEPk/B,GAAU,SACd,WACE,OAAAq0B,GAAA,WAA6B,CAC3B5iC,SAAU,CACR/kB,IAAK,WACH,OAAO,SAAC8nD,GACN1zD,IACGuW,MAAK,SAACo9C,GACL,OAAAD,EAAS,IAAEj7D,KAAM,gBAAmBk7D,GAApC,IAEDzsB,OAAM,SAAC3jC,GACNgH,QAAQ/R,MAAM,uBAAwB+K,GACtCmwD,EAAS,YACX,GACJ,CACF,IAbJ,GAgBF,CACE7zB,UAAU,IAGd,OACE,SAAC+zB,GAAkB9mE,SAAQ,IACzBF,MAAO,CACLsyC,QAAO,IACR,UAEAl0C,IAGP,E,mNC1Ca8oE,IAAuB,IAAAhpE,eAGjC,MASUipE,GAET,SAAC,G,IAAE/oE,EAAQ,WAAEiW,EAAgB,mBACzBi+B,GAAU,SACd,WACE,OAAAk0B,GAAA,WAAgC,CAC9BziC,SAAU,CACR/kB,IAAK,SAAC1e,GACJ,OAAO,SAACwmE,GACNzyD,EAAiB,CACfC,cAAehU,EAAQgU,cACvBZ,SAAUpT,EAAQoT,SAClBD,SAAUkmD,GAAqBr5D,EAAQoT,UAAUD,WAEhDkW,MAAK,SAACo9C,GACL,OAAAD,EAAS,IAAEj7D,KAAM,gBAAmBk7D,GAApC,IAEDzsB,OAAM,SAAC3jC,GACNgH,QAAQ/R,MAAM,uBAAwB+K,GACtCmwD,EAAS,YACX,GACJ,CACF,IAjBJ,GAoBF,CACE7zB,UAAU,IAGd,OACE,SAACi0B,GAAqBhnE,SAAQ,IAC5BF,MAAO,CACLsyC,QAAO,IACR,UAEAl0C,IAGP,E,mNC7CO,SAASgpE,KACN,IAAA90B,GAAY,IAAA/xC,YAAWqmE,IAA4B,QAErD,GAmBF,QACFt0B,GACA,IAAA3yC,cACE,SAAC6Y,GAAU,OAAC,SACPA,EAAMlY,SAAO,CAChB6iE,iBAAkB3qD,EAAMqwB,OAAO,kBAC/Bse,aAAc3uC,EAAMqwB,OAAO,cAC3Bn9B,UAAW8M,EAAMqwB,OAAO,WACxBw+B,SAAU7uD,EAAMqwB,OAAO,UACvBu6B,cAAe5qD,EAAMqwB,OAAO,gBANnB,GAQX,KA7BF28B,EAAc,iBACd7xD,EAAc,iBACd+a,EAAoB,uBACpBE,EAAwB,2BACxBD,EAA4B,+BAC5BE,EAAwB,2BACxB/a,EAAc,iBACdG,EAAgB,mBAChBE,EAAmB,sBACnBT,EAAQ,WACR8yC,EAAW,cACX2c,EAAgB,mBAChBz3D,EAAS,YACTy7C,EAAY,eACZkgB,EAAQ,WACRjE,EAAa,gBACbrE,EAAiB,oBACjBtwC,EAAO,UAgBH64C,GAAiB,IAAA3nE,cACrB,SAACukE,GACC,OAAA5xB,EAAQK,KAAK,CAAE9mC,KAAM,eAAgBq4D,OAAM,GAA3C,GACF,CAAC5xB,IAGGovB,GAAmB,IAAA/hE,cACvB,SAAC+T,GACC,OAAA4+B,EAAQK,KAAK,CAAE9mC,KAAM,iBAAkB6H,SAAQ,GAA/C,GACF,CAAC4+B,IAgBH,MAAO,CACL5jB,qBAAoB,EACpBE,yBAAwB,EACxBD,6BAA4B,EAC5BE,yBAAwB,EACxB/a,eAAc,EACdG,iBAAgB,EAChBE,oBAAmB,EACnBqyC,YAAW,EACX2c,iBAAgB,EAChBz3D,UAAS,EACTy7C,aAAY,EACZkgB,SAAQ,EACRjE,cAAa,EACb1vD,SAAQ,EACRguD,iBAAgB,EAChBte,WA7BgB,IAAAzjD,cAAY,WAAM,OAAA2yC,EAAQK,KAAK,UAAb,GAAyB,CAACL,IA8B5Dg1B,eAAc,EACd3zD,eAAc,EACd6xD,eAAc,EACd+B,gBA/BqB,IAAA5nE,cACrB,SAACK,GAAwB,OAAAsyC,EAAQK,KAAK,CAAE9mC,KAAM,eAAgB7L,MAAK,GAA1C,GACzB,CAACsyC,IA8BDk1B,mBA3BwB,IAAA7nE,cACxB,SAACK,GACC,OAAAsyC,EAAQK,KAAK,CAAE9mC,KAAM,kBAAmB7L,MAAK,GAA7C,GACF,CAACsyC,IAyBDysB,kBAAiB,EACjBtwC,QAAO,EAEX,C,6mBCvFO,SAASg5C,KACN,IAAAn1B,GAAY,IAAA/xC,YAAW2mE,IAAqB,QAE9C,GAgBF,QACF50B,GACA,IAAA3yC,cACE,SAAC6Y,GAAU,OAAC,SACPA,EAAMlY,SAAO,CAChB6iE,iBAAkB3qD,EAAMqwB,OAAO,kBAC/Bse,aAAc3uC,EAAMqwB,OAAO,cAC3Bn9B,UAAW8M,EAAMqwB,OAAO,WACxBw+B,SAAU7uD,EAAMqwB,OAAO,UACvBu6B,cAAe5qD,EAAMqwB,OAAO,gBANnB,GAQX,KA1BFv0B,EAAa,gBACbZ,EAAQ,WACRa,EAAW,cACXme,EAAa,gBACbL,EAAa,gBACbC,EAAa,gBACbC,EAAiB,oBACjBC,EAAmB,sBACnB2wC,EAAgB,mBAChBz3D,EAAS,YACTy7C,EAAY,eACZkgB,EAAQ,WACRjE,EAAa,gBACb5c,EAAW,cACXuY,EAAiB,oBAgBb2I,GAAgB,IAAA/nE,cACpB,SAAC2V,GAA8B,OAAAg9B,EAAQK,KAAK,CAAE9mC,KAAM,cAAeyJ,MAAK,GAAzC,GAC/B,CAACg9B,IAGGovB,GAAmB,IAAA/hE,cACvB,SAAC+T,GACC,OAAA4+B,EAAQK,KAAK,CAAE9mC,KAAM,iBAAkB6H,SAAQ,GAA/C,GACF,CAAC4+B,IAGG8Q,GAAY,IAAAzjD,cAAY,WAAM,OAAA2yC,EAAQK,KAAK,UAAb,GAAyB,CAACL,IAgB9D,MAAO,CACL6wB,iBAAgB,EAChBz3D,UAAS,EACTy7C,aAAY,EACZkgB,SAAQ,EACRjE,cAAa,EACb5c,YAAW,EACXh3C,QArBmB,IAAAvP,UAAQ,WAC3B,IAAMuP,EAASqJ,MAAMC,KACnB,IAAIC,IAAG,SAAaxE,GAAa,GAAGme,GAAa,KAGnD,OADAljB,EAAOlM,MAAK,SAAC0I,EAAGm7B,GAAM,OAAAn7B,EAAE6kD,cAAc1pB,EAAhB,IACf33B,CACT,GAAG,CAAC+E,EAAame,IAgBfpe,cAAa,EACbZ,SAAQ,EACR2e,cAAa,EACbC,cAAa,EACbC,kBAAiB,EACjBC,oBAAmB,EACnBk1C,cAAa,EACbhG,iBAAgB,EAChBte,UAAS,EACTokB,mBAvBwB,IAAA7nE,cACxB,SAACK,GACC,OAAAsyC,EAAQK,KAAK,CAAE9mC,KAAM,kBAAmB7L,MAAK,GAA7C,GACF,CAACsyC,IAqBDysB,kBAAiB,EAErB,C,uNCnEa4I,GAA2D,SAAC,G,IACvEz5C,EAAM,SACNxiB,EAAS,YACT,IAAA4H,qBAAAA,OAAoB,IAAG,IAAC,EAEhBkB,GAAM,IAAA0F,kBAAgB,EAE9B,OACE,UAAC,EAAA81B,KAAI,IACHi1B,cAAY,gBACCzwD,EAAE,4CAA0C,YAEzD,UAAC,EAAA07B,UAAS,IAAC7iC,UAAU,MAAI,WACtBmH,EAAE,2CAA4C,KAC/C,SAACkrD,GAAY,CACXx1D,MAAOsK,EAAE,2CACTxK,YAAawK,EAAE,yDAGnB,UAAC,EAAA27B,SAAQ,YACLzkC,SACY5M,IAAXovB,GACC,SAAC,EAAAurC,SAAQ,WACP,SAACgH,GAAuB,OAG1B,iCACE,UAAC,EAAAjmC,MAAK,IACJC,aAAa,KACbjZ,KAAK,MAAK,iBACM,UAAG0M,EAAM,YAAI1Z,EAC3B,6CACC,WAEF0Z,EAAQ,IAEHA,GAAU5a,GAEV,SAAC,EAAAs0D,sBAAqB,CAACt3B,MAAM,wCAEtBpiB,GAAiC,IAAvB5a,GAEjB,SAAC,EAAAglC,wBAAuB,CAAChI,MAAM,yCAG1B,QAIb,SAAC,EAAAjR,YAAW,WACV,SAAC,EAAAR,KAAI,UACFrqB,EAAE,0BAA2B,CAC5Bc,MAAOhC,YAMlB5H,IAAa,SAAC,EAAA2/B,SAAQ,CAACzR,MAAM,OAAOsrC,MAAM,cAGvCh3C,GAAUA,GAAU5a,GAEpB,SAAC,EAAA6hC,WAAU,WACT,UAAC,EAAAlX,MAAK,IACJ4pC,cAAY,EACZ3pC,UAAQ,EACRr0B,QAAS,EAAAukC,aAAA,OACTlkC,MAAOsK,EAAE,0CAAwC,YAEjD,uBAAIA,EAAE,oDACN,uBAAIA,EAAE,yDAIH0Z,GAAUA,GAAiC,IAAvB5a,GAE3B,SAAC,EAAA6hC,WAAU,WACT,UAAC,EAAAlX,MAAK,IACJsN,KAAM,QACNs8B,cAAY,EACZ3pC,UAAQ,EACRr0B,QAAS,EAAAukC,aAAA,QACTlkC,MAAOsK,EAAE,8CAA4C,YAErD,uBACGA,EAAE,oDAAqD,CACtDwb,MAAO1c,OAGX,uBAAIkB,EAAE,6DAKL,OAKjB,E,mNCvHaszD,GAA+D,SAAC,G,IAC3EC,EAAQ,WACR/uD,EAAY,eAEJxE,GAAM,IAAA0F,gBAAe,WAAU,EAEvC,OAAK6tD,GAYI,qCAVL,SAAC,EAAA9pC,MAAK,IACJC,UAAQ,EACRr0B,QAAQ,OACRK,MAAOsK,EAAE,qBACTwzD,aAAa,SAAC,EAAAC,uBAAsB,CAAC1oE,QAASyZ,KAAgB,WAE9D,uBAAIxE,EAAE,+BAMd,E,mNCCa0zD,GAA+C,SAAC,G,IAC3D10D,EAAuB,0BACvBa,EAAgB,mBAChBjB,EAAa,gBACbjB,EAAa,gBACbW,EAAY,eACZF,EAAyB,4BAEzB,OACE,SAACu0D,GAAqB,IAAC9yD,iBAAkBA,GAAgB,WACvD,SAACwyD,GAA4B,IAC3BrzD,wBAAyBA,GAAuB,WAEhD,SAACyzD,GAAkB,IAAC7zD,cAAeA,GAAa,WAC9C,SAAC+0D,GAAgB,CACfh2D,cAAeA,EACf6G,aAAclG,EACdi1D,SAAUn1D,YAMtB,EAOMu1D,GAAiE,SAAC,G,IACtEh2D,EAAa,gBACb6G,EAAY,eACZ+uD,EAAQ,WAEAvzD,GAAM,IAAA0F,kBAAgB,EACxBkuD,EAAuBhB,KACvBiB,EAAgBZ,KAChBa,ECvDD,WACG,IAAAh2B,GAAY,IAAA/xC,YAAWymE,IAAkB,QAE3C,GAUF,QACF10B,GACA,IAAA3yC,cACE,SAAC6Y,GAAU,OAAC,SACPA,EAAMlY,SAAO,CAChB6iE,iBAAkB3qD,EAAMqwB,OAAO,kBAC/Bse,aAAc3uC,EAAMqwB,OAAO,cAC3Bn9B,UAAW8M,EAAMqwB,OAAO,WACxBw+B,SAAU7uD,EAAMqwB,OAAO,UACvBu6B,cAAe5qD,EAAMqwB,OAAO,gBANnB,GAQX,KApBFr5B,EAAM,SACNye,EAAe,kBACf3a,EAAoB,uBACpB2H,EAAc,iBAuBhB,MAAO,CACLkoD,iBAvBgB,mBAwBhBz3D,UAvBS,YAwBTy7C,aAvBY,eAwBZkgB,SAvBQ,WAwBRjE,cAvBa,gBAwBb5zD,OAAM,EACNye,gBAAe,EACfhT,eAAc,EACd3H,qBAAoB,EACpB8vC,WAZgB,IAAAzjD,cAAY,WAAM,OAAA2yC,EAAQK,KAAK,UAAb,GAAyB,CAACL,IAchE,CDaqBi2B,GAEnB,QAAQ,GACN,KAAKH,EAAqBjF,kBACxBkF,EAAclF,kBACdmF,EAAWnF,iBACX,OAAO,SAACrK,GAAwB,IAClC,KAAKsP,EAAqBf,UACxBgB,EAAchB,UACdgB,EAAchB,SAChB,KAAKe,EAAqBhF,eACxBiF,EAAcjF,eACdkF,EAAWlF,cACX,OAAO,SAACrK,GAA4B,IACtC,QACE,OACE,SAACE,GAAa,CACZC,iBACE,SAAC4O,GAAe,CAAC9uD,aAAcA,EAAc+uD,SAAUA,IAEzD5O,WACE,SAAC6L,GAAO,CACN92C,OAAQo6C,EAAW94D,OACnB9D,UAAW48D,EAAWnF,kBAAoBmF,EAAW58D,UACrDpH,KAAMkQ,EAAE,kCACR+sB,QAAS/sB,EAAE,2CAGf4kD,oBACE,SAACuO,GAAa,CACZz5C,OAAQo6C,EAAWr6C,gBACnBviB,UAAW48D,EAAWnF,kBAAoBmF,EAAW58D,UACrD4H,qBAAsBg1D,EAAWh1D,uBAGrC+lD,kBACE,SAAC2L,GAAO,CACN92C,OAAQo6C,EAAWrtD,eACnBvP,UAAW48D,EAAWnF,kBAAoBmF,EAAW58D,UACrDpH,KAAMkQ,EAAE,yCACR+sB,QAAS/sB,EAAE,kDAGf8kD,kBAAkB,SAACkP,GAA6B,IAChDjP,cACE,SAACkP,GAAsB,CAACt2D,cAAeA,MAKnD,EAEMq2D,GAAuD,WACrD,MAwBFpB,KAvBFjE,EAAgB,mBAChBz3D,EAAS,YACTy7C,EAAY,eACZkgB,EAAQ,WACRjE,EAAa,gBACb1vD,EAAQ,WACR8yC,EAAW,cACX93B,EAAoB,uBACpBE,EAAwB,2BACxBD,EAA4B,+BAC5B7a,EAAc,iBACdG,EAAgB,mBAChBE,EAAmB,sBACnButD,EAAgB,mBAChBte,EAAS,YACT30B,EAAO,UACP64C,EAAc,iBACd3zD,EAAc,iBACd6xD,EAAc,iBACd+B,EAAc,iBACd14C,EAAwB,2BACxBkwC,EAAiB,oBACjByI,EAAiB,oBAGnB,OACE,SAAC/C,GAAwB,CACvBC,gBAAiBh2C,EACjBE,yBAA0BA,EAC1BD,6BAA8BA,EAC9Bjb,SAAUA,EACVwvD,mBAAoBmE,EACpBlE,iBAAkBA,EAClBz3D,UAAWA,EACXy7C,aAAcA,EACdic,cAAeA,EACf5c,YAAaA,EACbpD,UAAWA,EACXse,iBAAkBA,EAClB5tD,eAAgBA,GAAkB,EAClCG,iBAAkBA,GAAoB,EACtCE,oBAAqBA,GAAuB,EAC5Csa,QAASA,EACT9a,eAAgBA,EAChBgxD,iBAAkB2C,EAClB1C,aAAcY,EACdX,iBAAkB0C,EAClBzC,mBAAoBj2C,EACpBy0C,oBAAqBkE,EACrBzI,kBAAmBA,GAGzB,EAKM0J,GAEF,SAAC,G,IAAEt2D,EAAa,gBACZ,EAmBFs1D,KAlBFtE,EAAgB,mBAChBz3D,EAAS,YACTy7C,EAAY,eACZkgB,EAAQ,WACRjE,EAAa,gBACb5c,EAAW,cACXlyC,EAAa,gBACbZ,EAAQ,WACRlE,EAAM,SACN6iB,EAAa,gBACbC,EAAa,gBACbC,EAAiB,oBACjBC,EAAmB,sBACnBusC,EAAiB,oBACjB2C,EAAgB,mBAChBgG,EAAa,gBACbtkB,EAAS,YACTokB,EAAiB,oBAGnB,OACE,SAACvE,GAAiB,CAChBC,mBAAoBmE,EACpB73D,OAAQA,EACRowD,mBAAoBvtC,EACpBwtC,mBAAoBvtC,EACpBnc,WAAYoc,EACZC,oBAAqBA,EACrB9e,SAAUA,EACVyvD,iBAAkBA,EAClBz3D,UAAWA,EACXy7C,aAAcA,EACdic,cAAeA,EACf5c,YAAaA,EACblyC,cAAeA,EACf8uC,UAAWA,EACXigB,gBAAiBqE,EACjBhG,iBAAkBA,EAClBvvD,cAAeA,EACfmxD,oBAAqBkE,EACrBzI,kBAAmBA,GAGzB,E,mNEvMa2J,GAA6C,SAAC,G,IACzDn2D,EAAwB,2BACxBC,EAAuB,0BAEfgC,GAAM,IAAA0F,gBAAe,SAAQ,EAE/B,GAA0C,IAAAjb,UAC9CuT,EAA0B,KAAO,OAD5Bm2D,EAAgB,KAAEC,EAAmB,KAGtC,GAAgC,IAAA3pE,WAAkB,GAAjD2J,EAAW,KAAEigE,EAAc,KAE5BtpE,EAAU,WACdspE,GAAe,EACjB,EAUMC,EAAyB,SAACC,GAC9BH,EAAoBG,EAAc,YAAc,cAEhDx2D,EAAyBw2D,GACtBp/C,MAAK,SAACq/C,GACLJ,EAAoBI,EAAmB,KAAO,MAShD,IACC1uB,OAAM,WACLsuB,EAAqBG,EAAqB,MAAP,KAQrC,GACJ,EAOA,OACE,SAAC,EAAAjoC,YAAW,IAACC,UAAU,EAAMC,mBAAmB,EAAI,aAAc,QAAM,WACtE,UAAC,EAAAnI,MAAK,IAACC,WAAS,eACd,SAAC,EAAA4E,UAAS,WACR,SAAC,EAAAsS,KAAI,WACH,SAAC,EAAAG,SAAQ,UAAE37B,EAAE,iDAGjB,SAAC,EAAAkpB,UAAS,WACR,SAAC,EAAAsS,KAAI,IAAC9W,UAAW,uBAAqB,WACpC,SAAC,EAAAiX,SAAQ,WACP,UAAC,EAAA3E,KAAI,IAACy9B,SAAU,CAAEp/C,QAAS,WAAU,YACnC,SAAC,EAAAgiB,SAAQ,IAACC,KAAM,CAAEjiB,QAAS,SAAQ,WACjC,UAAC,EAAA2hB,KAAI,YACH,SAAC,EAAAK,SAAQ,IACPx+B,UAAW,OACXq+B,OAAQ,CAAE7hB,QAAS,aAAY,WAE/B,8BACGrV,EAAE,+CACF,WAGL,SAAC,EAAAq3B,SAAQ,UACN,WACC,OAAQ88B,GACN,IAAK,KACH,OAAOn0D,EACL,mDAEJ,IAAK,aACH,OACE,iCACE,SAAC,EAAAi8B,QAAO,CACNjvB,KAAK,KAAI,iBACOhN,EACd,4DACD,aACWA,EACV,iDAED,IACFA,EACC,+DAIR,IAAK,MACH,OAAOA,EACL,oDAEJ,IAAK,YACH,OACE,iCACE,SAAC,EAAAi8B,QAAO,CACNjvB,KAAK,KAAI,iBAEP,0DAAyD,aAE/ChN,EACV,iDAED,IACFA,EACC,8DAIR,QACE,OAAO,KAEZ,CA/CA,YAmDP,SAAC,EAAAq3B,SAAQ,WACP,SAAC,EAAA9uB,OAAM,CACLne,GAAG,sCAAqC,aAC5B4V,EACV,+CAEFkqB,UACuB,OAArBiqC,GACqB,eAArBA,EAEF/7C,WACuB,eAArB+7C,GACqB,cAArBA,EAEF9tC,SAjIK,SAACquC,GACG,OAArBP,EACFE,GAAe,GAEfC,EAAuBI,EAE3B,OA8Hc,SAAC,EAAA9rC,MAAK,IACJvzB,QAAS,EAAAwzB,aAAA,MACTpyB,OAAQrC,EACRsB,MAAOsK,EAAE,0BACT+hD,iBAAkB,UAClB/4B,QAAS,EACP,SAAC,EAAApwB,OAAM,IAELvD,QAAQ,UACR4zB,QA1GF,WAChBorC,GAAe,GACfC,GAAuB,EACzB,GAuGsC,UAEjBt0D,EAAE,oCAJE,YAMP,SAAC,EAAApH,OAAM,IAAgBvD,QAAQ,OAAO4zB,QAASl+B,GAAO,UACnDiV,EAAE,mBADQ,WAIfjV,QAASA,GAAO,UAEfiV,EAAE,oDASrB,ECnMa20D,GAA8C,CACzD,CAAEzoE,IAAK,OAAQV,MAAO,OAAQopE,eAAe,GAC7C,CAAE1oE,IAAK,QAASV,MAAO,SACvB,CAAEU,IAAK,UAAWV,MAAO,WACzB,CAAEU,IAAK,UAAWV,MAAO,WACzB,CAAEU,IAAK,eAAgBV,MAAO,iBAGnBqpE,GAA8C,CACzD,CAAE3oE,IAAK,QAASV,MAAO,QAASopE,eAAe,GAC/C,CAAE1oE,IAAK,YAAaV,MAAO,aAC3B,CAAEU,IAAK,YAAaV,MAAO,aAC3B,CAAEU,IAAK,YAAaV,MAAO,aAC3B,CAAEU,IAAK,YAAaV,MAAO,c,mNCAhBspE,GAA+D,SAAC,G,IAC3EC,EAAc,iBACdC,EAAgB,mBAChB3tD,EAAS,YACTa,EAAiB,oBACjBD,EAAa,gBAELjI,GAAM,IAAA0F,gBAAe,CAAC,SAAU,UAAS,EAE3CuvD,GACJ,UAAC,EAAA/yB,WAAU,IAAC1T,OAAQ,cAAY,YAC9B,SAAC,EAAA2T,eAAc,CACbx5B,OAAQ,WAAM,OACZ,SAAC,EAAAhQ,KAAI,IAACjM,GAAIwb,GAAiB,UAAGlI,EAAE,2BADpB,KAIhB,SAAC,EAAAmiC,eAAc,CACbx5B,OAAQ,WAAM,gBAAC,EAAAhQ,KAAI,IAACjM,GAAIub,GAAa,UAAGZ,IAA1B,KAEhB,SAAC,EAAA86B,eAAc,IAAC1T,UAAQ,aAAEzuB,EAAE,6BAGhC,OACE,iCACE,uBAAS0kB,UAAU,8BAA4B,UAC5CuwC,MAEH,UAAC,EAAA3oC,YAAW,IAACj3B,QAAS,EAAAy4B,oBAAA,OAAyB,YAC7C,SAAC,EAAA9H,MAAK,IAACC,aAAa,KAAKjZ,KAAK,OAAK,UAChChN,EAAE,0BAEL,mBACA,SAAC,EAAAuI,OAAM,CACLimB,OAAQ,oBACRpkC,GAAG,sBACHi9B,MAAOrnB,EAAE,0BACTk1D,SAAUl1D,EAAE,0BACZkqB,UAAW6qC,EACX1uC,SAAU2uC,EACVtwC,UAAU,8BAKpB,E,mNCrDaywC,GAA8D,SAAC,G,IAC1E7uD,EAAS,YACTD,EAAM,SACNjS,EAAW,cACXigE,EAAc,iBAENr0D,GAAM,IAAA0F,gBAAe,CAAC,iBAAgB,EAExC0vD,EAAoB,WACxBf,GAAe,EACjB,EAKA,OACE,SAAC,EAAAzrC,MAAK,IACJlzB,MAAOsK,EAAE,uBACT3K,QAAS,QACT0sD,iBAAiB,UAAS,mBACT,+BACjBtrD,OAAQrC,EACRrJ,QAASqqE,EACTpsC,QAAS,EACP,SAAC,EAAApwB,OAAM,IAAevD,QAAQ,UAAU4zB,QAb5B,WAChBorC,GAAe,GACfhuD,EAAOC,EACT,GAUgE,UACvDtG,EAAE,gBADO,YAGZ,SAAC,EAAApH,OAAM,IAAcvD,QAAQ,OAAO4zB,QAASmsC,GAAiB,UAC3Dp1D,EAAE,eADO,YAGb,UAEAA,EAAE,6BAGT,E,YC3Caq1D,GAA2B,SAAC7pE,GACvC,GAAmB,MAAfA,EAAMA,MACR,OAAQA,EAAM+qD,MACZ,IAAK,OAEH,OADuB,SAAQ5pC,OAAOnhB,EAAMA,OAAQ,QAAQkB,GAAG,MAGjE,IAAK,QAEH,OADuB,SAAQigB,OAAOnhB,EAAMA,OAAQ,SAASkB,GAAG,MAGlE,IAAK,UAEH,OADuB,SAAQigB,OAAOnhB,EAAMA,OAAQ,WAAWkB,GAAG,MAGpE,IAAK,QAEH,OADuB,SAAQigB,OAAOnhB,EAAMA,OAAQ,SAASkB,GAAG,MAGlE,IAAK,UAEH,OADuB,SAAQigB,OAAOnhB,EAAMA,OAAQ,WAAWkB,GAAG,MAGpE,IAAK,YAGL,IAAK,eACH,OAAOigB,OAAOnhB,EAAMA,OAG5B,E,mNCnBa8pE,GAET,SAAC,G,IACHhsC,EAAO,UACP8Q,EAAU,aACVm7B,EAAY,eACZC,EAAU,aACVC,EAAW,cACXC,EAAa,gBAGTC,EAAc,IAYlB,OAToB,IALP,sBAMIrrE,IAAfkrE,GACAv0C,SAASu0C,GAAc,EAEvBG,EAAc,YACLH,IACTG,EAAcH,IAId,SAAC,EAAAnsC,UAAS,IACRC,QAASA,EACTjC,MAAO+S,EACP1V,UAAU,gCACVi4B,WACE,SAAC,EAAAj5B,QAAO,IACNC,eAAe,yBAAM+xC,IACrB9xC,aAAa,yBAAM6xC,KAAkB,WAErC,mCACcF,EACZtsC,QAAS,SAAC/f,GAAU,OAAAA,EAAM+3B,gBAAN,EACpBvc,UAAU,+BAA6B,WAEvC,SAAC,EAAAmgB,SAAQ,CAAC+X,iBAAe,WAEnB,WAGZ,SAAC,EAAArzB,UAAS,CACRC,gBAAiB,QACjBnyB,KAAK,OACLjN,GAAIk/B,EACJx5B,KAAMw5B,EACN99B,MAAOmqE,MAIf,E,mNChDMC,GAAkC,SAAC,G,IACvCC,EAAsB,yBACtBC,EAAqB,wBACrBC,EAAwB,2BACxBC,EAAkB,qBAEVh2D,GAAM,IAAA0F,gBAAe,CAAC,eAAgB,WAAU,EAExD,OACE,UAAC,EAAAuwD,YAAW,IAACvgE,MAAOsK,EAAE,WAAY5V,GAAG,UAAU8rE,aAAc,MAAI,YAC/D,SAAC,EAAArrC,YAAW,WACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,EAAgBpG,UAAU,gBAAc,UACtD1kB,EAAE,8BAIP,SAACs1D,GAAoB,CACnBhsC,QAAQ,mBACRisC,aAAcv1D,EAAE,oBAChBo6B,WAAYp6B,EAAE,oBACdw1D,WAAYx1D,EAAE,oBAAqB,CACjCR,MAAOs2D,EACPK,UAAU,SAAQ/oB,OAAO0oB,GAAwB,SAASppE,GACxD,eAGJ+oE,YAAaz1D,EAAE,oBACf01D,cAAe11D,EAAE,mCAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,gBACRisC,aAAcv1D,EAAE,iBAChBo6B,WAAYp6B,EAAE,iBACdw1D,WAAYx1D,EAAE,uBAAwB,CACpCo2D,aAAcJ,EACd1f,MAAM,SAAQlJ,OAAO4oB,GAAqB,gBAAgBtpE,GAAG,UAE/D+oE,YAAaz1D,EAAE,6BACf01D,cAAe11D,EAAE,oBAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,sBACRisC,aAAcv1D,EAAE,uBAChBo6B,WAAYp6B,EAAE,uBACdw1D,WAAYx1D,EAAE,oBAAqB,CAAExU,MAAOuqE,IAC5CN,YAAaz1D,EAAE,mCACf01D,cAAe11D,EAAE,0BAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,oBACRisC,aAAcv1D,EAAE,qBAChBo6B,WAAYp6B,EAAE,qBACdw1D,WAAYx1D,EAAE,yBAA0B,CACtCo2D,aAAcP,EACdzpB,QAAQ,SAAQgB,OAAOyoB,GAAyB,gBAAgBnpE,GAC9D,aAGJ+oE,YAAaz1D,EAAE,iCACf01D,cAAe11D,EAAE,wBAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,gCACRisC,aAAcv1D,EAAE,iCAChBo6B,WAAYp6B,EAAE,iCACdw1D,WAAYx1D,EAAE,mBACdy1D,YAAaz1D,EAAE,6CACf01D,cAAe11D,EAAE,sCAIzB,E,mNCzEMq2D,GAAgE,SAAC,G,IACrEC,EAAe,kBACfC,EAAkB,qBAEZ,GACJ,IAAA9rE,WAAkB,GADb+rE,EAAyB,KAAEC,EAA4B,KAGxDC,EAAwB,SAACjgE,GAC7BggE,EAA6BhgE,EAC/B,EAoBA,OACE,mBAAKiuB,UAAU,+BAA6B,WAC1C,UAAC,EAAAsS,KAAI,YACH,SAAC,EAAAK,SAAQ,WACP,SAAC,EAAA9N,UAAS,cACI,iBACZlyB,KAAK,SACL7L,MAAgC,GAAzB8qE,EAAgB9qE,MAAa,GAAK8qE,EAAgB9qE,MACzD66B,SAhBO,SAACswC,GAChB,IAAMC,EAAU,SACXN,GAAe,CAClB9qE,MAAO4hD,OAAOupB,KAEZC,EAAWprE,OAAS,GAAG+qE,EAAmBK,EAChD,EAWU3nB,IAAK,OAGT,SAAC,EAAA5X,SAAQ,WACP,SAAC,EAAA1Q,OAAM,IACLtxB,QAAS,EAAA2xB,cAAA,OAAoB,aAClB,eACXH,SAAU6vC,EACV5vC,SAAU,SAAC5d,EAAO1d,GAAU,OAnCI,SAAC0d,EAAO1d,GAKhD+qE,EAJgC,CAC9BhgB,KAAM/qD,EACNA,MAAO,IAITkrE,GAAsB,EACxB,CA2BsC5vC,CAAS5d,EAAO1d,EAAhB,EAC5B0tC,YAAY,OACZhS,WAAYovC,EAAgB/f,KAC5B9/C,OAAQ+/D,GAAyB,UAEhC7B,cAA0B,EAA1BA,GAAA,KAAgC,SAACvmD,GAAM,OACtC,SAAC,EAAAkZ,aAAY,IAEX97B,MAAO4iB,EAAE5iB,MACTopE,cAAexmD,EAAEwmD,eAAa,UAE7BxmD,EAAE5iB,QAJE4iB,EAAEliB,IAF6B,cAcpD,E,mNCjEM2qE,GAA0D,SAAC,G,IAC/DC,EAAwB,2BACxBC,EAA2B,8BAErB,GACJ,IAAAtsE,WAAkB,GADbusE,EAAyB,KAAEC,EAA4B,KAGxDC,EAAwB,SAACzgE,GAC7BwgE,EAA6BxgE,EAC/B,EAkBA,OACE,mBAAKiuB,UAAU,+BAA6B,WAC1C,UAAC,EAAAsS,KAAI,YACH,SAAC,EAAAK,SAAQ,WACP,SAAC,EAAA9N,UAAS,cACG,iBACXlyB,KAAK,SACL7L,MACoC,GAAlCsrE,EAAyBtrE,MACrB,GACAsrE,EAAyBtrE,MAE/B66B,SAnBO,SAACswC,GAChB,IAAMC,EAAU,SACXE,GAAwB,CAC3BtrE,MAAO4hD,OAAOupB,KAEZC,EAAWprE,OAAS,GAAGurE,EAA4BH,EACzD,EAcU3nB,IAAK,OAGT,SAAC,EAAA5X,SAAQ,WACP,SAAC,EAAA1Q,OAAM,IACLtxB,QAAS,EAAA2xB,cAAA,OAAoB,aAClB,eACXH,SAAUqwC,EACVpwC,SArCgC,SAAC5d,EAAO1d,GAKhDurE,EAJ6C,CAC3CxgB,KAAM/qD,EACNA,MAAO,IAGT0rE,GAAsB,EACxB,EA+BUhwC,WAAY4vC,EAAyBvgB,KACrC9/C,OAAQugE,GAAyB,UAEhCnC,cAA0B,EAA1BA,GAAA,KAAgC,SAACzmD,GAAM,OACtC,SAAC,EAAAkZ,aAAY,CAEX97B,MAAO4iB,EAAE5iB,MACTopE,cAAexmD,EAAEwmD,eAFZxmD,EAAEliB,IAF6B,cAYpD,ECjFairE,GAAmB,WAGtB,IAAAn3D,GAAM,IAAA0F,gBAAe,CAAC,iBAAgB,EAE9C,MAAO,CACL0xD,cAAc,IAAAjsE,cACZ,SAAC2E,GACC,IAAMunE,EAAiB,IAAIxZ,OAAO,qBAClC,OAAI/tD,EAAKwD,SAAW+jE,EAAe5pC,KAAK39B,GAC/BkQ,EAAE,0BACAlQ,EAAKwD,OAAS,IAChB0M,EAAE,4BACS,MAATlQ,GAAyB,OAATA,EAClBkQ,EAAE,8BADJ,CAIT,GACA,CAACA,IAGP,E,sZC6BMs3D,GAA+D,SAAC,G,IACpEC,EAAQ,WACRjxD,EAAS,YACTkxD,EAAY,eACZC,EAAW,cACXC,EAAc,iBACdC,EAAiB,oBACjBC,EAAc,iBACdrxD,EAAuB,0BACvB+vD,EAAe,kBACfC,EAAkB,qBAClBsB,EAAoB,uBACpBC,EAAuB,0BACvBf,EAA2B,8BAC3BD,EAAwB,2BACxBiB,EAAoB,uBACpBC,EAAuB,0BAEfh4D,GAAM,IAAA0F,gBAAe,CAAC,iBAAgB,EACvCuyD,GAAqB,IAAAxtE,UAA2B6b,EAAU3E,YAAW,GACpEy1D,EAAiBD,KAAkB,aACrCrZ,GAAkB,IAAA3yD,cACtB,SAACK,GACC,IAAMkiC,EAAe0pC,EAAa5rE,GAC9BkiC,GACFgqC,EAAehqC,GACfiqC,EAAkB,EAAAlb,iBAAA,QAElBkb,EAAkB,EAAAlb,iBAAA,QAEtB,GACA,CAACib,EAAgBC,EAAmBP,IAGhCc,EAA6B,SAAC1sE,GACpB,cAAVA,GACF+qE,EAAmB,CAAE/qE,OAAQ,EAAG+qD,KAAM,cACtCuhB,EAAwBtsE,KAExB+qE,EAAmB,CAAE/qE,MAAO,EAAG+qD,KAAM,SACrCuhB,EAAwBtsE,GAE5B,EAEM2sE,EAA6B,SAAC3sE,GACpB,cAAVA,GACFwsE,EAAwBxsE,GACxBurE,EAA4B,CAAEvrE,OAAQ,EAAG+qD,KAAM,gBAE/CwgB,EAA4B,CAAEvrE,MAAO,EAAG+qD,KAAM,UAC9CyhB,EAAwBxsE,GAE5B,EA4CM4sE,GACJ,SAAC/B,GAAsB,CACrBC,gBAAiBA,EACjBC,mBAAoBA,IAIlB8B,GACJ,SAACxB,GAAmB,CAClBC,yBAA0BA,EAC1BC,4BAA6BA,IAIjC,OACE,UAAC,EAAAd,YAAW,IACVvgE,MAAOsK,EAAE,sBACT5V,GAAG,qBACH8rE,aAAc,MAAI,YAElB,SAAC,EAAArrC,YAAW,WACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,EAAgBpG,UAAU,gBAAc,UACtD1kB,EAAE,yBAGNu3D,GACC,SAACr9B,GAAA,EAAoB,IACnBC,UAAWn6B,EAAE,cACbspB,QAAQ,oBACR8Q,WAAYp6B,EAAE,cACdq6B,UAAWr6B,EAAE,0BACbs6B,gBAAgB,iCAChBlC,kBAAmBq/B,EACnB7gC,UAAWghC,EACXh/B,YAAY,EACZU,WAAYt5B,EAAE,2BAAyB,WAEvC,SAAC,EAAAupB,UAAS,CACRqP,YAAU,EACVvhC,KAAK,OACLjN,GAAG,oBACH0F,KAAK,OACLtE,MAAO8a,EAAUxW,KACjBu2B,SAtFoB,SAAC76B,GAC7BsyD,EAAgBtyD,GAChBgsE,EAAa,SAAKlxD,GAAS,CAAExW,KAAMtE,IACrC,EAoFU67B,MAAOrnB,EAAE,cACTk5B,YAAal5B,EAAE,cACf42B,UAAWghC,QAIf,SAACtC,GAAoB,CACnBhsC,QAAQ,aACRisC,aAAa,oBACbn7B,WAAW,OACXo7B,WAAYlvD,EAAUxW,KACtB2lE,YAAaz1D,EAAE,0BACf01D,cAAe11D,EAAE,iBAIrB,SAACk6B,GAAA,EAAoB,IACnB5Q,QAAQ,0BACR8Q,WAAW,aACXD,UAAWn6B,EAAE,cACbq6B,UAAWr6B,EAAE,0BACbs6B,gBAAgB,iCAChBhB,WACEhzB,EAAU3E,WAAWrO,QAAUiT,EAC3BvG,EAAE,sBACFA,EAAE,yBAER42B,UACEtwB,EAAU3E,WAAWrO,QAAUiT,EAC3B,UACA,WAAS,WAGf,SAAC,EAAA+xD,YAAW,CACVluE,GAAG,0BACHmuE,UAAU,iBACVlyC,SAtHiD,SAACnd,GACxD,IAAMvH,EAAayrC,OAAQlkC,EAAM2mB,OAA4BrkC,OAEvDgtE,EAAoBn0D,MAAM1C,GAC7B2tC,KAAK,MACL/3C,KAAI,SAACuF,EAAG0qB,GAAU,OAAGxf,UAAWwf,EAAd,IAErBgwC,EAAa,SACRlxD,GAAS,CACZ3E,WAAY41D,GAERiB,EAAkBllE,OAAS2kE,EAAkB3kE,OAD7CklE,EAGAP,IAER,EAuGoC,cACfj4D,EAAE,cACfy4D,OAvGa,WACnB,IAAMC,EAAoBpyD,EAAU3E,WAC9B62D,EAAoB,SACrBE,GAAiB,IACpB,CAAE1wD,UAAW0wD,EAAkBplE,U,GAEjCkkE,EAAa,SACRlxD,GAAS,CACZ3E,WAAY62D,IAEhB,EA8FQG,QA5Fc,WACZ,IAAAh3D,EAAe2E,EAAS,WAC1BsyD,EAAgBj3D,EAAW6tC,MAAM,EAAG7tC,EAAWrO,OAAS,GAC9DkkE,EAAa,SACRlxD,GAAS,CACZ3E,WAAYi3D,IAEhB,EAsFQptE,MACiC,GAA/B8a,EAAU3E,WAAWrO,OAAc,GAAKgT,EAAU3E,WAAWrO,OAE/DulE,aAAc,CAAE/oE,KAAM,kBACtBgpE,cAAe,CAAEhpE,KAAM,kBACvBm/C,IAAKsoB,EAAW,EAAIU,EAAkB3kE,aAW1C,SAACgiE,GAAoB,CACnBhsC,QAAQ,sBACRisC,aAAa,mCACbn7B,WAAW,2BACXo7B,WAAYlvD,EAAU,uBAAuB8U,WAC7Cq6C,YAAaz1D,EAAE,mCACf01D,cAAe11D,EAAE,0BAEnB,SAACk6B,GAAA,EAAoB,IACnB5Q,QAAQ,YACR8Q,WAAW,iBACXD,UAAWn6B,EAAE,kBACbq6B,UAAWr6B,EAAE,8BACbs6B,gBAAgB,sCAAoC,WAEpD,UAAC,EAAAjW,MAAK,IAACC,WAAS,eACd,SAAC,EAAAy0C,MAAK,CACJ7uC,UAAoC,WAAzB2tC,EACX/nE,KAAK,wBACLu2B,SAAU,WAAM,OAAA6xC,EAA2B,SAA3B,EAChB7wC,MAAO+wC,EACP1zC,UAAU,sCAAqC,aACpC,kBACXt6B,GAAG,wBACHoB,MAAOqsE,KAET,SAAC,EAAAkB,MAAK,CACJ7uC,UAAoC,cAAzB2tC,EACX/nE,KAAK,2BACLu2B,SAAU,WAAM,OAAA6xC,EAA2B,YAA3B,EAChB7wC,MAAM,iBAAgB,aACX,YACXj9B,GAAG,2BACHoB,MAAOqsE,YAIb,SAAC39B,GAAA,EAAoB,IACnB5Q,QAAQ,iBACR8Q,WAAW,iBACXD,UAAWn6B,EAAE,kBACbq6B,UAAWr6B,EAAE,8BACbs6B,gBAAgB,sCAAoC,WAEpD,UAAC,EAAAjW,MAAK,IAACC,WAAS,eACd,SAAC,EAAAy0C,MAAK,CACJ7uC,UAAoC,WAAzB6tC,EACXjoE,KAAK,wBACLu2B,SAAU,WAAM,OAAA8xC,EAA2B,SAA3B,EAChB9wC,MAAOgxC,EACP3zC,UAAU,sCAAqC,aACpC,cACXt6B,GAAG,wBACHoB,MAAOusE,KAET,SAAC,EAAAgB,MAAK,CACJ7uC,UAAoC,cAAzB6tC,EACXjoE,KAAK,2BACLu2B,SAAU,WAAM,OAAA8xC,EAA2B,YAA3B,EAChB9wC,MAAM,iBAAgB,aACX,YACXj9B,GAAG,2BACHoB,MAAOusE,cAMnB,E,mNC9SMiB,GAA8B,SAAC,G,IACnCC,EAA4B,+BAC5BC,EAAwB,2BAEhBl5D,GAAM,IAAA0F,gBAAe,CAAC,iBAAgB,EAE9C,OACE,UAAC,EAAAuwD,YAAW,IAACvgE,MAAOsK,EAAE,SAAU5V,GAAG,QAAQ8rE,aAAc,MAAI,YAC3D,SAAC,EAAArrC,YAAW,WACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,EAAgBpG,UAAU,gBAAc,UACtD1kB,EAAE,4BAIP,SAACs1D,GAAoB,CACnBhsC,QAAQ,0BACRisC,aAAcv1D,EAAE,2BAChBo6B,WAAYp6B,EAAE,2BACdw1D,WAAYx1D,EAAE,gBAAiB,CAC7BxU,MAAOytE,IAETxD,YAAaz1D,EAAE,uCACf01D,cAAe11D,EAAE,8BAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,sBACRisC,aAAcv1D,EAAE,uBAChBo6B,WAAYp6B,EAAE,uBACdw1D,WAAYx1D,EAAE,oBAAqB,CAAExU,MAAO0tE,IAC5CzD,YAAaz1D,EAAE,mCACf01D,cAAe11D,EAAE,4BAIzB,E,+NCxBMm5D,GAA0B,SAAC,G,IAC/B7yD,EAAS,YACTkxD,EAAY,eACZ4B,EAA0B,6BAC1BC,EAAuB,0BACvBC,EAA+B,kCAEvBt5D,GAAM,IAAA0F,gBAAe,CAAC,eAAgB,WAAU,EAElD6zD,EAA0C,CAC9C,CACErtE,IAAK,UACLV,MAAO,UACP67B,MAAOrnB,EAAE,WACToY,YAAY,GAEd,CACElsB,IAAK,SACLV,MAAO,SACP67B,MAAOrnB,EAAE,iBACToY,YAAY,GAEd,CACElsB,IAAK,kBACLV,MAAO,iBACP67B,MAAO,UAAGrnB,EAAE,WAAU,YAAIA,EAAE,kBAC5BoY,YAAY,IAWhB,OACE,UAAC,EAAA69C,YAAW,IAACvgE,MAAOsK,EAAE,OAAQ5V,GAAG,MAAM8rE,aAAc,MAAI,YACvD,UAAC,EAAArrC,YAAW,YACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAc,UAAG9qB,EAAE,wBACpC,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAAG9qB,EAAE,gCAG1C,SAACk6B,GAAA,EAAoB,IACnB5Q,QAAQ,iBACR8Q,WAAYp6B,EAAE,kBACdm6B,UAAWn6B,EAAE,kBACbq6B,UAAWr6B,EAAE,8BACbs6B,gBAAiBt6B,EAAE,mBAAiB,WAEpC,SAACw5D,GAAA,EAAkB,CACjBpvE,GAAG,mCACH0tC,SAAS,yCACTnL,UAAW3sB,EAAE,iBACby5D,eAzBe,SAACjuE,GACtBgsE,EAAa,SACRlxD,GAAS,CACZ,iBAAkB9a,IAEtB,EAqBQkrB,MAAO6iD,EACPzpE,KAAK,iBACLtE,MAAO8a,EAAU,kBACjBozD,wBAAwB,GACnBpzD,EAAU,uBAInB,SAACgvD,GAAoB,CACnBhsC,QAAQ,wBACRisC,aAAcv1D,EAAE,yBAChBo6B,WAAYp6B,EAAE,yBACdw1D,WAAYx1D,EAAE,2BAA4B,CACxCxU,MAAO4tE,EACP9iB,MAAM,SAAQlJ,OAAOgsB,GAA6B,gBAAgB1sE,GAChE,UAGJ+oE,YAAaz1D,EAAE,qCACf01D,cAAe11D,EAAE,4BAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,sBACRisC,aAAcv1D,EAAE,uBAChBo6B,WAAYp6B,EAAE,uBACdw1D,WAAYxrC,OAAOqvC,GACnB5D,YAAaz1D,EAAE,mCACf01D,cAAe11D,EAAE,0BAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,sCACRisC,aAAcv1D,EAAE,2BAChBo6B,WAAYp6B,EAAE,2BACdw1D,WAAYx1D,EAAE,oBAAqB,CACjCxU,MAAO8tE,IAET7D,YAAaz1D,EAAE,uCACf01D,cAAe11D,EAAE,gCAIzB,E,mNC7GM25D,GAAkC,SAAC,G,IACvCC,EAA0B,6BAC1BC,EAA2B,8BAC3BC,EAA8B,iCAEtB95D,GAAM,IAAA0F,gBAAe,CAAC,iBAAgB,EAE9C,OACE,UAAC,EAAAuwD,YAAW,IAACvgE,MAAOsK,EAAE,YAAa5V,GAAG,WAAW8rE,aAAc,MAAI,YACjE,SAAC,EAAArrC,YAAW,WACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,EAAgBpG,UAAU,gBAAc,UACtD1kB,EAAE,8BAIP,SAACs1D,GAAoB,CACnBhsC,QAAQ,mBACRisC,aAAcv1D,EAAE,oBAChBo6B,WAAYp6B,EAAE,oBACdw1D,WAAYx1D,EAAE,aAAc,CAAExU,MAAOouE,IACrCnE,YAAaz1D,EAAE,gCACf01D,cAAe11D,EAAE,uBAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,yBACRisC,aAAcv1D,EAAE,0BAChBo6B,WAAYp6B,EAAE,0BACdw1D,WAAYxrC,OAAO6vC,GACnBpE,YAAaz1D,EAAE,sCACf01D,cAAe11D,EAAE,6BAEnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,6BACRisC,aAAcv1D,EAAE,8BAChBo6B,WAAYp6B,EAAE,8BACdw1D,WAAYx1D,EAAE,oBAAqB,CACjCxU,MAAOsuE,IAETrE,YAAaz1D,EAAE,0CACf01D,cAAe11D,EAAE,iCAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,mBACRisC,aAAcv1D,EAAE,oBAChBo6B,WAAYp6B,EAAE,oBACdw1D,WAAY,WACZC,YAAaz1D,EAAE,gCACf01D,cAAe11D,EAAE,uBAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,iBACRisC,aAAcv1D,EAAE,kBAChBo6B,WAAYp6B,EAAE,kBACdw1D,WAAY,UACZC,YAAaz1D,EAAE,8BACf01D,cAAe11D,EAAE,uBAIzB,E,mNCpEM+5D,GAAwB,WACpB,IAAA/5D,GAAM,IAAA0F,gBAAe,CAAC,eAAgB,WAAU,EAExD,OACE,UAAC,EAAAuwD,YAAW,IAACvgE,MAAOsK,EAAE,eAAgB5V,GAAG,cAAc8rE,aAAc,MAAI,YACvE,SAAC,EAAArrC,YAAW,WACV,UAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAc,WAC5B9qB,EAAE,6BACH,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,2CAKT,SAACs1D,GAAoB,CACnBhsC,QAAQ,0BACRisC,aAAcv1D,EAAE,2BAChBo6B,WAAYp6B,EAAE,2BACdw1D,WAAYx1D,EAAE,mBACdy1D,YAAaz1D,EAAE,uCACf01D,cAAe11D,EAAE,gCAIzB,E,mNClBMg6D,GAAuD,SAAC,G,IAC5DC,EAAwB,2BACxBC,EAAuB,0BAEfl6D,GAAM,IAAA0F,gBAAe,CAAC,iBAAgB,EAE9C,OACE,UAAC,EAAAuwD,YAAW,IAACvgE,MAAOsK,EAAE,SAAU5V,GAAG,QAAQ8rE,aAAc,MAAI,YAC3D,SAAC,EAAArrC,YAAW,WACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,EAAgBpG,UAAU,gBAAc,UACtD1kB,EAAE,4BAIP,SAACs1D,GAAoB,CACnBhsC,QAAQ,sBACRisC,aAAcv1D,EAAE,uBAChBo6B,WAAYp6B,EAAE,uBACdw1D,WAAYx1D,EAAE,qBAAsB,CAClCR,MAAOy6D,EACPhjB,WAAW,SAAQ7J,OAAO6sB,GAA2B,SAASvtE,GAC5D,eAGJ+oE,YAAaz1D,EAAE,mCACf01D,cAAe11D,EAAE,0BAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,qBACRisC,aAAcv1D,EAAE,sBAChBo6B,WAAYp6B,EAAE,sBACdw1D,WAAYx1D,EAAE,qBAAsB,CAClCR,MAAO06D,EACPljB,WAAW,SAAQ5J,OAAO6sB,GAA2B,SAASvtE,GAC5D,eAGJ+oE,YAAaz1D,EAAE,kCACf01D,cAAe11D,EAAE,2BAIzB,E,mNCpDMm6D,GAA8D,SAAC,G,IACnEC,EAAa,gBAELp6D,GAAM,IAAA0F,gBAAe,CAAC,iBAAgB,EAE9C,OACE,SAAC,EAAA20D,aAAY,IAAChlE,QAAQ,UAAQ,WAC5B,UAAC,EAAAilE,UAAS,IACRrxB,YAAU,EACV5hB,MAAOrnB,EAAE,mBACTu6D,mBAAmB,oBACnBjsC,MAAO,CAAEvF,SAAU,WAAU,YAG7B,SAAC,EAAAyxC,cAAa,IAAS7lE,KAAK,uBAAqB,UAC9CqL,EAAE,wBADe,IAGpB,SAAC,EAAAw6D,cAAa,IAAS7lE,KAAK,aAAW,UACpCqL,EAAE,cADe,IAGpB,SAAC,EAAAw6D,cAAa,IAAS7lE,KAAK,QAAM,UAC/BqL,EAAE,SADe,IAGpB,SAAC,EAAAw6D,cAAa,IAAS7lE,KAAK,gBAAc,UACvCqL,EAAE,iBADe,IAGpB,SAAC,EAAAw6D,cAAa,IAAS7lE,KAAK,YAAU,UACnCqL,EAAE,aADe,IAGpB,SAAC,EAAAw6D,cAAa,IAAS7lE,KAAK,UAAQ,UACjCqL,EAAE,WADe,IAGpB,SAAC,EAAAw6D,cAAa,IAAS7lE,KAAK,UAAQ,UACjCqL,EAAE,WADe,GAGnBo6D,GACC,SAAC,EAAAI,cAAa,IAAS7lE,KAAK,WAAS,UAClCqL,EAAE,YADe,IAIpB,8BAKV,E,mNCJay6D,GAET,SAAC,G,IACHlD,EAAQ,WACR1gE,EAAS,YACT6jE,EAAY,eACZp0D,EAAS,YACTkxD,EAAY,eACZ3vD,EAAc,iBACdtB,EAAuB,0BACvB+vD,EAAe,kBACfC,EAAkB,qBAClBsB,EAAoB,uBACpBC,EAAuB,0BACvBf,EAA2B,8BAC3BD,EAAwB,2BACxBiB,EAAoB,uBACpBC,EAAuB,0BAEfh4D,GAAM,IAAA0F,gBAAe,CAAC,eAAgB,WAAU,EAClDi1D,EAAwB36D,EAAXu3D,EAAa,eAAoB,eAI9C,GAAsC,IAAA9sE,UAC1C,EAAAgyD,iBAAA,SADKmb,EAAc,KAAED,EAAiB,KAGlC,GAAgC,IAAAltE,UAAS,IAAxCgtE,EAAW,KAAEC,EAAc,KAC5B,GAA4B,IAAAjtE,WAAkB,GAA7CyM,EAAS,KAAE0jE,EAAY,KACxB,GAAwB,IAAAnwE,WAAkB,GAAzCowE,EAAO,KAAEC,EAAU,KAqB1B,OACE,SAAC,EAAAxuC,YAAW,IAACyB,QAAS,CAAE1Y,QAAS,cAAa,WAC5C,UAAC,EAAA0lD,QAAO,IAACz2C,WAAS,eAChB,SAAC61C,GAAqB,KACtB,SAAC,EAAAa,eAAc,WACb,SAAC,EAAAC,UAAS,IACRzuC,mBAAmB,EACnBpiC,GAAG,oBAAmB,aACV,QAAM,WAElB,UAAC,EAAAkiC,YAAW,IAACyB,QAAS,CAAE1Y,QAAS,cAAa,YAC5C,UAAC,EAAA8T,KAAI,YACH,SAACmuC,GAAiB,CAChBC,SAAUA,EACVjxD,UAAWA,EACXkxD,aAAcA,EACdjxD,wBAAyBA,EACzBkxD,YAAaA,EACbC,eAAgBA,EAChBC,kBAAmBA,EACnBC,eAAgBA,EAChBkD,WAAYA,EACZD,QAASA,EACT/D,yBAA0BA,EAC1BC,4BAA6BA,EAC7BT,gBAAiBA,EACjBC,mBAAoBA,EACpBsB,qBAAsBA,EACtBC,wBAAyBA,EACzBC,qBAAsBA,EACtBC,wBAAyBA,KAE3B,SAAC2B,GAAO,CACNC,2BACEtzD,EAAU,qBAAqB9a,MAEjCquE,4BACEvzD,EAAU,0BAEZwzD,+BACExzD,EAAU,uCAAuC9a,SAGrD,SAAC2tE,GAAG,CACF7yD,UAAWA,EACXkxD,aAAcA,EACd4B,2BAA4B9yD,EAAU,gBAAgB9a,MACtD6tE,wBACE/yD,EAAU,6BAEZgzD,gCACEhzD,EAAU,yBAAyB9a,SAGvC,SAACuuE,GAAW,KACZ,SAACnE,GAAO,CACNE,sBAAuBxvD,EAAU,iBAAiB9a,MAClDwqE,mBAAoB1vD,EAAU,cAAc9a,MAC5CuqE,yBACEzvD,EAAU,qBAAqB9a,MAEjCqqE,uBACEvvD,EAAU,wBAAwB9a,SAGtC,SAACwuE,GAAiB,CAChBC,yBACE3zD,EAAU,wBAAwB9a,MAEpC0uE,wBACE5zD,EAAU,uBAAuB9a,SAGrC,SAACwtE,GAAK,CACJC,6BACE3yD,EAAU,kBAAkB9a,MAE9B0tE,yBAA0B5yD,EAAU,YAAY9a,YAIpD,UAAC,EAAA0vE,YAAW,IAACx2C,UAAU,2BAAyB,YAC9C,SAAC,EAAAgK,QAAO,CAAChK,UAAU,mCACnB,SAAC,EAAA9rB,OAAM,IACL1B,UAAWA,EACX+xB,QAzGQ,WAClBsuC,GACEjxD,aAAS,EAATA,EAAWxW,KAAKwD,QAAS,GAC3BokE,EAAe13D,EAAE,oBACjB23D,EAAkB,EAAAlb,iBAAA,SAElBme,GAAa,GAGX/yD,GAAkBA,EAAevB,aAAS,EAATA,EAAWxW,MAKvC+G,EAAUyP,IAHfs0D,GAAa,GACblD,EAAe13D,EAAE,iBAAkB,CAAElQ,KAAMwW,aAAS,EAATA,EAAWxW,QACpD6nE,EAAkB,EAAAlb,iBAAA,SAIxB5lD,EAAUyP,EAEd,EAuFgBjR,QAAQ,UAAS,cAEfkiE,EACI,kCACA,2BAENn/C,WAA+B,YAAnBw/C,GAA4B,UAEvC+C,MAEH,SAAC,EAAA/hE,OAAM,IACLqwB,QAASyxC,EACTrlE,QAAQ,OAAM,cAEZkiE,EACI,kCACA,8BAA4B,UAGjCv3D,EAAE,uCASrB,ECjNam7D,GAA2B,SAACnuD,GACvC,OAAQA,EAAKupC,MACX,IAAK,QAUL,IAAK,YACH,OAAO5pC,OAAOK,EAAKxhB,OATrB,IAAK,YACH,OAAO,SAAQmhB,OAAOK,EAAKxhB,OAAQ,aAAakB,GAAG,SACrD,IAAK,YACH,OAAO,SAAQigB,OAAOK,EAAKxhB,OAAQ,aAAakB,GAAG,SACrD,IAAK,YACH,OAAO,SAAQigB,OAAOK,EAAKxhB,OAAQ,aAAakB,GAAG,SACrD,IAAK,YACH,OAAO,SAAQigB,OAAOK,EAAKxhB,OAAQ,aAAakB,GAAG,SAIzD,E,mNC0Ba0uE,GAAsD,SAAC,G,IAClEC,EAAe,kBACfvzD,EAAkB,qBAClBzB,EAAM,SACNi1D,EAAkB,qBAClBzzD,EAAc,iBACdtB,EAAuB,0BACvBoB,EAAgB,mBAER3H,GAAM,IAAA0F,gBAAe,CAAC,eAAgB,WAAU,EAElD,GAAwC,IAAAjb,UAAuB,CACnE8rD,KAAM,OACN/qD,MAAO,IAFF8qE,EAAe,KAAEC,EAAkB,KAKpC,GACJ,IAAA9rE,UAAoC,CAAE8rD,KAAM,YAAa/qD,OAAQ,IAD5DsrE,EAAwB,KAAEC,EAA2B,KAGtD,GACJ,IAAAtsE,UAA2B,EAAAgyD,iBAAA,SADtB8e,EAAkB,KAAEC,EAAqB,KAE1C,GAA4B,IAAA/wE,WAAkB,GAA7CyM,EAAS,KAAE0jE,EAAY,KACxB,GAAgC,IAAAnwE,UAAiB,IAAhDgtE,EAAW,KAAEC,EAAc,KAC5B,GAA4B,IAAAjtE,UAAgB6wE,GAA3Ch1D,EAAS,KAAEkxD,EAAY,KACxB,GAA0C,IAAA/sE,WAAkB,GAA3DgxE,EAAgB,KAAEC,EAAmB,KACtC,GACJ,IAAAjxE,UAA0B,QADrBotE,EAAoB,KAAEC,EAAuB,KAG9C,GACJ,IAAArtE,UAAmC,aAD9BstE,EAAoB,KAAEC,EAAuB,KAG9C2D,EAAc,WAClB7zD,GAAsBA,GACxB,EAEM+yB,EAAsB,CAC1B,CACE/qC,KAAMkQ,EAAE,cACR47D,WAC6B,MAA3Bt1D,aAAS,EAATA,EAAWxW,KAAKirB,SAChBwgD,IAAuB,EAAA9e,iBAAA,QACzB5jD,WACE,SAACgjE,GAAa,CACZC,aAAcx1D,EACdy1D,kBAAmBvE,EACnB+D,mBAAoBA,EACpB9d,kBAAmB+d,EACnB/D,YAAaA,EACbC,eAAgBA,KAItB,CACE5nE,KAAMkQ,EAAE,cACRg8D,UAAsC,MAA3B11D,aAAS,EAATA,EAAWxW,KAAKirB,QAC3BliB,WACE,SAACojE,GAAc,CACbH,aAAcx1D,EACd41D,mBAAoB1E,EACpBjxD,wBAAyBA,KAI/B,CACEzW,KAAMkQ,EAAE,qBACRg8D,UAAsC,MAA3B11D,aAAS,EAATA,EAAWxW,KAAKirB,QAC3BliB,WACE,SAACsjE,GAAoB,CACnBrF,yBAA0BA,EAC1BC,4BAA6BA,EAC7BT,gBAAiBA,EACjBC,mBAAoBA,EACpBsB,qBAAsBA,EACtBC,wBAAyBA,EACzBC,qBAAsBA,EACtBC,wBAAyBA,KAI/B,CACEloE,KAAMkQ,EAAE,YACRg8D,UAAsC,MAA3B11D,aAAS,EAATA,EAAWxW,KAAKirB,QAC3BliB,WACE,SAACujE,GAAY,CACXC,iBAAkB/1D,EAAU,uBAC5BqB,iBAAkBA,IAGtB20D,eAAgBt8D,EAAE,YAIhBtK,EAAQsK,EAAE,gBAEVu8D,EAAc,WAClB,IAAMC,EACJnH,GAAyBiB,GACrBmG,EAAyBtB,GAC7BrE,GAEI4F,EAAgB,SACjBp2D,GAAS,CACZ,eAAgB,CACdjP,KAAM,KACN7L,MAAOgxE,GAAiC7vD,QAAQ,IAElD,kBAAmB,CAAEtV,KAAM,QAAS7L,MAAOixE,KAE7CE,EAAYD,EACd,EAiBMC,EAAc,SAACD,GACfp2D,EAAU3E,WAAWrO,QAAUiT,EACjCm1D,GAAoB,GACjBr1D,EAAOq2D,EACd,EACA,OACE,8BACGrB,GACC,iCACE,SAAC,EAAA3sC,QAAO,CAAChK,UAAU,mCACnB,UAAC,EAAA4H,YAAW,IACVj3B,QAAS,EAAAy4B,oBAAA,MACTtB,mBAAmB,EAAI,aACX,QAAM,YAGhB,SAACiuC,GAAgB,CACflD,UAAU,EACV1gE,UAAW0lE,EACX7B,aAAc5yD,EACdxB,UAAWA,EACXkxD,aAAcA,EACd3vD,eAAgBA,EAChBtB,wBAAyBA,EACzBuwD,yBAA0BA,EAC1BC,4BAA6BA,EAC7BT,gBAAiBA,EACjBC,mBAAoBA,EACpBsB,qBAAsBA,EACtBC,wBAAyBA,EACzBC,qBAAsBA,EACtBC,wBAAyBA,IAG5ByD,IACC,SAACtG,GAAqB,CACpB7uD,UAAWA,EACXD,OAAQs2D,EACRvoE,YAAaqnE,EACbpH,eAAgBqH,YAMxB,UAAC,EAAApvC,YAAW,IACVj3B,QAAS,EAAAy4B,oBAAA,MACTz2B,KAAM,EAAAulE,iBAAA,OACNpwC,mBAAmB,EAAI,aACX,QAAM,YAElB,SAAC,EAAAqwC,OAAM,CACLC,aAAc,UAAGpnE,EAAK,UACtBqnE,cAAe,UAAGrnE,EAAK,YACvBmlC,MAAOA,EACP9vC,QAAS4wE,EACTt1D,OAAQk2D,EAAW,cACP,0BACZl7B,QACE,SAAC27B,GAAkB,CACjB9lE,UAAWA,EACX+lE,WA5EkC,SAACz1D,IAC3ClB,aAAS,EAATA,EAAWxW,KAAKwD,QAAS,GAC3BokE,EAAe13D,EAAE,oBACjBw7D,EAAsB,EAAA/e,iBAAA,SAEtBme,GAAa,GAEY/yD,EAAevB,aAAS,EAATA,EAAWxW,MAK5C0X,KAHLozD,GAAa,GACblD,EAAe13D,EAAE,iBAAkB,CAAElQ,KAAMwW,aAAS,EAATA,EAAWxW,QACpD0rE,EAAsB,EAAA/e,iBAAA,QAG9B,EA+Dc8e,mBAAoBA,EACpBI,YAAaA,MAIlBF,IACC,SAACtG,GAAqB,CACpB7uD,UAAWA,EACXD,OAAQA,EACRjS,YAAaqnE,EACbpH,eAAgBqH,SAO9B,E,mNCzNaS,GAA4D,SAAC,G,IACxE7F,EAAe,kBACfC,EAAkB,qBAClBsB,EAAoB,uBACpBC,EAAuB,0BACvBf,EAA2B,8BAC3BD,EAAwB,2BACxBiB,EAAoB,uBACpBC,EAAuB,0BAEfh4D,GAAM,IAAA0F,gBAAe,CAAC,iBAAgB,EAExCyyD,EAA6B,SAAC3sE,GACpB,cAAVA,GACFwsE,EAAwBxsE,GACxBurE,EAA4B,CAAEvrE,OAAQ,EAAG+qD,KAAM,gBAE/CwgB,EAA4B,CAAEvrE,MAAO,EAAG+qD,KAAM,UAC9CyhB,EAAwBxsE,GAE5B,EAEM0xE,EAAgB,SAAC1xE,GACrB,OAAQA,GACN,IAAK,MACH+qE,EAAmB,CAAE/qE,MAAO,EAAG+qD,KAAM,SACrC,MACF,IAAK,OACHggB,EAAmB,CAAE/qE,MAAO,EAAG+qD,KAAM,UACrC,MACF,IAAK,SACHggB,EAAmB,CAAE/qE,MAAO,EAAG+qD,KAAM,SACrC,MACF,IAAK,YACHggB,EAAmB,CAAE/qE,OAAQ,EAAG+qD,KAAM,cAG1CuhB,EAAwBtsE,EAC1B,EAEA,OACE,+BACE,SAAC,EAAA29B,KAAI,IAACkT,SAAU,SAACnzB,GAAU,OAAAA,EAAM+3B,gBAAN,GAAsB,WAC/C,UAAC,EAAAg1B,YAAW,IACVvgE,MAAOsK,EAAE,qBACT5V,GAAG,oBACH8rE,aAAc,MAAI,YAElB,UAAC,EAAArrC,YAAW,YACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAc,UAC5B9qB,EAAE,8BAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,sCAIP,SAAC,EAAAqpB,UAAS,IACRC,QAAQ,sCACRjC,MAAOrnB,EAAE,kBACT44B,YAAU,cAEV,UAAC,EAAAvU,MAAK,IAACC,WAAS,eACd,SAAC,EAAAy0C,MAAK,CACJ7uC,UAAoC,QAAzB2tC,EACX/nE,KAAK,WACLu2B,SAAU,WAAM,OAAA62C,EAAc,MAAd,EAChB71C,MAAM,QAAO,aACF,QACXj9B,GAAG,qBACHoB,MAAOqsE,KAET,SAAC,EAAAkB,MAAK,CACJ7uC,UAAoC,SAAzB2tC,EACX/nE,KAAK,YACLu2B,SAAU,WAAM,OAAA62C,EAAc,OAAd,EAChB71C,MAAM,SAAQ,aACH,SACXj9B,GAAG,qBACHoB,MAAOqsE,KAET,SAAC,EAAAkB,MAAK,CACJ7uC,UAAoC,WAAzB2tC,EACX/nE,KAAK,kBACLu2B,SAAU,WAAM,OAAA62C,EAAc,SAAd,EAChB71C,MAAM,kBAAiB,aACZ,eACXj9B,GAAG,qBACHoB,MAAOqsE,IAEiB,WAAzBA,IACC,SAACxB,GAAsB,CACrBC,gBAAiBA,EACjBC,mBAAoBA,KAGxB,SAAC,EAAAwC,MAAK,CACJ7uC,UAAoC,cAAzB2tC,EACX/nE,KAAK,qBACLu2B,SAAU,WAAM,OAAA62C,EAAc,YAAd,EAChB71C,MAAM,iBAAgB,aACX,YACXj9B,GAAG,qBACHoB,MAAOqsE,YAIb,SAAC,EAAAxuC,UAAS,IACRC,QAAQ,sCACRjC,MAAM,kBAAgB,WAEtB,UAAC,EAAAhD,MAAK,IAACC,WAAS,eACd,SAAC,EAAAy0C,MAAK,CACJ7uC,UAAoC,cAAzB6tC,EACXjoE,KAAK,qBACLu2B,SAAU,WAAM,OAAA8xC,EAA2B,YAA3B,EAChB9wC,MAAM,iBAAgB,aACX,YACXj9B,GAAG,qBACHoB,MAAOusE,KAET,SAAC,EAAAgB,MAAK,CACJ7uC,UAAoC,WAAzB6tC,EACXjoE,KAAK,kBACLu2B,SAAU,WAAM,OAAA8xC,EAA2B,SAA3B,EAChB9wC,MAAM,cAAa,aACR,cACXj9B,GAAG,qBACHoB,MAAOusE,IAEiB,WAAzBA,IACC,SAAClB,GAAmB,CAClBC,yBAA0BA,EAC1BC,4BAA6BA,mBAS/C,E,sZC1JakF,GAAgD,SAAC,G,IAC5DH,EAAY,eACZI,EAAkB,qBAClB31D,EAAuB,0BAEfvG,GAAM,IAAA0F,gBAAe,CAAC,iBAAgB,EAyC9C,OACE,SAAC,EAAAyjB,KAAI,WACH,UAAC,EAAA8sC,YAAW,IAACvgE,MAAOsK,EAAE,cAAe5V,GAAG,aAAa8rE,aAAc,MAAI,YACrE,UAAC,EAAArrC,YAAW,YACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAc,UAAG9qB,EAAE,sBACpC,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAAG9qB,EAAE,8BAG1C,SAAC,EAAAqpB,UAAS,IACRhC,MAAM,aACNiC,QAAQ,uBACRgQ,WACEwiC,EAAan6D,WAAWrO,QAAUiT,EAC9BvG,EAAE,sBACFA,EAAE,yBAER42B,UACEklC,EAAan6D,WAAWrO,QAAUiT,EAC9B,UACA,UAENqyB,YAAU,cAEV,SAAC,EAAA0/B,YAAW,CACVG,OA/DW,WACnB,IAAMG,EAAgB,SACjBkD,EAAan6D,YAAU,IAC1B,CAAEqG,UAAW8zD,EAAan6D,WAAWrO,U,GAEvC4oE,EAAmB,SACdJ,GAAY,CACfn6D,WAAYi3D,IAEhB,EAuDUD,QArDY,WACZ,IAAAh3D,EAAem6D,EAAY,WAC7BlD,EAAgBj3D,EAAW6tC,MAAM,EAAG7tC,EAAWrO,OAAS,GAC9D4oE,EAAmB,SACdJ,GAAY,CACfn6D,WAAYi3D,IAEhB,EA+CUptE,MAC4C,GAA1C4hD,OAAO0uB,EAAan6D,WAAWrO,QAC3B,GACA85C,OAAO0uB,EAAan6D,WAAWrO,QAErCilE,UAAU,QACVlyC,SAnD2D,SACnEnd,GAEA,IAAMi0D,EAAoB/vB,OAAQlkC,EAAM2mB,OAA4BrkC,OAC9DotE,EAAgBv0D,MAAMC,KAC1B,CAAEhR,OAAQ6pE,IACV,SAACrgE,EAAG6T,GAAC,MAAK,OAA0B,QAA1B,EAAAmrD,EAAan6D,WAAWgP,UAAE,QAAI,CAAE3I,UAAW2I,EAAG,IAE1DurD,EAAmB,SACdJ,GAAY,CACfn6D,WAAYi3D,IAEhB,EAwCUwE,WAAY,GACZC,OAxCK,WACTvB,EAAan6D,WAAWrO,OAAS,GACnC4oE,EAAmB,SAAKJ,GAAY,CAAEn6D,WAAY,CAAC,CAAEqG,UAAW,MAEpE,EAqCUinC,IAAK,YAMjB,E,mNCxFamtB,GAA4C,SAAC,G,IACxDC,EAAgB,mBAChB10D,EAAgB,mBAER3H,GAAM,IAAA0F,gBAAe,CAAC,iBAAgB,EAE9C,OACE,SAAC,EAAAyjB,KAAI,WACH,UAAC,EAAA8sC,YAAW,IACVvgE,MAAOsK,EAAE,YACT5V,GAAG,kBACH8rE,aAAc,MAAI,YAElB,UAAC,EAAArrC,YAAW,YACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAc,UAAG9qB,EAAE,qBACpC,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAAG9qB,EAAE,0BAE1C,SAAC,EAAAypB,MAAK,CACJp0B,QAAQ,OACRq0B,UAAQ,EACRh0B,MAEMsK,EADgB,SAApB2H,EACM,gCACA,qCAYV,SAAC2tD,GAAoB,CACnBhsC,QAAQ,sBACRisC,aAAa,mCACbn7B,WAAW,2BACXo7B,WAAY6G,EAAiBjhD,WAC7Bq6C,YAAaz1D,EAAE,mCACf01D,cAAe11D,EAAE,8BAK3B,E,mNCxCa67D,GAA8C,SAAC,G,IAC1DC,EAAY,eACZC,EAAiB,oBACjBR,EAAkB,qBAClB9d,EAAiB,oBACjBga,EAAW,cACXC,EAAc,iBAEN13D,GAAM,IAAA0F,gBAAe,CAAC,iBAAgB,EACtC0xD,EAAiBD,KAAkB,aAErCrZ,GAAkB,IAAA3yD,cACtB,SAACyrE,GACC,IAAMlpC,EAAe0pC,EAAaR,GAC9BlpC,GACFgqC,EAAehqC,GACf+vB,EAAkB,EAAAhB,iBAAA,QAElBgB,EAAkB,EAAAhB,iBAAA,QAEtB,GACA,CAACib,EAAgBja,EAAmB2Z,IAYtC,OATA,IAAA7rE,YAAU,WACRuyD,EAAgBge,EAAahsE,KAC/B,GAAG,CAACgsE,EAAahsE,KAAMguD,KAQrB,SAAC,EAAA30B,KAAI,IAACkT,SAAU,SAACnzB,GAAU,OAAAA,EAAM+3B,gBAAN,GAAsB,WAC/C,UAAC,EAAAg1B,YAAW,IAACvgE,MAAOsK,EAAE,cAAe5V,GAAG,aAAa8rE,aAAc,MAAI,YACrE,UAAC,EAAArrC,YAAW,YACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAc,UAAG9qB,EAAE,uBACpC,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,OAAkB,UAChC9qB,EAAE,+BAGP,SAAC,EAAAqpB,UAAS,IACRhC,MAAOrnB,EAAE,cACTspB,QAAQ,uBACRgQ,WAAYt5B,EAAE,0BACdo4B,kBAAmBq/B,EACnB7gC,UAAW2kC,EACX3iC,YAAU,cAEV,SAAC,EAAArP,UAAS,CACRiF,OAAQ,aACRoK,YAAU,EACVvhC,KAAK,OACLjN,GAAG,wBACH0F,KAAK,kBACLtE,MAAOswE,EAAahsE,KACpBu2B,SA7BoB,SAAC76B,GAC7BsyD,EAAgBtyD,GAChBuwE,EAAkB,SAAKD,GAAY,CAAEhsE,KAAMtE,IAC7C,EA2BU0tC,YAAal5B,EAAE,cACf42B,UAAW2kC,aAMvB,E,mNC1EayB,GAA8C,SAAC,G,IAC1D9lE,EAAS,YACT+lE,EAAU,aACVtB,EAAW,cACXJ,EAAkB,qBAEVv7D,GAAM,IAAA0F,gBAAe,CAAC,eAAgB,WAAU,EAExD,OACE,SAAC,EAAA43D,aAAY,WACX,SAAC,EAAAC,sBAAqB,UACnB,SAAC,G,IAAEC,EAAU,aAAEh2D,EAAM,SAAEi2D,EAAM,SAC5B,OAAID,EAAW1tE,MAAQkQ,EAAE,eAErB,iCACE,SAAC,EAAApH,OAAM,IACLvD,QAAQ,UACRgC,KAAK,SACLH,UAAWA,EACX+xB,QAAS,WAAM,OAAAg0C,EAAWz1D,EAAX,EACf4Q,WACEmjD,GAAsB,EAAA9e,iBAAA,QAIxBjuB,OAAQ,eAAa,UAEpBxuB,EAAE,mBAEL,SAAC,EAAApH,OAAM,IACL41B,OAAQ,cACRn5B,QAAQ,YACR+iB,YAAY,GAAI,UAEfpY,EAAE,mBAEL,SAAC,EAAApH,OAAM,IACL41B,OAAQ,gBACRn5B,QAAQ,OACR4zB,QAAS0yC,GAAW,UAEnB37D,EAAE,uBAMY,YAAnBw9D,EAAW1tE,MAEX,iCACE,SAAC,EAAA8I,OAAM,IACLvD,QAAQ,UACRgC,KAAK,SACL4xB,QAASzhB,EACTgnB,OAAQ,iBAAe,UAEtBxuB,EAAE,qBAEL,SAAC,EAAApH,OAAM,IACL41B,OAAQ,cACRn5B,QAAQ,YACR4zB,QAASw0C,GAAM,UAEdz9D,EAAE,mBAEL,SAAC,EAAApH,OAAM,IACL41B,OAAQ,gBACRn5B,QAAQ,OACR4zB,QAAS0yC,GAAW,UAEnB37D,EAAE,wBAMT,iCACE,SAAC,EAAApH,OAAM,IACL41B,OAAQ,cACRn5B,QAAQ,UACRgC,KAAK,SACL4xB,QAASzhB,GAAM,UAEdxH,EAAE,mBAEL,SAAC,EAAApH,OAAM,IACL41B,OAAQ,cACRn5B,QAAQ,YACR4zB,QAASw0C,GAAM,UAEdz9D,EAAE,mBAEL,SAAC,EAAApH,OAAM,IACL41B,OAAQ,gBACRn5B,QAAQ,OACR4zB,QAAS0yC,GAAW,UAEnB37D,EAAE,sBAIX,KAIR,ECvGa09D,GAA8C,SAAC,G,IAC1Dr2D,EAAS,YACTY,EAAa,gBACbC,EAAiB,oBACjB7B,EAAM,SACN0B,EAAkB,qBAClBD,EAAkB,qBAClBD,EAAc,iBACdtB,EAAuB,0BACvBoB,EAAgB,mBAEV,GAAwC,IAAAld,WAAkB,GAAzD4wE,EAAe,KAAEsC,EAAkB,KAE1C,OACE,iCACE,SAAC7I,GAAe,CACdC,eAAgBsG,EAChBh0D,UAAWA,EACXa,kBAAmBA,EACnBD,cAAeA,EACf+sD,iBAAkB2I,KAEpB,SAACvC,GAAiB,CAChBC,gBAAiBA,EACjBvzD,mBAAoBA,EACpBzB,OAAQA,EACRi1D,mBAAoBvzD,EACpBF,eAAgBA,EAChBtB,wBAAyBA,EACzBoB,iBAAkBA,MAI1B,E,mNC1Bai2D,GAET,SAAC,G,IAAE98D,EAAK,QAAE3M,EAAQ,WAAEkS,EAAM,SAAEE,EAAuB,0BAC/Cs3D,EAA0BxnB,GAC9Bv1C,EAAM,gBAAgBtV,OAElBsyE,EAAmBjnB,GAAkB/1C,EAAM,mBAAmBtV,OAC9D,GAAwC,IAAAf,UAAuB,CACnE8rD,KACEz1C,EAAM,gBAAgBtV,OAASmhB,QAAQ,GAClCkxD,EAAwBtnB,KACzB,OACN/qD,MACEsV,EAAM,gBAAgBtV,OAASmhB,QAAQ,GACnCygC,OAAOywB,EAAwBryE,OAC/B,IARD8qE,EAAe,KAAEC,EAAkB,KAWpC,GACJ,IAAA9rE,UAAoC,CAClC8rD,KACEz1C,EAAM,mBAAmBtV,OAASmhB,QAAQ,GACrCmxD,EAAiBvnB,KAClB,QACN/qD,MACEsV,EAAM,mBAAmBtV,OAASmhB,QAAQ,GACtCygC,OAAO0wB,EAAiBtyE,OACxB,IATHsrE,EAAwB,KAAEC,EAA2B,KAYtD,GACJ,IAAAtsE,UACEqW,EAAM,gBAAgBtV,OAASmhB,QAAQ,GAAK,YAAc,UAFvDkrD,EAAoB,KAAEC,EAAuB,KAK9C,GACJ,IAAArtE,UACEqW,EAAM,mBAAmBtV,OAASmhB,QAAQ,GAAK,YAAc,UAF1DorD,EAAoB,KAAEC,EAAuB,KAK9C,GAA4B,IAAAvtE,UAAgBqW,GAA3CwF,EAAS,KAAEkxD,EAAY,KAExB,GAA0C,IAAA/sE,WAAkB,GAA3DgxE,EAAgB,KAAEC,EAAmB,KAyB5C,OACE,UAAC,EAAApvC,YAAW,IACVj3B,QAAS,QACTqvB,UAAW,mBACX8H,mBAAmB,EAAI,aACX,QAAM,YAElB,SAACiuC,GAAgB,CACflD,UAAU,EACV1gE,UA1Bc,WAClB,IAPmB6lE,EAObF,EACJnH,GAAyBiB,GACrBmG,EAAyBtB,GAC7BrE,GAViB4F,EAYG,SACjBp2D,GAAS,CACZ,eAAgB,CACdjP,KAAM,KACN7L,MAAOgxE,GAAiC7vD,QAAQ,IAElD,kBAAmB,CAAEtV,KAAM,QAAS7L,MAAOixE,KAjBzCn2D,EAAU3E,WAAWrO,QAAUiT,EACjCm1D,GAAoB,GACjBr1D,EAAOq2D,EAkBd,EAYMhC,aAAcvmE,EACdmS,UAAWA,EACXkxD,aAAcA,EACdjxD,wBAAyBA,EACzBuwD,yBAA0BA,EAC1BC,4BAA6BA,EAC7BT,gBAAiBA,EACjBC,mBAAoBA,EACpBsB,qBAAsBA,EACtBC,wBAAyBA,EACzBC,qBAAsBA,EACtBC,wBAAyBA,IAE1ByD,IACC,SAACtG,GAAqB,CACpB7uD,UAAWA,EACXD,OAAQA,EACRjS,YAAaqnE,EACbpH,eAAgBqH,OAK1B,E,mNCxFaqC,GAAiE,SAAC,G,IAC7Ej9D,EAAK,QACLe,EAAe,kBACfC,EAAe,kBAEP9B,GAAM,IAAA0F,gBAAe,CAAC,iBAAgB,EAC9C,OACE,SAAC,EAAA4mB,YAAW,IACVj3B,QAAS,QACTqvB,UAAW,mBACX8H,mBAAmB,EAAI,aACX,QAAM,WAElB,UAAC,EAAAuuC,QAAO,IAACz2C,WAAS,eAChB,SAAC61C,GAAqB,CAACC,eAAe,KACtC,SAAC,EAAAY,eAAc,WACb,SAAC,EAAAC,UAAS,IACRzuC,mBAAmB,EAAI,aACX,OACZpiC,GAAG,oBACHs6B,UAAW,eAAa,WAExB,SAAC,EAAA4H,YAAW,IAACyB,QAAS,CAAE1Y,QAAS,cAAa,WAC5C,UAAC,EAAAkzB,MAAK,YACJ,UAAC,EAAAC,UAAS,IAACjc,UAAQ,eACjB,UAAC,EAAApD,KAAI,IAAC/+B,GAAG,cAAY,YACnB,UAAC,EAAA6rE,YAAW,IACVvgE,MAAOsK,EAAE,sBACT5V,GAAG,qBACH8rE,aAAc,MAAI,YAElB,SAAC,EAAArrC,YAAW,WACV,SAAC,EAAAR,KAAI,IACHxxB,UAAW,EAAAiyB,aAAA,EACXpG,UAAU,gBAAc,UAEvB1kB,EAAE,0BAIP,SAACs1D,GAAoB,CACnBhsC,QAAQ,aACRisC,aAAcv1D,EAAE,cAChBo6B,WAAYp6B,EAAE,cACdw1D,WAAY10D,EAAMhR,KAClB2lE,YAAaz1D,EAAE,0BACf01D,cAAe11D,EAAE,iBAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,aACRisC,aAAcv1D,EAAE,cAChBo6B,WAAYp6B,EAAE,cACdw1D,WAAY10D,EAAMa,WAAWrO,OAAO8nB,WACpCq6C,YAAaz1D,EAAE,0BACf01D,cAAe11D,EAAE,iBAYnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,sBACRisC,aAAcv1D,EAAE,uBAChBo6B,WAAYp6B,EAAE,uBACdw1D,WAAY10D,EAAM,uBAAuBsa,WACzCq6C,YAAaz1D,EAAE,mCACf01D,cAAe11D,EAAE,0BAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,iBACRisC,aAAcv1D,EAAE,kBAChBo6B,WAAYp6B,EAAE,kBACdw1D,WAAY7e,GACV71C,EAAM,gBAAgBtV,OAExBiqE,YAAaz1D,EAAE,8BACf01D,cAAe11D,EAAE,kBACjBg+D,eAAe,KAGjB,SAAC1I,GAAoB,CACnBhsC,QAAQ,iBACRisC,aAAcv1D,EAAE,kBAChBo6B,WAAYp6B,EAAE,kBACdw1D,WAAY5e,GACV91C,EAAM,mBAAmBtV,OAE3BkqE,cAAe11D,EAAE,kBACjBy1D,YAAaz1D,EAAE,8BACfg+D,eAAe,SAGnB,SAACrE,GAAO,CACNC,2BACE94D,EAAM,qBAAqBtV,MAE7BquE,4BACE/4D,EAAM,0BAERg5D,+BACEh5D,EAAM,uCAAuCtV,SAGjD,UAAC,EAAAyqE,YAAW,IAACvgE,MAAOsK,EAAE,OAAQ5V,GAAG,MAAM8rE,aAAc,MAAI,YACvD,SAAC,EAAArrC,YAAW,WACV,UAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAc,WAC5B9qB,EAAE,qBACH,SAAC,EAAAqqB,KAAI,IACHxxB,UAAW,EAAAiyB,aAAA,MACXpG,UAAU,qBAAmB,UAE5B1kB,EAAE,mCAKT,SAACs1D,GAAoB,CACnBhsC,QAAQ,iBACRisC,aAAcv1D,EAAE,kBAChBo6B,WAAYp6B,EAAE,kBACdw1D,WAAY10D,EAAM,kBAClB20D,YAAaz1D,EAAE,8BACf01D,cAAe11D,EAAE,qBAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,wBACRisC,aAAcv1D,EAAE,yBAChBo6B,WAAYp6B,EAAE,yBACdw1D,WAAY10D,EACV,uBACAtV,MAAM4vB,WACRq6C,YAAaz1D,EAAE,qCACf01D,cAAe11D,EAAE,4BAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,sBACRisC,aAAcv1D,EAAE,uBAChBo6B,WAAYp6B,EAAE,uBACdw1D,WAAY10D,EACV,6BACAsa,WACFq6C,YAAaz1D,EAAE,mCACf01D,cAAe11D,EAAE,0BAGnB,SAACs1D,GAAoB,CACnBhsC,QAAQ,0BACRisC,aAAcv1D,EAAE,2BAChBo6B,WAAYp6B,EAAE,2BACdw1D,WAAY10D,EACV,yBACAtV,MAAM4vB,WACRq6C,YAAaz1D,EAAE,uCACf01D,cAAe11D,EAAE,kCAGrB,SAAC+5D,GAAW,KACZ,SAACnE,GAAO,CACNE,sBAAuBh1D,EAAM,iBAAiBtV,MAC9CwqE,mBAAoBl1D,EAAM,cAActV,MACxCuqE,yBACEj1D,EAAM,qBAAqBtV,MAE7BqqE,uBACE/0D,EAAM,wBAAwBtV,SAGlC,SAACwuE,GAAiB,CAChBC,yBACEn5D,EAAM,wBAAwBtV,MAEhC0uE,wBACEp5D,EAAM,uBAAuBtV,SAGjC,SAACwtE,GAAK,CACJC,6BACEn4D,EAAM,kBAAkBtV,MAE1B0tE,yBAA0Bp4D,EAAM,YAAYtV,aAIhD,SAAC,EAAAkjC,QAAO,CAAChK,UAAU,6BAEnB,UAAC,EAAAmG,YAAW,YACV,SAAC,EAAAR,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,GAAiB1gC,GAAG,UAAQ,UAC1C4V,EAAE,iCAEL,SAAC,EAAAqqB,KAAI,IAACxxB,UAAW,EAAAiyB,aAAA,EAAgBpG,UAAU,gBAAc,UACtD1kB,EAAE,yBAEL,SAAC,EAAApH,OAAM,CACLvD,QAAQ,SAAQ,cACJ,6BACZwD,UAAW,SAAC4M,GAAU,OACpB,SAAC,EAAA9M,KAAI,MAAK8M,EAAK,CAAE/Y,GAAImV,GAAe,UACjC7B,EAAE,kBAFe,YAQ5B,SAAC,EAAAwoC,UAAS,WACR,SAAC,EAAA5vC,OAAM,CACLvD,QAAQ,UAAS,cACL,2BACZwD,UAAW,SAAC4M,GAAU,OACpB,SAAC,EAAA9M,KAAI,MAAK8M,EAAK,CAAE/Y,GAAIoV,GAAe,UACjC9B,EAAE,gBAFe,uBAc1C,E,mNC9Pai+D,GAAoC,SAAC,G,IAChD7lD,EAAU,aACVzhB,EAAQ,WACR3G,EAAK,QACLP,EAAa,gBAELuQ,GAAM,IAAA0F,gBAAe,SAAQ,EAC/B,GAAsB,IAAAjb,WAAkB,GAAvCgM,EAAM,KAAE6vB,EAAS,KAWxB,SAAS43C,EAAczlE,QAAA,IAAAA,IAAAA,EAAA,IACrB,IAAM0lE,EAAe,IAAItgB,OAAOplD,EAAQ,KASxC,OAPa,KAAXA,EACI9B,EAAS8B,QACP,SAACY,GACC,OAAA8kE,EAAa1wC,KAAKp0B,EAAQ5B,cAC1B0mE,EAAa1wC,KAAKp0B,EAAQjP,GAD1B,IAGJuM,GACkBY,KAAI,SAAC8B,GAAY,OACvC,SAAC,EAAAiuB,aAAY,IAEX97B,MAAO6N,EAAQjP,GACfoL,YAAa6D,EAAQ5B,aAAW,UAE/B4B,EAAQjP,KAJJiP,EAAQjP,GAFwB,GAS3C,CAEA,OACE,SAAC,EAAAu8B,OAAM,IACLv8B,GAAG,iCACHiL,QAAS,EAAA2xB,cAAA,UACTH,SAlCa,SAACl8B,GAChB27B,EAAU37B,EACZ,EAiCIytB,WAAYA,EACZ3hB,OAAQA,EACRwwB,gBAAiBjnB,EAAE,uBACnB88C,aAAa,EACbC,WAAY/8C,EAAE,4BACdmnB,aAAa,SACbyoB,UAAW,IACX1oB,WAAYl3B,EACZ82B,SAvCsC,SAAChqB,EAAG9M,GAC5CP,EAAcO,GACds2B,GAAU,EACZ,EAqCIupB,SAAU,SAAC/yC,EAAGtR,GAAU,OAAA0yE,EAAc1yE,EAAd,GAAoB,UAE3C0yE,MAGP,E,mNCjDaE,GAA6D,SAAC,G,IACzE9mE,EAAY,eACZX,EAAQ,WACRM,EAAW,cACXJ,EAAS,YACT1C,EAAQ,WAEA6L,GAAM,IAAA0F,gBAAe,CAAC,QAAS,WAAU,EAC3C,GAAwB,IAAAjb,YAAvB4O,EAAO,KAAEglE,EAAU,KACpBC,GAAmB,IAAAtzE,UAEnB8zC,EAA2B,WAAhB7nC,EAEXsnE,GAAiB,IAAApzE,cAAY,WAC7BkO,IACFilE,EAAiBhzE,QAAU+N,EAC3BxC,EAAUwC,GAEd,GAAG,CAACxC,EAAWwC,IAgCf,OACE,SAAC,EAAAuvB,MAAK,IACJx+B,GAAG,qBACHsL,MAAOsK,EAAE,sBACTvJ,QAAQ,EACR1L,QAASoJ,EACTkB,QAAS,SACT0zB,SAAS,MACTC,QAAS,EACP,SAAC,EAAApwB,OAAM,IACLxO,GAAG,iBAEHiL,QAAQ,UACR+iB,WAAY0mB,EACZ7V,QAASs1C,GAAc,UAEtBv+D,EAAE,yBALC,gBAON,SAAC,EAAApH,OAAM,IACLxO,GAAG,gBAEHiL,QAAQ,OACR4zB,QAAS90B,EACTikB,WAAY0mB,GAAQ,UAEnB9+B,EAAE,mBALC,YAOP,WAED,UAAC,EAAAmpB,KAAI,IAACkT,SAAU,SAACl6B,GAAM,OAAAA,aAAC,EAADA,EAAG8+B,gBAAH,GAAmB,WA3D1B,WAClB,OAAQhqC,GACN,IAAK,eACH,OACE,SAAC,EAAAwyB,MAAK,IACJp0B,QAAS,EAAAukC,aAAA,OAAmB,YAClB,SACVlQ,UAAQ,EACRh0B,MAAOsK,EAAE,mCAAiC,UAEzCA,EAAE,mCAAoC,CACrClJ,SAAUwnE,EAAiBhzE,aAInC,IAAK,gBACH,OACE,SAAC,EAAAm+B,MAAK,IACJp0B,QAAS,EAAAukC,aAAA,OAAmB,YAClB,SACVlQ,UAAQ,EACRh0B,MAAOsK,EAAE,+BAA6B,UAErCA,EAAE,gCAAiC,CAClClQ,KAAMwH,OAKlB,CA+BOknE,IACD,SAAC,EAAAn1C,UAAS,IAACC,QAAQ,qBAAqBjC,MAAOrnB,EAAE,kBAAgB,UAC9D1I,MAEH,SAAC,EAAA+xB,UAAS,IAACC,QAAQ,iBAAiBjC,MAAOrnB,EAAE,cAAY,UACtDrJ,GACC,SAACsnE,GAAW,CACV7lD,WAAY0mB,EACZnoC,SAAUA,EACV3G,MAAOqJ,EACP5J,cAAe4uE,KAGjB,SAAC,EAAAxnC,SAAQ,CAACzR,MAAO,kBAM7B,E,mNCxGaq5C,GAET,SAAC,G,IAAEhoE,EAAM,SAAEixB,EAAgB,mBAAE9yB,EAAQ,WAAE4B,EAAW,cAAErC,EAAQ,WACtD6L,GAAM,IAAA0F,gBAAe,wBAAuB,EAEpD,OACE,SAAC,EAAAkjB,MAAK,iBACQ5oB,EAAE,SACdwuB,OAAQ,8BACRn5B,QAAS,EAAAwzB,aAAA,MACTpyB,OAAQA,EACRf,MAAOsK,EAAE,SACTjV,QAASoJ,EACTS,SAAUA,EACV8yB,iBAAkBA,EAClBsB,QAAS,EACP,SAAC,EAAApwB,OAAM,IAELvD,QAAS,EAAAykC,cAAA,QACT7Q,QAASzyB,EACTg4B,OAAQ,6BAA2B,UAElCxuB,EAAE,iBALE,oBAOP,SAAC,EAAApH,OAAM,IAELvD,QAAS,EAAAykC,cAAA,KACT7Q,QAAS90B,EACTq6B,OAAQ,UAAQ,UAEfxuB,EAAE,mBALE,oBAOR,WAED,SAAC,EAAA6F,MAAK,CACJC,GAAI,uBACJC,QAAS,OACTC,WAAY,CACVmvC,MAAM,sBACNupB,IAAI,uBAKd,E,mNCnDaC,GAAkD,WACrD,IAAA3+D,GAAM,IAAA0F,gBAAe,SAAQ,EAErC,OACE,+BACE,SAAC,EAAA4mB,YAAW,IACVj3B,QAAS,EAAAy4B,oBAAA,MACTC,QAAS,CAAE1Y,QAAS,aACpB2Y,iBAAiB,EACjB32B,KAAM,QAAM,WAEZ,SAAC,EAAA42B,MAAK,WACJ,SAAC,EAAAC,UAAS,WACR,UAAC,EAAArD,YAAW,IAACnG,UAAW,6BAA2B,YACjD,SAAC,EAAA2F,KAAI,IAACxxB,UAAU,MAAI,UAAEmH,EAAE,mBACxB,uBAAIA,EAAE,mCAOpB,C,+UClBa4+D,EAET,SAAC,G,IAAElvE,EAAiB,oBACdsQ,GAAM,IAAA0F,gBAAe,SAAQ,EACrC,OACE,UAAC,EAAAigB,WAAU,GAACtwB,QAAS,EAAAuwB,kBAAA,GAAsB6qC,cAAc,GAAI,YAC3D,SAAC,EAAA5qC,eAAc,CAACC,KAAM,EAAAwc,kBACtB,SAAC,EAAAtc,MAAK,GAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,kDAEL,SAAC,EAAAmmB,eAAc,WACb,SAAC,EAAAtgB,MAAK,CACJC,GAAI,QACJC,QAAS,4CACTC,WAAY,EAAC,cAAGijB,QAASv5B,YAKnC,C,wUCjBamvE,EAET,SAAC,G,IAAEvvE,EAAQ,WAAEI,EAAiB,oBACxBsQ,GAAM,IAAA0F,gBAAe,SAAQ,EACrC,OACE,UAAC,EAAAigB,WAAU,GAACtwB,QAAS,EAAAuwB,kBAAA,GAAsB6qC,cAAc,GAAI,YAC3D,SAAC,EAAA5qC,eAAc,CAACC,KAAM,EAAAwc,kBACtB,SAAC,EAAAtc,MAAK,GAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,gDAEL,SAAC,EAAAmmB,eAAc,WACb,SAAC,EAAAtgB,MAAK,CACJC,GAAI,QACJC,QAAS,0CACTC,WAAY,EAAC,cAAGijB,QAASv5B,UAG7B,SAAC,EAAAkJ,OAAM,GAAC41B,OAAO,gBAAgBn5B,QAAQ,UAAU4zB,QAAS35B,GAAQ,UAC/D0Q,EAAE,4DAIX,E,gNCtBa8+D,EAET,SAAC,G,IAAExvE,EAAQ,WAAEI,EAAiB,oBACxBsQ,GAAM,IAAA0F,gBAAe,SAAQ,EACrC,OACE,UAAC,EAAAigB,WAAU,GAACtwB,QAAS,EAAAuwB,kBAAA,GAAsB6qC,cAAc,GAAI,YAC3D,SAAC,EAAA5qC,eAAc,CAACC,KAAM,EAAAwc,kBACtB,SAAC,EAAAtc,MAAK,GAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,sCAEL,SAAC,EAAAmmB,eAAc,WACb,SAAC,EAAAtgB,MAAK,CACJC,GAAI,QACJC,QAAS,gCACTC,WAAY,EAAC,cAAGijB,QAASv5B,UAG7B,SAAC,EAAAkJ,OAAM,GAAC41B,OAAO,gBAAgBn5B,QAAQ,UAAU4zB,QAAS35B,GAAQ,UAC/D0Q,EAAE,kDAIX,E,gNCxBa4tB,EAET,SAAC,G,IAAE5+B,EAAiB,oBACdgR,GAAM,IAAA0F,gBAAe,SAAQ,EACrC,OACE,UAAC,EAAAigB,WAAU,GAACtwB,QAAS,EAAAuwB,kBAAA,GAAsB6qC,cAAc,GAAI,YAC3D,SAAC,EAAA5qC,eAAc,CAACC,KAAM,EAAAipB,cACtB,SAAC,EAAA/oB,MAAK,GAACC,aAAa,KAAKjZ,KAAK,MAAI,UAC/BhN,EAAE,0CAEL,SAAC,EAAAmmB,eAAc,WACb,SAAC,EAAAtgB,MAAK,CACJC,GAAI,QACJC,QAAS,oCACTC,WAAY,EAAC,cAAGijB,QAASj6B,YAKnC,C","sources":["webpack:///./src/routes/control-plane/routesConsts.ts","webpack:///./src/routes/control-plane/DrawerProvider.tsx","webpack:///./src/routes/RedirectOnGateError.tsx","webpack:///./src/useUserControlGate.tsx","webpack:///./src/routes/control-plane/routes/useKafkaInstancesTable.ts","webpack:///./src/routes/control-plane/routes/KafkaInstancesRoute.tsx","webpack:///./src/routes/control-plane/routes/CreateDedicatedKafkaInstanceRoute.tsx","webpack:///./src/routes/control-plane/routes/useCreateDedicatedKafkaCallbacks.ts","webpack:///./src/routes/control-plane/routes/useSelfTermsReviewGate.tsx","webpack:///./src/routes/control-plane/useControlPlaneGate.tsx","webpack:///./src/useAlerts.ts","webpack:///./src/routes/control-plane/routes/DeleteKafkaInstanceRoute.tsx","webpack:///./src/routes/control-plane/routes/TermsAndConditionsRoute.tsx","webpack:///./src/routes/control-plane/routes/ChangeOwnerRoute.tsx","webpack:///./src/routes/control-plane/ControlPlaneRoutes.tsx","webpack:///./src/routes/control-plane/routes/ConnectedControlPlaneHeader.tsx","webpack:///./src/routes/control-plane/routes/DedicatedKafkaInstancesRoute.tsx","webpack:///./src/routes/control-plane/DedicatedControlPlaneRoutes.tsx","webpack:///./src/routes/control-plane/routes/DedicatedClustersRoute.tsx","webpack:///./src/routes/useDedicatedGate.tsx","webpack:///../../packages/consoledot-api/src/queries/useStandardQuota.ts","webpack:///./src/routes/data-plane/routesConsts.ts","webpack:///./src/routes/data-plane/useDataPlaneGate.tsx","webpack:///./src/routes/data-plane/routes/DataPlaneHeaderConnected.tsx","webpack:///./src/routes/data-plane/routes/PermissionsRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicsRoute.tsx","webpack:///./src/routes/data-plane/routes/SettingsRoute.tsx","webpack:///./src/routes/data-plane/routes/DashboardRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupsRoute.tsx","webpack:///./src/routes/data-plane/useTopicGate.tsx","webpack:///./src/routes/data-plane/routes/DataPlaneTopicHeaderConnected.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupsRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicMessagesRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicPropertiesRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicSchemasRoute.tsx","webpack:///./src/routes/data-plane/useConsumerGroupGate.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupResetOffsetRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupViewPartitionRoute.tsx","webpack:///./src/routes/data-plane/useTopicConsumerGroupGate.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupResetOffsetRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupViewPartitionRoute.tsx","webpack:///../../packages/ui/src/components/DeleteKafkaTopic/DeleteKafkaTopic.tsx","webpack:///./src/routes/data-plane/routes/TopicDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicEditPropertiesRoute.tsx","webpack:///./src/routes/data-plane/routes/PermissionsEditRoute.tsx","webpack:///./src/routes/data-plane/routes/PermissionsSelectAccountRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicCreateRoute.tsx","webpack:///./src/routes/data-plane/DataPlaneRoutes.tsx","webpack:///./src/routes/overview/OverviewRoute.tsx","webpack:///./src/routes/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/QuickstartLoader.tsx","webpack:///./src/store/index.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDedicatedClusterSizesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDedicatedClustersFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDedicatedQuotaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/queries/useConsumerGroup.ts","webpack:///../../packages/consoledot-api/src/queries/useConsumerGroups.ts","webpack:///../../packages/consoledot-api/src/queries/useDedicatedClusters.ts","webpack:///../../packages/consoledot-api/src/transformers/kafkaRequestToKafkaInstanceEnhanched.ts","webpack:///../../packages/consoledot-api/src/queries/useCreateInstance.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkaInstanceTransformer.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useProvidersWithRegionsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useStandardQuotaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useProviderRegionSizesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/queries/useKafka.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkas.ts","webpack:///../../packages/consoledot-api/src/queries/useTopic.ts","webpack:///../../packages/consoledot-api/src/queries/useTopics.ts","webpack:///../../packages/consoledot-api/src/queries/useUserAccounts.ts","webpack:///../../packages/consoledot-api/src/queries/useAcls.ts","webpack:///../../packages/consoledot-api/src/queries/useServiceAccounts.ts","webpack:///../../packages/consoledot-api/src/queries/useUser.ts","webpack:///../../packages/consoledot-api/src/queries/useSSOProvider.ts","webpack:///../../packages/consoledot-api/src/queries/useSelfTermsReview.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaKpisFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useMessagesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useTopicsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useTopicsMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/mutations/useCreateDedicatedKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useCreateKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteTopicMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdateKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteConsumerGroupMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useResetConsumerGroupMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeletePermissionsMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdatePermissionsMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useCreateTopicMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdateTopicMutation.ts","webpack:///../../packages/consoledot-api/src/types.ts","webpack:///../../packages/consoledot-api/src/ApiProvider.tsx","webpack:///../../packages/consoledot-api/src/transformers/consumerGroupTransformer.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchConsumerGroup.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchConsumerGroups.ts","webpack:///../../packages/consoledot-api/src/transformers/dedicatedClusterTransformer.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchDedicatedClusters.ts","webpack:///../../packages/consoledot-api/src/utilsAndConstants.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchDedicatedQuota.ts","webpack:///../../packages/consoledot-api/src/transformers/apiSizeToComponentSize.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchDedicatedClusterSizes.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaKpis.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/valuesToQuery.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkas.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchMessages.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchOrganization.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchProviderRegionSizes.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchProvidersWithRegions.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchStandardQuota.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopic.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopicsMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchUserAccounts.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchPermissions.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchServiceAccounts.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchSelfTermsReview.ts","webpack:///../../packages/consoledot-api/src/queryKeys.ts","webpack:///../../packages/consoledot-api/src/transformers/topicTransformer.ts","webpack:///../../packages/consoledot-api/src/useApi.ts","webpack:///../../packages/local-storage-helpers/index.ts","webpack:///../../packages/ui-models/src/models/kafka.ts","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupPopover.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupState.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupByKafka.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupByTopic.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupDetails.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupEmptyState.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/OffsetSelect.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/TopicSelect.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupResetOffset.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/DeleteConsumerGroup.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupDrawer.tsx","webpack:///../../packages/ui/src/hooks/useKafkaLabels.ts","webpack:///../../packages/ui/src/hooks/useTopicLabels.ts","webpack:///../../packages/ui/src/hooks/useConsumerGroupLabels.ts","webpack:///../../packages/ui/src/hooks/useXStateInspector.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/ConsumerGroups.tsx","webpack:///../../packages/ui/src/components/ControlPlaneHeader.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/shared.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/StandardPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/TrialPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateKafkaInstanceMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateKafkaInstanceProvider.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/BillingHelp.tsx","webpack:///../../packages/ui/src/components/Logos/images.ts","webpack:///../../packages/ui/src/components/Logos/AWSLogo.tsx","webpack:///../../packages/ui/src/components/Logos/AzureLogo.tsx","webpack:///../../packages/ui/src/components/Logos/GCPLogo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/BillingTiles.tsx","webpack:///../../packages/ui/src/components/Logos/RedhatLogo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/CloudProviderTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/CloudRegionsSelect.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldAZ.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldCloudProvider.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldCloudRegion.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldInstanceName.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSizeHelperText.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSizeHelperTextOverQuota.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSizeHelperTextTrial.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSize.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FormAlerts.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/InstanceInfo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/InstanceInfoSkeleton.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsLoading.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsDedicatedPlan.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsSystemUnavailable.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/LoadingForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/DedicatedPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateDedicatedKafkaInstanceMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateDedicatedKafkaInstanceProvider.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useCreateDedicatedKafkaInstance.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useDedicatedPlan.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/StandardInstanceForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/DedicatedClusterTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldDedicatedCluster.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/DedicatedInstanceForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/CreateDedicatedKafkaInstance.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceActions.tsx","webpack:///../../packages/ui/src/components/DataPlaneHeader.tsx","webpack:///../../packages/ui/src/components/DataPlaneTopicHeader.tsx","webpack:///../../packages/ui/src/components/DedicatedClusters/components/EmptyStateNoDedicatedClusters.tsx","webpack:///../../packages/ui/src/components/DedicatedClusters/DedicatedClusters.tsx","webpack:///../../packages/ui/src/hooks/useDedicatedClusterLabels.ts","webpack:///../../packages/ui/src/components/DeleteKafkaInstance/DeleteKafkaInstance.tsx","webpack:///../../packages/ui/src/components/I18nProvider.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/DetailsTabAlert.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaDetailsTab.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/SuspendedConnection.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaConnectionTabP2.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/SampleCodeSnippet.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/CodeSnippets.ts","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaSampleCode.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/KafkaInstanceDrawer.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusLabel.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/types.ts","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusProgressStepper.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusPopoverContent.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusPopover.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/SuspendedPopover.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/KafkaInstanceStatus.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/KafkaInstances.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/DateTimePicker.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/FilterGroup.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/LimitSelector.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/utils.ts","webpack:///../../packages/ui/src/components/KafkaTopics/types.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoDataCell.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/MessageDetails.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoDataEmptyState.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoResultsEmptyState.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/OffsetRange.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/PartitionSelector.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/UnknownValuePreview.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/MessageBrowserMachine.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/KafkaMessageBrowser.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceCapacityTable.tsx","webpack:///../../packages/ui/src/components/MarketingPage.tsx","webpack:///../../packages/ui/src/components/KafkaPageV3.tsx","webpack:///../../packages/ui/src/components/KafkaTopics/components/EmptyStateNoTopic.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/types.ts","webpack:///../../packages/ui/src/components/KafkaTopics/KafkaTopics.tsx","webpack:///../../packages/ui/src/components/Metrics/types.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PermissionsDropdown.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceTypeLabel.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/Cells.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/EmptyPermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/SelectAccount.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceName.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceOperation.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourcePermission.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourcePrefixRule.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceType.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ShortcutsTableHead.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/KafkaInstanceManualPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/AssignPermissionsManual.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ProduceTopicRow.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ConsumeTopicShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ManageAccessShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ProduceTopicShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/AssignPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PreCancelModal.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ReviewPermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ViewAccountDetails.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/utils.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/EditPermissions.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateInitialLoading.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateMetricsUnavailable.tsx","webpack:///../../packages/ui/src/components/Metrics/components/MetricsLayout.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardBodyLoading.tsx","webpack:///../../packages/ui/src/components/Metrics/consts.ts","webpack:///../../packages/ui/src/components/Metrics/components/ChartSkeletonLoader.tsx","webpack:///../../packages/ui/src/components/Metrics/components/useChartWidth.tsx","webpack:///../../packages/ui/src/components/Metrics/components/utils.ts","webpack:///../../packages/ui/src/components/Metrics/components/ChartLinearWithOptionalLimit.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartLogSizePerPartition.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartPopover.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartTotalBytes.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoMetricsData.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoMetricsDataForSelection.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoTopics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoTopicSelected.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByPartition.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTime.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTopic.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarRefresh.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByBroker.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarKafkaInstanceMetric.tsx","webpack:///../../packages/ui/src/components/Metrics/components/BrokerToggle.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartPartitionLogSizePerBroker.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardUsedDiskSpaceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardKafkaInstanceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardKpi.tsx","webpack:///../../packages/ui/src/components/Metrics/machines/KafkaInstanceMetricsMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/TopicsMetricsMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/MetricsKpiMachine.ts","webpack:///../../packages/ui/src/components/Metrics/KafkaInstanceMetricsProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/MetricsKpiProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/TopicsMetricsProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/useKafkaInstanceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/useTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/PartitionCard.tsx","webpack:///../../packages/ui/src/components/Metrics/components/MetricsLagAlert.tsx","webpack:///../../packages/ui/src/components/Metrics/Metrics.tsx","webpack:///../../packages/ui/src/components/Metrics/useMetricsKpi.tsx","webpack:///../../packages/ui/src/components/Settings/Settings.tsx","webpack:///../../packages/ui/src/components/Topic/components/types.ts","webpack:///../../packages/ui/src/components/Topic/components/CreateTopicHead.tsx","webpack:///../../packages/ui/src/components/Topic/components/PartitionLimitWarning.tsx","webpack:///../../packages/ui/src/components/Topic/components/retentionTimeTransformer.ts","webpack:///../../packages/ui/src/components/Topic/components/TextWithLabelPopover.tsx","webpack:///../../packages/ui/src/components/Topic/components/Cleanup.tsx","webpack:///../../packages/ui/src/components/Topic/components/CustomRetentionMessage.tsx","webpack:///../../packages/ui/src/components/Topic/components/CustomRetentionSize.tsx","webpack:///../../packages/ui/src/components/Topic/components/useValidateTopic.ts","webpack:///../../packages/ui/src/components/Topic/components/CoreConfiguration.tsx","webpack:///../../packages/ui/src/components/Topic/components/Flush.tsx","webpack:///../../packages/ui/src/components/Topic/components/Log.tsx","webpack:///../../packages/ui/src/components/Topic/components/Message.tsx","webpack:///../../packages/ui/src/components/Topic/components/Replication.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvanceIndex.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvanceJumpLinks.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvancePage.tsx","webpack:///../../packages/ui/src/components/Topic/components/retentionSizeTransformer.tsx","webpack:///../../packages/ui/src/components/Topic/components/CreateTopicWizard.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepMessageRetention.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepPartitions.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepReplicas.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepTopicName.tsx","webpack:///../../packages/ui/src/components/Topic/components/WizardCustomFooter.tsx","webpack:///../../packages/ui/src/components/Topic/CreateTopic/CreateTopic.tsx","webpack:///../../packages/ui/src/components/Topic/EditTopicProperties/EditTopicProperties.tsx","webpack:///../../packages/ui/src/components/Topic/TopicProperties/TopicProperties.tsx","webpack:///../../packages/ui/src/components/ChangeKafkaOwner/SelectOwner.tsx","webpack:///../../packages/ui/src/components/ChangeKafkaOwner/ChangeKafkaOwner.tsx","webpack:///../../packages/ui/src/components/TermsAndConditionsDialog/TermsAndConditionsDialog.tsx","webpack:///../../packages/ui/src/components/LegacyControlPlaneHeader.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoDedicatedEntitlement.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoDedicatedInstances.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoInstances.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoResults.tsx"],"sourcesContent":["const NewInstanceSegment = \"create\";\nconst DeleteSegment = \"delete\";\nconst ChangeOwnerSegment = \"change-owner\";\nconst TermsAndConditionsSegment = \"terms-and-conditions\";\nexport const ControlPlaneSpecialSegments = [\n  NewInstanceSegment,\n  TermsAndConditionsSegment,\n];\n\nexport const ControlPlaneRouteRoot = \"/legacy\" as const;\nexport const ControlPlaneRoutePath =\n  `${ControlPlaneRouteRoot}/:id?/:section(${DeleteSegment}|${ChangeOwnerSegment})?` as const;\nexport const ControlPlaneNewInstancePath =\n  `${ControlPlaneRouteRoot}/${NewInstanceSegment}` as const;\nexport const ControlPlaneTermsAndConditionsPath =\n  `${ControlPlaneRouteRoot}/${TermsAndConditionsSegment}` as const;\nexport const ControlPlaneDeleteInstancePath =\n  `${ControlPlaneRouteRoot}/:id/delete` as const;\nexport const ControlPlaneChangeOwnerPath =\n  `${ControlPlaneRouteRoot}/:id/change-owner` as const;\n\nexport const DedicatedControlPlaneRouteRoot = \"/kafkas\" as const;\n\nexport const DedicatedControlPlaneRoutePath =\n  `${DedicatedControlPlaneRouteRoot}` as const;\nexport const DedicatedControlPlaneNewInstanceRoutePath =\n  `${DedicatedControlPlaneRoutePath}/${NewInstanceSegment}` as const;\nexport const DedicatedControlPlaneSelectedInstanceRoutePath = (\n  instanceId: string\n) => `${DedicatedControlPlaneRoutePath}/${instanceId}` as const;\nexport const DedicatedControlPlaneDeleteInstanceRoutePath = (\n  instanceId: string\n) =>\n  `${DedicatedControlPlaneSelectedInstanceRoutePath(\n    instanceId\n  )}/${DeleteSegment}` as const;\nexport const DedicatedControlPlaneChangeOwnerRoutePath = (instanceId: string) =>\n  `${DedicatedControlPlaneSelectedInstanceRoutePath(\n    instanceId\n  )}/${ChangeOwnerSegment}` as const;\n\nexport const DedicatedControlPlaneRouteMatch =\n  `${DedicatedControlPlaneRoutePath}/:id?/:section(${DeleteSegment}|${ChangeOwnerSegment})?` as const;\nexport const DedicatedControlPlaneTermsAndConditionsMatch =\n  `${DedicatedControlPlaneRoutePath}/${TermsAndConditionsSegment}` as const;\nexport const DedicatedControlPlaneNewInstanceMatch =\n  `${DedicatedControlPlaneRoutePath}/${NewInstanceSegment}` as const;\nexport const DedicatedControlPlaneDeleteInstanceMatch =\n  `${DedicatedControlPlaneRoutePath}/:id/${DeleteSegment}` as const;\nexport const DedicatedControlPlaneChangeOwnerMatch =\n  `${DedicatedControlPlaneRoutePath}/:id/${ChangeOwnerSegment}` as const;\n\nexport const DedicatedControlPlaneClustersPath = `/clusters`;\n\nexport type ControlPlaneRouteParams = {\n  id?: string;\n  section?: \"delete\" | \"change-owner\";\n};\n\nexport type ControlPlaneNavigationProps = {\n  instancesHref: string;\n};\n\nexport type DedicatedControlPlaneNavigationProps = {\n  instancesHref: string;\n  clustersHref: string;\n};\n","import { useKafka, useSSOProvider } from \"consoledot-api\";\nimport type { FunctionComponent, MutableRefObject } from \"react\";\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { KafkaInstanceDrawerTab } from \"ui\";\nimport { KafkaInstanceDrawer } from \"ui\";\nimport type { ControlPlaneRouteParams } from \"./routesConsts\";\nimport {\n  ControlPlaneRoutePath,\n  ControlPlaneSpecialSegments,\n  DedicatedControlPlaneRouteMatch,\n} from \"./routesConsts\";\n\ntype DrawerContextProps = {\n  selectedInstance: string | undefined;\n  activeTab: KafkaInstanceDrawerTab;\n  setActiveTab: (tab: KafkaInstanceDrawerTab) => void;\n  isExpanded: boolean;\n  toggleExpanded: (newState?: boolean) => void;\n  onClose: MutableRefObject<(() => void) | undefined>;\n};\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst DrawerContext = createContext<DrawerContextProps>(null!);\n\nexport const DrawerProvider: FunctionComponent = ({ children }) => {\n  const standardMatch = useRouteMatch<ControlPlaneRouteParams>(\n    ControlPlaneRoutePath\n  );\n  const dedicatedMatch = useRouteMatch<ControlPlaneRouteParams>(\n    DedicatedControlPlaneRouteMatch\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"DrawerProvider used outside the expected route\");\n  }\n  const selectedInstance =\n    (match.params.id &&\n      ControlPlaneSpecialSegments.includes(match.params.id)) ||\n    match.params.section !== undefined\n      ? undefined\n      : match.params.id;\n  const { data: instance } = useKafka(selectedInstance);\n  const [isExpanded, setIsExpanded] = useState(\n    selectedInstance !== undefined && match.isExact\n  );\n  const [activeTab, setActiveTab] = useState<KafkaInstanceDrawerTab>(\"details\");\n  const onClose = useRef<() => void | undefined>();\n\n  const { data: tokenEndPointUrl } = useSSOProvider();\n\n  const toggleExpanded = useCallback((newValue: boolean | undefined) => {\n    setIsExpanded((prev) => {\n      const isExpanded = newValue !== undefined ? newValue : !prev;\n      if (isExpanded === false && onClose.current) {\n        onClose.current();\n      }\n      return isExpanded;\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!instance) {\n      setIsExpanded(false);\n    }\n  }, [instance]);\n\n  const value = useMemo(() => {\n    const shouldBeExpanded = selectedInstance !== undefined && isExpanded;\n\n    return {\n      selectedInstance,\n      activeTab,\n      setActiveTab,\n      isExpanded: shouldBeExpanded,\n      toggleExpanded,\n      onClose,\n    };\n  }, [activeTab, isExpanded, selectedInstance, toggleExpanded]);\n\n  return (\n    <DrawerContext.Provider value={value}>\n      <KafkaInstanceDrawer\n        instance={instance}\n        activeTab={activeTab}\n        onTabChange={setActiveTab}\n        isExpanded={isExpanded}\n        onClose={() => toggleExpanded(false)}\n        tokenEndpointUrl={tokenEndPointUrl}\n      >\n        {children}\n      </KafkaInstanceDrawer>\n    </DrawerContext.Provider>\n  );\n};\n\nexport function useDrawer(onClose?: () => void) {\n  const context = useContext(DrawerContext);\n  context.onClose.current = onClose;\n  return context;\n}\n","import { useQueryErrorResetBoundary } from \"consoledot-api\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useEffect } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { Redirect, useLocation } from \"react-router-dom\";\n\nexport const RedirectOnGateError: FunctionComponent<{\n  redirectUrl: string;\n}> = ({ children, redirectUrl }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const { key } = useLocation();\n\n  return (\n    <ErrorBoundary\n      resetKeys={[key]}\n      fallbackRender={() => <RedirectAndResetError redirectUrl={redirectUrl} />}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n};\n\nconst RedirectAndResetError: VoidFunctionComponent<{ redirectUrl: string }> = ({\n  redirectUrl,\n}) => {\n  const { reset } = useQueryErrorResetBoundary();\n  useEffect(() => reset, [reset]);\n  return <Redirect to={redirectUrl} />;\n};\n","import { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { useUser } from \"consoledot-api\";\nimport { useCallback } from \"react\";\n\nexport function useUserControlGate() {\n  const { auth } = useChrome();\n  const getUser = useCallback(async ()=> {\n    const user = await auth.getUser();\n    const username = user?.identity?.user?.username;\n    const isOrgAdmin = user?.identity?.user?.is_org_admin;\n    return {\n      username,\n      isOrgAdmin,\n    }\n  }, [auth]);\n  const { data: userData } = useUser({ getUser, suspense: true });\n  return { userData: userData as NonNullable<typeof userData> };\n}\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport { KafkaInstancesSortableColumns } from \"consoledot-api\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { KafkaInstanceDrawerTab, KafkaInstancesProps } from \"ui\";\nimport { useKafkaLabels } from \"ui\";\nimport type { SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { useDrawer } from \"../DrawerProvider\";\n\nexport type UseKafkaInstancesTableProps = {\n  instancesHref: string;\n  instanceSelectedHref: (id: string) => string;\n  instanceCreationHref: string;\n  instanceDeletionHref: (id: string) => string;\n  instanceChangeOwnerHref: (id: string) => string;\n};\n\nexport function useKafkaInstancesTable({\n  instancesHref,\n  instanceSelectedHref,\n  instanceCreationHref,\n  instanceDeletionHref,\n  instanceChangeOwnerHref,\n}: UseKafkaInstancesTableProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveQuickStart } = useContext(QuickStartContext);\n\n  const { selectedInstance, toggleExpanded, setActiveTab, isExpanded } =\n    useDrawer(\n      useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instancesHref);\n      }, [history, instancesHref])\n    );\n\n  const labels = useKafkaLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const namesChips = useURLSearchParamsChips(\"names\", resetPaginationQuery);\n  const ownersChips = useURLSearchParamsChips(\"owners\", resetPaginationQuery);\n  const statusesChips = useURLSearchParamsChips<SimplifiedStatus>(\n    \"statuses\",\n    resetPaginationQuery\n  );\n\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaInstancesSortableColumns,\n    labels.fields,\n    \"createdAt\",\n    \"desc\"\n  );\n\n  const onClearAllFilters = useCallback(() => {\n    namesChips.clearChained(\n      ownersChips.clearChained(\n        statusesChips.clearChained(setPaginationQuery(1, perPage))\n      ),\n      true\n    );\n  }, [namesChips, ownersChips, perPage, setPaginationQuery, statusesChips]);\n\n  const openDrawer = useCallback(\n    (id: string, tab: KafkaInstanceDrawerTab) => {\n      if (selectedInstance === id && isExpanded) {\n        toggleExpanded(false);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceSelectedHref(id));\n        toggleExpanded(true);\n        setActiveTab(tab);\n      }\n    },\n    [\n      history,\n      instanceSelectedHref,\n      isExpanded,\n      selectedInstance,\n      setActiveTab,\n      toggleExpanded,\n    ]\n  );\n\n  const onDetailsClick: KafkaInstancesProps[\"onDetails\"] = useCallback(\n    (instance) => {\n      openDrawer(instance.id, \"details\");\n    },\n    [openDrawer]\n  );\n\n  const onConnectionsClick: KafkaInstancesProps[\"onDetails\"] = useCallback(\n    (instance) => {\n      openDrawer(instance.id, \"connections\");\n    },\n    [openDrawer]\n  );\n\n  const onCreate = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceCreationHref);\n  }, [history, instanceCreationHref]);\n\n  const onDelete = useCallback<KafkaInstancesProps[\"onDelete\"]>(\n    ({ id }) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(instanceDeletionHref(id));\n    },\n    [history, instanceDeletionHref]\n  );\n  const onChangeOwner = useCallback<KafkaInstancesProps[\"onChangeOwner\"]>(\n    ({ id }) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(instanceChangeOwnerHref(id));\n    },\n    [history, instanceChangeOwnerHref]\n  );\n\n  const onQuickstartGuide = useCallback(\n    () => setActiveQuickStart && setActiveQuickStart(\"getting-started\"),\n    [setActiveQuickStart]\n  );\n\n  return {\n    selectedInstance,\n    page,\n    perPage,\n    setPagination,\n    namesChips,\n    ownersChips,\n    statusesChips,\n    isColumnSortable,\n    sort,\n    sortDirection,\n    onClearAllFilters,\n    onDetailsClick,\n    onConnectionsClick,\n    onCreate,\n    onDelete,\n    onChangeOwner,\n    onQuickstartGuide,\n  };\n}\n","import { useKafkas } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport type { ControlPlaneHeaderProps, KafkaInstancesProps } from \"ui\";\nimport { KafkaInstances, LegacyControlPlaneHeader } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport { useUserControlGate } from \"../../../useUserControlGate\";\nimport { useKafkaInstancesTable } from \"./useKafkaInstancesTable\";\n\nexport type KafkaInstancesRoute = {\n  activeSection: ControlPlaneHeaderProps[\"activeSection\"];\n  instancesHref: string;\n  instanceSelectedHref: (id: string) => string;\n  instanceCreationHref: string;\n  instanceDeletionHref: (id: string) => string;\n  instanceChangeOwnerHref: (id: string) => string;\n} & Pick<KafkaInstancesProps, \"getUrlForInstance\">;\n\nexport const KafkaInstancesRoute: FunctionComponent<KafkaInstancesRoute> = ({\n  activeSection,\n  instancesHref,\n  instanceDeletionHref,\n  instanceSelectedHref,\n  instanceCreationHref,\n  instanceChangeOwnerHref,\n  getUrlForInstance,\n}) => {\n  const {\n    selectedInstance,\n    page,\n    perPage,\n    setPagination,\n    namesChips,\n    ownersChips,\n    statusesChips,\n    isColumnSortable,\n    sort,\n    sortDirection,\n    onClearAllFilters,\n    onDetailsClick,\n    onConnectionsClick,\n    onCreate,\n    onDelete,\n    onChangeOwner,\n    onQuickstartGuide,\n  } = useKafkaInstancesTable({\n    instancesHref,\n    instanceDeletionHref,\n    instanceSelectedHref,\n    instanceCreationHref,\n    instanceChangeOwnerHref,\n  });\n  const { userData } = useUserControlGate();\n  const { data } = useKafkas({\n    page,\n    perPage,\n    name: namesChips.chips,\n    owner: ownersChips.chips,\n    status: statusesChips.chips,\n    sort: sort || \"createdAt\",\n    direction: sortDirection,\n    deployment: \"standard\",\n  });\n\n  return (\n    <>\n      <LegacyControlPlaneHeader />\n      <KafkaInstances\n        columns={\"standard\"}\n        instances={data?.instances}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        names={namesChips.chips}\n        owners={ownersChips.chips}\n        statuses={statusesChips.chips}\n        isColumnSortable={isColumnSortable}\n        onPageChange={setPagination}\n        onSearchName={namesChips.add}\n        onRemoveNameChip={namesChips.remove}\n        onRemoveNameChips={namesChips.clear}\n        onSearchOwner={ownersChips.add}\n        onRemoveOwnerChip={ownersChips.remove}\n        onRemoveOwnerChips={ownersChips.clear}\n        onSearchStatus={statusesChips.toggle}\n        onRemoveStatusChip={statusesChips.remove}\n        onRemoveStatusChips={statusesChips.clear}\n        onClearAllFilters={onClearAllFilters}\n        onChangeOwner={onChangeOwner}\n        onDelete={onDelete}\n        onCreate={onCreate}\n        isRowSelected={({ row }) => row.id === selectedInstance}\n        getUrlForInstance={getUrlForInstance}\n        onDetails={onDetailsClick}\n        onConnection={onConnectionsClick}\n        onClickConnectionTabLink={() => {\n          /* TODO */\n        }}\n        onClickSupportLink={() => {\n          /* TODO */\n        }}\n        onInstanceLinkClick={() => {\n          /* TODO */\n        }}\n        onQuickstartGuide={onQuickstartGuide}\n        canHaveInstanceLink={({ status }) => ReadyStatuses.includes(status)}\n        canOpenConnection={(row) => userData.canOpenConnection(row.status)}\n        canChangeOwner={({ owner, status }) =>\n          userData.canChangeOwner(owner, status)\n        }\n        canDelete={({ owner }) => userData.isUserOwnerOrAdmin(owner)}\n      />\n    </>\n  );\n};\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport { useCreateDedicatedKafkaMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateDedicatedKafkaInstance } from \"ui\";\nimport type { CreateDedicatedKafkaInstanceServices } from \"ui/src/components/CreateKafkaInstance/machines\";\nimport type { DedicatedControlPlaneNavigationProps } from \"../routesConsts\";\nimport { DedicatedControlPlaneRoutePath } from \"../routesConsts\";\nimport { useCreateDedicatedKafkaCallbacks } from \"./useCreateDedicatedKafkaCallbacks\";\nimport { useSelfTermsReviewGate } from \"./useSelfTermsReviewGate\";\n\nexport const CreateDedicatedKafkaInstanceRoute: FunctionComponent<\n  DedicatedControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const callbacks = useCreateDedicatedKafkaCallbacks();\n  const createDedicatedKafkaInstance = useCreateDedicatedKafkaMutation();\n  const qsContext = useContext(QuickStartContext);\n  useSelfTermsReviewGate();\n\n  const onClickKafkaOverview = () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`overview`);\n  };\n\n  const onClickQuickStart = useCallback(() => {\n    qsContext.setActiveQuickStart &&\n      qsContext.setActiveQuickStart(\"getting-started\");\n  }, [qsContext]);\n\n  const onCreate = useCallback<\n    CreateDedicatedKafkaInstanceServices[\"onCreate\"]\n  >(\n    function (instance, onSuccess, onError) {\n      const onOnSuccess = () => {\n        onSuccess();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.push(DedicatedControlPlaneRoutePath);\n      };\n      void createDedicatedKafkaInstance.mutateAsync({\n        instance,\n        onSuccess: onOnSuccess,\n        onError,\n      });\n    },\n    [createDedicatedKafkaInstance, history]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  return (\n    <CreateDedicatedKafkaInstance\n      {...callbacks}\n      isModalOpen={true}\n      onCancel={onCancel}\n      onClickContactUs={onClickKafkaOverview}\n      onClickKafkaOverview={onClickKafkaOverview}\n      onClickQuickStart={onClickQuickStart}\n      onCreate={onCreate}\n      onLearnHowToAddStreamingUnits={onClickKafkaOverview}\n      onLearnMoreAboutSizes={onClickKafkaOverview}\n      subscriptionOptionsHref={document.location.href + \"/../overview\"}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import {\n  useDedicatedClustersFetchQuery,\n  useDedicatedClusterSizesFetchQuery,\n  useDedicatedQuotaFetchQuery,\n} from \"consoledot-api\";\nimport { useCallback } from \"react\";\nimport type { CreateDedicatedKafkaInstanceProps } from \"ui\";\n\nexport function useCreateDedicatedKafkaCallbacks() {\n  const dedicatedQuotaQuery = useDedicatedQuotaFetchQuery(true);\n  const dedicatedClustersQuery = useDedicatedClustersFetchQuery();\n  const dedicatedClusterSizesQuery = useDedicatedClusterSizesFetchQuery();\n\n  const checkDedicatedQuota = useCallback<\n    CreateDedicatedKafkaInstanceProps[\"checkDedicatedQuota\"]\n  >(\n    async ({ onQuotaAvailable, onNoQuotaAvailable, onOutOfQuota }) => {\n      try {\n        const { remainingDedicatedQuota } = await dedicatedQuotaQuery();\n\n        if (remainingDedicatedQuota !== undefined) {\n          if ((remainingDedicatedQuota || 0) === 0) {\n            onOutOfQuota({});\n          } else {\n            onQuotaAvailable({\n              quota: {\n                remainingDedicatedQuota,\n              },\n            });\n          }\n        } else {\n          onNoQuotaAvailable({});\n        }\n      } catch (e) {\n        onNoQuotaAvailable({});\n      }\n    },\n    [dedicatedQuotaQuery]\n  );\n\n  const fetchClusters = useCallback<\n    CreateDedicatedKafkaInstanceProps[\"fetchClusters\"]\n  >(\n    async (plan, { onAvailable, onUnavailable }) => {\n      try {\n        const { clusters } = await dedicatedClustersQuery();\n        onAvailable({\n          clusters,\n          defaultCluster: clusters.length > 0 ? clusters[0] : undefined,\n        });\n      } catch {\n        onUnavailable();\n      }\n    },\n    [dedicatedClustersQuery]\n  );\n\n  const getDedicatedSizes = useCallback<\n    CreateDedicatedKafkaInstanceProps[\"getDedicatedSizes\"]\n  >(\n    (cluster) => dedicatedClusterSizesQuery({ clusterId: cluster.id }),\n    [dedicatedClusterSizesQuery]\n  );\n\n  return {\n    checkDedicatedQuota,\n    fetchClusters,\n    getDedicatedSizes,\n  };\n}\n","import { useSelfTermsReview } from \"consoledot-api\";\n\nexport function useSelfTermsReviewGate() {\n  const { data } = useSelfTermsReview(true);\n  const selfTermsReview = data as NonNullable<typeof data>;\n  if (selfTermsReview.areTermsAccepted === false) {\n    throw new Error(\"Terms and Conditions not accepted\");\n  }\n  return {\n    selfTermsReview,\n  };\n}\n","import { useKafka } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { ControlPlaneRouteParams } from \"./routesConsts\";\nimport {\n  ControlPlaneRoutePath,\n  DedicatedControlPlaneRouteMatch,\n} from \"./routesConsts\";\n\nexport function useControlPlaneGate() {\n  const standardMatch = useRouteMatch<ControlPlaneRouteParams>(\n    ControlPlaneRoutePath\n  );\n  const enterpriseMatch = useRouteMatch<ControlPlaneRouteParams>(\n    DedicatedControlPlaneRouteMatch\n  );\n  const match = standardMatch || enterpriseMatch;\n  if (!match) {\n    throw Error(\"useControlPlaneGate used outside the expected route\");\n  }\n  const { data: instance } = useKafka(match.params.id, true);\n  return { instance: instance as NonNullable<typeof instance>, match };\n}\n","import { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport type { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nexport const useAlerts = () => {\n  const dispatch = useDispatch();\n\n  const addAlert = (\n    variant: \"default\" | \"success\" | \"danger\" | \"warning\" | \"info\" | undefined,\n    message: string,\n    dismissable: boolean | undefined,\n    id?: string | number | undefined,\n    description?: ReactNode\n  ) => {\n    dispatch(\n      addNotification({\n        variant: variant,\n        title: message,\n        description: description,\n        dismissable: dismissable,\n        id: id,\n      })\n    );\n  };\n\n  return { addAlert };\n};\n","import { useDeleteKafkaMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteKafkaInstance } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { useControlPlaneGate } from \"../useControlPlaneGate\";\nimport { useAlerts } from \"../../../useAlerts\";\n\nexport const DeleteKafkaInstanceRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { addAlert } = useAlerts();\n\n  const { instance } = useControlPlaneGate();\n  const { mutateAsync, isLoading: isDeleting } = useDeleteKafkaMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      id: instance.id,\n      onError: () => {\n        addAlert(\n          \"danger\",\n          \"Something went wrong\",\n          true,\n          \"delete-kafka-instance-error\"\n        );\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instancesHref);\n      },\n    });\n  }, [mutateAsync, instance.id, addAlert, history, instancesHref]);\n\n  return (\n    <DeleteKafkaInstance\n      isModalOpen={true}\n      isDeleting={isDeleting}\n      onCancel={onCancel}\n      onDelete={onDelete}\n      instanceName={\n        ReadyStatuses.includes(instance.status) ? instance.name : undefined\n      }\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useSelfTermsReview } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { TermsAndConditionsDialog } from \"ui\";\n\nexport const TermsAndConditionsRoute: FunctionComponent<{\n  createHref: string;\n  cancelHref: string;\n}> = ({ createHref, cancelHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { data: selfTermsReview } = useSelfTermsReview();\n  const baselinedCreateHref =\n    window.location.origin +\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n    (history.createHref({\n      pathname: createHref,\n    }) as string);\n  const baselinedCancelHref =\n    window.location.origin +\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n    (history.createHref({\n      pathname: cancelHref,\n    }) as string);\n  const termsUrl = selfTermsReview?.termsUrl(\n    baselinedCreateHref,\n    baselinedCancelHref\n  );\n  const onViewTerms = useCallback(\n    function () {\n      if (termsUrl !== undefined) {\n        window.location.href = termsUrl;\n      }\n    },\n    [termsUrl]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(cancelHref);\n  }, [history, cancelHref]);\n\n  return (\n    <TermsAndConditionsDialog\n      isOpen={true}\n      onViewTerms={onViewTerms}\n      onCancel={onCancel}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useUpdateKafkaMutation, useUserAccounts } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { ChangeKafkaOwnerProps } from \"ui\";\nimport { ChangeKafkaOwner } from \"ui\";\n\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { useControlPlaneGate } from \"../useControlPlaneGate\";\nimport { useAlerts } from \"../../../useAlerts\";\n\nexport const ChangeOwnerRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useControlPlaneGate();\n  const { data: accounts } = useUserAccounts({});\n  const updateInstance = useUpdateKafkaMutation();\n\n  const { addAlert } = useAlerts();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  const onConfirm = useCallback(\n    (newOwner: string) => {\n      updateInstance.mutate(\n        {\n          id: instance.id,\n          updates: { owner: newOwner },\n        },\n        {\n          onSuccess: () => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            history.replace(instancesHref);\n            addAlert(\n              \"success\",\n              \"Kafka instance owner changed\",\n              true,\n              \"change-owner-success\",\n              `${newOwner} is now the owner of the ${instance.name} Kafka instance.`\n            );\n          },\n        }\n      );\n    },\n    [\n      addAlert,\n      history,\n      instance.id,\n      instance.name,\n      instancesHref,\n      updateInstance,\n    ]\n  );\n\n  const savingState = ((): ChangeKafkaOwnerProps[\"savingState\"] => {\n    if (updateInstance.isLoading) return \"saving\";\n    if (updateInstance.isError) {\n      return updateInstance.error.type === \"invalid-user\"\n        ? \"invalid-user\"\n        : \"unknown-error\";\n    }\n    return \"idle\";\n  })();\n\n  return (\n    <ChangeKafkaOwner\n      currentOwner={instance.owner}\n      accounts={accounts?.accounts.map((a) => ({\n        id: a.username,\n        displayName: a.displayName,\n      }))}\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n      savingState={savingState}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Suspense } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  DeleteKafkaInstanceRoute,\n  KafkaInstancesRoute,\n  TermsAndConditionsRoute,\n} from \"./routes\";\nimport { ChangeOwnerRoute } from \"./routes/ChangeOwnerRoute\";\nimport {\n  ControlPlaneChangeOwnerPath,\n  ControlPlaneDeleteInstancePath,\n  ControlPlaneNewInstancePath,\n  ControlPlaneRoutePath,\n  ControlPlaneRouteRoot,\n  ControlPlaneTermsAndConditionsPath,\n} from \"./routesConsts\";\n\nexport const ControlPlaneRoutes: VoidFunctionComponent = () => {\n  return (\n    <Route path={ControlPlaneRoutePath} exact>\n      <Route path={ControlPlaneTermsAndConditionsPath}>\n        <TermsAndConditionsRoute\n          createHref={ControlPlaneNewInstancePath}\n          cancelHref={ControlPlaneRouteRoot}\n        />\n      </Route>\n      <RedirectOnGateError redirectUrl={ControlPlaneTermsAndConditionsPath}>\n        <Suspense fallback={null}>\n          <Route path={ControlPlaneNewInstancePath}>\n            {/*<CreateKafkaInstanceRoute instancesHref={ControlPlaneRouteRoot} />*/}\n            <Redirect to={ControlPlaneRouteRoot} />\n          </Route>\n        </Suspense>\n      </RedirectOnGateError>\n      <RedirectOnGateError redirectUrl={ControlPlaneRouteRoot}>\n        <Route path={ControlPlaneDeleteInstancePath}>\n          <DeleteKafkaInstanceRoute instancesHref={ControlPlaneRouteRoot} />\n        </Route>\n        <Route path={ControlPlaneChangeOwnerPath}>\n          <ChangeOwnerRoute instancesHref={ControlPlaneRouteRoot} />\n        </Route>\n      </RedirectOnGateError>\n      <KafkaInstancesRoute\n        activeSection={\"instances\"}\n        instancesHref={ControlPlaneRouteRoot}\n        instanceSelectedHref={(id) => `${ControlPlaneRouteRoot}/${id}`}\n        instanceCreationHref={`${ControlPlaneRouteRoot}/create`}\n        instanceDeletionHref={(id) => `${ControlPlaneRouteRoot}/${id}/delete`}\n        instanceChangeOwnerHref={(id) =>\n          `${ControlPlaneRouteRoot}/${id}/change-owner`\n        }\n        getUrlForInstance={(instance) =>\n          `${ControlPlaneRouteRoot}/${instance.id}/details`\n        }\n      />\n    </Route>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport type { ControlPlaneHeaderProps } from \"ui\";\nimport { ControlPlaneHeader } from \"ui\";\nimport type { DedicatedControlPlaneNavigationProps } from \"../routesConsts\";\n\nexport type ConnectedControlPlaneHeaderProps = {\n  activeSection: ControlPlaneHeaderProps[\"activeSection\"];\n} & DedicatedControlPlaneNavigationProps;\n\nexport const ConnectedControlPlaneHeader: VoidFunctionComponent<\n  ConnectedControlPlaneHeaderProps\n> = ({ activeSection, instancesHref, clustersHref }) => {\n  return (\n    <ControlPlaneHeader\n      activeSection={activeSection}\n      sectionsHref={{\n        instances: instancesHref,\n        clusters: clustersHref,\n      }}\n    />\n  );\n};\n","import { Button } from \"@patternfly/react-core\";\nimport { useDedicatedClusters, useKafkas } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { ControlPlaneHeaderProps, KafkaInstancesProps } from \"ui\";\nimport { EmptyStateNoDedicatedEntitlement, KafkaInstances } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport { EmptyStateNoDedicatedInstances } from \"ui/src/components/KafkaInstances/components\";\nimport { useAlerts } from \"../../../useAlerts\";\nimport type { DedicatedControlPlaneNavigationProps } from \"../routesConsts\";\nimport { ConnectedControlPlaneHeader } from \"./ConnectedControlPlaneHeader\";\nimport { useKafkaInstancesTable } from \"./useKafkaInstancesTable\";\n\nexport type KafkaInstancesRoute = {\n  activeSection: ControlPlaneHeaderProps[\"activeSection\"];\n  instanceSelectedHref: (id: string) => string;\n  instanceCreationHref: string;\n  instanceDeletionHref: (id: string) => string;\n  instanceChangeOwnerHref: (id: string) => string;\n} & Pick<KafkaInstancesProps, \"getUrlForInstance\"> &\n  DedicatedControlPlaneNavigationProps;\n\nexport const DedicatedKafkaInstancesRoute: FunctionComponent<\n  KafkaInstancesRoute\n> = ({\n  activeSection,\n  instancesHref,\n  clustersHref,\n  instanceDeletionHref,\n  instanceSelectedHref,\n  instanceCreationHref,\n  instanceChangeOwnerHref,\n  getUrlForInstance,\n}) => {\n  const { addAlert } = useAlerts();\n  const {\n    selectedInstance,\n    page,\n    perPage,\n    setPagination,\n    namesChips,\n    ownersChips,\n    statusesChips,\n    isColumnSortable,\n    sort,\n    sortDirection,\n    onClearAllFilters,\n    onDetailsClick,\n    onConnectionsClick,\n    onCreate,\n    onDelete,\n    onChangeOwner,\n    onQuickstartGuide,\n  } = useKafkaInstancesTable({\n    instancesHref,\n    instanceDeletionHref,\n    instanceSelectedHref,\n    instanceCreationHref,\n    instanceChangeOwnerHref,\n  });\n  const dedicatedClusters = useDedicatedClusters();\n  const { data } = useKafkas({\n    page,\n    perPage,\n    name: namesChips.chips,\n    owner: ownersChips.chips,\n    status: statusesChips.chips,\n    sort: sort || \"createdAt\",\n    direction: sortDirection,\n    deployment: \"clusters\",\n  });\n  const { data: standardInstances } = useKafkas({\n    page: 1,\n    perPage: 1,\n    name: [],\n    owner: [],\n    status: [],\n    sort: \"createdAt\",\n    direction: \"desc\",\n    deployment: \"standard\",\n  });\n  const didAlertForLegacyInstances = useRef(false);\n\n  const hasReadyClusters = dedicatedClusters.isLoading\n    ? false\n    : (dedicatedClusters.data?.clusters || []).filter(\n        (c) => c.status === \"ready\"\n      ).length > 0;\n\n  useEffect(() => {\n    if (\n      standardInstances &&\n      standardInstances.count > 0 &&\n      didAlertForLegacyInstances.current === false\n    ) {\n      didAlertForLegacyInstances.current = true;\n      addAlert(\n        \"info\",\n        \"You have legacy instances\",\n        true,\n        \"legacy-instance\",\n        <>\n          Instances created before March 15th, 2023 are visible{\" \"}\n          <Link to={\"../legacy\"}>here</Link>. Please note that you can't create\n          any more instances of that kind.\n          <br />\n          <Button\n            component={() => <Link to={\"../legacy\"}>Take me there</Link>}\n          />\n        </>\n      );\n    }\n  }, [addAlert, standardInstances]);\n\n  return (\n    <>\n      <ConnectedControlPlaneHeader\n        activeSection={activeSection}\n        instancesHref={instancesHref}\n        clustersHref={clustersHref}\n      />\n      <KafkaInstances\n        columns={\"dedicated\"}\n        instances={data?.instances}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        names={namesChips.chips}\n        owners={ownersChips.chips}\n        statuses={statusesChips.chips}\n        isColumnSortable={isColumnSortable}\n        onPageChange={setPagination}\n        onSearchName={namesChips.add}\n        onRemoveNameChip={namesChips.remove}\n        onRemoveNameChips={namesChips.clear}\n        onSearchOwner={ownersChips.add}\n        onRemoveOwnerChip={ownersChips.remove}\n        onRemoveOwnerChips={ownersChips.clear}\n        onSearchStatus={statusesChips.toggle}\n        onRemoveStatusChip={statusesChips.remove}\n        onRemoveStatusChips={statusesChips.clear}\n        onClearAllFilters={onClearAllFilters}\n        onChangeOwner={onChangeOwner}\n        onDelete={onDelete}\n        onCreate={onCreate}\n        isRowSelected={({ row }) => row.id === selectedInstance}\n        getUrlForInstance={getUrlForInstance}\n        onDetails={onDetailsClick}\n        onConnection={onConnectionsClick}\n        onClickConnectionTabLink={() => {\n          /* TODO */\n        }}\n        onClickSupportLink={() => {\n          /* TODO */\n        }}\n        onInstanceLinkClick={() => {\n          /* TODO */\n        }}\n        onQuickstartGuide={onQuickstartGuide}\n        canHaveInstanceLink={({ status }) => ReadyStatuses.includes(status)}\n        canOpenConnection={({ status }) => ReadyStatuses.includes(status)}\n        canChangeOwner={() => true}\n        canDelete={() => true}\n        emptyStateNoData={\n          hasReadyClusters ? (\n            <EmptyStateNoDedicatedInstances\n              onCreate={onCreate}\n              onQuickstartGuide={onQuickstartGuide}\n            />\n          ) : (\n            <EmptyStateNoDedicatedEntitlement\n              onQuickstartGuide={onQuickstartGuide}\n            />\n          )\n        }\n      />\n    </>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Suspense } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  CreateDedicatedKafkaInstanceRoute,\n  DeleteKafkaInstanceRoute,\n  TermsAndConditionsRoute,\n} from \"./routes\";\nimport { ChangeOwnerRoute } from \"./routes/ChangeOwnerRoute\";\nimport { DedicatedKafkaInstancesRoute } from \"./routes/DedicatedKafkaInstancesRoute\";\nimport {\n  DedicatedControlPlaneChangeOwnerMatch,\n  DedicatedControlPlaneChangeOwnerRoutePath,\n  DedicatedControlPlaneClustersPath,\n  DedicatedControlPlaneDeleteInstanceMatch,\n  DedicatedControlPlaneDeleteInstanceRoutePath,\n  DedicatedControlPlaneNewInstanceMatch,\n  DedicatedControlPlaneNewInstanceRoutePath,\n  DedicatedControlPlaneRouteMatch,\n  DedicatedControlPlaneRoutePath,\n  DedicatedControlPlaneSelectedInstanceRoutePath,\n  DedicatedControlPlaneTermsAndConditionsMatch,\n} from \"./routesConsts\";\n\nexport const DedicatedControlPlaneRoutes: VoidFunctionComponent = () => {\n  return (\n    <Route path={DedicatedControlPlaneRouteMatch} exact={true}>\n      <Route path={DedicatedControlPlaneTermsAndConditionsMatch}>\n        <TermsAndConditionsRoute\n          createHref={DedicatedControlPlaneNewInstanceRoutePath}\n          cancelHref={DedicatedControlPlaneRoutePath}\n        />\n      </Route>\n      <Route path={DedicatedControlPlaneNewInstanceMatch}>\n        <RedirectOnGateError\n          redirectUrl={DedicatedControlPlaneTermsAndConditionsMatch}\n        >\n          <Suspense fallback={null}>\n            <CreateDedicatedKafkaInstanceRoute\n              instancesHref={DedicatedControlPlaneRoutePath}\n              clustersHref={DedicatedControlPlaneClustersPath}\n            />\n          </Suspense>\n          .\n        </RedirectOnGateError>\n      </Route>\n      <RedirectOnGateError redirectUrl={DedicatedControlPlaneRoutePath}>\n        <Route path={DedicatedControlPlaneDeleteInstanceMatch}>\n          <DeleteKafkaInstanceRoute\n            instancesHref={DedicatedControlPlaneRoutePath}\n          />\n        </Route>\n        <Route path={DedicatedControlPlaneChangeOwnerMatch}>\n          <ChangeOwnerRoute instancesHref={DedicatedControlPlaneRoutePath} />\n        </Route>\n      </RedirectOnGateError>\n\n      <DedicatedKafkaInstancesRoute\n        activeSection={\"instances\"}\n        instancesHref={DedicatedControlPlaneRoutePath}\n        clustersHref={DedicatedControlPlaneClustersPath}\n        instanceSelectedHref={DedicatedControlPlaneSelectedInstanceRoutePath}\n        instanceCreationHref={DedicatedControlPlaneNewInstanceRoutePath}\n        instanceDeletionHref={DedicatedControlPlaneDeleteInstanceRoutePath}\n        instanceChangeOwnerHref={DedicatedControlPlaneChangeOwnerRoutePath}\n        getUrlForInstance={(instance) =>\n          `${DedicatedControlPlaneRoutePath}/${instance.id}/details`\n        }\n      />\n    </Route>\n  );\n};\n","import { useDedicatedClusters } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { DedicatedClusters, EmptyStateNoDedicatedEntitlement } from \"ui\";\nimport { useDedicatedGate } from \"../../useDedicatedGate\";\nimport type { DedicatedControlPlaneNavigationProps } from \"../routesConsts\";\nimport { ConnectedControlPlaneHeader } from \"./ConnectedControlPlaneHeader\";\n\nexport const DedicatedClustersRoute: VoidFunctionComponent<\n  DedicatedControlPlaneNavigationProps\n> = ({ clustersHref, instancesHref }) => {\n  const dedicatedGate = useDedicatedGate();\n  const noEntitlement = dedicatedGate === \"standard-only\";\n\n  return (\n    <>\n      <ConnectedControlPlaneHeader\n        activeSection={\"clusters\"}\n        clustersHref={clustersHref}\n        instancesHref={instancesHref}\n      />\n      {noEntitlement ? (\n        <EmptyStateNoDedicatedEntitlement\n          onQuickstartGuide={() => {\n            /* TODO */\n          }}\n        />\n      ) : (\n        <DedicatedClustersWithEntitlementRoute />\n      )}\n    </>\n  );\n};\n\nexport const DedicatedClustersWithEntitlementRoute: VoidFunctionComponent =\n  () => {\n    const { data } = useDedicatedClusters();\n\n    return (\n      <DedicatedClusters\n        clusters={data?.clusters}\n        itemCount={data?.count}\n        page={1}\n        onPageChange={() => {\n          /* TODO */\n        }}\n        onQuickstartGuide={() => {\n          /* TODO */\n        }}\n      />\n    );\n  };\n","import { useDedicatedClusters } from \"consoledot-api\";\nimport { useStandardQuota } from \"consoledot-api/src/queries/useStandardQuota\";\n\nexport function useDedicatedGate() {\n  const quota = useStandardQuota();\n  const dedicated = useDedicatedClusters({ refetch: false });\n\n  if (\n    dedicated.isSuccess &&\n    quota.data &&\n    quota.data.hasStandardQuota === false\n  ) {\n    return \"dedicated-only\" as const;\n  }\n\n  if (dedicated.isError) {\n    return \"standard-only\" as const;\n  }\n\n  if (!quota.isFetched && !dedicated.isFetched) {\n    return \"loading\" as const;\n  }\n\n  return \"standard-and-dedicated\" as const;\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { fetchOrganization, fetchStandardQuota } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useStandardQuota() {\n  const { refetchInterval } = useApiConfiguration();\n  const { account } = useApi();\n  const ams = account();\n\n  return useQuery({\n    queryKey: masQueries.quota.standardAvailable(),\n    queryFn: async () => {\n      const organization = await fetchOrganization((...args) =>\n        ams.apiAccountsMgmtV1CurrentAccountGet(...args)\n      );\n      if (!organization) {\n        return Promise.reject(\"Missing organization id\");\n      }\n      return fetchStandardQuota(\n        (...args) =>\n          ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(...args),\n        organization\n      );\n    },\n    refetchInterval,\n  });\n}\n","import type { ControlPlaneNavigationProps } from \"../control-plane/routesConsts\";\n\nexport const DataPlaneRoutePath = (root: string) =>\n  `${root}/:id/details` as const;\n\nexport const DataPlaneTopicRoutePath = (root: string) =>\n  `${root}/:id/details/topics/:topicName` as const;\n\nexport const DataPlaneConsumerGroupRoutePath = (root: string) =>\n  `${root}/:id/details/consumer-groups/:consumerGroupId` as const;\n\nexport const DataPlaneTopicConsumerGroupRoutePath = (root: string) =>\n  `${root}/:id/details/topics/:topicName/consumer-groups/:consumerGroupId` as const;\n\nexport const DataPlanePermissionsRoutePath = (root: string) =>\n  `${root}/:id/details/acls/select-account/:selectedAccount` as const;\n\nexport const DataPlaneSelectAccountsRoutePath = (root: string) =>\n  `${root}/:id/details/acls/select-account` as const;\n\nexport const DataPlanePermissionsTableRoutePath = (root: string) =>\n  `${root}/:id/details/acls` as const;\n\nexport type DataPlaneRouteParams = { id: string };\nexport type DataPlaneTopicRouteParams = { id: string; topicName: string };\nexport type DataPlaneConsumerGroupRouteParams = {\n  id: string;\n  consumerGroupId: string;\n};\n\nexport type DataPlaneTopicConsumerRouteParams = {\n  id: string;\n  topicName: string;\n  consumerGroupId: string;\n};\n\nexport type DataPlanePermissionsRouteParams = {\n  selectedAccount: string;\n};\n\nexport type DataPlaneNavigationProps = {\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneTopicNavigationProps = {\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n  topicHref: (instanceId: string, topicName: string) => string;\n  deleteTopicHref: (instanceId: string, topicName: string) => string;\n  updateTopicHref: (instanceId: string, topicName: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneConsumerGroupNavigationsProps = {\n  instanceTopicsHref: (instanceId: string) => string;\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n  viewPartitionConsumerGroupHref: (\n    instanceId: string,\n    consumerGroupId: string\n  ) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneTopicConsumerGroupNavigationsProps = {\n  instanceTopicConsumerGroupsHref: (\n    instanceId: string,\n    topicName: string\n  ) => string;\n  viewTopicPartitionConsumerGroupHref: (\n    instanceId: string,\n    consumerGroupId: string,\n    topicName: string\n  ) => string;\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlanePermissionsNavigationProps = {\n  managePermissionsHref: (instanceId: string) => string;\n  editPermissionsHref: (instanceId: string, selectedAccount: string) => string;\n} & ControlPlaneNavigationProps;\n","import { useKafka } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../control-plane/routesConsts\";\nimport type { DataPlaneRouteParams } from \"./routesConsts\";\nimport { DataPlaneRoutePath } from \"./routesConsts\";\n\nexport function useDataPlaneGate() {\n  const standardMatch = useRouteMatch<DataPlaneRouteParams>(\n    DataPlaneRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlaneRouteParams>(\n    DataPlaneRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"useDataPlaneGate used outside the expected route\");\n  }\n  const { data: instance } = useKafka(match.params.id, true);\n  return { instance: instance as NonNullable<typeof instance>, match };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlaneHeaderProps } from \"ui\";\nimport { DataPlaneHeader } from \"ui\";\nimport { useUserControlGate } from \"../../../useUserControlGate\";\nimport { useDrawer } from \"../../control-plane\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\n\nexport const DataPlaneHeaderConnected: VoidFunctionComponent<\n  ControlPlaneNavigationProps & Pick<DataPlaneHeaderProps, \"activeSection\">\n> = ({ instancesHref, activeSection }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveTab, toggleExpanded } = useDrawer();\n\n  const { userData } = useUserControlGate();\n\n  const {\n    instance,\n    match: { url },\n  } = useDataPlaneGate();\n\n  const sectionsHref = {\n    dashboard: `${url}/dashboard`,\n    topics: `${url}/topics`,\n    consumer: `${url}/consumer-groups`,\n    permissions: `${url}/acls`,\n    settings: `${url}/settings`,\n  };\n\n  const onDelete = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/delete`);\n  }, [history, instance, instancesHref]);\n\n  const onChangeOwner = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/change-owner`);\n  }, [history, instance, instancesHref]);\n\n  return (\n    <DataPlaneHeader\n      instancesHref={instancesHref}\n      instanceName={instance?.name || \"\"}\n      activeSection={activeSection}\n      sectionsHref={sectionsHref}\n      onDetails={() => {\n        setActiveTab(\"details\");\n        toggleExpanded(true);\n      }}\n      onConnection={() => {\n        setActiveTab(\"connections\");\n        toggleExpanded(true);\n      }}\n      canOpenConnection={userData.canOpenConnection(instance.status)}\n      canChangeOwner={userData.canChangeOwner(instance.owner, instance.status)}\n      canDelete={userData.isUserOwnerOrAdmin(instance.owner)}\n      onChangeOwner={onChangeOwner}\n      onDelete={onDelete}\n    />\n  );\n};\n","import { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { usePaginationSearchParams } from \"@rhoas/app-services-ui-components\";\nimport {\n  useAcls,\n  useDeletePermissionsMutation,\n  useServiceAccounts,\n  useUserAccounts,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport type { Account } from \"ui\";\nimport { PermissionsTable, PrincipalType } from \"ui\";\nimport type { DataPlanePermissionsNavigationProps } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const PermissionsRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ instancesHref, managePermissionsHref, editPermissionsHref }) => {\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const { instance } = useDataPlaneGate();\n  const { mutateAsync } = useDeletePermissionsMutation();\n  const dispatch = useDispatch();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { data: acls } = useAcls({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    page,\n    perPage,\n  });\n\n  const { data: accounts } = useUserAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: serviceAccounts } = useServiceAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const userAccounts: Account[] | undefined = accounts?.accounts.map(\n    (userAccount) => {\n      return {\n        id: userAccount.username,\n        displayName: userAccount.displayName,\n        email: userAccount.email,\n        principalType: PrincipalType.UserAccount,\n      };\n    }\n  );\n\n  const serviceAccountList: Account[] | undefined =\n    serviceAccounts?.serviceAccounts.map((serviceAccount) => {\n      return {\n        id: serviceAccount.id,\n        displayName: serviceAccount.displayName,\n        principalType: PrincipalType.ServiceAccount,\n      };\n    });\n\n  const allAccounts =\n    serviceAccountList != undefined && userAccounts != undefined\n      ? [...serviceAccountList, ...userAccounts]\n      : undefined;\n\n  const onDeleteSelected = useCallback(\n    (rowIndex: number[]) => {\n      rowIndex.map((value) => {\n        const rowToDelete = acls?.groups[value];\n        void mutateAsync({\n          instanceId: instance.id,\n          adminUrl: instance.adminUrl || \"\",\n          acl: {\n            patternType: rowToDelete?.resource.patternType,\n            permissionType: rowToDelete?.permission.permission,\n            principal: rowToDelete?.account,\n            resourceName: rowToDelete?.resource.resourceName,\n            operation: rowToDelete?.permission.operation,\n            resourceType: rowToDelete?.resource.resourceType,\n          },\n          onError: (_, message) => {\n            dispatch(\n              addNotification({\n                variant: \"danger\",\n                title: message,\n                dismissable: true,\n                id: \"delete-error\",\n              })\n            );\n          },\n          onSuccess: () => {\n            //We have no action yet to confirm if delete was successfull.\n          },\n        });\n      });\n    },\n    [acls?.groups, mutateAsync, instance.id, instance.adminUrl, dispatch]\n  );\n\n  const onDelete = useCallback(\n    (rowIndex: number) => {\n      const rowToDelete = acls?.groups[rowIndex];\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl || \"\",\n        acl: {\n          patternType: rowToDelete?.resource.patternType,\n          permissionType: rowToDelete?.permission.permission,\n          principal: rowToDelete?.account,\n          resourceName: rowToDelete?.resource.resourceName,\n          operation: rowToDelete?.permission.operation,\n          resourceType: rowToDelete?.resource.resourceType,\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"delete-error\",\n            })\n          );\n        },\n        onSuccess: () => {\n          // No action\n        },\n      });\n    },\n    [acls?.groups, mutateAsync, instance.id, instance.adminUrl, dispatch]\n  );\n\n  const onManagePermissionsActionItem = useCallback(\n    (account: string) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(editPermissionsHref(instance.id, account));\n    },\n    [history, instance.id, editPermissionsHref]\n  );\n  const onManagePermission = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"permissions\"}\n      />\n\n      <PermissionsTable\n        allAccounts={allAccounts}\n        permissions={acls?.groups}\n        onDelete={onDelete}\n        onDeleteSelected={onDeleteSelected}\n        onManagePermissions={onManagePermission}\n        onPerPageChange={setPaginationQuery}\n        itemCount={acls?.count}\n        page={page}\n        perPage={perPage}\n        onPageChange={setPagination}\n        onManagePermissionsActionItem={onManagePermissionsActionItem}\n      />\n    </>\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport { KafkaTopicsSortableColumns, useTopics } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { KafkaTopics, useTopicLabels } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { ControlPlaneRouteRoot } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const TopicsRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const labels = useTopicLabels();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useDataPlaneGate();\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const onCreate = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${ControlPlaneRouteRoot}/${instance.id}/details/topics/create-topic`\n    );\n  }, [history, instance.id]);\n\n  const topicChips = useURLSearchParamsChips(\"topic\", resetPaginationQuery);\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaTopicsSortableColumns,\n    labels.fields\n  );\n  const { data } = useTopics({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    filter: topicChips.chips[0],\n    plan: instance.plan,\n  });\n\n  const onDeleteTopic = useCallback(\n    (topicName: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topicName}/delete`\n      );\n    },\n    [history, instance.id]\n  );\n\n  const onEditTopic = useCallback(\n    (topicName: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topicName}/edit`\n      );\n    },\n    [history, instance.id]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"topics\"}\n      />\n      <KafkaTopics\n        topics={data?.topics}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        topicName={topicChips.chips}\n        getUrlFortopic={(row) => `./topics/${row.name}`}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeleteTopic(row.name)}\n        onEdit={(row) => onEditTopic(row.name)}\n        onSearchTopic={(value) => {\n          topicChips.clear();\n          topicChips.toggle(value);\n        }}\n        onClearAllFilters={topicChips.clear}\n        onCreateTopic={onCreate}\n        onPageChange={setPagination}\n        onRemoveTopicChip={topicChips.clear}\n        onRemoveTopicChips={topicChips.clear}\n      />\n    </>\n  );\n};\n","import { useUpdateKafkaMutation } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { SettingsProps } from \"ui\";\nimport { Settings as SettingsComp } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport { useAlerts } from \"../../../useAlerts\";\n\nexport const SettingsRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const { instance } = useDataPlaneGate();\n  const updateInstance = useUpdateKafkaMutation();\n\n  const { addAlert } = useAlerts();\n\n  const onSubmitReAuthentication = useCallback<\n    SettingsProps[\"onSubmitReAuthentication\"]\n  >(\n    async (reauthenticationEnabled) => {\n      try {\n        await updateInstance.mutateAsync({\n          id: instance.id,\n          updates: { reauthentication_enabled: reauthenticationEnabled },\n        });\n        const status = reauthenticationEnabled ? \"on\" : \"off\";\n        addAlert(\n          \"success\",\n          `Connection re-authentication turned ${status} `,\n          true,\n          \"reauthentication-enable-success\"\n        );\n        return reauthenticationEnabled;\n      } catch {\n        addAlert(\n          \"danger\",\n          \"Something went wrong\",\n          true,\n          \"reauthentication-enable-error\",\n          \"We're unable to update connection re-authentication at this time. Try again later.\"\n        );\n        return instance.request.reauthentication_enabled;\n      }\n    },\n    [\n      addAlert,\n      instance.id,\n      instance.request.reauthentication_enabled,\n      updateInstance,\n    ]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"settings\"}\n      />\n      <SettingsComp\n        onSubmitReAuthentication={onSubmitReAuthentication}\n        reauthenticationEnabled={instance.request.reauthentication_enabled}\n      />\n    </>\n  );\n};\n","import {\n  useKafkaFetchQuery,\n  useKafkaKpisFetchQuery,\n  useKafkaMetricsFetchQuery,\n  useTopicsFetchQuery,\n  useTopicsMetricsFetchQuery,\n} from \"consoledot-api\";\nimport {\n  metricsDismissLagAlerts,\n  metricsIsLagAlertsDismissed,\n} from \"local-storage-helpers\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport type { MetricsProps } from \"ui\";\nimport { Metrics } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { ControlPlaneRouteRoot } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const DashboardRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const {\n    instance,\n    match: { params },\n  } = useDataPlaneGate();\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const [hasUserAlreadyClosedAlert, setHasUserAlreadyClosedAlert] = useState(\n    metricsIsLagAlertsDismissed()\n  );\n\n  const onAlertClose = useCallback(() => {\n    setHasUserAlreadyClosedAlert(true);\n    metricsDismissLagAlerts();\n  }, []);\n\n  const queryInstance = useKafkaFetchQuery();\n  const queryKpisMetrics = useKafkaKpisFetchQuery();\n  const queryInstanceMetrics = useKafkaMetricsFetchQuery();\n  const queryTopicMetrics = useTopicsMetricsFetchQuery();\n  const queryTopics = useTopicsFetchQuery();\n\n  const getMetricsKpi: MetricsProps[\"getMetricsKpi\"] = useCallback(async () => {\n    const kpis = await queryKpisMetrics(params.id);\n    return {\n      ...kpis,\n      topicPartitionsLimit: instance.maxPartitions || 0,\n    };\n  }, [instance, params.id, queryKpisMetrics]);\n\n  const getKafkaInstanceMetrics: MetricsProps[\"getKafkaInstanceMetrics\"] =\n    useCallback(\n      async ({ interval, duration, selectedBroker }) => {\n        const [instance, metrics] = await Promise.all([\n          queryInstance(params.id),\n          queryInstanceMetrics({\n            id: params.id,\n            duration,\n            interval,\n            selectedBroker,\n          }),\n        ]);\n        if (!instance) {\n          return Promise.reject(\"Can't retrieve instance\");\n        }\n        return {\n          ...metrics,\n          diskSpaceLimit:\n            (instance.request.max_data_retention_size?.bytes || 0) / 1073741824,\n          connectionsLimit: instance.connections || 0,\n          connectionRateLimit: instance.connectionRate || 0,\n        };\n      },\n      [params.id, queryInstance, queryInstanceMetrics]\n    );\n\n  const getTopicsMetrics: MetricsProps[\"getTopicsMetrics\"] = useCallback(\n    async ({ interval, duration, selectedTopic }) => {\n      const [instance, metrics] = await Promise.all([\n        queryInstance(params.id),\n        queryTopicMetrics({ id: params.id, duration, interval, selectedTopic }),\n      ]);\n      if (!instance || !instance.adminUrl) {\n        return Promise.reject(\"Can't retrieve instance\");\n      }\n      const kafkaTopics = (\n        await queryTopics({\n          id: instance.id,\n          adminUrl: instance.adminUrl,\n          page: 1,\n          perPage: 1000,\n          plan: instance.plan,\n        })\n      ).topics.map((t) => t.name);\n      return {\n        ...metrics,\n        kafkaTopics,\n      };\n    },\n    [params.id, queryInstance, queryTopicMetrics, queryTopics]\n  );\n\n  const onCreateTopic = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${ControlPlaneRouteRoot}/${instance.id}/details/topics/create-topic`\n    );\n  }, [history, instance.id]);\n\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"dashboard\"}\n      />\n      <Metrics\n        onCreateTopic={onCreateTopic}\n        onAlertClose={onAlertClose}\n        hasUserAlreadyClosedAlert={hasUserAlreadyClosedAlert}\n        getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n        getTopicsMetrics={getTopicsMetrics}\n        getMetricsKpi={getMetricsKpi}\n      />\n    </>\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaConsumerGroupSortableColumns,\n  useConsumerGroups,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroups, useConsumerGroupLabels } from \"ui\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const ConsumerGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instancesHref, instanceConsumerGroupsHref }) => {\n  const { instance } = useDataPlaneGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const labels = useConsumerGroupLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const consumerName = useURLSearchParamsChips(\n    \"consumer\",\n    resetPaginationQuery\n  );\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaConsumerGroupSortableColumns,\n    labels.fields\n  );\n  const { data } = useConsumerGroups({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    groupId: consumerName.chips[0],\n  });\n\n  const onDeletConsumerGroup = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/delete`\n      );\n    },\n    [history, instance.id, instanceConsumerGroupsHref]\n  );\n\n  const onViewPartition = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/view-partition`\n      );\n    },\n    [history, instance.id, instanceConsumerGroupsHref]\n  );\n\n  const onClickResetOffset = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/reset-offset`\n      );\n    },\n    [history, instance.id, instanceConsumerGroupsHref]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"consumer\"}\n      />\n      <ConsumerGroups\n        consumers={data?.groups}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        consumerName={consumerName.chips}\n        isRowSelected={() => false}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeletConsumerGroup(row.name)}\n        onSearchConsumer={(value) => {\n          consumerName.clear();\n          consumerName.toggle(value);\n        }}\n        onClearAllFilters={consumerName.clear}\n        onPageChange={setPagination}\n        onRemoveConsumerChip={consumerName.clear}\n        onRemoveConsumerChips={consumerName.clear}\n        onViewPartition={(row) => onViewPartition(row.name)}\n        onViewResetOffset={(row) => onClickResetOffset(row.name)}\n      />\n    </>\n  );\n};\n","import { useTopic } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../control-plane/routesConsts\";\nimport type { DataPlaneTopicRouteParams } from \"./routesConsts\";\nimport { DataPlaneTopicRoutePath } from \"./routesConsts\";\nimport { useDataPlaneGate } from \"./useDataPlaneGate\";\n\nexport function useTopicGate() {\n  const { instance } = useDataPlaneGate();\n  const standardMatch = useRouteMatch<DataPlaneTopicRouteParams>(\n    DataPlaneTopicRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlaneTopicRouteParams>(\n    DataPlaneTopicRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"useDataPlaneGate used outside the expected route\");\n  }\n  const { data: topic } = useTopic(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      topicName: match.params.topicName,\n      plan: instance.plan,\n    },\n    true\n  );\n\n  return {\n    instance,\n    topic: topic as NonNullable<typeof topic>,\n    match,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlaneTopicHeaderProps } from \"ui\";\nimport { DataPlaneTopicHeader } from \"ui\";\nimport { useUserControlGate } from \"../../../useUserControlGate\";\nimport { useDrawer } from \"../../control-plane\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\n\nexport const DataPlaneTopicHeaderConnected: VoidFunctionComponent<\n  DataPlaneNavigationProps & Pick<DataPlaneTopicHeaderProps, \"activeSection\">\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  activeSection,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveTab, toggleExpanded } = useDrawer();\n  const { userData } = useUserControlGate();\n  const {\n    instance,\n    topic,\n    match: { url },\n  } = useTopicGate();\n\n  const tabsHref = {\n    consumer: `${url}/consumer-groups`,\n    messages: `${url}/messages`,\n    properties: `${url}/properties`,\n    schemas: `${url}/schemas`,\n  };\n\n  const onDelete = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/delete`);\n  }, [history, instance, instancesHref]);\n\n  const onChangeOwner = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/change-owner`);\n  }, [history, instance, instancesHref]);\n\n  return (\n    <DataPlaneTopicHeader\n      instancesHref={instancesHref}\n      instanceName={instance.name}\n      instanceDetailHref={instanceDetailsHref(instance.id)}\n      instanceTopicsHref={instanceTopicsHref(instance.id)}\n      activeSection={activeSection}\n      topicName={topic.name}\n      tabsHref={tabsHref}\n      onDetails={() => {\n        setActiveTab(\"details\");\n        toggleExpanded(true);\n      }}\n      onConnection={() => {\n        setActiveTab(\"connections\");\n        toggleExpanded(true);\n      }}\n      canOpenConnection={userData.canOpenConnection(instance.status)}\n      canChangeOwner={userData.canChangeOwner(instance.owner, instance.status)}\n      canDelete={userData.isUserOwnerOrAdmin(instance.owner)}\n      onChangeOwner={onChangeOwner}\n      onDelete={onDelete}\n    />\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaConsumerGroupSortableColumns,\n  useConsumerGroups,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroups, useConsumerGroupLabels } from \"ui\";\nimport { ControlPlaneRouteRoot } from \"../../control-plane/routesConsts\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicConsumerGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const { instance, topic } = useTopicGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const labels = useConsumerGroupLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const consumerName = useURLSearchParamsChips(\n    \"consumer\",\n    resetPaginationQuery\n  );\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaConsumerGroupSortableColumns,\n    labels.fields\n  );\n\n  const { data } = useConsumerGroups({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    groupId: consumerName.chips[0],\n    topic: topic.name,\n  });\n\n  const onDeletConsumerGroup = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/delete`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  const onViewPartition = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/view-partition`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  const onClickResetOffset = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/reset-offset`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"consumer\"}\n      />\n      <ConsumerGroups\n        consumers={data?.groups}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        consumerName={consumerName.chips}\n        isRowSelected={() => false}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeletConsumerGroup(row.name)}\n        onSearchConsumer={(value) => {\n          consumerName.clear();\n          consumerName.toggle(value);\n        }}\n        onClearAllFilters={consumerName.clear}\n        onPageChange={setPagination}\n        onRemoveConsumerChip={consumerName.clear}\n        onRemoveConsumerChips={consumerName.clear}\n        onViewPartition={(row) => onViewPartition(row.name)}\n        onViewResetOffset={(row) => onClickResetOffset(row.name)}\n      />\n    </>\n  );\n};\n","import { useMessagesFetchQuery } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { KafkaMessageBrowserProps } from \"ui\";\nimport { KafkaMessageBrowser } from \"ui\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicMessagesGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const { instance, topic } = useTopicGate();\n  const kafkaTopicMessagesFetchQuery = useMessagesFetchQuery();\n\n  const getMessages = useCallback<KafkaMessageBrowserProps[\"getMessages\"]>(\n    async (params) => {\n      if (!instance.adminUrl) {\n        throw Error(\"Invalid instance adminUrl\");\n      }\n      const messages = await kafkaTopicMessagesFetchQuery({\n        ...params,\n        id: instance.id,\n        adminUrl: instance.adminUrl,\n        topicName: topic.name,\n      });\n      return {\n        messages,\n        partitions: topic.partitions.length,\n      };\n    },\n    [\n      instance.adminUrl,\n      instance.id,\n      kafkaTopicMessagesFetchQuery,\n      topic.name,\n      topic.partitions.length,\n    ]\n  );\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"messages\"}\n      />\n      <KafkaMessageBrowser getMessages={getMessages} />\n    </>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { TopicProperties } from \"ui\";\nimport type { DataPlaneTopicNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicPropertiesRoute: VoidFunctionComponent<\n  DataPlaneTopicNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instanceConsumerGroupsHref,\n  instancesHref,\n  deleteTopicHref,\n  updateTopicHref,\n}) => {\n  const { instance, topic } = useTopicGate();\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"properties\"}\n      />\n      <TopicProperties\n        topic={topic}\n        deleteTopicHref={deleteTopicHref(instance.id, topic.name)}\n        updateTopicHref={updateTopicHref(instance.id, topic.name)}\n      />\n    </>\n  );\n};\n","/* eslint-disable */\n// @ts-nocheck\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { I18nProvider } from \"@rhoas/app-services-ui-components\";\nimport type { Auth, Config } from \"@rhoas/app-services-ui-shared\";\nimport { AuthContext, ConfigContext } from \"@rhoas/app-services-ui-shared\";\n/* tslint:disable */\nimport type { Registry } from \"@rhoas/registry-management-sdk\";\nimport type { ScalprumComponentProps } from \"@scalprum/react-core\";\nimport { ScalprumComponent } from \"@scalprum/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicSchemasRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const chrome = useChrome();\n  const { topic } = useTopicGate();\n  const processor = (([_, m]: [string, { entry: string[] }]) =>\n    m.entry.map(\n      (e) => `/beta/apps/srs-ui-build${e}`\n    )) as unknown as ScalprumComponentProps[\"processor\"];\n  const processor2 = (([_, m]: [string, { entry: string[] }]) =>\n    m.entry.map(\n      (e) => `/beta/apps/sr-ui-build${e}`\n    )) as unknown as ScalprumComponentProps[\"processor\"];\n  const basename = \"/service-registry\";\n  const auth: Auth = {\n    srs: { getToken: chrome.auth.getToken },\n  };\n  const config: Config = {\n    srs: { apiBasePath: process.env.API_URL },\n  };\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"schemas\"}\n      />\n      <AuthContext.Provider value={auth}>\n        <ConfigContext.Provider value={config}>\n          <I18nProvider\n            lng={\"en\"}\n            resources={{\n              en: {\n                common: () =>\n                  import(\n                    \"@rhoas/app-services-ui-components/locales/en/common.json\"\n                  ),\n                \"service-registry\": () =>\n                  import(\n                    \"@rhoas/app-services-ui-components/locales/en/service-registry.json\"\n                  ),\n                srsTemporaryFixMe: () => import(\"./srs-locales.json\"),\n              },\n            }}\n            debug={true}\n          >\n            <ScalprumComponent\n              appName=\"srs\"\n              module=\"./ServiceRegistryMapping\"\n              scope=\"srs\"\n              ErrorComponent={<div>opsie</div>}\n              processor={processor}\n              basename={basename}\n              topicName={topic.name}\n              renderSchema={(registry: Registry) => {\n                return (\n                  <ScalprumComponent\n                    appName=\"ar\"\n                    scope=\"ar\"\n                    ErrorComponent={<div>opsie</div>}\n                    processor={processor2}\n                    module=\"./FederatedSchemaMapping\"\n                    registry={registry}\n                    topicName={topic.name}\n                    groupId={null}\n                    version={\"latest\"}\n                    registryId={registry?.id}\n                    basename={basename}\n                  />\n                );\n              }}\n            />\n          </I18nProvider>\n        </ConfigContext.Provider>\n      </AuthContext.Provider>\n    </>\n  );\n};\n","import { useConsumerGroup } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../control-plane/routesConsts\";\nimport type { DataPlaneConsumerGroupRouteParams } from \"./routesConsts\";\nimport { DataPlaneConsumerGroupRoutePath } from \"./routesConsts\";\nimport { useDataPlaneGate } from \"./useDataPlaneGate\";\n\nexport function useConsumerGroupGate() {\n  const { instance } = useDataPlaneGate();\n  const standardMatch = useRouteMatch<DataPlaneConsumerGroupRouteParams>(\n    DataPlaneConsumerGroupRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlaneConsumerGroupRouteParams>(\n    DataPlaneConsumerGroupRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"useConsumerGroupGate used outside the expected route\");\n  }\n  const { data: consumerGroup } = useConsumerGroup(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      consumerGroupId: match.params.consumerGroupId,\n    },\n    true\n  );\n\n  return {\n    instance,\n    consumerGroup: consumerGroup as NonNullable<typeof consumerGroup>,\n    match,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteConsumerGroup } from \"ui\";\nimport { useDeleteConsumerGroupMutation } from \"consoledot-api\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\nimport { useAlerts } from \"../../../useAlerts\";\n\nexport const ConsumerGroupDeleteRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({ instanceConsumerGroupsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { addAlert } = useAlerts();\n\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  const { mutateAsync } = useDeleteConsumerGroupMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl!,\n      consumerGroupId: consumerGroup.name,\n      onError: (_, message) => {\n        addAlert(\"danger\", message, true, \"delete-consumer-group-error\");\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceConsumerGroupsHref(instance.id));\n        addAlert(\n          \"success\",\n          `Successfully deleted consumer group ${consumerGroup.name}`,\n          true,\n          \"delete-consumer-group-success\"\n        );\n      },\n    });\n  }, [\n    mutateAsync,\n    instance.id,\n    instance.adminUrl,\n    consumerGroup.name,\n    addAlert,\n    history,\n    instanceConsumerGroupsHref,\n  ]);\n\n  return (\n    <DeleteConsumerGroup\n      isModalOpen={true}\n      onClose={onCancel}\n      onDeleteConsumer={onDelete}\n      state={consumerGroup.state}\n      consumerName={consumerGroup.name}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupResetOffset } from \"ui\";\nimport type { OffsetValue } from \"ui\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useResetConsumerGroupMutation } from \"consoledot-api\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\nimport { useAlerts } from \"../../../useAlerts\";\n\nexport const ConsumerGroupResetOffsetRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({ instanceConsumerGroupsHref }) => {\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  const { addAlert } = useAlerts();\n\n  const { mutateAsync } = useResetConsumerGroupMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const getTopics = () => {\n    const topics = (consumerGroup.consumers || []).map(\n      (consumer) => consumer.topic\n    );\n    const distinctTopics = Array.from(new Set(topics));\n    return distinctTopics;\n  };\n\n  const onConfirmResetOffset = useCallback(\n    (\n      topic: string,\n      offset: OffsetValue,\n      partitions: number[],\n      customOffsetValue: string\n    ) => {\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl!,\n        consumerGroupId: consumerGroup.name,\n        topic: topic,\n        offset: offset,\n        partitions: partitions,\n        value: customOffsetValue,\n        onError: (_, message) => {\n          addAlert(\"danger\", message, true, \"reset-offset-error\");\n        },\n        onSuccess: () => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.replace(instanceConsumerGroupsHref(instance.id));\n          addAlert(\n            \"success\",\n            \"offsets for the consumer group have been successfully reset\",\n            true,\n            \"reset-offset-success\"\n          );\n        },\n      });\n    },\n    [\n      mutateAsync,\n      instance.id,\n      instance.adminUrl,\n      consumerGroup.name,\n      addAlert,\n      history,\n      instanceConsumerGroupsHref,\n    ]\n  );\n\n  return (\n    <ConsumerGroupResetOffset\n      isModalOpen={true}\n      state={consumerGroup.state}\n      groupId={consumerGroup.name}\n      topics={getTopics()}\n      consumers={consumerGroup.consumers}\n      onClickClose={onCancel}\n      onClickResetOffset={onConfirmResetOffset}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroupDrawer } from \"ui\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\nimport { ConsumerGroupsRoute } from \"./ConsumerGroupsRoute\";\n\nexport const ConsumerGroupViewPartitionRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({\n  instanceConsumerGroupsHref,\n  viewPartitionConsumerGroupHref,\n  instancesHref,\n  instanceDetailsHref,\n  instanceTopicsHref,\n}) => {\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewPartitionConsumerGroupHref(\n        instance.id,\n        consumerGroup.name\n      )}/delete`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.name,\n    viewPartitionConsumerGroupHref,\n  ]);\n\n  const onClickResetOffset = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewPartitionConsumerGroupHref(\n        instance.id,\n        consumerGroup.name\n      )}/reset-offset`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.name,\n    viewPartitionConsumerGroupHref,\n  ]);\n\n  return (\n    <ConsumerGroupDrawer\n      consumerGroupByTopic={false}\n      state={consumerGroup.state}\n      activeMembers={consumerGroup.activeConsumers!}\n      partitionsWithLag={consumerGroup.laggingPartitions!}\n      consumers={consumerGroup.consumers}\n      groupId={consumerGroup.name}\n      onSelectDeleteConsumerGroup={onDelete}\n      onSelectResetOffsetConsumerGroup={onClickResetOffset}\n      isExpanded={true}\n      onClickClose={onCancel}\n    >\n      <ConsumerGroupsRoute\n        instancesHref={instancesHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n      />\n    </ConsumerGroupDrawer>\n  );\n};\n","import { useConsumerGroup } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../control-plane/routesConsts\";\nimport type { DataPlaneTopicConsumerRouteParams } from \"./routesConsts\";\nimport { DataPlaneTopicConsumerGroupRoutePath } from \"./routesConsts\";\nimport { useTopicGate } from \"./useTopicGate\";\n\nexport function useTopicConsumerGroupGate() {\n  const { instance, topic } = useTopicGate();\n  const standardMatch = useRouteMatch<DataPlaneTopicConsumerRouteParams>(\n    DataPlaneTopicConsumerGroupRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlaneTopicConsumerRouteParams>(\n    DataPlaneTopicConsumerGroupRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"useTopicConsumerGroupGate used outside the expected route\");\n  }\n  const { data: consumerGroup } = useConsumerGroup(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      consumerGroupId: match.params.consumerGroupId,\n    },\n    true\n  );\n\n  return {\n    instance,\n    consumerGroup: consumerGroup as NonNullable<typeof consumerGroup>,\n    match,\n    topic,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteConsumerGroup } from \"ui\";\nimport { useDeleteConsumerGroupMutation } from \"consoledot-api\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\nimport { useAlerts } from \"../../../useAlerts\";\n\nexport const TopicConsumerGroupDeleteRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({ instanceTopicConsumerGroupsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { addAlert } = useAlerts();\n\n  const { instance, consumerGroup, topic } = useTopicConsumerGroupGate();\n\n  const { mutateAsync } = useDeleteConsumerGroupMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl!,\n      consumerGroupId: consumerGroup.name,\n      onError: (_, message) => {\n        addAlert(\"danger\", message, true, \"delete-consumer-group-error\");\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(\n          instanceTopicConsumerGroupsHref(instance.id, topic.name)\n        );\n        addAlert(\n          \"success\",\n          `Successfully deleted consumer group ${consumerGroup.name}`,\n          true,\n          \"delete-consumer-group-success\"\n        );\n      },\n    });\n  }, [\n    mutateAsync,\n    instance.id,\n    instance.adminUrl,\n    consumerGroup.name,\n    addAlert,\n    history,\n    instanceTopicConsumerGroupsHref,\n    topic.name,\n  ]);\n\n  return (\n    <DeleteConsumerGroup\n      isModalOpen={true}\n      onClose={onCancel}\n      onDeleteConsumer={onDelete}\n      state={consumerGroup.state}\n      consumerName={consumerGroup.name}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupResetOffset } from \"ui\";\nimport type { OffsetValue } from \"ui\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useResetConsumerGroupMutation } from \"consoledot-api\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\nimport { useAlerts } from \"../../../useAlerts\";\n\nexport const TopicConsumerGroupResetOffsetRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({ instanceTopicConsumerGroupsHref }) => {\n  const { instance, topic, consumerGroup } = useTopicConsumerGroupGate();\n\n  const { addAlert } = useAlerts();\n\n  const { mutateAsync } = useResetConsumerGroupMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const getTopics = () => {\n    const topics = (consumerGroup.consumers || []).map(\n      (consumer) => consumer.topic\n    );\n    const distinctTopics = Array.from(new Set(topics));\n    return distinctTopics;\n  };\n\n  const onConfirmResetOffset = useCallback(\n    (\n      topicName: string,\n      offset: OffsetValue,\n      partitions: number[],\n      customOffsetValue: string\n    ) => {\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl!,\n        consumerGroupId: consumerGroup.name,\n        topic: topicName,\n        offset: offset,\n        partitions: partitions,\n        value: customOffsetValue,\n        onError: (_, message) => {\n          addAlert(\"danger\", message, true, \"reset-offset-error\");\n        },\n        onSuccess: () => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.replace(\n            instanceTopicConsumerGroupsHref(instance.id, topic.name)\n          );\n          addAlert(\n            \"success\",\n            \"offsets for the consumer group have been successfully reset\",\n            true,\n            \"reset-offset-success\"\n          );\n        },\n      });\n    },\n    [\n      mutateAsync,\n      instance.id,\n      instance.adminUrl,\n      consumerGroup.name,\n      addAlert,\n      history,\n      instanceTopicConsumerGroupsHref,\n      topic.name,\n    ]\n  );\n\n  return (\n    <ConsumerGroupResetOffset\n      isModalOpen={true}\n      state={consumerGroup.state}\n      groupId={consumerGroup.name}\n      topics={getTopics()}\n      consumers={consumerGroup.consumers}\n      onClickClose={onCancel}\n      onClickResetOffset={onConfirmResetOffset}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroupDrawer } from \"ui\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\nimport { TopicConsumerGroupsRoute } from \"./TopicConsumerGroupsRoute\";\n\nexport const TopicConsumerGroupViewPartitionRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({\n  instanceTopicConsumerGroupsHref,\n  instancesHref,\n  viewTopicPartitionConsumerGroupHref,\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const { instance, topic, consumerGroup } = useTopicConsumerGroupGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewTopicPartitionConsumerGroupHref(\n        instance.id,\n        topic.name,\n        consumerGroup.name\n      )}/delete`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.name,\n    topic.name,\n    viewTopicPartitionConsumerGroupHref,\n  ]);\n\n  const onClickResetOffset = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewTopicPartitionConsumerGroupHref(\n        instance.id,\n        topic.name,\n        consumerGroup.name\n      )}/reset-offset`\n    );\n  }, [\n    history,\n    instance.id,\n    topic.name,\n    consumerGroup.name,\n    viewTopicPartitionConsumerGroupHref,\n  ]);\n\n  return (\n    <ConsumerGroupDrawer\n      consumerGroupByTopic={false}\n      state={consumerGroup.state}\n      activeMembers={consumerGroup.activeConsumers!}\n      partitionsWithLag={consumerGroup.laggingPartitions!}\n      consumers={consumerGroup.consumers}\n      groupId={consumerGroup.name}\n      onSelectDeleteConsumerGroup={onDelete}\n      onSelectResetOffsetConsumerGroup={onClickResetOffset}\n      isExpanded={true}\n      onClickClose={onCancel}\n    >\n      <TopicConsumerGroupsRoute\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n      />\n    </ConsumerGroupDrawer>\n  );\n};\n","import type { DeleteModalProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  DeleteModal,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type DeleteKafkaTopicProps = {\n  topicName: string;\n} & Omit<\n  DeleteModalProps,\n  \"title\" | \"variant\" | \"confirmationValue\" | \"children\"\n>;\n\nexport const DeleteKafkaTopic: VoidFunctionComponent<DeleteKafkaTopicProps> = ({\n  topicName,\n  ...props\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <DeleteModal\n      {...props}\n      variant={\"destructive\"}\n      title={t(\"delete_topic_title\")}\n      confirmationValue={topicName}\n    >\n      <Trans\n        ns={\"kafka\"}\n        i18nKey={\"delete_topic_message\"}\n        components={[<strong />]}\n        values={{\n          topicName,\n        }}\n      />\n    </DeleteModal>\n  );\n};\n","import { useDeleteTopicMutation } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteKafkaTopic } from \"ui/src/components/DeleteKafkaTopic\";\nimport type { DataPlaneTopicNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\n\nexport const TopicDeleteRoute: VoidFunctionComponent<\n  DataPlaneTopicNavigationProps\n> = ({ instanceTopicsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance, topic } = useTopicGate();\n  const { mutateAsync, isLoading: isDeleting } = useDeleteTopicMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicsHref(instance.id));\n  }, [history, instance.id, instanceTopicsHref]);\n\n  const onDelete = useCallback(() => {\n    if (!instance.adminUrl) {\n      throw Error(\"Invalid instance adminUrl\");\n    }\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl,\n      name: topic.name,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceTopicsHref(instance.id));\n      },\n    });\n  }, [\n    instance.adminUrl,\n    instance.id,\n    mutateAsync,\n    topic.name,\n    history,\n    instanceTopicsHref,\n  ]);\n\n  return (\n    <DeleteKafkaTopic\n      topicName={topic.name}\n      isModalOpen={true}\n      isDeleting={isDeleting}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n      onDelete={onDelete}\n      onCancel={onCancel}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { useUpdateTopicMutation } from \"consoledot-api\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\nimport { EditTopicProperties } from \"ui\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\n\nexport const TopicEditPropertiesRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instanceDetailsHref, instanceTopicsHref, instancesHref, instanceConsumerGroupsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { instance, topic } = useTopicGate();\n\n  if (instance.maxPartitions === undefined) {\n    throw new Error(\n      `CreateTopicRoute, unexpected maxPartition undefined for instance ${instance.name}`\n    );\n  }\n\n  const dispatch = useDispatch();\n\n  const updateTopic = useUpdateTopicMutation();\n\n  const onSave = useCallback(\n    (topicData: Topic) => {\n      if (instance.adminUrl === undefined) {\n        throw new Error(\n          `EditTopicRoute, adminUrl undefined for instance ${instance.name}`\n        );\n      }\n      void updateTopic.mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl,\n        topic: topicData,\n\n        onSuccess: () => {\n          //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.push(instanceTopicsHref(instance.id));\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"save-error\",\n            })\n          );\n        },\n      });\n    },\n    [\n      instance.adminUrl,\n      instance.id,\n      instance.name,\n      updateTopic,\n      history,\n      instanceTopicsHref,\n      dispatch,\n    ]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicsHref(instance.id));\n  }, [history, instance.id, instanceTopicsHref]);\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"properties\"}\n      />\n      <EditTopicProperties\n        topic={topic}\n        onCancel={onCancel}\n        onSave={onSave}\n        availablePartitionLimit={instance.maxPartitions}\n      />\n    </>\n  );\n};\n","import {\n  useAcls,\n  useConsumerGroups,\n  useDeletePermissionsMutation,\n  useTopics,\n  useUpdatePermissionsMutation,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport type { AclBinding } from \"ui\";\nimport { EditPermissions } from \"ui\";\nimport { useAlerts } from \"../../../useAlerts\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../../control-plane/routesConsts\";\nimport type {\n  DataPlanePermissionsNavigationProps,\n  DataPlanePermissionsRouteParams,\n} from \"../routesConsts\";\nimport { DataPlanePermissionsRoutePath } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\n\nexport const PermissionsEditRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ managePermissionsHref }) => {\n  const { instance } = useDataPlaneGate();\n  const { addAlert } = useAlerts();\n\n  const standardMatch = useRouteMatch<DataPlanePermissionsRouteParams>(\n    DataPlanePermissionsRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlanePermissionsRouteParams>(\n    DataPlanePermissionsRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"EditPermissions used outside the expected route\");\n  }\n\n  const { data: acls } = useAcls({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: topics } = useTopics({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    plan: instance.plan,\n  });\n\n  const { data: consumerGroups } = useConsumerGroups({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const consumerGroupsList = consumerGroups?.groups.map(\n    (consumer) => consumer.name\n  );\n  const topicsList = topics?.topics.map((topic) => topic.name);\n  const { mutateAsync } = useDeletePermissionsMutation();\n  const updatePermissions = useUpdatePermissionsMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onSaveAcls = useCallback(\n    (\n      aclPermission: AclBinding[] | undefined,\n      deletedPermissions: AclBinding[] | undefined\n    ) => {\n      if (aclPermission != undefined && aclPermission.length > 0) {\n        aclPermission.map(\n          (aclData) =>\n            void updatePermissions.mutateAsync({\n              instanceId: instance.id,\n              adminUrl: instance?.adminUrl || \"\",\n              acl: {\n                patternType: aclData.patternType,\n                permission: aclData.permission,\n                principal: aclData.principal,\n                operation: aclData.operation,\n                resourceName: aclData.resourceName,\n                resourceType: aclData.resourceType,\n              },\n\n              onSuccess: () => {\n                //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n                history.push(managePermissionsHref(instance.id));\n              },\n              onError: (_, message) => {\n                addAlert(\"danger\", message, true, \"save-error\");\n              },\n            })\n        );\n      }\n\n      if (deletedPermissions != undefined && deletedPermissions.length > 0) {\n        deletedPermissions.map((aclToDelete) => {\n          void mutateAsync({\n            instanceId: instance.id,\n            adminUrl: instance.adminUrl || \"\",\n            acl: {\n              patternType: aclToDelete.patternType,\n              permissionType: aclToDelete.permission,\n              principal: aclToDelete.principal,\n              resourceName: aclToDelete.resourceName,\n              operation: aclToDelete.operation,\n              resourceType: aclToDelete.resourceType,\n            },\n            onError: (_, message) => {\n              addAlert(\"danger\", message, true, \"delete-error\");\n            },\n            onSuccess: () => {\n              //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n              history.push(managePermissionsHref(instance.id));\n            },\n          });\n        });\n      }\n    },\n    [\n      addAlert,\n      history,\n      instance.adminUrl,\n      instance.id,\n      managePermissionsHref,\n      mutateAsync,\n      updatePermissions,\n    ]\n  );\n\n  const existingAcls: AclBinding[] | undefined = acls?.groups.map((acl) => {\n    return {\n      resourceName: acl.resource.resourceName,\n      patternType: acl.resource.patternType,\n      permission: acl.permission.permission,\n      operation: acl.permission.operation,\n      principal: acl.account,\n      resourceType: acl.resource.resourceType,\n    };\n  });\n\n  const aclsForSelectedAccount = existingAcls?.filter(\n    (value) =>\n      value.principal == `User:${match.params.selectedAccount}` ||\n      value.principal == \"User:*\"\n  );\n\n  const onClose = useCallback(() => {\n    //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <EditPermissions\n      onCancel={onClose}\n      kafkaName={instance.name}\n      onSave={onSaveAcls}\n      topicsList={topicsList || []}\n      consumerGroupsList={consumerGroupsList || []}\n      selectedAccount={\n        match.params.selectedAccount == \"all-accounts\"\n          ? \"All accounts\"\n          : match.params.selectedAccount\n      }\n      acls={aclsForSelectedAccount || []}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlanePermissionsNavigationProps } from \"../routesConsts\";\nimport type { Account } from \"ui\";\nimport { PrincipalType, SelectAccount } from \"ui\";\nimport { useServiceAccounts, useUserAccounts } from \"consoledot-api\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { useUserControlGate } from \"../../../useUserControlGate\";\n\nexport const PermissionsSelectAccountRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ managePermissionsHref, editPermissionsHref }) => {\n  const { instance } = useDataPlaneGate();\n  const { data: accounts } = useUserAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: serviceAccounts } = useServiceAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { userData } = useUserControlGate();\n  const userAccounts: Account[] | undefined = accounts?.accounts.map(\n    (userAccount) => {\n      return {\n        displayName: userAccount.displayName,\n        id: userAccount.username,\n        principalType: PrincipalType.UserAccount,\n      };\n    }\n  );\n\n  const serviceAccountList: Account[] | undefined =\n    serviceAccounts?.serviceAccounts.map((userAccount) => {\n      return {\n        displayName: userAccount.displayName,\n        id: userAccount.id,\n        principalType: PrincipalType.ServiceAccount,\n      };\n    });\n\n  const allAccounts =\n    userAccounts != undefined && serviceAccountList != undefined\n      ? [...serviceAccountList, ...userAccounts]\n      : undefined;\n  const filteredAccounts = allAccounts?.filter(\n    (value) => value.id !== instance.owner && value.id !== userData.username\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onNext = useCallback(\n    (selectedAccount: string | undefined) => {\n      //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        editPermissionsHref(\n          instance.id,\n          selectedAccount === \"All accounts\"\n            ? \"all-accounts\"\n            : selectedAccount || \"\"\n        )\n      );\n    },\n    [history, instance.id, editPermissionsHref]\n  );\n\n  const onClose = useCallback(() => {\n    //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <SelectAccount\n      accounts={filteredAccounts}\n      kafkaName={instance.name}\n      onNext={onNext}\n      onClose={onClose}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport type { CreateTopicPageProps } from \"ui\";\nimport { CreateTopic } from \"ui\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { useHistory } from \"react-router-dom\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { useDispatch } from \"react-redux\";\nimport { useCreateTopicMutation, useTopics } from \"consoledot-api\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport {\n  developerDefaults,\n  standardDefaults,\n} from \"consoledot-api/src/transformers/topicTransformer\";\n\nexport const TopicCreateRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instancesHref, instanceTopicsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { instance } = useDataPlaneGate();\n  const createTopic = useCreateTopicMutation();\n  const dispatch = useDispatch();\n  const availabilityZone = instance.az;\n  const { data: topics } = useTopics({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    plan: instance.plan,\n  });\n\n  if (instance.maxPartitions === undefined) {\n    throw new Error(\n      `CreateTopicRoute, unexpected maxPartition undefined for instance ${instance.name}`\n    );\n  }\n\n  const checkTopicName: CreateTopicPageProps[\"checkTopicName\"] = useCallback(\n    (topicName) => {\n      const selectedTopic = topics?.topics.filter(\n        (topic) => topic.name === topicName\n      );\n      if (selectedTopic && selectedTopic?.length > 0) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    [topics?.topics]\n  );\n\n  const onCloseCreateTopic = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicsHref(instance.id));\n  }, [history, instance.id, instanceTopicsHref]);\n\n  const onSave = useCallback(\n    (topicData: Topic) => {\n      void createTopic.mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance?.adminUrl || \"\",\n        topic: topicData,\n\n        onSuccess: () => {\n          //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.push(instanceTopicsHref(instance.id));\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"save-error\",\n            })\n          );\n        },\n      });\n    },\n    [\n      createTopic,\n      dispatch,\n      history,\n      instance?.adminUrl,\n      instance.id,\n      instanceTopicsHref,\n    ]\n  );\n\n  const initialTopicValues = useMemo(() => {\n    return instance.plan === \"developer\"\n      ? {\n          name: \"\",\n          partitions: [{ partition: 1, id: 1 }],\n          ...developerDefaults,\n        }\n      : {\n          name: \"\",\n          partitions: [{ partition: 1, id: 1 }],\n          ...standardDefaults,\n        };\n  }, [instance.plan]);\n\n  return (\n    <>\n      <CreateTopic\n        kafkaName={instance.name}\n        kafkaPageLink={instanceTopicsHref(instance.id)}\n        kafkaInstanceLink={instancesHref}\n        onSave={onSave}\n        initialTopicValues={initialTopicValues}\n        onCloseCreateTopic={onCloseCreateTopic}\n        checkTopicName={checkTopicName}\n        availablePartitionLimit={instance.maxPartitions}\n        availabilityZone={availabilityZone}\n      />\n    </>\n  );\n};\n","import { InvalidObject } from \"@redhat-cloud-services/frontend-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ControlPlaneRouteRoot } from \"../control-plane/routesConsts\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  ConsumerGroupDeleteRoute,\n  ConsumerGroupResetOffsetRoute,\n  ConsumerGroupsRoute,\n  ConsumerGroupViewPartitionRoute,\n  DashboardRoute,\n  PermissionsEditRoute,\n  PermissionsRoute,\n  PermissionsSelectAccountRoute,\n  SettingsRoute,\n  TopicConsumerGroupDeleteRoute,\n  TopicConsumerGroupResetOffsetRoute,\n  TopicConsumerGroupsRoute,\n  TopicConsumerGroupViewPartitionRoute,\n  TopicCreateRoute,\n  TopicDeleteRoute,\n  TopicEditPropertiesRoute,\n  TopicMessagesGroupsRoute,\n  TopicPropertiesRoute,\n  TopicSchemasRoute,\n  TopicsRoute,\n} from \"./routes\";\n\nimport { DataPlaneTopicRoutePath } from \"./routesConsts\";\n\nexport type DataPlaneRoutesProps = {\n  root: string;\n  instancesHref: string;\n  instanceId: string;\n};\n\nexport const DataPlaneRoutes: VoidFunctionComponent<DataPlaneRoutesProps> = ({\n  root,\n  instancesHref,\n  instanceId,\n}) => {\n  const instanceDetailsHref = (id: string) => `${instancesHref}/${id}/details`;\n\n  const instanceTopicsHref = (id: string) =>\n    `${instancesHref}/${id}/details/topics`;\n\n  const topicPropertyHref = (id: string, topic: string) =>\n    `${instanceDetailsHref(id)}/topics/${topic}/properties`;\n\n  const topicHref = (id: string, topic: string) =>\n    `${instanceDetailsHref(id)}/topics/${topic}`;\n\n  const updateTopicHref = (id: string, topic: string) =>\n    `${topicHref(id, topic)}/edit`;\n\n  const deleteTopicHref = (id: string, topic: string) =>\n    `${topicHref(id, topic)}/delete`;\n\n  const instanceConsumerGroupsHref = (id: string) =>\n    `${instanceDetailsHref(id)}/consumer-groups`;\n\n  const viewPartitionConsumerGroupHref = (\n    id: string,\n    consumerGroupId: string\n  ) =>\n    `${instanceDetailsHref(\n      id\n    )}/consumer-groups/${consumerGroupId}/view-partition`;\n\n  const instanceTopicConsumerGroupHref = (id: string, topic: string) =>\n    `${instanceDetailsHref(id)}/topics/${topic}/consumer-groups`;\n\n  const viewTopicPartitionConsumerGroupHref = (\n    id: string,\n    topic: string,\n    consumerGroupId: string\n  ) =>\n    `${instanceDetailsHref(\n      id\n    )}/topics/${topic}/consumer-groups/${consumerGroupId}/view-partition`;\n\n  const managePermissionsHref = (id: string) =>\n    `${instanceDetailsHref(id)}/acls/select-account`;\n\n  const editPermissionsHref = (id: string, selectedAccount: string) =>\n    `${instanceDetailsHref(\n      id\n    )}/acls/select-account/${selectedAccount}/edit-permissions`;\n\n  const permissionsModalHref = (id: string) =>\n    `${instanceDetailsHref(id)}/acls`;\n\n  return (\n    <Route path={root}>\n      <RedirectOnGateError redirectUrl={ControlPlaneRouteRoot}>\n        <Switch>\n          <Route path={`${root}/dashboard`} exact>\n            <DashboardRoute instancesHref={instancesHref} />\n          </Route>\n\n          <Route path={`${root}/topics`} exact>\n            <TopicsRoute instancesHref={instancesHref} />\n          </Route>\n\n          <Route path={`${root}/consumer-groups`} exact>\n            <ConsumerGroupsRoute\n              instancesHref={instancesHref}\n              instanceDetailsHref={instanceDetailsHref}\n              instanceTopicsHref={instanceTopicsHref}\n              instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n            />\n          </Route>\n\n          <Route path={`${root}/acls`}>\n            <Route path={`${root}/acls/select-account`}>\n              <PermissionsSelectAccountRoute\n                instancesHref={instancesHref}\n                managePermissionsHref={permissionsModalHref}\n                editPermissionsHref={editPermissionsHref}\n              />\n            </Route>\n            <Route\n              path={`${root}/acls/select-account/:selectedAccount/edit-permissions`}\n            >\n              <PermissionsEditRoute\n                instancesHref={instancesHref}\n                managePermissionsHref={permissionsModalHref}\n                editPermissionsHref={editPermissionsHref}\n              />\n            </Route>\n            <PermissionsRoute\n              instancesHref={instancesHref}\n              managePermissionsHref={managePermissionsHref}\n              editPermissionsHref={editPermissionsHref}\n            />\n          </Route>\n\n          <Route path={`${root}/settings`} exact>\n            <SettingsRoute instancesHref={instancesHref} />\n          </Route>\n          <Route path={`${root}/topics`}>\n            <RedirectOnGateError redirectUrl={instanceTopicsHref(instanceId)}>\n              <Switch>\n                <Route path={`${root}/topics/create-topic`} exact>\n                  <TopicCreateRoute\n                    instancesHref={instancesHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/consumer-groups`}>\n                  <RedirectOnGateError\n                    redirectUrl={instanceTopicsHref(instanceId)}\n                  >\n                    <Switch>\n                      <Route\n                        path={`${DataPlaneTopicRoutePath(\n                          root\n                        )}/consumer-groups/:consumerGroupId/view-partition`}\n                      >\n                        <Route\n                          path={`${DataPlaneTopicRoutePath(\n                            root\n                          )}/consumer-groups/:consumerGroupId/view-partition/delete`}\n                        >\n                          <TopicConsumerGroupDeleteRoute\n                            instancesHref={instancesHref}\n                            instanceTopicConsumerGroupsHref={\n                              instanceTopicConsumerGroupHref\n                            }\n                            viewTopicPartitionConsumerGroupHref={\n                              viewTopicPartitionConsumerGroupHref\n                            }\n                            instanceDetailsHref={instanceDetailsHref}\n                            instanceTopicsHref={instanceTopicsHref}\n                            instanceConsumerGroupsHref={\n                              instanceConsumerGroupsHref\n                            }\n                          />\n                        </Route>\n                        <Route\n                          path={`${DataPlaneTopicRoutePath(\n                            root\n                          )}/consumer-groups/:consumerGroupId/view-partition/reset-offset`}\n                        >\n                          <TopicConsumerGroupResetOffsetRoute\n                            instancesHref={instancesHref}\n                            instanceTopicConsumerGroupsHref={\n                              instanceTopicConsumerGroupHref\n                            }\n                            viewTopicPartitionConsumerGroupHref={\n                              viewTopicPartitionConsumerGroupHref\n                            }\n                            instanceDetailsHref={instanceDetailsHref}\n                            instanceTopicsHref={instanceTopicsHref}\n                            instanceConsumerGroupsHref={\n                              instanceConsumerGroupsHref\n                            }\n                          />\n                        </Route>\n                        <TopicConsumerGroupViewPartitionRoute\n                          instancesHref={instancesHref}\n                          instanceTopicConsumerGroupsHref={\n                            instanceTopicConsumerGroupHref\n                          }\n                          viewTopicPartitionConsumerGroupHref={\n                            viewTopicPartitionConsumerGroupHref\n                          }\n                          instanceDetailsHref={instanceDetailsHref}\n                          instanceTopicsHref={instanceTopicsHref}\n                          instanceConsumerGroupsHref={\n                            instanceConsumerGroupsHref\n                          }\n                        />\n                      </Route>\n                      <Route\n                        path={`${DataPlaneTopicRoutePath(\n                          root\n                        )}/consumer-groups/:consumerGroupId/reset-offset`}\n                      >\n                        <TopicConsumerGroupResetOffsetRoute\n                          instancesHref={instancesHref}\n                          instanceTopicConsumerGroupsHref={\n                            instanceTopicConsumerGroupHref\n                          }\n                          viewTopicPartitionConsumerGroupHref={\n                            viewTopicPartitionConsumerGroupHref\n                          }\n                          instanceDetailsHref={instanceDetailsHref}\n                          instanceTopicsHref={instanceTopicsHref}\n                          instanceConsumerGroupsHref={\n                            instanceConsumerGroupsHref\n                          }\n                        />\n                      </Route>\n                      <Route\n                        path={`${DataPlaneTopicRoutePath(\n                          root\n                        )}/consumer-groups/:consumerGroupId/delete`}\n                      >\n                        <TopicConsumerGroupDeleteRoute\n                          instancesHref={instancesHref}\n                          instanceTopicConsumerGroupsHref={\n                            instanceTopicConsumerGroupHref\n                          }\n                          viewTopicPartitionConsumerGroupHref={\n                            viewTopicPartitionConsumerGroupHref\n                          }\n                          instanceDetailsHref={instanceDetailsHref}\n                          instanceTopicsHref={instanceTopicsHref}\n                          instanceConsumerGroupsHref={\n                            instanceConsumerGroupsHref\n                          }\n                        />\n                      </Route>\n                    </Switch>\n                  </RedirectOnGateError>\n                  <TopicConsumerGroupsRoute\n                    instancesHref={instancesHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/messages`} exact>\n                  <TopicMessagesGroupsRoute\n                    instancesHref={instancesHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n\n                <Route path={`${root}/topics/:topicName/properties/edit`} exact>\n                  <TopicEditPropertiesRoute\n                    instancesHref={instancesHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/properties`}>\n                  <Route path={`${root}/topics/:topicName/properties/delete`}>\n                    <TopicDeleteRoute\n                      instancesHref={instancesHref}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      topicHref={topicHref}\n                      updateTopicHref={updateTopicHref}\n                      deleteTopicHref={deleteTopicHref}\n                    />\n                  </Route>\n                  <TopicPropertiesRoute\n                    instancesHref={instancesHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    topicHref={topicPropertyHref}\n                    updateTopicHref={updateTopicHref}\n                    deleteTopicHref={deleteTopicHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/schemas`} exact>\n                  <TopicSchemasRoute\n                    instancesHref={instancesHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/delete`} exact>\n                  <TopicDeleteRoute\n                    instancesHref={instancesHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    topicHref={topicHref}\n                    updateTopicHref={updateTopicHref}\n                    deleteTopicHref={deleteTopicHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/edit`} exact>\n                  <TopicEditPropertiesRoute\n                    instancesHref={instancesHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Redirect\n                  from={`${root}/topics/:topicName/`}\n                  to={`${root}/topics/:topicName/consumer-groups`}\n                  exact\n                />\n              </Switch>\n            </RedirectOnGateError>\n          </Route>\n          <Route path={`${root}/consumer-groups`}>\n            <RedirectOnGateError\n              redirectUrl={instanceConsumerGroupsHref(instanceId)}\n            >\n              <Switch>\n                <Route\n                  path={`${root}/consumer-groups/:consumerGroupId/view-partition`}\n                >\n                  <Route\n                    path={`${root}/consumer-groups/:consumerGroupId/view-partition/delete`}\n                  >\n                    <ConsumerGroupDeleteRoute\n                      instancesHref={instancesHref}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                      viewPartitionConsumerGroupHref={\n                        viewPartitionConsumerGroupHref\n                      }\n                    />\n                  </Route>\n                  <Route\n                    path={`${root}/consumer-groups/:consumerGroupId/view-partition/reset-offset`}\n                  >\n                    <ConsumerGroupResetOffsetRoute\n                      instancesHref={instancesHref}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                      viewPartitionConsumerGroupHref={\n                        viewPartitionConsumerGroupHref\n                      }\n                    />\n                  </Route>\n                  <ConsumerGroupViewPartitionRoute\n                    instancesHref={instancesHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    viewPartitionConsumerGroupHref={\n                      viewPartitionConsumerGroupHref\n                    }\n                  />\n                </Route>\n                <Route\n                  path={`${root}/consumer-groups/:consumerGroupId/reset-offset`}\n                >\n                  <ConsumerGroupResetOffsetRoute\n                    instancesHref={instancesHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    viewPartitionConsumerGroupHref={\n                      viewPartitionConsumerGroupHref\n                    }\n                  />\n                </Route>\n                <Route path={`${root}/consumer-groups/:consumerGroupId/delete`}>\n                  <ConsumerGroupDeleteRoute\n                    instancesHref={instancesHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    viewPartitionConsumerGroupHref={\n                      viewPartitionConsumerGroupHref\n                    }\n                  />\n                </Route>\n              </Switch>\n            </RedirectOnGateError>\n          </Route>\n          <Redirect from={`${root}`} to={`${root}/dashboard`} exact />\n\n          <Route>\n            <InvalidObject />\n          </Route>\n        </Switch>\n      </RedirectOnGateError>\n    </Route>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { KafkaPageV3 } from \"ui\";\n\nexport const OverviewRoute: VoidFunctionComponent = () => {\n  return <KafkaPageV3 />;\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport {\n  ControlPlaneRoutes,\n  DedicatedControlPlaneRoutes,\n  DrawerProvider,\n} from \"./control-plane\";\nimport { DedicatedClustersRoute } from \"./control-plane/routes/DedicatedClustersRoute\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneClustersPath,\n  DedicatedControlPlaneRoutePath,\n  DedicatedControlPlaneRouteRoot,\n} from \"./control-plane/routesConsts\";\nimport { DataPlaneRoutes } from \"./data-plane\";\nimport { DataPlaneRoutePath } from \"./data-plane/routesConsts\";\nimport { OverviewRoute } from \"./overview\";\n\nexport const Routes: VoidFunctionComponent = () => {\n  return (\n    <Switch>\n      <Route path={\"/overview\"} exact>\n        <OverviewRoute />\n      </Route>\n      <Route path={\"/\"} exact>\n        <Redirect to={DedicatedControlPlaneRoutePath} />\n      </Route>\n      <Route path={ControlPlaneRouteRoot}>\n        <DrawerProvider>\n          {/* don't move these routes around! the order is important */}\n          <ControlPlaneRoutes />\n          <Route\n            path={DataPlaneRoutePath(ControlPlaneRouteRoot)}\n            render={({ match }) => (\n              <DataPlaneRoutes\n                root={DataPlaneRoutePath(ControlPlaneRouteRoot)}\n                instancesHref={ControlPlaneRouteRoot}\n                instanceId={match.params.id}\n              />\n            )}\n          />\n        </DrawerProvider>\n      </Route>\n      <Route path={DedicatedControlPlaneRouteRoot}>\n        <DrawerProvider>\n          {/* don't move these routes around! the order is important */}\n          <DedicatedControlPlaneRoutes />\n          <Route\n            path={DataPlaneRoutePath(DedicatedControlPlaneRoutePath)}\n            render={({ match }) => (\n              <DataPlaneRoutes\n                root={DataPlaneRoutePath(DedicatedControlPlaneRoutePath)}\n                instancesHref={DedicatedControlPlaneRouteRoot}\n                instanceId={match.params.id}\n              />\n            )}\n          />\n        </DrawerProvider>\n      </Route>\n      <Route path={DedicatedControlPlaneClustersPath}>\n        <DedicatedClustersRoute\n          instancesHref={DedicatedControlPlaneRoutePath}\n          clustersHref={DedicatedControlPlaneClustersPath}\n        />\n      </Route>\n    </Switch>\n  );\n};\n","import NotificationsPortal from \"@redhat-cloud-services/frontend-components-notifications/NotificationPortal\";\nimport { notificationsReducer } from \"@redhat-cloud-services/frontend-components-notifications/redux\";\nimport { getRegistry } from \"@redhat-cloud-services/frontend-components-utilities/Registry\";\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { memo, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { Reducer } from \"redux\";\n\nimport \"./App.scss\";\n\nimport { Routes } from \"./routes\";\n\nconst App = memo(() => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { updateDocumentTitle, on } = useChrome();\n\n  const { t } = useTranslation();\n  const title = t(\"kafka:rhosakTitle\");\n\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer as Reducer });\n\n    updateDocumentTitle(title);\n\n    const unregister = on(\"APP_NAVIGATION\", (event) => {\n      console.dir(event);\n      if (event.navId) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.push(\"/\" + event.navId === \"/\" ? \"\" : event.navId);\n      }\n    });\n    return () => {\n      if (unregister) {\n        unregister();\n      }\n    };\n  }, [history, on, title, updateDocumentTitle]);\n\n  return (\n    <>\n      <NotificationsPortal />\n      <Routes />\n    </>\n  );\n});\n\nexport default App;\n","/* eslint-disable */\n// @ts-nocheck\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { AssetsContext } from \"@rhoas/app-services-ui-shared\";\nimport { ScalprumComponent } from \"@scalprum/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nexport const appIdentifier = \"applicationServices\";\n\nconst basePath = \"/apps/rhoas-guides-build\";\nconst getPath = () => {\n  return basePath;\n};\n\nexport const QuickstartLoader: VoidFunctionComponent = () => {\n  const [loaded, setLoaded] = useState(false);\n  const chrome = useChrome();\n  const { quickStarts } = chrome;\n\n  const onLoad = (qs: unknown) => {\n    if (quickStarts) {\n      setLoaded(true); // unload federated module\n      quickStarts.set(appIdentifier, qs);\n    }\n  };\n\n  const processor = (item) => {\n    const fixPath = (e) => `${basePath}${e}`;\n    return item.guides.entry.map(fixPath);\n  };\n\n  return (\n    <ErrorBoundary fallbackRender={() => null}>\n      <AssetsContext.Provider value={{ getPath }}>\n        {!loaded ? (\n          <ScalprumComponent\n            appName=\"guides\"\n            scope=\"guides\"\n            module=\"./QuickStartLoader\"\n            ErrorComponent={<div>opsie</div>}\n            processor={processor}\n            showDrafts={false}\n            onLoad={onLoad}\n          />\n        ) : null}\n      </AssetsContext.Provider>\n    </ErrorBoundary>\n  );\n};\n","import notificationsMiddleware from \"@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware\";\nimport type ReducerRegistry from \"@redhat-cloud-services/frontend-components-utilities/ReducerRegistry\";\nimport { getRegistry } from \"@redhat-cloud-services/frontend-components-utilities/Registry\";\nimport type { Middleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise-middleware\";\n\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nexport let registry: ReducerRegistry<any>;\n\nexport function init(...middleware: Middleware[]) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: [\"detail\", \"stack\"] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchDedicatedClusterSizesParams } from \"../fetchers\";\nimport { fetchDedicatedClusterSizes } from \"../fetchers\";\nimport { dedicatedQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDedicatedClusterSizesFetchQuery() {\n  const queryClient = useQueryClient();\n  const { dedicatedClusters } = useApi();\n  return async ({\n    clusterId,\n  }: Omit<FetchDedicatedClusterSizesParams, \"getEnterpriseClusterById\">) => {\n    const api = dedicatedClusters();\n    return queryClient.fetchQuery({\n      queryKey: dedicatedQueries.clusterSizes({ clusterId }),\n      queryFn: async () => {\n        return fetchDedicatedClusterSizes({\n          clusterId,\n          getEnterpriseClusterById: (...args) =>\n            api.getEnterpriseClusterById(...args),\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchDedicatedClusters } from \"../fetchers\";\nimport { dedicatedQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDedicatedClustersFetchQuery() {\n  const queryClient = useQueryClient();\n  const { dedicatedClusters } = useApi();\n  return async () => {\n    const api = dedicatedClusters();\n    return queryClient.fetchQuery({\n      queryKey: dedicatedQueries.clusters(),\n      queryFn: async () => {\n        return fetchDedicatedClusters({\n          getEnterpriseOsdClusters: (...args) =>\n            api.getEnterpriseOsdClusters(...args),\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchDedicatedQuota, fetchOrganization } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDedicatedQuotaFetchQuery(skipCache = false) {\n  const queryClient = useQueryClient();\n  const { account } = useApi();\n  const ams = account();\n\n  return async () => {\n    const organization = await queryClient.fetchQuery({\n      queryKey: masQueries.organization(),\n      queryFn: () =>\n        fetchOrganization((...args) =>\n          ams.apiAccountsMgmtV1CurrentAccountGet(...args)\n        ),\n      staleTime: Infinity,\n    });\n    if (!organization) {\n      return Promise.reject(\"Missing organization id\");\n    }\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.dedicatedAvailable(),\n      queryFn: () =>\n        fetchDedicatedQuota(\n          (...args) =>\n            ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(...args),\n          organization\n        ),\n      staleTime: skipCache ? undefined : Infinity,\n    });\n  };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { FetchConsumerGroupParams } from \"../fetchers\";\nimport { fetchConsumerGroup } from \"../fetchers\";\n\nexport function useConsumerGroup(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchConsumerGroupParams,\n    \"getConsumerGroupById\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { consumerGroups } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.consumerGroup(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      if (!params.consumerGroupId) {\n        return Promise.reject(\"Invalid consumerGroupId\");\n      }\n      const api = consumerGroups(params.adminUrl);\n\n      return fetchConsumerGroup({\n        getConsumerGroupById: (...args) => api.getConsumerGroupById(...args),\n        ...params,\n      });\n    },\n    enabled:\n      Boolean(params.adminUrl) &&\n      Boolean(params.id) &&\n      Boolean(params.consumerGroupId),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchConsumerGroupsParams } from \"../fetchers\";\nimport { fetchConsumerGroups } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useConsumerGroups(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchConsumerGroupsParams,\n    \"getConsumerGroups\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { consumerGroups } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.consumerGroups(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = consumerGroups(params.adminUrl);\n\n      return fetchConsumerGroups({\n        getConsumerGroups: (...args) => api.getConsumerGroups(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl) && Boolean(params.id),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { fetchDedicatedClusters } from \"../fetchers\";\nimport { dedicatedQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDedicatedClusters(\n  { refetch }: { refetch: boolean } = { refetch: true }\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { dedicatedClusters } = useApi();\n\n  return useQuery({\n    queryKey: dedicatedQueries.clusters(),\n    queryFn: () => {\n      const api = dedicatedClusters();\n\n      return fetchDedicatedClusters({\n        getEnterpriseOsdClusters: (...args) =>\n          api.getEnterpriseOsdClusters(...args),\n      });\n    },\n    refetchInterval: refetch ? refetchInterval : false,\n    refetchOnWindowFocus: !refetch ? false : undefined,\n    refetchOnReconnect: !refetch ? false : undefined,\n    refetchOnMount: !refetch ? false : undefined,\n    retry: false,\n  });\n}\n","import type { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  CloudProvider,\n  Kafka,\n  MarketPlaceSubscriptions,\n  Plan,\n  Status,\n} from \"ui-models/src/models/kafka\";\nimport type { DateIsoString } from \"ui-models/src/types\";\n\nimport type { SizeWithLimits } from \"../fetchers\";\n\nexport type KafkaInstanceEnhanced = Required<Kafka> & {\n  request: KafkaRequest;\n};\n\nexport function kafkaRequestToKafkaInstanceEnhanched(\n  instance: KafkaRequest,\n  marketplaceSubscriptions: MarketPlaceSubscriptions[],\n  developerPlanInstanceLimits: SizeWithLimits[],\n  standardPlanInstanceLimits: SizeWithLimits[]\n): KafkaInstanceEnhanced {\n  const enhancedInstance: KafkaInstanceEnhanced = {\n    billing: undefined,\n    connectionRate: 0,\n    connections: 0,\n    createdAt: (instance.created_at ||\n      new Date().toISOString()) as DateIsoString,\n    egress: 0,\n    expiryDate: instance.expires_at as DateIsoString | undefined,\n    id: instance.id,\n    ingress: 0,\n    maxPartitions: 0,\n    messageSize: { type: \"bytes\", value: BigInt(0) },\n    name: instance.name || \"\",\n    owner: instance.owner || \"\",\n    plan: instance.instance_type as Plan,\n    provider: instance.cloud_provider as CloudProvider,\n    region: instance.region || \"\",\n    size: \"1\",\n    status: apiStatusToUIStatus(instance.status || \"\"),\n    storage: { type: \"bytes\", value: BigInt(0) },\n    updatedAt: (instance.updated_at ||\n      new Date().toISOString()) as DateIsoString,\n    request: instance,\n    clusterId: instance.cluster_id ? instance.cluster_id : undefined,\n    version: instance.version || \"\",\n    bootstrapUrl: instance.bootstrap_server_host,\n    adminUrl: instance.admin_api_server_url,\n    az: instance.multi_az == true ? \"multi\" : \"single\",\n  };\n\n  // update the billing info\n  try {\n    const marketplaceForBilling = marketplaceSubscriptions.find((ms) =>\n      ms.subscriptions.find((s) => s === instance.billing_cloud_account_id)\n    )?.marketplace;\n\n    const billing: KafkaInstanceEnhanced[\"billing\"] =\n      instance.billing_model === \"enterprise\"\n        ? \"dedicated\"\n        : instance.billing_model === \"standard\"\n        ? \"prepaid\"\n        : marketplaceForBilling && instance.billing_cloud_account_id\n        ? {\n            marketplace: marketplaceForBilling,\n            subscription: instance.billing_cloud_account_id,\n          }\n        : undefined;\n    enhancedInstance.billing = billing;\n  } catch (e) {\n    console.warn(\n      \"kafkaRequestToKafkaInstance\",\n      `couldn't retrieve the billing info for`,\n      instance\n    );\n  }\n\n  // update the limits\n  try {\n    const limits =\n      instance.instance_type === \"developer\"\n        ? developerPlanInstanceLimits\n        : standardPlanInstanceLimits;\n    const thisInstanceLimits = limits.find((l) => l.id === instance.size_id);\n    if (thisInstanceLimits) {\n      enhancedInstance.size = thisInstanceLimits.displayName;\n      enhancedInstance.ingress = thisInstanceLimits.ingress;\n      enhancedInstance.egress = thisInstanceLimits.egress;\n      enhancedInstance.storage = {\n        type: \"bytes\",\n        value: BigInt(instance.max_data_retention_size?.bytes || 0),\n      };\n      enhancedInstance.connections = thisInstanceLimits.connections;\n      enhancedInstance.connectionRate = thisInstanceLimits.connectionRate;\n      enhancedInstance.maxPartitions = thisInstanceLimits.maxPartitions;\n      enhancedInstance.messageSize = {\n        type: \"bytes\",\n        value: BigInt(thisInstanceLimits.messageSize),\n      };\n    }\n  } catch (e) {\n    console.warn(\n      \"kafkaRequestToKafkaInstance\",\n      `couldn't retrieve the limits info for`,\n      instance\n    );\n  }\n\n  return enhancedInstance;\n}\n\nfunction apiStatusToUIStatus(status: string): Status {\n  const mapping: { [key: string]: Status } = {\n    accepted: \"accepted\",\n    preparing: \"preparing\",\n    provisioning: \"provisioning\",\n    ready: \"ready\",\n    failed: \"degraded\",\n    deprovision: \"deprovision\",\n    deleting: \"deleting\",\n  };\n  return mapping[status] || \"degraded\";\n}\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport type { CreateKafkaInstanceServices } from \"ui\";\nimport { useApi } from \"../useApi\";\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n};\n\n/**\n * Create Kafka instance hook that creates kafka instance\n */\nexport const useCreateInstance =\n  (): CreateKafkaInstanceServices[\"onCreate\"] => {\n    const { kafkasFleet } = useApi();\n\n    return (data, onSuccess, onError) => {\n      const runner = async () => {\n        const apisService = kafkasFleet();\n\n        try {\n          const kafkaRequest = {} as KafkaRequestPayload;\n          kafkaRequest.name = data.name;\n          kafkaRequest.cloud_provider = data.provider;\n          kafkaRequest.region = data.region;\n          kafkaRequest.plan = data.plan + \".\" + data.sizeId;\n          kafkaRequest.billing_model =\n            data.billing === \"prepaid\"\n              ? \"standard\"\n              : data.billing !== undefined\n              ? \"marketplace\"\n              : null;\n          kafkaRequest.billing_cloud_account_id =\n            data.billing && data.billing !== \"prepaid\"\n              ? data.billing.subscription\n              : null;\n          await apisService.createKafka(true, kafkaRequest);\n          onSuccess();\n        } catch (error) {\n          if (isServiceApiError(error)) {\n            const { code } = error?.response?.data || {};\n\n            switch (data.plan) {\n              case \"developer\":\n                switch (code) {\n                  case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                    onError(\"name-taken\");\n                    break;\n\n                  // regardless of the error, let's not give too many details to trial users\n                  default:\n                    onError(\"developer-unavailable\");\n                    break;\n                }\n                break;\n\n              case \"standard\":\n                switch (code) {\n                  case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                    onError(\"name-taken\");\n                    break;\n\n                  case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                    onError(\"region-unavailable\");\n                    break;\n\n                  case ErrorCodes.INSUFFICIENT_QUOTA:\n                    onError(\"insufficient-quota\");\n                    break;\n\n                  default:\n                    console.error(\n                      \"useAvailableProvidersAndDefault\",\n                      \"createKafka unknown error\",\n                      error\n                    );\n                    onError(\"unknown\");\n                }\n                break;\n            }\n          } else {\n            console.error(\n              \"useAvailableProvidersAndDefault\",\n              \"createKafka unexpected error\",\n              error\n            );\n          }\n        }\n      };\n      void runner();\n    };\n  };\n","import type { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport {\n  useProviderRegionSizesFetchQuery,\n  useProvidersWithRegionsFetchQuery,\n  useStandardQuotaFetchQuery,\n} from \"../fetchQueries\";\nimport { kafkaRequestToKafkaInstanceEnhanched } from \"../transformers/kafkaRequestToKafkaInstanceEnhanched\";\n\nexport function useKafkaInstanceTransformer() {\n  const getStandardQuotaQuery = useStandardQuotaFetchQuery();\n  const getProvidersInfo = useProvidersWithRegionsFetchQuery();\n  const getProviderRegionsSizes = useProviderRegionSizesFetchQuery();\n\n  return async function kafkaInstanceTransformer(instance: KafkaRequest) {\n    if (!instance.region) {\n      throw new Error(\n        `Invalid KafkaRequest, empty region: ${JSON.stringify(instance)}`\n      );\n    }\n    const standardQuota = await getStandardQuotaQuery();\n\n    const providersInfo = await getProvidersInfo(\n      instance.billing_model !== \"standard\" ? \"developer\" : \"standard\"\n    );\n    const providerInfo = providersInfo.providers.find(\n      (p) => p.id === instance.cloud_provider\n    );\n    if (!providerInfo) {\n      return Promise.reject(\"Invalid cloud provider\");\n    }\n    const standardPlanLimitsQuery = getProviderRegionsSizes(\n      providerInfo,\n      instance.region,\n      \"standard\"\n    );\n    const developerPlanLimitsQuery = getProviderRegionsSizes(\n      providerInfo,\n      instance.region,\n      \"developer\"\n    );\n    const [standardPlanLimits, developerPlanLimits] = await Promise.all([\n      standardPlanLimitsQuery,\n      developerPlanLimitsQuery,\n    ]);\n    return kafkaRequestToKafkaInstanceEnhanched(\n      instance,\n      standardQuota.marketplaceSubscriptions,\n      developerPlanLimits,\n      standardPlanLimits\n    );\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport { fetchProvidersWithRegions } from \"../fetchers\";\nimport { providerQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useProvidersWithRegionsFetchQuery() {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n\n  return (plan: Plan) => {\n    const kms = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: providerQueries.list({ plan }),\n      queryFn: () =>\n        fetchProvidersWithRegions(\n          (...args) => kms.getCloudProviders(...args),\n          (...args) => kms.getCloudProviderRegions(...args),\n          plan\n        ),\n      staleTime: Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchOrganization, fetchStandardQuota } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useStandardQuotaFetchQuery(skipCache = false) {\n  const queryClient = useQueryClient();\n  const { account } = useApi();\n  const ams = account();\n\n  return async () => {\n    const organization = await queryClient.fetchQuery({\n      queryKey: masQueries.organization(),\n      queryFn: () =>\n        fetchOrganization((...args) =>\n          ams.apiAccountsMgmtV1CurrentAccountGet(...args)\n        ),\n      staleTime: Infinity,\n    });\n    if (!organization) {\n      return Promise.reject(\"Missing organization id\");\n    }\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.standardAvailable(),\n      queryFn: () =>\n        fetchStandardQuota(\n          (...args) =>\n            ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(...args),\n          organization\n        ),\n      staleTime: skipCache ? undefined : Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfoWithRegionsCapacity } from \"../fetchers\";\nimport { fetchProviderRegionSizes } from \"../fetchers\";\nimport { providerQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useProviderRegionSizesFetchQuery() {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n\n  return (\n    provider: CloudProviderInfoWithRegionsCapacity,\n    region: string,\n    plan: Plan\n  ) => {\n    const kms = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: providerQueries.limits[\n        plan === \"standard\" ? \"standard\" : \"developer\"\n      ]({ provider: provider.id, region }),\n      queryFn: () =>\n        fetchProviderRegionSizes(\n          (...args) => kms.getInstanceTypesByCloudProviderAndRegion(...args),\n          provider,\n          region,\n          plan\n        ),\n      staleTime: Infinity,\n    });\n  };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport { useKafkaInstanceTransformer } from \"./useKafkaInstanceTransformer\";\n\nexport function useKafka(id: string | undefined, suspense = false) {\n  const { refetchInterval } = useApiConfiguration();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  const api = kafkasFleet();\n\n  return useQuery({\n    enabled: Boolean(id),\n    queryKey: kafkaQueries.instance.details({ id }),\n    queryFn: async () => {\n      if (!id) {\n        return Promise.reject(\"Invalid Kafka instance id\");\n      }\n      const instance = await api.getKafkaById(id);\n      return dataMapper(instance.data);\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchKafkasParams } from \"../fetchers\";\nimport { fetchKafkas } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport { useDedicatedClusters } from \"./useDedicatedClusters\";\nimport { useKafkaInstanceTransformer } from \"./useKafkaInstanceTransformer\";\n\nexport function useKafkas(\n  params: Omit<FetchKafkasParams, \"dataMapper\" | \"getKafkas\" | \"clusterIds\">\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { data, isError } = useDedicatedClusters();\n  const queryClient = useQueryClient();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  const api = kafkasFleet();\n  const clusterIds = data?.clusters.map((c) => c.id);\n\n  return useQuery({\n    queryKey: kafkaQueries.list({ ...params, clusterIds }),\n    queryFn: async () => {\n      const res = await fetchKafkas({\n        getKafkas: (...args) => api.getKafkas(...args),\n        dataMapper,\n        ...params,\n        clusterIds,\n      });\n      res.instances.forEach((i) =>\n        queryClient.setQueryData(kafkaQueries.instance.details({ id: i.id }), i)\n      );\n      return res;\n    },\n    enabled: Boolean(clusterIds) || isError,\n    refetchInterval,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchTopicParams } from \"../fetchers\";\nimport { fetchTopic } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopic(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchTopicParams,\n    \"getTopic\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { topics } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.topic(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = topics(params.adminUrl);\n\n      return fetchTopic({\n        getTopic: (...args) => api.getTopic(...args),\n        ...params,\n      });\n    },\n    enabled:\n      Boolean(params.adminUrl) &&\n      Boolean(params.id) &&\n      Boolean(params.topicName),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchTopicsParams } from \"../fetchers\";\nimport { fetchTopics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopics(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchTopicsParams,\n    \"getTopics\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { topics } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.topics(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = topics(params.adminUrl);\n\n      return fetchTopics({\n        getTopics: (...args) => api.getTopics(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl) && Boolean(params.id),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchUserAccountsParams } from \"../fetchers\";\nimport { fetchUserAccounts } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useUserAccounts(\n  params: Omit<FetchUserAccountsParams, \"getUserAccounts\">,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { userAccounts } = useApi();\n\n  return useQuery({\n    queryKey: masQueries.userAccounts(params),\n    queryFn: async () => {\n      const api = await userAccounts();\n\n      return fetchUserAccounts({\n        getUserAccounts: (...args) => api.listPrincipals(...args),\n        ...params,\n      });\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchPermissionsParams } from \"../fetchers\";\nimport { fetchPermissions } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useAcls(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchPermissionsParams,\n    \"getAcls\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { acls } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.permissions(params),\n    queryFn: () => {\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      const api = acls(params.adminUrl);\n\n      return fetchPermissions({\n        getAcls: (...args) => api.getAcls(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchServiceAccountsParams } from \"../fetchers\";\nimport { fetchServiceAccounts } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useServiceAccounts(\n  params: Omit<FetchServiceAccountsParams, \"getServiceAccounts\">,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { serviceAccount } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.serviceAccounts(params),\n    queryFn: () => {\n      const api = serviceAccount();\n\n      return fetchServiceAccounts({\n        getServiceAccounts: (...args) => api.getServiceAccounts(...args),\n        ...params,\n      });\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport type { Status } from \"ui-models/src/models/kafka\";\nimport { ReadyStatuses, SuspendedStatuses } from \"ui-models/src/models/kafka\";\nimport { masQueries } from \"../queryKeys\";\n\nexport function useUser({\n  getUser,\n  suspense,\n}: {\n  getUser: () => Promise<{\n    username: string | undefined;\n    isOrgAdmin: boolean | undefined;\n  }>;\n  suspense: boolean;\n}) {\n  return useQuery({\n    queryKey: masQueries.user(),\n    queryFn: async () => {\n      const { username, isOrgAdmin } = await getUser();\n\n      if (username === undefined) {\n        return Promise.reject(\"Invalid username\");\n      }\n\n      if (isOrgAdmin === undefined) {\n        return Promise.reject(\"Invalid username\");\n      }\n\n      const canOpenConnection = (status: Status): boolean => {\n        return ReadyStatuses.includes(status);\n      };\n\n      const isUserOwnerOrAdmin = (owner: string) => {\n        return owner === username || isOrgAdmin;\n      };\n\n      const canChangeOwner = (owner: string, status: Status) => {\n        return (\n          owner === username ||\n          (isOrgAdmin && !SuspendedStatuses.includes(status))\n        );\n      };\n\n      return {\n        username,\n        isOrgAdmin,\n        canOpenConnection,\n        isUserOwnerOrAdmin,\n        canChangeOwner,\n      };\n    },\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { masQueries } from \"../queryKeys\";\n\nexport const useSSOProvider = () => {\n  const { basePath } = useApiConfiguration();\n\n  return useQuery({\n    queryKey: masQueries.tokenEndPointUrl(),\n    queryFn: async () => {\n      const response = await fetch(\n        `${basePath}/api/kafkas_mgmt/v1/sso_providers`\n      );\n      const providers = (await response.json()) as { token_url?: string };\n      const { token_url } = providers;\n      if (token_url === undefined || token_url === \"\") {\n        return Promise.reject(\"Invalid SSO token URL\");\n      }\n      return token_url;\n    },\n  });\n};\n","import { useQuery } from \"@tanstack/react-query\";\nimport { fetchSelfTermsReview } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useSelfTermsReview(suspense = false) {\n  const { account } = useApi();\n\n  return useQuery({\n    queryKey: masQueries.selfTermsReview(),\n    queryFn: async () => {\n      const api = account();\n\n      return fetchSelfTermsReview((...args) =>\n        api.apiAuthorizationsV1SelfTermsReviewPost(...args)\n      );\n    },\n    suspense,\n  });\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { useKafkaInstanceTransformer } from \"../queries\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaFetchQuery() {\n  const queryClient = useQueryClient();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  return async (id: string) => {\n    const api = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.details({ id }),\n      queryFn: async () => {\n        const instance = await api.getKafkaById(id);\n        return dataMapper(instance.data);\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchKafkaKpis } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaKpisFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (id: string) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.kpi({ id }),\n      queryFn: async () => {\n        return fetchKafkaKpis(\n          (...args) => api.getMetricsByInstantQuery(...args),\n          id\n        );\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchKafkaMetricsProps } from \"../fetchers\";\nimport { fetchKafkaMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (params: Omit<FetchKafkaMetricsProps, \"getMetricsByRangeQuery\">) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.instance(params),\n      queryFn: async () => {\n        return fetchKafkaMetrics({\n          getMetricsByRangeQuery: (...args) =>\n            api.getMetricsByRangeQuery(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchMessagesParams } from \"../fetchers\";\nimport { fetchMessages } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useMessagesFetchQuery() {\n  const { records } = useApi();\n  const queryClient = useQueryClient();\n\n  return (\n    params: { id: string; adminUrl: string } & Omit<\n      FetchMessagesParams,\n      \"consumeRecords\"\n    >\n  ) => {\n    const api = records(params.adminUrl);\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.topicMessages(params),\n      queryFn: () => {\n        if (!params.id) {\n          return Promise.reject(\"Invalid id\");\n        }\n        if (!params.adminUrl) {\n          return Promise.reject(\"Invalid adminUrl\");\n        }\n\n        return fetchMessages({\n          consumeRecords: (...args) => api.consumeRecords(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchTopicsParams } from \"../fetchers\";\nimport { fetchTopics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopicsFetchQuery() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return (\n    params: Omit<FetchTopicsParams, \"getTopics\"> & {\n      id: string;\n      adminUrl: string;\n    }\n  ) => {\n    const api = topics(params.adminUrl);\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.topics(params),\n      queryFn: async () => {\n        return fetchTopics({\n          getTopics: (...args) => api.getTopics(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchTopicsMetricsProps } from \"../fetchers\";\nimport { fetchTopicsMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopicsMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (params: Omit<FetchTopicsMetricsProps, \"getMetricsByRangeQuery\">) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.topic(params),\n      queryFn: async () => {\n        return fetchTopicsMetrics({\n          getMetricsByRangeQuery: (...args) =>\n            api.getMetricsByRangeQuery(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type {\n  CreateDedicatedKafkaFormData,\n  CreateDedicatedKafkaInstanceError,\n} from \"ui\";\nimport { dedicatedQueries, kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useCreateDedicatedKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      instance: CreateDedicatedKafkaFormData;\n      onSuccess: () => void;\n      onError: (error: CreateDedicatedKafkaInstanceError) => void;\n    }) {\n      const { instance, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      const kafkaRequest: KafkaRequestPayload = {\n        name: instance.name,\n        cluster_id: instance.cluster.id,\n      };\n      kafkaRequest.plan = \"standard.\" + instance.sizeId;\n      kafkaRequest.billing_model = \"enterprise\";\n      try {\n        await api.createKafka(true, kafkaRequest);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const { code } = error?.response?.data || {};\n\n          switch (code) {\n            case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n              onError(\"name-taken\");\n              break;\n\n            case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n              onError(\"cluster-unavailable\");\n              break;\n\n            case ErrorCodes.INSUFFICIENT_QUOTA:\n              onError(\"insufficient-quota\");\n              break;\n\n            default:\n              console.error(\n                \"useCreateDedicatedKafkaMutation\",\n                \"createKafka unknown error\",\n                error\n              );\n              onError(\"unknown\");\n          }\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n        void queryClient.invalidateQueries([dedicatedQueries._root()]);\n      },\n    }\n  );\n}\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n} as const;\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type { CreateKafkaFormData, CreateKafkaInstanceError } from \"ui\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useCreateKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      instance: CreateKafkaFormData;\n      onSuccess: () => void;\n      onError: (error: CreateKafkaInstanceError) => void;\n    }) {\n      const { instance, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      const kafkaRequest: KafkaRequestPayload = {\n        name: instance.name,\n        cloud_provider: instance.provider,\n        region: instance.region,\n      };\n      kafkaRequest.plan = instance.plan + \".\" + instance.sizeId;\n      kafkaRequest.billing_model =\n        instance.billing === \"prepaid\"\n          ? \"standard\"\n          : instance.billing !== undefined\n          ? \"marketplace\"\n          : null;\n      kafkaRequest.billing_cloud_account_id =\n        instance.billing && instance.billing !== \"prepaid\"\n          ? instance.billing.subscription\n          : null;\n      try {\n        await api.createKafka(true, kafkaRequest);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const { code } = error?.response?.data || {};\n\n          switch (instance.plan) {\n            case \"developer\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                // regardless of the error, let's not give too many details to trial users\n                default:\n                  onError(\"developer-unavailable\");\n                  break;\n              }\n              break;\n\n            case \"standard\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                  onError(\"region-unavailable\");\n                  break;\n\n                case ErrorCodes.INSUFFICIENT_QUOTA:\n                  onError(\"insufficient-quota\");\n                  break;\n\n                default:\n                  console.error(\n                    \"useKafkaCreateInstanceMutation\",\n                    \"createKafka unknown error\",\n                    error\n                  );\n                  onError(\"unknown\");\n              }\n              break;\n          }\n        } else {\n          console.error(\n            \"useKafkaCreateInstanceMutation\",\n            \"createKafka unexpected error\",\n            error\n          );\n          onError(\"unknown\");\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n      },\n    }\n  );\n}\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n} as const;\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      id: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { id, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      try {\n        await api.deleteKafkaById(id, true);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance({\n      adminUrl,\n      name,\n      onSuccess,\n      onError,\n    }: {\n      instanceId: string;\n      adminUrl: string;\n      name: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const api = topics(adminUrl);\n      try {\n        await api.deleteTopic(name);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type {\n  KafkaRequest,\n  KafkaUpdateRequest,\n} from \"@rhoas/kafka-management-sdk\";\nimport { getErrorCode, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type { AxiosResponse } from \"axios\";\nimport { AxiosError } from \"axios\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\ntype Errors = \"invalid-user\" | \"other\" | \"unknown\";\n\nexport function useUpdateKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation<\n    AxiosResponse<KafkaRequest>,\n    { type: Errors; message?: string },\n    { id: string; updates: KafkaUpdateRequest },\n    unknown\n  >(\n    async function kafkaCreateInstance({ id, updates }) {\n      const api = kafkasFleet();\n      try {\n        return await api.updateKafkaById(id, updates);\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const code = getErrorCode(error);\n\n          switch (code) {\n            case \"KAFKAS-MGMT-21\": {\n              return Promise.reject({\n                type: \"invalid-user\",\n                message: error.response?.data.reason,\n              });\n            }\n            default: {\n              return Promise.reject({\n                type: \"other\",\n                message: error.response?.data.reason,\n              });\n            }\n          }\n        } else if (error instanceof AxiosError) {\n          return Promise.reject({ type: \"unknown\", message: error.message });\n        } else {\n          return Promise.reject({ type: \"unknown\", message: \"unknown\" });\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteConsumerGroupMutation() {\n  const { consumerGroups } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function deleteConsumerGroup(props: {\n      instanceId: string;\n      adminUrl: string;\n      consumerGroupId: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { instanceId, adminUrl, consumerGroupId, onSuccess, onError } =\n        props;\n      const api = consumerGroups(adminUrl);\n      try {\n        await api.deleteConsumerGroupById(consumerGroupId);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useApi } from \"../useApi\";\nimport type { OffsetValue } from \"ui\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\n\nexport function useResetConsumerGroupMutation() {\n  const { consumerGroups } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function consumerGroupResetOffset(props: {\n      instanceId: string;\n      adminUrl: string;\n      consumerGroupId: string;\n      offset: OffsetValue;\n      topic: string;\n      partitions: number[];\n      value?: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const {\n        instanceId,\n        adminUrl,\n        consumerGroupId,\n        offset,\n        topic,\n        partitions,\n        value,\n        onSuccess,\n        onError,\n      } = props;\n      const api = consumerGroups(adminUrl);\n      try {\n        await api.resetConsumerGroupOffset(consumerGroupId, {\n          value,\n          offset,\n          topics: [{ topic, partitions }],\n        });\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport type { AclFilter } from \"../types\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeletePermissionsMutation() {\n  const { acls } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function deletePermissions(props: {\n      instanceId: string;\n      adminUrl: string;\n      acl: AclFilter;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, acl, onSuccess, onError } = props;\n      const api = acls(adminUrl);\n      try {\n        await api.deleteAcls(\n          acl.resourceType,\n          acl.resourceName,\n          acl.patternType,\n          acl.principal,\n          acl.operation,\n          acl.permissionType\n        );\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason || \"\";\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance.permissions({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useUpdatePermissionsMutation() {\n  const { acls } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function updatePermissionsPermissions(props: {\n      instanceId: string;\n      adminUrl: string;\n      acl: AclBinding;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, acl, onSuccess, onError } = props;\n      const api = acls(adminUrl);\n      try {\n        await api.createAcl({\n          resourceName: acl.resourceName,\n          resourceType: acl.resourceType,\n          patternType: acl.patternType,\n          permission: acl.permission,\n          principal: acl.principal,\n          operation: acl.operation,\n        });\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type { NewTopicInput, TopicSettings } from \"@rhoas/kafka-instance-sdk\";\nimport {\n  UserEditable,\n  convertToTopicSettings,\n} from \"consoledot-api/src/transformers/topicTransformer\";\nimport { convertToKeyValuePairs } from \"consoledot-api/src/transformers/topicTransformer\";\n\nexport function useCreateTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function createTopic(props: {\n      instanceId: string;\n      adminUrl: string;\n      topic: Topic;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, topic, onSuccess, onError } = props;\n      const api = topics(adminUrl);\n\n      const createTopic = (topic: Topic): NewTopicInput => {\n        const { name } = topic;\n        const topicSettings = convertToTopicSettings(topic);\n        return {\n          name,\n          settings: topicSettings,\n        };\n      };\n\n      try {\n        await api.createTopic(createTopic(topic));\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message || \"?\");\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { TopicSettings } from \"@rhoas/kafka-instance-sdk\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport {\n  convertToKeyValuePairs,\n  convertToTopicSettings,\n} from \"consoledot-api/src/transformers/topicTransformer\";\n\nexport function useUpdateTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function UpdateTopicMutation({\n      adminUrl,\n      topic,\n      onSuccess,\n      onError,\n    }: {\n      instanceId: string;\n      adminUrl: string;\n      topic: Topic;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const api = topics(adminUrl);\n\n      const updateTopic = (topic: Topic) => {\n        const topicSettings = convertToTopicSettings(topic);\n        return topicSettings;\n      };\n\n      try {\n        await api.updateTopic(topic.name || \"\", updateTopic(topic));\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message || \"?\");\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type {\n  AclOperationFilter,\n  AclPatternTypeFilter,\n  AclPermissionTypeFilter,\n  AclResourceTypeFilter,\n} from \"@rhoas/kafka-instance-sdk\";\nimport {\n  ConsumerGroupOrderKey,\n  TopicOrderKey,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { RangeQuery } from \"@rhoas/kafka-management-sdk\";\n\nexport type NoUndefinedField<T> = {\n  [P in keyof T]-?: NoUndefinedField<NonNullable<T[P]>>;\n};\n\nexport type SafeRangeQuery = NoUndefinedField<RangeQuery>;\n\nexport const KafkaInstancesSortableColumns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"provider\",\n  \"region\",\n] as const;\n\nexport type KafkaInstancesSortableColumn =\n  (typeof KafkaInstancesSortableColumns)[number];\n\nexport const KafkaTopicsSortableColumns = [\n  ...Object.values(TopicOrderKey),\n] as const;\n\nexport type KafkaTopicsSortableColumn =\n  (typeof KafkaTopicsSortableColumns)[number];\n\nexport const KafkaConsumerGroupSortableColumns = [\n  ...Object.values(ConsumerGroupOrderKey),\n] as const;\n\nexport type KafkaConsumerGroupSortableColumn =\n  (typeof KafkaConsumerGroupSortableColumns)[number];\n\nexport type AclFilter = {\n  resourceType?: AclResourceTypeFilter;\n  resourceName?: string;\n  patternType?: AclPatternTypeFilter;\n  principal?: string;\n  operation?: AclOperationFilter;\n  permissionType?: AclPermissionTypeFilter;\n};\n","import { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { ReactQueryDevtools } from \"@tanstack/react-query-devtools\";\nimport { isDevToolsEnabled } from \"local-storage-helpers\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext, lazy, Suspense, useContext } from \"react\";\n\nconst ReactQueryDevtoolsProduction = lazy(() =>\n  import(\"@tanstack/react-query-devtools/build/lib/index.prod.js\").then(\n    (d) => ({\n      default: d.ReactQueryDevtools,\n    })\n  )\n);\n\ntype ApiContextProps = {\n  accessToken: () => Promise<string>;\n  basePath: string;\n  refetchInterval: number;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst ApiContext = createContext<ApiContextProps>(null!);\n\nconst queryClient = new QueryClient();\n\nexport const ApiProvider: FunctionComponent<ApiContextProps> = ({\n  children,\n  ...context\n}) => {\n  const showDevTools = isDevToolsEnabled();\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ApiContext.Provider value={context}>\n        {children}\n        {showDevTools && (\n          <Suspense fallback={null}>\n            <ReactQueryDevtoolsProduction />\n          </Suspense>\n        )}\n      </ApiContext.Provider>\n    </QueryClientProvider>\n  );\n};\n\nexport function useApiConfiguration() {\n  return useContext(ApiContext);\n}\n\nexport { useQueryErrorResetBoundary } from \"@tanstack/react-query\";\n","import type {\n  ConsumerGroup as ConsumerGroupApi,\n  ConsumerGroupState,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type {\n  Consumer,\n  ConsumerGroup,\n} from \"ui-models/src/models/consumer-group\";\n\nexport function consumerGroupTransformer(t: ConsumerGroupApi): ConsumerGroup {\n  const state = stateMapping[t.state as ConsumerGroupState];\n  return {\n    name: t.groupId,\n    state: state,\n    consumers: t.consumers.map<Consumer>((consumer) => ({\n      groupId: consumer.groupId,\n      topic: consumer.topic,\n      lag: consumer.lag,\n      memberId: consumer.memberId,\n      partition: consumer.partition,\n      offset: consumer.offset,\n      logEndOffset: consumer.logEndOffset,\n    })),\n    activeConsumers: t.metrics?.activeConsumers,\n    laggingPartitions: t.metrics?.laggingPartitions,\n    unassignedPartitions: t.metrics?.unassignedPartitions,\n  };\n}\n\nexport const stateMapping: {\n  [state in ConsumerGroupState]: ConsumerGroup[\"state\"];\n} = {\n  DEAD: \"Dead\",\n  EMPTY: \"Empty\",\n  STABLE: \"Stable\",\n  UNKNOWN: \"Unknown\",\n  COMPLETING_REBALANCE: \"CompletingRebalance\",\n  PREPARING_REBALANCE: \"PreparingRebalance\",\n};\n","import type { GroupsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { ConsumerGroup } from \"ui-models/src/models/consumer-group\";\nimport { consumerGroupTransformer } from \"../transformers/consumerGroupTransformer\";\n\nexport type FetchConsumerGroupParams = {\n  getConsumerGroupById: GroupsApi[\"getConsumerGroupById\"];\n  consumerGroupId: string;\n};\n\nexport async function fetchConsumerGroup({\n  getConsumerGroupById,\n  consumerGroupId,\n}: FetchConsumerGroupParams): Promise<ConsumerGroup> {\n  const response = await getConsumerGroupById(consumerGroupId);\n  return consumerGroupTransformer(response.data);\n}\n","import type {\n  ConsumerGroupState,\n  GroupsApi,\n  SortDirection,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { ConsumerGroup } from \"ui-models/src/models/consumer-group\";\nimport { stateMapping } from \"../transformers/consumerGroupTransformer\";\nimport type { KafkaConsumerGroupSortableColumn } from \"../types\";\n\nexport type FetchConsumerGroupsParams = {\n  getConsumerGroups: GroupsApi[\"getConsumerGroups\"];\n  page?: number;\n  perPage?: number;\n  sort?: KafkaConsumerGroupSortableColumn;\n  direction?: SortDirection;\n  topic?: string;\n  groupId?: string;\n};\n\nexport async function fetchConsumerGroups({\n  getConsumerGroups,\n  page,\n  perPage,\n  topic,\n  groupId,\n  sort,\n  direction,\n}: FetchConsumerGroupsParams): Promise<{\n  groups: ConsumerGroup[];\n  count: number;\n}> {\n  const response = await getConsumerGroups(\n    undefined,\n    undefined,\n    perPage,\n    page,\n    topic,\n    groupId,\n    direction,\n    sort\n  );\n  const groups = (response.data.items || []).map<ConsumerGroup>((t) => ({\n    name: t.groupId || \"\",\n    state: stateMapping[t.state as ConsumerGroupState],\n    consumers: t.consumers,\n    activeConsumers: t.metrics?.activeConsumers,\n    laggingPartitions: t.metrics?.laggingPartitions,\n    unassignedPartitions: t.metrics?.unassignedPartitions,\n  }));\n  const count = response.data.total;\n\n  return { count, groups };\n}\n","import type { EnterpriseCluster } from \"@rhoas/kafka-management-sdk\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\n\nexport function dedicatedClusterTransformer(\n  c: EnterpriseCluster & { [key: string]: any } // TODO: remove this hack with the latest SDK\n): DedicatedCluster {\n  if (c.cluster_id === undefined || c.status === undefined) {\n    throw new Error(\"Invalid EnterpriseCluster data\");\n  }\n  return {\n    id: c.cluster_id,\n    status:\n      c.status === \"ready\"\n        ? \"ready\"\n        : c.status === \"failed\"\n        ? \"failed\"\n        : \"provisioning\",\n    requiresPrivateNetwork: c.access_kafkas_via_private_network,\n    az: c.multi_az ? \"multi\" : \"single\",\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    cloudProvider: c.cloud_provider,\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    cloudRegion: c.region,\n  };\n}\n","import type { EnterpriseDataplaneClustersApi } from \"@rhoas/kafka-management-sdk\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport { dedicatedClusterTransformer } from \"../transformers/dedicatedClusterTransformer\";\n\nexport type FetchDedicatedClustersParams = {\n  getEnterpriseOsdClusters: EnterpriseDataplaneClustersApi[\"getEnterpriseOsdClusters\"];\n};\n\nexport async function fetchDedicatedClusters({\n  getEnterpriseOsdClusters,\n}: FetchDedicatedClustersParams): Promise<{\n  clusters: DedicatedCluster[];\n  count: number;\n}> {\n  const response = await getEnterpriseOsdClusters();\n  if (response.status === 403) {\n    throw new MissingDedicatedEntitlement();\n  }\n  return {\n    clusters: (response.data.items || []).map(dedicatedClusterTransformer),\n    count: response.data.total,\n  };\n}\n\nexport class MissingDedicatedEntitlement extends Error {}\n","import type { QuotaCost } from \"@rhoas/account-management-sdk\";\n\nexport const standardId = \"RHOSAK\" as const;\nexport const developerId = \"RHOSAKTrial\" as const;\nexport const dedicatedId = \"RHOSAKCC\" as const;\nexport const resourceName = \"rhosak\" as const;\n\nexport function isStandardQuota(q: QuotaCost) {\n  return q.related_resources?.find((r) => r.billing_model === \"standard\");\n}\n\nexport function isMarketplaceQuota(q: QuotaCost) {\n  return q.related_resources?.find((r) => r.billing_model === \"marketplace\");\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport type { MarketPlaceSubscriptions } from \"ui-models/src/models/kafka\";\nimport {\n  dedicatedId,\n  isStandardQuota,\n  resourceName,\n} from \"../utilsAndConstants\";\n\nexport type DedicatedQuota = {\n  hasTrialQuota: boolean;\n  remainingDedicatedQuota: number | undefined;\n  remainingMarketplaceQuota: number | undefined;\n  marketplaceSubscriptions: MarketPlaceSubscriptions[];\n};\nexport const fetchDedicatedQuota = async (\n  api: AppServicesApi[\"apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet\"],\n  organizationId: string\n) => {\n  const quotaResponse = await api(\n    organizationId,\n    undefined,\n    true,\n    undefined,\n    true\n  );\n  if (quotaResponse.status !== 200) {\n    throw new Error(quotaResponse.statusText);\n  }\n  const dedicatedQuotas = quotaResponse.data.items?.filter((q) =>\n    q.related_resources?.find(\n      (r) => r.resource_name === resourceName && r.product === dedicatedId\n    )\n  );\n\n  const dedicatedQuota = dedicatedQuotas?.find(isStandardQuota);\n  const hasDedicatedQuota = dedicatedQuota !== undefined;\n\n  const remainingDedicatedQuota = dedicatedQuota\n    ? dedicatedQuota.allowed - dedicatedQuota.consumed\n    : undefined;\n\n  return {\n    hasDedicatedQuota,\n    remainingDedicatedQuota,\n  };\n};\n","import type { SupportedKafkaSize } from \"@rhoas/kafka-management-sdk\";\nimport type { SizeWithLimits } from \"../fetchers\";\n\nexport function apiSizeToComponentSize(\n  isDisabled: (id: string) => boolean,\n  apiSize: SupportedKafkaSize\n): SizeWithLimits {\n  const s = apiSize as Required<SupportedKafkaSize>;\n  return {\n    id: s.id,\n    displayName: s.display_name,\n    quota: s.quota_consumed,\n    ingress: (s.ingress_throughput_per_sec.bytes || 0) / 1048576,\n    egress: (s.egress_throughput_per_sec.bytes || 0) / 1048576,\n    storage: Math.round((s.max_data_retention_size.bytes || 0) / 1073741824),\n    connections: s.total_max_connections,\n    connectionRate: s.max_connection_attempts_per_sec,\n    maxPartitions: s.max_partitions,\n    messageSize: (s.max_message_size.bytes || 0) / 1048576,\n    status: s.maturity_status === \"stable\" ? \"stable\" : \"preview\",\n    trialDurationHours: s.lifespan_seconds ? s.lifespan_seconds / 60 / 60 : 0,\n    isDisabled: isDisabled(s.id),\n  };\n}\n","import type {\n  EnterpriseDataplaneClustersApi,\n  SupportedKafkaSize,\n} from \"@rhoas/kafka-management-sdk\";\nimport type { DedicatedSizes } from \"ui\";\nimport { apiSizeToComponentSize } from \"../transformers/apiSizeToComponentSize\";\n\nexport type FetchDedicatedClusterSizesParams = {\n  getEnterpriseClusterById: EnterpriseDataplaneClustersApi[\"getEnterpriseClusterById\"];\n  clusterId: string;\n};\n\nexport async function fetchDedicatedClusterSizes({\n  getEnterpriseClusterById,\n  clusterId,\n}: FetchDedicatedClusterSizesParams): Promise<DedicatedSizes> {\n  const response = await getEnterpriseClusterById(clusterId);\n  const data = response.data as typeof response.data & { [key: string]: any }; // TODO: fix this with the latest SDK version\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n  const supportedInstanceTypes = data.supported_instance_types.instance_types;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n  const sizes: DedicatedSizes = supportedInstanceTypes\n    .flatMap((i: { sizes: SupportedKafkaSize[] }) => i.sizes)\n    .map((s: SupportedKafkaSize) => apiSizeToComponentSize(() => false, s));\n  return sizes;\n}\n","import type { DefaultApi, InstantQuery } from \"@rhoas/kafka-management-sdk\";\nimport type { NoUndefinedField } from \"../types\";\n\nexport async function fetchKafkaKpis(\n  getMetricsByInstantQuery: DefaultApi[\"getMetricsByInstantQuery\"],\n  id: string\n) {\n  let topics = 0,\n    topicPartitions = 0,\n    consumerGroups = 0;\n\n  const response = await getMetricsByInstantQuery(id, [\n    \"kafka_topic:kafka_topic_partitions:sum\", // (Number of topic partitions)\n    \"kafka_topic:kafka_topic_partitions:count\", // (Number of topics)\n    \"consumergroup:kafka_consumergroup_members:count\", // (number of consumer groups - note that this metric will appear after a consumer group is created. There should be handled by the UI in a way that the metric isn't visible if no consumer groups are created)\n  ]);\n\n  const safeMetrics: NoUndefinedField<InstantQuery[]> = (response.data.items ||\n    []) as NoUndefinedField<InstantQuery[]>;\n\n  safeMetrics.forEach(({ metric, value }) => {\n    const { __name__: name } = metric;\n\n    switch (name) {\n      case \"kafka_topic:kafka_topic_partitions:sum\":\n        topicPartitions = value;\n        break;\n      case \"kafka_topic:kafka_topic_partitions:count\":\n        topics = value;\n        break;\n      case \"consumergroup:kafka_consumergroup_members:count\":\n        consumerGroups = value;\n        break;\n    }\n  });\n  return {\n    consumerGroups,\n    topicPartitions,\n    topics,\n  };\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  BrokerBytesMetric,\n  GetKafkaInstanceMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"ui\";\nimport type { SafeRangeQuery } from \"../types\";\n\nexport type FetchKafkaMetricsProps = {\n  getMetricsByRangeQuery: DefaultApi[\"getMetricsByRangeQuery\"];\n  id: string;\n  duration: number;\n  interval: number;\n  selectedBroker: string | undefined;\n};\n\nexport async function fetchKafkaMetrics({\n  getMetricsByRangeQuery,\n  id,\n  duration,\n  interval,\n  selectedBroker,\n}: FetchKafkaMetricsProps): Promise<GetKafkaInstanceMetricsResponse> {\n  const response = await getMetricsByRangeQuery(id, duration, interval, [\n    \"kubelet_volume_stats_used_bytes\",\n    \"kafka_broker_quota_totalstorageusedbytes\",\n    \"kas_broker_partition_log_size_bytes_top50\",\n    \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\",\n    \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\",\n  ]);\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(\n        m.values &&\n        m.metric &&\n        m.metric.topic &&\n        m.metric.name &&\n        m.metric.broker_id &&\n        m.metric.partition_id &&\n        m.metric.persistentvolumeclaim &&\n        m.metric.persistentvolumeclaim.includes(\"zookeeper\")\n      )\n  ) as SafeRangeQuery[];\n\n  const brokers = Array.from(\n    new Set(safeMetrics.map((m) => m.metric.broker_id))\n  );\n\n  const usedDiskSpaceMetrics: BrokerBytesMetric = {};\n  const connectionAttemptRateMetrics: TimeSeriesMetrics = {};\n  const clientConnectionsMetrics: TimeSeriesMetrics = {};\n  const bytesPerPartitionMetrics: PartitionBytesMetric = {};\n\n  const connectionRateLimit = 0,\n    connectionsLimit = 0,\n    diskSpaceLimit = 0;\n\n  safeMetrics.forEach((m) => {\n    const { __name__: name, topic, partition_id, broker_id } = m.metric;\n\n    function addAggregatedValuesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    function addAggregateBrokerBytes() {\n      if (name === \"kubelet_volume_stats_used_bytes\") {\n        const broker = usedDiskSpaceMetrics[\"total\"] || {};\n        m.values.forEach(({ value, timestamp }) => {\n          broker[timestamp] = value + (broker[timestamp] || 0);\n        });\n        usedDiskSpaceMetrics[\"total\"] = broker;\n      } else {\n        const broker = usedDiskSpaceMetrics[broker_id] || {};\n        m.values.forEach(\n          ({ timestamp, value }) =>\n            (broker[timestamp] = value + broker[timestamp] || 0)\n        );\n        usedDiskSpaceMetrics[broker_id] = broker;\n      }\n    }\n\n    function addAggregatePartitionBytes() {\n      const partitionKey = selectedBroker\n        ? topic + \" / \" + partition_id\n        : broker_id + \" , \" + topic + \" / \" + partition_id;\n      const partition = bytesPerPartitionMetrics[broker_id] || {};\n      m.values.forEach(({ value, timestamp }) => {\n        partition[timestamp] = value + (partition[timestamp] || 0);\n      });\n      bytesPerPartitionMetrics[partitionKey] = partition;\n    }\n    switch (name) {\n      case \"kubelet_volume_stats_used_bytes\":\n      case \"kafka_broker_quota_totalstorageusedbytes\":\n        addAggregateBrokerBytes();\n        break;\n      case \"kas_broker_partition_log_size_bytes_top50\":\n        addAggregatePartitionBytes();\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\":\n        addAggregatedValuesTo(connectionAttemptRateMetrics);\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\":\n        addAggregatedValuesTo(clientConnectionsMetrics);\n        break;\n    }\n  });\n  return {\n    brokers,\n    usedDiskSpaceMetrics,\n    bytesPerPartitionMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionRateLimit,\n    connectionsLimit,\n  };\n}\n","export function valuesToQuery(\n  field: string,\n  values: string[],\n  comparison: \"%\" | \"=\" | \"<>\",\n  join: \"and\" | \"or\"\n): string | undefined {\n  return values\n    .map((v) =>\n      comparison === \"%\"\n        ? `${field} like %${v.trim()}%`\n        : `${field} ${comparison} ${v.trim()}`\n    )\n    .join(` ${join} `);\n}\n","import type { DefaultApi, KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport type { SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { SimplifiedStatuses } from \"ui-models/src/models/kafka\";\nimport type { KafkaInstanceEnhanced } from \"../transformers/kafkaRequestToKafkaInstanceEnhanched\";\nimport type { KafkaInstancesSortableColumn } from \"../types\";\nimport { valuesToQuery } from \"./valuesToQuery\";\n\nconst uiColumnMapping: {\n  [key in KafkaInstancesSortableColumn]: keyof KafkaRequest;\n} = {\n  name: \"name\",\n  owner: \"owner\",\n  provider: \"cloud_provider\",\n  region: \"region\",\n  createdAt: \"created_at\",\n};\nexport type FetchKafkasParams = {\n  getKafkas: DefaultApi[\"getKafkas\"];\n  dataMapper: (data: KafkaRequest) => Promise<KafkaInstanceEnhanced>;\n  page: number;\n  perPage: number;\n  name: string[];\n  owner: string[];\n  status: SimplifiedStatus[];\n  sort: KafkaInstancesSortableColumn;\n  direction: \"asc\" | \"desc\";\n  clusterIds: string[] | undefined;\n  deployment: \"standard\" | \"clusters\";\n};\n\nexport async function fetchKafkas(params: FetchKafkasParams): Promise<{\n  instances: KafkaInstanceEnhanced[];\n  count: number;\n}> {\n  const {\n    name,\n    status,\n    owner,\n    sort,\n    direction,\n    page,\n    perPage,\n    clusterIds,\n    deployment,\n    dataMapper,\n    getKafkas,\n  } = params;\n  const search = filtersToSearch(name, owner, status, clusterIds, deployment);\n\n  if (\n    deployment === \"clusters\" &&\n    (clusterIds === undefined || clusterIds?.length === 0)\n  ) {\n    return Promise.resolve({ instances: [], count: 0 });\n  }\n  const res = await getKafkas(\n    page.toString(10),\n    perPage.toString(10),\n    sort ? `${uiColumnMapping[sort]} ${direction}` : undefined,\n    search\n  );\n  const rawInstances = res.data.items;\n  const count = res.data.total;\n  const instances = await Promise.all(rawInstances.map(dataMapper));\n  return {\n    instances,\n    count,\n  };\n}\n\nexport function filtersToSearch(\n  name: string[],\n  owner: string[],\n  status: SimplifiedStatus[],\n  clusters: string[] | undefined,\n  deployment: \"standard\" | \"clusters\"\n): string {\n  const querystring = [\n    valuesToQuery(\"name\", name, \"%\", \"or\"),\n    valuesToQuery(\"owner\", owner, \"%\", \"or\"),\n    valuesToQuery(\n      \"status\",\n      status.flatMap((s) => SimplifiedStatuses[s]),\n      \"=\",\n      \"or\"\n    ),\n    clusters\n      ? valuesToQuery(\n          \"cluster_id\",\n          clusters,\n          deployment === \"standard\" ? \"<>\" : \"=\",\n          deployment === \"standard\" ? \"and\" : \"or\"\n        )\n      : null,\n  ]\n    .filter(Boolean)\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    .map((q) => `(${q!})`)\n    .join(\" and \");\n  return querystring;\n}\n","import type { Record, RecordsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport type { DateIsoString } from \"../../../ui-models/src/types\";\n\nexport type FetchMessagesParams = {\n  consumeRecords: RecordsApi[\"consumeRecords\"];\n  topicName: string;\n  partition?: number;\n  offset?: number;\n  timestamp?: DateIsoString;\n  limit: number;\n};\n\nexport async function fetchMessages({\n  topicName,\n  consumeRecords,\n  partition,\n  offset,\n  timestamp,\n  limit,\n}: FetchMessagesParams): Promise<Message[]> {\n  const response = await consumeRecords(\n    topicName,\n    undefined,\n    limit,\n    undefined,\n    offset,\n    partition,\n    timestamp\n  );\n  return response.data.items.map((m: Record) => ({\n    partition: m.partition,\n    offset: m.offset,\n    timestamp: m.timestamp as DateIsoString,\n    key: m.key,\n    value: m.value,\n    headers: m.headers || {},\n  }));\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\n\nexport async function fetchOrganization(\n  api: AppServicesApi[\"apiAccountsMgmtV1CurrentAccountGet\"]\n) {\n  const account = await api();\n  const orgId = account?.data?.organization?.id;\n  return orgId;\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { Plan, Size } from \"ui-models/src/models/kafka\";\nimport { apiSizeToComponentSize } from \"../transformers/apiSizeToComponentSize\";\nimport type { CloudProviderInfoWithRegionsCapacity } from \"./fetchProvidersWithRegions\";\n\nexport type SizeWithLimits = Size & { trialDurationHours: number };\n\nexport async function fetchProviderRegionSizes(\n  api: DefaultApi[\"getInstanceTypesByCloudProviderAndRegion\"],\n  providerInfo: CloudProviderInfoWithRegionsCapacity,\n  region: string,\n  instanceType: Plan\n) {\n  const regions = providerInfo.regions;\n  const regionInfo = regions.find((r) => r.id === region);\n  const availableSizes =\n    regionInfo?.capacity.flatMap((c) =>\n      c.available_sizes.map((s) => `${c.instance_type}.${s}`)\n    ) || [];\n  const sizes = await api(providerInfo.id, region);\n  if (!sizes?.data?.instance_types) {\n    throw new Error(`No instance_types from backend`);\n  }\n\n  const standardSizes =\n    sizes?.data?.instance_types.find((i) => i.id === instanceType)?.sizes || [];\n\n  return standardSizes.map(\n    apiSizeToComponentSize.bind(\n      undefined,\n      (id) => !availableSizes.includes(`${instanceType}.${id}`)\n    )\n  );\n}\n\n//\n// export async function fetchProviderRegionSizesForPlanStandard (\n//   api: DefaultApi['getInstanceTypesByCloudProviderAndRegion'], providerInfo: CloudProviderInfoWithRegionsCapacity, region: string\n// )  {\n//   return fetchProviderRegionSizes(api, providerInfo, region, \"standard\");\n// };\n//\n// export const fetchProviderRegionSizesForPlanDeveloper = (\n//   api: DefaultApi['getInstanceTypesByCloudProviderAndRegion'], providerInfo: CloudProviderInfoWithRegionsCapacity, region: string\n//\n// ) => {\n//   const { data: standardSizes, isError } = await fetchProviderRegionSizes(\n//     provider,\n//     region,\n//     \"standard\"\n//   );\n//   const { data: developerSizes } = fetchProviderRegionSizes(\n//     provider,\n//     region,\n//     \"developer\"\n//   );\n//   return useQuery({\n//     queryKey: [],\n//     queryFn: () => {\n//       return {\n//         standard:\n//           standardSizes ||\n//           ([\n//             { id: \"1\", displayName: \"1\" },\n//             { id: \"2\", displayName: \"2\" },\n//           ] as StandardSizes),\n//         trial: developerSizes![0],\n//       };\n//     },\n//     enabled: (!!standardSizes || isError) && !!developerSizes,\n//   });\n// };\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { CloudProviderInfo } from \"ui\";\nimport type { CloudProvider, Plan } from \"ui-models/src/models/kafka\";\n\nexport type CloudProviderInfoWithRegionsCapacity = Omit<\n  CloudProviderInfo,\n  \"regions\"\n> & {\n  regions: Awaited<ReturnType<typeof fetchProviderRegions>>;\n};\n\nexport async function fetchProvidersWithRegions(\n  getCloudProviders: DefaultApi[\"getCloudProviders\"],\n  getCloudProviderRegions: DefaultApi[\"getCloudProviderRegions\"],\n  plan: Plan\n) {\n  const res = await getCloudProviders();\n  const allProviders = res?.data?.items || [];\n\n  const providers = (\n    await Promise.all(\n      allProviders\n        .filter((p) => p.enabled)\n        .map(async (provider) => {\n          const regions = await fetchProviderRegions(\n            getCloudProviderRegions,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            provider.id!,\n            plan\n          );\n          const providerInfo: CloudProviderInfoWithRegionsCapacity = {\n            id: provider.id as CloudProvider,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            displayName: provider.display_name!,\n            regions,\n          };\n          return regions.length > 0 ? providerInfo : null;\n        })\n    )\n  ).filter((p) => Boolean(p)) as CloudProviderInfoWithRegionsCapacity[];\n  if (providers.length === 0) {\n    throw new Error(\"No cloud providers with capacity found\");\n  }\n  const firstProvider = providers[0];\n  return { providers, defaultProvider: firstProvider?.id };\n}\n\nexport async function fetchProviderRegions(\n  getCloudProviderRegions: DefaultApi[\"getCloudProviderRegions\"],\n  provider: string,\n  instanceType: Plan\n) {\n  const res = await getCloudProviderRegions(provider);\n\n  if (!res?.data?.items) {\n    return Promise.reject(\"Invalid provider\");\n  }\n\n  const regionsForInstance = res.data.items.filter(\n    (region) =>\n      region.enabled &&\n      region.capacity.some((c) => c.instance_type === instanceType)\n  );\n\n  return regionsForInstance.map((r) => {\n    const max_capacity_reached = r.capacity?.some(\n      (c) => c.instance_type === instanceType && c.available_sizes?.length === 0\n    );\n\n    return {\n      id: r.id as CloudProvider,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      displayName: r.display_name!,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      isDisabled: max_capacity_reached,\n      capacity: r.capacity,\n    };\n  });\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport type {\n  MarketPlace,\n  MarketPlaceSubscriptions,\n} from \"ui-models/src/models/kafka\";\nimport {\n  developerId,\n  isMarketplaceQuota,\n  isStandardQuota,\n  resourceName,\n  standardId,\n} from \"../utilsAndConstants\";\n\nexport type StandardQuota = {\n  hasTrialQuota: boolean;\n  remainingPrepaidQuota: number | undefined;\n  remainingMarketplaceQuota: number | undefined;\n  marketplaceSubscriptions: MarketPlaceSubscriptions[];\n};\nexport const fetchStandardQuota = async (\n  api: AppServicesApi[\"apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet\"],\n  organizationId: string\n) => {\n  const quotaResponse = await api(\n    organizationId,\n    undefined,\n    true,\n    undefined,\n    true\n  );\n  if (quotaResponse.status !== 200) {\n    throw new Error(quotaResponse.statusText);\n  }\n  const standardQuotas = quotaResponse.data.items?.filter((q) =>\n    q.related_resources?.find(\n      (r) => r.resource_name === resourceName && r.product === standardId\n    )\n  );\n\n  const prepaidQuota = standardQuotas?.find(isStandardQuota);\n  const hasStandardQuota = prepaidQuota !== undefined;\n\n  const marketplaceQuotas = standardQuotas?.some(isMarketplaceQuota)\n    ? standardQuotas?.filter(isMarketplaceQuota)\n    : undefined;\n\n  const hasTrialQuota =\n    (prepaidQuota === undefined &&\n      marketplaceQuotas === undefined &&\n      quotaResponse.data.items?.some((q) =>\n        q.related_resources?.find(\n          (r) => r.resource_name === resourceName && r.product === developerId\n        )\n      )) ||\n    false;\n\n  const remainingPrepaidQuota = prepaidQuota\n    ? prepaidQuota.allowed - prepaidQuota.consumed\n    : undefined;\n  const remainingMarketplaceQuota = marketplaceQuotas\n    ? marketplaceQuotas.reduce((agg, q) => q.allowed - q.consumed + agg, 0)\n    : undefined;\n  const unaggregatedSubscriptions = marketplaceQuotas\n    ?.filter((q) => q.cloud_accounts !== undefined)\n    .flatMap((q) => q.cloud_accounts || []);\n  const subscriptionMarketplaces = Array.from(\n    new Set(\n      unaggregatedSubscriptions?.map((s) => s.cloud_provider_id as MarketPlace)\n    )\n  );\n  const marketplaceSubscriptions: MarketPlaceSubscriptions[] =\n    unaggregatedSubscriptions\n      ? subscriptionMarketplaces.map((marketplace) => ({\n          marketplace,\n          subscriptions: unaggregatedSubscriptions\n            .filter((s) => s.cloud_provider_id === marketplace)\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            .map((s) => s.cloud_account_id!),\n        }))\n      : [];\n\n  return {\n    hasStandardQuota,\n    hasTrialQuota,\n    remainingPrepaidQuota,\n    remainingMarketplaceQuota,\n    marketplaceSubscriptions,\n  };\n};\n","import type { TopicsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { topicTransformerFactory } from \"../transformers/topicTransformer\";\n\nexport type FetchTopicParams = {\n  getTopic: TopicsApi[\"getTopic\"];\n  topicName: string;\n  plan: Plan;\n};\n\nexport async function fetchTopic({\n  getTopic,\n  topicName,\n  plan,\n}: FetchTopicParams): Promise<Topic> {\n  const response = await getTopic(topicName);\n  return topicTransformerFactory(plan)(response.data);\n}\n","import type { SortDirection, TopicsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { topicTransformerFactory } from \"../transformers/topicTransformer\";\nimport type { KafkaTopicsSortableColumn } from \"../types\";\n\nexport type FetchTopicsParams = {\n  getTopics: TopicsApi[\"getTopics\"];\n  page?: number;\n  perPage?: number;\n  sort?: KafkaTopicsSortableColumn;\n  direction?: SortDirection;\n  filter?: string;\n  plan: Plan;\n};\n\nexport async function fetchTopics({\n  getTopics,\n  page,\n  perPage,\n  filter,\n  sort,\n  direction,\n  plan,\n}: FetchTopicsParams): Promise<{ topics: Topic[]; count: number }> {\n  const response = await getTopics(\n    undefined,\n    undefined,\n    perPage,\n    filter,\n    page,\n    direction,\n    sort\n  );\n  const topics = (response.data.items || []).map<Topic>(\n    topicTransformerFactory(plan)\n  );\n  const count = response.data.total;\n  return { count, topics };\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"ui\";\nimport type { SafeRangeQuery } from \"../types\";\nimport { BrokerToggle } from \"ui/src/components/Metrics/components/BrokerToggle\";\n\nexport type FetchTopicsMetricsProps = {\n  getMetricsByRangeQuery: DefaultApi[\"getMetricsByRangeQuery\"];\n  id: string;\n  duration: number;\n  interval: number;\n  selectedTopic: string | undefined;\n};\n\nexport async function fetchTopicsMetrics({\n  getMetricsByRangeQuery,\n  id,\n  duration,\n  interval,\n  selectedTopic,\n}: FetchTopicsMetricsProps): Promise<\n  Omit<GetTopicsMetricsResponse, \"kafkaTopics\">\n> {\n  const response = await getMetricsByRangeQuery(id, duration, interval, [\n    \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\",\n    \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\",\n    \"kas_topic_partition_log_size_bytes\",\n    \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\",\n  ]);\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(m.values && m.metric && m.metric.topic && m.metric.name)\n  ) as SafeRangeQuery[];\n\n  // Also filter for metrics about the selectedTopic, if specified\n  const filteredMetrics = safeMetrics.filter((m) =>\n    // filter for metrics for the selectedTopic, if needed\n    selectedTopic !== undefined ? m.metric?.topic === selectedTopic : true\n  );\n\n  // get the unique topics we have metrics for in the selected time range\n  const topics = Array.from(new Set(safeMetrics.map((m) => m.metric.topic)));\n\n  const bytesIncoming: TimeSeriesMetrics = {};\n  const bytesOutgoing: TimeSeriesMetrics = {};\n  const bytesPerPartition: PartitionBytesMetric = {};\n  const incomingMessageRate: TimeSeriesMetrics = {};\n\n  filteredMetrics.forEach((m) => {\n    const { __name__: name, topic, partition_id, broker_id } = m.metric;\n\n    function addAggregatedTotalBytesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    function addAggregatePartitionBytes() {\n      const partitionKey = `${partition_id}`;\n      const partition = bytesPerPartition[partitionKey] || {};\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (partition[timestamp] = value + (partition[timestamp] || 0))\n      );\n      bytesPerPartition[partitionKey] = partition;\n    }\n\n    switch (name) {\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesIncoming);\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesOutgoing);\n        break;\n      case \"kas_topic_partition_log_size_bytes\":\n        addAggregatePartitionBytes();\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\":\n        addAggregatedTotalBytesTo(incomingMessageRate);\n        break;\n    }\n  });\n\n  return {\n    metricsTopics: topics,\n    bytesOutgoing,\n    bytesIncoming,\n    bytesPerPartition,\n    incomingMessageRate,\n  };\n}\n","import type {\n  Principal,\n  PrincipalApi,\n} from \"@redhat-cloud-services/rbac-client\";\nimport type { UserAccount } from \"ui-models/src/models/user-account\";\n\nexport type FetchUserAccountsParams = {\n  getUserAccounts: PrincipalApi[\"listPrincipals\"];\n};\n\nexport async function fetchUserAccounts({\n  getUserAccounts,\n}: FetchUserAccountsParams): Promise<{\n  accounts: UserAccount[];\n  count: number;\n}> {\n  const response = await getUserAccounts(-1);\n  const accounts = response.data.data.map<UserAccount>((p) => {\n    const fullObject = p as Principal;\n    return {\n      username: fullObject.username,\n      displayName: `${fullObject.first_name || \"\"} ${\n        fullObject.last_name || \"\"\n      }`.trim(),\n      email: fullObject.email,\n      isOrgAdmin: fullObject.is_org_admin || false,\n    };\n  });\n  const count = accounts.length;\n  return { count, accounts };\n}\n","import type { AclsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Permissions } from \"../../../ui\";\n\nexport type FetchPermissionsParams = {\n  getAcls: AclsApi[\"getAcls\"];\n  page?: number;\n  perPage?: number;\n};\n\nexport async function fetchPermissions({\n  getAcls,\n  page,\n  perPage,\n}: FetchPermissionsParams): Promise<{\n  groups: Permissions[];\n  count: number;\n}> {\n  const response = await getAcls(\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    page,\n    perPage\n  );\n  const groups = (response.data.items || []).map<Permissions>((t) => ({\n    account: t.principal || \"\",\n    permission: { permission: t.permission, operation: t.operation },\n    resource: {\n      resourceName: t.resourceName,\n      patternType: t.patternType,\n      resourceType: t.resourceType,\n    },\n  }));\n  const count = response.data.total;\n  return { count, groups };\n}\n","import type { SecurityApi } from \"@rhoas/kafka-management-sdk\";\nimport type { Account } from \"ui\";\nimport { PrincipalType } from \"ui\";\n\nexport type FetchServiceAccountsParams = {\n  getServiceAccounts: SecurityApi[\"getServiceAccounts\"];\n};\n\nexport async function fetchServiceAccounts({\n  getServiceAccounts,\n}: FetchServiceAccountsParams): Promise<{\n  serviceAccounts: Account[];\n}> {\n  const response = await getServiceAccounts();\n  const data = response.data.items;\n  const serviceAccounts: Account[] = data.map((t) => {\n    return {\n      principalType: PrincipalType.ServiceAccount,\n      id: t.id || \"\",\n      displayName: t.name || \"\",\n    };\n  });\n  return { serviceAccounts };\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\n\nexport async function fetchSelfTermsReview(\n  api: AppServicesApi[\"apiAuthorizationsV1SelfTermsReviewPost\"]\n) {\n  const response = await api({\n    event_code: \"register\",\n    site_code: \"ocm\",\n  });\n  const { terms_required, terms_available, redirect_url } = response.data;\n  const areTermsAccepted =\n    terms_required === false && terms_available === false;\n  if (areTermsAccepted === false && redirect_url === undefined) {\n    throw new Error(\"Invalid Terms and Conditions \");\n  }\n  return {\n    areTermsAccepted,\n    termsUrl: (createHref: string, cancelHref: string) => {\n      if (redirect_url === undefined) {\n        throw new Error(\"Invalid Terms and Conditions \");\n      }\n      const url = new URL(redirect_url);\n      url.searchParams.set(\"redirect\", createHref);\n      url.searchParams.set(\"cancelRedirect\", cancelHref);\n      return url.href;\n    },\n  };\n}\n","import type {\n  FetchConsumerGroupParams,\n  FetchConsumerGroupsParams,\n  FetchDedicatedClusterSizesParams,\n  FetchKafkaMetricsProps,\n  FetchKafkasParams,\n  FetchMessagesParams,\n  FetchPermissionsParams,\n  FetchServiceAccountsParams,\n  FetchTopicParams,\n  FetchTopicsMetricsProps,\n  FetchTopicsParams,\n  FetchUserAccountsParams,\n} from \"./fetchers\";\n\nexport const masQueries = {\n  _root: () => ({ scope: \"mas\" } as const),\n  organization: () =>\n    [{ ...masQueries._root(), entity: \"organization\" }] as const,\n  selfTermsReview: () =>\n    [{ ...masQueries._root(), entity: \"selfTermsReview\" }] as const,\n  userAccounts: (params: Omit<FetchUserAccountsParams, \"getUserAccounts\">) =>\n    [{ ...masQueries._root(), entity: \"userAccounts\" }, params] as const,\n  user: () => [{ ...masQueries._root(), entity: \"user\" }] as const,\n  tokenEndPointUrl: () =>\n    [{ ...masQueries._root(), entity: \"tokenEndPointUrl\" }] as const,\n\n  quota: {\n    _root: () => ({ ...masQueries._root(), entity: \"quota\" } as const),\n    standardAvailable: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"standardAvailable\" },\n      ] as const,\n    dedicatedAvailable: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"dedicatedAvailable\" },\n      ] as const,\n    developerAvailability: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"developerAvailability\" },\n      ] as const,\n    standardAvailability: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"standardAvailability\" },\n      ] as const,\n  },\n} as const;\n\nexport const dedicatedQueries = {\n  _root: () => ({ ...masQueries._root(), entity: \"dedicated\" } as const),\n  clusters: () =>\n    [{ ...dedicatedQueries._root(), subentity: \"clusters\" }] as const,\n  clusterSizes: (\n    params: Omit<FetchDedicatedClusterSizesParams, \"getEnterpriseClusterById\">\n  ) =>\n    [\n      { ...dedicatedQueries._root(), subentity: \"clusterSize\" },\n      params,\n    ] as const,\n};\n\nexport const kafkaQueries = {\n  _root: () => ({ scope: \"kafka\" } as const),\n  list: (params: Omit<FetchKafkasParams, \"dataMapper\" | \"getKafkas\">) =>\n    [\n      {\n        ...kafkaQueries._root(),\n        entity: \"list\",\n      },\n      params,\n    ] as const,\n  instance: {\n    _root: ({ id, adminUrl }: { id?: string; adminUrl?: string }) =>\n      ({ ...kafkaQueries._root(), entity: \"instance\", id, adminUrl } as const),\n    details: (params: { id?: string }) =>\n      [\n        { ...kafkaQueries.instance._root(params), subentity: \"details\" },\n      ] as const,\n    topics: ({\n      id,\n      adminUrl,\n      ...params\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchTopicsParams,\n      \"getTopics\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topics\",\n        },\n        params,\n      ] as const,\n    topic: ({\n      id,\n      adminUrl,\n      topicName,\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchTopicParams,\n      \"getTopic\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topic\",\n        },\n        { topicName },\n      ] as const,\n    topicMessages: ({\n      id,\n      adminUrl,\n      topicName,\n      ...params\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchMessagesParams,\n      \"consumeRecords\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topicMessages\",\n        },\n        { topicName, ...params },\n      ] as const,\n    consumerGroups: (\n      params: { id?: string; adminUrl?: string } & Omit<\n        FetchConsumerGroupsParams,\n        \"getConsumerGroups\"\n      >\n    ) =>\n      [\n        {\n          ...kafkaQueries.instance._root(params),\n          subentity: \"consumer-groups\",\n        },\n        params,\n      ] as const,\n    consumerGroup: ({\n      id,\n      adminUrl,\n      consumerGroupId,\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchConsumerGroupParams,\n      \"getConsumerGroupById\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"consumerGroup\",\n        },\n        { consumerGroupId },\n      ] as const,\n    serviceAccounts: (\n      params: Omit<FetchServiceAccountsParams, \"getServiceAccounts\">\n    ) =>\n      [{ ...masQueries._root(), entity: \"serviceAccounts\" }, params] as const,\n    permissions: (\n      params: { id?: string; adminUrl?: string } & Omit<\n        FetchPermissionsParams,\n        \"getAcls\"\n      >\n    ) =>\n      [\n        {\n          ...kafkaQueries.instance._root(params),\n          subentity: \"acls\",\n        },\n        params,\n      ] as const,\n    metrics: {\n      _root: ({ id }: { id: string }) =>\n        ({\n          ...kafkaQueries.instance._root({ id }),\n          subentity: \"metrics\",\n          id,\n        } as const),\n      kpi: (params: { id: string }) =>\n        [{ ...kafkaQueries.instance._root(params), type: \"kpi\" }] as const,\n      instance: ({\n        id,\n        ...params\n      }: Omit<FetchKafkaMetricsProps, \"getMetricsByRangeQuery\">) =>\n        [\n          {\n            ...kafkaQueries.instance._root({ id }),\n            type: \"instance\",\n          },\n          params,\n        ] as const,\n      topic: ({\n        id,\n        ...params\n      }: Omit<FetchTopicsMetricsProps, \"getMetricsByRangeQuery\">) =>\n        [\n          {\n            ...kafkaQueries.instance._root({ id }),\n            type: \"topic\",\n          },\n          params,\n        ] as const,\n    },\n  },\n} as const;\n\nexport const providerQueries = {\n  _root: () => ({ scope: \"providers\" }),\n  list: (params: { plan?: string }) =>\n    [{ ...providerQueries._root(), entity: \"list\", ...params }] as const,\n  limits: {\n    _root: ({ provider }: { provider?: string }) =>\n      ({\n        ...providerQueries._root(),\n        entity: \"limits\",\n        provider,\n      } as const),\n    standard: ({ provider, region }: { provider?: string; region: string }) => [\n      {\n        ...providerQueries.limits._root({ provider }),\n        plan: \"standard\",\n        region,\n      },\n    ],\n    developer: ({\n      provider,\n      region,\n    }: {\n      provider?: string;\n      region: string;\n    }) => [\n      {\n        ...providerQueries.limits._root({ provider }),\n        plan: \"developer\",\n        region,\n      },\n    ],\n  },\n} as const;\n","import type { Topic as ApiTopic } from \"@rhoas/kafka-instance-sdk\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type {\n  TopicConfig,\n  TopicConfigField,\n} from \"ui-models/src/models/topic-config\";\nimport type { Bytes, Milliseconds } from \"ui-models/src/types\";\nimport type { TopicSettings } from \"@rhoas/kafka-instance-sdk\";\n\nexport type UserEditable = Pick<\n  TopicConfig,\n  \"retention.ms\" | \"retention.bytes\" | \"cleanup.policy\"\n>;\n\nexport const developerDefaults: TopicConfig = {\n  \"cleanup.policy\": \"delete\",\n  \"delete.retention.ms\": { type: \"ms\", value: BigInt(\"86400000\") },\n  \"max.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"max.message.bytes\": { type: \"bytes\", value: BigInt(\"1048588\") },\n  \"message.downconversion.enable\": true,\n  \"message.timestamp.difference.max.ms\": {\n    type: \"ms\",\n    value: BigInt(\"9223372036854775807\"),\n  },\n  \"message.timestamp.type\": \"CreateTime\",\n  \"min.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"retention.bytes\": { type: \"bytes\", value: BigInt(\"-1\") },\n  \"retention.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"segment.bytes\": { type: \"bytes\", value: BigInt(\"1073741824\") },\n  \"segment.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"compression.type\": \"producer\",\n  \"file.delete.delay.ms\": { type: \"ms\", value: BigInt(\"60000\") },\n  \"flush.messages\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"flush.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"index.interval.bytes\": { type: \"bytes\", value: BigInt(\"4096\") },\n  \"message.format.version\": \"3.0-IV1\",\n  \"min.cleanable.dirty.ratio\": 0.5,\n  \"min.insync.replicas\": 1,\n  \"segment.index.bytes\": { type: \"bytes\", value: BigInt(\"10485760\") },\n  \"segment.jitter.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"unclean.leader.election.enable\": false,\n  preallocate: false,\n} as const;\n\nexport const standardDefaults: TopicConfig = {\n  \"cleanup.policy\": \"delete\",\n  \"delete.retention.ms\": { type: \"ms\", value: BigInt(\"86400000\") },\n  \"max.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"max.message.bytes\": { type: \"bytes\", value: BigInt(\"1048588\") },\n  \"message.downconversion.enable\": true,\n  \"message.timestamp.difference.max.ms\": {\n    type: \"ms\",\n    value: BigInt(\"9223372036854775807\"),\n  },\n  \"message.timestamp.type\": \"CreateTime\",\n  \"min.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"retention.bytes\": { type: \"bytes\", value: BigInt(\"-1\") },\n  \"retention.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"segment.bytes\": { type: \"bytes\", value: BigInt(\"1073741824\") },\n  \"segment.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"compression.type\": \"producer\",\n  \"file.delete.delay.ms\": { type: \"ms\", value: BigInt(\"60000\") },\n  \"flush.messages\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"flush.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"index.interval.bytes\": { type: \"bytes\", value: BigInt(\"4096\") },\n  \"message.format.version\": \"3.0-IV1\",\n  \"min.cleanable.dirty.ratio\": 0.5,\n  \"min.insync.replicas\": 2,\n  \"segment.index.bytes\": { type: \"bytes\", value: BigInt(\"10485760\") },\n  \"segment.jitter.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"unclean.leader.election.enable\": false,\n  preallocate: false,\n} as const;\n\nexport function topicTransformerFactory(plan: Plan) {\n  const d = plan === \"developer\" ? developerDefaults : standardDefaults;\n\n  return function topicTransformer(t: ApiTopic): Topic {\n    if (!t.name) {\n      throw new Error(`Invalid topic, name is empty: ${JSON.stringify(t)}`);\n    }\n    const cm = Object.fromEntries<string>(\n      t.config?.map((c) => [c.key as TopicConfigField, c.value]) || []\n    );\n    const config: TopicConfig = {\n      \"cleanup.policy\": cm[\"cleanup.policy\"] as TopicConfig[\"cleanup.policy\"],\n      \"delete.retention.ms\": configValueToMilliseconds(\n        cm[\"delete.retention.ms\"],\n        d[\"delete.retention.ms\"]\n      ),\n      \"max.compaction.lag.ms\": configValueToMilliseconds(\n        cm[\"max.compaction.lag.ms\"],\n        d[\"max.compaction.lag.ms\"]\n      ),\n      \"max.message.bytes\": configValueToBytes(\n        cm[\"max.message.bytes\"],\n        d[\"max.message.bytes\"]\n      ),\n      \"message.downconversion.enable\": configValueToBoolean(\n        cm[\"message.downconversion.enable\"],\n        d[\"message.downconversion.enable\"]\n      ),\n      \"message.timestamp.difference.max.ms\": configValueToMilliseconds(\n        cm[\"message.timestamp.difference.max.ms\"],\n        d[\"message.timestamp.difference.max.ms\"]\n      ),\n      \"message.timestamp.type\": cm[\n        \"message.timestamp.type\"\n      ] as TopicConfig[\"message.timestamp.type\"],\n      \"min.compaction.lag.ms\": configValueToMilliseconds(\n        cm[\"min.compaction.lag.ms\"],\n        d[\"min.compaction.lag.ms\"]\n      ),\n      \"retention.bytes\": configValueToBytes(\n        cm[\"retention.bytes\"],\n        d[\"retention.bytes\"]\n      ),\n      \"retention.ms\": configValueToMilliseconds(\n        cm[\"retention.ms\"],\n        d[\"retention.ms\"]\n      ),\n      \"segment.bytes\": configValueToBytes(\n        cm[\"segment.bytes\"],\n        d[\"segment.bytes\"]\n      ),\n      \"segment.ms\": configValueToMilliseconds(\n        cm[\"segment.ms\"],\n        d[\"segment.ms\"]\n      ),\n      \"compression.type\": cm[\n        \"compression.type\"\n      ] as TopicConfig[\"compression.type\"],\n      \"file.delete.delay.ms\": configValueToMilliseconds(\n        cm[\"file.delete.delay.ms\"],\n        d[\"file.delete.delay.ms\"]\n      ),\n      \"flush.messages\": configValueToMilliseconds(\n        cm[\"flush.messages\"],\n        d[\"flush.messages\"]\n      ),\n      \"flush.ms\": configValueToMilliseconds(cm[\"flush.ms\"], d[\"flush.ms\"]),\n      \"follower.replication.throttled.replicas\":\n        cm[\"follower.replication.throttled.replicas\"],\n      \"index.interval.bytes\": configValueToBytes(\n        cm[\"index.interval.bytes\"],\n        d[\"index.interval.bytes\"]\n      ),\n      \"leader.replication.throttled.replicas\":\n        cm[\"leader.replication.throttled.replicas\"],\n      \"message.format.version\": cm[\"message.format.version\"],\n      \"min.cleanable.dirty.ratio\": configValueToNumber(\n        cm[\"min.cleanable.dirty.ratio\"],\n        d[\"min.cleanable.dirty.ratio\"]\n      ),\n      \"min.insync.replicas\": configValueToNumber(\n        cm[\"min.insync.replicas\"],\n        d[\"min.insync.replicas\"]\n      ),\n      \"segment.index.bytes\": configValueToBytes(\n        cm[\"segment.index.bytes\"],\n        d[\"segment.index.bytes\"]\n      ),\n      \"segment.jitter.ms\": configValueToMilliseconds(\n        cm[\"segment.jitter.ms\"],\n        d[\"segment.jitter.ms\"]\n      ),\n      \"unclean.leader.election.enable\": configValueToBoolean(\n        cm[\"unclean.leader.election.enable\"],\n        d[\"unclean.leader.election.enable\"]\n      ),\n      preallocate: configValueToBoolean(cm[\"preallocate\"], d[\"preallocate\"]),\n    };\n    return {\n      name: t.name,\n      partitions: t.partitions || [],\n      ...config,\n    };\n  };\n}\n\nfunction configValueToMilliseconds(\n  value: string,\n  defaultIfEmpty: Milliseconds\n): Milliseconds {\n  return value && value.trim().length > 0\n    ? { type: \"ms\", value: BigInt(value.trim()) }\n    : defaultIfEmpty;\n}\n\nfunction configValueToBytes(value: string, defaultIfEmpty: Bytes): Bytes {\n  return value && value.trim().length > 0\n    ? { type: \"bytes\", value: BigInt(value.trim()) }\n    : defaultIfEmpty;\n}\n\nfunction configValueToNumber(value: string, defaultIfError: number): number {\n  return parseInt(value, 10) || defaultIfError;\n}\n\nfunction configValueToBoolean(value: string, defaultIfError: boolean): boolean {\n  try {\n    const v: unknown = JSON.parse(value);\n    if (typeof v === \"boolean\") {\n      return v;\n    }\n  } catch {\n    // not a boolean, fallback to the default\n  }\n  return defaultIfError;\n}\n\nexport const convertToKeyValuePairs = (inputObj: UserEditable) => {\n  const keyValuePairs: Array<{ key: string; value: string }> = [];\n  if (inputObj[\"retention.ms\"]) {\n    keyValuePairs.push({\n      key: \"retention.ms\",\n      value: inputObj[\"retention.ms\"].value.toString(),\n    });\n  }\n\n  if (inputObj[\"retention.bytes\"]) {\n    keyValuePairs.push({\n      key: \"retention.bytes\",\n      value: inputObj[\"retention.bytes\"].value.toString(),\n    });\n  }\n\n  if (inputObj[\"cleanup.policy\"]) {\n    keyValuePairs.push({\n      key: \"cleanup.policy\",\n      value: inputObj[\"cleanup.policy\"],\n    });\n  }\n\n  return keyValuePairs;\n};\n\nexport const convertToTopicSettings = (topic: Topic): TopicSettings => {\n  const { partitions, ...config } = topic;\n  const configEntries = convertToKeyValuePairs(config);\n  const topicSettings: TopicSettings = {\n    numPartitions: partitions.length,\n    config: configEntries,\n  };\n  return topicSettings;\n};\n","import { PrincipalApi } from \"@redhat-cloud-services/rbac-client\";\nimport { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport {\n  Configuration,\n  DefaultApi,\n  SecurityApi,\n  EnterpriseDataplaneClustersApi\n} from \"@rhoas/kafka-management-sdk\";\nimport {\n  GroupsApi,\n  RecordsApi,\n  TopicsApi,\n  AclsApi,\n} from \"@rhoas/kafka-instance-sdk\";\nimport { useCallback } from \"react\";\nimport { useApiConfiguration } from \"./ApiProvider\";\n\nexport const useApi = () => {\n  const { basePath, accessToken } = useApiConfiguration();\n\n  const kafkasFleet = useCallback(\n    () =>\n      new DefaultApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const userAccounts = useCallback(async () => {\n    const token = await accessToken();\n    return new PrincipalApi({\n      accessToken: token,\n      basePath: `/api/rbac/v1`,\n    });\n  }, [accessToken]);\n\n  const serviceAccount = useCallback(\n    () =>\n      new SecurityApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const account = useCallback(\n    () =>\n      new AppServicesApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const topics = useCallback(\n    (adminUrl: string) =>\n      new TopicsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const consumerGroups = useCallback(\n    (adminUrl: string) =>\n      new GroupsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const acls = useCallback(\n    (adminUrl: string) =>\n      new AclsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const records = useCallback(\n    (adminUrl: string) =>\n      new RecordsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const dedicatedClusters = useCallback(\n    () =>\n      new EnterpriseDataplaneClustersApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  return {\n    kafkasFleet,\n    account,\n    topics,\n    consumerGroups,\n    records,\n    userAccounts,\n    acls,\n    serviceAccount,\n    dedicatedClusters,\n  };\n};\n","const REACT_QUERY_DEVTOOLS = \"mas.devtools\";\nconst METRICS_LAG_ALERT = \"mas.rhosak.metrics.lag-alert-closed\";\n\nexport function isDevToolsEnabled() {\n  return localStorage.getItem(REACT_QUERY_DEVTOOLS) === \"true\";\n}\n\nexport function metricsIsLagAlertsDismissed() {\n  return localStorage.getItem(METRICS_LAG_ALERT) === \"true\";\n}\n\nexport function metricsDismissLagAlerts() {\n  return localStorage.setItem(METRICS_LAG_ALERT, \"true\");\n}\n","import type { Bytes, DateIsoString } from \"../types\";\n\n/**\n * All the details abut a Kafka instance.\n *\n * Unless differently specified, the values marked as accepting `undefined`\n * will come from extra API calls.\n */\nexport type Kafka = {\n  id: string;\n  name: string;\n  createdAt: DateIsoString;\n  updatedAt: DateIsoString;\n  expiryDate: DateIsoString | undefined;\n  owner: string;\n  provider: CloudProvider;\n  region: CloudRegion;\n  status: Status;\n  plan: Plan;\n  size: string | undefined;\n  ingress: number | undefined;\n  egress: number | undefined;\n  storage: Bytes | undefined;\n  maxPartitions: number | undefined;\n  connections: number | undefined;\n  connectionRate: number | undefined;\n  messageSize: Bytes | undefined;\n  az: AZ;\n  billing: \"prepaid\" | MarketplaceSubscription | \"dedicated\" | undefined;\n  clusterId: string | undefined;\n  version: string;\n  bootstrapUrl: string | undefined;\n  adminUrl: string | undefined;\n};\nexport type KafkaField = keyof Kafka;\n\n/**\n * Supported Cloud Providers. Extend this to add a new provider, then follow\n * Typescript errors to find where extra information need to be added (images,\n * translations).\n */\nexport type CloudProvider = \"aws\" | \"gcp\" | \"azure\";\n\n/**\n * A Cloud Region. Since this varies between Cloud Providers and has no extra\n * visual attached, we take its name from the API and do no further\n * transformation.\n */\nexport type CloudRegion = string;\n/**\n * Cloud provider multi availability zone\n */\nexport type AZ = \"single\" | \"multi\";\n/**\n * A number that describes how much does an instance cost to create\n */\nexport type Quota = number;\n/**\n * The capabilities of an instance, and its quota cost. Some sizes might not be\n * enabled, eg. because temporarily out of capacity\n */\nexport type Size = {\n  id: string;\n  displayName: string;\n  status: \"stable\" | \"preview\";\n  quota: Quota;\n  ingress: number;\n  egress: number;\n  storage: number;\n  connections: number;\n  connectionRate: number;\n  maxPartitions: number;\n  messageSize: number;\n  isDisabled: boolean;\n};\n/**\n * Paid for instances are `standard`, evaluation instances are `developer`.\n * `standard` instances have a `Quota` associated, and bigger sizes.\n * `developer` instances are free to be created (up to 1 per user), have a\n * single, smaller size option than `standard` ones, and they expire after a\n * few hours.\n *\n * Plan `enterprise` is the equivalent of `standard` instances but for dedicated\n * clusters.\n *\n * Note: a new kind of evaluation instance is being studied. They will have a\n * long expiration period and bigger sizes.\n */\nexport type Plan = \"standard\" | \"developer\" | \"dedicated\";\n/**\n * All the statuses an instance can be. If new statuses are added, ensure to\n * add them to the relevant status group (`ReadyStatuses` etc.).\n */\nexport const Statuses = [\n  \"ready\",\n  \"degraded\",\n  \"accepted\",\n  \"provisioning\",\n  \"preparing\",\n  \"deprovision\",\n  \"deleting\",\n  \"suspended\",\n  \"suspending\",\n  \"resuming\",\n] as const;\n\nexport type Status = (typeof Statuses)[number];\n\nexport const CreatingStatuses: readonly Status[] = [\n  \"accepted\",\n  \"provisioning\",\n  \"preparing\",\n];\nexport const ReadyStatuses: readonly Status[] = [\"ready\"];\nexport const DegradedStatuses: readonly Status[] = [\"degraded\"];\nexport const SuspendingStatuses: readonly Status[] = [\"suspending\"];\nexport const SuspendedStatuses: readonly Status[] = [\"suspended\"];\nexport const DeletingStatuses: readonly Status[] = [\"deleting\", \"deprovision\"];\nexport const ResumingStatuses: readonly Status[] = [\"resuming\"];\n\nexport const SimplifiedStatuses = {\n  creating: CreatingStatuses,\n  ready: ReadyStatuses,\n  degraded: DegradedStatuses,\n  suspended: SuspendedStatuses,\n  deleting: DeletingStatuses,\n  resuming: ResumingStatuses,\n  suspending: SuspendingStatuses,\n} as const;\nexport type SimplifiedStatus = keyof typeof SimplifiedStatuses;\n\n/**\n * A list of marketplaces where an instance can be billed to\n */\nexport type MarketPlace = CloudProvider | \"rhm\";\n/**\n * List of marketplaces where a user has some subscription\n */\nexport type MarketPlaceSubscriptions = {\n  marketplace: MarketPlace;\n  subscriptions: string[];\n};\n/**\n * A specific marketplace's subscription, assigned as billing option to an\n * instance.\n *\n * Note: the API will provide only the `subscription`; the `MarketPlace` will\n * have to be fetched querying for the `subscription`.\n */\nexport type MarketplaceSubscription = {\n  marketplace: MarketPlace;\n  subscription: string;\n};\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\n\ntype ConsumerGroupPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ConsumerGroupPopover: FunctionComponent<\n  ConsumerGroupPopoverProps\n> = ({ title, description }) => {\n  return (\n    <Popover\n      aria-label=\"Consumer groups popover\"\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon />\n    </Popover>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type ConsumerGroupStateLabelProps = {\n  state: State;\n};\n\nexport const ConsumerGroupStateLabel: FunctionComponent<\n  ConsumerGroupStateLabelProps\n> = ({ state }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  switch (state) {\n    case \"Stable\":\n      return t(\"consumerGroup.state.stable\");\n    case \"Empty\":\n      return t(\"consumerGroup.state.empty\");\n    case \"Dead\":\n      return t(\"consumerGroup.state.dead\");\n    case \"CompletingRebalance\":\n      return t(\"consumerGroup.state.completing_rebalance\");\n    case \"PreparingRebalance\":\n      return t(\"consumerGroup.state.preparing_rebalance\");\n    case \"Unknown\":\n      return t(\"consumerGroup.state.unknown\");\n    default:\n      return null;\n  }\n};\n","import {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Stack,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupPopover } from \"./ConsumerGroupPopover\";\nimport { ConsumerGroupStateLabel } from \"./ConsumerGroupState\";\n\nexport type ConsumerGroupByKafkaProps = {\n  state: State;\n  consumers: Consumer[];\n  activeMembers: number;\n  partitionsWithLag: number;\n};\n\nexport const ConsumerGroupByKafka: FunctionComponent<\n  ConsumerGroupByKafkaProps\n> = ({ state, consumers, activeMembers, partitionsWithLag }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const columnNames = {\n    topic: t(\"topic.topic\"),\n    partition: t(\"consumerGroup.partition\"),\n    consumer_id: t(\"consumerGroup.consumer_id\"),\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n  };\n\n  return (\n    <Stack hasGutter>\n      <DescriptionList\n        columnModifier={{ lg: \"3Col\" }}\n        className={\"pf-m-display-2xl\"}\n      >\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.active_members\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {activeMembers}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.partitions_with_lag\")}{\" \"}\n            <ConsumerGroupPopover\n              title={t(\"consumerGroup.partitions_with_lag_name\")}\n              description={t(\"consumerGroup.partitions_with_lag_description\")}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {partitionsWithLag}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.state_header\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <ConsumerGroupStateLabel state={state} />\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TableComposable\n        aria-label={t(\"consumerGroup.consumer_group_info_table_aria\")}\n        variant={TableVariant.compact}\n      >\n        <Thead noWrap>\n          <Tr>\n            <Th width={20}>{columnNames.topic}</Th>\n            <Th width={20}>{columnNames.partition}</Th>\n            <Th width={20}>{columnNames.consumer_id}</Th>\n            <Th width={20}>{columnNames.current_offset}</Th>\n            <Th width={20}>{columnNames.log_end_offset}</Th>\n            <Th width={20}>{columnNames.offset_lag}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {consumers.map(\n            ({\n              groupId,\n              partition,\n              topic,\n              memberId,\n              offset,\n              logEndOffset,\n              lag,\n            }) => {\n              return (\n                <Tr key={groupId}>\n                  <Td dataLabel={columnNames.topic}>{topic}</Td>\n                  <Td dataLabel={columnNames.partition}>{partition}</Td>\n                  <Td dataLabel={columnNames.consumer_id}>\n                    {memberId ? (\n                      `${groupId}\\n${memberId}`\n                    ) : (\n                      <i>{t(\"consumerGroup.unassigned\")}</i>\n                    )}\n                  </Td>\n                  <Td dataLabel={columnNames.current_offset}>{offset}</Td>\n                  <Td dataLabel={columnNames.log_end_offset}>{logEndOffset}</Td>\n                  <Td dataLabel={columnNames.offset_lag}>{lag}</Td>\n                </Tr>\n              );\n            }\n          )}\n        </Tbody>\n      </TableComposable>\n    </Stack>\n  );\n};\n","import {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Stack,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupPopover } from \"./ConsumerGroupPopover\";\nimport { ConsumerGroupStateLabel } from \"./ConsumerGroupState\";\n\nexport type ConsumerGroupByTopicProps = {\n  state: State;\n  consumers: Consumer[];\n  activeMembers: number;\n  partitionsWithLag: number;\n};\n\nexport const ConsumerGroupByTopic: FunctionComponent<\n  ConsumerGroupByTopicProps\n> = ({ state, consumers, activeMembers, partitionsWithLag }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const columnNames = {\n    partition: t(\"consumerGroup.partition\"),\n    consumer_id: t(\"consumerGroup.consumer_id\"),\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n  };\n\n  return (\n    <Stack hasGutter>\n      <DescriptionList\n        columnModifier={{ lg: \"3Col\" }}\n        className={\"pf-m-display-2xl\"}\n      >\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.active_members_for_topic\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {activeMembers}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.partitions_with_lag_for_topic\")}{\" \"}\n            <ConsumerGroupPopover\n              title={t(\"consumerGroup.partitions_with_lag_name\")}\n              description={t(\"consumerGroup.partitions_with_lag_description\")}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {partitionsWithLag}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.state_header\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {<ConsumerGroupStateLabel state={state} />}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TableComposable\n        aria-label={t(\"consumerGroup.consumer_group_info_table_aria\")}\n        variant={TableVariant.compact}\n      >\n        <Thead noWrap>\n          <Tr>\n            <Th key={columnNames.partition} width={20}>\n              {columnNames.partition}\n            </Th>\n            <Th key={columnNames.consumer_id} width={20}>\n              {columnNames.consumer_id}\n            </Th>\n            <Th key={columnNames.current_offset} width={20}>\n              {columnNames.current_offset}\n            </Th>\n            <Th key={columnNames.log_end_offset} width={20}>\n              {columnNames.log_end_offset}\n            </Th>\n            <Th key={columnNames.offset_lag} width={20}>\n              {columnNames.offset_lag}\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {consumers.map(\n            ({ groupId, partition, memberId, offset, logEndOffset, lag }) => {\n              return (\n                <Tr key={groupId}>\n                  <Td dataLabel={columnNames.partition}>{partition}</Td>\n                  <Td dataLabel={columnNames.consumer_id}>\n                    {memberId ? (\n                      `${groupId}\\n${memberId}`\n                    ) : (\n                      <i>{t(\"consumerGroup.unassigned\")}</i>\n                    )}{\" \"}\n                  </Td>\n                  <Td dataLabel={columnNames.current_offset}>{offset}</Td>\n                  <Td dataLabel={columnNames.log_end_offset}>{logEndOffset}</Td>\n                  <Td dataLabel={columnNames.offset_lag}>{lag}</Td>\n                </Tr>\n              );\n            }\n          )}\n        </Tbody>\n      </TableComposable>\n    </Stack>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupByKafka } from \"./ConsumerGroupByKafka\";\nimport { ConsumerGroupByTopic } from \"./ConsumerGroupByTopic\";\n\nexport type ConsumerGroupDetailsProps = {\n  consumerGroupByTopic: boolean;\n  state: State;\n  activeMembers: number;\n  partitionsWithLag: number;\n  consumers: Consumer[];\n};\n\nexport const ConsumerGroupDetails: FunctionComponent<\n  ConsumerGroupDetailsProps\n> = ({\n  consumerGroupByTopic,\n  state,\n  consumers,\n  activeMembers,\n  partitionsWithLag,\n}) => {\n  return (\n    <div>\n      {consumerGroupByTopic ? (\n        <ConsumerGroupByTopic\n          state={state}\n          consumers={consumers}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n        />\n      ) : (\n        <ConsumerGroupByKafka\n          state={state}\n          consumers={consumers}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n        />\n      )}\n    </div>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ConsumerGroupEmptyState: FunctionComponent = () => {\n  const { t } = useTranslation([\"kafka\"]);\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel={\"h1\"} size={TitleSizes.lg}>\n        {t(\"consumerGroup.empty_consumer_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"consumerGroup.empty_consumer_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { OffsetValue } from \"../types\";\n\nexport type OffsetSelectProps = {\n  value: OffsetValue;\n  onChange: (value: OffsetValue) => void;\n};\n\nexport const OffsetSelect: FunctionComponent<OffsetSelectProps> = ({\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const offsetValueOption: { [key in OffsetValue]: string } = {\n    absolute: t(\"consumerGroup.offset.absolute\"),\n    latest: t(\"consumerGroup.offset.latest\"),\n    earliest: t(\"consumerGroup.offset.earliest\"),\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChange(selection as OffsetValue);\n    setIsOpen(false);\n  };\n\n  const makeOptions = () => {\n    return Object.entries(offsetValueOption).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <Select\n      aira-label={t(\"consumerGroup.reset_offset_new_offset_label\")}\n      toggleAriaLabel={t(\"consumerGroup.reset_offset_new_offset_label\")}\n      id={\"offset-select\"}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      variant={SelectVariant.single}\n      isOpen={isOpen}\n      placeholderText={t(\"consumerGroup.select_offset\")}\n      selections={value}\n      menuAppendTo={\"parent\"}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type TopicSelectProps = {\n  value: string;\n  topics: string[];\n  onChange: (topic: string) => void;\n};\n\nexport const TopicSelect: FunctionComponent<TopicSelectProps> = ({\n  topics,\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, topic) => {\n    onChange(topic as string);\n    setIsOpen(false);\n  };\n\n  return (\n    <Select\n      aira-label={t(\"consumerGroup.reset_offset_topic_label\")}\n      toggleAriaLabel={t(\"consumerGroup.reset_offset_topic_label\")}\n      id={\"topic-select\"}\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      selections={value}\n      placeholderText={t(\"consumerGroup.select_topic\")}\n      menuAppendTo={\"parent\"}\n      isDisabled={topics.length <= 0}\n    >\n      {topics.map((topic, index) => (\n        <SelectOption key={index} value={topic}>\n          {topic}\n        </SelectOption>\n      ))}\n    </Select>\n  );\n};\n","import {\n  Alert,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n  TextInput,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport { useCallback, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer } from \"ui-models/src/models/consumer-group\";\nimport \"../ConsumerGroup.css\";\nimport type { OffsetValue } from \"../types\";\nimport { OffsetSelect } from \"./OffsetSelect\";\nimport { TopicSelect } from \"./TopicSelect\";\nimport type { FunctionComponent } from \"react\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type ConsumerGroupResetOffsetProps = {\n  isModalOpen: boolean;\n  state: State;\n  groupId: string;\n  topics: string[];\n  consumers: Consumer[];\n  onClickClose: () => void;\n  onClickResetOffset: (\n    topic: string,\n    offset: OffsetValue,\n    partitions: number[],\n    customOffset: string\n  ) => void;\n  disableFocusTrap?: boolean;\n  appendTo?: () => HTMLElement;\n};\n\nexport const ConsumerGroupResetOffset: FunctionComponent<\n  ConsumerGroupResetOffsetProps\n> = ({\n  groupId,\n  topics,\n  onClickClose,\n  isModalOpen,\n  onClickResetOffset,\n  disableFocusTrap,\n  appendTo,\n  consumers,\n  state,\n}) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const [selectedTopic, setSelectedTopic] = useState<string>(\"\");\n  const [selectedOffset, setSelectedOffset] = useState<OffsetValue>(\"absolute\");\n  const [customOffsetValue, setcustomOffsetValue] = useState<string>();\n\n  const [isResetAccepted, setIsResetAccepted] = useState<boolean>(false);\n\n  const [selectedConsumer, setSelectedConsumer] = useState<Consumer[]>([]);\n\n  const isDisconnected = state !== \"Stable\";\n\n  const consumerList =\n    consumers.filter((consumer) => consumer.topic === selectedTopic) || [];\n\n  const isResetOffsetDisabled =\n    !selectedTopic ||\n    !selectedOffset ||\n    !isResetAccepted ||\n    !isDisconnected ||\n    selectedConsumer.length === 0;\n\n  const tableColumns = {\n    partition: t(\"consumerGroup.partition\"),\n    clientId: `${t(\"consumerGroup.client_id\")} + ${t(\n      \"consumerGroup.member_id\"\n    )}`,\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n    new_offset: t(\"consumerGroup.new_offset\"),\n  };\n\n  const areAllConsumerSelected =\n    selectedConsumer.length === consumerList.length;\n\n  const onSelectAllConsumer = (isSelecting = true) => {\n    setSelectedConsumer(isSelecting ? consumerList : []);\n  };\n\n  const isConsumerSelected = (consumer: Consumer) => {\n    return selectedConsumer.includes(consumer);\n  };\n  const onSelect = (consumer: Consumer, isSelecting = true) => {\n    setSelectedConsumer(\n      isSelecting\n        ? [...selectedConsumer, consumer]\n        : selectedConsumer.filter((r) => r !== consumer)\n    );\n  };\n\n  const onResetOffset = useCallback(() => {\n    const partitions = selectedConsumer.map(({ partition }) => partition);\n    onClickResetOffset(\n      selectedTopic,\n      selectedOffset,\n      partitions,\n      customOffsetValue || \"0\"\n    );\n  }, [\n    onClickResetOffset,\n    selectedTopic,\n    selectedOffset,\n    selectedConsumer,\n    customOffsetValue,\n  ]);\n\n  return (\n    <Modal\n      variant={ModalVariant.large}\n      isOpen={isModalOpen}\n      aria-label={t(\"consumerGroup.reset_offset_modal_label\")}\n      title={t(\"consumerGroup.reset_offset\")}\n      showClose={true}\n      onClose={onClickClose}\n      aria-describedby=\"modal-message\"\n      disableFocusTrap={disableFocusTrap}\n      appendTo={appendTo}\n      position=\"top\"\n      actions={[\n        <Button\n          variant=\"danger\"\n          key={1}\n          isDisabled={isResetOffsetDisabled}\n          onClick={onResetOffset}\n        >\n          {t(\"consumerGroup.reset_offset\")}\n        </Button>,\n        <Button variant=\"link\" key={2} onClick={onClickClose}>\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <Form isHorizontal>\n            <FormGroup\n              className=\"mas--ConsumerGroupResetOffset-form-group--readonly\"\n              label={t(\"consumerGroup.reset_offset_consumer_group_label\")}\n              fieldId=\"consumer-group-input\"\n            >\n              <TextInput\n                readOnlyVariant={\"default\"}\n                type=\"text\"\n                name={t(\"consumerGroup.reset_offset_consumer_group_label\")}\n                id={\"consumer-group-input\"}\n                value={groupId}\n              />\n            </FormGroup>\n            {isDisconnected && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_topic_label\")}\n                fieldId=\"topic-select\"\n              >\n                <TopicSelect\n                  value={selectedTopic}\n                  topics={topics}\n                  onChange={setSelectedTopic}\n                />\n              </FormGroup>\n            )}\n            {isDisconnected && selectedTopic && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_new_offset_label\")}\n                fieldId=\"offset-select\"\n              >\n                <OffsetSelect\n                  value={selectedOffset}\n                  onChange={setSelectedOffset}\n                />\n              </FormGroup>\n            )}\n            {isDisconnected &&\n              selectedTopic &&\n              selectedOffset === \"absolute\" && (\n                <FormGroup\n                  label={t(\"consumerGroup.reset_offset_custom_offset_label\")}\n                  fieldId=\"custom-offset-input\"\n                >\n                  <TextInput\n                    id=\"custom-offset-input\"\n                    name={t(\"consumerGroup.reset_offset_custom_offset_label\")}\n                    value={customOffsetValue}\n                    onChange={setcustomOffsetValue}\n                    type=\"number\"\n                  />\n                </FormGroup>\n              )}\n          </Form>\n        </StackItem>\n        <StackItem>\n          {!isDisconnected && (\n            <Alert\n              className=\"modal-alert\"\n              variant=\"danger\"\n              isInline\n              title={t(\"consumerGroup.reset_offset_connected_alert_title\")}\n            >\n              <p>{t(\"consumerGroup.reset_offset_connected_alert_body\")}</p>\n            </Alert>\n          )}\n        </StackItem>\n        <StackItem>\n          {isDisconnected && consumerList.length > 0 && selectedTopic && (\n            <Stack hasGutter>\n              <StackItem>\n                <TableComposable\n                  aria-label={t(\"consumerGroup.reset_offset_selectable table\")}\n                  className=\"consumer-table\"\n                >\n                  <Thead>\n                    <Tr>\n                      <Th\n                        select={{\n                          onSelect: (_event, isSelecting) =>\n                            onSelectAllConsumer(isSelecting),\n                          isSelected: areAllConsumerSelected,\n                        }}\n                      />\n                      <Th>{tableColumns.partition}</Th>\n                      <Th>{tableColumns.clientId}</Th>\n                      <Th>{tableColumns.current_offset}</Th>\n                      <Th>{tableColumns.log_end_offset}</Th>\n                      <Th>{tableColumns.offset_lag}</Th>\n                      <Th>{tableColumns.new_offset}</Th>\n                    </Tr>\n                  </Thead>\n                  <Tbody>\n                    {consumerList.map((consumer, index) => {\n                      return (\n                        <Tr key={index}>\n                          <Td\n                            select={{\n                              rowIndex: index,\n                              isSelected: isConsumerSelected(consumer),\n                              onSelect: (_event, isSelecting) =>\n                                onSelect(consumer, isSelecting),\n                            }}\n                          />\n                          <Td dataLabel={tableColumns.partition}>\n                            {consumer.partition}\n                          </Td>\n                          <Td dataLabel={tableColumns.clientId}>\n                            {String(consumer.groupId)}\n                            {String(consumer.memberId)}\n                          </Td>\n                          <Td dataLabel={tableColumns.current_offset}>\n                            {consumer.offset}\n                          </Td>\n                          <Td dataLabel={tableColumns.log_end_offset}>\n                            {consumer.logEndOffset}\n                          </Td>\n                          <Td dataLabel={tableColumns.offset_lag}>\n                            {consumer.lag}\n                          </Td>\n                          <Td dataLabel={tableColumns.offset_lag}>\n                            {isConsumerSelected(consumer) && selectedOffset\n                              ? selectedOffset === \"absolute\"\n                                ? customOffsetValue || 0\n                                : selectedOffset\n                              : \"-\"}\n                          </Td>\n                        </Tr>\n                      );\n                    })}\n                  </Tbody>\n                </TableComposable>\n              </StackItem>\n              <StackItem>\n                <Checkbox\n                  label={t(\"consumerGroup.reset_offset_accept\")}\n                  id=\"resetoffset-checkbox\"\n                  isChecked={isResetAccepted}\n                  onChange={setIsResetAccepted}\n                />\n              </StackItem>\n            </Stack>\n          )}\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n","import { Alert, Text } from \"@patternfly/react-core\";\nimport { DeleteModal } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type DeleteConsumerGroupProps = {\n  isModalOpen: boolean;\n  onClose: () => void;\n  onDeleteConsumer: () => void;\n  state: State;\n  consumerName: string;\n  appendTo: () => HTMLElement;\n  disableFocusTrap?: boolean;\n};\n\nexport const DeleteConsumerGroup: FunctionComponent<\n  DeleteConsumerGroupProps\n> = ({\n  isModalOpen,\n  onClose,\n  onDeleteConsumer,\n  state,\n  consumerName,\n  appendTo,\n  disableFocusTrap,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const isConsumerConnected = state === \"Stable\";\n\n  return (\n    <div>\n      <DeleteModal\n        isDeleting={false}\n        isModalOpen={isModalOpen}\n        title={t(\"consumerGroup.delete\")}\n        onCancel={onClose}\n        onDelete={onDeleteConsumer}\n        variant={\"non-destructive\"}\n        appendTo={appendTo}\n        disableFocusTrap={disableFocusTrap}\n        isDisabled={isConsumerConnected}\n      >\n        {isConsumerConnected ? (\n          <Alert\n            className=\"modal-alert\"\n            variant=\"danger\"\n            isInline\n            title={t(\"consumerGroup.delete_consumer_connected_alert_title\", {\n              name: consumerName,\n            })}\n          >\n            {t(\"consumerGroup.delete_consumer_connected_alert_body\")}\n          </Alert>\n        ) : (\n          <Text id=\"modal-message\">\n            <Trans\n              ns={\"kafka\"}\n              i18nKey={\"consumerGroup.consumer_group_delete_message\"}\n              values={{\n                name: consumerName,\n              }}\n            />\n          </Text>\n        )}\n      </DeleteModal>\n    </div>\n  );\n};\n","import {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent, ReactNode } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport \"./ConsumerGroup.css\";\nimport { ConsumerGroupDetails } from \"./ConsumerGroupDetails\";\n\nexport type ConsumerGroupDrawerProps = {\n  children: ReactNode;\n  consumerGroupByTopic: boolean;\n  state: State;\n  activeMembers: number;\n  partitionsWithLag: number;\n  consumers: Consumer[];\n  groupId: string;\n  onSelectDeleteConsumerGroup: () => void;\n  onSelectResetOffsetConsumerGroup: () => void;\n  isExpanded: boolean;\n  onClickClose: () => void;\n};\n\nexport const ConsumerGroupDrawer: FunctionComponent<\n  ConsumerGroupDrawerProps\n> = ({\n  children,\n  consumerGroupByTopic,\n  state,\n  activeMembers,\n  partitionsWithLag,\n  consumers,\n  groupId,\n  onSelectDeleteConsumerGroup,\n  onSelectResetOffsetConsumerGroup,\n  isExpanded,\n  onClickClose,\n}) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n  const onSelect = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const dropdownItems = [\n    <DropdownItem key=\"reset offset\" onClick={onSelectResetOffsetConsumerGroup}>\n      {t(\"consumerGroup.reset_offset\")}\n    </DropdownItem>,\n    <DropdownItem key=\"delete\" onClick={onSelectDeleteConsumerGroup}>\n      {t(\"common:delete\")}\n    </DropdownItem>,\n  ];\n\n  const panelContent = (\n    <DrawerPanelContent widths={{ default: \"width_50\" }}>\n      <DrawerHead>\n        <TextContent>\n          <Text\n            component={TextVariants.small}\n            className={\"consumer-group-drawer__top-label\"}\n          >\n            {t(\"consumerGroup.consumer_group_id\")}\n          </Text>\n          <Title headingLevel={\"h1\"} className={\"consumer-group-drawer__title\"}>\n            {groupId}\n          </Title>\n        </TextContent>\n        <DrawerActions>\n          <Dropdown\n            onSelect={onSelect}\n            toggle={<KebabToggle onToggle={onToggle} id=\"toggle-data-plane\" />}\n            dropdownItems={dropdownItems}\n            isOpen={isOpen}\n            isPlain\n            position={DropdownPosition.right}\n          />\n          <DrawerCloseButton onClick={onClickClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <ConsumerGroupDetails\n          consumerGroupByTopic={consumerGroupByTopic}\n          state={state}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n          consumers={consumers}\n        />\n      </DrawerPanelBody>\n    </DrawerPanelContent>\n  );\n\n  return (\n    <Drawer\n      isExpanded={isExpanded}\n      data-ouia-app-id={\"dataPlane-consumerGroupDetails\"}\n      isInline={true}\n    >\n      <DrawerContent panelContent={panelContent}>\n        <DrawerContentBody className=\"consumer-group-drawer__drawer-content-body\">\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type {\n  CloudProvider,\n  KafkaField,\n  SimplifiedStatus,\n  Status,\n} from \"ui-models/src/models/kafka\";\n\nexport function useKafkaLabels() {\n  const { t } = useTranslation(\"kafka\");\n\n  const statuses: { [status in Status]: string } = {\n    ready: t(\"statuses.ready\"),\n    degraded: t(\"statuses.degraded\"),\n    accepted: t(\"statuses.accepted\"),\n    provisioning: t(\"statuses.provisioning\"),\n    preparing: t(\"statuses.preparing\"),\n    deprovision: t(\"statuses.deprovision\"),\n    deleting: t(\"statuses.deleting\"),\n    suspended: t(\"statuses.suspended\"),\n    suspending: t(\"statuses.suspending\"),\n    resuming: t(\"statuses.resuming\"),\n  };\n  const statusesSimplified: { [status in SimplifiedStatus]: string } = {\n    creating: t(\"statusesSimplified.creating\"),\n    ready: t(\"statusesSimplified.ready\"),\n    degraded: t(\"statusesSimplified.degraded\"),\n    deleting: t(\"statusesSimplified.deleting\"),\n    suspended: t(\"statusesSimplified.suspended\"),\n    suspending: t(\"statusesSimplified.suspending\"),\n    resuming: t(\"statusesSimplified.resuming\"),\n  };\n  const providers: { [provider in CloudProvider]: string } = {\n    aws: t(\"common:cloudProviders.aws\"),\n    gcp: t(\"common:cloudProviders.gcp\"),\n    azure: t(\"common:cloudProviders.azure\"),\n  };\n  const providerRegions: {\n    [provider in CloudProvider]: { [region: string]: string };\n  } = {\n    aws: {},\n    gcp: {},\n    azure: {},\n  };\n  const fields: {\n    [field in KafkaField]: string;\n  } = {\n    id: t(\"fields.id\"),\n    name: t(\"fields.name\"),\n    createdAt: t(\"fields.createdAt\"),\n    updatedAt: t(\"fields.updatedAt\"),\n    expiryDate: t(\"fields.expiryDate\"),\n    owner: t(\"fields.owner\"),\n    provider: t(\"fields.provider\"),\n    region: t(\"fields.region\"),\n    status: t(\"fields.status\"),\n    plan: t(\"fields.plan\"),\n    size: t(\"fields.size\"),\n    ingress: t(\"fields.ingress\"),\n    egress: t(\"fields.egress\"),\n    storage: t(\"fields.storage\"),\n    maxPartitions: t(\"fields.maxPartitions\"),\n    connections: t(\"fields.connections\"),\n    connectionRate: t(\"fields.connectionRate\"),\n    messageSize: t(\"fields.messageSize\"),\n    billing: t(\"fields.billing\"),\n    clusterId: t(\"fields.clusterId\"),\n    adminUrl: t(\"fields.adminUrl\"),\n    bootstrapUrl: t(\"fields.bootstrapUrl\"),\n    version: t(\"fields.version\"),\n    az: t(\"fields.availabilityZone\"),\n  };\n  return {\n    fields,\n    statuses,\n    statusesSimplified,\n    providers,\n    providerRegions,\n  };\n}\n","import { useTranslation } from \"react-i18next\";\nimport type { TopicField } from \"ui-models/src/models/topic\";\n\nexport function useTopicLabels() {\n  const { t } = useTranslation(\"topic\");\n\n  const fields: {\n    [field in TopicField]: string;\n  } = {\n    name: t(\"fields.name\"),\n    partitions: t(\"fields.partitions\"),\n    \"cleanup.policy\": t(\"fields.cleanup_policy\"),\n    \"delete.retention.ms\": t(\"fields.delete_retention_ms\"),\n    \"max.compaction.lag.ms\": t(\"fields.max_compaction_lag_ms\"),\n    \"max.message.bytes\": t(\"fields.max_message_bytes\"),\n    \"message.downconversion.enable\": t(\"fields.message_downconversion_enable\"),\n    \"message.timestamp.difference.max.ms\": t(\n      \"fields.message_timestamp_difference_max_ms\"\n    ),\n    \"message.timestamp.type\": t(\"fields.message_timestamp_type\"),\n    \"min.compaction.lag.ms\": t(\"fields.min_compaction_lag_ms\"),\n    \"retention.bytes\": t(\"fields.retention_bytes\"),\n    \"retention.ms\": t(\"fields.retention_ms\"),\n    \"segment.bytes\": t(\"fields.segment_bytes\"),\n    \"segment.ms\": t(\"fields.segment_ms\"),\n    \"compression.type\": t(\"fields.compression_type\"),\n    \"file.delete.delay.ms\": t(\"fields.file_delete_delay_ms\"),\n    \"flush.messages\": t(\"fields.flush_messages\"),\n    \"flush.ms\": t(\"fields.flush_ms\"),\n    \"follower.replication.throttled.replicas\": t(\n      \"fields.follower_replication_throttled_replicas\"\n    ),\n    \"index.interval.bytes\": t(\"fields.index_interval_bytes\"),\n    \"leader.replication.throttled.replicas\": t(\n      \"fields.leader_replication_throttled_replicas\"\n    ),\n    \"message.format.version\": t(\"fields.message_format_version\"),\n    \"min.cleanable.dirty.ratio\": t(\"fields.min_cleanable_dirty_ratio\"),\n    \"min.insync.replicas\": t(\"fields.min_insync_replicas\"),\n    \"segment.index.bytes\": t(\"fields.segment_index_bytes\"),\n    \"segment.jitter.ms\": t(\"fields.segment_jitter_ms\"),\n    \"unclean.leader.election.enable\": t(\n      \"fields.unclean_leader_election_enable\"\n    ),\n    preallocate: t(\"fields.preallocate\"),\n  };\n  return {\n    fields,\n  };\n}\n","import { useTranslation } from \"react-i18next\";\nimport type { ConsumerGroupField } from \"ui-models/src/models/consumer-group\";\n\nexport function useConsumerGroupLabels() {\n  const { t } = useTranslation(\"kafka\");\n\n  const fields: {\n    [field in ConsumerGroupField]: string;\n  } = {\n    name: t(\"consumerGroup.consumer_group_id\"),\n    activeConsumers: t(\"consumerGroup.active_members\"),\n    laggingPartitions: t(\"consumerGroup.partitions_with_lag\"),\n    state: t(\"consumerGroup.state_header\"),\n  };\n  return {\n    fields,\n  };\n}\n","import { isDevToolsEnabled } from \"local-storage-helpers\";\nimport { lazy } from \"react\";\n\nconst XStateInspector = lazy(() => import(\"./XStateInspector\"));\n\nexport function useXStateInspector() {\n  const showDevTools = isDevToolsEnabled();\n  return showDevTools ? XStateInspector : () => null;\n}\n","import { PageSection } from \"@patternfly/react-core\";\nimport { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  EmptyStateNoResults,\n  TableView,\n} from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport type {\n  ConsumerGroup,\n  ConsumerGroupField,\n} from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupEmptyState, ConsumerGroupStateLabel } from \"./components\";\nimport { useConsumerGroupLabels } from \"../../hooks\";\n\ntype SubUnion<T, U extends T> = U;\n\nconst Columns: SubUnion<\n  ConsumerGroupField,\n  \"name\" | \"activeConsumers\" | \"laggingPartitions\" | \"state\"\n>[] = [\"name\", \"activeConsumers\", \"laggingPartitions\", \"state\"];\n\nexport type ConsumerGroupsProps<T extends ConsumerGroup> = {\n  consumers: Array<T> | undefined;\n  onDelete: (row: T) => void;\n  onViewPartition: (row: T) => void;\n  onViewResetOffset: (row: T) => void;\n  consumerName: string[];\n  onSearchConsumer: (value: string) => void;\n  onRemoveConsumerChip: (value: string) => void;\n  onRemoveConsumerChips: () => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n>;\n\nexport const ConsumerGroups = <T extends ConsumerGroup>({\n  consumers,\n  onDelete,\n  onViewPartition,\n  isColumnSortable,\n  itemCount,\n  onViewResetOffset,\n  onClearAllFilters,\n  page,\n  perPage,\n  onPageChange,\n  consumerName,\n  onSearchConsumer,\n  onRemoveConsumerChip,\n  onRemoveConsumerChips,\n}: ConsumerGroupsProps<T>) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const labels = useConsumerGroupLabels();\n\n  const isFiltered = consumerName.length > 0;\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"consumerGroup.consumer_group_list\")}\n        data={consumers}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th\n            key={key}\n            info={\n              column === \"laggingPartitions\"\n                ? {\n                    popover: (\n                      <div>\n                        {t(\"consumerGroup.partitions_with_lag_description\")}\n                      </div>\n                    ),\n                    ariaLabel: \"partitions with lag\",\n                    popoverProps: {\n                      headerContent: t(\n                        \"consumerGroup.partitions_with_lag_name\"\n                      ),\n                    },\n                  }\n                : undefined\n            }\n          >\n            {labels.fields[column]}\n          </Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"name\":\n                    return row.name;\n                  case \"activeConsumers\":\n                    return row.activeConsumers;\n                  case \"laggingPartitions\":\n                    return row.laggingPartitions;\n                  case \"state\":\n                    return <ConsumerGroupStateLabel state={row.state} />;\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row, ActionsColumn }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"consumerGroup.view_partitions_offsets\"),\n                onClick: () => onViewPartition(row),\n              },\n              {\n                title: t(\"consumerGroup.reset_offset\"),\n                onClick: () => onViewResetOffset(row),\n              },\n              {\n                title: t(\"common:delete\"),\n                onClick: () => onDelete(row),\n              },\n            ]}\n          />\n        )}\n        isColumnSortable={isColumnSortable}\n        filters={{\n          [labels.fields.name]: {\n            type: \"search\",\n            chips: consumerName,\n            onSearch: onSearchConsumer,\n            onRemoveChip: onRemoveConsumerChip,\n            onRemoveGroup: onRemoveConsumerChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"input_field_invalid_message\"),\n          },\n        }}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        isFiltered={isFiltered}\n        onClearAllFilters={onClearAllFilters}\n        emptyStateNoData={<ConsumerGroupEmptyState />}\n        emptyStateNoResults={<EmptyStateNoResults />}\n      />\n    </PageSection>\n  );\n};\n","import {\n  Divider,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport {\n  ExternalLink,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Sections = \"instances\" | \"clusters\";\n\nexport type ControlPlaneHeaderProps = {\n  activeSection: Sections;\n  sectionsHref: { [key in Sections]: string };\n};\n\nexport const ControlPlaneHeader: VoidFunctionComponent<\n  ControlPlaneHeaderProps\n> = ({ activeSection, sectionsHref }) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        hasShadowBottom={true}\n        type={\"tabs\"}\n      >\n        <Level>\n          <LevelItem>\n            <TextContent className={\"pf-u-p-md pf-u-p-lg-on-xl\"}>\n              <Text component=\"h1\">{t(\"kafka:title\")}</Text>\n              <p>{t(\"kafka:description\")}</p>\n            </TextContent>\n          </LevelItem>\n        </Level>\n        {(activeSection === \"instances\" || activeSection === \"clusters\") && (\n          <Nav variant=\"tertiary\" className=\"pf-u-px-sm-on-xl\">\n            <NavList>\n              <NavItem\n                style={{ borderTop: 0 }}\n                data-testid=\"pageKafka-tabinstances\"\n                id=\"dashboard-tab-section\"\n                aria-label={t(\"controlPlaneNavigation.dedicated-instances\")}\n                ouiaId={\"tab-instances\"}\n                isActive={activeSection === \"instances\"}\n              >\n                <Link to={sectionsHref[\"instances\"]}>\n                  {t(\"controlPlaneNavigation.dedicated-instances\")}\n                </Link>\n              </NavItem>\n              <NavItem\n                style={{ borderTop: 0 }}\n                data-testid=\"pageKafka-tabclusters\"\n                id=\"dashboard-tab-section\"\n                aria-label={t(\"controlPlaneNavigation.clusters\")}\n                ouiaId={\"tab-clusters\"}\n                isActive={activeSection === \"clusters\"}\n              >\n                <Link to={sectionsHref[\"clusters\"]}>\n                  {t(\"controlPlaneNavigation.clusters\")}\n                </Link>\n              </NavItem>\n            </NavList>\n          </Nav>\n        )}\n        <Divider />\n        <div className=\"pf-u-p-md pf-u-p-lg-on-xl\">\n          {(() => {\n            switch (activeSection) {\n              case \"instances\":\n                return (\n                  <Trans\n                    ns={\"kafka\"}\n                    i18nKey={\"dedicated_description\"}\n                    components={[\n                      <ExternalLink\n                        href={\"https://access.redhat.com/articles/TODO\"}\n                        testId={\"instances-instances-support-link\"}\n                        className={\"pf-u-ml-xs\"}\n                      />,\n                    ]}\n                  />\n                );\n              case \"clusters\":\n                return (\n                  <Trans\n                    ns={\"kafka\"}\n                    i18nKey={\"clusters_description\"}\n                    components={[\n                      <ExternalLink\n                        href={\"https://access.redhat.com/articles/TODO\"}\n                        testId={\"clusters-support-link\"}\n                        className={\"pf-u-ml-xs\"}\n                      />,\n                    ]}\n                  />\n                );\n            }\n          })()}\n        </div>\n      </PageSection>\n    </>\n  );\n};\n","import type { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfo } from \"../types\";\n\nexport function onProviderChange(\n  providers: CloudProviderInfo[],\n  provider: CloudProvider\n): { provider: CloudProvider; region: CloudRegion | undefined } {\n  const selectedProvider = providers.find((p) => p.id === provider);\n  const region =\n    selectedProvider?.defaultRegion ||\n    selectedProvider?.regions.filter((r) => !!r.isDisabled === false)[0]?.id;\n  return { provider, region };\n}\n","import {\n  CloudProvider,\n  CloudRegion,\n  MarketplaceSubscription,\n  Size,\n} from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateKafkaFormData,\n  CreateKafkaInstanceError,\n  StandardPlanInitializationData,\n  StandardSizes,\n} from \"../types\";\nimport { onProviderChange } from \"./shared\";\n\nexport type StandardPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: StandardPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    provider?: CloudProvider;\n    region?: CloudRegion;\n    size?: Size;\n    billing?: MarketplaceSubscription | \"prepaid\";\n  };\n\n  // based on the form.provider selection\n\n  // based on the form.provider and form.region selection\n  sizes: StandardSizes | undefined;\n\n  creationError: CreateKafkaInstanceError | undefined;\n};\n\nexport const StandardPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5SwC4EMB2E0CcIAUAbTAWTQGMALASwzADoA3MHagMwE8BBRta4gEb9qKDgGJEoAA4B7WCOoyMkkAA9EAZgAcARnoBOfQAYdOrQHYArABYNAJnMAaEB0Q6j++reuXL5k3bWWpY65gC+Yc6omNh4RKQUNHT05Eps1FAArqwYUPTRKJmwYuQ4YGgoYCqy8iiKykhqmjp29OYW5hpGQYG+zq4Ilvoa9KZGlh4a5joAbPqBEVHoWLgExBhkVLQMqRjpWTl5bDI4ALZMaITUEGLpYIQQAJIYvFcQ1XIKSirqCKGG9Ds+ksU1m5n0M2s1n0-UQdgmllGdjsOj8QJm7ihixA0RWcXWmySOzSGWytCOJ3Or2uYlgmQEpxEH1q9R+bmMnnMnRR9n8di0RjssIQ-MFo2sgQ81lCGjm2NxsTWCS2yV2+zJuXoxzO+TQjHJJTKFTAAGVMuRyHB4I0al8GqBfoEZlp6FpISYdBp7PprFZhaK9JDAuDproQfLlor4htEtsUiSDuStZTdfrcobypUAKI4HAnZl2tkinn0WVTFFQrS+mb+jEzehzMz84btazjCMxVbRwlxtWkw7Js63aj3J4vS7XAt1b6NR0+etaWXzPmQmsuOGmRGWfmWRchbctGYdvFKmMq4l7ftJu4PWD0DBoU4ManYSoSG2faf2poIIL15GmDo+iLkBdhGOYa4DLMUKjKCljOkYbrDFox5RgSsaqgmGpHCOt73o+YAZsaU6srObj2F45gSn4UIaDY7QaMKMouohVgzNuHhgRoOioV26HnvGl6JpqN4QHeD5PmIElgAAwpQmAwCRM4OuRrS+tRVG2PRi5MexrSojM9iIW2VgSrx+LKkSgnqgOol3lIeb6hALAXG8xrvtIn6kSpgxAm00IosiEEzDMTjriKHj1hMEIoqE1iGeYdjmaePaYUJ2FarhYn0A5MhOSwRGVEp36-J6alUfCml0b6Onhci8UGJxnoSuBGj6Ml3YYReNnXll9mOdcBW5flOByQpVQfiyyk-mVlEabR2mMXVUr0EYgo+qGQHtJYHX8VZfbCTho53mUUD1K51zucVRYHl4hg6EEPisdYTHwkYgLDNKRjsSF0I7ZEOKRnxlm9lhtl9fQp31IVE2eVNJWqXNlULTVS1QXR5iAqidgzCYApui0u0g2lPUiRDUNKGIw2DaN8m5LDIC2l+RazepyNaajTFdJ4OM8hBnRejxAMKsDZ77WDvXHZDYBnZTFMYGN9PXWRfwUWzNEcwxTEGaWvgWA9Gg+P41hE2LoPpeDUvyAAXs+E6voRys+b6gbcW7czQu4tUDA44KrZCsogfyXqm6l3VXmTVvULb9CEDIaAQAaEBKAwtCMDIADWDAixZZskxHR14TbDBxwn5IIGnMjkBU9QANpGAAuk7P6gvQNi6HY2gPVCwr2HRbS6PoVG7lYQyh111kF5lUcx6XifpiweY4DlxAoNq5w5ylE8HRldn5NHJfx-PUAVy8Vc10o9dN5NhYq9uLqBMiwEWBKneWL3vKrSEiHDOBILDOPASO9LZFwPjDZujpQq6wAuxYwoEpj+n-qMT0254KG3ig9QB4sLaS1AbbKmA1nK03GhAtwi4sYeisPMQw9hay4wML6RKhhvrgiFksTsucw6T0OtPPBhF5aK0UjfZmKtcYuh9GBQwGIUS1kNgYT6Ewfqd26Fg82pNC7ZWLrSA+giGZM28j+KiLopjbkhPrcCuhaweGgT4Ux-hZj-XYSeTqQCJaRz4WIIQhAri5F0aQ388E26NnYuCZcEEXp1VxpjAmVYqKsOBEeYWQNOHbzcRou8XifF5BfFdYRBjfjbhGFoAUZjZjLj8L3YpmM1pWHCZVGYONVH5x4XvTJSYlCEA4GaAQsBSjUCkF+YosB7hgHICgbpvTWADIMfo6apU1rWDaO6EKa0goNMqfoPQ-gbC4x9MBQUGgmnhxaRDNpmoHJgCkHwCAXAsATL6dMpQQyRljPuVMkRcNb4+UPIiYpQI9y7ngsBYU3hFlrU9GYjwIRwhJI4VvVxOD3HZTOXkC5Vzri3IgG8-pgzaQvJQPgMo6L3h5LmW4IwUxXS7i9L4KwswtAgr7m3FEQxEq6EhEc7hu9Tn8CyQQvKNM-GkoRqres3FURxPsMiIEvdAUD0XIhHG8VEKOMBnClx2D1G8LEmIZOyQCjZ2SfCzVU87L+NmOMNo7hxjlgaYbd+kT+6aWCG-XcSrOXAKTinfI6BKg+vVXtNRBd-H8hxq6aUxtfQmCkf6WU9YWhgUqiETEEQAYYBkM5a0yAjUarjMwVgnAeB8EEMIUQ-iQjhtCm1WUEofTjGFFYAw3oQj2p9NRTleUWAAEVMgyHQP4gUIxOLQh8FoX2DLwoJtLI9cFWg63TESU4tCxNU4YFxJaAAqg+Xg-A0ACEIHoryZKEBcnep0NtwQuTSIdT7ClrpQoonmC0XQa1F1qucYG5I8tYBbr1MWvdB7-FckWdCYpD1+RujHTCOqVZSwB3GMiRcwxZgerSf6wod5MhrvpIyFAlQSWfI+TNRCpY2pVhCI+jmwohg8zilRA2Y7fSocRXkAoRR8g4ZEPh-x84DBmGlPjLko8IkDAXatLoi54Sd3hPBZjWq2NZsZkekVsGvTAR8C0ICVHwoTBdKYUKLbkSsQhHJ01KY0723NeCRZnpNkmFCqEMdsaUSrWYd0LkgcTOwo-SurltkUwvis8BUY4EMQ-3cA9G9cJcYjFCmtYIQRhhzEOd55dedjm7xTLAPU5IQ0oIbBYDw4x5wojCj7Kw+lZScV8PCT0pmWlZb1JAENCUDDhOs8CYI-pwSIgabFHGHtMGpdFlwz1IlKRWf8LBOzYJHNCmWl0Nura51uu+vV7lUtpL0DAKcAZAxCP5MQEw0YhS2xoJqhOqCiUh3OmleMCEKWl0jdSSx7V4kCL0As28c1asKoa2qlrSd4J6zdG+h0MEXoTbDZSQirVe8tuBeFSzKiDYfT0UMqYkETFNkg4Mu0aY4xFxQ6ezDk1JzNsfZyUVJHKtDYjDavMKTc6vSdyYtd-2Y6jNDEMutkB2VpLmpI+rKqi0mK+E8AbX0QJWXGCStD41Qbyd4WpkQi6Dt-HaHrMubiHmTJukghuaEXhdzPo8BCFbvPcHZRVy5L7k4affJsICbQSrDBAiHlFkUXRFluk7nReYY7nQwpJwr5pG3leEJcojg7x6Kv+yCBYEEtWuT+gep4UdpupEW-l7msPfP+oCqIYLl0wuUaA9vdYta8xDJei6EYy3SKToy3OlTw98MixTBdKFAWLQbBlTK+RO9gR+NfW4vFFCOfP0Zfz9LWWGBPvjm+w7maExkG8lCCCQUtimLSkRPSl3zokNDZD7n6fVum9z7V0BxbDnBQNOdEBSEXMh8CahO4MfzoG-pNnzM5TLMhd-Yi6cyTrgR6CygoiJ7BAhQhRf5vb7wxyt4a7tANidD6bDwPrzY+wOYNiBCc4hTNiPbvppajZoZ7zFyfYQCAbL6lQUQgiGygFuztDwjdYQjiZQiigZ5vqbyn5+bn7wEMCJzZb7rNbUGIAdBeC6DcRVheiSGYFwjAh6DAgmCKJWDaA+CwFkEHz0AADufAdQuQAAYicD2n2mgD9q0HQVMLyNMDjAguFDSnoOMF7L-KoQApPr5mNt-uQZ2jgCYf2qIarBYZDgwZ6EwZ7l0HeozoqkEBYhPiflPrwY3vwVfgEZspyPZohuxN6HIQgBJmAdIdtA5tCMHkQc9rDqahDOQYvPmAEbNJYdyFyIeHYQMM2qtG2GVDaozhoZUVoXPLlgERBLFtoPfAKFCEMCJs0MMG0IlNuCGIuJ-u4elokV4QfMXktl6A0TYQlP6D4DZkBH3uBMPKqtwQkZ4XASimrsRLUdoI1J0IZBSn4HAuEZIf5C1O4EMJ3GwqUaToruHsirykmOmiaPivUAAEpgAACOmQ1AZQBGSm7eKs+WEw6+OuVe4RChro1mI6iE0a3RUsFxHSXS9IkyOK9Qd4ducJsyKmKOFiEq0wPQNglSwQowwQ0EYE-GcR3xoeZ+SRBJGAnS2Kjya6KRMeIqkWmMf4-IwOdqD0vcGJ0IkObq7Q4wXBOapxpBPK3i7S-JRJPSDygyA6q+tJfg9JY6jJ9hFUWMkIoQDEDSnJJxHhGp+JAJ5yRK1ymKgpgy22u2ZaARFgIw8IxgGmFKDgoQjKoQq0AQ9qjmwIeJeEFxaK7pdyxJ+pZJHGep7yv+CJ3yfIXgtmfeW0Y6l2iAb+Yq7QAo2y7g8IcZ-xWprplySZWKKZmZTyOUbp9uopRYzCroHgi4i4dKesIKtg6egoxSJSbU0wNZGSLpqK7ZNyyZGZpJTyA6RugZ3Q386+A+v4qIQ6r8hsVZvIU59AKK5qpgbcIZ0wqJUKsqa0bQPo7EFiEoKGixJBr2ZqfpIGgBZe3siAhgxizoY+-Ib+xSX+-i9Cam5GmmPo1UjKe+iGypYEVYJgnK2WzAlJf+Ks-yUUmyJp9Bl5saQwDYJgTCa0Y+boRyIa0S8U56NaQIZ2ORrQwwaR3oNewEz5EQQAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as StandardPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./StandardPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as StandardPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"providerChange\"; provider: CloudProvider }\n          | { type: \"regionChange\"; region: CloudRegion }\n          | { type: \"sizeChange\"; size: Size }\n          | {\n              type: \"selectSubscription\";\n              subscription: MarketplaceSubscription;\n            }\n          | { type: \"selectPrepaid\" }\n          | { type: \"billingChange\" }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: StandardSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"standardPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isOverQuota\",\n              target: \"overQuota\",\n            },\n            {\n              cond: \"isInstanceUnavailable\",\n              target: \"instanceUnavailable\",\n            },\n            {\n              cond: \"isRegionsUnavailable\",\n              target: \"regionsUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        overQuota: {\n          tags: \"blocked\",\n        },\n        instanceUnavailable: {\n          tags: \"blocked\",\n        },\n        regionsUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitting: {\n                  entry: \"triggerSubmit\",\n                  always: [\"submitted\"],\n                },\n                submitted: {\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitting\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  tags: \"creatable\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                provider: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"providerIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"providerInvalid\",\n                    },\n                    valid: {\n                      tags: \"providerValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      actions: \"setProvider\",\n                      cond: \"didProviderChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                region: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"regionIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"regionInvalid\",\n                    },\n                    valid: {\n                      tags: \"regionValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      actions: \"setRegion\",\n                      cond: \"didRegionChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noProviderOrRegion\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          cond: \"sizeIsDisabled\",\n                          target: \"disabled\",\n                        },\n                        {\n                          cond: \"billingRequiredButNotSelected\",\n                          target: \"waitingForQuota\",\n                        },\n                        {\n                          cond: \"sizeIsOverQuota\",\n                          target: \"overQuota\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    disabled: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeDisabled\",\n                    },\n                    waitingForQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeWaitingForQuota\",\n                    },\n                    overQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeOverQuota\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      target: \".validate\",\n                    },\n                    sizeChange: {\n                      actions: \"setSize\",\n                      cond: \"didSizeChange\",\n                      target: \".validate\",\n                    },\n                    billingChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n                billing: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"onlyPrepaid\",\n                          target: \"prepaidOnly\",\n                        },\n                        {\n                          cond: \"singleSubscription\",\n                          target: \"singleSubscription\",\n                        },\n                        {\n                          cond: \"onlySubscriptions\",\n                          target: \"onlySubscriptions\",\n                        },\n                        {\n                          description:\n                            \"user has both prepaid and marketplace subscriptions\",\n                          target: \"prepaidAndSubscriptions\",\n                        },\n                      ],\n                    },\n                    prepaidOnly: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\"],\n                      entry: \"setBillingToPrepaid\",\n                      type: \"final\",\n                    },\n                    singleSubscription: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\", \"singleSubscription\"],\n                      entry: \"setBillingToSubscription\",\n                      type: \"final\",\n                    },\n                    onlySubscriptions: {\n                      description:\n                        \"More than one subscription exist. The user needs to select one to procede.\",\n                      initial: \"invalid\",\n                      type: \"final\",\n                      states: {\n                        invalid: {},\n                        valid: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                      },\n                      on: {\n                        selectSubscription: [\n                          {\n                            actions: \"setBillingToSubscription\",\n                            cond: \"matchesSelectedProviderOrRHMarketplaceAndHasQuota\",\n                            target: \".valid\",\n                          },\n                          {\n                            cond: \"noSelectedProvider\",\n                            target: \".valid\",\n                          },\n                        ],\n                      },\n                    },\n                    prepaidAndSubscriptions: {\n                      description:\n                        \"The user has both prepaid quota and one or more subscription to a marketplace. The user needs to select one to procede.\",\n                      initial: \"empty\",\n                      type: \"final\",\n                      states: {\n                        empty: {},\n                        subscription: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                        prepaid: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                      },\n                      on: {\n                        selectSubscription: [\n                          {\n                            actions: \"setBillingToSubscription\",\n                            cond: \"matchesSelectedProviderOrRHMarketplaceAndHasQuota\",\n                            target: \".subscription\",\n                          },\n                          {\n                            cond: \"noSelectedProvider\",\n                            target: \".subscription\",\n                          },\n                        ],\n                        selectPrepaid: {\n                          actions: \"setBillingToPrepaid\",\n                          cond: \"hasPrepaidQuota\",\n                          target: \".prepaid\",\n                        },\n                      },\n                    },\n                  },\n                  on: {\n                    providerChange: {\n                      actions: \"unsetSubscription\",\n                      description:\n                        \"If a new provider is selected, deselect any previously selected billing option.\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#standardPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              ...(context.capabilities.defaultProvider\n                ? onProviderChange(\n                    context.capabilities.availableProviders,\n                    context.capabilities.defaultProvider\n                  )\n                : {}),\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setProvider: assign((context, { provider }) => {\n          return {\n            form: {\n              ...context.form,\n              ...onProviderChange(\n                context.capabilities.availableProviders,\n                provider\n              ),\n            },\n            sizes: undefined,\n          };\n        }),\n        setRegion: assign((context, { region }) => {\n          if (context.creationError === \"region-unavailable\") {\n            return {\n              form: { ...context.form, region },\n              sizes: undefined,\n              creationError: undefined,\n            };\n          }\n          return {\n            form: {\n              ...context.form,\n              region,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSize: assign((context, { size }) => ({\n          form: {\n            ...context.form,\n            size,\n          },\n        })),\n        setSizes: assign((context, event) => {\n          const sizes = event.data;\n          const smallestSize = sizes.sort((a, b) => a.quota - b.quota)[0];\n          return {\n            sizes,\n            form: {\n              ...context.form,\n              size: smallestSize,\n            },\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => {\n          return {\n            creationError: error,\n          };\n        }),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form> &\n            Pick<typeof context.form, \"billing\">;\n          const data: CreateKafkaFormData = {\n            plan: \"standard\",\n            name: form.name,\n            provider: form.provider,\n            region: form.region,\n            sizeId: form.size.id,\n            billing: form.billing,\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n        triggerBillingChange: send(\"billingChange\"),\n        setBillingToPrepaid: assign((context) => {\n          const form = { ...context.form };\n          form.billing = \"prepaid\";\n          return { form };\n        }),\n        setBillingToSubscription: assign((context, event) => {\n          const form = { ...context.form };\n          if (event.type === \"selectSubscription\") {\n            form.billing = event.subscription;\n          } else {\n            // single subscription, take it from the context\n            const ms = context.capabilities.marketplaceSubscriptions[0];\n            form.billing = {\n              marketplace: ms.marketplace,\n              subscription: ms.subscriptions[0],\n            };\n          }\n          return { form };\n        }),\n        unsetSubscription: assign((context) => {\n          const form = { ...context.form };\n          form.billing = undefined;\n          return { form };\n        }),\n      },\n      guards: {\n        isOverQuota: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"out-of-quota\",\n        isInstanceUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"instance-unavailable\",\n        isRegionsUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"regions-unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        providerIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableProviders || []).length > 0 &&\n            // must have selected a provider\n            selectedProviderInfo !== undefined\n          );\n        },\n        regionIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have selected a region\n            form.region !== undefined &&\n            // the region must be included in the capabilities for the provider\n            selectedProviderInfo?.regions.find((r) => r.id === form.region) !==\n              undefined\n          );\n        },\n        noProviderOrRegion: ({ form }) =>\n          form.provider === undefined || form.region === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) => sizes !== undefined && sizes.length === 0,\n        sizeIsDisabled: ({ form, capabilities }) => {\n          if (capabilities === undefined) return true;\n          return form.size?.isDisabled === true;\n        },\n        billingRequiredButNotSelected: ({ form }, _, meta) => {\n          if (meta.state.hasTag(\"noBilling\")) {\n            return false;\n          }\n          return form.billing === undefined;\n        },\n        sizeIsOverQuota: ({ form, capabilities }) => {\n          if (capabilities === undefined || !form.size) return true;\n          const availableQuota =\n            form.billing === \"prepaid\" || form.billing === undefined\n              ? capabilities.remainingPrepaidQuota\n              : capabilities.remainingMarketplaceQuota;\n          if (!availableQuota) return true;\n          return form.size.quota > availableQuota;\n        },\n        didProviderChange: (context, event) =>\n          context.form.provider !== event.provider,\n        didRegionChange: (context, event) =>\n          context.form.region !== event.region,\n        didSizeChange: (context, event) =>\n          context.form.size?.id !== event.size.id,\n        onlyPrepaid: (context) =>\n          context.capabilities.marketplaceSubscriptions.length === 0,\n        singleSubscription: (context) =>\n          context.capabilities.remainingPrepaidQuota === undefined &&\n          context.capabilities.marketplaceSubscriptions.flatMap(\n            (m) => m.subscriptions\n          ).length === 1,\n        onlySubscriptions: (context) =>\n          context.capabilities.remainingPrepaidQuota === undefined &&\n          context.capabilities.marketplaceSubscriptions.length > 0,\n        matchesSelectedProviderOrRHMarketplaceAndHasQuota: (\n          { form, capabilities },\n          { subscription }\n        ) =>\n          capabilities.remainingMarketplaceQuota !== undefined &&\n          capabilities.remainingMarketplaceQuota > 0 &&\n          (subscription.marketplace === \"rhm\" ||\n            form.provider === subscription.marketplace),\n        hasPrepaidQuota: (context) =>\n          context.capabilities.remainingPrepaidQuota !== undefined &&\n          context.capabilities.remainingPrepaidQuota > 0,\n        noSelectedProvider: ({ form }) => form.provider === undefined,\n      },\n    }\n  );\n","import { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateKafkaFormData,\n  CreateKafkaInstanceError,\n  TrialPlanInitializationData,\n  TrialSizes,\n} from \"../types\";\nimport { onProviderChange } from \"./shared\";\n\nexport type TrialPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: TrialPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    provider?: CloudProvider;\n    region?: CloudRegion;\n  };\n\n  // based on the form.provider and form.region selection\n  sizes: TrialSizes | undefined;\n\n  creationError: CreateKafkaInstanceError | undefined;\n};\n\nexport const TrialPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QBUBOBLAhgGwArcwDsBZTAYwAt1CwA6ANzAwDMBPAQXs3QICMf0AF1YBiRKAAOAe1hD0UwuJAAPRACYAbAA4AnLQ0AGNQBYArBo0BmHQHYNNywBoQrRDoO1bARjWmv54y8DY18AX1DnNCw8AhJyKhpaMgVmdCgAVwxCKFpYQUxBdNgRMlQwArAlaVlBeUUkFUQgtWdXBFNLY1o7LRDTG1NTLVNjG3DIjBx8IlJKajpkwlSMrJzmKVQAWwYcdAgRVLBsCABJQi5sPaqZOQUlVQQvLRs9NR1TI1Mdey0tNS1Wk1nqZaJodIEbEYTAZ7OMQFEprFZgkFik0plqGsNtsLnsSmUKtcanV7kCXqD3p9vjZfv9AQg1AYhrQDF4fH9jJ0aVo4QiYjN4vMkmiVpjaOstrlMPRMfjyoIwABldJkMhweANaq3eqgB5qSxqGwsgwmgzPHRBGxeemMrQeCwfAY6NT6s2mXmTflxOaJRbLDHZcXYqUy7JyioAUVQqA2RO1pIZBqNppN5st1pcTR04O6gX+9hMefdEXhnum3pRwqW6NWQa2B3QR1O512EDjtTuDQe-i+tD+Jpdxm0NhdpnpXlGXTNnIt-RCnOLE2i5eRQr9NbFh2OsFohEwmzouIgFTEmpuHZ1jQQxmG3VHfjUE7Zb3HGlGoK8Vo0-ksli0Vh0D1lyRQVfRFAM1kbbdd33MADmxZVeE2IR2xJLsmgNccbECWgvAsGwBkhBwb0sIDEQFH1UWrUVAy3CAdz3A8REYsAAGEKCIGBUM7XUMJaTNHg0QZQU5Axf0MYxRmwsivVXMDqIg8UoPo2gJBjGUICYHZLmPBVT0kc80N49o3lBQxgnBLkmQBATH20Wghy8WxnS0IJLA0GSV1Aqj-VrOidzUqQNKYeCtkQ5DBG4y9u0w2zLCePs33cxkmW0IdPJAyiq18zdlIC9S9hCwLgtQdjOMqM9iR4q8vFito7JBd4XhpGF-FGDKKMrdcaMgpsdzKKA6m0vYTyihNTEfY0TH-aFzGCccni6G8DGzf9WSE9KSz5Lysu6xT-NoAa6lCzZwpQyr43Qx46qaN4vFoawR1HT8Jv6DqKzXcC-Lyw6wEGhQRGKwrSo47IKoMqror48cTEsByOhItlLD8P93rknyN1on6joBnHCDKsGxqu2r+LaIJ3FoEYRytYYkZCNHvOyzHeug2QAC9D1bUaLovBNnjh2xnn-A1hgmmz6rtLRugMZrhhvJzF1LYDOs+hTvr63J0A52hsCkTAIFlCAFDoah6CkABrOhtsyrqvtyjX2boXX9cxBBTakMgCjqABtAwAF0ieM4x3k8O0jCc2qNDum0Bg0bpKXihxvmsYwGd2u2sYdrWnb1g2wyYGNUFUghBAlbZrZV+Scsz1ns513PXfdz2L19gOeaMq9g8asPHwtZKLRjs0+xRv5DHJzQ09ttX7drjmTrOyL2+qmLSfUC0uhMDRsysbRNH8SfVerlmVMdwGCs0kHysDmqboQSxgnuvD9THq1szCLayxtw-maUrO57xgmXEl5Q2uqvO+Zo9BBCsJCSwI5rA8g-srD6Vcf7+REEbRIeQKi0ArsgjGPVf7bmvt2QI90-BCx0PFWBXcbQPweoMLeidHyfAPignq6Dja5HyAqHBn9K74IgsQ9Q2g9CGBMOYACdgHBYU5KHay2FkbOhdOEEshApCaQ1CgPheCGBMHQGwTg3A+ACGEEI68YC8J6AtBHew35-wWDUKwugghPQAFVYCQDMW8ewuE+hsjZIMXwr4rFsgtLYp4Fgo5ONoC46Iri9xcB4JgXg2BwYgC1LzK6IQbR-j7FoJMYkhIRxpNEvGsB4nSiMck1JZjskCSCB4cEMtOQiNGDLLw0S9q1iwYUHc6RCCwHSEhIQCo2zAITM0ekQ4QTNSfhCbM9NEHkR0V0sUPSii5CGRFUZXj8mUwaayP4eFkb9HpNoOGkIVodBePYMSitcHoyZgQ9Zmj0mGWXogGk9I-weD+EMbMZpWTiVTks2SjNVm0WDKbVsXjg5xxlv+Zyj4CIWMRaCBhgwmQjD+KRUFO0p5HzrDiGF4ziaDD0P2KEQ5nijloStRKMIvjDmGMjTpGcsSSlgNKTEXiTRGleiaCaFprF0qlhNBWLomTHI8nir+bD9rBi5YwMZENLrGRMN8FkNIt4vGRSOWh2F9Ao1qu8Do+SZVLmWY8iFHLNhmJ-CCSlg5hy0vqX+SBtV2TPz-G8Nl08a4qRYrQfpggpAqgoJ40lxl-BqFBLoWBFhYEwn1E4epLwPVYr+K5dN9ztHWvZYQwNsFaBgE2BIUxUarwjilkJAYmh7DIxTVhTQuF+gcjsJQ38YxZX8KeftH6QboU6XtbfJysCWQdGnE1CaMs-WEoOkGo89rDUumZdmfof48Ljn-FLM0Tw7JOQsHO1BA7i1HkJJWh4nRY0WgGHhXQxhpzGGbXHfwNITAdt-LA49BCF2wXtWacc5hY3iPBEK5ovQf39o1kDC+wbCChvDZG1VmTo2Gusj4OcDghh2ByXYPse6wl3u-N2y1YL07+uPvlIKwNhq6TSRkjuV7-zww+P4NkQ4CKpvqi6e6IRmm6EZOu0jSsrXgoLQdWDWkh1XEvU0Do3RhzBzZEYb4ZgbSSRmS8MwbH77KJ7SsiTP0pNFyXXJhAd7KYOA5OSnQdowEukmvx7CgmVpNSg+raCJmAPi3UIC0O2gLK6HYx5meKk8bwcQ5QZDbzIYTK3p4N4nRAgfHzDCccQ5XjYW0AreKPxQsBv6n9Ia56FRmNgVLJy2E-DOiZPFHQMNx0zhHBxoSD6CtUd+v9QgtAZMqti2qmqwd9DWGpCjF0sCxxuuG50Fa35nQ-mkgZ-NlHC1Fe63RsxDgPB4Q+H+ecjIXz1P1EaGctigXDBEw88Tq2Dp4x8+OQVVnzK0yTO5Dra3Nba1Kwx95ID7CiPyXYL4wdDTfBtH3EbFlvxfsZLisj+Lv6-p+o7XrEAanmY4yCMehoTCHqEjaX4lXQeb38NvD7B1UdmZQ0x9QCnfCuXih8QYQQOgQ5HLhC0JohLaHwrmpBK350o7rgXWM5mLC7u-GCTkkltBTfqvYI0yMALzmnVdvNN2hd-xzi7bII6HP2C6GlTk+S-k+Ap8LjmD3bL-O6J6gYwRpn72W5rk9fUzG9HpJQ2NElqsvUCPD0T5GCXMzMSMb5Mth5Dn1N8Wm2holKpi4xj5DJ7OeEKbobT2ExJYXHd8XeIwRG2HVwL7y9rfOPAQeEIAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as TrialPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./TrialPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as TrialPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"providerChange\"; provider: CloudProvider }\n          | { type: \"regionChange\"; region: CloudRegion }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: TrialSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"TrialPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isTrialUsed\",\n              target: \"trialUsed\",\n            },\n            {\n              cond: \"isTrialUnavailable\",\n              target: \"trialUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        trialUsed: {\n          tags: \"blocked\",\n        },\n        trialUnavailable: {\n          tags: \"blocked\",\n        },\n        regionsUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitting: {\n                  entry: \"triggerSubmit\",\n                  always: [\"submitted\"],\n                },\n                submitted: {\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitting\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                provider: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"providerIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"providerInvalid\",\n                    },\n                    valid: {\n                      tags: \"providerValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      actions: \"setProvider\",\n                      cond: \"didProviderChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                region: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"regionIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"regionInvalid\",\n                    },\n                    valid: {\n                      tags: \"regionValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      actions: \"setRegion\",\n                      cond: \"didRegionChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noProviderAndRegion\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#TrialPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              ...(context.capabilities.defaultProvider\n                ? onProviderChange(\n                    context.capabilities.availableProviders,\n                    context.capabilities.defaultProvider\n                  )\n                : {}),\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setProvider: assign((context, { provider }) => {\n          return {\n            form: {\n              ...context.form,\n              ...onProviderChange(\n                context.capabilities.availableProviders,\n                provider\n              ),\n            },\n            sizes: undefined,\n          };\n        }),\n        setRegion: assign((context, { region }) => {\n          if (context.creationError === \"region-unavailable\") {\n            return {\n              form: { ...context.form, region },\n              sizes: undefined,\n              creationError: undefined,\n            };\n          }\n          return {\n            form: {\n              ...context.form,\n              region,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSizes: assign((_context, event) => {\n          const sizes = event.data;\n          return {\n            sizes,\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => ({\n          creationError: error,\n        })),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form>;\n          const data: CreateKafkaFormData = {\n            plan: \"developer\",\n            name: form.name,\n            provider: form.provider,\n            region: form.region,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            sizeId: context.sizes!.trial.id,\n            billing: undefined,\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n      },\n      guards: {\n        isTrialUsed: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"used\",\n        isTrialUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        providerIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableProviders || []).length > 0 &&\n            // must have selected a provider\n            selectedProviderInfo !== undefined\n          );\n        },\n        regionIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have selected a region\n            form.region !== undefined &&\n            // the region must be included in the capabilities for the provider\n            selectedProviderInfo?.regions.find((r) => r.id === form.region) !==\n              undefined\n          );\n        },\n        noProviderAndRegion: ({ form }) =>\n          form.provider === undefined || form.region === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) =>\n          sizes !== undefined && sizes.standard.length === 0,\n        didProviderChange: (context, event) =>\n          context.form.provider !== event.provider,\n        didRegionChange: (context, event) =>\n          context.form.region !== event.region,\n      },\n    }\n  );\n","import type { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, EventFrom, forwardTo, send } from \"xstate\";\nimport type {\n  CloudProvidersInfo,\n  CreateKafkaFormData,\n  CreateKafkaInitializationData,\n  CreateKafkaInstanceError,\n  StandardPlanInitializationData,\n  StandardSizes,\n  TrialPlanInitializationData,\n  TrialSizes,\n} from \"../types\";\nimport {\n  StandardPlanMachine,\n  StandardPlanMachineContext,\n} from \"./StandardPlanMachine\";\nimport { TrialPlanMachine, TrialPlanMachineContext } from \"./TrialPlanMachine\";\n\ntype Quota =\n  | Pick<\n      StandardPlanInitializationData,\n      | \"plan\"\n      | \"remainingPrepaidQuota\"\n      | \"marketplaceSubscriptions\"\n      | \"remainingMarketplaceQuota\"\n      | \"instanceAvailability\"\n    >\n  | Pick<TrialPlanInitializationData, \"plan\" | \"instanceAvailability\">;\n\nexport type CreateKafkaInstanceMachineContext = {\n  quota: Quota | undefined;\n  providers: CloudProvidersInfo | undefined;\n  defaultProvider: CloudProvider | undefined;\n  capabilities: CreateKafkaInitializationData | undefined;\n};\n\nconst CreateKafkaInstanceMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMBOYCGAXMBpDAZgNYYCSAdrFhucmAHQA2A9hhAJblT0COArs2r1kACzDIinKAAIqNCBlQRp-QRgDEYVKmap6AB0bYCugLbD02PIRIU5tBizZTeAoaPGSus6uQVKVNwwETgA3ZmRsdmZyAG0ABgBdRFB9Zlh2LGjyFJAAD0QAFniAJnp4gGYAdkKATgAOeqr4qvrCgFYAGhAAT0QANir++n769tqq2sKARhKKjsKAX0XutEwcfGIySl86JlYOLlc1YTEJKR95RWVVanV7fxug6QxQjHYjACNGMFy0jKyMVyBQQxTKlRqDSaLTaXV6iHG8XoVXahX6UyqJVqJX6-WWq0sGxs23seych24twwp08Fwe10CanUzD4WGkzAIlz8DKpf3SmWywKKpXK1TqjWarQ63T6CHa8UK9Hqcw6JUK6palXxIDWVk2th2NDJBxcVJp5289ICVPU5GYXMejOoLzeHww31+SBA-wFQK9ILBoshEph0vhoPaw2hFRKasKbQa0yWKx1hOsWzsu0cJqOZqtEHUfIBgv9iCTU2RkZj03RYsjMoGyvo0yG40KJSq0wq02m9W1uqJGcNDn2zlzQXoEDAoTALH0WkLXp9gJypYQ5cVKP61drNXr4faFSRJVmdUmasjvf7af1JKzo4px3cZy8MinM7nWhd7y+H0yPU0bRdAMIwsBMVBzAHdMDVJbMx0pCcPAtN9p1nZh51Qb83U+P8sB6EJyHCSIVwSZIl35FchQQWpanaeh4y7JN5gqbFZgbOU1WRE96m3Bp+lRKoKmvdZoLvI04MfM0kNfaR3zQjCsN-Rh-3UOTP0wvhYEgItfVXUAQRouiGO7QpmNYkp2NMqolXqWZcSPCpRn6NFhL1YlM3Eh9TUQl8LjU9Cv1eH93VwgD-IUoLsJ+HTKLXQz6NskyzJPCzwwqdppnoWj4niaZ2kPepaiTaZXMHGD73JFwCDALBRAufQdFCdgp1QWB1Aa5gmpa2AXj8aR0CgbIesir5ovI4s-X0staNqegjzGcZ+hKHjeyqdj2jGcplu4moFSqKpStEjyR0qo5qtqkR6sa5qtDarQdD0QxjDMCwRNvY7jXg+hzrq7wOq626CKIqIYlImKSym9cMRsiY0RmaYFXiOFZUKfa5rqRy5mmWp4kGdpDve4dPsfH7Lr+67uvainbvZTCBqG6Q+HIEb3TG1IKIh-Jpsjeh2k7XHOw7QqWnY0Z6mbapakGNVqgR-GUygwnYK8rhVJiBg5BwV63KHZXTqgcHJq5hASlROj+lKCp6kqdUVvYq3Mr3ds0UaPLZgJ9yiY13xHSe8h6Gan57leT12YmvTjaxbd6NM+NDIVdLCkskUFmxyZt2cwYPd1+982kP36FgV4pHUKCAGU+GQOhYHgcbdKoxOjKR0p6nmYXlvt1Fyn6Lt1W7E9Jkc7Pys8vOC6LprVaggBRIDUENiOQSjioY7b+PTNRe2a152NbLy03M7y4exJHcKvwLwOwGDmcF6orFWl5i2Nt7toEYqUWpayrt5SW+z4ls4+H0GBn0wuPYuU80wVyrnAWuYd65rkbvRBUtQ6x9zaKLeMO8WhDB7PEKEtRAFe0nKhdS+cjD+wniXGec9b5rnvuLSMSNErxhmJUUWCMsrKmWngsEuJ5YpjtFOWBqY3qez1jmBCJxpJ0h9jyIItDIYI1SrKSM4tW6dmVB0TsaISoKxvGIiqEinzUnzAo42zRxYojmD3FEtk+bTFFkMZskYcS9mfiwwh4ivpmhAWYkEswGg2RwSxJosxSjrU4tjAePcEY8SKp4wx3ifK0m8CAxSIVlJ4T8QMfic1lrFVaMqeYDjwztjojxHhsYOxW1ssmAkoic6eX1sY7JCBWjsQ7LNKWjRKiLRxmieW9SdYjxOkY0mV1Oo3Vaq0msCoY7FCGOlWMsxkYIkxMiHh7RYyMPjEJPRDSRnExcJYCAso4GxUhrGQY5QMpjCSpedaExkRND5jorEFQ9lDLKifI5XBWmb3DC2TKlRGLVCxBeDoCTR49CoGAUwjNmaulGqHb0HMjYgkciiLK+UUFWRxt2VZbT1mt1GK0Fo-EOx4n2cMn53srgBAvhANmqLw53yaIqfi4xsQdnyu2d+aVqjONbmna2OJuxQpHGPchhdwEGzrhc42MZBXYwmD3CE-F+j21jCMZy8Ytxdlom0CVewpU0FacteUIwcXcpRKiOY7FsYrzBdbeMhUWJt2NcAkhAVQHSsvuaxos19rzUxelFsyiBjdhGC2UYLY4k9l0V8o6RC0lgMnnK85nMMVVPKJo2GbiirsOsrMd1uU1SWzqSImlQDiEfh9WQs18qs2IGWrk4N-9Q0ZUxJZJoSolWVBylYwqnrhDMFMIYGqKLlzNoQNUf+SomFoP2p2Ht1lcZ5Roj2IW4rqXfKAa0o87EaI3JyhtQS2Ntyo2WMsIAA */\n  createMachine(\n    {\n      context: {\n        providers: undefined,\n        defaultProvider: undefined,\n        quota: undefined,\n        capabilities: undefined,\n      },\n      predictableActionArguments: true,\n      tsTypes: {} as import(\"./CreateKafkaInstanceMachine.typegen\").Typegen0,\n      schema: {\n        context: {} as CreateKafkaInstanceMachineContext,\n        events: {} as\n          | {\n              type: \"standard quota available\";\n              quota: Pick<\n                StandardPlanInitializationData,\n                | \"remainingPrepaidQuota\"\n                | \"remainingMarketplaceQuota\"\n                | \"marketplaceSubscriptions\"\n              >;\n            }\n          | {\n              type: \"out of standard quota\";\n              quota: Pick<\n                StandardPlanInitializationData,\n                \"marketplaceSubscriptions\"\n              >;\n            }\n          | {\n              type: \"no standard quota available\";\n              hasTrialQuota: boolean;\n            }\n          | {\n              type: \"trial available\";\n              capabilities: TrialPlanInitializationData;\n            }\n          | { type: \"trial used\" }\n          | { type: \"developer available\" }\n          | { type: \"developer used\" }\n          | { type: \"developer unavailable\" }\n          | {\n              type: \"providers and regions available\";\n              providers: CloudProvidersInfo;\n              defaultProvider: CloudProvider | undefined;\n            }\n          | { type: \"providers or regions unavailable\" }\n          | { type: \"save\"; data: CreateKafkaFormData }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          checkStandardQuota: {\n            data: never;\n          };\n          checkDeveloperAvailability: {\n            data: never;\n          };\n          fetchProvidersWithRegions: {\n            data: never;\n          };\n          standardPlan: {\n            data: StandardPlanMachineContext;\n          };\n          trialPlan: {\n            data: TrialPlanMachineContext;\n          };\n        },\n      },\n      id: \"createKafkaInstance\",\n      initial: \"loading\",\n      states: {\n        loading: {\n          description: \"Fetch the data required to drive the creation flow\",\n          tags: \"loading\",\n          initial: \"quota\",\n          states: {\n            quota: {\n              initial: \"checking standard quota\",\n              states: {\n                \"checking standard quota\": {\n                  invoke: {\n                    src: \"checkStandardQuota\",\n                    onError: [\n                      {\n                        actions: \"setStandardUnavailable\",\n                        target: \"standard\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"standard quota available\": {\n                      actions: \"setStandardAvailable\",\n                      target: \"standard\",\n                    },\n                    \"out of standard quota\": {\n                      actions: \"setStandardOutOfQuota\",\n                      target: \"standard\",\n                    },\n                    \"no standard quota available\": {\n                      target: \"checking developer availability\",\n                    },\n                  },\n                },\n                standard: {\n                  type: \"final\",\n                  always: {\n                    target: \"#createKafkaInstance.loading.fetching providers\",\n                  },\n                },\n                developer: {\n                  type: \"final\",\n                  always: {\n                    target: \"#createKafkaInstance.loading.fetching providers\",\n                  },\n                },\n                \"checking developer availability\": {\n                  invoke: {\n                    src: \"checkDeveloperAvailability\",\n                    onError: [\n                      {\n                        actions: \"setDeveloperUnavailable\",\n                        target: \"developer\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"developer used\": {\n                      actions: \"setDeveloperUsed\",\n                      target: \"developer\",\n                    },\n                    \"developer available\": {\n                      actions: \"setDeveloperAvailable\",\n                      target: \"developer\",\n                    },\n                    \"developer unavailable\": {\n                      actions: \"setDeveloperUnavailable\",\n                      target: \"developer\",\n                    },\n                  },\n                },\n              },\n            },\n            \"fetching providers\": {\n              invoke: {\n                src: \"fetchProvidersWithRegions\",\n                onError: [\n                  {\n                    actions: \"setProvidersOrRegionsUnavailable\",\n                    target: \"ready\",\n                  },\n                ],\n              },\n              on: {\n                \"providers and regions available\": {\n                  actions: \"setProviders\",\n                  target: \"ready\",\n                },\n                \"providers or regions unavailable\": {\n                  actions: \"setProvidersOrRegionsUnavailable\",\n                  target: \"ready\",\n                },\n              },\n            },\n            ready: {\n              type: \"final\",\n              entry: \"setCapabilities\",\n            },\n          },\n          onDone: [\n            {\n              cond: \"standard plan\",\n              target: \"standard plan\",\n            },\n            {\n              cond: \"developer plan\",\n              target: \"developer plan\",\n            },\n            {\n              target: \"system unavailable\",\n            },\n          ],\n        },\n        \"system unavailable\": {\n          tags: \"systemUnavailable\",\n          type: \"final\",\n        },\n        \"standard plan\": {\n          invoke: {\n            src: \"standardPlan\",\n            id: \"standardPlanService\",\n          },\n          tags: \"standardPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToStandardPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        \"developer plan\": {\n          invoke: {\n            src: \"trialPlan\",\n            id: \"trialPlanService\",\n          },\n          tags: \"trialPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToTrialPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        complete: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        setDeveloperAvailable: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"available\" as const,\n          },\n        })),\n        setDeveloperUnavailable: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"unavailable\" as const,\n          },\n        })),\n        setDeveloperUsed: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"used\" as const,\n          },\n        })),\n        setStandardAvailable: assign((_, event) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"available\" as const,\n            remainingPrepaidQuota: event.quota.remainingPrepaidQuota,\n            marketplaceSubscriptions: event.quota.marketplaceSubscriptions,\n            remainingMarketplaceQuota: event.quota.remainingMarketplaceQuota,\n          },\n        })),\n        setStandardOutOfQuota: assign((_, event) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"out-of-quota\" as const,\n            marketplaceSubscriptions: event.quota.marketplaceSubscriptions,\n            remainingMarketplaceQuota: 0,\n            remainingPrepaidQuota: 0,\n          },\n        })),\n        setStandardUnavailable: assign((_) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"instance-unavailable\" as const,\n            marketplaceSubscriptions: [],\n            remainingMarketplaceQuota: 0,\n            remainingPrepaidQuota: 0,\n          },\n        })),\n        setProviders: assign((_, event) => {\n          return {\n            providers: event.providers,\n            defaultProvider: event.defaultProvider,\n          };\n        }),\n        setProvidersOrRegionsUnavailable: assign((context) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const quota = context.quota!;\n          if (quota.plan === \"standard\") {\n            quota.instanceAvailability = \"regions-unavailable\";\n          } else {\n            quota.instanceAvailability = \"unavailable\";\n          }\n          return {\n            providers: [],\n            quota,\n          };\n        }),\n        setCapabilities: assign((context) => {\n          const { providers, defaultProvider, quota } = context;\n          if (!providers || !quota) {\n            throw new Error(\"unexpected condition, no providers or quota\");\n          }\n          if (quota.plan === \"standard\") {\n            const capabilities: StandardPlanInitializationData = {\n              plan: \"standard\",\n              availableProviders: providers,\n              defaultProvider,\n              instanceAvailability: quota.instanceAvailability,\n              marketplaceSubscriptions: quota.marketplaceSubscriptions,\n              remainingMarketplaceQuota: quota.remainingMarketplaceQuota,\n              remainingPrepaidQuota: quota.remainingPrepaidQuota,\n            };\n            return { capabilities };\n          } else {\n            const capabilities: TrialPlanInitializationData = {\n              plan: \"developer\",\n              availableProviders: providers,\n              defaultProvider,\n              instanceAvailability: quota.instanceAvailability,\n            };\n            return { capabilities };\n          }\n        }),\n        notifyCreateErrorToStandardPlan: forwardTo(\"standardPlanService\"),\n        notifyCreateErrorToTrialPlan: send(\n          (_, event) => {\n            return { type: \"createError\", error: event.error };\n          },\n          { to: \"trialPlanService\" }\n        ),\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n      },\n      guards: {\n        \"standard plan\": (context) => context.quota?.plan === \"standard\",\n        \"developer plan\": (context) => context.quota?.plan === \"developer\",\n      },\n    }\n  );\n\ntype EventTypes = Pick<\n  EventFrom<typeof CreateKafkaInstanceMachine>,\n  \"type\"\n>[\"type\"];\n\ntype EventOptions<E extends EventTypes> = Omit<\n  EventFrom<typeof CreateKafkaInstanceMachine, E>,\n  \"type\"\n>;\n\nexport type CreateKafkaInstanceServices = {\n  checkStandardQuota: (events: {\n    onOutOfQuota: (p: EventOptions<\"out of standard quota\">) => void;\n    onQuotaAvailable: (p: EventOptions<\"standard quota available\">) => void;\n    onNoQuotaAvailable: (\n      p: EventOptions<\"no standard quota available\">\n    ) => void;\n  }) => void;\n  checkDeveloperAvailability: (events: {\n    onUsed: () => void;\n    onAvailable: () => void;\n    onUnavailable: () => void;\n  }) => void;\n  fetchProvidersWithRegions: (\n    plan: \"standard\" | \"developer\",\n    events: {\n      onAvailable: (p: EventOptions<\"providers and regions available\">) => void;\n      onUnavailable: () => void;\n    }\n  ) => void;\n  getStandardSizes: (\n    provider: CloudProvider,\n    region: CloudRegion\n  ) => Promise<StandardSizes>;\n  getTrialSizes: (\n    provider: CloudProvider,\n    region: CloudRegion\n  ) => Promise<TrialSizes>;\n  onCreate: (\n    data: CreateKafkaFormData,\n    onSuccess: () => void,\n    onError: (error: CreateKafkaInstanceError) => void\n  ) => void;\n};\n\nexport function makeCreateKafkaInstanceMachine({\n  checkStandardQuota: checkStandardQuotaCb,\n  checkDeveloperAvailability: checkDeveloperAvailabilityCb,\n  fetchProvidersWithRegions: fetchProvidersWithRegionsCb,\n  getStandardSizes: getStandardSizesCb,\n  getTrialSizes: getTrialSizesCb,\n  onCreate,\n}: CreateKafkaInstanceServices) {\n  return CreateKafkaInstanceMachine.withConfig({\n    services: {\n      checkStandardQuota: () => {\n        return (send) =>\n          checkStandardQuotaCb({\n            onNoQuotaAvailable: ({ hasTrialQuota }) => {\n              send({ type: \"no standard quota available\", hasTrialQuota });\n            },\n            onOutOfQuota: ({ quota }) => {\n              send({ type: \"out of standard quota\", quota });\n            },\n            onQuotaAvailable: ({ quota }) => {\n              send({ type: \"standard quota available\", quota });\n            },\n          });\n      },\n      checkDeveloperAvailability: () => {\n        return (send) => {\n          checkDeveloperAvailabilityCb({\n            onAvailable: () => send(\"developer available\"),\n            onUsed: () => send(\"developer used\"),\n            onUnavailable: () => send(\"developer unavailable\"),\n          });\n        };\n      },\n      fetchProvidersWithRegions: (context) => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const instanceType = context.quota!.plan;\n        return (send) => {\n          fetchProvidersWithRegionsCb(instanceType, {\n            onAvailable: ({ providers, defaultProvider }) =>\n              send({\n                type: \"providers and regions available\",\n                providers,\n                defaultProvider,\n              }),\n            onUnavailable: () => send(\"providers or regions unavailable\"),\n          });\n        };\n      },\n      createInstance: (_context, event) => {\n        const form = event.data;\n\n        return (send) => {\n          function onSuccess() {\n            send(\"createSuccess\");\n          }\n\n          function onError(error: CreateKafkaInstanceError) {\n            send({ type: \"createError\", error });\n          }\n\n          onCreate(\n            {\n              plan: form.plan,\n              name: form.name,\n              provider: form.provider,\n              region: form.region,\n              sizeId: form.sizeId,\n              billing: form.billing,\n            },\n            onSuccess,\n            onError\n          );\n        };\n      },\n      standardPlan: (context) => {\n        return StandardPlanMachine.withContext({\n          capabilities: context.capabilities as StandardPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getStandardSizesCb(form.provider, form.region);\n            },\n          },\n        });\n      },\n      trialPlan: (context) => {\n        return TrialPlanMachine.withContext({\n          capabilities: context.capabilities as TrialPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getTrialSizesCb(form.provider, form.region);\n            },\n          },\n        });\n      },\n    },\n  });\n}\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { CreateKafkaInstanceServices } from \"./CreateKafkaInstanceMachine\";\nimport { makeCreateKafkaInstanceMachine } from \"./CreateKafkaInstanceMachine\";\n\nexport const CreateKafkaInstanceContext = createContext<{\n  service: ActorRefFrom<ReturnType<typeof makeCreateKafkaInstanceMachine>>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport const CreateKafkaInstanceProvider: FunctionComponent<\n  CreateKafkaInstanceServices\n> = ({\n  onCreate,\n  checkStandardQuota,\n  checkDeveloperAvailability,\n  fetchProvidersWithRegions,\n  getStandardSizes,\n  getTrialSizes,\n  children,\n}) => {\n  const service = useInterpret(\n    () =>\n      makeCreateKafkaInstanceMachine({\n        checkStandardQuota,\n        checkDeveloperAvailability,\n        fetchProvidersWithRegions,\n        getStandardSizes,\n        getTrialSizes,\n        onCreate,\n      }),\n    { devTools: true }\n  );\n  return (\n    <CreateKafkaInstanceContext.Provider value={{ service }}>\n      {children}\n    </CreateKafkaInstanceContext.Provider>\n  );\n};\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { Link } from \"react-router-dom\";\n\nexport type BillingHelpProps = {\n  type: \"rh-only\" | \"external-marketplaces\";\n  subscriptionOptionsHref: string;\n};\n\nexport const BillingHelp: VoidFunctionComponent<BillingHelpProps> = ({\n  type,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <Popover\n      aria-label={t(\"billing.field_label\")}\n      headerContent={t(\"billing.field_label\")}\n      bodyContent={\n        <Trans\n          i18nKey={\n            type === \"rh-only\"\n              ? \"billing.field_popover_rh_only\"\n              : \"billing.field_popover_external_marketplace\"\n          }\n          ns={\"create-kafka-instance\"}\n          components={[<Link to={subscriptionOptionsHref} />]}\n        />\n      }\n    >\n      <OutlinedQuestionCircleIcon />\n    </Popover>\n  );\n};\n","export const LogoAWS = new URL(\"./Logo-AWS.svg\", import.meta.url)\n  .href;\nexport const LogoAzure = new URL(\n  \"./Logo-Azure.svg\",\n  import.meta.url\n).href;\nexport const LogoGCP = new URL(\"./Logo-GCP.svg\", import.meta.url)\n  .href;\nexport const LogoRedhat = new URL(\n  \"./Logo-Redhat.svg\",\n  import.meta.url\n).href;","import type { FunctionComponent } from \"react\";\nimport { LogoAWS } from \"./images\";\n\nexport const AWSLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoAWS} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoAzure } from \"./images\";\n\nexport const AzureLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoAzure} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoGCP } from \"./images\";\n\nexport const GCPLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoGCP} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Gallery,\n  GalleryItem,\n  HelperText,\n  HelperTextItem,\n  Tile,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { MarketPlace } from \"ui-models/src/models/kafka\";\nimport { AWSLogo, AzureLogo, GCPLogo, RedhatLogo } from \"../../Logos\";\n\nexport type BillingTilesProps = {\n  value: \"prepaid\" | string | undefined;\n  hasPrepaid: boolean;\n  subscriptions: {\n    marketplace: MarketPlace;\n    subscription: string;\n    isDisabled: boolean;\n  }[];\n  isPrepaidOverQuota: boolean;\n  prepaidQuota: number;\n  isMarketplaceOverQuota: boolean;\n  marketplaceQuota: number;\n  onPrepaid: () => void;\n  onSubscription: (marketplace: MarketPlace, subscription: string) => void;\n  validated?: SelectProps[\"validated\"];\n};\nexport const BillingTiles: VoidFunctionComponent<BillingTilesProps> = ({\n  value,\n  hasPrepaid,\n  subscriptions,\n  isPrepaidOverQuota,\n  prepaidQuota,\n  isMarketplaceOverQuota,\n  marketplaceQuota,\n  onPrepaid,\n  onSubscription,\n  validated,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const marketplaces: { [key in MarketPlace]: string } = {\n    aws: t(\"billing.marketplace_aws\"),\n    azure: t(\"billing.marketplace_azure\"),\n    gcp: t(\"billing.marketplace_gcp\"),\n    rhm: t(\"billing.marketplace_rh\"),\n  };\n  return (\n    <>\n      <Flex\n        role=\"listbox\"\n        aria-label={t(\"select_billing\")}\n        direction={{ default: \"column\", md: \"row\" }}\n      >\n        {hasPrepaid && (\n          <Flex\n            flex={{ default: \"flex_1\" }}\n            direction={{ default: \"column\" }}\n            spaceItems={{ default: \"spaceItemsSm\" }}\n          >\n            <span className=\"pf-c-form__label\">\n              <span className=\"pf-c-form__label-text\">\n                {t(\"billing.prepaid\")}\n              </span>\n            </span>\n            <FlexItem flex={{ default: \"flex_1\" }}>\n              <Tile\n                className={\"pf-u-w-100\"}\n                title={t(\"billing.prepaid_option\")}\n                icon={tiles[\"rhm\"]}\n                isDisabled={isPrepaidOverQuota}\n                isStacked={true}\n                isSelected={value === \"prepaid\"}\n                onClick={onPrepaid}\n              >\n                &nbsp;\n              </Tile>\n            </FlexItem>\n            {isPrepaidOverQuota && prepaidQuota > 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.prepaid_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {isPrepaidOverQuota && prepaidQuota === 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.prepaid_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </Flex>\n        )}\n        {subscriptions.length > 0 && (\n          <Flex\n            flex={{ default: \"flex_1\" }}\n            direction={{ default: \"column\" }}\n            spaceItems={{ default: \"spaceItemsSm\" }}\n          >\n            {hasPrepaid && (\n              <span className=\"pf-c-form__label\">\n                <span className=\"pf-c-form__label-text\">\n                  {t(\"billing.marketplace\")}\n                </span>\n              </span>\n            )}\n            <Gallery hasGutter={true}>\n              {subscriptions.map(\n                ({ marketplace, subscription, isDisabled }) => (\n                  <GalleryItem key={`tile-${subscription}`}>\n                    <Tile\n                      className={\"pf-u-w-100\"}\n                      title={marketplaces[marketplace]}\n                      icon={tiles[marketplace]}\n                      isStacked={true}\n                      isSelected={value === subscription}\n                      isDisabled={isDisabled || isMarketplaceOverQuota}\n                      onClick={() => onSubscription(marketplace, subscription)}\n                    >\n                      {subscription}\n                    </Tile>\n                  </GalleryItem>\n                )\n              )}\n            </Gallery>\n            {isMarketplaceOverQuota && marketplaceQuota > 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.marketplace_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {isMarketplaceOverQuota && marketplaceQuota === 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.marketplace_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </Flex>\n        )}\n      </Flex>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-billing-option\"\n        name=\"billing\"\n        validated={validated}\n        onChange={(value) => {\n          if (value === \"prepaid\") {\n            onPrepaid();\n          } else {\n            const s = subscriptions.find((s) => s.marketplace === value);\n            if (s) {\n              onSubscription(s.marketplace, s.subscription);\n            }\n          }\n        }}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_billing\")}\n          />,\n          hasPrepaid ? (\n            <FormSelectOption\n              key={\"prepaid\"}\n              value={\"prepaid\"}\n              label={`prepaid`}\n            />\n          ) : null,\n          subscriptions.map(({ marketplace, subscription, isDisabled }) => {\n            return (\n              <FormSelectOption\n                key={`select-option-${subscription}`}\n                value={subscription}\n                label={`${marketplace} - ${subscription}`}\n                isDisabled={isDisabled}\n              />\n            );\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n\nconst tiles: { [id in MarketPlace]: JSX.Element } = {\n  aws: <AWSLogo />,\n  gcp: <GCPLogo />,\n  azure: <AzureLogo />,\n  rhm: <RedhatLogo />,\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoRedhat } from \"./images\";\n\nexport const RedhatLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoRedhat} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Skeleton,\n  Tile,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { CloudProvider } from \"ui-models/src/models/kafka\";\nimport { AWSLogo, AzureLogo, GCPLogo } from \"../../Logos\";\nimport type { CloudProviderInfo } from \"../types\";\n\nexport type CloudProvidersTilesProps = {\n  providers: (CloudProviderInfo & { isDisabled?: boolean })[];\n  value: CloudProvider | undefined;\n  onChange: (provider: CloudProvider) => void;\n  isDisabled: boolean;\n  validated?: SelectProps[\"validated\"];\n};\nexport const CloudProvidersTiles: VoidFunctionComponent<\n  CloudProvidersTilesProps\n> = ({ providers, value, onChange, isDisabled, validated }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      {providers.length === 0 && (\n        <Skeleton\n          className=\"pf-m-text-4xl\"\n          screenreaderText=\"Loading contents\"\n        />\n      )}\n      <div role=\"listbox\" aria-label={t(\"select_cloud_provider\")}>\n        <Flex\n          justifyContent={{ default: \"justifyContentSpaceBetween\" }}\n          spacer={{ default: \"spacerNone\" }}\n          spaceItems={{ default: \"spaceItemsXs\" }}\n        >\n          {providers.map(\n            ({ id, displayName, isDisabled: providerDisabled }) => (\n              <FlexItem grow={{ default: \"grow\" }} key={id}>\n                <Tile\n                  className={\"pf-u-w-100\"}\n                  title={displayName}\n                  icon={tiles[id]}\n                  isStacked={true}\n                  isSelected={value === id}\n                  isDisabled={providerDisabled || isDisabled}\n                  onClick={() => onChange(id)}\n                >\n                  {providerDisabled &&\n                    t(\"billing.provider_incompatible_with_current_billing\")}\n                  &nbsp;\n                </Tile>\n              </FlexItem>\n            )\n          )}\n        </Flex>\n      </div>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-cloud-provider-option\"\n        name=\"cloud-provider\"\n        isDisabled={isDisabled}\n        validated={validated}\n        onChange={(value) => onChange(value as CloudProvider)}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_cloud_provider\")}\n          />,\n          providers.map(({ id, displayName }, index) => {\n            return (\n              <FormSelectOption key={index} value={id} label={displayName} />\n            );\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n\nconst tiles: { [id in CloudProvider]: JSX.Element } = {\n  aws: <AWSLogo />,\n  gcp: <GCPLogo />,\n  azure: <AzureLogo />,\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { CloudRegion } from \"ui-models/src/models/kafka\";\nimport type { RegionInfo } from \"../types\";\n\nexport type CloudRegionProps = {\n  value: CloudRegion | undefined;\n  regions: RegionInfo[] | undefined;\n  isDisabled: boolean;\n  isSizeUnavailable: boolean;\n  onChange: (region: string) => void;\n  validated?: SelectProps[\"validated\"];\n  placeholderText: SelectProps[\"placeholderText\"];\n};\n\nexport const CloudRegionSelect: FunctionComponent<CloudRegionProps> = ({\n  value,\n  regions,\n  isDisabled,\n  isSizeUnavailable,\n  validated,\n  onChange,\n  placeholderText,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, value) => {\n    setIsOpen((prevState) => !prevState);\n    onChange(value as string);\n  };\n\n  const makeRegionOptions = regions?.map(\n    ({ id, displayName, isDisabled }, index) => (\n      <SelectOption\n        isDisabled={isDisabled}\n        disabled={isDisabled}\n        key={index}\n        value={id}\n        description={\n          isDisabled\n            ? t(\"create-kafka-instance:temporarily_unavailable\")\n            : undefined\n        }\n      >\n        {displayName}\n      </SelectOption>\n    )\n  );\n\n  return (\n    <Select\n      id=\"form-cloud-region-option\"\n      toggleId=\"form-cloud-region-option\"\n      name=\"form-cloud-region-option\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      validated={validated}\n      selections={value}\n      isOpen={isOpen}\n      isDisabled={isDisabled}\n      aria-describedby={\n        isSizeUnavailable\n          ? \"instance-size-unavailable\"\n          : \"form-cloud-region-option\"\n      }\n      placeholderText={placeholderText}\n    >\n      {makeRegionOptions}\n    </Select>\n  );\n};\n","import {\n  FormGroup,\n  ToggleGroup,\n  ToggleGroupItem,\n  Tooltip,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\n\nexport type FieldAZProps = {\n  value: AZ | undefined;\n  validity: \"valid\" | \"required\";\n  options: AZ | \"all\";\n  isDisabled: boolean;\n  onChange: (value: AZ) => void;\n};\nexport const FieldAZ: VoidFunctionComponent<FieldAZProps> = ({\n  value,\n  options,\n  validity,\n  isDisabled,\n  onChange,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const validated = validity !== \"valid\" ? \"error\" : \"default\";\n  const disableAZTooltip = options === \"all\" || isDisabled;\n  const enabledZone = options === \"multi\" ? \"multi\" : \"single\";\n  const trigger = disableAZTooltip ? \"manual\" : undefined;\n  return (\n    <FormGroup\n      label={t(\"availability_zones\")}\n      fieldId=\"availability-zones\"\n      validated={validated}\n      helperTextInvalid={t(\"common:required\")}\n      data-testid={\"az\"}\n    >\n      <ToggleGroup aria-label={t(\"availability_zone_selection\")}>\n        <Tooltip\n          content={t(\"availability_zones_tooltip_message\", {\n            enabledZone,\n          })}\n          trigger={trigger}\n        >\n          <ToggleGroupItem\n            text={t(\"az.single\")}\n            value={\"single\"}\n            isDisabled={isDisabled || options === \"multi\"}\n            buttonId=\"single\"\n            isSelected={value === \"single\"}\n            onChange={() => onChange(\"single\")}\n          />\n        </Tooltip>\n\n        <Tooltip\n          trigger={trigger}\n          content={t(\"availability_zones_tooltip_message\", {\n            enabledZone,\n          })}\n        >\n          <ToggleGroupItem\n            text={t(\"az.multi\")}\n            value=\"multi\"\n            buttonId=\"multi\"\n            isDisabled={isDisabled || options === \"single\"}\n            isSelected={value === \"multi\"}\n            onChange={() => onChange(\"multi\")}\n          />\n        </Tooltip>\n      </ToggleGroup>\n    </FormGroup>\n  );\n};\n","import { FormGroup } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { CloudProvidersTilesProps } from \"./CloudProviderTiles\";\nimport { CloudProvidersTiles } from \"./CloudProviderTiles\";\n\nexport type FieldCloudProviderProps = {\n  isValid: boolean;\n} & Omit<CloudProvidersTilesProps, \"validated\">;\nexport const FieldCloudProvider: VoidFunctionComponent<\n  FieldCloudProviderProps\n> = ({ value, providers, onChange, isDisabled, isValid }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const validated = !isValid ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={t(\"cloud_provider\")}\n      fieldId=\"form-cloud-provider-option\"\n      validated={validated}\n      helperTextInvalid={t(\"common:required\")}\n      isRequired\n    >\n      <CloudProvidersTiles\n        providers={providers}\n        value={value}\n        onChange={onChange}\n        isDisabled={isDisabled}\n        validated={validated}\n      />\n    </FormGroup>\n  );\n};\n","import { FormGroup, HelperText, HelperTextItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { CloudRegionProps } from \"./CloudRegionsSelect\";\nimport { CloudRegionSelect } from \"./CloudRegionsSelect\";\n\nexport type FieldCloudRegionProps = {\n  validity: \"valid\" | \"region-unavailable\" | \"required\";\n} & Omit<CloudRegionProps, \"validated\" | \"placeholderText\">;\nexport const FieldCloudRegion: VoidFunctionComponent<FieldCloudRegionProps> = ({\n  value,\n  regions,\n  onChange,\n  isDisabled,\n  isSizeUnavailable,\n  validity,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const allRegionsUnavailable = regions\n    ? regions.every(({ isDisabled }) => isDisabled === true) ||\n      regions.length === 0\n    : true;\n\n  const disableControl =\n    isDisabled || allRegionsUnavailable || regions?.length === 0;\n\n  const someRegionsUnavailable =\n    !allRegionsUnavailable &&\n    regions?.some(({ isDisabled }) => isDisabled === true);\n\n  const validation =\n    validity !== \"valid\"\n      ? value !== undefined\n        ? \"error\"\n        : \"default\"\n      : \"default\";\n\n  const placeholder =\n    allRegionsUnavailable && regions\n      ? t(\"regions_temporarily_unavailable\")\n      : t(\"select_region\");\n\n  const helperTextInvalid = isDisabled ? undefined : validity ===\n    \"region-unavailable\" ? (\n    <HelperText className={\"pf-c-form__helper-text\"}>\n      <HelperTextItem variant=\"error\" hasIcon>\n        {t(\"form_errors.region_unavailable_message\")}\n      </HelperTextItem>\n    </HelperText>\n  ) : allRegionsUnavailable ? (\n    t(\"all_region_unavailable_helper_text\")\n  ) : (\n    t(\"common:required\")\n  );\n\n  return (\n    <FormGroup\n      data-testid=\"cloudRegion\"\n      label={t(\"cloud_region\")}\n      fieldId=\"form-cloud-region-option\"\n      isRequired\n      validated={validation}\n      helperText={\n        regions && (allRegionsUnavailable || someRegionsUnavailable) ? (\n          <HelperText className={\"pf-c-form__helper-text\"}>\n            <HelperTextItem\n              variant={someRegionsUnavailable ? \"warning\" : \"error\"}\n              hasIcon\n            >\n              {someRegionsUnavailable\n                ? t(\"some_region_unavailable_helper_text\")\n                : t(\"all_region_unavailable_helper_text\")}\n            </HelperTextItem>\n          </HelperText>\n        ) : undefined\n      }\n      helperTextInvalid={helperTextInvalid}\n    >\n      <CloudRegionSelect\n        value={value}\n        regions={regions}\n        onChange={onChange}\n        isDisabled={disableControl}\n        isSizeUnavailable={isSizeUnavailable}\n        validated={validation}\n        placeholderText={placeholder}\n      />\n    </FormGroup>\n  );\n};\n","import { FormGroup, TextInput } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type FieldInstanceNameProps = {\n  value: string;\n  validity: \"valid\" | \"required\" | \"taken\" | \"invalid\";\n  isDisabled: boolean;\n  onChange: (value: string) => void;\n};\nexport const FieldInstanceName: VoidFunctionComponent<\n  FieldInstanceNameProps\n> = ({ value, validity, isDisabled, onChange }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const validation = validity !== \"valid\" ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={t(\"instance_name\")}\n      helperText={t(\"create_instance_name_helper_text\")}\n      helperTextInvalid={\n        validity === \"taken\"\n          ? t(\"create_instance_name_helper_text_name_taken\", { name: value })\n          : validity === \"invalid\"\n          ? t(\"create_instance_name_helper_text\")\n          : t(\"common:required\")\n      }\n      isRequired\n      validated={validation}\n      fieldId=\"form-instance-name\"\n    >\n      <TextInput\n        id=\"form-instance-name\"\n        isRequired\n        validated={validation}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        autoFocus={true}\n        isDisabled={isDisabled}\n      />\n    </FormGroup>\n  );\n};\n","import {\n  Alert,\n  AlertVariant,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { ExternalLink } from \"@rhoas/app-services-ui-components\";\n\nexport const FieldSizeHelperText: VoidFunctionComponent<{\n  remainingQuota: number | undefined;\n  isPreview: boolean;\n  isUnavailable: boolean;\n  isError: boolean;\n}> = ({ remainingQuota, isPreview, isUnavailable, isError }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <HelperText className={\"pf-c-form__helper-text\"}>\n      {remainingQuota && (\n        <HelperTextItem>\n          {t(\"standard_kafka_streaming_unit\", {\n            count: remainingQuota,\n          })}\n        </HelperTextItem>\n      )}\n\n      {isUnavailable && (\n        <Alert\n          id=\"instance-size-unavailable\"\n          aria-live=\"polite\"\n          role={\"alert\"}\n          className=\"pf-u-mb-md pf-u-mt-lg\"\n          variant={isError ? \"danger\" : \"warning\"}\n          title={t(\"size_unavailable_title\")}\n          isInline\n        >\n          {t(\"size_unavailable_message\")}\n        </Alert>\n      )}\n      {isPreview && (\n        <Alert\n          aria-live=\"polite\"\n          role={\"alert\"}\n          className={`pf-u-mb-md ${isUnavailable ? \"\" : \"pf-u-mt-lg\"}`}\n          variant={AlertVariant.info}\n          title={t(\"size_preview_title\")}\n          isInline\n        >\n          <Trans\n            ns={\"create-kafka-instance\"}\n            i18nKey={\"size_preview_message\"}\n            components={[\n              <ExternalLink\n                href={\"https://access.redhat.com/articles/6473891\"}\n                testId={\"size-preview-support-link\"}\n                className={\"pf-u-ml-xs\"}\n              />,\n            ]}\n          />\n        </Alert>\n      )}\n    </HelperText>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const FieldSizeHelperTextOverQuota: VoidFunctionComponent<{\n  remainingQuota: number;\n  onClick: () => void;\n}> = ({ remainingQuota, onClick }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      <HelperText className={\"pf-c-form__helper-text\"}>\n        <HelperTextItem variant=\"error\" hasIcon>\n          {t(\"standard_kafka_streaming_unit\", {\n            count: remainingQuota,\n          })}\n        </HelperTextItem>\n      </HelperText>\n      <HelperText>\n        <HelperTextItem>\n          <Button\n            className=\"pf-c-form__helper-text\"\n            variant={ButtonVariant.link}\n            isInline\n            onClick={onClick}\n          >\n            {t(\"standard_kafka_size_description\")}\n          </Button>\n        </HelperTextItem>\n      </HelperText>\n    </>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const FieldSizeHelperTextTrial: VoidFunctionComponent<{\n  onClick: () => void;\n}> = ({ onClick }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      <HelperText className={\"pf-c-form__helper-text\"}>\n        <HelperTextItem>{t(\"trial_kafka_size_description\")}</HelperTextItem>\n      </HelperText>\n      <HelperText>\n        <HelperTextItem>\n          <Button\n            className=\"pf-c-form__helper-text\"\n            variant={ButtonVariant.link}\n            isInline\n            onClick={onClick}\n          >\n            {t(\"learn_about_sizes\")}\n          </Button>\n        </HelperTextItem>\n      </HelperText>\n    </>\n  );\n};\n","import type { SliderProps } from \"@patternfly/react-core\";\nimport { Grid, GridItem, Skeleton, Slider } from \"@patternfly/react-core\";\nimport {\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { Size } from \"ui-models/src/models/kafka\";\nimport { FieldSizeHelperText } from \"./FieldSizeHelperText\";\nimport { FieldSizeHelperTextOverQuota } from \"./FieldSizeHelperTextOverQuota\";\nimport { FieldSizeHelperTextTrial } from \"./FieldSizeHelperTextTrial\";\n\nexport type FieldSizeProps = {\n  value: number | undefined;\n  sizes: Size[] | undefined;\n  remainingQuota: number | undefined;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isError: boolean;\n  isLoadingError: boolean;\n  validity: \"valid\" | \"required\" | \"out-of-quota\" | \"developer\" | \"disabled\";\n  onChange: (size: Size) => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n};\nexport const FieldSize: VoidFunctionComponent<FieldSizeProps> = ({\n  value,\n  sizes,\n  remainingQuota,\n  isDisabled,\n  isLoading,\n  isError,\n  isLoadingError,\n  validity,\n  onChange,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const isRequired = validity !== \"developer\";\n\n  const helperTextTrial = (\n    <FieldSizeHelperTextTrial onClick={onLearnMoreAboutSizes} />\n  );\n\n  if (isLoading || isLoadingError) {\n    return (\n      <FormGroupWithPopover\n        labelHead={t(\"common:size\")}\n        fieldId=\"streaming-size\"\n        fieldLabel={t(\"common:size\")}\n        labelBody={t(\"size_help_content\")}\n        buttonAriaLabel={t(\"size_field_aria\")}\n        isRequired={isRequired}\n        helperText={\n          <Grid sm={6} lg={12} hasGutter data-testid={\"size-loading\"}>\n            <GridItem>\n              <Skeleton width={\"50%\"} fontSize={\"3xl\"} />\n            </GridItem>\n            <GridItem>\n              <Skeleton width={\"40%\"} fontSize={\"sm\"} />\n            </GridItem>\n          </Grid>\n        }\n        validated={isLoadingError ? \"error\" : \"default\"}\n        helperTextInvalid={t(\"sizes_error\")}\n      />\n    );\n  }\n\n  if (sizes === undefined) {\n    return (\n      <FormGroupWithPopover\n        labelHead={t(\"common:size\")}\n        fieldId=\"streaming-size\"\n        fieldLabel={t(\"common:size\")}\n        labelBody={t(\"size_help_content\")}\n        buttonAriaLabel={t(\"size_field_aria\")}\n        isRequired={isRequired}\n        helperText={\n          validity === \"developer\" ? helperTextTrial : t(\"sizes_missing\")\n        }\n      >\n        <div data-testid={\"size-slider\"} />\n      </FormGroupWithPopover>\n    );\n  }\n\n  const valueIndex =\n    validity !== \"developer\"\n      ? sizes.findIndex((size) => size.quota === value)\n      : -1;\n\n  const steps: SliderProps[\"customSteps\"] = sizes.map((s, index) => ({\n    value: index,\n    label: `${s.quota}`,\n  }));\n\n  const isUnavailable = sizes[valueIndex]?.isDisabled;\n\n  const helperText = (\n    <FieldSizeHelperText\n      remainingQuota={remainingQuota}\n      isPreview={sizes[valueIndex]?.status === \"preview\"}\n      isUnavailable={isUnavailable}\n      isError={isError}\n    />\n  );\n  const helperTextOverQuota = remainingQuota && (\n    <FieldSizeHelperTextOverQuota\n      remainingQuota={remainingQuota}\n      onClick={onLearnHowToAddStreamingUnits}\n    />\n  );\n\n  const handleChange = (index: number) => {\n    onChange(sizes[index]);\n  };\n\n  const validation =\n    remainingQuota &&\n    value &&\n    (validity !== \"valid\" || remainingQuota < value) &&\n    validity !== \"developer\" &&\n    isError\n      ? \"error\"\n      : \"default\";\n\n  return (\n    <FormGroupWithPopover\n      labelHead={t(\"common:size\")}\n      fieldId=\"streaming-size\"\n      fieldLabel={t(\"common:size\")}\n      labelBody={t(\"size_help_content\")}\n      buttonAriaLabel={t(\"size_field_aria\")}\n      isRequired={isRequired}\n      validated={validation}\n      helperText={validity !== \"developer\" ? helperText : helperTextTrial}\n      helperTextInvalid={\n        validity === \"out-of-quota\" ? helperTextOverQuota : helperText\n      }\n    >\n      <div className=\"pf-c-input-group pf-u-w-50\">\n        <Slider\n          id=\"streaming-size\"\n          data-testid={\"size-slider\"}\n          max={steps.length - 1}\n          value={valueIndex}\n          showTicks={true}\n          customSteps={steps}\n          className=\"pf-u-w-100\"\n          isDisabled={isDisabled || validity === \"developer\"}\n          onChange={handleChange}\n          aria-describedby={\n            isUnavailable ? \"instance-size-unavailable\" : \"streaming-size\"\n          }\n        />\n        <span className=\"pf-c-input-group__text pf-m-plain pf-u-text-nowrap\">\n          {t(\"streaming_unit\")}\n        </span>\n      </div>\n    </FormGroupWithPopover>\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type {\n  CreateDedicatedKafkaInstanceError,\n  CreateKafkaInstanceError,\n} from \"../types\";\n\nexport type FormAlertsProps = {\n  error:\n    | CreateKafkaInstanceError\n    | CreateDedicatedKafkaInstanceError\n    | \"form-invalid\"\n    | undefined;\n  onClickContactUS: () => void;\n};\n\nexport const FormAlerts: VoidFunctionComponent<FormAlertsProps> = ({\n  error,\n  onClickContactUS,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup aria-live=\"assertive\">\n      {(() => {\n        switch (error) {\n          case \"form-invalid\":\n          case \"name-taken\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.form_invalid\")}\n                isInline\n              />\n            );\n\n          case \"insufficient-quota\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.out_of_quota_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"form_errors.out_of_quota_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-contact-us\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickContactUS}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"developer-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.trial_unavailable_title\")}\n                isInline\n              >\n                {t(\"form_errors.trial_unavailable_message\")}\n              </Alert>\n            );\n          case \"region-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.region_unavailable_title\")}\n                isInline\n              >\n                {t(\"form_errors.region_unavailable_message\")}\n              </Alert>\n            );\n          case \"unknown\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.unknown_error_title\")}\n                isInline\n              >\n                {t(\"form_errors.unknown_error_message\")}\n              </Alert>\n            );\n        }\n        return null;\n      })()}\n    </AlertGroup>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\n\nimport { ClockIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { MarketplaceSubscription } from \"ui-models/src/models/kafka\";\nimport type { BillingHelpProps } from \"./BillingHelp\";\nimport { BillingHelp } from \"./BillingHelp\";\n\nexport type InstanceInfoProps = {\n  isTrial: boolean;\n  onClickQuickStart: () => void;\n\n  trialDurationInHours: number | undefined;\n  ingress: number;\n  egress: number;\n  /**\n   * Max storage in GiB\n   */\n  storage: number;\n  maxPartitions: number;\n  connections: number;\n  /**\n   * Max connections/second\n   */\n  connectionRate: number;\n  /**\n   * Message size in MiB\n   */\n  messageSize: number;\n  streamingUnits: string | undefined;\n\n  billing:\n    | ({\n        value: \"prepaid\" | \"dedicated\" | MarketplaceSubscription;\n      } & BillingHelpProps)\n    | undefined;\n};\n\nexport const InstanceInfo: VoidFunctionComponent<InstanceInfoProps> = ({\n  isTrial,\n  trialDurationInHours,\n  ingress,\n  egress,\n  storage,\n  maxPartitions,\n  connections,\n  connectionRate,\n  messageSize,\n  onClickQuickStart,\n  streamingUnits,\n  billing,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <Stack hasGutter data-testid={\"instance-info\"}>\n      <StackItem>\n        <Card isFlat>\n          <CardTitle component=\"h2\">{t(\"instance_information\")}</CardTitle>\n          <CardBody>\n            <DescriptionList isCompact>\n              <DescriptionListGroup>\n                <Grid sm={6} lg={12} hasGutter>\n                  {!isTrial && (\n                    <GridItem data-testid={\"instance-size\"}>\n                      <DescriptionListTerm>\n                        {t(\"common:size\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"stream_unit_value\", { size: streamingUnits })}\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  {isTrial && (\n                    <GridItem>\n                      <DescriptionListTerm>\n                        {t(\"kafka:duration\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        <ClockIcon color=\"var(--pf-global--info-color--100)\" />{\" \"}\n                        {t(\"duration_value\", {\n                          value: trialDurationInHours,\n                        })}\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:ingress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"ingress_value\", {\n                        value: ingress,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:egress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"egress_value\", {\n                        value: egress,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:storage\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"storage_value\", {\n                        value: storage,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:partitions\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"partitions_value\", {\n                        value: maxPartitions,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:client_connections\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"client_connections_value\", {\n                        value: connections,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:connection_rate\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"connection_rate_value\", {\n                        value: connectionRate,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:message_size\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"message_size_value\", {\n                        value: messageSize,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  {billing && (\n                    <GridItem>\n                      <DescriptionListTerm>\n                        {t(\"billing.field_label\")}&nbsp;\n                        <BillingHelp\n                          type={billing.type}\n                          subscriptionOptionsHref={\n                            billing.subscriptionOptionsHref\n                          }\n                        />\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {(() => {\n                          if (billing.value === \"prepaid\") {\n                            return t(\"billing.prepaid_option\");\n                          } else if (billing.value === \"dedicated\") {\n                            return t(\"billing.dedicated_option\");\n                          }\n                          switch (billing.value.marketplace) {\n                            case \"aws\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_aws\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                            case \"gcp\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_gcp\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                            case \"azure\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_azure\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                            case \"rhm\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_rh\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                          }\n                        })()}\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                </Grid>\n              </DescriptionListGroup>\n            </DescriptionList>\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem>\n        <Card isFlat isCompact>\n          <CardTitle component=\"h2\">{t(\"quick_start_guide_title\")}</CardTitle>\n          <CardBody>\n            <Button\n              isSmall\n              isInline\n              variant={ButtonVariant.link}\n              onClick={onClickQuickStart}\n            >\n              {t(\"quick_start_guide_message_exp\")}\n            </Button>\n          </CardBody>\n        </Card>\n      </StackItem>\n    </Stack>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Grid,\n  GridItem,\n  Skeleton,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\nimport { ClockIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type InstanceInfoSkeletonProps = {\n  isTrial: boolean;\n  onClickQuickStart: () => void;\n};\n\nexport const InstanceInfoSkeleton: VoidFunctionComponent<\n  InstanceInfoSkeletonProps\n> = ({ isTrial, onClickQuickStart }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <Stack hasGutter data-testid={\"instance-info\"}>\n      <StackItem>\n        <Card isFlat>\n          <CardTitle component=\"h2\">{t(\"instance_information\")}</CardTitle>\n          <CardBody>\n            <DescriptionList isCompact>\n              <DescriptionListGroup>\n                <Grid sm={6} lg={12} hasGutter>\n                  {!isTrial && (\n                    <GridItem data-testid={\"instance-size\"}>\n                      <DescriptionListTerm>\n                        {t(\"common:size\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        <Skeleton\n                          width=\"35%\"\n                          screenreaderText=\"Loading contents\"\n                        />\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  {isTrial && (\n                    <GridItem>\n                      <DescriptionListTerm>\n                        {t(\"kafka:duration\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        <ClockIcon color=\"var(--pf-global--info-color--100)\" />{\" \"}\n                        <Skeleton\n                          width=\"35%\"\n                          screenreaderText=\"Loading contents\"\n                        />\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:ingress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"75%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:egress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"66%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:storage\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"66%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:partitions\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"50%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:client_connections\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"33%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:connection_rate\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"25%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:message_size\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"55%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                </Grid>\n              </DescriptionListGroup>\n            </DescriptionList>\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem>\n        <Card isFlat isCompact>\n          <CardTitle component=\"h2\">{t(\"quick_start_guide_title\")}</CardTitle>\n          <CardBody>\n            <Button\n              isSmall\n              isInline\n              variant={ButtonVariant.link}\n              onClick={onClickQuickStart}\n            >\n              {t(\"quick_start_guide_message_exp\")}\n            </Button>\n          </CardBody>\n        </Card>\n      </StackItem>\n    </Stack>\n  );\n};\n","import { Alert, AlertVariant, Spinner } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ModalAlertsLoading: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <Alert\n      role={\"alert\"}\n      className=\"pf-u-mb-md\"\n      variant={AlertVariant.info}\n      title={t(\"checking_instance_title\")}\n      isInline\n      customIcon={\n        <Spinner size=\"md\" aria-valuetext={t(\"checking_instance_message\")} />\n      }\n    />\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DedicatedPlanAvailability } from \"../types\";\n\nexport type ModalAlertsDedicatedPlanProps = {\n  instanceAvailability: DedicatedPlanAvailability;\n  onClickContactUs: () => void;\n};\n\nexport const ModalAlertsDedicatedPlan: VoidFunctionComponent<\n  ModalAlertsDedicatedPlanProps\n> = ({ instanceAvailability, onClickContactUs }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup>\n      {(() => {\n        switch (instanceAvailability) {\n          case \"out-of-quota\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.out_of_quota_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"modal_alerts.out_of_quota_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-contact-us\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickContactUs}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"clusters-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.cluster_unavailable_title\")}\n                isInline\n              >\n                {t(\"modal_alerts.cluster_unavailable_message\")}\n              </Alert>\n            );\n          case \"available\":\n            return null;\n        }\n      })()}\n    </AlertGroup>\n  );\n};\n","import { Alert, AlertVariant } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ModalAlertsSystemUnavailable: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <Alert\n      role={\"alert\"}\n      className=\"pf-u-mb-md\"\n      variant={AlertVariant.warning}\n      title={t(\"modal_alerts.system_unavailable_title\")}\n      isInline\n    >\n      {t(\"modal_alerts.system_unavailable_message\")}\n    </Alert>\n  );\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { FieldSizeProps } from \"./components\";\nimport {\n  FieldAZ,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldInstanceName,\n  FieldSize,\n  InstanceInfoSkeleton,\n} from \"./components\";\n\nexport type LoadingFormProps = {\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n};\n\nexport const LoadingForm: VoidFunctionComponent<LoadingFormProps> = ({\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n}) => {\n  return (\n    <>\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <Form onSubmit={() => false}>\n            <DisabledFieldInstanceName />\n            <DisabledFieldCloudProvider />\n            <DisabledFieldCloudRegion />\n            <DisabledFieldAZ />\n            <DisabledFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          <InstanceInfoSkeleton\n            isTrial={false}\n            onClickQuickStart={onClickQuickStart}\n          />\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const DisabledFieldInstanceName: VoidFunctionComponent = () => {\n  return (\n    <FieldInstanceName\n      value={\"\"}\n      validity={\"valid\"}\n      isDisabled={true}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldCloudProvider: VoidFunctionComponent = () => {\n  return (\n    <FieldCloudProvider\n      isValid={true}\n      providers={[]}\n      value={undefined}\n      isDisabled={true}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldCloudRegion: VoidFunctionComponent = () => {\n  return (\n    <FieldCloudRegion\n      validity={\"valid\"}\n      regions={undefined}\n      value={undefined}\n      isDisabled={true}\n      isSizeUnavailable={false}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldAZ: VoidFunctionComponent = () => {\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={true}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  return (\n    <FieldSize\n      value={1}\n      sizes={undefined}\n      //TODO remainingQuota={capabilities.remainingQuota || 0}\n      remainingQuota={0}\n      isDisabled={true}\n      isLoading={true}\n      isError={false}\n      isLoadingError={false}\n      validity={\"disabled\"}\n      onChange={() => false}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n","import { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport { MarketplaceSubscription, Size } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateDedicatedKafkaFormData,\n  CreateDedicatedKafkaInstanceError,\n  DedicatedPlanInitializationData,\n  StandardSizes,\n} from \"../types\";\n\nexport type DedicatedPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: DedicatedPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    cluster?: DedicatedCluster;\n    size?: Size;\n    billing?: \"prepaid\";\n  };\n\n  sizes: StandardSizes | undefined;\n\n  creationError: CreateDedicatedKafkaInstanceError | undefined;\n};\n\nexport const DedicatedPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5SwC4EMB2E0CcIAUAbTAWTQGMALASwzADoA3MHagMwE8BBRta4gEb9qKDgGJEoAA4B7WCOoyMkkAA9EAZgAcARnoBOfQAYdOrQHYArABYNAJnMAaEB0Q6j++reuXL5k3bWWpY65gC+Yc6omNh4RKQUNHT05Eps1FAArqwYUPTRKJmwYuQ4YGgoYCqy8iiKykhqmjp29OYW5hpGQYG+zq4Ilvoa9KZGlh4a5joAbPqBEVHoWLgExBhkVLQMqRjpWTl5bDI4ALZMaITUEGLpYIQQAJIYvFcQ1XIKSirqCKGG9Ds+ksU1m5n0M2s1n0-UQdgmllGdjsOj8QJm7ihixA0RWcXWmySOzSGWytCOJ3Or2uYlgmQEpxEH1q9R+bmMnnMnRR9n8di0RjssIQ-MFo2sgQ81lCGjm2NxsTWCS2yV2+zJuXoxzO+TQjHJJTKFTAAGVMuRyHB4I0al8GqBfoEZlp6FpISYdBp7PprFZhaK9JDAuDproQfLlor4htEtsUiSDuStZTdfrcobypUAKI4HAnZl2tkinn0WVTFFQrS+mb+jEzehzMz84btazjCMxVbRwlxtWkw7Js63aj3J4vS7XAt1b6NR0+etaWXzPmQmsuOGmRGWfmWRchbctGYdvFKmMq4l7ftJu4PWD0DBoU4ManYSoSG2faf2poIIL15GmDo+iLkBdhGOYa4DLMUKjKCljOkYbrDFox5RgSsaqgmGpHCOt73o+YAZsaU6srObj2F45gSn4UIaDY7QaMKMouohVgzNuHhgRoOioV26HnvGl6JpqN4QHeD5PmIElgAAwpQmAwCRM4OuRrS+tRVG2PRi5MexrSojM9iIW2VgSrx+LKkSgnqgOol3lIeb6hALAXG8xrvtIn6kSpgxAm00IosiEEzDMTjriKHj1hMEIoqE1iGeYdjmaePaYUJ2FarhYn0A5MhOSwRGVEp36-J6alUfCml0b6Onhci8UGJxnoSuBGj6Ml3YYReNnXll9mOdcBW5flOByQpVQfiyyk-mVlEabR2mMXVUr0EYgo+qGQHtJYHX8VZfbCTho53mUUD1K51zucVRYHl4hg6EEPisdYTHwkYgLDNKRjsSF0I7ZEOKRnxlm9lhtl9fQp31IVE2eVNJWqXNlULTVS1QXR5iAqidgzCYApui0u0g2lPUiRDUNKGIw2DaN8m5LDIC2l+RazepyNaajTFdJ4OM8hBnRejxAMKsDZ77WDvXHZDYBnZTFMYGN9PXWRfwUWzNEcwxTEGaWvgWA9Gg+P41hE2LoPpeDUvyAAXs+E6voRys+b6gbcW7czQu4tUDA44KrZCsogfyXqm6l3VXmTVvULb9CEDIaAQAaEBKAwtCMDIADWDAixZZskxHR14TbDBxwn5IIGnMjkBU9QANpGAAuk7P6gvQNi6HY2gPVCwr2HRbS6PoVG7lYQyh111kF5lUcx6XifpiweY4DlxAoNq5w5ylE8HRldn5NHJfx-PUAVy8Vc10o9dN5NhYq9uLqBMiwEWBKneWL3vKrSEiHDOBILDOPASO9LZFwPjDZujpQq6wAuxYwoEpj+n-qMT0254KG3ig9QB4sLaS1AbbKmA1nK03GhAtwi4sYeisPMQw9hay4wML6RKhhvrgiFksTsucw6T0OtPPBhF5aK0UjfZmKtcYuh9GBQwGIUS1kNgYT6Ewfqd26Fg82pNC7ZWLrSA+giGZM28j+KiLopjbkhPrcCuhaweGgT4Ux-hZj-XYSeTqQCJaRz4WIIQhAri5F0aQ388E26NnYuCZcEEXp1VxpjAmVYqKsOBEeYWQNOHbzcRou8XifF5BfFdYRBjfjbhGFoAUZjZjLj8L3YpmM1pWHCZVGYONVH5x4XvTJSYlCEA4GaAQsBSjUCkF+YosB7hgHICgbpvTWADIMfo6apU1rWDaO6EKa0goNMqfoPQ-gbC4x9MBQUGgmnhxaRDNpmoHJgCkHwCAXAsATL6dMpQQyRljPuVMkRcNb4+UPIiYpQI9y7ngsBYU3hFlrU9GYjwIRwhJI4VvVxOD3HZTOXkC5Vzri3IgG8-pgzaQvJQPgMo6L3h5LmW4IwUxXS7i9L4KwswtAgr7m3FEQxEq6EhEc7hu9Tn8CyQQvKNM-GkoRqres3FURxPsMiIEvdAUD0XIhHG8VEKOMBnClx2D1G8LEmIZOyQCjZ2SfCzVU87L+NmOMNo7hxjlgaYbd+kT+6aWCG-XcSrOXAKTinfI6BKg+vVXtNRBd-H8hxq6aUxtfQmCkf6WU9YWhgUqiETEEQAYYBkM5a0yAjUarjMwVgnAeB8EEMIUQ-iQjhtCm1WUEofTjGFFYAw3oQj2p9NRTleUWAAEVMgyHQP4gUIxOLQh8FoX2DLwoJtLI9cFWg63TESU4tCxNU4YFxJaAAqg+Xg-A0ACEIHoryZKEBcnep0NtwQuTSIdT7ClrpQoonmC0XQa1F1qucYG5I8tYBbr1MWvdB7-FckWdCYpD1+RujHTCOqVZSwB3GMiRcwxZgerSf6wod5MhrvpIyFAlQSWfI+TNRCpY2pVhCI+jmwohg8zilRA2Y7fSocRXkAoRR8g4ZEPh-x84DBmGlPjLko8IkDAXatLoi54Sd3hPBZjWq2NZsZkekVsGvTAR8C0ICVHwoTBdKYUKLbkSsQhHJ01KY0723NeCRZnpNkmFCqEMdsaUSrWYd0LkgcTOwo-SurltkUwvis8BUY4EMQ-3cA9G9cJcYjFCmtYIQRhhzEOd55dedjm7xTLAPU5IQ0oIbBYDw4x5wojCj7Kw+lZScV8PCT0pmWlZb1JAENCUDDhOs8CYI-pwSIgabFHGHtMGpdFlwz1IlKRWf8LBOzYJHNCmWl0Nura51uu+vV7lUtpL0DAKcAZAxCP5MQEw0YhS2xoJqhOqCiUh3OmleMCEKWl0jdSSx7V4kCL0As28c1asKoa2qlrSd4J6zdG+h0MEXoTbDZSQirVe8tuBeFSzKiDYfT0UMqYkETFNkg4Mu0aY4xFxQ6ezDk1JzNsfZyUVJHKtDYjDavMKTc6vSdyYtd-2Y6jNDEMutkB2VpLmpI+rKqi0mK+E8AbX0QJWXGCStD41Qbyd4WpkQi6Dt-HaHrMubiHmTJukghuaEXhdzPo8BCFbvPcHZRVy5L7k4affJsICbQSrDBAiHlFkUXRFluk7nReYY7nQwpJwr5pG3leEJcojg7x6Kv+yCBYEEtWuT+gep4UdpupEW-l7msPfP+oCqIYLl0wuUaA9vdYta8xDJei6EYy3SKToy3OlTw98MixTBdKFAWLQbBlTK+RO9gR+NfW4vFFCOfP0Zfz9LWWGBPvjm+w7maExkG8lCCCQUtimLSkRPSl3zokNDZD7n6fVum9z7V0BxbDnBQNOdEBSEXMh8CahO4MfzoG-pNnzM5TLMhd-Yi6cyTrgR6CygoiJ7BAhQhRf5vb7wxyt4a7tANidD6bDwPrzY+wOYNiBCc4hTNiPbvppajZoZ7zFyfYQCAbL6lQUQgiGygFuztDwjdYQjiZQiigZ5vqbyn5+bn7wEMCJzZb7rNbUGIAdBeC6DcRVheiSGYFwjAh6DAgmCKJWDaA+CwFkEHz0AADufAdQuQAAYicD2n2mgD9q0HQVMLyNMDjAguFDSnoOMF7L-KoQApPr5mNt-uQZ2jgCYf2qIarBYZDgwZ6EwZ7l0HeozoqkEBYhPiflPrwY3vwVfgEZspyPZohuxN6HIQgBJmAdIdtA5tCMHkQc9rDqahDOQYvPmAEbNJYdyFyIeHYQMM2qtG2GVDaozhoZUVoXPLlgERBLFtoPfAKFCEMCJs0MMG0IlNuCGIuJ-u4elokV4QfMXktl6A0TYQlP6D4DZkBH3uBMPKqtwQkZ4XASimrsRLUdoI1J0IZBSn4HAuEZIf5C1O4EMJ3GwqUaToruHsirykmOmiaPivUAAEpgAACOmQ1AZQBGSm7eKs+WEw6+OuVe4RChro1mI6iE0a3RUsFxHSXS9IkyOK9Qd4ducJsyKmKOFiEq0wPQNglSwQowwQ0EYE-GcR3xoeZ+SRBJGAnS2Kjya6KRMeIqkWmMf4-IwOdqD0vcGJ0IkObq7Q4wXBOapxpBPK3i7S-JRJPSDygyA6q+tJfg9JY6jJ9hFUWMkIoQDEDSnJJxHhGp+JAJ5yRK1ymKgpgy22u2ZaARFgIw8IxgGmFKDgoQjKoQq0AQ9qjmwIeJeEFxaK7pdyxJ+pZJHGep7yv+CJ3yfIXgtmfeW0Y6l2iAb+Yq7QAo2y7g8IcZ-xWprplySZWKKZmZTyOUbp9uopRYzCroHgi4i4dKesIKtg6egoxSJSbU0wNZGSLpqK7ZNyyZGZpJTyA6RugZ3Q386+A+v4qIQ6r8hsVZvIU59AKK5qpgbcIZ0wqJUKsqa0bQPo7EFiEoKGixJBr2ZqfpIGgBZe3siAhgxizoY+-Ib+xSX+-i9Cam5GmmPo1UjKe+iGypYEVYJgnK2WzAlJf+Ks-yUUmyJp9Bl5saQwDYJgTCa0Y+boRyIa0S8U56NaQIZ2ORrQwwaR3oNewEz5EQQAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as DedicatedPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./DedicatedPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as DedicatedPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"clusterChange\"; cluster: DedicatedCluster }\n          | { type: \"sizeChange\"; size: Size }\n          | {\n              type: \"selectSubscription\";\n              subscription: MarketplaceSubscription;\n            }\n          | { type: \"selectPrepaid\" }\n          | { type: \"billingChange\" }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateDedicatedKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: StandardSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"dedicatedPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isOverQuota\",\n              target: \"overQuota\",\n            },\n            {\n              cond: \"isClusterUnavailable\",\n              target: \"clusterUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        overQuota: {\n          tags: \"blocked\",\n        },\n        clusterUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitting: {\n                  entry: \"triggerSubmit\",\n                  always: [\"submitted\"],\n                },\n                submitted: {\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitting\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  tags: \"creatable\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                cluster: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"clusterIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"clusterInvalid\",\n                    },\n                    valid: {\n                      tags: \"clusterValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    clusterChange: {\n                      actions: \"setCluster\",\n                      cond: \"didClusterChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noCluster\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          cond: \"sizeIsDisabled\",\n                          target: \"disabled\",\n                        },\n                        {\n                          cond: \"billingRequiredButNotSelected\",\n                          target: \"waitingForQuota\",\n                        },\n                        {\n                          cond: \"sizeIsOverQuota\",\n                          target: \"overQuota\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    disabled: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeDisabled\",\n                    },\n                    waitingForQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeWaitingForQuota\",\n                    },\n                    overQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeOverQuota\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    clusterChange: {\n                      target: \".validate\",\n                    },\n                    sizeChange: {\n                      actions: \"setSize\",\n                      cond: \"didSizeChange\",\n                      target: \".validate\",\n                    },\n                    billingChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n                billing: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          target: \"prepaidOnly\",\n                        },\n                      ],\n                    },\n                    prepaidOnly: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\"],\n                      entry: \"setBillingToPrepaid\",\n                      type: \"final\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#dedicatedPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              cluster: context.capabilities.defaultCluster,\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setCluster: assign((context, { cluster }) => {\n          return {\n            form: {\n              cluster,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSize: assign((context, { size }) => ({\n          form: {\n            ...context.form,\n            size,\n          },\n        })),\n        setSizes: assign((context, event) => {\n          const sizes = event.data;\n          const smallestSize = sizes.sort((a, b) => a.quota - b.quota)[0];\n          return {\n            sizes,\n            form: {\n              ...context.form,\n              size: smallestSize,\n            },\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => {\n          return {\n            creationError: error,\n          };\n        }),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form>;\n          const data: CreateDedicatedKafkaFormData = {\n            plan: \"dedicated\",\n            name: form.name,\n            cluster: form.cluster,\n            sizeId: form.size.id,\n            billing: \"dedicated\",\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n        setBillingToPrepaid: assign((context) => {\n          const form = { ...context.form };\n          form.billing = \"prepaid\";\n          return { form };\n        }),\n      },\n      guards: {\n        isOverQuota: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"out-of-quota\",\n        isClusterUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"clusters-unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        clusterIsValid: ({ form, capabilities }) => {\n          const selectedCluster = capabilities?.availableClusters.find(\n            (p) => p.id === form.cluster?.id\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableClusters || []).length > 0 &&\n            // must have selected a provider\n            selectedCluster !== undefined\n          );\n        },\n        noCluster: ({ form }) => form.cluster === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) => sizes !== undefined && sizes.length === 0,\n        sizeIsDisabled: ({ form, capabilities }) => {\n          if (capabilities === undefined) return true;\n          return form.size?.isDisabled === true;\n        },\n        billingRequiredButNotSelected: ({ form }, _, meta) => {\n          if (meta.state.hasTag(\"noBilling\")) {\n            return false;\n          }\n          return form.billing === undefined;\n        },\n        sizeIsOverQuota: ({ form, capabilities }) => {\n          if (capabilities === undefined || !form.size) return true;\n          const availableQuota = capabilities.remainingDedicatedQuota;\n          if (!availableQuota) return true;\n          return form.size.quota > availableQuota;\n        },\n        didClusterChange: (context, event) =>\n          context.form.cluster !== event.cluster,\n        didSizeChange: (context, event) =>\n          context.form.size?.id !== event.size.id,\n      },\n    }\n  );\n","import { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport { assign, createMachine, EventFrom, forwardTo } from \"xstate\";\nimport type {\n  CreateDedicatedKafkaFormData,\n  CreateDedicatedKafkaInstanceError,\n  DedicatedPlanInitializationData,\n  DedicatedSizes,\n} from \"../types\";\nimport { DedicatedClustersInfo } from \"../types\";\nimport {\n  DedicatedPlanMachine,\n  DedicatedPlanMachineContext,\n} from \"./DedicatedPlanMachine\";\n\ntype Quota = Pick<\n  DedicatedPlanInitializationData,\n  \"plan\" | \"remainingDedicatedQuota\" | \"instanceAvailability\"\n>;\n\nexport type CreateDedicatedKafkaInstanceMachineContext = {\n  quota: Quota | undefined;\n  clusters: DedicatedClustersInfo | undefined;\n  defaultCluster: DedicatedCluster | undefined;\n  capabilities: DedicatedPlanInitializationData | undefined;\n};\n\nconst CreateDedicatedKafkaInstanceMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMBOYCGAXMBpDAZgNYYCSAdrFhucmAHQA2A9hhAJblT0COArs2r1kACzDIinKAAIqNCBlQRp-QRgDEYVKmap6AB0bYCugLbD02PIRIU5tBizZTeAoaPGSus6uQVKVNwwETgA3ZmRsdmZyAG0ABgBdRFB9Zlh2LGjyFJAAD0QAFniAJnp4gGYAdkKATgAOeqr4qvrCgFYAGhAAT0QANir++n769tqq2sKARhKKjsKAX0XutEwcfGIySl86JlYOLlc1YTEJKR95RWVVanV7fxug6QxQjHYjACNGMFy0jKyMVyBQQxTKlRqDSaLTaXV6iHG8XoVXahX6UyqJVqJX6-WWq0sGxs23seych24twwp08Fwe10CanUzD4WGkzAIlz8DKpf3SmWywKKpXK1TqjWarQ63T6CHa8UK9Hqcw6JUK6palXxIDWVk2th2NDJBxcVJp5289ICVPU5GYXMejOoLzeHww31+SBA-wFQK9ILBoshEph0vhoPaw2hFRKasKbQa0yWKx1hOsWzsu0cJqOZqtEHUfIBgv9iCTU2RkZj03RYsjMoGyvo0yG40KJSq0wq02m9W1uqJGcNDn2zlzQXoEDAoTALH0WkLXp9gJypYQ5cVKP61drNXr4faFSRJVmdUmasjvf7af1JKzo4px3cZy8MinM7nWhd7y+H0yPU0bRdAMIwsBMVBzAHdMDVJbMx0pCcPAtN9p1nZh51Qb83U+P8sB6EJyHCSIVwSZIl35FchQQWpanaeh4y7JN5gqbFZgbOU1WRE96m3Bp+lRKoKmvdZoLvI04MfM0kNfaR3zQjCsN-Rh-3UOTP0wvhYEgItfVXUAQRouiGO7QpmNYkp2NMqolXqWZcSPCpRn6NFhL1YlM3Eh9TUQl8LjU9Cv1eH93VwgD-IUoLsJ+HTKLXQz6NskyzJPCzwwqdppnoWj4niaZ2kPepaiTaZXMHGD73JFwCDALBRAufQdFCdgp1QWB1Aa5gmpa2AXj8aR0CgbIesir5ovI4s-X0staNqegjzGcZ+hKHjeyqdj2jGcplu4moFSqKpStEjyR0qo5qtqkR6sa5qtDarQdD0QxjDMCwRNvY7jXg+hzrq7wOq626CKIqIYlImKSym9cMRsiY0RmaYFXiOFZUKfa5rqRy5mmWp4kGdpDve4dPsfH7Lr+67uvainbvZTCBqG6Q+HIEb3TG1IKIh-Jpsjeh2k7XHOw7QqWnY0Z6mbapakGNVqgR-GUygwnYK8rhVJiBg5BwV63KHZXTqgcHJq5hASlROj+lKCp6kqdUVvYq3Mr3ds0UaPLZgJ9yiY13xHSe8h6Gan57leT12YmvTjaxbd6NM+NDIVdLCkskUFmxyZt2cwYPd1+982kP36FgV4pHUKCAGU+GQOhYHgcbdKoxOjKR0p6nmYXlvt1Fyn6Lt1W7E9Jkc7Pys8vOC6LprVaggBRIDUENiOQSjioY7b+PTNRe2a152NbLy03M7y4exJHcKvwLwOwGDmcF6orFWl5i2Nt7toEYqUWpayrt5SW+z4ls4+H0GBn0wuPYuU80wVyrnAWuYd65rkbvRBUtQ6x9zaKLeMO8WhDB7PEKEtRAFe0nKhdS+cjD+wniXGec9b5rnvuLSMSNErxhmJUUWCMsrKmWngsEuJ5YpjtFOWBqY3qez1jmBCJxpJ0h9jyIItDIYI1SrKSM4tW6dmVB0TsaISoKxvGIiqEinzUnzAo42zRxYojmD3FEtk+bTFFkMZskYcS9mfiwwh4ivpmhAWYkEswGg2RwSxJosxSjrU4tjAePcEY8SKp4wx3ifK0m8CAxSIVlJ4T8QMfic1lrFVaMqeYDjwztjojxHhsYOxW1ssmAkoic6eX1sY7JCBWjsQ7LNKWjRKiLRxmieW9SdYjxOkY0mV1Oo3Vaq0msCoY7FCGOlWMsxkYIkxMiHh7RYyMPjEJPRDSRnExcJYCAso4GxUhrGQY5QMpjCSpedaExkRND5jorEFQ9lDLKifI5XBWmb3DC2TKlRGLVCxBeDoCTR49CoGAUwjNmaulGqHb0HMjYgkciiLK+UUFWRxt2VZbT1mt1GK0Fo-EOx4n2cMn53srgBAvhANmqLw53yaIqfi4xsQdnyu2d+aVqjONbmna2OJuxQpHGPchhdwEGzrhc42MZBXYwmD3CE-F+j21jCMZy8Ytxdlom0CVewpU0FacteUIwcXcpRKiOY7FsYrzBdbeMhUWJt2NcAkhAVQHSsvuaxos19rzUxelFsyiBjdhGC2UYLY4k9l0V8o6RC0lgMnnK85nMMVVPKJo2GbiirsOsrMd1uU1SWzqSImlQDiEfh9WQs18qs2IGWrk4N-9Q0ZUxJZJoSolWVBylYwqnrhDMFMIYGqKLlzNoQNUf+SomFoP2p2Ht1lcZ5Roj2IW4rqXfKAa0o87EaI3JyhtQS2Ntyo2WMsIAA */\n  createMachine(\n    {\n      context: {\n        clusters: undefined,\n        defaultCluster: undefined,\n        quota: undefined,\n        capabilities: undefined,\n      },\n      predictableActionArguments: true,\n      tsTypes:\n        {} as import(\"./CreateDedicatedKafkaInstanceMachine.typegen\").Typegen0,\n      schema: {\n        context: {} as CreateDedicatedKafkaInstanceMachineContext,\n        events: {} as\n          | {\n              type: \"dedicated quota available\";\n              quota: Pick<\n                DedicatedPlanInitializationData,\n                \"remainingDedicatedQuota\"\n              >;\n            }\n          | {\n              type: \"out of dedicated quota\";\n            }\n          | {\n              type: \"no dedicated quota available\";\n            }\n          | {\n              type: \"clusters available\";\n              clusters: DedicatedClustersInfo;\n              defaultCluster: DedicatedCluster | undefined;\n            }\n          | { type: \"clusters unavailable\" }\n          | { type: \"save\"; data: CreateDedicatedKafkaFormData }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateDedicatedKafkaInstanceError },\n        services: {} as {\n          checkDedicatedQuota: {\n            data: never;\n          };\n          fetchClusters: {\n            data: never;\n          };\n          dedicatedPlan: {\n            data: DedicatedPlanMachineContext;\n          };\n        },\n      },\n      id: \"createDedicatedKafkaInstance\",\n      initial: \"loading\",\n      states: {\n        loading: {\n          description: \"Fetch the data required to drive the creation flow\",\n          tags: \"loading\",\n          initial: \"quota\",\n          states: {\n            quota: {\n              initial: \"checking dedicated quota\",\n              states: {\n                \"checking dedicated quota\": {\n                  invoke: {\n                    src: \"checkDedicatedQuota\",\n                    onError: [\n                      {\n                        actions: \"setDedicatedUnavailable\",\n                        target:\n                          \"#createDedicatedKafkaInstance.system unavailable\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"dedicated quota available\": {\n                      actions: \"setDedicatedAvailable\",\n                      target: \"dedicated\",\n                    },\n                    \"out of dedicated quota\": {\n                      actions: \"setDedicatedOutOfQuota\",\n                      target: \"dedicated\",\n                    },\n                    \"no dedicated quota available\": {\n                      actions: \"setDedicatedUnavailable\",\n                      target:\n                        \"#createDedicatedKafkaInstance.system unavailable\",\n                    },\n                  },\n                },\n                dedicated: {\n                  type: \"final\",\n                  always: {\n                    target:\n                      \"#createDedicatedKafkaInstance.loading.fetching clusters\",\n                  },\n                },\n              },\n            },\n            \"fetching clusters\": {\n              invoke: {\n                src: \"fetchClusters\",\n                onError: [\n                  {\n                    actions: \"setClustersUnavailable\",\n                    target: \"ready\",\n                  },\n                ],\n              },\n              on: {\n                \"clusters available\": {\n                  actions: \"setClusters\",\n                  target: \"ready\",\n                },\n                \"clusters unavailable\": {\n                  actions: \"setClustersUnavailable\",\n                  target: \"ready\",\n                },\n              },\n            },\n            ready: {\n              type: \"final\",\n              entry: \"setCapabilities\",\n            },\n          },\n          onDone: [\n            {\n              cond: \"dedicated plan\",\n              target: \"dedicated plan\",\n            },\n            {\n              target: \"system unavailable\",\n            },\n          ],\n        },\n        \"system unavailable\": {\n          tags: \"systemUnavailable\",\n          type: \"final\",\n        },\n        \"dedicated plan\": {\n          invoke: {\n            src: \"dedicatedPlan\",\n            id: \"dedicatedPlanService\",\n          },\n          tags: \"dedicatedPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createDedicatedKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToDedicatedPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        complete: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setDedicatedAvailable: assign((_, event) => ({\n          quota: {\n            plan: \"dedicated\" as const,\n            instanceAvailability: \"available\" as const,\n            remainingDedicatedQuota: event.quota.remainingDedicatedQuota,\n          },\n        })),\n        setDedicatedOutOfQuota: assign((_, event) => ({\n          quota: {\n            plan: \"dedicated\" as const,\n            instanceAvailability: \"out-of-quota\" as const,\n            remainingDedicatedQuota: 0,\n          },\n        })),\n        setDedicatedUnavailable: assign((_) => ({\n          quota: {\n            plan: \"dedicated\" as const,\n            instanceAvailability: \"clusters-unavailable\" as const,\n            remainingDedicatedQuota: 0,\n          },\n        })),\n        setClusters: assign((_, event) => {\n          return {\n            clusters: event.clusters,\n            defaultCluster: event.defaultCluster,\n          };\n        }),\n        setClustersUnavailable: assign((context) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const quota = context.quota!;\n          quota.instanceAvailability = \"clusters-unavailable\";\n          return {\n            providers: [],\n            quota,\n          };\n        }),\n        setCapabilities: assign((context) => {\n          const { clusters, defaultCluster, quota } = context;\n          if (!clusters || !quota || quota.plan !== \"dedicated\") {\n            throw new Error(\"unexpected condition, invalid quota\");\n          }\n          const capabilities: DedicatedPlanInitializationData = {\n            plan: \"dedicated\",\n            availableClusters: clusters,\n            defaultCluster,\n            instanceAvailability: quota.instanceAvailability,\n            remainingDedicatedQuota: quota.remainingDedicatedQuota,\n          };\n          return { capabilities };\n        }),\n        notifyCreateErrorToDedicatedPlan: forwardTo(\"dedicatedPlanService\"),\n      },\n      guards: {\n        \"dedicated plan\": (context) => context.quota?.plan === \"dedicated\",\n      },\n    }\n  );\n\ntype EventTypes = Pick<\n  EventFrom<typeof CreateDedicatedKafkaInstanceMachine>,\n  \"type\"\n>[\"type\"];\n\ntype EventOptions<E extends EventTypes> = Omit<\n  EventFrom<typeof CreateDedicatedKafkaInstanceMachine, E>,\n  \"type\"\n>;\n\nexport type CreateDedicatedKafkaInstanceServices = {\n  checkDedicatedQuota: (events: {\n    onOutOfQuota: (p: EventOptions<\"out of dedicated quota\">) => void;\n    onQuotaAvailable: (p: EventOptions<\"dedicated quota available\">) => void;\n    onNoQuotaAvailable: (\n      p: EventOptions<\"no dedicated quota available\">\n    ) => void;\n  }) => void;\n  fetchClusters: (\n    plan: \"dedicated\",\n    events: {\n      onAvailable: (p: EventOptions<\"clusters available\">) => void;\n      onUnavailable: () => void;\n    }\n  ) => void;\n  getDedicatedSizes: (cluster: DedicatedCluster) => Promise<DedicatedSizes>;\n  onCreate: (\n    data: CreateDedicatedKafkaFormData,\n    onSuccess: () => void,\n    onError: (error: CreateDedicatedKafkaInstanceError) => void\n  ) => void;\n};\n\nexport function makeCreateDedicatedKafkaInstanceMachine({\n  checkDedicatedQuota: checkDedicatedQuotaCb,\n  fetchClusters: fetchClustersCb,\n  getDedicatedSizes: getDedicatedSizesCb,\n  onCreate,\n}: CreateDedicatedKafkaInstanceServices) {\n  return CreateDedicatedKafkaInstanceMachine.withConfig({\n    services: {\n      checkDedicatedQuota: () => {\n        return (send) =>\n          checkDedicatedQuotaCb({\n            onNoQuotaAvailable: () => {\n              send({ type: \"no dedicated quota available\" });\n            },\n            onOutOfQuota: () => {\n              send({ type: \"out of dedicated quota\" });\n            },\n            onQuotaAvailable: ({ quota }) => {\n              send({ type: \"dedicated quota available\", quota });\n            },\n          });\n      },\n      fetchClusters: (context) => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const instanceType = context.quota!.plan;\n        return (send) => {\n          fetchClustersCb(instanceType, {\n            onAvailable: ({ clusters, defaultCluster }) =>\n              send({\n                type: \"clusters available\",\n                clusters,\n                defaultCluster,\n              }),\n            onUnavailable: () => send(\"clusters unavailable\"),\n          });\n        };\n      },\n      createInstance: (_context, event) => {\n        const form = event.data;\n\n        return (send) => {\n          function onSuccess() {\n            send(\"createSuccess\");\n          }\n\n          function onError(error: CreateDedicatedKafkaInstanceError) {\n            send({ type: \"createError\", error });\n          }\n\n          onCreate(\n            {\n              plan: form.plan,\n              name: form.name,\n              cluster: form.cluster,\n              sizeId: form.sizeId,\n              billing: form.billing,\n            },\n            onSuccess,\n            onError\n          );\n        };\n      },\n      dedicatedPlan: (context) => {\n        return DedicatedPlanMachine.withContext({\n          capabilities: context.capabilities as DedicatedPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getDedicatedSizesCb(form.cluster);\n            },\n          },\n        });\n      },\n    },\n  });\n}\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { CreateDedicatedKafkaInstanceServices } from \"./CreateDedicatedKafkaInstanceMachine\";\nimport { makeCreateDedicatedKafkaInstanceMachine } from \"./CreateDedicatedKafkaInstanceMachine\";\n\nexport const CreateDedicatedKafkaInstanceContext = createContext<{\n  service: ActorRefFrom<\n    ReturnType<typeof makeCreateDedicatedKafkaInstanceMachine>\n  >;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport const CreateDedicatedKafkaInstanceProvider: FunctionComponent<\n  CreateDedicatedKafkaInstanceServices\n> = ({\n  onCreate,\n  checkDedicatedQuota,\n  fetchClusters,\n  getDedicatedSizes,\n  children,\n}) => {\n  const service = useInterpret(\n    () =>\n      makeCreateDedicatedKafkaInstanceMachine({\n        checkDedicatedQuota,\n        fetchClusters,\n        getDedicatedSizes,\n        onCreate,\n      }),\n    { devTools: true }\n  );\n\n  return (\n    <CreateDedicatedKafkaInstanceContext.Provider value={{ service }}>\n      {children}\n    </CreateDedicatedKafkaInstanceContext.Provider>\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { CreateDedicatedKafkaInstanceContext } from \"./CreateDedicatedKafkaInstanceProvider\";\nimport type { DedicatedPlanMachine } from \"./DedicatedPlanMachine\";\n\nexport type UseCreateDedicatedKafkaInstanceSelectorReturn = {\n  dedicatedPlanMachine: ActorRefFrom<typeof DedicatedPlanMachine> | undefined;\n  isLoading: boolean;\n  isSystemUnavailable: boolean;\n  isAvailable: boolean;\n  isSaving: boolean;\n  isSaved: boolean;\n};\n\nexport function useCreateDedicatedKafkaInstance() {\n  const { service } = useContext(CreateDedicatedKafkaInstanceContext);\n  return useSelector<\n    typeof service,\n    UseCreateDedicatedKafkaInstanceSelectorReturn\n  >(\n    service,\n    useCallback((state) => {\n      const dedicatedPlanMachine = state.children[\"dedicatedPlanService\"] as\n        | ActorRefFrom<typeof DedicatedPlanMachine>\n        | undefined;\n\n      const isLoading = state.hasTag(\"loading\");\n      const isSystemUnavailable = state.hasTag(\"systemUnavailable\");\n      const isAvailable = state.hasTag(\"dedicatedPlan\");\n      const isSaving = state.hasTag(\"saving\");\n      const isSaved = state.done === true;\n\n      return {\n        dedicatedPlanMachine,\n        isLoading,\n        isSystemUnavailable,\n        isAvailable,\n        isSaving,\n        isSaved,\n      };\n    }, [])\n  );\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback } from \"react\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport type { Size } from \"ui-models/src/models/kafka\";\nimport type { CreateDedicatedKafkaInstanceError } from \"../types\";\nimport type { DedicatedPlanMachineContext } from \"./DedicatedPlanMachine\";\nimport { useCreateDedicatedKafkaInstance } from \"./useCreateDedicatedKafkaInstance\";\n\ntype SelectorReturn = {\n  form: DedicatedPlanMachineContext[\"form\"];\n  capabilities: DedicatedPlanMachineContext[\"capabilities\"];\n  selectedCluster: DedicatedCluster | undefined;\n  selectedSize: Size | undefined;\n  sizes: DedicatedPlanMachineContext[\"sizes\"];\n  remainingQuota: number | undefined;\n\n  isFormEnabled: boolean;\n\n  isNameInvalid: boolean;\n  isNameEmpty: boolean;\n  isNameError: boolean;\n  isNameTaken: boolean;\n  isSizeDisabled: boolean;\n  isSizeOverQuota: boolean;\n  isSizeLoadingError: boolean;\n  isSizeAvailable: boolean;\n  isSizeError: boolean;\n  isBillingError: boolean;\n  isBillingPrepaidAvailable: boolean;\n  isBillingPrepaidOverQuota: boolean;\n\n  isClusterError: boolean;\n\n  isLoading: boolean;\n  isLoadingSizes: boolean;\n  isSaving: boolean;\n\n  error: CreateDedicatedKafkaInstanceError | \"form-invalid\" | undefined;\n\n  setName: (name: string) => void;\n  setCluster: (name: DedicatedCluster) => void;\n  onCreate: () => void;\n  setSize: (size: Size) => void;\n  setBillingPrepaid: () => void;\n};\n\nexport function useDedicatedPlanMachine(): SelectorReturn {\n  const {\n    dedicatedPlanMachine: service,\n    isLoading,\n    isSaving,\n  } = useCreateDedicatedKafkaInstance();\n\n  if (!service) {\n    throw new Error(\n      \"useDedicatedPlanMachine should be called only when the parent CreateDedicatedKafkaInstanceMachine is in the right state\"\n    );\n  }\n\n  const setName = useCallback(\n    (name: string) => service.send({ type: \"nameChange\", name }),\n    [service]\n  );\n  const setCluster = useCallback(\n    (cluster: DedicatedCluster) =>\n      service.send({ type: \"clusterChange\", cluster }),\n    [service]\n  );\n  const onCreate = useCallback(() => service.send(\"create\"), [service]);\n  const setSize = useCallback(\n    (size: Size) => service.send({ type: \"sizeChange\", size }),\n    [service]\n  );\n\n  const setBillingPrepaid = useCallback(\n    () =>\n      service.send({\n        type: \"selectPrepaid\",\n      }),\n    [service]\n  );\n\n  return useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => {\n        const { creationError, capabilities, form, sizes } = state.context;\n        const isBlocked = state.hasTag(\"blocked\");\n        const isFormInvalid =\n          state.hasTag(\"formInvalid\") && state.hasTag(\"submitted\");\n        const isNameTaken = creationError === \"name-taken\";\n        const isConfigurable = state.hasTag(\"configurable\");\n        const isLoadingSizes = state.hasTag(\"sizeLoading\");\n\n        const isBillingPrepaidAvailable =\n          capabilities.remainingDedicatedQuota !== undefined;\n\n        const selectedCluster = isBlocked\n          ? undefined\n          : capabilities.availableClusters.find(\n              (p) => p.id === form.cluster?.id\n            );\n\n        const selectedSize = isBlocked\n          ? undefined\n          : sizes?.find((s) => form.size?.id === s.id);\n\n        const error: SelectorReturn[\"error\"] = creationError\n          ? creationError\n          : isFormInvalid\n          ? \"form-invalid\"\n          : undefined;\n\n        const remainingQuota = capabilities.remainingDedicatedQuota;\n\n        const isBillingPrepaidOverQuota: boolean = (() => {\n          if (\n            capabilities.remainingDedicatedQuota !== undefined &&\n            capabilities.remainingDedicatedQuota === 0\n          ) {\n            return true;\n          } else if (\n            selectedSize?.quota &&\n            capabilities.remainingDedicatedQuota\n          ) {\n            return selectedSize.quota > capabilities.remainingDedicatedQuota;\n          }\n          return false;\n        })();\n\n        return {\n          form: form,\n          capabilities,\n          selectedCluster,\n          selectedSize,\n          sizes: sizes,\n          remainingQuota,\n\n          isFormEnabled: !isLoading && !isSaving && !isBlocked,\n          isNameInvalid: state.hasTag(\"nameInvalid\"),\n          isNameEmpty: state.hasTag(\"nameEmpty\"),\n          isNameError:\n            state.hasTag(\"nameInvalid\") ||\n            isNameTaken ||\n            (!state.hasTag(\"nameValid\") && isFormInvalid),\n          isNameTaken,\n          isSizeDisabled: state.hasTag(\"sizeDisabled\"),\n          isSizeOverQuota: state.hasTag(\"sizeOverQuota\"),\n          isSizeLoadingError: state.hasTag(\"sizeError\"),\n          isSizeAvailable: !state.hasTag(\"sizeIdle\"),\n          isSizeError: !state.hasTag(\"sizeValid\") && isFormInvalid,\n          isClusterError: !state.hasTag(\"clusterValid\") && isFormInvalid,\n          isBillingError: !state.hasTag(\"billingValid\") && isFormInvalid,\n          isBillingPrepaidAvailable,\n          isBillingPrepaidOverQuota,\n          isLoading,\n          isLoadingSizes,\n          isConfigurable,\n          isSaving,\n\n          error,\n\n          setName,\n          setCluster,\n          onCreate,\n          setSize,\n          setBillingPrepaid,\n        };\n      },\n      [\n        isLoading,\n        isSaving,\n        onCreate,\n        setBillingPrepaid,\n        setName,\n        setCluster,\n        setSize,\n      ]\n    )\n  );\n}\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { FormEvent, VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { CloudProvider, MarketPlace } from \"ui-models/src/models/kafka\";\nimport type {\n  FieldInstanceNameProps,\n  FieldSizeProps,\n  InstanceInfoProps,\n} from \"./components\";\nimport {\n  FieldAZ,\n  FieldBillingTiles,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldInstanceName,\n  FieldSize,\n  FormAlerts,\n  InstanceInfo,\n  InstanceInfoSkeleton,\n  ModalAlertsStandardPlan,\n} from \"./components\";\nimport { useStandardPlanMachine } from \"./machines\";\n\nexport type StandardInstanceFormProps = {\n  formId: string;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n  subscriptionOptionsHref: string;\n};\n\nexport const StandardInstanceForm: VoidFunctionComponent<\n  StandardInstanceFormProps\n> = ({\n  formId,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n  subscriptionOptionsHref,\n}) => {\n  const {\n    isBillingSelectionRequired,\n    isBillingSingleMarketplace,\n    capabilities,\n    selectedSize,\n    billingType,\n    error,\n    onCreate,\n  } = useStandardPlanMachine();\n\n  const onSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      onCreate();\n    },\n    [onCreate]\n  );\n\n  const instanceInfoBilling: InstanceInfoProps[\"billing\"] = (() => {\n    if (!isBillingSelectionRequired) {\n      if (isBillingSingleMarketplace === false) {\n        return {\n          value: \"prepaid\",\n          subscriptionOptionsHref,\n          type: billingType,\n        };\n      } else {\n        return {\n          value: isBillingSingleMarketplace,\n          subscriptionOptionsHref,\n          type: billingType,\n        };\n      }\n    }\n    return undefined;\n  })();\n\n  return (\n    <>\n      <ModalAlertsStandardPlan\n        instanceAvailability={capabilities.instanceAvailability}\n        onClickContactUs={onClickContactUs}\n      />\n\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <FormAlerts error={error} onClickContactUS={onClickContactUs} />\n          <Form onSubmit={onSubmit} id={formId}>\n            <ConnectedFieldInstanceName />\n            <ConnectedFieldCloudProvider />\n            <ConnectedFieldCloudRegion />\n            <ConnectedFieldAZ />\n            <ConnectedFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n            {isBillingSelectionRequired && (\n              <ConnectedBillingTiles\n                subscriptionOptionsHref={subscriptionOptionsHref}\n              />\n            )}\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          {selectedSize === undefined ? (\n            <InstanceInfoSkeleton\n              isTrial={false}\n              onClickQuickStart={onClickQuickStart}\n            />\n          ) : (\n            <InstanceInfo\n              isTrial={false}\n              trialDurationInHours={undefined}\n              ingress={selectedSize.ingress}\n              egress={selectedSize.egress}\n              storage={selectedSize.storage}\n              maxPartitions={selectedSize.maxPartitions}\n              connections={selectedSize.connections}\n              connectionRate={selectedSize.connectionRate}\n              messageSize={selectedSize.messageSize}\n              onClickQuickStart={onClickQuickStart}\n              streamingUnits={selectedSize.displayName}\n              billing={instanceInfoBilling}\n            />\n          )}\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const ConnectedFieldInstanceName: VoidFunctionComponent = () => {\n  const {\n    form,\n    isNameTaken,\n    isNameInvalid,\n    isNameEmpty,\n    isNameError,\n    isFormEnabled,\n    setName,\n  } = useStandardPlanMachine();\n\n  const validity: FieldInstanceNameProps[\"validity\"] = (() => {\n    if (isNameTaken) {\n      return \"taken\";\n    } else if (isNameInvalid) {\n      return \"invalid\";\n    } else if (isNameEmpty && isNameError) {\n      return \"required\";\n    }\n    return \"valid\";\n  })();\n\n  return (\n    <FieldInstanceName\n      value={form.name || \"\"}\n      validity={validity}\n      isDisabled={!isFormEnabled}\n      onChange={setName}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudProvider: VoidFunctionComponent = () => {\n  const {\n    form,\n    capabilities,\n    isProviderError,\n    isFormEnabled,\n    isBillingSingleMarketplace,\n    setProvider,\n  } = useStandardPlanMachine();\n\n  const providers =\n    isBillingSingleMarketplace &&\n    isBillingSingleMarketplace.marketplace !== \"rhm\"\n      ? capabilities.availableProviders.map((p) => ({\n          ...p,\n          isDisabled: p.id !== isBillingSingleMarketplace.marketplace,\n        }))\n      : capabilities.availableProviders;\n\n  return (\n    <FieldCloudProvider\n      isValid={!isProviderError}\n      providers={providers}\n      value={form.provider}\n      isDisabled={!isFormEnabled}\n      onChange={setProvider}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudRegion: VoidFunctionComponent = () => {\n  const {\n    form,\n    selectedProvider,\n    selectedSize,\n    isRegionError,\n    isFormEnabled,\n    capabilities,\n    error,\n    setRegion,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldCloudRegion\n      validity={\n        isRegionError\n          ? \"required\"\n          : error === \"region-unavailable\" ||\n            capabilities.instanceAvailability === \"regions-unavailable\"\n          ? \"region-unavailable\"\n          : \"valid\"\n      }\n      regions={selectedProvider?.regions}\n      value={form.region}\n      isDisabled={!isFormEnabled}\n      isSizeUnavailable={selectedSize?.isDisabled || false}\n      onChange={setRegion}\n    />\n  );\n};\n\nexport const ConnectedFieldAZ: VoidFunctionComponent = () => {\n  const { isFormEnabled } = useStandardPlanMachine();\n\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={!isFormEnabled}\n      onChange={() => false} // AZ is defined by the backend, we just visualize the value here\n    />\n  );\n};\n\nexport const ConnectedFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  const {\n    form,\n    sizes,\n    isSizeOverQuota,\n    isSizeDisabled,\n    isSizeError,\n    isSizeLoadingError,\n    isBillingSelectionRequired,\n    isFormEnabled,\n    isLoadingSizes,\n    isLoading,\n    setSize,\n    remainingQuota,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldSize\n      value={form.size?.quota}\n      sizes={sizes}\n      remainingQuota={isBillingSelectionRequired ? undefined : remainingQuota}\n      isDisabled={!isFormEnabled || sizes === undefined}\n      isLoading={isLoading || isLoadingSizes}\n      isError={isSizeError}\n      isLoadingError={isSizeLoadingError}\n      validity={\n        isSizeOverQuota ? \"out-of-quota\" : isSizeDisabled ? \"required\" : \"valid\"\n      }\n      onChange={setSize}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n\nfunction isMarketplaceDisabled(\n  marketplace: MarketPlace,\n  selectedProvider: CloudProvider | undefined\n) {\n  if (marketplace === \"rhm\") {\n    return false;\n  } else if (selectedProvider) {\n    return marketplace !== selectedProvider;\n  }\n  return false;\n}\n\nexport const ConnectedBillingTiles: VoidFunctionComponent<{\n  subscriptionOptionsHref: string;\n}> = ({ subscriptionOptionsHref }) => {\n  const {\n    form,\n    capabilities,\n    selectedBilling,\n    billingType,\n    isBillingPrepaidAvailable,\n    isSizeOverQuota,\n    isBillingError,\n    isBillingPrepaidOverQuota,\n    isBillingMarketplaceOverQuota,\n    setBillingPrepaid,\n    setBillingSubscription,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldBillingTiles\n      value={\n        selectedBilling === \"prepaid\"\n          ? \"prepaid\"\n          : selectedBilling?.subscription\n      }\n      hasPrepaid={isBillingPrepaidAvailable}\n      subscriptions={capabilities.marketplaceSubscriptions.flatMap((mq) =>\n        mq.subscriptions.map((subscription) => ({\n          marketplace: mq.marketplace,\n          subscription,\n          isDisabled: isMarketplaceDisabled(mq.marketplace, form.provider),\n        }))\n      )}\n      isPrepaidOverQuota={isBillingPrepaidOverQuota}\n      prepaidQuota={capabilities.remainingPrepaidQuota || 0} // we can default to 0 here just to make TS happy, we will have the info here\n      isMarketplaceOverQuota={isBillingMarketplaceOverQuota}\n      marketplaceQuota={capabilities.remainingMarketplaceQuota || 0} // we can default to 0 here just to make TS happy, we will have the info here\n      onPrepaid={setBillingPrepaid}\n      onSubscription={setBillingSubscription}\n      isValid={!isSizeOverQuota && !isBillingError}\n      billingType={billingType}\n      subscriptionOptionsHref={subscriptionOptionsHref}\n    />\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Skeleton,\n  Spinner,\n} from \"@patternfly/react-core\";\nimport { ErrorCircleOIcon, OkIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\n\nexport type DedicatedClusterTilesProps = {\n  clusters: (DedicatedCluster & { isDisabled?: boolean })[];\n  value: DedicatedCluster | undefined;\n  onChange: (provider: DedicatedCluster) => void;\n  isDisabled: boolean;\n  validated?: SelectProps[\"validated\"];\n};\nexport const DedicatedClusterTiles: VoidFunctionComponent<\n  DedicatedClusterTilesProps\n> = ({ clusters, value, onChange, isDisabled, validated }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      {clusters.length === 0 && (\n        <Skeleton\n          className=\"pf-m-text-4xl\"\n          screenreaderText=\"Loading contents\"\n        />\n      )}\n      <div role=\"listbox\" aria-label={t(\"select_cloud_provider\")}>\n        <Flex\n          justifyContent={{ default: \"justifyContentSpaceBetween\" }}\n          spacer={{ default: \"spacerNone\" }}\n          spaceItems={{ default: \"spaceItemsXs\" }}\n        >\n          {clusters.map((c) => (\n            <FlexItem grow={{ default: \"grow\" }} key={c.id}>\n              <Card\n                className={\"pf-u-w-100\"}\n                hasSelectableInput={true}\n                isSelected={value === c}\n                isSelectableRaised={true}\n                isDisabledRaised={isDisabled || c.status !== \"ready\"}\n                onSelectableInputChange={() => onChange(c)}\n              >\n                <CardTitle>{t(\"openshift_cluster\")}</CardTitle>\n                <CardBody>{c.id}</CardBody>\n                <CardFooter>\n                  {(() => {\n                    switch (c.status) {\n                      case \"ready\":\n                        return <OkIcon />;\n                      case \"provisioning\":\n                        return <Spinner size={\"sm\"} />;\n                      case \"failed\":\n                        return <ErrorCircleOIcon />;\n                    }\n                  })()}\n                  &nbsp;\n                  {c.status}\n                </CardFooter>\n              </Card>\n            </FlexItem>\n          ))}\n        </Flex>\n      </div>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-cloud-provider-option\"\n        name=\"cloud-provider\"\n        isDisabled={isDisabled}\n        validated={validated}\n        onChange={(value) => onChange(value as unknown as DedicatedCluster)}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_dedicated_cluster\")}\n          />,\n          clusters.map((c, index) => {\n            return <FormSelectOption key={index} value={c} label={c.id} />;\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n","import { FormGroup } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DedicatedClusterTilesProps } from \"./DedicatedClusterTiles\";\nimport { DedicatedClusterTiles } from \"./DedicatedClusterTiles\";\n\nexport type FieldDedicatedClusterProps = {\n  isValid: boolean;\n} & Omit<DedicatedClusterTilesProps, \"validated\">;\nexport const FieldDedicatedCluster: VoidFunctionComponent<\n  FieldDedicatedClusterProps\n> = ({ value, clusters, onChange, isDisabled, isValid }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const validated = !isValid ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={t(\"cloud_provider\")}\n      fieldId=\"form-cloud-provider-option\"\n      validated={validated}\n      helperTextInvalid={t(\"common:required\")}\n      isRequired\n    >\n      <DedicatedClusterTiles\n        clusters={clusters}\n        value={value}\n        onChange={onChange}\n        isDisabled={isDisabled}\n        validated={validated}\n      />\n    </FormGroup>\n  );\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { FormEvent, VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { FieldInstanceNameProps, FieldSizeProps } from \"./components\";\nimport {\n  FieldAZ,\n  FieldInstanceName,\n  FieldSize,\n  FormAlerts,\n  InstanceInfo,\n  InstanceInfoSkeleton,\n  ModalAlertsDedicatedPlan,\n} from \"./components\";\nimport { FieldDedicatedCluster } from \"./components/FieldDedicatedCluster\";\nimport { useDedicatedPlanMachine } from \"./machines\";\n\nexport type DedicatedInstanceFormProps = {\n  formId: string;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n  subscriptionOptionsHref: string;\n};\n\nexport const DedicatedInstanceForm: VoidFunctionComponent<\n  DedicatedInstanceFormProps\n> = ({\n  formId,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n  subscriptionOptionsHref,\n}) => {\n  const { capabilities, selectedSize, error, onCreate } =\n    useDedicatedPlanMachine();\n\n  const onSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      onCreate();\n    },\n    [onCreate]\n  );\n\n  return (\n    <>\n      <ModalAlertsDedicatedPlan\n        instanceAvailability={capabilities.instanceAvailability}\n        onClickContactUs={onClickContactUs}\n      />\n\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <FormAlerts error={error} onClickContactUS={onClickContactUs} />\n          <Form onSubmit={onSubmit} id={formId}>\n            <ConnectedFieldInstanceName />\n            <ConnectedFieldCloudProvider />\n            <ConnectedFieldAZ />\n            <ConnectedFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          {selectedSize === undefined ? (\n            <InstanceInfoSkeleton\n              isTrial={false}\n              onClickQuickStart={onClickQuickStart}\n            />\n          ) : (\n            <InstanceInfo\n              isTrial={false}\n              trialDurationInHours={undefined}\n              ingress={selectedSize.ingress}\n              egress={selectedSize.egress}\n              storage={selectedSize.storage}\n              maxPartitions={selectedSize.maxPartitions}\n              connections={selectedSize.connections}\n              connectionRate={selectedSize.connectionRate}\n              messageSize={selectedSize.messageSize}\n              onClickQuickStart={onClickQuickStart}\n              streamingUnits={selectedSize.displayName}\n              billing={{\n                value: \"dedicated\",\n                subscriptionOptionsHref,\n                type: \"rh-only\",\n              }}\n            />\n          )}\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const ConnectedFieldInstanceName: VoidFunctionComponent = () => {\n  const {\n    form,\n    isNameTaken,\n    isNameInvalid,\n    isNameEmpty,\n    isNameError,\n    isFormEnabled,\n    setName,\n  } = useDedicatedPlanMachine();\n\n  const validity: FieldInstanceNameProps[\"validity\"] = (() => {\n    if (isNameTaken) {\n      return \"taken\";\n    } else if (isNameInvalid) {\n      return \"invalid\";\n    } else if (isNameEmpty && isNameError) {\n      return \"required\";\n    }\n    return \"valid\";\n  })();\n\n  return (\n    <FieldInstanceName\n      value={form.name || \"\"}\n      validity={validity}\n      isDisabled={!isFormEnabled}\n      onChange={setName}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudProvider: VoidFunctionComponent = () => {\n  const { form, capabilities, isClusterError, isFormEnabled, setCluster } =\n    useDedicatedPlanMachine();\n\n  const clusters = capabilities.availableClusters;\n\n  return (\n    <FieldDedicatedCluster\n      isValid={!isClusterError}\n      clusters={clusters}\n      value={form.cluster}\n      isDisabled={!isFormEnabled}\n      onChange={setCluster}\n    />\n  );\n};\n\nexport const ConnectedFieldAZ: VoidFunctionComponent = () => {\n  const { isFormEnabled } = useDedicatedPlanMachine();\n\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={!isFormEnabled}\n      onChange={() => false} // AZ is defined by the backend, we just visualize the value here\n    />\n  );\n};\n\nexport const ConnectedFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  const {\n    form,\n    sizes,\n    isSizeOverQuota,\n    isSizeDisabled,\n    isSizeError,\n    isSizeLoadingError,\n    isFormEnabled,\n    isLoadingSizes,\n    isLoading,\n    setSize,\n    remainingQuota,\n  } = useDedicatedPlanMachine();\n\n  return (\n    <FieldSize\n      value={form.size?.quota}\n      sizes={sizes}\n      remainingQuota={remainingQuota}\n      isDisabled={!isFormEnabled || sizes === undefined}\n      isLoading={isLoading || isLoadingSizes}\n      isError={isSizeError}\n      isLoadingError={isSizeLoadingError}\n      validity={\n        isSizeOverQuota ? \"out-of-quota\" : isSizeDisabled ? \"required\" : \"valid\"\n      }\n      onChange={setSize}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n","import {\n  Alert,\n  Button,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\nimport { OutlinedClockIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { ModalAlertsLoading, ModalAlertsSystemUnavailable } from \"./components\";\n\nimport \"./CreateKafkaInstance.css\";\nimport { DedicatedInstanceForm } from \"./DedicatedInstanceForm\";\nimport { LoadingForm } from \"./LoadingForm\";\nimport type { CreateDedicatedKafkaInstanceServices } from \"./machines\";\nimport {\n  CreateDedicatedKafkaInstanceProvider,\n  useCreateDedicatedKafkaInstance,\n} from \"./machines\";\n\nexport type CreateDedicatedKafkaInstanceProps =\n  ConnectedCreateDedicatedKafkaInstanceProps &\n    CreateDedicatedKafkaInstanceServices;\nexport const CreateDedicatedKafkaInstance: FunctionComponent<\n  CreateDedicatedKafkaInstanceProps\n> = ({\n  checkDedicatedQuota,\n  getDedicatedSizes,\n  fetchClusters,\n  onCreate,\n  ...props\n}) =>\n  props.isModalOpen ? (\n    <CreateDedicatedKafkaInstanceProvider\n      checkDedicatedQuota={checkDedicatedQuota}\n      getDedicatedSizes={getDedicatedSizes}\n      fetchClusters={fetchClusters}\n      onCreate={onCreate}\n    >\n      <ConnectedCreateDedicatedKafkaInstance {...props} />\n    </CreateDedicatedKafkaInstanceProvider>\n  ) : null;\n\nexport type ConnectedCreateDedicatedKafkaInstanceProps = {\n  /**\n   *\n   * Flag to show the modal\n   */\n  isModalOpen: boolean;\n\n  /**\n   * Set this to `true` on Storybook when there are multiple modals open at a time.\n   */\n  disableFocusTrap?: boolean;\n  /**\n   * The parent container to append the modal to. Defaults to document.body\n   */\n  appendTo?: () => HTMLElement;\n\n  /**\n   * A callback for when the cancel or close button are clicked.\n   */\n  onCancel: () => void;\n  onClickQuickStart: () => void;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickKafkaOverview: () => void;\n  subscriptionOptionsHref: string;\n};\nexport const ConnectedCreateDedicatedKafkaInstance: VoidFunctionComponent<\n  ConnectedCreateDedicatedKafkaInstanceProps\n> = ({\n  isModalOpen,\n  appendTo,\n  onClickQuickStart,\n  onCancel,\n  disableFocusTrap,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickKafkaOverview,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const { isLoading, isAvailable, isSaving } =\n    useCreateDedicatedKafkaInstance();\n\n  const FORM_ID = \"create_kafka_instance_form\";\n\n  return (\n    <Modal\n      id=\"modalCreateKafka\"\n      variant={ModalVariant.large}\n      title={t(\"create_instance_title\")}\n      disableFocusTrap={disableFocusTrap}\n      isOpen={isModalOpen}\n      ouiaId=\"modal-create-kafka\"\n      onClose={onCancel}\n      appendTo={appendTo}\n      position=\"top\"\n      footer={\n        <Stack hasGutter={true}>\n          <StackItem>\n            <Alert\n              className=\"mas--CreateDedicatedKafkaInstance__creationTimeAlert\"\n              customIcon={<OutlinedClockIcon />}\n              variant=\"info\"\n              isInline\n              isPlain\n              title={t(\"instance_creation_time_alert\")}\n            />\n          </StackItem>\n          <StackItem>\n            <Button\n              key=\"submit\"\n              variant=\"primary\"\n              type=\"submit\"\n              form={FORM_ID}\n              spinnerAriaValueText={t(\"common:submitting_request\")}\n              isDisabled={isLoading || isSaving}\n              isLoading={isSaving}\n              data-testid=\"modalCreateKafka-buttonSubmit\"\n              ouiaId=\"button-create\"\n            >\n              {t(\"create_instance\")}\n            </Button>\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              onClick={onCancel}\n              data-testid=\"modalCreateKafka-buttonCancel\"\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      {(() => {\n        switch (true) {\n          case isLoading:\n            return (\n              <>\n                <ModalAlertsLoading />\n                <LoadingForm\n                  onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                  onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                  onClickQuickStart={onClickQuickStart}\n                />\n              </>\n            );\n          case isAvailable:\n            return (\n              <DedicatedInstanceForm\n                formId={FORM_ID}\n                onClickContactUs={onClickContactUs}\n                onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                onClickQuickStart={onClickQuickStart}\n                subscriptionOptionsHref={subscriptionOptionsHref}\n              />\n            );\n          default:\n            return (\n              <>\n                <ModalAlertsSystemUnavailable />\n                <LoadingForm\n                  onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                  onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                  onClickQuickStart={onClickQuickStart}\n                />\n              </>\n            );\n        }\n      })()}\n    </Modal>\n  );\n};\n","import { DropdownGroup } from \"@patternfly/react-core\";\nimport { ActionsColumn } from \"@patternfly/react-table\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type KafkaInstanceActionsProps = {\n  onDetails: () => void;\n  onConnection: () => void;\n  canOpenConnection: boolean;\n  canChangeOwner: boolean;\n  onChangeOwner: () => void;\n  canDelete: boolean;\n  onDelete: () => void;\n};\n\nexport const KafkaInstanceActions: VoidFunctionComponent<\n  KafkaInstanceActionsProps\n> = ({\n  onDetails,\n  onConnection,\n  canOpenConnection,\n  canChangeOwner,\n  onChangeOwner,\n  canDelete,\n  onDelete,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <ActionsColumn\n      items={[\n        {\n          customChild: (\n            <DropdownGroup\n              label={t(\"table.actions.view-instance-information\")}\n            />\n          ),\n        },\n        {\n          title: t(\"table.actions.details\"),\n          onClick: onDetails,\n        },\n        {\n          title: t(\"table.actions.connection\"),\n          ...(!canOpenConnection\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_see_connections\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onConnection,\n              }),\n        },\n        {\n          isSeparator: true,\n        },\n        {\n          title: t(\"table.actions.change-owner\"),\n          ...(!canChangeOwner\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_change_owner\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onChangeOwner,\n              }),\n        },\n        {\n          title: t(\"table.actions.delete\"),\n          ...(!canDelete\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_delete_kafka\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onDelete,\n              }),\n        },\n      ]}\n    />\n  );\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { KafkaInstanceActionsProps } from \"./KafkaInstanceActions\";\nimport { KafkaInstanceActions } from \"./KafkaInstanceActions\";\n\ntype Sections =\n  | \"dashboard\"\n  | \"topics\"\n  | \"consumer\"\n  | \"permissions\"\n  | \"settings\";\n\nexport type DataPlaneHeaderProps = {\n  instancesHref: string;\n  instanceName: string;\n  activeSection: Sections;\n  sectionsHref: { [key in Sections]: string };\n} & KafkaInstanceActionsProps;\n\nexport const DataPlaneHeader: VoidFunctionComponent<DataPlaneHeaderProps> = ({\n  instancesHref,\n  instanceName,\n  activeSection,\n  sectionsHref,\n  ...actionsProps\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        hasShadowBottom={true}\n      >\n        <Breadcrumb\n          ouiaId={\"breadcrumb\"}\n          className=\"pf-c-page__main-breadcrumb\"\n        >\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instancesHref}>{t(\"common:kafka_instance\")}</Link>\n            )}\n          />\n          <BreadcrumbItem isActive={true}>{instanceName}</BreadcrumbItem>\n        </Breadcrumb>\n        <Level>\n          <LevelItem>\n            <TextContent className={\"pf-u-p-md pf-u-p-lg-on-xl\"}>\n              <Text component=\"h1\">{instanceName}</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <KafkaInstanceActions {...actionsProps} />\n          </LevelItem>\n        </Level>\n        <Nav\n          variant=\"tertiary\"\n          data-testid=\"pageKafka-tabProperties\"\n          className=\"pf-u-px-sm-on-xl\"\n        >\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabDashboard\"\n              id=\"dashboard-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.dashboard\")}\n              ouiaId={\"tab-Dashboard\"}\n              isActive={activeSection === \"dashboard\"}\n            >\n              <Link to={sectionsHref[\"dashboard\"]}>\n                {t(\"dataPlaneNavigation.dashboard\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabTopics\"\n              id=\"topics-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.topics\")}\n              ouiaId={\"tab-Topics\"}\n              isActive={activeSection === \"topics\"}\n            >\n              <Link to={sectionsHref[\"topics\"]}>\n                {t(\"dataPlaneNavigation.topics\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabConsumers\"\n              id=\"consumer-groups-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.consumer_groups\")}\n              ouiaId={\"tab-Consumers\"}\n              isActive={activeSection === \"consumer\"}\n            >\n              <Link to={sectionsHref[\"consumer\"]}>\n                {t(\"dataPlaneNavigation.consumer_groups\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabPermissions\"\n              id=\"permissions-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.permissions\")}\n              ouiaId={\"tab-Permissions\"}\n              isActive={activeSection === \"permissions\"}\n            >\n              <Link to={sectionsHref[\"permissions\"]}>\n                {t(\"dataPlaneNavigation.permissions\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabSettings\"\n              id=\"settings-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.settings\")}\n              ouiaId={\"tab-Settings\"}\n              isActive={activeSection === \"settings\"}\n            >\n              <Link to={sectionsHref[\"settings\"]}>\n                {t(\"dataPlaneNavigation.settings\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n      </PageSection>\n    </>\n  );\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { KafkaInstanceActionsProps } from \"./KafkaInstanceActions\";\nimport { KafkaInstanceActions } from \"./KafkaInstanceActions\";\n\ntype Sections = \"consumer\" | \"messages\" | \"properties\" | \"schemas\";\n\nexport type DataPlaneTopicHeaderProps = {\n  instancesHref: string;\n  instanceName: string;\n  instanceDetailHref: string;\n  instanceTopicsHref: string;\n  topicName: string;\n  activeSection: Sections;\n  tabsHref: { [key in Sections]: string };\n} & KafkaInstanceActionsProps;\n\nexport const DataPlaneTopicHeader: VoidFunctionComponent<\n  DataPlaneTopicHeaderProps\n> = ({\n  instancesHref,\n  instanceName,\n  instanceDetailHref,\n  instanceTopicsHref,\n  topicName,\n  activeSection,\n  tabsHref,\n  ...actionsProps\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <Breadcrumb ouiaId={\"breadcrumb\"}>\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instancesHref}>{t(\"common:kafka_instance\")}</Link>\n            )}\n          />\n          <BreadcrumbItem\n            render={() => <Link to={instanceDetailHref}>{instanceName}</Link>}\n          />\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instanceTopicsHref}>\n                {t(\"dataPlaneNavigation.topics\")}\n              </Link>\n            )}\n          />\n          <BreadcrumbItem isActive={true}>{topicName}</BreadcrumbItem>\n        </Breadcrumb>\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <LevelItem>\n            <TextContent>\n              <Text component=\"h1\">{topicName}</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <KafkaInstanceActions {...actionsProps} />\n          </LevelItem>\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        className=\"pf-c-page__main-tabs\"\n        hasShadowBottom={true}\n      >\n        <Nav variant=\"tertiary\" className=\"pf-u-px-sm-on-xl\">\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.consumer_groups\")}\n              ouiaId={\"tab-Dashboard\"}\n              isActive={activeSection === \"consumer\"}\n            >\n              <Link to={tabsHref[\"consumer\"]}>\n                {t(\"dataPlaneTopicNavigation.consumer_groups\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.messages\")}\n              ouiaId={\"tab-Topics\"}\n              isActive={activeSection === \"messages\"}\n            >\n              <Link to={tabsHref[\"messages\"]}>\n                {t(\"dataPlaneTopicNavigation.messages\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.properties\")}\n              ouiaId={\"tab-Permissions\"}\n              isActive={activeSection === \"properties\"}\n            >\n              <Link to={tabsHref[\"properties\"]}>\n                {t(\"dataPlaneTopicNavigation.properties\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.schemas\")}\n              ouiaId={\"tab-Settings\"}\n              isActive={activeSection === \"schemas\"}\n            >\n              <Link to={tabsHref[\"schemas\"]}>\n                {t(\"dataPlaneTopicNavigation.schemas\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n      </PageSection>\n    </>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoDedicatedClustersProps = {\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoDedicatedClusters: VoidFunctionComponent<\n  EmptyStateNoDedicatedClustersProps\n> = ({ onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_dedicated_clusters_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_dedicated_clusters_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={onQuickstartGuide}\n      >\n        {t(\"empty_state_no_dedicated_clusters_prerequisite_button\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport { TableView } from \"@rhoas/app-services-ui-components\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport { useDedicatedClusterLabels } from \"../../hooks\";\nimport type { EmptyStateNoDedicatedClustersProps } from \"./components\";\nimport { EmptyStateNoDedicatedClusters } from \"./components\";\n\nconst Columns = [\"id\", \"status\"] as const;\n\nexport type DedicatedClustersProps<\n  T extends DedicatedCluster = DedicatedCluster\n> = {\n  clusters: Array<T> | undefined | null;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  \"itemCount\" | \"page\" | \"onPageChange\"\n> &\n  EmptyStateNoDedicatedClustersProps;\n\nexport const DedicatedClusters = <T extends DedicatedCluster>({\n  clusters,\n  itemCount,\n  page,\n  onPageChange,\n  onQuickstartGuide,\n}: DedicatedClustersProps<T>) => {\n  const labels = useDedicatedClusterLabels();\n  const breakpoint = \"lg\";\n\n  return (\n    <PageSection isFilled={true}>\n      <TableView\n        ariaLabel={\"TODO\"}\n        data={clusters}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"id\":\n                    return row.id;\n                  case \"status\":\n                    return row.status;\n                }\n              })()}\n            </Td>\n          );\n        }}\n        toolbarBreakpoint={breakpoint}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        emptyStateNoData={\n          <EmptyStateNoDedicatedClusters\n            onQuickstartGuide={onQuickstartGuide}\n          />\n        }\n        emptyStateNoResults={\n          <div>&bsp; {/* as users can't filter this is not needed */}</div>\n        }\n      />\n    </PageSection>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type { DedicatedClusterField } from \"ui-models/src/models/dedicated-cluster\";\n\nexport function useDedicatedClusterLabels() {\n  const { t } = useTranslation(\"cluster\");\n\n  const fields: {\n    [field in DedicatedClusterField]: string;\n  } = {\n    id: t(\"fields.id\"),\n    status: t(\"fields.status\"),\n    cloudProvider: t(\"fields.cloudProvider\"),\n    az: t(\"fields.az\"),\n    cloudRegion: t(\"fields.cloudRegion\"),\n    requiresPrivateNetwork: t(\"fields.requiresPrivateNetwork\"),\n  };\n  return {\n    fields,\n  };\n}\n","import type { DeleteModalProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  DeleteModal,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type DeleteKafkaInstanceProps = {\n  instanceName: string | undefined;\n} & Omit<\n  DeleteModalProps,\n  \"title\" | \"variant\" | \"confirmationValue\" | \"children\"\n>;\n\nexport const DeleteKafkaInstance: VoidFunctionComponent<\n  DeleteKafkaInstanceProps\n> = ({ instanceName, ...props }) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <DeleteModal\n      {...props}\n      variant={\"destructive\"}\n      title={t(\"delete_instance_title\")}\n      confirmationValue={instanceName}\n    >\n      <Trans\n        ns={\"kafka\"}\n        i18nKey={\"delete_instance_message\"}\n        components={[<strong />]}\n        values={{\n          instanceName,\n        }}\n      />\n    </DeleteModal>\n  );\n};\n","import type { I18nProviderProps } from \"@rhoas/app-services-ui-components\";\nimport { I18nProvider as UiComponentsI18nProvider } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\n\nexport const I18nProvider: FunctionComponent<\n  Omit<I18nProviderProps, \"resources\">\n> = ({ lng, debug, children }) => {\n  return (\n    <UiComponentsI18nProvider\n      lng={lng}\n      resources={{\n        en: {\n          common: () =>\n            import(\"@rhoas/app-services-ui-components/locales/en/common.json\"),\n          \"create-kafka-instance\": () =>\n            import(\"locales/en/create-kafka-instance.json\"),\n          kafka: () => import(\"locales/en/kafka.json\"),\n          \"kafkaoverview-v3\": () => import(\"locales/en/kafkaoverview-v3.json\"),\n          metrics: () => import(\"locales/en/metrics.json\"),\n          topic: () => import(\"locales/en/topic.json\"),\n          \"manage-kafka-permissions\": () =>\n            import(\"locales/en/manage-kafka-permissions.json\"),\n          \"create-topic\": () => import(\"locales/en/create-topic.json\"),\n          \"message-browser\": () => import(\"locales/en/message-browser.json\"),\n          \"connection-tab\": () => import(\"locales/en/connection-tab.json\"),\n          \"connection-tab-p1\": () =>\n            import(\"locales/en/connection-tab-p1.json\"),\n          \"terms-and-conditions\": () =>\n            import(\"locales/en/terms-and-conditions.json\"),\n          cluster: () => import(\"locales/en/cluster.json\"),\n        },\n        it: {\n          common: () => Promise.resolve({ delete: \"Elimina\" }),\n        },\n      }}\n      debug={debug}\n    >\n      {children}\n    </UiComponentsI18nProvider>\n  );\n};\n","import { Alert } from \"@patternfly/react-core\";\nimport { differenceInHours } from \"date-fns\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate } from \"@rhoas/app-services-ui-components\";\n\ntype DetailsTabAlertProps = {\n  expiryDate: Date;\n};\n\nexport const DetailsTabAlert: FunctionComponent<DetailsTabAlertProps> = ({\n  expiryDate,\n}) => {\n  const hoursLeft = expiryDate ? differenceInHours(expiryDate, Date.now()) : 0;\n  return (\n    <Alert\n      variant={\n        hoursLeft > 24\n          ? \"info\"\n          : hoursLeft < 24 && hoursLeft > 5\n          ? \"warning\"\n          : \"danger\"\n      }\n      title={\n        <Trans\n          i18nKey=\"kafka:will_expire\"\n          components={{\n            time: <FormatDate date={expiryDate} format=\"expiration\" />,\n          }}\n        />\n      }\n      aria-live=\"polite\"\n      isInline\n      className=\"pf-u-mb-lg\"\n    />\n  );\n};\n","import {\n  Skeleton,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from \"@patternfly/react-core\";\nimport { FormatDate, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { ReactChild, VoidFunctionComponent } from \"react\";\nimport type { MarketplaceSubscription, Plan } from \"ui-models/src/models/kafka\";\nimport type { Bytes } from \"../../../../../ui-models/src/types\";\nimport { DetailsTabAlert } from \"./DetailsTabAlert\";\n\n/**\n * All fields marked as accepting undefined will show a skeleton loader until the value is available.\n * This is to support fetching the data from different APIs.\n */\nexport type KafkaDetailsTabProps = {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n  expiryDate: Date | undefined;\n  owner: string;\n  provider: string;\n  region: string;\n  instanceType: Plan;\n  size: string | undefined;\n  ingress: number | undefined;\n  egress: number | undefined;\n  storage: Bytes | undefined;\n  maxPartitions: number | undefined;\n  connections: number | undefined;\n  connectionRate: number | undefined;\n  messageSize: Bytes | undefined;\n  billing: \"prepaid\" | MarketplaceSubscription | \"dedicated\" | undefined;\n  kafkaVersion: string;\n};\n\nexport const KafkaDetailsTab: VoidFunctionComponent<KafkaDetailsTabProps> = ({\n  id,\n  createdAt,\n  updatedAt,\n  owner,\n  provider,\n  region,\n  expiryDate,\n  instanceType,\n  size,\n  ingress,\n  egress,\n  storage,\n  maxPartitions,\n  connections,\n  connectionRate,\n  messageSize,\n  billing,\n  kafkaVersion,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const renderTextListItem = (title: string, value: ReactChild | undefined) => (\n    <>\n      <TextListItem component={TextListItemVariants.dt}>{title}</TextListItem>\n      {value ? (\n        <TextListItem component={TextListItemVariants.dd}>{value}</TextListItem>\n      ) : (\n        <Skeleton\n          width=\"50%\"\n          screenreaderText={t(\"common:skeleton_loader_screenreader_text\", {\n            contentName: title,\n          })}\n        />\n      )}\n    </>\n  );\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      {instanceType !== \"standard\" && expiryDate && (\n        <DetailsTabAlert expiryDate={expiryDate} />\n      )}\n      <TextContent>\n        <TextList component={TextListVariants.dl}>\n          {instanceType === \"standard\" &&\n            renderTextListItem(\n              t(\"common:size\"),\n              size\n                ? t(\"create-kafka-instance:streaming_size_value\", {\n                    value: size,\n                  })\n                : undefined\n            )}\n          {renderTextListItem(\n            t(\"ingress\"),\n            ingress\n              ? t(\"create-kafka-instance:ingress_value\", {\n                  value: ingress,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"egress\"),\n            egress\n              ? t(\"create-kafka-instance:egress_value\", {\n                  value: egress,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"storage\"),\n            storage?.value\n              ? t(\"create-kafka-instance:storage_value\", {\n                  value: storage.value,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"partitions\"),\n            maxPartitions\n              ? t(\"create-kafka-instance:partitions_value\", {\n                  value: maxPartitions,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"client_connections\"),\n            connections\n              ? t(\"create-kafka-instance:client_connections_value\", {\n                  value: connections,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"connection_rate\"),\n            connectionRate\n              ? t(\"create-kafka-instance:connection_rate_value\", {\n                  value: connectionRate,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"message_size\"),\n            messageSize?.value\n              ? t(\"create-kafka-instance:message_size_value\", {\n                  value: messageSize.value,\n                })\n              : undefined\n          )}\n\n          {renderTextListItem(t(\"common:id\"), id)}\n          {renderTextListItem(t(\"common:kafka_version\"), kafkaVersion)}\n          {renderTextListItem(t(\"common:owner\"), owner)}\n          {renderTextListItem(\n            t(\"common:time_created\"),\n            <FormatDate date={createdAt} format={\"long\"} />\n          )}\n          {renderTextListItem(\n            t(\"common:time_updated\"),\n            <FormatDate date={updatedAt} format={\"long\"} />\n          )}\n          {renderTextListItem(t(\"common:cloud_provider\"), provider)}\n          {renderTextListItem(t(\"common:region\"), region)}\n          {renderTextListItem(\n            t(\"create-kafka-instance:billing.field_label\"),\n            (() => {\n              if (billing === undefined) {\n                return undefined;\n              } else if (billing === \"prepaid\") {\n                return t(\"create-kafka-instance:billing.prepaid_option\");\n              } else if (billing === \"dedicated\") {\n                return t(\"create-kafka-instance:billing.dedicated_option\");\n              } else {\n                switch (billing.marketplace) {\n                  case \"aws\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_aws\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"azure\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_azure\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"gcp\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_gcp\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"rhm\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_rh\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                }\n              }\n            })()\n          )}\n        </TextList>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const SuspendedConnection: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.small}>\n      <EmptyStateIcon icon={ExclamationTriangleIcon} color={\"#f0ab00\"} />\n      <Title headingLevel={\"h1\"} size={TitleSizes.lg}>\n        {t(\"suspend_empty_state_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"suspend_empty_state_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  ClipboardCopy,\n  ExpandableSection,\n  Label,\n  Popover,\n  Skeleton,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport {\n  ExternalLink,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SuspendedConnection } from \"./SuspendedConnection\";\n\nexport type KafkaConnectionTabP2Props = {\n  isKafkaSuspended?: boolean;\n  isKafkaPending?: boolean;\n  externalServer?: string;\n  tokenEndPointUrl: string | undefined;\n  linkToServiceAccount: string;\n  linkToAccessTab: string;\n  adminAPIUrl: string | undefined;\n  showCreateServiceAccountModal: () => void;\n  kafkaFleetManagerUrl: string;\n};\n\nexport const KafkaConnectionTabP2: FunctionComponent<\n  KafkaConnectionTabP2Props\n> = ({\n  isKafkaSuspended,\n  isKafkaPending,\n  externalServer,\n  tokenEndPointUrl,\n  linkToServiceAccount,\n  linkToAccessTab,\n  adminAPIUrl,\n  kafkaFleetManagerUrl,\n  showCreateServiceAccountModal,\n}) => {\n  const { t } = useTranslation();\n\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n\n  const onChangeExpandedSection = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return isKafkaSuspended ? (\n    <SuspendedConnection />\n  ) : (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:drawer_resource_tab_body_description_1\")}\n        </Text>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:bootstrap_server\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:bootstrap_server_description\")}\n        </Text>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            data-testid=\"drawerStreams-copyBootstrapURL\"\n            textAriaLabel={t(\"connection-tab:bootstrap_server\")}\n            isReadOnly\n          >\n            {externalServer}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:service_accounts_small\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\n                \"connection-tab:create_service_account_to_generate_credentials\"\n              }\n              components={{\n                value: (\n                  <Link\n                    to={linkToServiceAccount}\n                    data-testid=\"tableStreams-linkKafka\"\n                  ></Link>\n                ),\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <Button\n        variant={ButtonVariant.secondary}\n        isInline\n        data-testid=\"drawerStreams-buttonCreateServiceAccount\"\n        href={`${\n          document.location.pathname.startsWith(\"/beta\") ? \"/beta\" : \"\"\n        }/application-services/service-account`}\n        component={\"a\"}\n      >\n        {t(\"connection-tab:create_service_account\")}\n      </Button>\n      <TextContent className=\"pf-u-pt-sm\">\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\"connection-tab:current_instance\"}\n              components={{\n                value: <Link to={linkToAccessTab}></Link>,\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <ExpandableSection\n          toggleContent={\n            <div className=\"pf-c-content\">\n              <Text component={TextVariants.h3} className={\"pf-c-content\"}>\n                {t(\"connection-tab:rest_api_header\")}\n              </Text>\n            </div>\n          }\n          isExpanded={isExpanded}\n          onToggle={onChangeExpandedSection}\n          className=\"pf-u-mt-lg\"\n        >\n          <TextContent className=\"pf-u-pb-sm\">\n            <Text component={TextVariants.small}>\n              {t(\"connection-tab:rest_api_description\")}\n            </Text>\n          </TextContent>\n          <TextContent>\n            <strong>\n              {t(\"connection-tab:kafka_instance_url_label\")}\n              <Popover\n                headerContent={\n                  <div>\n                    {t(\"connection-tab:kafka_instance_url_popover_label\")}\n                  </div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"connection-tab:kafka_instance_url_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkainstance?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kafka-admin-rest.yaml%3Fref%3Ddoc-portal&readonly=true\"\n                          />,\n                          <ExternalLink\n                            testId={\"customerPortal-link\"}\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_openshift_application_services/1/guide/2409253a-45ee-470e-bdc9-5db4bfcf9d0f\"\n                            className={\"pf-u-ml-xs\"}\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\n                    \"connection-tab:kafka_instance_url_button_aria_label\"\n                  )}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {adminAPIUrl ? (\n              <ClipboardCopy\n                textAriaLabel={t(\"connection-tab:kafka_instance_url_label\")}\n                isReadOnly\n              >\n                {adminAPIUrl}\n              </ClipboardCopy>\n            ) : (\n              <Skeleton fontSize=\"2xl\" />\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"connection-tab:kafka_instance_url_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n          <TextContent className=\"pf-u-mt-md\">\n            <strong>\n              {t(\"connection-tab:kafka_management_url\")}\n              <Popover\n                headerContent={\n                  <div>\n                    {t(\"connection-tab:kafka_management_popover_header\")}\n                  </div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"connection-tab:kafka_management_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkamgmt?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kas-fleet-manager.yaml%3Fref%3Ddoc-portal\"\n                          />,\n                          <ExternalLink\n                            testId={\"customerPortal-link\"}\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_openshift_application_services/1/guide/2409253a-45ee-470e-bdc9-5db4bfcf9d0f\"\n                            className={\"pf-u-ml-xs\"}\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\n                    \"connection-tab:kafka_management_button_aria_label\"\n                  )}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {isKafkaPending ? (\n              <Skeleton fontSize=\"2xl\" />\n            ) : (\n              <ClipboardCopy\n                textAriaLabel={t(\"connection-tab:kafka_management_url\")}\n                isReadOnly\n              >\n                {kafkaFleetManagerUrl}\n              </ClipboardCopy>\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"connection-tab:kafka_management_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n        </ExpandableSection>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:authentication_method\")}\n        </Text>\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"connection-tab:sasl_oauthbearer\")}{\" \"}\n          <Label color=\"green\">{t(\"connection-tab:recommended\")}</Label>\n          <Popover\n            aria-label={t(\"connection-tab:sasl_oauthbearer\")}\n            bodyContent={\n              <div>{t(\"connection-tab:sasl_oauthbearer_popover_content\")}</div>\n            }\n          >\n            <Button\n              variant={ButtonVariant.plain}\n              aria-label={t(\"connection-tab:more_info_about_sasl_oauthbearer\")}\n            >\n              <HelpIcon />\n            </Button>\n          </Popover>\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:sasl_oauthbearer_description\")}\n        </Text>\n        <strong>{t(\"connection-tab:token_endpoint_url\")}</strong>\n        {tokenEndPointUrl === undefined ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            textAriaLabel={t(\"connection-tab:token_endpoint_url\")}\n            isReadOnly\n          >\n            {tokenEndPointUrl}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"connection-tab:sasl_plain\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:sasl_plain_description\")}\n        </Text>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  ClipboardCopyButton,\n  CodeBlock,\n  CodeBlockAction,\n  CodeBlockCode,\n  ExpandableSection,\n  ExpandableSectionToggle,\n} from \"@patternfly/react-core\";\nimport { useEffect, useState } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type ClientType = \"java\" | \"python\" | \"quarkus\" | \"springboot\";\n\nexport type SampleCodeSnippetProps = {\n  expandableCode?: string;\n  codeBlockCode: string;\n  codeSnippet?: ClientType;\n};\n\nexport const SampleCodeSnippet: VoidFunctionComponent<\n  SampleCodeSnippetProps\n> = ({ expandableCode, codeBlockCode, codeSnippet }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const [copied, setCopied] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsExpanded(false);\n  }, [codeSnippet]);\n\n  const clipboardCopyFunc = (_event: any, text: string) => {\n    navigator.clipboard\n      .writeText(text.toString())\n      .then(() => {\n        setCopied(true);\n      })\n      .catch(() => {\n        setCopied(false);\n      });\n  };\n\n  const onToggle = (isExpanded: boolean) => {\n    setIsExpanded(isExpanded);\n  };\n\n  const copyCode = expandableCode\n    ? codeBlockCode + \"\\n\" + expandableCode\n    : codeBlockCode;\n\n  const actions = (\n    <CodeBlockAction>\n      <ClipboardCopyButton\n        id=\"basic-copy-button\"\n        textId=\"code-content\"\n        aria-label=\"Copy to clipboard\"\n        exitDelay={600}\n        maxWidth=\"110px\"\n        variant=\"plain\"\n        onClick={(e) => clipboardCopyFunc(e, copyCode)}\n      >\n        {copied ? \"Successfully copied to clipboard!\" : \"Copy to clipboard\"}\n      </ClipboardCopyButton>\n    </CodeBlockAction>\n  );\n\n  return (\n    <CodeBlock actions={actions}>\n      <CodeBlockCode id=\"code-content\">\n        {codeBlockCode}\n\n        <ExpandableSection\n          isExpanded={isExpanded}\n          isDetached\n          contentId=\"code-block-expand\"\n        >\n          {expandableCode}\n        </ExpandableSection>\n      </CodeBlockCode>\n      {expandableCode ? (\n        <ExpandableSectionToggle\n          isExpanded={isExpanded}\n          onToggle={onToggle}\n          contentId=\"code-block-expand\"\n          direction=\"up\"\n        >\n          {isExpanded ? \"Show Less\" : \"Show More\"}\n        </ExpandableSectionToggle>\n      ) : null}\n    </CodeBlock>\n  );\n};\n","export const javaConfigCodeBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `package org.example;\nimport org.apache.kafka.clients.producer.ProducerConfig;  \nimport java.util.Properties;\n    \npublic class KafkaConfig {\n    \n    static Properties properties() {\n    \n        String kafkaHost = \"${kafkaBootstrapUrl}\";\n        String rhoasClientID = \"<client_id>\";\n        String rhoasClientSecret = \"<client_secret>\";\n        String rhoasOauthTokenUrl = \"${tokenEndpointUrl}\";`;\n};\n\nexport const javaConfigExpandabledBlock = `\n        var properties= new Properties();\n\n        properties.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, kafkaHost);\n        properties.setProperty(\"security.protocol\", \"SASL_SSL\");\n        properties.setProperty(\"sasl.mechanism\", \"OAUTHBEARER\");\n\n        properties.setProperty(\"sasl.jaas.config\", \"org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId=\\\\\"\" + rhoasClientID + \"\\\\\" clientSecret=\\\\\"\" + rhoasClientSecret + \"\\\\\" oauth.token.endpoint.uri=\\\\\"\" + rhoasOauthTokenUrl + \"\\\\\";\");\n\n        properties.setProperty(\"sasl.login.callback.handler.class\", \"org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler\");\n        properties.setProperty(\"sasl.oauthbearer.token.endpoint.url\", rhoasOauthTokenUrl);\n        properties.setProperty(\"sasl.oauthbearer.scope.claim.name\", \"api.iam.service_accounts\");\n\n        return properties;\n    }\n}`;\n\nexport const javaProducerCodeBlock = `package org.example;\n \nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.clients.producer.ProducerRecord;\nimport org.apache.kafka.clients.producer.KafkaProducer;\nimport org.apache.kafka.common.serialization.StringSerializer;\n \npublic class ProducerExample {\n \n   public static void main(String[] args) {`;\n\nexport const javaProducerExpandableBlock = `\n   //Creating producer properties\n   var properties= KafkaConfig.properties();\n   properties.setProperty(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n   properties.setProperty(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n\n   KafkaProducer<String,String> producer= new KafkaProducer<String,String>(properties);\n\n   producer.send(new ProducerRecord<>(<\"topic\">, \"Test Message\"));\n   producer.flush();\n   producer.close();\n  }\n}`;\n\nexport const javaConsumerCodeBlock = `package org.example;\n \nimport java.util.Arrays;\n\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.clients.consumer.KafkaConsumer;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.apache.kafka.clients.consumer.ConsumerRecord;\nimport org.apache.kafka.clients.consumer.ConsumerRecords;\nimport java.time.Duration;`;\n\nexport const javaConsumerExpandableBlock = `\npublic class ConsumerExample {\n\n    public static void main(String[] args) {\n\n        var properties= KafkaConfig.properties();\n\n        properties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n        properties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n        properties.setProperty(ConsumerConfig.GROUP_ID_CONFIG,\"test_group_2\");\n        properties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n\n        KafkaConsumer<String,String> consumer = new KafkaConsumer<String,String>(properties);\n\n        //Subscribing\n        consumer.subscribe(Arrays.asList(\"<topic>\"));\n\n        //polling\n        while(true){\n            ConsumerRecords<String,String> records=consumer.poll(Duration.ofMillis(100));\n            for(ConsumerRecord<String,String> record: records) {\n                System.out.println(\"Key: \"+ record.key() + \", Value:\" +record.value());\n                System.out.println(\"Partition:\" + record.partition()+\",Offset:\"+record.offset());\n            }\n        }\n    }\n}`;\n\nexport const pythonConfigCodeBlock = (tokenEndpointUrl: string) => {\n  return `import time\nimport requests\n    \ndef _get_token(config):\n    payload = {\"grant_type\": \"client_credentials\", \"scope\": \"api.iam.service_accounts\"}\n    resp = requests.post(\n        \"${tokenEndpointUrl}\",\n        auth=(\n            <client_id>,\n            <client_secret>,\n        ),\n        data=payload,\n    )`;\n};\n\nexport const pythonConfigExpandabledBlock = (kafkaBootstrapUrl: string) => {\n  return `\n    token = resp.json()\n    return token[\"access_token\"], time.time() + float(token[\"expires_in\"])\n    \n    common_config = {\n    'bootstrap.servers': \"${kafkaBootstrapUrl}\",\n    'security.protocol': 'SASL_SSL',\n    'sasl.mechanisms': 'OAUTHBEARER',\n    'oauth_cb': _get_token,\n    }\n    \n    topic=<topic>`;\n};\n\nexport const pythonProducer = `from confluent_kafka import Producer\n \nproducer = Producer(common_config)\n \nproducer.produce(topic=<topic>, value=b\"Sample Message\")\nproducer.flush()`;\n\nexport const pythonConsumerCodeBlock = `from confluent_kafka import Consumer\n \nconsumer_config = {\n    \"group.id\": \"test-group\",\n    'session.timeout.ms': 6000,\n    'auto.offset.reset': 'earliest',\n}\n\nconsumer = Consumer({ **consumer_config, **common_config })\n\nconsumer.subscribe([<topic>])`;\n\nexport const pythonConsumerExpandableBlock = `while True:\ntry:\n    msg = consumer.poll(1.0)\n    if msg is None:\n        continue\n\n    print(msg.value())\nexcept KeyboardInterrupt:\n    break\n\nconsumer.close()`;\n\nexport const quarkusConfigCodeBlock = `# Quarkus config\nquarkus.ssl.native=true\n\n# Configure the Kafka sink (we write to it)\nmp.messaging.outgoing.generated-price.connector=smallrye-kafka\nmp.messaging.outgoing.generated-price.topic=<topic>\nmp.messaging.outgoing.generated-price.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer\n\n# Configure the Kafka source (we read from it)\nmp.messaging.incoming.prices.connector=smallrye-kafka\nmp.messaging.incoming.prices.topic=<topic>\nmp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer`;\n\nexport const quarkusConfigExpandableBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `\n# Configure docker config\nquarkus.container-image.builder=jib\nquarkus.kubernetes.deployment-target=kubernetes\nquarkus.container-image.build=false\nquarkus.container-image.push=false\n    \n## dev profile using user defined environment variables that uses SASL/OAUTHBEARER\n## ./mvnw quarkus:dev\n## ./mvnw package -Dquarkus.profile=dev\n    \n%dev.kafka.bootstrap.servers=\\${\"${kafkaBootstrapUrl}\"}\n%dev.kafka.security.protocol=SASL_SSL\n    \n%dev.kafka.sasl.mechanism=OAUTHBEARER\n%dev.kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \\\\\n    oauth.client.id=\"\\${<client_id>}\" \\\\\n    oauth.client.secret=\"\\${<client_secret>}\" \\\\\n    oauth.token.endpoint.uri=\"\\${\"${tokenEndpointUrl}\"}\" ;\n%dev.kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler`;\n};\n\nexport const quarkusProducerCodeBlock = `package org.acme.kafka;\nimport java.time.Duration;\nimport java.util.Random;\n\nimport javax.enterprise.context.ApplicationScoped;\n\nimport io.smallrye.mutiny.Multi;\nimport org.eclipse.microprofile.reactive.messaging.Outgoing;`;\n\nexport const quarkusProducerExpandableBlock = `\n/**\n* A bean producing random prices every 5 seconds.\n* The prices are written to a Kafka topic (prices). The Kafka configuration is specified in the application configuration.\n*/\n@ApplicationScoped\npublic class PriceGenerator {\n\n   private Random random = new Random();\n\n   @Outgoing(\"generated-price\")\n   public Multi<Integer> generate() {\n       return Multi.createFrom().ticks().every(Duration.ofSeconds(5))\n               .onOverflow().drop()\n               .map(tick -> random.nextInt(100));\n   }\n\n}`;\n\nexport const quarkusConsumerCodeBlock = `package org.acme.kafka;\nimport javax.enterprise.context.ApplicationScoped;\n\nimport org.eclipse.microprofile.reactive.messaging.Acknowledgment;\nimport org.eclipse.microprofile.reactive.messaging.Incoming;\nimport org.eclipse.microprofile.reactive.messaging.Outgoing;\n\nimport io.smallrye.reactive.messaging.annotations.Broadcast;\n\n/**\n * A bean consuming data from the \"prices\" Kafka topic and applying some conversion.\n * The result is pushed to the \"my-data-stream\" stream which is an in-memory stream.\n */\n@ApplicationScoped`;\n\nexport const quarkusConsumerExpandableBlock = `public class PriceConverter {\n\n    private static final double CONVERSION_RATE = 0.88;\n\n    // Consume from the \\`prices\\` channel and produce to the \\`my-data-stream\\` channel\n    @Incoming(\"prices\")\n    @Outgoing(\"my-data-stream\")\n    // Send to all subscribers\n    @Broadcast\n    // Acknowledge the messages before calling this method.\n    @Acknowledgment(Acknowledgment.Strategy.PRE_PROCESSING)\n    public double process(int priceInUsd) {\n        return priceInUsd * CONVERSION_RATE;\n    }\n\n}`;\n\nexport const springBootConfigCodeBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `package com.example.kafkaconfig;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class KafkaConfig {\n\n   public static Map<String, Object> Config() {\n\n       Map<String, Object> config = new HashMap<>();\n\n       String kafkaHost = \"${kafkaBootstrapUrl}\";\n       String rhoasClientID = \"<client_id>\";\n       String rhoasClientSecret = \"<client_secret>\";\n       String rhoasOauthTokenUrl = \"${tokenEndpointUrl}\";`;\n};\n\nexport const springBootConfigExpandableBlock = `\n    config.put(\"bootstrap.servers\", kafkaHost);\n\n    config.put(\"security.protocol\", \"SASL_SSL\");\n    config.put(\"sasl.mechanism\", \"OAUTHBEARER\");\n\n    config.put(\"sasl.jaas.config\", \"org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId=\\\\\"\" + rhoasClientID + \"\\\\\" clientSecret=\\\\\"\" + rhoasClientSecret + \"\\\\\" oauth.token.endpoint.uri=\\\\\"\" + rhoasOauthTokenUrl + \"\\\\\";\");\n    config.put(\"sasl.login.callback.handler.class\", \"org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler\");\n    config.put(\"sasl.oauthbearer.token.endpoint.url\", rhoasOauthTokenUrl);\n    config.put(\"sasl.oauthbearer.scope.claim.name\", \"api.iam.service_accounts\");\n\n    return config;\n   }\n}`;\n\nexport const springBootProducerCodeBlock = `package com.example.kafkademo;\nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.common.serialization.StringSerializer;\nimport org.springframework.boot.ApplicationRunner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.kafka.core.DefaultKafkaProducerFactory;\nimport org.springframework.kafka.core.KafkaTemplate;\nimport org.springframework.kafka.core.ProducerFactory;\nimport com.example.kafkaconfig.KafkaConfig;\n\nimport java.util.Map;`;\n\nexport const springBootProducerExpandableBlock = `\n@SpringBootApplication\npublic class KafkaProducerExample {\n\n  public static void main(String[] args) throws Exception {\n    SpringApplication.run(KafkaProducerExample.class, args);\n  }\n\n  @Bean\n  public ProducerFactory<String, String> producerFactory() {\n    Map<String, Object> config = KafkaConfig.Config();\n\n    config.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n    config.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n\n    return new DefaultKafkaProducerFactory<String, String>(config);\n  }\n\n  @Bean\n  public KafkaTemplate<String, String> kafkaTemplate() {\n    return new KafkaTemplate<>(producerFactory());\n  }\n\n  @Bean\n  public ApplicationRunner runner(KafkaTemplate<String, String> template) {\n    return args -> {\n      template.send(<\"topic\">, \"Test Message\");\n    };\n  }\n\n}`;\n\nexport const springBootListenerCodeBlock = `package com.example.kafkaconsumer.listener;\n\nimport com.example.kafkaconfig.KafkaConfig;\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.kafka.annotation.KafkaListener;\nimport org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;\nimport org.springframework.kafka.core.ConsumerFactory;\nimport org.springframework.kafka.core.DefaultKafkaConsumerFactory;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Map;`;\n\nexport const springBootListenerExpandableBlock = `@Component\npublic class Listener {\n\n    @KafkaListener(topics = <\"topic\">,\n            containerFactory = \"concurrentKafkaListenerContainerFactory\",\n            groupId = \"test_group\")\n\n    // Method\n    public void consume(String message)\n    {\n        // Print statement\n        System.out.println(message);\n    }\n}`;\n\nexport const springBootConsumerConfigCodeBlock = `package com.example.kafkaconsumer.config;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport com.example.kafkaconfig.KafkaConfig;\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.kafka.annotation.EnableKafka;\nimport org.springframework.kafka.core.ConsumerFactory;\nimport org.springframework.kafka.core.DefaultKafkaConsumerFactory;\nimport org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;`;\n\nexport const springBootConsumerConfigExpandableBlock = `// Annotations\n@EnableKafka\n@Configuration\n\npublic class KafkaConsumerConfig {\n\n    @Bean\n    public ConsumerFactory<String, String> consumerFactory() {\n        Map<String, Object> config = KafkaConfig.Config();\n\n        config.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\n        config.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\n\n        return new DefaultKafkaConsumerFactory<>(config);\n    }\n\n    @Bean\n    public ConcurrentKafkaListenerContainerFactory concurrentKafkaListenerContainerFactory() {\n        ConcurrentKafkaListenerContainerFactory<\n                String, String> factory\n                = new ConcurrentKafkaListenerContainerFactory<>();\n        factory.setConsumerFactory(consumerFactory());\n        return factory;\n    }\n}`;\n\nexport const springBootConsumerExampleCodeBlock = `\npackage com.example.kafkaconsumer;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;`;\n\nexport const springBootConsumerExampleExpandableBlock = `\n@SpringBootApplication\npublic class KafkaConsumerExample {\n\n    public static void main(String[] args) {\n        SpringApplication.run(KafkaConsumerExample.class, args);\n    }\n\n}`;\n","import {\n  TextContent,\n  TextVariants,\n  Text,\n  ToggleGroup,\n  ToggleGroupItem,\n  Skeleton,\n} from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { SampleCodeSnippet } from \"./SampleCodeSnippet\";\nimport {\n  javaConfigCodeBlock,\n  javaConfigExpandabledBlock,\n  javaConsumerCodeBlock,\n  javaConsumerExpandableBlock,\n  javaProducerCodeBlock,\n  javaProducerExpandableBlock,\n  pythonConfigCodeBlock,\n  pythonConfigExpandabledBlock,\n  pythonConsumerCodeBlock,\n  pythonConsumerExpandableBlock,\n  pythonProducer,\n  quarkusConfigCodeBlock,\n  quarkusConfigExpandableBlock,\n  quarkusConsumerCodeBlock,\n  quarkusConsumerExpandableBlock,\n  quarkusProducerCodeBlock,\n  quarkusProducerExpandableBlock,\n  springBootConfigCodeBlock,\n  springBootConfigExpandableBlock,\n  springBootConsumerConfigCodeBlock,\n  springBootConsumerConfigExpandableBlock,\n  springBootConsumerExampleCodeBlock,\n  springBootConsumerExampleExpandableBlock,\n  springBootListenerCodeBlock,\n  springBootListenerExpandableBlock,\n  springBootProducerCodeBlock,\n  springBootProducerExpandableBlock,\n} from \"./CodeSnippets\";\n\nexport type ClientType = \"java\" | \"python\" | \"quarkus\" | \"springboot\";\n\nexport type KafkaSampleCodeProps = {\n  kafkaBootstrapUrl: string;\n  tokenEndpointUrl: string | undefined;\n};\n\nexport const KafkaSampleCode: VoidFunctionComponent<KafkaSampleCodeProps> = ({\n  kafkaBootstrapUrl,\n  tokenEndpointUrl,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const [clientSelect, setClientSelect] = useState<ClientType>(\"java\");\n\n  const clientProvider: { [provider in ClientType]: string } = {\n    java: t(\"sample_code.clients.java\"),\n    python: t(\"sample_code.clients.python\"),\n    quarkus: t(\"sample_code.clients.quarkus\"),\n    springboot: t(\"sample_code.clients.spring_boot\"),\n  };\n\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.code_snippet_description_1\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.code_snippet_description_2\")}\n        </Text>\n        <ToggleGroup>\n          <ToggleGroupItem\n            text={clientProvider[\"java\"]}\n            value=\"java\"\n            buttonId=\"java\"\n            isSelected={clientSelect === \"java\"}\n            onChange={() => setClientSelect(\"java\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"python\"]}\n            value=\"python\"\n            buttonId=\"python\"\n            isSelected={clientSelect === \"python\"}\n            onChange={() => setClientSelect(\"python\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"quarkus\"]}\n            value=\"quarkus\"\n            buttonId=\"quarkus\"\n            isSelected={clientSelect === \"quarkus\"}\n            onChange={() => setClientSelect(\"quarkus\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"springboot\"]}\n            value=\"springboot\"\n            buttonId=\"springboot\"\n            isSelected={clientSelect === \"springboot\"}\n            onChange={() => setClientSelect(\"springboot\")}\n          />\n        </ToggleGroup>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_configuration_code\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.sample_configuration_code_description\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.bracket_text\")}\n        </Text>\n        {(() => {\n          switch (clientSelect) {\n            case \"java\":\n              return tokenEndpointUrl ? (\n                <SampleCodeSnippet\n                  codeBlockCode={javaConfigCodeBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  expandableCode={javaConfigExpandabledBlock}\n                  codeSnippet={clientSelect}\n                />\n              ) : (\n                <Skeleton fontSize=\"4xl\" />\n              );\n            case \"python\":\n              return tokenEndpointUrl ? (\n                <SampleCodeSnippet\n                  codeBlockCode={pythonConfigCodeBlock(tokenEndpointUrl)}\n                  expandableCode={pythonConfigExpandabledBlock(\n                    kafkaBootstrapUrl\n                  )}\n                  codeSnippet={clientSelect}\n                />\n              ) : (\n                <Skeleton fontSize=\"4xl\" />\n              );\n            case \"quarkus\":\n              return tokenEndpointUrl ? (\n                <SampleCodeSnippet\n                  codeBlockCode={quarkusConfigCodeBlock}\n                  expandableCode={quarkusConfigExpandableBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  codeSnippet={clientSelect}\n                />\n              ) : (\n                <Skeleton fontSize=\"4xl\" />\n              );\n            case \"springboot\":\n              return tokenEndpointUrl ? (\n                <SampleCodeSnippet\n                  codeBlockCode={springBootConfigCodeBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  expandableCode={springBootConfigExpandableBlock}\n                  codeSnippet={clientSelect}\n                />\n              ) : (\n                <Skeleton fontSize=\"4xl\" />\n              );\n            default:\n              return null;\n          }\n        })()}\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_producer_code\")}\n        </Text>\n        {clientSelect === \"quarkus\" ? (\n          <>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.sample_producer_code_quarkus_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={quarkusProducerCodeBlock}\n              expandableCode={quarkusProducerExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n          </>\n        ) : (\n          <>\n            <Text component={TextVariants.small}>\n              <Trans\n                ns={\"kafka\"}\n                i18nKey={\"sample_code.sample_producer_code_description\"}\n                values={{\n                  client_type: clientProvider[clientSelect],\n                }}\n              />\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.bracket_text\")}\n            </Text>\n            {(() => {\n              switch (clientSelect) {\n                case \"java\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={javaProducerCodeBlock}\n                      expandableCode={javaProducerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"python\":\n                  return <SampleCodeSnippet codeBlockCode={pythonProducer} />;\n                case \"springboot\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={springBootProducerCodeBlock}\n                      expandableCode={springBootProducerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                default:\n                  return null;\n              }\n            })()}\n          </>\n        )}\n\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_consumer_code\")}\n        </Text>\n        {clientSelect === \"springboot\" ? (\n          <>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_sample_consumer_code_description\")}\n            </Text>\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_consumer_configuration\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_consumer_configuration_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootConsumerConfigCodeBlock}\n              expandableCode={springBootConsumerConfigExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_listener\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_listener_description\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.bracket_text\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootListenerCodeBlock}\n              expandableCode={springBootListenerExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_consumer\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_consumer_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootConsumerExampleCodeBlock}\n              expandableCode={springBootConsumerExampleExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n          </>\n        ) : (\n          <>\n            <Text component={TextVariants.small}>\n              <Trans\n                ns={\"kafka\"}\n                i18nKey={\"sample_code.sample_consumer_code_description\"}\n                values={{\n                  client_type: clientProvider[clientSelect],\n                }}\n              />\n            </Text>\n            {clientSelect === \"quarkus\" ? null : (\n              <Text component={TextVariants.small}>\n                {t(\"sample_code.bracket_text\")}\n              </Text>\n            )}\n            {(() => {\n              switch (clientSelect) {\n                case \"java\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={javaConsumerCodeBlock}\n                      expandableCode={javaConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"python\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={pythonConsumerCodeBlock}\n                      expandableCode={pythonConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"quarkus\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={quarkusConsumerCodeBlock}\n                      expandableCode={quarkusConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                default:\n                  return null;\n              }\n            })()}\n          </>\n        )}\n      </TextContent>\n    </div>\n  );\n};\n","import type { TabsProps } from \"@patternfly/react-core\";\nimport {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport type { Kafka } from \"ui-models/src/models/kafka\";\nimport { CreatingStatuses } from \"ui-models/src/models/kafka\";\nimport { useKafkaLabels } from \"../../hooks\";\nimport {\n  KafkaConnectionTabP2,\n  KafkaDetailsTab,\n  KafkaSampleCode,\n} from \"./components\";\n\nexport type KafkaInstanceDrawerProps = {\n  instance?: Kafka;\n  isExpanded: boolean;\n  activeTab: KafkaInstanceDrawerTab;\n  onTabChange: (tab: KafkaInstanceDrawerTab) => void;\n  tokenEndpointUrl: string | undefined;\n  onClose: () => void;\n};\n\nexport const KafkaInstanceDrawer: FunctionComponent<\n  KafkaInstanceDrawerProps\n> = ({\n  instance,\n  activeTab,\n  isExpanded,\n  onTabChange,\n  onClose,\n  children,\n  tokenEndpointUrl,\n}) => {\n  const content = useMemo(() => {\n    return (\n      <DrawerPanelContent>\n        {instance ? (\n          <KafkaInstanceDrawerPanel\n            instance={instance}\n            activeTab={activeTab}\n            onTabChange={onTabChange}\n            onClose={onClose}\n            tokenEndpointUrl={tokenEndpointUrl}\n          />\n        ) : null}\n      </DrawerPanelContent>\n    );\n  }, [activeTab, instance, onClose, onTabChange, tokenEndpointUrl]);\n  return (\n    <Drawer isExpanded={isExpanded} isInline={true}>\n      <DrawerContent panelContent={content}>\n        <DrawerContentBody\n          className={\"pf-u-display-flex pf-u-flex-direction-column\"}\n        >\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nexport type KafkaInstanceDrawerTab = \"details\" | \"connections\";\n\nexport const KafkaInstanceDrawerPanel: VoidFunctionComponent<\n  Required<Omit<KafkaInstanceDrawerProps, \"isExpanded\">> & {\n    activeTab: KafkaInstanceDrawerTab;\n  }\n> = ({ instance, activeTab, onTabChange, onClose, tokenEndpointUrl }) => {\n  const { t } = useTranslation([\"kafka\"]);\n  const labels = useKafkaLabels();\n\n  const handleSelect: TabsProps[\"onSelect\"] = useCallback(\n    (_, tab) => {\n      const t = tab as KafkaInstanceDrawerTab;\n      onTabChange(t);\n    },\n    [onTabChange]\n  );\n\n  const isKafkaPending = CreatingStatuses.includes(instance.status);\n\n  return (\n    <>\n      <DrawerHead>\n        <TextContent>\n          <Text component={TextVariants.small} className={\"pf-u-mb-0\"}>\n            {t(\"common:name\")}\n          </Text>\n          <Title\n            headingLevel={\"h1\"}\n            size={TitleSizes[\"xl\"]}\n            className={\"pf-u-mt-0\"}\n          >\n            {instance.name}\n          </Title>\n        </TextContent>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <Tabs activeKey={activeTab} onSelect={handleSelect}>\n          <Tab\n            eventKey={\"details\"}\n            title={<TabTitleText>{t(\"drawer-tabs.details\")}</TabTitleText>}\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaDetailsTab\n                id={instance.id}\n                owner={instance.owner}\n                createdAt={parseISO(instance.createdAt)}\n                updatedAt={parseISO(instance.updatedAt)}\n                expiryDate={\n                  instance.expiryDate\n                    ? parseISO(instance.expiryDate)\n                    : undefined\n                }\n                size={instance.size}\n                ingress={instance.ingress}\n                egress={instance.egress}\n                storage={instance.storage}\n                maxPartitions={instance.maxPartitions}\n                connections={instance.connections}\n                connectionRate={instance.connectionRate}\n                messageSize={instance.messageSize}\n                provider={\n                  labels.providers[instance.provider] || instance.provider\n                }\n                region={\n                  labels.providerRegions[instance.provider][instance.region] ||\n                  instance.region\n                }\n                instanceType={instance.plan}\n                billing={instance.billing}\n                kafkaVersion={instance.version}\n              />\n            </div>\n          </Tab>\n          <Tab\n            eventKey={\"connections\"}\n            title={<TabTitleText>{t(\"drawer-tabs.connections\")}</TabTitleText>}\n            data-testid=\"drawerStreams-tabConnect\"\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaConnectionTabP2\n                isKafkaPending={isKafkaPending}\n                externalServer={getExternalServer(instance.bootstrapUrl)}\n                tokenEndPointUrl={tokenEndpointUrl}\n                linkToServiceAccount={\"service-accounts\"}\n                linkToAccessTab={`TODO/acls`}\n                adminAPIUrl={getAdminServerUrl(instance.adminUrl)}\n                showCreateServiceAccountModal={() => {\n                  /* TODO */\n                }}\n                kafkaFleetManagerUrl={\n                  \"https://api.openshift.com/api/kafkas_mgmt/v1/openapi\"\n                }\n              />\n            </div>\n          </Tab>\n          <Tab\n            eventKey={\"samplecode\"}\n            title={<TabTitleText>{t(\"drawer-tabs.sample-code\")}</TabTitleText>}\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaSampleCode\n                kafkaBootstrapUrl={getExternalServer(instance.bootstrapUrl)!}\n                tokenEndpointUrl={tokenEndpointUrl}\n              />\n            </div>\n          </Tab>\n        </Tabs>\n      </DrawerPanelBody>\n    </>\n  );\n};\n\nconst getExternalServer = (bootstrapUrl: string | undefined) => {\n  if (!bootstrapUrl) {\n    return undefined;\n  }\n  return bootstrapUrl?.endsWith(\":443\") ? bootstrapUrl : `${bootstrapUrl}:443`;\n};\n\nconst getAdminServerUrl = (adminUrl: string | undefined) => {\n  return adminUrl ? `${adminUrl}/openapi` : undefined;\n};\n","import {\n  Alert,\n  Button,\n  Flex,\n  FlexItem,\n  HelperText,\n  HelperTextItem,\n  Spinner,\n  Split,\n  SplitItem,\n} from \"@patternfly/react-core\";\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { forwardRef } from \"react\";\nimport type { Status } from \"ui-models/src/models/kafka\";\nimport {\n  CreatingStatuses,\n  DegradedStatuses,\n  DeletingStatuses,\n  ReadyStatuses,\n  ResumingStatuses,\n  SuspendedStatuses,\n  SuspendingStatuses,\n} from \"ui-models/src/models/kafka\";\nimport \"./StatusLabel.css\";\n\ntype StatusLabelProps = {\n  value: Status;\n  showWarning?: boolean;\n  showError?: boolean;\n  withPopover?: boolean;\n};\n\n/**\n *<strong> Introduction </strong>\n *These are the various statuses that can show in the Kafka instances table under the \"Status\" header.\n */\nexport const StatusLabel = forwardRef<HTMLButtonElement, StatusLabelProps>(\n  (\n    { value, showWarning = false, showError = false, withPopover = false },\n    ref\n  ) => {\n    const { t } = useTranslation(\"kafka\");\n\n    const buttonVariant = withPopover ? \"link\" : \"plain\";\n\n    switch (true) {\n      case ReadyStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <CheckCircleIcon className=\"mas-m-ready\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.ready\")}</SplitItem>\n            </Split>\n          </div>\n        );\n\n      case CreatingStatuses.includes(value):\n        switch (true) {\n          case showWarning:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                  </SplitItem>\n                </Split>\n                <Alert\n                  variant=\"warning\"\n                  isInline\n                  isPlain\n                  title=\"This is taking longer than expected.\"\n                />\n              </div>\n            );\n          case showError:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                  </SplitItem>\n                </Split>\n                <Alert\n                  variant=\"danger\"\n                  isInline\n                  isPlain\n                  title={t(\"status_warning_or_error_title\")}\n                />\n              </div>\n            );\n          default:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                    <Flex>\n                      <FlexItem>\n                        <HelperText>\n                          <HelperTextItem variant=\"indeterminate\">\n                            {t(\"status_created_shortly_help\")}\n                          </HelperTextItem>\n                        </HelperText>\n                      </FlexItem>\n                    </Flex>\n                  </SplitItem>\n                </Split>\n              </div>\n            );\n        }\n\n      case DegradedStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <ExclamationTriangleIcon className=\"mas-m-degraded\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.degraded\")}</SplitItem>\n            </Split>\n          </div>\n        );\n\n      case SuspendingStatuses.includes(value):\n        return (\n          <div>\n            <p className=\"mas-m-deleting\"> {t(\"statuses.suspending\")}</p>\n          </div>\n        );\n      case SuspendedStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <ExclamationTriangleIcon className=\"mas-m-degraded\" />\n              </SplitItem>\n              <SplitItem>\n                <Button ref={ref} variant={buttonVariant} isInline>\n                  {t(\"statuses.suspended\")}\n                </Button>\n              </SplitItem>\n            </Split>\n          </div>\n        );\n      case ResumingStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <Spinner size=\"md\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.resuming\")}</SplitItem>\n            </Split>\n          </div>\n        );\n      case DeletingStatuses.includes(value):\n        return (\n          <div>\n            <p className=\"mas-m-deleting\"> {t(\"statuses.deleting\")}</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  }\n);\n","export type KafkaStatus =\n  | \"ready\"\n  | \"degraded\"\n  | \"accepted\"\n  | \"provisioning\"\n  | \"preparing\"\n  | \"deprovision\"\n  | \"deleting\"\n  | \"suspended\"\n  | \"suspending\"\n  | \"resuming\";\n\nexport type PopoverStatus =\n  | \"pending\"\n  | \"provisioning\"\n  | \"preparing\"\n  | \"ready\"\n  | \"suspended\";\n\nexport const PopoverStatusOrder: PopoverStatus[] = [\n  \"pending\",\n  \"preparing\",\n  \"provisioning\",\n];\n\nexport const KafkaToPopoverMapping: {\n  [status in KafkaStatus]: PopoverStatus | null;\n} = {\n  ready: null,\n  degraded: null,\n  accepted: \"pending\",\n  provisioning: \"provisioning\",\n  preparing: \"preparing\",\n  deprovision: null,\n  deleting: null,\n  suspended: \"suspended\",\n  suspending: null,\n  resuming: null,\n};\n","import { ProgressStep, ProgressStepper } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport { PopoverStatusOrder } from \"../types\";\n\ntype StatusProgressStepperProps = {\n  currentStatus: PopoverStatus;\n};\n\nexport const StatusProgressStepper: VoidFunctionComponent<\n  StatusProgressStepperProps\n> = ({ currentStatus }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const currentStep = PopoverStatusOrder.findIndex((s) => s === currentStatus);\n\n  const getVariant = (index: number) =>\n    (currentStep === index && \"info\") ||\n    (currentStep > index && \"success\") ||\n    \"default\";\n\n  return (\n    <ProgressStepper isVertical={true}>\n      <ProgressStep\n        id={\"pending\"}\n        titleId={\"pending\"}\n        isCurrent={currentStatus === \"pending\"}\n        description={t(\"kafka_status_popover.pending.description\")}\n        aria-label={t(\"kafka_status_popover.pending.description\")}\n        variant={getVariant(0)}\n      >\n        {t(\"kafka_status_popover.pending.title\")}\n      </ProgressStep>\n\n      <ProgressStep\n        id={\"provisioning\"}\n        titleId={\"provisioning\"}\n        isCurrent={currentStatus === \"provisioning\"}\n        description={t(\"kafka_status_popover.provisioning.description\")}\n        aria-label={t(\"kafka_status_popover.provisioning.description\")}\n        variant={getVariant(1)}\n      >\n        {t(\"kafka_status_popover.provisioning.title\")}\n      </ProgressStep>\n      <ProgressStep\n        id={\"preparing\"}\n        titleId={\"preparing\"}\n        isCurrent={currentStatus === \"preparing\"}\n        description={t(\"kafka_status_popover.preparing.description\")}\n        aria-label={t(\"kafka_status_popover.preparing.description\")}\n        variant={getVariant(2)}\n      >\n        {t(\"kafka_status_popover.preparing.title\")}\n      </ProgressStep>\n    </ProgressStepper>\n  );\n};\n","import {\n  Alert,\n  Button,\n  ButtonVariant,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport { PopoverStatusOrder } from \"../types\";\nimport { StatusProgressStepper } from \"./StatusProgressStepper\";\n\nexport type StatusPopoverContentProps = {\n  currentStatus: PopoverStatus;\n  showWarning?: boolean;\n  showError?: boolean;\n  onClickConnectionTabLink: () => void;\n  onClickSupportLink: () => void;\n};\n\nexport const StatusPopoverContent: VoidFunctionComponent<\n  StatusPopoverContentProps\n> = ({\n  currentStatus,\n  showWarning = false,\n  showError = false,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const currentStep = PopoverStatusOrder.findIndex((s) => s === currentStatus);\n\n  return (\n    <div>\n      <Stack hasGutter>\n        <StackItem>\n          {showWarning && (\n            <Alert\n              variant=\"warning\"\n              isInline\n              isPlain\n              title={t(\"kafka_status_popover.warning_or_error_title\")}\n            >\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  <Trans\n                    ns={[\"create-kafka-instance\"]}\n                    i18nKey=\"kafka_status_popover.header_content_with_warning\"\n                    components={[\n                      <Button\n                        key=\"btn-connetcion-tab\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickConnectionTabLink}\n                        isInline\n                      />,\n                    ]}\n                  />\n                </Text>\n              </TextContent>\n            </Alert>\n          )}\n          {showError && (\n            <Alert\n              variant=\"danger\"\n              isInline\n              isPlain\n              title={t(\"kafka_status_popover.warning_or_error_title\")}\n            >\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  <Trans\n                    ns={[\"create-kafka-instance\"]}\n                    i18nKey=\"kafka_status_popover.header_content_with_error\"\n                    components={[\n                      <Button\n                        key=\"btn-connetcion-tab\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickConnectionTabLink}\n                        isInline\n                      />,\n                      <Button\n                        key=\"btn-support-case\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickSupportLink}\n                        isInline\n                      />,\n                    ]}\n                  />\n                </Text>\n              </TextContent>\n            </Alert>\n          )}\n          {!showError && !showWarning && (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey=\"kafka_status_popover.header_content\"\n                  components={[\n                    <Button\n                      key=\"btn-connetcion-tab\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickConnectionTabLink}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Text>\n            </TextContent>\n          )}\n        </StackItem>\n        <StackItem>\n          {t(\"common:progress_stepper_current_step\", {\n            currentStep,\n            total: PopoverStatusOrder.length,\n          })}\n        </StackItem>\n        <StackItem>\n          <StatusProgressStepper currentStatus={currentStatus} />\n        </StackItem>\n      </Stack>\n    </div>\n  );\n};\n","import type { PopoverProps } from \"@patternfly/react-core\";\nimport { Popover } from \"@patternfly/react-core\";\nimport type { RefObject, VoidFunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport type { StatusPopoverContentProps } from \"./StatusPopoverContent\";\nimport { StatusPopoverContent } from \"./StatusPopoverContent\";\n\nexport type StatusPopoverProps = {\n  status: PopoverStatus;\n  initialOpen?: boolean;\n  showWarning?: boolean;\n  showError?: boolean;\n  children?: PopoverProps[\"children\"];\n  onClickConnectionTabLink: StatusPopoverContentProps[\"onClickConnectionTabLink\"];\n  onClickSupportLink: StatusPopoverContentProps[\"onClickSupportLink\"];\n  reference?: RefObject<HTMLButtonElement>;\n};\n\n/**\n * ## Introduction\n *\n * This is a popover that can be reached from the Kafka Instance table while the status of the instance in question is “Creating”.\n * A Kafka instance usually takes a few minutes to create. The purpose of this popover is to give the user some insights into\n * the creation process of their instance while they wait for it to be available to use.\n *\n * - The text at the top explains that the instance will be ready shortly & suggests that the user creates a service account while they wait.\n *  (Provides a link to the “Connections tab\" where this is done).\n *\n * - The steps shown in the progress stepper are statuses that show in the api. They have been grouped together under the one overall\n * “Creating status” in the table.There is some descriptive text accompanying each step too. When these steps are complete the instance will be ready for use\n *\n * - The popover is only available while instance creation is in progress.\n * - After creation is complete the table displays the ready status and the popover is no longer available.\n *\n */\nexport const StatusPopover: VoidFunctionComponent<StatusPopoverProps> = ({\n  initialOpen = false,\n  status,\n  showWarning = false,\n  showError = false,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n  reference,\n  children,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const [isVisible, setIsVisible] = useState(initialOpen);\n  const onClose = () => setIsVisible(false);\n\n  const handleClickConnectionTabLink = useCallback(() => {\n    onClose();\n    onClickConnectionTabLink();\n  }, [onClickConnectionTabLink]);\n\n  const handleClickSupportLink = useCallback(() => {\n    onClose();\n    onClickSupportLink();\n  }, [onClickSupportLink]);\n\n  return (\n    <Popover\n      headerContent={t(\"kafka_status_popover.title\")}\n      bodyContent={\n        <StatusPopoverContent\n          currentStatus={status}\n          showWarning={showWarning}\n          showError={showError}\n          onClickConnectionTabLink={handleClickConnectionTabLink}\n          onClickSupportLink={handleClickSupportLink}\n        />\n      }\n      isVisible={isVisible}\n      shouldOpen={() => setIsVisible(true)}\n      shouldClose={() => setIsVisible(false)}\n      position={\"right\"}\n      enableFlip={true}\n      reference={reference}\n    >\n      {children}\n    </Popover>\n  );\n};\n","import type { PopoverProps } from \"@patternfly/react-core\";\nimport { Popover, TextContent } from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { RefObject, VoidFunctionComponent } from \"react\";\n\nexport type SuspendedPopoverProps = {\n  children?: PopoverProps[\"children\"];\n  reference?: RefObject<HTMLButtonElement>;\n};\n\nexport const SuspendedPopover: VoidFunctionComponent<SuspendedPopoverProps> = ({\n  children,\n  reference,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <Popover\n      alertSeverityVariant={\"warning\"}\n      headerIcon={<ExclamationTriangleIcon />}\n      headerContent={t(\"suspend_popover_title\")}\n      bodyContent={\n        <TextContent>\n          <p>{t(\"suspend_popover_body_1\")}</p>\n        </TextContent>\n      }\n      position={\"right\"}\n      reference={reference}\n    >\n      {children}\n    </Popover>\n  );\n};\n","import { useInterval } from \"@rhoas/app-services-ui-components\";\nimport { differenceInMinutes } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport type { Status } from \"ui-models/src/models/kafka\";\nimport type { StatusPopoverProps } from \"./components\";\nimport { StatusLabel, StatusPopover, SuspendedPopover } from \"./components\";\nimport { KafkaToPopoverMapping } from \"./types\";\n\nexport type KafkaInstanceStatusProps = {\n  status: Status;\n  createdAt: Date;\n  warningAfterMinutes?: number;\n  errorAfterMinutes?: number;\n} & Pick<StatusPopoverProps, \"onClickConnectionTabLink\" | \"onClickSupportLink\">;\n\n/**\n * A component to show the status of a Kafka instance combining the\n * `StatusPopover` with the `StatusLabel`, with automatic handling of which\n * statuses should have a companion popover.\n */\nexport const KafkaInstanceStatus: VoidFunctionComponent<\n  KafkaInstanceStatusProps\n> = ({\n  status,\n  createdAt,\n  warningAfterMinutes = 15,\n  errorAfterMinutes = 30,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n}) => {\n  const popoverStatus = KafkaToPopoverMapping[status];\n  const [alert, setAlert] = useState<\"warning\" | \"error\" | false>(false);\n  const labelRef = useRef<HTMLButtonElement>(null);\n\n  const checkCreatedAt = useCallback(() => {\n    const elapsed = differenceInMinutes(new Date(), createdAt);\n    if (elapsed > errorAfterMinutes) {\n      setAlert(\"error\");\n    } else if (elapsed > warningAfterMinutes) {\n      setAlert(\"warning\");\n    } else {\n      setAlert(false);\n    }\n  }, [createdAt, errorAfterMinutes, warningAfterMinutes]);\n\n  useInterval(checkCreatedAt, 5000);\n  const showWarning = alert === \"warning\";\n  const showError = alert === \"error\";\n  return (\n    <>\n      {popoverStatus === \"suspended\" ? (\n        <SuspendedPopover reference={labelRef} />\n      ) : (\n        popoverStatus && (\n          <StatusPopover\n            status={popoverStatus}\n            showWarning={showWarning}\n            showError={showError}\n            onClickConnectionTabLink={onClickConnectionTabLink}\n            onClickSupportLink={onClickSupportLink}\n            reference={labelRef}\n          />\n        )\n      )}\n      <StatusLabel\n        value={status}\n        showWarning={showWarning}\n        showError={showError}\n        withPopover={popoverStatus !== undefined}\n        ref={labelRef}\n      />\n    </>\n  );\n};\n","import { Button, PageSection, Stack, StackItem } from \"@patternfly/react-core\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  FormatDate,\n  TableView,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport type { Kafka, SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { DeletingStatuses } from \"ui-models/src/models/kafka\";\nimport { useKafkaLabels } from \"../../hooks\";\nimport { KafkaInstanceActions } from \"../KafkaInstanceActions\";\nimport { KafkaInstanceStatus } from \"../KafkaInstanceStatus\";\nimport type {\n  EmptyStateNoInstancesProps,\n  EmptyStateNoResultsProps,\n} from \"./components\";\nimport { EmptyStateNoInstances, EmptyStateNoResults } from \"./components\";\n\nconst StandardColumns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"provider\",\n  \"region\",\n  \"status\",\n] as const;\n\nconst DedicatedColumns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"clusterId\",\n  \"status\",\n] as const;\n\nexport type KafkaInstancesProps = {\n  columns: \"standard\" | \"dedicated\";\n  instances: Array<Kafka> | undefined | null;\n  getUrlForInstance: (row: Kafka) => string;\n  names: string[];\n  owners: string[];\n  statuses: string[];\n  onCreate: () => void;\n  onSearchName: (value: string) => void;\n  onRemoveNameChip: (value: string) => void;\n  onRemoveNameChips: () => void;\n  onSearchOwner: (value: string) => void;\n  onRemoveOwnerChip: (value: string) => void;\n  onRemoveOwnerChips: () => void;\n  onSearchStatus: (value: SimplifiedStatus) => void;\n  onRemoveStatusChip: (value: SimplifiedStatus) => void;\n  onRemoveStatusChips: () => void;\n  onDetails: (row: Kafka) => void;\n  onConnection: (row: Kafka) => void;\n  canChangeOwner: (row: Kafka) => boolean;\n  onChangeOwner: (row: Kafka) => void;\n  canDelete: (row: Kafka) => boolean;\n  onDelete: (row: Kafka) => void;\n  onClickConnectionTabLink: (row: Kafka) => void;\n  onClickSupportLink: () => void;\n  onInstanceLinkClick: (row: Kafka) => void;\n  canHaveInstanceLink: (row: Kafka) => boolean;\n  canOpenConnection: (row: Kafka) => boolean;\n} & Pick<\n  TableViewProps<\n    Kafka,\n    (typeof StandardColumns | typeof DedicatedColumns)[number]\n  >,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n> &\n  Partial<\n    Pick<\n      TableViewProps<\n        Kafka,\n        (typeof StandardColumns | typeof DedicatedColumns)[number]\n      >,\n      \"emptyStateNoData\"\n    >\n  > &\n  EmptyStateNoInstancesProps &\n  EmptyStateNoResultsProps;\n\nexport const KafkaInstances = <\n  Columns extends typeof StandardColumns | typeof DedicatedColumns\n>({\n  columns,\n  instances,\n  itemCount,\n  page,\n  perPage,\n  names,\n  owners,\n  statuses,\n  getUrlForInstance,\n  isRowSelected,\n  isColumnSortable,\n  onPageChange,\n  onDetails,\n  onConnection,\n  canChangeOwner,\n  onChangeOwner,\n  canDelete,\n  onDelete,\n  onCreate,\n  onQuickstartGuide,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n  onInstanceLinkClick,\n  onSearchName,\n  onRemoveNameChip,\n  onRemoveNameChips,\n  onSearchOwner,\n  onRemoveOwnerChip,\n  onRemoveOwnerChips,\n  onSearchStatus,\n  onRemoveStatusChip,\n  onRemoveStatusChips,\n  onClearAllFilters,\n  emptyStateNoData,\n  canHaveInstanceLink,\n  canOpenConnection,\n}: KafkaInstancesProps) => {\n  const { t } = useTranslation(\"kafka\");\n  const labels = useKafkaLabels();\n  const breakpoint = \"lg\";\n\n  const isFiltered =\n    names.length > 0 || owners.length > 0 || statuses.length > 0;\n\n  return (\n    <PageSection isFilled={true}>\n      <TableView\n        data={instances}\n        columns={columns === \"standard\" ? StandardColumns : DedicatedColumns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          const timeCreatedDate = parseISO(row.createdAt);\n          const instanceLinkEnable = canHaveInstanceLink(row);\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"name\":\n                    return (\n                      <Button\n                        variant=\"link\"\n                        component={(props) => (\n                          <Link to={getUrlForInstance(row)} {...props}>\n                            {row.name}\n                          </Link>\n                        )}\n                        isInline={true}\n                        isAriaDisabled={!instanceLinkEnable}\n                        isDisabled={!instanceLinkEnable}\n                        onClick={() => onInstanceLinkClick(row)}\n                      />\n                    );\n                  case \"provider\":\n                    return labels.providers[row.provider];\n                  case \"createdAt\":\n                    return (\n                      <Stack>\n                        <StackItem>\n                          <FormatDate\n                            date={timeCreatedDate}\n                            format={\"distanceToNowWithAgo\"}\n                          />\n                        </StackItem>\n                        {row.expiryDate && (\n                          <StackItem>\n                            <Trans\n                              i18nKey=\"will_expire_short\"\n                              ns={[\"kafka\"]}\n                              components={{\n                                time: (\n                                  <FormatDate\n                                    date={parseISO(row.expiryDate)}\n                                    format=\"expiration\"\n                                  />\n                                ),\n                              }}\n                            />\n                          </StackItem>\n                        )}\n                      </Stack>\n                    );\n                  case \"status\":\n                    return (\n                      <KafkaInstanceStatus\n                        status={row[\"status\"]}\n                        createdAt={timeCreatedDate}\n                        onClickConnectionTabLink={() =>\n                          onClickConnectionTabLink(row)\n                        }\n                        onClickSupportLink={onClickSupportLink}\n                      />\n                    );\n                  case \"clusterId\":\n                    return row.clusterId;\n                  default:\n                    return row[column];\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row }) => {\n          const changeOwnerEnabled = canChangeOwner(row);\n          const deleteEnabled = canDelete(row);\n          const openConnectionEnabled = canOpenConnection(row);\n          return (\n            <KafkaInstanceActions\n              onDetails={() => onDetails(row)}\n              onConnection={() => onConnection(row)}\n              canOpenConnection={openConnectionEnabled}\n              canChangeOwner={changeOwnerEnabled}\n              onChangeOwner={() => onChangeOwner(row)}\n              canDelete={deleteEnabled}\n              onDelete={() => onDelete(row)}\n            />\n          );\n        }}\n        onRowClick={({ row }) => onDetails(row)}\n        isColumnSortable={isColumnSortable}\n        isRowSelected={isRowSelected}\n        isRowDeleted={({ row }) => DeletingStatuses.includes(row[\"status\"])}\n        toolbarBreakpoint={breakpoint}\n        filters={{\n          [labels.fields.name]: {\n            type: \"search\",\n            chips: names,\n            onSearch: onSearchName,\n            onRemoveChip: onRemoveNameChip,\n            onRemoveGroup: onRemoveNameChips,\n            validate: (value) => /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(value),\n            errorMessage: t(\"kafka:input_field_invalid_message\"),\n          },\n          [labels.fields.owner]: {\n            type: \"search\",\n            chips: owners,\n            onSearch: onSearchOwner,\n            onRemoveChip: onRemoveOwnerChip,\n            onRemoveGroup: onRemoveOwnerChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"kafka:input_field_invalid_message\"),\n          },\n          [labels.fields.status]: {\n            type: \"checkbox\",\n            chips: statuses,\n            options: labels.statusesSimplified,\n            onToggle: onSearchStatus,\n            onRemoveChip: onRemoveStatusChip,\n            onRemoveGroup: onRemoveStatusChips,\n          },\n        }}\n        actions={[\n          {\n            label: t(\"create_instance\"),\n            onClick: onCreate,\n            isPrimary: true,\n          },\n        ]}\n        itemCount={itemCount}\n        page={page}\n        perPage={perPage}\n        onPageChange={onPageChange}\n        onClearAllFilters={onClearAllFilters}\n        ariaLabel={t(\"table.title\")}\n        isFiltered={isFiltered}\n        emptyStateNoData={\n          emptyStateNoData || (\n            <EmptyStateNoInstances\n              onCreate={onCreate}\n              onQuickstartGuide={onQuickstartGuide}\n            />\n          )\n        }\n        emptyStateNoResults={\n          <EmptyStateNoResults onClearAllFilters={onClearAllFilters} />\n        }\n      />\n    </PageSection>\n  );\n};\n","import type { DatePickerProps, TimePickerProps } from \"@patternfly/react-core\";\nimport { DatePicker, InputGroup, TimePicker } from \"@patternfly/react-core\";\nimport { formatISO, parseISO, setHours, setMinutes } from \"date-fns\";\nimport { formatInTimeZone } from \"date-fns-tz\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { DateIsoString } from \"../../../../../ui-models/src/types\";\n\nexport type DateTimePickerProps = {\n  isDisabled: boolean;\n  value: DateIsoString | undefined;\n  onChange: (value: DateIsoString) => void;\n};\nexport const DateTimePicker: VoidFunctionComponent<DateTimePickerProps> = ({\n  isDisabled,\n  value,\n  onChange,\n}) => {\n  const [timeSelected, setIsTimeSelected] = useState(false);\n  const date = value ? parseISO(value) : undefined;\n\n  const onSelectCalendar: DatePickerProps[\"onChange\"] = (_, newDate) => {\n    if (newDate) {\n      onChange(formatISO(newDate) as DateIsoString);\n    }\n  };\n\n  const onSelectTime: TimePickerProps[\"onChange\"] = (\n    time,\n    hour,\n    minute,\n    __,\n    isValid\n  ) => {\n    if (\n      isValid &&\n      date &&\n      hour != undefined &&\n      hour > 0 &&\n      (time.includes(\"AM\") || time.includes(\"PM\"))\n    ) {\n      let newDate = date;\n      if (hour !== undefined) {\n        newDate = setHours(newDate, hour);\n      }\n      if (minute !== undefined) {\n        newDate = setMinutes(newDate, minute);\n      }\n\n      onChange(formatISO(newDate) as DateIsoString);\n      setIsTimeSelected(true);\n    }\n  };\n\n  return (\n    <InputGroup>\n      <DatePicker\n        isDisabled={isDisabled}\n        value={date ? formatInTimeZone(date, \"UTC\", \"yyyy-MM-dd\") : undefined}\n        onChange={onSelectCalendar}\n      />\n      <TimePicker\n        isDisabled={!date || isDisabled}\n        time={timeSelected ? date : undefined}\n        onChange={onSelectTime}\n      />\n    </InputGroup>\n  );\n};\n","import {\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  DropdownSeparator,\n  DropdownToggle,\n  InputGroup,\n  TextInput,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { DateIsoString } from \"../../../../../ui-models/src/types\";\nimport { DateTimePicker } from \"./DateTimePicker\";\n\ntype Category = \"offset\" | \"timestamp\" | \"epoch\" | \"latest\";\nexport type FilterGroupProps = {\n  isDisabled: boolean;\n  offset: number | undefined;\n  epoch: number | undefined;\n  timestamp: DateIsoString | undefined;\n  onOffsetChange: (value: number | undefined) => void;\n  onTimestampChange: (value: DateIsoString | undefined) => void;\n  onEpochChange: (value: number | undefined) => void;\n  onLatest: () => void;\n};\nexport const FilterGroup: VoidFunctionComponent<FilterGroupProps> = ({\n  isDisabled,\n  offset,\n  epoch,\n  timestamp,\n  onOffsetChange,\n  onTimestampChange,\n  onEpochChange,\n  onLatest,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [currentCategory, setCurrentCategory] = useState<Category>(\"latest\");\n  const [isOpen, setIsOpen] = useState(false);\n  const labels: { [key in Category]: string } = {\n    offset: t(\"filter.offset\"),\n    timestamp: t(\"filter.timestamp\"),\n    epoch: t(\"filter.epoch\"),\n    latest: t(\"filter.latest\"),\n  };\n  return (\n    <ToolbarItem>\n      <InputGroup>\n        <Dropdown\n          data-testid={\"filter-group-dropdown\"}\n          toggle={\n            <DropdownToggle\n              onToggle={setIsOpen}\n              isDisabled={isDisabled}\n              data-testid={\"filter-group\"}\n            >\n              {labels[currentCategory]}\n            </DropdownToggle>\n          }\n          position={DropdownPosition.left}\n          isOpen={isOpen}\n          onSelect={() => setIsOpen(false)}\n          dropdownItems={[\n            <DropdownItem\n              key=\"offset\"\n              value=\"offset\"\n              autoFocus={currentCategory === \"offset\"}\n              onClick={() => setCurrentCategory(\"offset\")}\n            >\n              {labels[\"offset\"]}\n            </DropdownItem>,\n            <DropdownItem\n              key=\"timestamp\"\n              value=\"timestamp\"\n              autoFocus={currentCategory === \"timestamp\"}\n              onClick={() => setCurrentCategory(\"timestamp\")}\n            >\n              {labels[\"timestamp\"]}\n            </DropdownItem>,\n            <DropdownItem\n              key=\"epoch\"\n              value=\"epoch\"\n              autoFocus={currentCategory === \"epoch\"}\n              onClick={() => setCurrentCategory(\"epoch\")}\n            >\n              {labels[\"epoch\"]}\n            </DropdownItem>,\n            <DropdownSeparator key={\"divider\"} />,\n            <DropdownItem\n              key=\"latest\"\n              value=\"latest\"\n              autoFocus={currentCategory === \"latest\"}\n              onClick={() => {\n                setCurrentCategory(\"latest\");\n                onLatest();\n              }}\n            >\n              {labels[\"latest\"]}\n            </DropdownItem>,\n          ]}\n        />\n        {currentCategory === \"offset\" && (\n          <TextInput\n            isDisabled={isDisabled}\n            type={\"number\"}\n            aria-label={t(\"filter.offset_aria_label\")}\n            placeholder={t(\"filter.offset_placeholder\")}\n            onChange={(value) => {\n              if (value !== \"\") {\n                const newOffset = parseInt(value, 10);\n                if (Number.isInteger(newOffset)) {\n                  onOffsetChange(newOffset);\n                }\n              } else {\n                onOffsetChange(undefined);\n              }\n            }}\n            value={offset === undefined ? \"\" : offset}\n          />\n        )}\n        {currentCategory === \"timestamp\" && (\n          <DateTimePicker\n            isDisabled={isDisabled}\n            value={timestamp}\n            onChange={onTimestampChange}\n          />\n        )}\n        {currentCategory === \"epoch\" && (\n          <TextInput\n            isDisabled={isDisabled}\n            type={\"number\"}\n            aria-label={t(\"filter.epoch_aria_label\")}\n            placeholder={t(\"filter.epoch_placeholder\")}\n            className=\"pf-u-flex-basis-auto pf-u-flex-grow-0 pf-u-w-initial\"\n            size={t(\"filter.epoch_placeholder\").length}\n            onChange={(value) => {\n              if (value !== \"\" && Number(value) >= 0)\n                onEpochChange(Number(value));\n              else onEpochChange(undefined);\n            }}\n            value={epoch == undefined ? \"\" : epoch}\n          />\n        )}\n      </InputGroup>\n    </ToolbarItem>\n  );\n};\n","import {\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type LimitSelectorProps = {\n  value: number;\n  isDisabled: boolean;\n  onChange: (value: number) => void;\n};\nexport const LimitSelector: VoidFunctionComponent<LimitSelectorProps> = ({\n  value,\n  isDisabled,\n  onChange,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = (isOpen: boolean) => setIsOpen(isOpen);\n  const titleId = \"limit-selector\";\n\n  return (\n    <InputGroup>\n      <InputGroupText className=\"pf-c-content\">\n        {t(\"limit_label\")}\n      </InputGroupText>\n      <div>\n        <span id={titleId} hidden>\n          Select a state\n        </span>\n\n        <Select\n          aria-label={t(\"per_page_aria_label\")}\n          onToggle={toggleOpen}\n          selections={value !== undefined ? [t(\"limit\", { value })] : undefined}\n          isOpen={isOpen}\n          isDisabled={isDisabled}\n          onSelect={() => setIsOpen(false)}\n          data-testid={\"limit-selector\"}\n        >\n          {[10, 20, 50].map((value, idx) => (\n            <SelectOption\n              key={idx}\n              value={t(\"limit\", { value })}\n              onClick={() => onChange(value)}\n            />\n          ))}\n        </Select>\n      </div>\n    </InputGroup>\n  );\n};\n","import type { Message } from \"ui-models/src/models/message\";\n\nexport function isSameMessage(m1: Message, m2: Message) {\n  return JSON.stringify(m1) === JSON.stringify(m2);\n}\n\nexport function beautifyUnknownValue(value: string): string {\n  try {\n    return JSON.stringify(JSON.parse(value), null, 2);\n  } catch (e) {\n    // noop\n  }\n  return value;\n}\n\nexport function truncate(value: string, length: number): [string, boolean] {\n  const shouldTruncate = value.length > length;\n  return [\n    shouldTruncate ? `${value.substring(0, length)}...` : value,\n    shouldTruncate,\n  ];\n}\n","export enum RetentionTimeUnits {\n  MILLISECOND = \"milliseconds\",\n  SECOND = \"seconds\",\n  MINUTE = \"minutes\",\n  HOUR = \"hours\",\n  DAY = \"days\",\n  WEEK = \"weeks\",\n  CUSTOM = \"custom\",\n  UNLIMITED = \"unlimited\",\n}\n\nexport enum RetentionSizeUnits {\n  BYTE = \"bytes\",\n  KIBIBYTE = \"kibibytes\",\n  MEBIBYTE = \"mebibytes\",\n  GIBIBYTE = \"gibibytes\",\n  TEBIBYTE = \"tebibytes\",\n  CUSTOM = \"custom\",\n  UNLIMITED = \"unlimited\",\n}\n\nexport const unitsToBytes = {\n  [RetentionSizeUnits.BYTE]: BigInt(\"1\"),\n  [RetentionSizeUnits.KIBIBYTE]: BigInt(\"1024\"),\n  [RetentionSizeUnits.MEBIBYTE]: BigInt(\"1048576\"),\n  [RetentionSizeUnits.GIBIBYTE]: BigInt(\"1073741824\"),\n  [RetentionSizeUnits.TEBIBYTE]: BigInt(\"1099511627776\"),\n};\n\nexport const unitsToMilliSecond = {\n  [RetentionTimeUnits.MILLISECOND]: BigInt(\"1\"),\n  [RetentionTimeUnits.SECOND]: BigInt(\"1000\"),\n  [RetentionTimeUnits.MINUTE]: BigInt(\"60000\"),\n  [RetentionTimeUnits.HOUR]: BigInt(\"3600000\"),\n  [RetentionTimeUnits.DAY]: BigInt(\"86400000\"),\n};\n\ntype ConversionUnit = {\n  value: bigint;\n  unit: string;\n};\n\nexport const millisecondsToTime = (value: bigint): ConversionUnit => {\n  if (value) {\n    if (value % unitsToMilliSecond.days == BigInt(0))\n      return { value: value / unitsToMilliSecond.days, unit: \"days\" };\n    if (value % unitsToMilliSecond.hours == BigInt(0))\n      return { value: value / unitsToMilliSecond.hours, unit: \"hours\" };\n    if (value % unitsToMilliSecond.minutes == BigInt(0))\n      return { value: value / unitsToMilliSecond.minutes, unit: \"minutes\" };\n    if (value % unitsToMilliSecond.seconds == BigInt(0))\n      return { value: value / unitsToMilliSecond.seconds, unit: \"seconds\" };\n  }\n\n  return { value, unit: \"milliseconds\" };\n};\n\nexport const formattedRetentionTime = (time: bigint): string => {\n  const { unit, value } = millisecondsToTime(time);\n  return Number(value) === -1 ? \"Unlimited\" : `${time} ms (${value} ${unit})`;\n};\n\nexport const formattedRetentionSize = (size: bigint): string => {\n  const { unit, value } = bytesToMemorySize(size);\n  return Number(value) === -1\n    ? \"Unlimited\"\n    : `${size} bytes (${value} ${unit})`;\n};\n\nexport const bytesToMemorySize = (value: bigint): ConversionUnit => {\n  if (value) {\n    if (value % unitsToBytes.tebibytes == BigInt(0))\n      return { value: value / unitsToBytes.tebibytes, unit: \"tebibytes\" };\n    if (value % unitsToBytes.gibibytes == BigInt(0))\n      return { value: value / unitsToBytes.gibibytes, unit: \"gibibytes\" };\n    if (value % unitsToBytes.mebibytes == BigInt(0))\n      return { value: value / unitsToBytes.mebibytes, unit: \"mebibytes\" };\n    if (value % unitsToBytes.kibibytes == BigInt(0))\n      return { value: value / unitsToBytes.kibibytes, unit: \"kibibytes\" };\n  }\n\n  return { value, unit: \"bytes\" };\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type NoDataCellProps = {\n  columnLabel: string;\n};\nexport const NoDataCell: VoidFunctionComponent<NoDataCellProps> = ({\n  columnLabel,\n}) => {\n  const { t } = useTranslation(\"common\");\n  return (\n    <span className=\"pf-u-color-400\">\n      {t(\"table_cell_no_data\", { column: columnLabel })}\n    </span>\n  );\n};\n","import {\n  ClipboardCopy,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelContent,\n  Flex,\n  FlexItem,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { FormatDate, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport { beautifyUnknownValue } from \"../utils\";\nimport { NoDataCell } from \"./NoDataCell\";\n\nexport type MessageDetailsProps = {\n  onClose: () => void;\n  defaultTab: MessageDetailsBodyProps[\"defaultTab\"];\n  message: Message | undefined;\n};\nexport const MessageDetails: VoidFunctionComponent<MessageDetailsProps> = ({\n  onClose,\n  defaultTab,\n  message,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n\n  return (\n    <DrawerPanelContent isResizable={true} minSize={\"400px\"}>\n      <DrawerHead>\n        <TextContent>\n          <Text component={TextVariants.h2}>{t(\"message\")}</Text>\n        </TextContent>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerContentBody>\n        {message && (\n          <MessageDetailsBody\n            defaultTab={defaultTab}\n            messageKey={message.key}\n            {...message}\n          />\n        )}\n      </DrawerContentBody>\n    </DrawerPanelContent>\n  );\n};\n\nexport type MessageDetailsBodyProps = {\n  defaultTab: \"value\" | \"headers\";\n  messageKey: Message[\"key\"];\n} & Omit<Message, \"key\">;\n\nexport const MessageDetailsBody: VoidFunctionComponent<\n  MessageDetailsBodyProps\n> = ({ defaultTab, ...message }) => {\n  const { t } = useTranslation(\"message-browser\");\n\n  return (\n    <Flex direction={{ default: \"column\" }} data-testid={\"message-details\"}>\n      <FlexItem>\n        <DescriptionList isHorizontal isCompact>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.partition\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.partition}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.offset\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.offset}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.timestamp\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.timestamp ? (\n                <FormatDate\n                  date={parseISO(message.timestamp)}\n                  format={\"longWithMilliseconds\"}\n                />\n              ) : (\n                <NoDataCell columnLabel={t(\"field.timestamp\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.epoch\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.timestamp ? (\n                <FormatDate\n                  date={parseISO(message.timestamp)}\n                  format={\"epoch\"}\n                />\n              ) : (\n                <NoDataCell columnLabel={t(\"field.epoch\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.key\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.messageKey ? (\n                message.messageKey\n              ) : (\n                <NoDataCell columnLabel={t(\"field.key\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n        </DescriptionList>\n      </FlexItem>\n      <FlexItem>\n        {/* set key to be a random number to force redraw the tabs in order to change the active tab from the outside */}\n        <Tabs defaultActiveKey={defaultTab} key={Math.random()}>\n          <Tab\n            eventKey={\"value\"}\n            title={<TabTitleText>{t(\"field.value\")}</TabTitleText>}\n          >\n            <ClipboardCopy isCode={true} isExpanded={true} isReadOnly={true}>\n              {beautifyUnknownValue(message.value || \"\")}\n            </ClipboardCopy>\n          </Tab>\n          <Tab\n            eventKey={\"headers\"}\n            title={<TabTitleText>{t(\"field.headers\")}</TabTitleText>}\n          >\n            <ClipboardCopy isCode={true} isExpanded={true} isReadOnly={true}>\n              {beautifyUnknownValue(JSON.stringify(message.headers) || \"\")}\n            </ClipboardCopy>\n          </Tab>\n        </Tabs>\n      </FlexItem>\n    </Flex>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const NoDataEmptyState: VoidFunctionComponent<{\n  onRefresh: () => void;\n}> = ({ onRefresh }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {t(\"no_data_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_data_body\")}</EmptyStateBody>\n      <Button onClick={onRefresh}>{t(\"no_data_refresh\")}</Button>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const NoResultsEmptyState: VoidFunctionComponent<{\n  onReset: () => void;\n}> = ({ onReset }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {t(\"no_results_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_results_body\")}</EmptyStateBody>\n      <Button variant={\"link\"} onClick={onReset}>\n        {t(\"no_results_reset\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { Text, TextContent } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const OffsetRange: VoidFunctionComponent<{\n  min: number;\n  max: number;\n}> = ({ min, max }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <TextContent className=\"pf-u-font-size\">\n      <Text>\n        {t(\"offset\")} <span className=\"custom-text\">{min}</span> -{\" \"}\n        <span className=\"custom-text\">{max}</span>\n      </Text>\n    </TextContent>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  InputGroup,\n  InputGroupText,\n  InputGroupTextVariant,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nconst MAX_OPTIONS = 20;\n\nexport type PartitionSelectorProps = {\n  value: number | undefined;\n  partitions: number | undefined;\n  isDisabled: boolean;\n  onChange: (value: number | undefined) => void;\n};\nexport const PartitionSelector: VoidFunctionComponent<\n  PartitionSelectorProps\n> = ({ value, partitions, isDisabled, onChange }) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = (isOpen: boolean) => setIsOpen(isOpen);\n  const titleId = \"partition-selector\";\n\n  const handleChange = useCallback(\n    (value: string) => {\n      if (value !== \"\") {\n        const valueAsNum = parseInt(value, 10);\n        if (Number.isInteger(valueAsNum)) {\n          onChange(valueAsNum);\n        }\n      }\n      setIsOpen(false);\n    },\n    [onChange]\n  );\n\n  const allPartitions = useMemo(() => {\n    return new Array(partitions).fill(0).map((_, index) => index.toString());\n  }, [partitions]);\n\n  const makeOptions = useCallback(\n    (values: string[]) => {\n      const options = values\n        .slice(0, MAX_OPTIONS)\n        .map((v) => <SelectOption key={v} value={v} />);\n      const hiddenOptionsCount = values.length - options.length;\n      return hiddenOptionsCount\n        ? [\n            ...options,\n            <SelectOption\n              key={\"more-info\"}\n              isDisabled={true}\n              description={t(\"partitions_hidden\", {\n                count: hiddenOptionsCount,\n              })}\n            />,\n          ]\n        : options;\n    },\n    [t]\n  );\n\n  const options = useMemo(() => {\n    return makeOptions(allPartitions);\n  }, [allPartitions, makeOptions]);\n\n  const handleFilter: SelectProps[\"onFilter\"] = useCallback(\n    (_, filter: string) => {\n      if (filter !== \"\") {\n        return makeOptions(\n          allPartitions.filter((partition) => partition.includes(filter))\n        );\n      }\n      return options;\n    },\n    [allPartitions, makeOptions, options]\n  );\n\n  return (\n    <InputGroup>\n      <InputGroupText className=\"pf-c-content\">\n        {t(\"field.partition\")}\n      </InputGroupText>\n      <div>\n        <span id={titleId} hidden>\n          {t(\"select_partition_aria_label\")}\n        </span>\n        <Select\n          variant={SelectVariant.typeahead}\n          typeAheadAriaLabel={t(\"select_partition_typeahead\")}\n          onToggle={toggleOpen}\n          onSelect={(_, value) => handleChange(value as string)}\n          selections={value !== undefined ? [`${value}`] : undefined}\n          isOpen={isOpen}\n          aria-labelledby={titleId}\n          maxHeight={200}\n          width={150}\n          onFilter={handleFilter}\n          isInputValuePersisted={false}\n          isDisabled={isDisabled}\n          placeholderText={t(\"partition_placeholder\")}\n          onClear={() => onChange(undefined)}\n          data-testid={\"partition-selector\"}\n        >\n          {options}\n        </Select>\n      </div>\n      <InputGroupText\n        id={`${titleId}-input`}\n        variant={InputGroupTextVariant.plain}\n        className=\"pf-c-content\"\n      >\n        {t(\"select_partition_of_count\", { partitions })}\n      </InputGroupText>\n    </InputGroup>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { truncate } from \"../utils\";\nimport { Flex, FlexItem } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nconst PREVIEW_LENGTH = 170;\n\nexport type UnknownValuePreviewProps = {\n  value: string;\n  truncateAt?: number;\n  onClick?: () => void;\n};\nexport const UnknownValuePreview: VoidFunctionComponent<\n  UnknownValuePreviewProps\n> = ({ value, truncateAt = PREVIEW_LENGTH, onClick }) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [preview, truncated] = truncate(value, truncateAt);\n  return (\n    <Flex\n      direction={{ default: \"column\" }}\n      spaceItems={{ default: \"spaceItemsXs\" }}\n    >\n      <FlexItem>{preview}</FlexItem>\n      {truncated && (\n        <FlexItem>\n          <a\n            onClick={\n              onClick\n                ? (e) => {\n                    e.stopPropagation();\n                    onClick();\n                  }\n                : undefined\n            }\n          >\n            {t(\"show_more\")}\n          </a>\n        </FlexItem>\n      )}\n    </Flex>\n  );\n};\n","import type { Message } from \"ui-models/src/models/message\";\nimport { assign, createMachine } from \"xstate\";\nimport type { DateIsoString } from \"../../../../ui-models/src/types\";\nimport { isSameMessage } from \"./utils\";\n\nexport type MessageApiResponse = {\n  lastUpdated: Date;\n  messages: Message[];\n  partitions: number;\n  offsetMin: number;\n  offsetMax: number;\n\n  filter: {\n    partition: number | undefined;\n    offset: number | undefined;\n    timestamp: DateIsoString | undefined;\n    limit: number | undefined;\n    epoch: number | undefined;\n  };\n};\n\nexport const MessageBrowserMachine = createMachine(\n  {\n    id: \"message-browser\",\n    predictableActionArguments: true,\n    tsTypes: {} as import(\"./MessageBrowserMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as {\n        // response\n        response: MessageApiResponse | undefined;\n\n        limit: number;\n        // optional input\n        partition: number | undefined;\n        offset: number | undefined;\n        epoch: number | undefined;\n        timestamp: DateIsoString | undefined;\n        selectedMessage: Message | undefined;\n      },\n      events: {} as\n        | {\n            type: \"fetchSuccess\";\n            messages: Message[];\n            partitions: number;\n            offsetMin: number;\n            offsetMax: number;\n          }\n        | { type: \"fetchFail\" }\n        | { type: \"refresh\" }\n        | { type: \"setPartition\"; value: number | undefined }\n        | { type: \"setOffset\"; value: number | undefined }\n        | { type: \"setTimestamp\"; value: DateIsoString | undefined }\n        | { type: \"setEpoch\"; value: number | undefined }\n        | { type: \"setLatest\" }\n        | { type: \"setLimit\"; value: number }\n        | { type: \"selectMessage\"; message: Message }\n        | { type: \"deselectMessage\" },\n    },\n    initial: \"initialLoading\",\n    context: {\n      // response\n      response: undefined,\n\n      limit: 10,\n      // optional input\n      partition: undefined,\n      offset: undefined,\n      timestamp: undefined,\n      selectedMessage: undefined,\n      epoch: undefined,\n    },\n    states: {\n      initialLoading: {\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMessages\",\n            target: \"verifyMessages\",\n          },\n          fetchFail: \"error\",\n        },\n      },\n      verifyMessages: {\n        always: [{ cond: \"noMessages\", target: \"noData\" }, { target: \"ready\" }],\n      },\n      noData: {\n        on: {\n          refresh: \"initialLoading\",\n        },\n      },\n      error: {\n        on: {\n          refresh: \"initialLoading\",\n        },\n      },\n      ready: {\n        initial: \"pristine\",\n        states: {\n          pristine: {},\n          dirty: {\n            tags: \"dirty\",\n          },\n          shouldSearch: {\n            always: [\n              {\n                cond: \"areFiltersChanged\",\n                target: \"dirty\",\n              },\n              { target: \"pristine\" },\n            ],\n          },\n        },\n        always: [\n          {\n            cond: \"selectedMessageNotAvailable\",\n            actions: \"deselectMessage\",\n          },\n        ],\n        on: {\n          refresh: \"refreshing\",\n          setPartition: {\n            target: \".shouldSearch\",\n            actions: \"setPartition\",\n          },\n          setEpoch: {\n            actions: \"setEpoch\",\n            target: \".shouldSearch\",\n          },\n          setTimestamp: {\n            target: \".shouldSearch\",\n            actions: \"setTimestamp\",\n          },\n          setOffset: {\n            target: \".shouldSearch\",\n            actions: \"setOffset\",\n          },\n          setLatest: {\n            target: \".shouldSearch\",\n            actions: \"setLatest\",\n          },\n          setLimit: {\n            target: \".shouldSearch\",\n            actions: \"setLimit\",\n          },\n          selectMessage: {\n            actions: \"selectMessage\",\n          },\n          deselectMessage: {\n            actions: \"deselectMessage\",\n          },\n        },\n      },\n      refreshing: {\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMessages\",\n            target: \"ready\",\n          },\n          fetchFail: {\n            target: \"ready\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setMessages: assign(\n        (context, { messages, partitions, offsetMin, offsetMax }) => ({\n          response: {\n            lastUpdated: new Date(),\n            messages,\n            partitions,\n            offsetMin,\n            offsetMax,\n            filter: {\n              partition: context.partition,\n              timestamp: context.timestamp,\n              offset: context.offset,\n              limit: context.limit,\n              epoch: context.epoch,\n            },\n          },\n        })\n      ),\n      setPartition: assign((_, { value }) => ({ partition: value })),\n      setEpoch: assign((_, { value }) => ({\n        epoch: value,\n      })),\n      setTimestamp: assign((_, { value }) => ({\n        timestamp: value,\n      })),\n      setOffset: assign((_, { value }) => ({\n        offset: value,\n      })),\n      setLimit: assign((_, { value }) => ({\n        limit: value,\n      })),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      setLatest: assign((_) => ({\n        timestamp: undefined,\n        offset: undefined,\n      })),\n      selectMessage: assign((_, { message }) => ({ selectedMessage: message })),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      deselectMessage: assign((_) => ({ selectedMessage: undefined })),\n    },\n    guards: {\n      noMessages: ({ response }) =>\n        response === undefined || response.messages.length === 0,\n      selectedMessageNotAvailable: ({ response, selectedMessage }) =>\n        selectedMessage !== undefined &&\n        response?.messages.find((m) => isSameMessage(m, selectedMessage)) ===\n          undefined,\n      areFiltersChanged: (context) =>\n        context.response?.filter.limit !== context.limit ||\n        context.response?.filter.offset !== context.offset ||\n        context.response?.filter.partition !== context.partition ||\n        context.response?.filter.timestamp !== context.timestamp ||\n        context.response?.filter.epoch !== context.epoch,\n    },\n  }\n);\n","import {\n  Button,\n  Drawer,\n  DrawerContent,\n  PageSection,\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup,\n} from \"@patternfly/react-core\";\nimport { FilterIcon, SearchIcon } from \"@patternfly/react-icons\";\nimport type { BaseCellProps } from \"@patternfly/react-table\";\nimport {\n  InnerScrollContainer,\n  OuterScrollContainer,\n} from \"@patternfly/react-table\";\nimport {\n  FormatDate,\n  Loading,\n  RefreshButton,\n  ResponsiveTable,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport { useMachine } from \"@xstate/react\";\nimport { parseISO } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useMemo, useState } from \"react\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport type { DateIsoString } from \"../../../../ui-models/src/types\";\nimport type { MessageDetailsProps } from \"./components\";\nimport {\n  FilterGroup,\n  LimitSelector,\n  MessageDetails,\n  NoDataCell,\n  NoDataEmptyState,\n  NoResultsEmptyState,\n  OffsetRange,\n  PartitionSelector,\n  UnknownValuePreview,\n} from \"./components\";\nimport \"./KafkaMessageBrowser.css\";\nimport type { MessageApiResponse } from \"./MessageBrowserMachine\";\nimport { MessageBrowserMachine } from \"./MessageBrowserMachine\";\nimport { beautifyUnknownValue, isSameMessage } from \"./utils\";\n\nconst columns = [\n  \"partition\",\n  \"offset\",\n  \"timestamp\",\n  \"key\",\n  \"headers\",\n  \"value\",\n] as const;\n\nconst columnWidths: BaseCellProps[\"width\"][] = [10, 10, 15, 10, undefined, 30];\n\nexport type KafkaMessageBrowserProps = {\n  getMessages: (props: {\n    partition?: number;\n    offset?: number;\n    timestamp?: DateIsoString;\n    limit: number;\n  }) => Promise<{ messages: Message[]; partitions: number }>;\n};\nexport const KafkaMessageBrowser: VoidFunctionComponent<\n  KafkaMessageBrowserProps\n> = ({ getMessages }) => {\n  const [state, send] = useMachine(() => MessageBrowserMachine, {\n    devTools: true,\n    services: {\n      api: (context) => {\n        return (send) => {\n          getMessages({\n            partition: context.partition,\n            offset: context.offset,\n            timestamp: context.timestamp,\n            limit: context.limit,\n          })\n            .then(({ messages, partitions }) =>\n              send({\n                type: \"fetchSuccess\",\n                messages,\n                partitions,\n                offsetMin: context.offset || 0,\n                offsetMax: messages.reduce(\n                  (max, m) => Math.max(max, m.offset || 0),\n                  0\n                ),\n              })\n            )\n            .catch(() => send({ type: \"fetchFail\" }));\n        };\n      },\n    },\n  });\n\n  return (\n    <KafkaMessageBrowserConnected\n      isFirstLoad={state.matches(\"initialLoading\")}\n      isNoData={state.matches(\"noData\") || state.matches(\"error\")}\n      isRefreshing={state.matches(\"refreshing\")}\n      requiresSearch={state.hasTag(\"dirty\")}\n      selectedMessage={state.context.selectedMessage}\n      response={state.context.response}\n      lastUpdated={state.context.response?.lastUpdated}\n      partition={state.context.partition}\n      limit={state.context.limit}\n      filterOffset={state.context.offset}\n      filterEpoch={state.context.epoch}\n      filterTimestamp={state.context.timestamp}\n      setPartition={(value: number | undefined) =>\n        send({ type: \"setPartition\", value })\n      }\n      setOffset={(value: number | undefined) =>\n        send({ type: \"setOffset\", value })\n      }\n      setTimestamp={(value: DateIsoString | undefined) =>\n        send({ type: \"setTimestamp\", value })\n      }\n      setEpoch={(value: number | undefined) =>\n        send({ type: \"setEpoch\", value })\n      }\n      setLatest={() => send({ type: \"setLatest\" })}\n      setLimit={(value: number) => send({ type: \"setLimit\", value })}\n      refresh={() => send({ type: \"refresh\" })}\n      selectMessage={(message: Message) =>\n        send({ type: \"selectMessage\", message })\n      }\n      deselectMessage={() => send({ type: \"deselectMessage\" })}\n    />\n  );\n};\n\nexport type KafkaMessageBrowserConnectedProps = {\n  isFirstLoad: boolean;\n  isNoData: boolean;\n  isRefreshing: boolean;\n  requiresSearch: boolean;\n  selectedMessage: Message | undefined;\n  lastUpdated: Date | undefined;\n  response: MessageApiResponse | undefined;\n  partition: number | undefined;\n  limit: number;\n  filterOffset: number | undefined;\n  filterEpoch: number | undefined;\n  filterTimestamp: DateIsoString | undefined;\n  setPartition: (value: number | undefined) => void;\n  setOffset: (value: number | undefined) => void;\n  setTimestamp: (value: DateIsoString | undefined) => void;\n  setEpoch: (value: number | undefined) => void;\n  setLatest: () => void;\n  setLimit: (value: number) => void;\n  refresh: () => void;\n  selectMessage: (message: Message) => void;\n  deselectMessage: () => void;\n};\nexport const KafkaMessageBrowserConnected: VoidFunctionComponent<\n  KafkaMessageBrowserConnectedProps\n> = ({\n  isFirstLoad,\n  isNoData,\n  isRefreshing,\n  requiresSearch,\n  selectedMessage,\n  response,\n  partition,\n  limit,\n  filterOffset,\n  filterEpoch,\n  filterTimestamp,\n  setPartition,\n  setOffset,\n  setTimestamp,\n  setEpoch,\n  setLatest,\n  setLimit,\n  refresh,\n  selectMessage,\n  deselectMessage,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [defaultTab, setDefaultTab] =\n    useState<MessageDetailsProps[\"defaultTab\"]>(\"value\");\n\n  const columnLabels: { [key in typeof columns[number]]: string } = useMemo(\n    () =>\n      ({\n        partition: t(\"field.partition\"),\n        offset: t(\"field.offset\"),\n        timestamp: t(\"field.timestamp\"),\n        key: t(\"field.key\"),\n        value: t(\"field.value\"),\n        headers: t(\"field.headers\"),\n      } as const),\n    [t]\n  );\n\n  switch (true) {\n    case isFirstLoad:\n      return <Loading />;\n    case isNoData:\n      return <NoDataEmptyState onRefresh={refresh} />;\n    default:\n      return (\n        <PageSection\n          isFilled={true}\n          hasOverflowScroll={true}\n          aria-label={\"TODO\"}\n        >\n          <Drawer isInline={true} isExpanded={selectedMessage !== undefined}>\n            <DrawerContent\n              panelContent={\n                <MessageDetails\n                  message={selectedMessage}\n                  defaultTab={defaultTab}\n                  onClose={deselectMessage}\n                />\n              }\n            >\n              <OuterScrollContainer>\n                <Toolbar\n                  className={\"mas-KafkaMessageBrowser-Toolbar\"}\n                  data-testid={\"message-browser-toolbar\"}\n                >\n                  <ToolbarContent>\n                    <ToolbarToggleGroup\n                      toggleIcon={<FilterIcon />}\n                      breakpoint=\"2xl\"\n                    >\n                      <ToolbarGroup variant=\"filter-group\">\n                        <ToolbarItem>\n                          <PartitionSelector\n                            value={partition}\n                            partitions={response?.partitions || 0}\n                            onChange={setPartition}\n                            isDisabled={isRefreshing}\n                          />\n                        </ToolbarItem>\n                      </ToolbarGroup>\n                      <ToolbarGroup variant=\"filter-group\">\n                        <FilterGroup\n                          isDisabled={isRefreshing}\n                          offset={filterOffset}\n                          epoch={filterEpoch}\n                          timestamp={filterTimestamp}\n                          onOffsetChange={setOffset}\n                          onTimestampChange={setTimestamp}\n                          onEpochChange={setEpoch}\n                          onLatest={setLatest}\n                        />\n                      </ToolbarGroup>\n                      <ToolbarGroup>\n                        <LimitSelector\n                          value={limit}\n                          onChange={setLimit}\n                          isDisabled={isRefreshing}\n                        />\n                      </ToolbarGroup>\n                    </ToolbarToggleGroup>\n                    <ToolbarGroup>\n                      <ToolbarItem>\n                        <Button\n                          variant={\"plain\"}\n                          isDisabled={!requiresSearch || isRefreshing}\n                          aria-label={t(\"common:search_button_label\")}\n                          onClick={refresh}\n                        >\n                          <SearchIcon />\n                        </Button>\n                      </ToolbarItem>\n                      <ToolbarItem>\n                        <RefreshButton\n                          onClick={refresh}\n                          isRefreshing={isRefreshing}\n                          isDisabled={requiresSearch}\n                        />\n                      </ToolbarItem>\n                    </ToolbarGroup>\n                    <ToolbarGroup alignment={{ default: \"alignRight\" }}>\n                      {response?.filter.partition !== undefined &&\n                        response?.messages.length > 0 && (\n                          <OffsetRange\n                            min={response?.offsetMin || 0}\n                            max={response?.offsetMax || 0}\n                          />\n                        )}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n                <InnerScrollContainer>\n                  <ResponsiveTable\n                    ariaLabel={t(\"table_aria_label\")}\n                    columns={columns}\n                    data={response?.messages}\n                    expectedLength={response?.messages?.length}\n                    renderHeader={({ column, Th, key }) => (\n                      <Th key={key}>{columnLabels[column]}</Th>\n                    )}\n                    renderCell={({ column, row, colIndex, Td, key }) => (\n                      <Td\n                        key={key}\n                        dataLabel={columnLabels[column]}\n                        width={columnWidths[colIndex]}\n                      >\n                        {(() => {\n                          const empty = (\n                            <NoDataCell columnLabel={columnLabels[column]} />\n                          );\n                          switch (column) {\n                            case \"partition\":\n                              return row.partition;\n                            case \"offset\":\n                              return row.offset;\n                            case \"timestamp\":\n                              return row.timestamp ? (\n                                <FormatDate\n                                  date={parseISO(row.timestamp)}\n                                  format={\"longWithMilliseconds\"}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"key\":\n                              return row.key ? (\n                                <UnknownValuePreview\n                                  value={row.key}\n                                  truncateAt={40}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"headers\":\n                              return Object.keys(row.headers).length > 0 ? (\n                                <UnknownValuePreview\n                                  value={beautifyUnknownValue(\n                                    JSON.stringify(row.headers)\n                                  )}\n                                  onClick={() => {\n                                    setDefaultTab(\"headers\");\n                                    selectMessage(row);\n                                  }}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"value\":\n                              return row.value ? (\n                                <UnknownValuePreview\n                                  value={beautifyUnknownValue(row.value || \"\")}\n                                  onClick={() => {\n                                    setDefaultTab(\"value\");\n                                    selectMessage(row);\n                                  }}\n                                />\n                              ) : (\n                                empty\n                              );\n                          }\n                        })()}\n                      </Td>\n                    )}\n                    isRowSelected={({ row }) =>\n                      selectedMessage !== undefined &&\n                      isSameMessage(row, selectedMessage)\n                    }\n                    onRowClick={({ row }) => {\n                      setDefaultTab(\"value\");\n                      selectMessage(row);\n                    }}\n                  >\n                    <NoResultsEmptyState\n                      onReset={() => {\n                        setLatest();\n                        setPartition(undefined);\n                        refresh();\n                      }}\n                    />\n                  </ResponsiveTable>\n                </InnerScrollContainer>\n              </OuterScrollContainer>\n            </DrawerContent>\n          </Drawer>\n        </PageSection>\n      );\n  }\n};\n","import {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface CapacityTable {\n  name: string;\n  firstStreamingUnit: string;\n  secondStreamingUnit: string;\n}\n\nexport const KafkaInstanceCapacityTable: FunctionComponent = () => {\n  const { t } = useTranslation(\"kafkaoverview-v2\");\n\n  const capacityTable: CapacityTable[] = [\n    {\n      name: \"Ingress (MB/second)\",\n      firstStreamingUnit: \"up to 50\",\n      secondStreamingUnit: \"up to 100\",\n    },\n    {\n      name: \"Egress (MB/second)\",\n      firstStreamingUnit: \"up to 100\",\n      secondStreamingUnit: \"up to 200\",\n    },\n    {\n      name: \"Storage* (GB)\",\n      firstStreamingUnit: \"up to 1000\",\n      secondStreamingUnit: \"up to 2000\",\n    },\n    {\n      name: \"Topic partitions\",\n      firstStreamingUnit: \"up to 1500\",\n      secondStreamingUnit: \"up to 3000\",\n    },\n    {\n      name: \"Client connections\",\n      firstStreamingUnit: \"up to 3000\",\n      secondStreamingUnit: \"up to 6000\",\n    },\n    {\n      name: \"Connection rate (connections/second)\",\n      firstStreamingUnit: \"up to 100\",\n      secondStreamingUnit: \"up to 200\",\n    },\n    {\n      name: \"Message size (MB)\",\n      firstStreamingUnit: \"up to 1\",\n      secondStreamingUnit: \"up to 1\",\n    },\n  ];\n\n  const columnNames = {\n    name: \"\",\n    firstStreamingUnit: t(\"firstStreamingUnit\"),\n    secondStreamingUnit: t(\"secondStreamingUnit\"),\n  };\n\n  return (\n    <TableComposable>\n      <Thead>\n        <Tr>\n          <Th>{columnNames.name}</Th>\n          <Th>{columnNames.firstStreamingUnit}</Th>\n          <Th>{columnNames.secondStreamingUnit}</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {capacityTable.map((table) => {\n          return (\n            <Tr key={table.name}>\n              <Td dataLabel={columnNames.name}>{table.name}</Td>\n              <Td dataLabel={columnNames.firstStreamingUnit}>\n                {table.firstStreamingUnit}\n              </Td>\n              <Td dataLabel={columnNames.secondStreamingUnit}>\n                {table.secondStreamingUnit}\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </TableComposable>\n  );\n};\n","import {\n  Bullseye,\n  Card,\n  PageSection,\n  PageSectionVariants,\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport classNames from \"classnames\";\nimport type {\n  CSSProperties,\n  FunctionComponent,\n  ReactNode,\n  VoidFunctionComponent,\n} from \"react\";\nimport \"./MarketingPage.css\";\n\nexport type MarketingPageHeroProps = {\n  title: string;\n  tagLine: string;\n  description: string;\n  description2?: string;\n  heroImage: string;\n  heroImageSize: number;\n  heroImageCanRepeat?: boolean;\n  heroImagePositionY?: number;\n  cta?: ReactNode;\n  variant?: \"light\" | \"dark\";\n};\n\nexport const MarketingPageHero: VoidFunctionComponent<\n  MarketingPageHeroProps\n> = ({\n  title,\n  tagLine,\n  description,\n  description2,\n  heroImage,\n  heroImageSize,\n  heroImageCanRepeat = true,\n  heroImagePositionY = 0,\n  cta,\n  variant = \"light\",\n}) => {\n  const style = {\n    \"--appsrv-marketing--banner--before--BackgroundImage\": `url(${heroImage})`,\n    \"--appsrv-marketing--banner--before--BackgroundSize\": `${heroImageSize}px`,\n    \"--appsrv-marketing--banner--before--BackgroundRepeat\": heroImageCanRepeat\n      ? \"repeat\"\n      : \"no-repeat\",\n    \"--appsrv-marketing--banner--before--BackgroundPositionY\": `${heroImagePositionY}px`,\n  } as CSSProperties;\n  return (\n    <PageSection\n      className={classNames(\"appsrv-marketing--banner\", {\n        \"pf-u-background-color-dark-100\": variant === \"dark\",\n        \"pf-u-background-color-100\": variant === \"light\",\n      })}\n      variant={\n        variant === \"dark\"\n          ? PageSectionVariants.dark\n          : PageSectionVariants.light\n      }\n      style={style}\n    >\n      <Stack hasGutter>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          {title}\n        </Title>\n        <Text\n          className={`appsrv-marketing--banner__tagline ${\n            variant === \"dark\" ? \"\" : \"pf-u-color-200\"\n          }`}\n        >\n          {tagLine}\n        </Text>\n        <Text component={TextVariants.p}>{description}</Text>\n        {description2 && (\n          <Text component={TextVariants.p} className=\"pf-u-mt-md\">\n            {description2}\n          </Text>\n        )}\n        {cta && <StackItem>{cta}</StackItem>}\n      </Stack>\n    </PageSection>\n  );\n};\n\nexport const MarketingPageBanner: FunctionComponent = ({ children }) => {\n  return (\n    <PageSection\n      variant={PageSectionVariants.light}\n      className=\"appsrv-marketing--page-section--marketing pf-u-background-color-100\"\n    >\n      <Bullseye>\n        <Text\n          component={TextVariants.p}\n          className=\"appsrv-marketing--banner--text-only\"\n        >\n          {children}\n        </Text>\n      </Bullseye>\n    </PageSection>\n  );\n};\n\nexport type MarketingPageSectionProps = {\n  className?: string;\n};\n\nexport const MarketingPageSection: FunctionComponent<\n  MarketingPageSectionProps & {\n    variant?: \"dark\" | \"light\" | \"default\";\n  }\n> = ({\n  className = \"appsrv-marketing--page-section--marketing\",\n  variant = \"default\",\n  children,\n}) => (\n  <PageSection\n    isWidthLimited\n    className={classNames(className, {\n      \"pf-u-background-color-dark-100\": variant === \"dark\",\n      \"pf-u-background-color-100\": variant === \"light\",\n    })}\n    variant={\n      variant === \"dark\"\n        ? PageSectionVariants.dark\n        : variant === \"light\"\n        ? PageSectionVariants.light\n        : PageSectionVariants.default\n    }\n  >\n    {children}\n  </PageSection>\n);\n\nexport const MarketingPageVideoCard: VoidFunctionComponent<{\n  src: string;\n  title: string;\n}> = ({ src, title }) => (\n  <Card className=\"appsrv-marketing--video\">\n    <div className=\"appsrv-marketing--video__wrapper\">\n      <iframe\n        src={src}\n        title={title}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  </Card>\n);\n","import {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Divider,\n  Flex,\n  FlexItem,\n  Grid,\n  Split,\n  SplitItem,\n  Stack,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport {\n  AppSpeedKeyArt,\n  ExternalLink,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { KafkaInstanceCapacityTable } from \"./KafkaInstanceCapacityTable\";\nimport { LogoAWS, LogoAzure, LogoGCP } from \"./Logos/images\";\nimport { MarketingPageHero, MarketingPageSection } from \"./MarketingPage\";\n\nexport const KafkaPageV3: FunctionComponent = () => {\n  const { t } = useTranslation([\"kafkaoverview-v3\"]);\n  return (\n    <>\n      <MarketingPageHero\n        title={t(\"heroTitle\")}\n        tagLine={t(\"heroTagline\")}\n        description={t(\"heroDescription\")}\n        heroImage={AppSpeedKeyArt}\n        heroImageSize={478}\n        heroImageCanRepeat={false}\n        heroImagePositionY={-99}\n      />\n      <MarketingPageSection>\n        <Grid hasGutter lg={6}>\n          <Card\n            ouiaId=\"card-overview-purchase-now\"\n            aria-label={t(\"kafkaoverview:purchaseCardTitle\")}\n          >\n            <CardHeader>\n              <CardHeaderMain>\n                <CardTitle>\n                  <Title headingLevel=\"h2\">\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardTitle\"}\n                    >\n                      <span className=\"pf-u-color-200 pf-u-font-size-sm\"></span>\n                    </Trans>\n                  </Title>\n                </CardTitle>\n              </CardHeaderMain>\n            </CardHeader>\n            <CardBody>{t(\"purchaseCardMainText\")}</CardBody>\n            <CardFooter>\n              <Flex spaceItems={{ default: \"spaceItems2xl\" }}>\n                <FlexItem>\n                  <ExternalLink\n                    href={\n                      \"https://marketplace.redhat.com/en-us/products/red-hat-openshift-streams-for-apache-kafka\"\n                    }\n                    testId={\"cardPurchase-buttonRH\"}\n                    className={\"pf-u-ml-md \"}\n                  >\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardCallToActionButtonRedHat\"}\n                      components={{\n                        bold: <strong />,\n                        size: <span className=\"pf-u-font-size-lg\" />,\n                      }}\n                    />\n                  </ExternalLink>\n                </FlexItem>\n\n                <FlexItem>\n                  <ExternalLink\n                    href={\n                      \"https://aws.amazon.com/marketplace/pp/prodview-3xohcoyuwkumc\"\n                    }\n                    testId={\"cardPurchase-buttonAWS\"}\n                    className={\"pf-u-ml-md\"}\n                  >\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardCallToActionButtonAWS\"}\n                      components={{\n                        bold: <strong />,\n                        size: <span className=\"pf-u-font-size-lg\" />,\n                      }}\n                    />\n                  </ExternalLink>\n                </FlexItem>\n              </Flex>\n            </CardFooter>\n          </Card>\n          <Card\n            ouiaId=\"card-overview-contact-sales\"\n            aria-label={t(\"kafkaoverview:contactSalesCardTitle\")}\n          >\n            <CardHeader>\n              <CardTitle>\n                <Title headingLevel=\"h2\">\n                  <Trans\n                    ns={\"kafkaoverview-v3\"}\n                    i18nKey={\"contactSalesCardTitle\"}\n                  >\n                    <span className=\"pf-u-color-200 pf-u-font-size-sm\"></span>\n                  </Trans>\n                </Title>\n              </CardTitle>\n            </CardHeader>\n            <CardBody>{t(\"contactSalesCardMainText\")}</CardBody>\n            <CardFooter>\n              <ExternalLink\n                href={\n                  \"https://www.redhat.com/en/technologies/cloud-computing/openshift/openshift-streams-for-apache-kafka#contact-us\"\n                }\n                testId={\"cardContactSales-buttonCTA\"}\n                className={\"pf-u-ml-md\"}\n              >\n                <Trans\n                  ns={\"kafkaoverview-v3\"}\n                  i18nKey={\"contactSalesCardCallToActionButton\"}\n                  components={{\n                    bold: <strong />,\n                    size: <span className=\"pf-u-font-size-lg\" />,\n                  }}\n                />\n              </ExternalLink>\n            </CardFooter>\n          </Card>\n        </Grid>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"pricingModalTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Flex spaceItems={{ default: \"spaceItemsXl\" }}>\n              <Flex\n                alignSelf={{ default: \"alignSelfCenter\" }}\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <DescriptionList isHorizontal>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"steamingUnit\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"streamingUnit_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"dataTransfer\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"dataTransfer_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>{t(\"storage\")}</DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"storage_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                  </DescriptionList>\n                </FlexItem>\n              </Flex>\n              <Divider isVertical />\n              <FlexItem flex={{ default: \"flex_1\" }}>\n                <TextContent>\n                  <Text component={TextVariants.p}>\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"streamingUnitText\"}\n                      components={{ bold: <strong /> }}\n                    />\n                  </Text>\n                </TextContent>\n              </FlexItem>\n            </Flex>\n          </CardBody>\n        </Card>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"kafkaInstanceCapacityTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Stack hasGutter>\n              <Text component={TextVariants.p}>\n                {t(\"kafkaInstanceCapacityDescription\")}\n              </Text>\n              <KafkaInstanceCapacityTable />\n            </Stack>\n          </CardBody>\n          <CardFooter>\n            <TextContent className={\"pf-u-font-size-sm\"}>\n              <Trans\n                ns={\"kafkaoverview-v3\"}\n                i18nKey={\"kafkaInstanceCapacityfooter\"}\n                components={[\n                  <ExternalLink\n                    href={\"https://access.redhat.com/support\"}\n                    testId={\"SupportLink\"}\n                    className={\"pf-u-ml-xs\"}\n                  />,\n                  <ExternalLink\n                    href={\n                      \"https://access.redhat.com/documentation/en-us/red_hat_openshift_streams_for_apache_kafka/1/guide/aced8e5e-8229-4cb2-82f9-87a8caa24bb3\"\n                    }\n                    testId={\"MonitoringDiskSpaceLink\"}\n                    className={\"pf-u-ml-xs\"}\n                  />,\n                ]}\n              />\n            </TextContent>\n          </CardFooter>\n        </Card>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"cloudProvidersTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Flex\n              spaceItems={{ default: \"spaceItemsXl\" }}\n              direction={{ default: \"column\", xl: \"row\" }}\n            >\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img src={LogoAWS} alt={\"\"} style={{ height: \"60px\" }} />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"awsWebServiceTitle\")}\n                      </Title>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n              <Divider\n                orientation={{ default: \"horizontal\", xl: \"vertical\" }}\n              />\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img src={LogoGCP} alt={\"\"} style={{ height: \"60px\" }} />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"googleCloudProviderTitle\")}\n                      </Title>\n                      <Text\n                        component={TextVariants.p}\n                        className={\"pf-u-color-200\"}\n                      >\n                        {t(\"googleCloudProviderDescription\")}\n                      </Text>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n              <Divider\n                orientation={{ default: \"horizontal\", xl: \"vertical\" }}\n              />\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img\n                        src={LogoAzure}\n                        alt={\"\"}\n                        style={{ height: \"60px\" }}\n                      />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"microsoftAzureTitle\")}\n                      </Title>\n                      <Text\n                        component={TextVariants.p}\n                        className={\"pf-u-color-200\"}\n                      >\n                        {t(\"microsoftAzureDescription\")}\n                      </Text>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n            </Flex>\n          </CardBody>\n        </Card>\n      </MarketingPageSection>\n    </>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type EmptyStateNoTopicProps = {\n  onCreateTopic: () => void;\n};\n\nexport const EmptyStateNoTopic: VoidFunctionComponent<\n  EmptyStateNoTopicProps\n> = ({ onCreateTopic }) => {\n  const { t } = useTranslation(\"topic\");\n\n  return (\n    <EmptyState\n      data-ouia-page-id=\"emptyStateTopics\"\n      variant={EmptyStateVariant.large}\n    >\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_topics_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"empty_topics_body\")}</EmptyStateBody>\n      <Button\n        data-testid=\"actionCreateTopic\"\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={onCreateTopic}\n      >\n        {t(\"create_topic\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import type { ResourceOperationValue } from \"./components/ResourceOperation\";\nimport type { ResourcePermissionValue } from \"./components/ResourcePermission\";\nimport type { ResourcePrefixRuleValue } from \"./components/ResourcePrefixRule\";\nimport type { ResourceTypeValue } from \"./components/ResourceType\";\n\nexport type AclOperation =\n  | \"ALL\"\n  | \"READ\"\n  | \"WRITE\"\n  | \"CREATE\"\n  | \"DELETE\"\n  | \"ALTER\"\n  | \"DESCRIBE\"\n  | \"DESCRIBE_CONFIGS\"\n  | \"ALTER_CONFIGS\";\n\nexport type AclResourceType =\n  | \"GROUP\"\n  | \"TOPIC\"\n  | \"CLUSTER\"\n  | \"TRANSACTIONAL_ID\";\n\nexport type AclPatternType = \"LITERAL\" | \"PREFIXED\";\n\nexport type AclPermissionType = \"ALLOW\" | \"DENY\";\n\nexport interface AclBinding {\n  /**\n   *\n   * @type {AclResourceType}\n   * @memberof AclBinding\n   */\n  resourceType: AclResourceType;\n  /**\n   *\n   * @type {string}\n   * @memberof AclBinding\n   */\n  resourceName: string;\n  /**\n   *\n   * @type {AclPatternType}\n   * @memberof AclBinding\n   */\n  patternType: AclPatternType;\n  /**\n   * Identifies the user or service account to which an ACL entry is bound. The literal prefix value of `User:` is required. May be used to specify all users with value `User:*`.\n   * @type {string}\n   * @memberof AclBinding\n   */\n  principal: string;\n  /**\n   *\n   * @type {AclOperation}\n   * @memberof AclBinding\n   */\n  operation: AclOperation;\n  /**\n   *\n   * @type {AclPermissionType}\n   * @memberof AclBinding\n   */\n  permission: AclPermissionType;\n}\nexport type AclTablePermissionsType = {\n  permission: AclPermissionType;\n  operation: AclOperation;\n};\nexport type AclTableResourceType = {\n  resourceType: AclResourceType;\n  resourceName: string;\n  patternType: AclPatternType;\n};\nexport type Permissions = {\n  account: string;\n  permission: AclTablePermissionsType;\n  resource: AclTableResourceType;\n};\nexport enum PrincipalType {\n  UserAccount = \"USER_ACCOUNT\",\n  ServiceAccount = \"SERVICE_ACCOUNT\",\n}\n\nexport type Account = {\n  id: string;\n  principalType: PrincipalType;\n  displayName: string;\n  email?: string;\n};\n\ntype ManualAcl = {\n  resourceType: ResourceTypeValue | undefined;\n  resourcePrefix: ResourcePrefixRuleValue;\n  resourceName: string | undefined;\n  resourcePermission: ResourcePermissionValue;\n  resourceOperation: ResourceOperationValue | undefined;\n};\n\ntype ProduceTopicTemplate = {\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n};\n\ntype ConsumeTopicTemplate = {\n  consumerResourceName: string | undefined;\n  consumerResourcePrefixRule: ResourcePrefixRuleValue;\n  topicResourceName: string | undefined;\n  topicResourcePrefixRule: ResourcePrefixRuleValue;\n};\n\ntype ManageAccessTemplate = {\n  instanceName: string;\n};\nexport type AddAclType =\n  | ({ type: \"manual\" } & ManualAcl)\n  | ({ type: \"consume-topic\" } & ConsumeTopicTemplate)\n  | ({ type: \"produce-topic\" } & ProduceTopicTemplate)\n  | ({ type: \"manage-access\" } & ManageAccessTemplate);\n\nexport const createEmptyManualAcl = (): AddAclType => {\n  return {\n    type: \"manual\",\n    resourceName: undefined,\n    resourceType: undefined,\n    resourceOperation: undefined,\n    resourcePrefix: \"Is\",\n    resourcePermission: \"allow\",\n  };\n};\nexport const createEmptyProduceTopicAcl = (): AddAclType => {\n  return {\n    type: \"produce-topic\",\n    prefixRuleValue: \"Is\",\n    resourceNameValue: undefined,\n  };\n};\nexport const createEmptyConsumeTopicAcl = (): AddAclType => {\n  return {\n    type: \"consume-topic\",\n    consumerResourceName: undefined,\n    consumerResourcePrefixRule: \"Is\",\n    topicResourceName: undefined,\n    topicResourcePrefixRule: \"Is\",\n  };\n};\nexport const createEmptyManageAccessAcl = (kafkaName: string): AddAclType => {\n  return {\n    type: \"manage-access\",\n    instanceName: kafkaName,\n  };\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  EmptyStateNoResults,\n  TableView,\n} from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport type { Topic, TopicField } from \"ui-models/src/models/topic\";\nimport { useTopicLabels } from \"../../hooks\";\nimport type { EmptyStateNoTopicProps } from \"./components\";\nimport { EmptyStateNoTopic } from \"./components\";\nimport { formattedRetentionSize, formattedRetentionTime } from \"./types\";\n\ntype SubUnion<T, U extends T> = U;\n\nconst Columns: SubUnion<\n  TopicField,\n  \"name\" | \"partitions\" | \"retention.ms\" | \"retention.bytes\"\n>[] = [\"name\", \"partitions\", \"retention.ms\", \"retention.bytes\"];\n\nexport type KafkaTopicsProps<T extends Topic> = {\n  topics: Array<T> | undefined;\n  getUrlFortopic: (row: T) => string;\n  onDelete: (row: T) => void;\n  onEdit: (row: T) => void;\n  topicName: string[];\n  onSearchTopic: (value: string) => void;\n  onRemoveTopicChip: (value: string) => void;\n  onRemoveTopicChips: () => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n> &\n  EmptyStateNoTopicProps;\n\nexport const KafkaTopics = <T extends Topic>({\n  topics,\n  onDelete,\n  onEdit,\n  isColumnSortable,\n  itemCount,\n  onSearchTopic,\n  topicName,\n  onClearAllFilters,\n  onCreateTopic,\n  page,\n  perPage,\n  onPageChange,\n  onRemoveTopicChip,\n  onRemoveTopicChips,\n  getUrlFortopic,\n}: KafkaTopicsProps<T>) => {\n  const { t } = useTranslation(\"topic\");\n\n  const labels = useTopicLabels();\n\n  const isFiltered = topicName.length > 0;\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"topic_list_table\")}\n        data={topics}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"name\":\n                    return (\n                      <Link\n                        to={getUrlFortopic(row)}\n                        data-testid=\"tableTopics-linkTopic\"\n                        data-ouia-component-id=\"table-link\"\n                      >\n                        {row.name}\n                      </Link>\n                    );\n                  case \"partitions\":\n                    return row.partitions.length;\n                  case \"retention.ms\":\n                    return formattedRetentionTime(row[\"retention.ms\"].value);\n                  case \"retention.bytes\":\n                    return formattedRetentionSize(row[\"retention.bytes\"].value);\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row, ActionsColumn }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"table.actions.edit\"),\n                onClick: () => onEdit(row),\n              },\n              {\n                title: t(\"table.actions.delete\"),\n                onClick: () => onDelete(row),\n              },\n            ]}\n          />\n        )}\n        isColumnSortable={isColumnSortable}\n        filters={{\n          [labels.fields.name]: {\n            type: \"search\",\n            chips: topicName,\n            onSearch: onSearchTopic,\n            onRemoveChip: onRemoveTopicChip,\n            onRemoveGroup: onRemoveTopicChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"input_field_invalid_message\"),\n          },\n        }}\n        actions={[\n          {\n            label: t(\"create_topic\"),\n            onClick: onCreateTopic,\n            isPrimary: true,\n          },\n        ]}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        isFiltered={isFiltered}\n        onClearAllFilters={onClearAllFilters}\n        emptyStateNoData={<EmptyStateNoTopic onCreateTopic={onCreateTopic} />}\n        emptyStateNoResults={<EmptyStateNoResults />}\n      />\n    </PageSection>\n  );\n};\n","import type { CardKafkaInstanceMetricsLimits } from \"./components\";\n\nexport type TimeSeriesMetrics = { [timestamp: string]: number };\nexport type PartitionBytesMetric = {\n  [partition: string]: TimeSeriesMetrics;\n};\nexport type BrokerBytesMetric = {\n  [broker: \"total\" | string]: TimeSeriesMetrics;\n};\n\nexport enum DurationOptions {\n  Last5minutes = 5,\n  Last15minutes = 15,\n  Last30minutes = 30,\n  Last1hour = 60,\n  Last3hours = 3 * 60,\n  Last6hours = 6 * 60,\n  Last12hours = 12 * 60,\n  Last24hours = 24 * 60,\n  Last2days = 2 * 24 * 60,\n  Last7days = 7 * 24 * 60,\n}\n\nexport type GetTopicsMetricsResponse = {\n  kafkaTopics: string[];\n  metricsTopics: string[];\n  bytesOutgoing: TimeSeriesMetrics;\n  bytesIncoming: TimeSeriesMetrics;\n  bytesPerPartition: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n};\n\nexport type GetKafkaInstanceMetricsResponse = {\n  brokers: string[];\n  usedDiskSpaceMetrics: BrokerBytesMetric;\n  bytesPerPartitionMetrics: PartitionBytesMetric;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n} & CardKafkaInstanceMetricsLimits;\n\nexport type GetMetricsKpiResponse = {\n  topics: number;\n  topicPartitions: number;\n  consumerGroups: number;\n  topicPartitionsLimit: number;\n};\n\nexport type BrokerFilter = \"total\" | \"perBroker\";\n\nexport type PartitionSelect = \"Top10\" | \"Top20\";\n","import type { MenuProps } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  Dropdown,\n  DropdownToggle,\n  DropdownToggleAction,\n  Menu,\n  MenuContent,\n  MenuGroup,\n  MenuItem,\n  MenuList,\n  Popper,\n} from \"@patternfly/react-core\";\nimport type {\n  MouseEvent as ReactMouseEvent,\n  VoidFunctionComponent,\n} from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type PermissionsDropdownProps = {\n  onAddPermission: () => void;\n  onShortcutConsumeTopic: () => void;\n  onShortcutProduceTopic: () => void;\n  onShortcutManageAccess: () => void;\n};\n\nexport const PermissionsDropdown: VoidFunctionComponent<\n  PermissionsDropdownProps\n> = ({\n  onAddPermission,\n  onShortcutConsumeTopic,\n  onShortcutProduceTopic,\n  onShortcutManageAccess,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  const [isOpen, setIsOpen] = useState(false);\n  useState<string | number | undefined>(0);\n\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const handleMenuKeys = useCallback(\n    (event: KeyboardEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        event.target &&\n        menuRef.current.contains(event.target as Node)\n      ) {\n        if (event.key === \"Escape\" || event.key === \"Tab\") {\n          setIsOpen(!isOpen);\n        }\n      }\n    },\n    [isOpen]\n  );\n\n  const handleClickOutside = useCallback(\n    (event: MouseEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        !menuRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleMenuKeys);\n    window.addEventListener(\"click\", handleClickOutside);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleMenuKeys);\n      window.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, [handleClickOutside, handleMenuKeys, isOpen, menuRef]);\n\n  const onToggleClick = useCallback((open: boolean, ev: ReactMouseEvent) => {\n    ev.stopPropagation(); // Stop handleClickOutside from handling\n    setTimeout(() => {\n      if (menuRef.current) {\n        const firstElement = menuRef.current.querySelector(\n          \"li > button,input:not(:disabled)\"\n        );\n        firstElement && (firstElement as HTMLElement).focus();\n      }\n    }, 0);\n    setIsOpen(open);\n  }, []);\n\n  const handleSelect: MenuProps[\"onSelect\"] = (_event, itemId) => {\n    setIsOpen(false);\n    switch (itemId) {\n      case \"add_permission\":\n        onAddPermission();\n        break;\n      case \"shortcut_consume_topic\":\n        onShortcutConsumeTopic();\n        break;\n      case \"shortcut_produce_topic\":\n        onShortcutProduceTopic();\n        break;\n      case \"shortcut_manage_access\":\n        onShortcutManageAccess();\n        break;\n    }\n  };\n\n  const onActionClick = (\n    event: ReactMouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    onAddPermission();\n  };\n\n  const menu = (\n    <Menu onSelect={handleSelect} key=\"acls-menu\" ref={menuRef}>\n      <MenuContent>\n        <MenuList>\n          <MenuGroup>\n            <MenuList>\n              <MenuItem itemId={\"add_permission\"}>\n                {t(\"permissions_dropdown.add_permission\")}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n\n          <Divider />\n          <MenuGroup label={t(\"permissions_dropdown.task_based_permission\")}>\n            <MenuList>\n              <MenuItem\n                itemId={\"shortcut_consume_topic\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_consume_topic_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_consume_topic\")}\n              </MenuItem>\n              <MenuItem\n                itemId={\"shortcut_produce_topic\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_produce_topic_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_produce_topic\")}\n              </MenuItem>\n              <MenuItem\n                itemId={\"shortcut_manage_access\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_manage_access_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_manage_access\")}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n        </MenuList>\n      </MenuContent>\n    </Menu>\n  );\n\n  const toggle = (\n    <Dropdown\n      toggle={\n        <DropdownToggle\n          data-testid={\"permissions-dropdown-toggle\"}\n          splitButtonItems={[\n            <DropdownToggleAction\n              key=\"cog-action\"\n              aria-label={t(\"permissions_dropdown.add_permission\")}\n              onClick={onActionClick}\n            >\n              {t(\"permissions_dropdown.add_permission\")}\n            </DropdownToggleAction>,\n          ]}\n          splitButtonVariant=\"action\"\n          onToggle={onToggleClick}\n        />\n      }\n    />\n  );\n\n  return (\n    <Popper\n      trigger={toggle}\n      popper={menu}\n      isVisible={isOpen}\n      popperMatchesTriggerWidth={false}\n    />\n  );\n};\n","import type { VFC } from \"react\";\nimport type { LabelProps } from \"@patternfly/react-core\";\nimport { Label } from \"@patternfly/react-core\";\nimport type { AclResourceType } from \"../types\";\nimport \"./ResourceTypeLabel.css\";\n\nexport type SolidLabelProps = {\n  variant: AclResourceType;\n};\n\ntype Variant = {\n  labelColor: LabelProps[\"color\"];\n  content: string;\n};\n\nexport const ResourceTypeLabel: VFC<SolidLabelProps> = ({ variant }) => {\n  const getVariant = (): Variant => {\n    switch (variant) {\n      case \"GROUP\":\n        return { labelColor: \"green\", content: \"G\" };\n      case \"CLUSTER\":\n        return { labelColor: \"grey\", content: \"KI\" };\n      case \"TOPIC\":\n        return { labelColor: \"blue\", content: \"T\" };\n      case \"TRANSACTIONAL_ID\":\n        return { labelColor: \"orange\", content: \"TI\" };\n    }\n  };\n\n  const { labelColor, content } = getVariant() || {};\n\n  return (\n    <Label isCompact color={labelColor} className={`mas-m-solid`}>\n      {content}\n    </Label>\n  );\n};\n","import type { FunctionComponent, VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Label, LabelGroup, Tooltip } from \"@patternfly/react-core\";\n\nimport type {\n  Account,\n  AclOperation,\n  AclPatternType,\n  AclPermissionType,\n  AclResourceType,\n} from \"../types\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { InfoCircleIcon } from \"@patternfly/react-icons\";\nimport { PrincipalType } from \"..\";\n\nexport const DisplayResourceName: VFC<{ resourceType: AclResourceType }> = ({\n  resourceType,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  switch (resourceType) {\n    case \"GROUP\":\n      return t(\"resourceTypes.consumer_group\");\n    case \"TOPIC\":\n      return t(\"resourceTypes.topic\");\n    case \"CLUSTER\":\n      return t(\"resourceTypes.kafka_instance\");\n    case \"TRANSACTIONAL_ID\":\n      return t(\"resourceTypes.transactional_id\");\n  }\n};\n\nconst PatternType: VFC<{ patternType: AclPatternType }> = ({ patternType }) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  if (patternType === \"PREFIXED\") {\n    return t(\"pattern_type_prefixed\");\n  } else {\n    return t(\"pattern_type_literal\");\n  }\n};\n\nexport type ResourceCellProps = {\n  resourceType: AclResourceType;\n  patternType: AclPatternType;\n  resourceName: string;\n};\n\nexport const ResourceCell: FunctionComponent<ResourceCellProps> = ({\n  resourceType,\n  patternType,\n  resourceName,\n}) => {\n  if (resourceType === \"CLUSTER\") {\n    return (\n      <>\n        <ResourceTypeLabel variant={resourceType} />{\" \"}\n        <DisplayResourceName resourceType={resourceType} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ResourceTypeLabel variant={resourceType} />{\" \"}\n      <DisplayResourceName resourceType={resourceType} />{\" \"}\n      <PatternType patternType={patternType} /> \"{resourceName}\"\n    </>\n  );\n};\n\nexport type PermissionOperationCellProps = {\n  permission: AclPermissionType;\n  operation: AclOperation | AclOperation[];\n};\n\nexport const PermissionOperationCell: FunctionComponent<\n  PermissionOperationCellProps\n> = ({ permission, operation }) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const permissions: { [key in AclPermissionType]: string } = {\n    ALLOW: t(\"permissions.allow\"),\n    DENY: t(\"permissions.deny\"),\n  };\n  const operations: { [key in AclOperation]: string } = {\n    ALL: t(\"operations.all\"),\n    READ: t(\"operations.read\"),\n    WRITE: t(\"operations.write\"),\n    CREATE: t(\"operations.create\"),\n    DELETE: t(\"operations.delete\"),\n    ALTER: t(\"operations.alter\"),\n    DESCRIBE: t(\"operations.describe\"),\n    DESCRIBE_CONFIGS: t(\"operations.describe_configs\"),\n    ALTER_CONFIGS: t(\"operations.alter_configs\"),\n  };\n  return (\n    <LabelGroup numLabels={4}>\n      {permission && (\n        <Label\n          variant=\"outline\"\n          color={permission === \"DENY\" ? \"red\" : undefined}\n        >\n          {permissions[permission]}\n        </Label>\n      )}\n      {Array.isArray(operation) ? (\n        operation.map((value, key) => (\n          <Label key={key} variant=\"outline\">\n            {operations[value]}\n          </Label>\n        ))\n      ) : (\n        <Label variant=\"outline\">{operations[operation]}</Label>\n      )}\n    </LabelGroup>\n  );\n};\n\nexport type PrincipalCellProps = {\n  isDeleteEnabled: boolean;\n  isAllAccounts?: boolean;\n  onRemoveAcl?: () => void;\n  isReviewTable?: boolean;\n  principal?: string;\n  allAccounts?: Account;\n};\n\nexport const PrincipalCell: VFC<PrincipalCellProps> = ({\n  isDeleteEnabled,\n  isAllAccounts,\n  onRemoveAcl,\n  isReviewTable = true,\n  principal,\n  allAccounts,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  const principalWithTooltip = () => {\n    return allAccounts?.principalType == PrincipalType.ServiceAccount &&\n      !isReviewTable ? (\n      <Tooltip\n        content={\n          <div>\n            Type: {allAccounts && allAccounts.principalType} <br />\n          </div>\n        }\n      >\n        <span tabIndex={0}>\n          {\" \"}\n          {principal?.split(\":\")[1]} <InfoCircleIcon color=\"grey\" />\n        </span>\n      </Tooltip>\n    ) : (\n      !isReviewTable && (\n        <Tooltip\n          content={\n            <div>\n              Type: {allAccounts?.principalType} <br />\n              Name: {allAccounts?.displayName} <br />\n              Email: {allAccounts?.email}\n            </div>\n          }\n        >\n          <span tabIndex={0}>\n            {principal?.split(\":\")[1]} <InfoCircleIcon color=\"grey\" />\n          </span>\n        </Tooltip>\n      )\n    );\n  };\n\n  return (\n    <div\n      className={\n        isReviewTable\n          ? \"pf-u-display-flex pf-u-justify-content-space-between pf-u-justify-content-flex-end-on-lg pf-u-align-items-center\"\n          : \"\"\n      }\n    >\n      {isAllAccounts && isReviewTable ? (\n        <Label variant=\"outline\">{t(\"table.all_accounts\")}</Label>\n      ) : !isReviewTable && principal == \"User:*\" ? (\n        <Label variant={\"outline\"}>{t(\"table.all_accounts\")}</Label>\n      ) : (\n        principalWithTooltip()\n      )}\n\n      {isDeleteEnabled && onRemoveAcl != undefined && (\n        <RemoveButton\n          variant=\"link\"\n          tooltip={t(\"remove_permission_tooltip\")}\n          onClick={onRemoveAcl}\n          ariaLabel={t(\"operations.delete\")}\n        />\n      )}\n    </div>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type PermissionsTableEmptyStateProps = {\n  openManagePermissions: () => void;\n};\nexport const PermissionsTableEmptyState: React.FunctionComponent<\n  PermissionsTableEmptyStateProps\n> = ({ openManagePermissions }) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  return (\n    <EmptyState\n      data-ouia-page-id=\"emptyStateTopics\"\n      variant={EmptyStateVariant.large}\n    >\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"no_results_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_results_body\")}</EmptyStateBody>\n      <Button\n        data-testid=\"actionManagePermissions\"\n        ouiaId=\"button-manage-permissions\"\n        variant=\"primary\"\n        onClick={openManagePermissions}\n      >\n        {t(\"dialog_title\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport { TableView } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Account, Permissions } from \"../types\";\nimport { PrincipalCell, PermissionOperationCell, ResourceCell } from \"./Cells\";\nimport { useEffect, useState } from \"react\";\nimport { PageSection } from \"@patternfly/react-core\";\nimport { PermissionsTableEmptyState } from \"./EmptyPermissionsTable\";\n\ntype SubUnion<T, U extends T> = U;\nexport type PermissionsField = keyof Permissions;\nconst Columns: SubUnion<\n  PermissionsField,\n  \"account\" | \"permission\" | \"resource\"\n>[] = [\"account\", \"permission\", \"resource\"];\n\nexport type PermissionsTableProps<T extends Permissions> = {\n  allAccounts: Account[] | undefined;\n  permissions: Array<T> | undefined;\n  onDelete: (rowIndex: number) => void;\n  onDeleteSelected: (rowIndex: number[]) => void;\n  onManagePermissions: () => void;\n  onManagePermissionsActionItem: (account: string) => void;\n  onPerPageChange: (page: number, perPage: number) => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"onClearAllFilters\"\n>;\n\nexport const PermissionsTable = <T extends Permissions>({\n  allAccounts,\n  permissions,\n  onDelete,\n  itemCount,\n  page,\n  perPage,\n  onDeleteSelected,\n  onPageChange,\n  onManagePermissions,\n  onManagePermissionsActionItem,\n}: PermissionsTableProps<T>) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const [checkedRows, setCheckedRows] = useState<number[]>([]);\n\n  useEffect(() => {\n    //Only clear all the checked row when they are deleted\n    setCheckedRows([]);\n  }, [permissions]);\n\n  const labels: { [field in (typeof Columns)[number]]: string } = {\n    account: t(\"account_id_title\"),\n    permission: t(\"table.permissions_column_title\"),\n    resource: t(\"table.resource_column_title\"),\n  };\n  const onCheck = (isSelecting: boolean, rowIndex: number) => {\n    if (rowIndex != undefined) {\n      setCheckedRows(\n        isSelecting\n          ? [...checkedRows, rowIndex]\n          : checkedRows.filter((row) => row !== rowIndex)\n      );\n    }\n  };\n\n  const isRowChecked = (rowIndex: number) => {\n    return checkedRows.includes(rowIndex);\n  };\n\n  const onBulkDelete = () => {\n    onDeleteSelected(checkedRows);\n  };\n\n  return (\n    <PageSection hasOverflowScroll={true}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"consumerGroup.consumer_group_list\")}\n        actions={[\n          {\n            onClick: onManagePermissions,\n            label: t(\"dialog_title\"),\n            isPrimary: true,\n          },\n        ]}\n        kebabActions={[\n          {\n            onClick: onBulkDelete,\n            label: t(\"delete_selected\"),\n            isDisabled: checkedRows.length > 0 ? false : true,\n          },\n        ]}\n        data={permissions}\n        columns={Columns}\n        onCheck={onCheck}\n        isRowChecked={({ rowIndex }) => isRowChecked(rowIndex)}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels[column]}>\n              {(() => {\n                switch (column) {\n                  case \"account\":\n                    return (\n                      <PrincipalCell\n                        isReviewTable={false}\n                        principal={row.account}\n                        isDeleteEnabled={false}\n                        allAccounts={\n                          allAccounts?.filter(\n                            (value) => `User:${value.id}` == row.account\n                          )[0]\n                        }\n                      />\n                    );\n                  case \"permission\":\n                    return (\n                      <PermissionOperationCell\n                        permission={row.permission.permission}\n                        operation={row.permission.operation}\n                      />\n                    );\n                  case \"resource\":\n                    return (\n                      <ResourceCell\n                        patternType={row.resource.patternType}\n                        resourceType={row.resource.resourceType}\n                        resourceName={row.resource.resourceName}\n                      />\n                    );\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ ActionsColumn, rowIndex, row }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"manage\"),\n                onClick: () =>\n                  onManagePermissionsActionItem(\n                    row.account == \"User:*\"\n                      ? \"all-accounts\"\n                      : row.account?.split(\":\")[1]\n                  ),\n              },\n              {\n                title: t(\"common:delete\"),\n                onClick: () => onDelete(rowIndex),\n              },\n            ]}\n          />\n        )}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        emptyStateNoData={\n          <PermissionsTableEmptyState\n            openManagePermissions={onManagePermissions}\n          />\n        }\n        emptyStateNoResults={\n          <PermissionsTableEmptyState\n            openManagePermissions={onManagePermissions}\n          />\n        }\n      />\n    </PageSection>\n  );\n};\n","import type React from \"react\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Account } from \"../types\";\nimport { PrincipalType } from \"../types\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { Button, Form, Modal } from \"@patternfly/react-core\";\nimport { Skeleton } from \"@patternfly/react-core\";\nimport { FormGroup, Popover } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\n\nexport type SelectAccountProps = {\n  accounts: Account[] | undefined;\n  initialOpen?: boolean;\n  kafkaName: string;\n  id?: string;\n  onNext: (selectedAccount: string | undefined) => void;\n  onClose: () => void;\n};\n\nexport const SelectAccount: React.VFC<SelectAccountProps> = ({\n  accounts,\n  initialOpen = false,\n  kafkaName,\n  id,\n  onNext,\n  onClose,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [isDirty, setIsDirty] = useState<boolean>(false);\n  const [selectedAccount, setSelectedAccount] = useState<string>();\n\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const onToggle = (newState: boolean) => {\n    setIsOpen(newState);\n  };\n\n  const clearSelection = () => {\n    setSelectedAccount(undefined);\n    setIsDirty(true);\n    setIsOpen(false);\n  };\n\n  const noServiceAccounts = [\n    <SelectOption\n      isNoResultsOption={true}\n      isDisabled={true}\n      key={t(\"no_results_found\")}\n    >\n      {t(\"no_results_found\")}\n    </SelectOption>,\n  ];\n  const noUserAccounts = [\n    <SelectOption\n      isNoResultsOption={true}\n      isDisabled={true}\n      key={\"no_user_accounts\"}\n    >\n      {t(\"no_results_found\")}\n    </SelectOption>,\n  ];\n\n  function makeOptions(filterValue = \"\") {\n    const filter = filterValue.toLowerCase();\n    const filteredAccounts =\n      filter !== \"\"\n        ? accounts?.filter(\n            (principal) =>\n              principal.displayName.toLowerCase().includes(filter) ||\n              principal.id.includes(filter)\n          )\n        : accounts;\n\n    const serviceAccountOptions = filteredAccounts\n      ?.filter(\n        (principal) => principal.principalType === PrincipalType.ServiceAccount\n      )\n      .sort((a, b) =>\n        a.displayName && b.displayName\n          ? a.displayName.localeCompare(b.displayName)\n          : -1\n      )\n      .map((principal, index) => (\n        <SelectOption\n          key={index}\n          value={principal.id}\n          description={principal.displayName}\n        >\n          {principal.id}\n        </SelectOption>\n      ));\n\n    const userAccountOperations = filteredAccounts\n      ?.filter(\n        (principal) => principal.principalType === PrincipalType.UserAccount\n      )\n      .map((principal, index) => (\n        <SelectOption\n          key={index}\n          value={principal.id}\n          description={principal.displayName}\n        >\n          {principal.id}\n        </SelectOption>\n      ));\n\n    return [\n      <SelectGroup key=\"all_accounts_group\">\n        <SelectOption\n          key={t(\"all_accounts_title\")}\n          value={t(\"all_accounts_title\")}\n          description={t(\"all_accounts_description\")}\n        >\n          {t(\"all_accounts_title\")}\n        </SelectOption>\n      </SelectGroup>,\n\n      <Divider key=\"all_accounts_divider\" />,\n      <SelectGroup\n        label={t(\"all_accounts_service_account_group\")}\n        key=\"service_accounts_group\"\n      >\n        {serviceAccountOptions?.length\n          ? serviceAccountOptions\n          : noServiceAccounts}\n      </SelectGroup>,\n      <Divider key=\"user_account_divider2\" />,\n      <SelectGroup\n        label={t(\"all_accounts_user_account_group\")}\n        key=\"user_accounts_group\"\n      >\n        {userAccountOperations?.length ? userAccountOperations : noUserAccounts}\n      </SelectGroup>,\n    ];\n  }\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, value) => {\n    setSelectedAccount(value as string);\n    setIsDirty(false);\n    setIsOpen(false);\n  };\n\n  const validated: ValidatedOptions = isDirty\n    ? ValidatedOptions.error\n    : ValidatedOptions.default;\n\n  return (\n    <Modal\n      id=\"manage-permissions-modal\"\n      variant={\"large\"}\n      isOpen={true}\n      aria-label={t(\"dialog_aria_label\")}\n      position=\"top\"\n      title={t(\"dialog_title\")}\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={onClose}\n      onEscapePress={onClose}\n      appendTo={() =>\n        id ? document.getElementById(id) || document.body : document.body\n      }\n      actions={[\n        <Button\n          key={1}\n          variant=\"primary\"\n          isDisabled={\n            selectedAccount == \"\" || selectedAccount == undefined ? true : false\n          }\n          onClick={() => onNext(selectedAccount)}\n          aria-label={t(\"step_1_submit_button\")}\n        >\n          {t(\"step_1_submit_button\")}\n        </Button>,\n        <Button\n          onClick={onClose}\n          key={2}\n          variant=\"secondary\"\n          aria-label={t(\"common:cancel\")}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <FormGroup\n          fieldId=\"kafka-instance-name\"\n          label={t(\"kafka_instance\")}\n          id=\"modal-message\"\n        >\n          {kafkaName}\n        </FormGroup>\n\n        <FormGroup\n          fieldId=\"account-name\"\n          validated={validated}\n          helperTextInvalid={t(\"common:required\")}\n          isRequired\n          label={t(\"account_id_title\")}\n          labelIcon={\n            <Popover bodyContent={t(\"account_id_help\")}>\n              <button\n                type=\"button\"\n                onClick={(e) => e.preventDefault()}\n                className=\"pf-c-form__group-label-help\"\n                aria-label={t(\"account_help\")}\n              >\n                <HelpIcon noVerticalAlign />\n              </button>\n            </Popover>\n          }\n        >\n          {accounts ? (\n            <Select\n              id={\"account-id\"}\n              data-testid=\"acls-select-account\"\n              className=\"kafka-ui--select--limit-height\"\n              variant={SelectVariant.typeahead}\n              typeAheadAriaLabel={t(\"account_id_title\")}\n              maxHeight={400}\n              onToggle={onToggle}\n              onSelect={onSelect}\n              onClear={clearSelection}\n              selections={selectedAccount}\n              onFilter={(_, value) => makeOptions(value)}\n              isOpen={isOpen}\n              placeholderText={t(\"account_id_typeahead_placeholder\")}\n              isCreatable\n              menuAppendTo=\"parent\"\n              validated={validated}\n              createText={t(\"resourcePrefix.create_text\")}\n              isGrouped\n              onCreateOption={() => {\n                setIsOpen(false);\n                setIsDirty(false);\n              }}\n            >\n              {makeOptions()}\n            </Select>\n          ) : (\n            <Skeleton width={\"100%\"} />\n          )}\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { AsyncTypeaheadSelect } from \"@rhoas/app-services-ui-components\";\n\ntype ResourceNameProps = {\n  value: string | undefined;\n  onChangeValue: (value: string | undefined) => void;\n  onFetchOptions: (filter: string) => string[];\n  submitted: boolean;\n  resourceType: ResourceTypeValue | undefined;\n  resourcePrefixRule: ResourcePrefixRuleValue;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const ResourceName: React.VFC<ResourceNameProps> = ({\n  value,\n  onChangeValue,\n  submitted,\n  resourceType,\n  resourcePrefixRule,\n  onFetchOptions,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const validationCheck = (\n    resourceType: ResourceTypeValue | undefined,\n    resourcePreixCondition: \"Starts with\" | \"Is\",\n    filter: string | undefined\n  ) => {\n    const regExp = new RegExp(\"^[0-9A-Za-z_.-]+$\");\n\n    if (filter === undefined || filter === \"\" || filter == \"*\")\n      return { isValid: true, message: undefined };\n    if (resourcePreixCondition == \"Is\" && resourceType == \"topic\") {\n      if (filter == \".\" || filter == \"..\")\n        return {\n          isValid: false,\n          message: t(\"resourcePrefix.invalid_topic_name\"),\n        };\n    }\n\n    if (resourceType == \"topic\" && !regExp.test(filter))\n      return {\n        isValid: false,\n        message: t(\"resourcePrefix.invalid_topic\"),\n      };\n\n    if (resourceType == \"consumer-group\" && !regExp.test(filter))\n      return {\n        isValid: false,\n        message: t(\"resourcePrefix.invalid_consumer_group\"),\n      };\n    if (filter.length > 32)\n      return { isValid: false, message: t(\"resourcePrefix.invalid_length\") };\n\n    return { isValid: true, message: undefined };\n  };\n\n  const onValidation = (filter: string | undefined) => {\n    const validationMessage = validationCheck(\n      resourceType,\n      resourcePrefixRule,\n      filter\n    );\n    setIsNameValid(validationMessage.isValid);\n    return validationMessage;\n  };\n\n  return (\n    <AsyncTypeaheadSelect\n      id=\"resource-name\"\n      ariaLabel={\n        resourcePrefixRule === \"Is\"\n          ? t(\"resourcePrefix.aria_label_name_is\", { value: resourceType })\n          : t(\"resourcePrefix.aria_label_name_starts_with\", {\n              value: resourceType,\n            })\n      }\n      value={value}\n      placeholderText={\n        resourcePrefixRule === \"Is\"\n          ? t(\"resourcePrefix.placeholder_name_is\")\n          : t(\"resourcePrefix.placeholder_name_starts_with\")\n      }\n      onChange={onChangeValue}\n      required={true}\n      submitted={submitted}\n      onFetchOptions={onFetchOptions}\n      onValidationCheck={onValidation}\n    />\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\n\nexport type ResourceOperationValue =\n  | \"All\"\n  | \"Read\"\n  | \"Write\"\n  | \"Create\"\n  | \"Delete\"\n  | \"Alter\"\n  | \"Describe\"\n  | \"Describe configs\"\n  | \"Alter configs\";\n\ntype ResourceOperationProps = {\n  value: ResourceOperationValue | undefined;\n  onChangeValue: (value: ResourceOperationValue | undefined) => void;\n  initialOpen?: boolean;\n  invalid: boolean;\n  resourceTypeOptions: string[];\n};\n\nexport const ResourceOperation: React.VFC<ResourceOperationProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n  invalid,\n  resourceTypeOptions,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourceOperationValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return resourceTypeOptions.map((value, index) => (\n      <SelectOption key={index} value={value}>\n        {value}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <FormGroup\n      validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n      helperTextInvalid={t(\"common:required\")}\n      fieldId={\"resource-operation-select\"}\n    >\n      <Select\n        id={\"resource-operation-select\"}\n        aria-label={t(\"operations.aria_label\", value)}\n        data-testid=\"acls-resource-operation-select\"\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        isOpen={isOpen}\n        width={200}\n        placeholderText={t(\"operations.placeholder_text\")}\n        validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n        selections={value}\n        menuAppendTo={document.body}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroup>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\n\nexport type ResourcePermissionValue = \"allow\" | \"deny\";\n\ntype ResourcePermissionProps = {\n  value: ResourcePermissionValue;\n  onChangeValue: (value: ResourcePermissionValue) => void;\n  initialOpen?: boolean;\n};\n\nexport const ResourcePermission: React.VFC<ResourcePermissionProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourcePermissionOptions: {\n    [key in ResourcePermissionValue]: string;\n  } = {\n    allow: t(\"permissions.allow\"),\n    deny: t(\"permissions.deny\"),\n  };\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourcePermissionValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourcePermissionOptions).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <Select\n      id={\"resource-permission-select\"}\n      aria-label={t(\"permissions.aria_label\", { value })}\n      data-testid=\"acls-resource-permission-select\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      width={150}\n      selections={value}\n      menuAppendTo={document.body}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type ResourcePrefixRuleValue = \"Is\" | \"Starts with\";\n\ntype ResourcePrefixRuleProps = {\n  value: ResourcePrefixRuleValue;\n  onChangeValue: (value: ResourcePrefixRuleValue) => void;\n  initialOpen?: boolean;\n};\n\nexport const ResourcePrefixRule: React.VFC<ResourcePrefixRuleProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourcePrefixRuleOptions: {\n    [key in ResourcePrefixRuleValue]: { label: string; description: string };\n  } = {\n    \"Starts with\": {\n      label: t(\"resource_prefix_rule.starts_with\"),\n      description: t(\"resource_prefix_rule.starts_with_description\"),\n    },\n    Is: {\n      label: t(\"resource_prefix_rule.is\"),\n      description: t(\"resource_prefix_rule.is_description\"),\n    },\n  };\n\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourcePrefixRuleValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourcePrefixRuleOptions).map(\n      ([key, { label, description }]) => (\n        <SelectOption key={key} value={key} description={description}>\n          {label}\n        </SelectOption>\n      )\n    );\n  };\n\n  return (\n    <Select\n      id={\"resource-prefix-rule-select\"}\n      aria-label={t(\"resource_prefix_rule.aria_label\", { value })}\n      data-testid=\"acls-resource-prefix-rule-select\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      width={150}\n      selections={value}\n      menuAppendTo={document.body}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\n\nexport type ResourceTypeValue =\n  | \"topic\"\n  | \"consumer-group\"\n  | \"kafka-instance\"\n  | \"transactional-id\";\n\ntype ResourceTypeProps = {\n  value: ResourceTypeValue | undefined;\n  onChangeValue: (value: ResourceTypeValue | undefined) => void;\n  initialOpen?: boolean;\n  invalid: boolean;\n};\n\nexport const ResourceType: React.VFC<ResourceTypeProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n  invalid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourceTypeOptions: { [key in ResourceTypeValue]: string } = {\n    \"consumer-group\": t(\"resourceTypes.consumer_group\"),\n    topic: t(\"resourceTypes.topic\"),\n    \"kafka-instance\": t(\"resourceTypes.kafka_instance\"),\n    \"transactional-id\": t(\"resourceTypes.transactional_id\"),\n  };\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourceTypeValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourceTypeOptions).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <FormGroup\n      validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n      helperTextInvalid={t(\"common:required\")}\n      fieldId={\"resource-type-select\"}\n    >\n      <Select\n        id={\"resource-type-select\"}\n        aria-label={\n          value != undefined\n            ? t(\"resourceTypes.resource_type_selected\", { value: value })\n            : t(\"resourceTypes.resource_type\")\n        }\n        data-testid=\"acls-resource-type-select\"\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        isOpen={isOpen}\n        width={200}\n        placeholderText={t(\"resourceTypes.placeholder_text\")}\n        validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n        selections={value}\n        menuAppendTo={document.body}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroup>\n  );\n};\n","import { Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ShortcutsTableHead: React.FC = () => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Thead>\n      <Tr>\n        <Th>{t(\"table.resource_column_title\")}</Th>\n        <Th />\n\n        <Th />\n\n        <Th>{t(\"table.permissions_column_title\")}</Th>\n        <Th />\n        <Th />\n      </Tr>\n    </Thead>\n  );\n};\n","import { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { ResourceType } from \"./ResourceType\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport { ResourcePermission } from \"./ResourcePermission\";\nimport type { ResourcePermissionValue } from \"./ResourcePermission\";\nimport { ResourceOperation } from \"./ResourceOperation\";\nimport type { ResourceOperationValue } from \"./ResourceOperation\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nexport type KafkaInstanceManualPermissions = {\n  resourceType: ResourceTypeValue | undefined;\n  onChangeResourceType: (value: ResourceTypeValue | undefined) => void;\n  submitted: boolean;\n  resourcePermission: ResourcePermissionValue;\n  onChangeResourcePermission: (value: ResourcePermissionValue) => void;\n  resourceOperation: ResourceOperationValue | undefined;\n  onChangeResourceOperation: (\n    value: ResourceOperationValue | undefined\n  ) => void;\n  row: number;\n  onDelete: (row: number) => void;\n};\n\nexport const KafkaInstanceManualPermissions: React.FC<\n  KafkaInstanceManualPermissions\n> = ({\n  resourceType,\n  resourceOperation,\n  resourcePermission,\n  submitted,\n  onChangeResourceOperation,\n  onChangeResourcePermission,\n  onChangeResourceType,\n  row,\n  onDelete,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Tbody>\n      <Tr>\n        <Td width={60}>\n          <ResourceType\n            value={resourceType}\n            onChangeValue={onChangeResourceType}\n            invalid={submitted && resourceType === undefined}\n          />\n        </Td>\n\n        <Td />\n        <Td />\n\n        <Td>\n          <ResourcePermission\n            value={resourcePermission}\n            onChangeValue={onChangeResourcePermission}\n          />\n        </Td>\n        <Td>\n          <ResourceOperation\n            value={resourceOperation}\n            onChangeValue={onChangeResourceOperation}\n            resourceTypeOptions={[\n              t(\"operations.alter\"),\n              t(\"operations.describe\"),\n            ]}\n            invalid={submitted && resourceOperation === undefined}\n          />\n        </Td>\n        <Td>\n          <RemoveButton\n            variant=\"link\"\n            onClick={() => onDelete(row)}\n            tooltip={t(\"operations.delete\")}\n          />\n        </Td>\n      </Tr>\n    </Tbody>\n  );\n};\n","import { Tbody, Tr, Td } from \"@patternfly/react-table\";\nimport { ResourceName } from \"./ResourceName\";\nimport { ResourceOperation } from \"./ResourceOperation\";\nimport type { ResourceOperationValue } from \"./ResourceOperation\";\nimport { ResourcePermission } from \"./ResourcePermission\";\nimport type { ResourcePermissionValue } from \"./ResourcePermission\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { ResourceType } from \"./ResourceType\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\nimport { useTranslation } from \"react-i18next\";\nimport { KafkaInstanceManualPermissions } from \"./KafkaInstanceManualPermissions\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\n\nexport type AssignPermissionsManualProps = {\n  resourceType: ResourceTypeValue | undefined;\n  onChangeResourceType: (value: ResourceTypeValue | undefined) => void;\n  submitted: boolean;\n  resourcePrefix: ResourcePrefixRuleValue;\n  onChangeResourcePrefix: (value: ResourcePrefixRuleValue) => void;\n  resourceName: string | undefined;\n  onChangeResource: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  resourcePermission: ResourcePermissionValue;\n  onChangeResourcePermission: (value: ResourcePermissionValue) => void;\n  resourceOperation: ResourceOperationValue | undefined;\n  onChangeResourceOperation: (\n    value: ResourceOperationValue | undefined\n  ) => void;\n  multipleShorctutPermissions?: boolean;\n  row: number;\n  onDelete: (row: number) => void;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const AssignPermissionsManual: React.FC<\n  AssignPermissionsManualProps\n> = ({\n  resourceType,\n  onChangeResourceType,\n  submitted,\n  resourcePrefix,\n  onChangeResourcePrefix,\n  resourceName,\n  onChangeResource,\n  onFetchResourceNameOptions,\n  resourcePermission,\n  resourceOperation,\n  onChangeResourceOperation,\n  onChangeResourcePermission,\n  multipleShorctutPermissions = true,\n  row,\n  onDelete,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const resourceTypeOptions = () => {\n    switch (resourceType) {\n      case \"consumer-group\":\n        return [\n          t(\"operations.all\"),\n          t(\"operations.read\"),\n          t(\"operations.delete\"),\n          t(\"operations.describe\"),\n        ];\n      case \"kafka-instance\":\n        return [t(\"operations.alter\"), t(\"operations.describe\")];\n      case \"transactional-id\":\n        return [\n          t(\"operations.all\"),\n          t(\"operations.write\"),\n          t(\"operations.describe\"),\n        ];\n      default:\n        return [\n          t(\"operations.all\"),\n          t(\"operations.read\"),\n          t(\"operations.write\"),\n          t(\"operations.create\"),\n          t(\"operations.delete\"),\n          t(\"operations.alter\"),\n          t(\"operations.describe\"),\n          t(\"operations.describe_configs\"),\n          t(\"operations.alter_configs\"),\n        ];\n    }\n  };\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n      {resourceType === \"kafka-instance\" ? (\n        <KafkaInstanceManualPermissions\n          resourceOperation={resourceOperation}\n          resourcePermission={resourcePermission}\n          resourceType={resourceType}\n          submitted={submitted}\n          onChangeResourceOperation={onChangeResourceOperation}\n          onChangeResourcePermission={onChangeResourcePermission}\n          onChangeResourceType={onChangeResourceType}\n          onDelete={onDelete}\n          row={row}\n        />\n      ) : (\n        <Tbody>\n          <Tr>\n            <Td>\n              <ResourceType\n                value={resourceType}\n                onChangeValue={onChangeResourceType}\n                invalid={submitted && resourceType === undefined}\n              />\n            </Td>\n            <Td>\n              <ResourcePrefixRule\n                value={resourcePrefix}\n                onChangeValue={onChangeResourcePrefix}\n              />\n            </Td>\n            <Td>\n              <ResourceName\n                value={resourceName}\n                onChangeValue={onChangeResource}\n                onFetchOptions={onFetchResourceNameOptions}\n                submitted={submitted}\n                resourceType={resourceType}\n                resourcePrefixRule={resourcePrefix}\n                setIsNameValid={setIsNameValid}\n              />\n            </Td>\n            <Td>\n              <ResourcePermission\n                value={resourcePermission}\n                onChangeValue={onChangeResourcePermission}\n              />\n            </Td>\n            <Td>\n              <ResourceOperation\n                resourceTypeOptions={resourceTypeOptions()}\n                value={resourceOperation}\n                onChangeValue={onChangeResourceOperation}\n                invalid={\n                  submitted && resourceOperation === undefined ? true : false\n                }\n              />\n            </Td>\n            <Td>\n              <RemoveButton\n                variant=\"link\"\n                onClick={() => onDelete(row)}\n                tooltip={t(\"remove_permission_tooltip\")}\n                ariaLabel={t(\"manual_delete\")}\n              />\n            </Td>\n          </Tr>\n        </Tbody>\n      )}\n    </>\n  );\n};\n","import { Tr, Td } from \"@patternfly/react-table\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ResourceName } from \"./ResourceName\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\n\nexport type ProduceTopicRowProps = {\n  onChange: (value: ResourcePrefixRuleValue) => void;\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n  onChangeResourceName: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  isConsumeTopicShortcut?: boolean;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ProduceTopicRow: React.FC<ProduceTopicRowProps> = ({\n  onChange,\n  prefixRuleValue,\n  resourceNameValue,\n  onChangeResourceName,\n  onFetchResourceNameOptions,\n  submitted,\n  isConsumeTopicShortcut,\n  setIsNameValid,\n}) => {\n  return (\n    <Tr style={{ borderBottom: isConsumeTopicShortcut ? \"none\" : \"\" }}>\n      <Td>\n        {\" \"}\n        <ResourceTypeLabel variant={\"TOPIC\"} />{\" \"}\n        <DisplayResourceName resourceType={\"TOPIC\"} />{\" \"}\n      </Td>\n      <Td>\n        {\n          <ResourcePrefixRule\n            value={prefixRuleValue}\n            onChangeValue={onChange}\n          />\n        }\n      </Td>\n      <Td>\n        <ResourceName\n          value={resourceNameValue}\n          onChangeValue={onChangeResourceName}\n          onFetchOptions={onFetchResourceNameOptions}\n          submitted={submitted}\n          resourceType={\"topic\"}\n          resourcePrefixRule={prefixRuleValue}\n          setIsNameValid={setIsNameValid}\n        />\n      </Td>\n      <Td colSpan={2}>\n        <PermissionOperationCell\n          permission={\"ALLOW\"}\n          operation={\n            isConsumeTopicShortcut\n              ? [\"READ\", \"DESCRIBE\"]\n              : [\"WRITE\", \"CREATE\", \"DESCRIBE\"]\n          }\n        />\n      </Td>\n    </Tr>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\n\nimport { ResourceName } from \"./ResourceName\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ProduceTopicRow } from \"./ProduceTopicRow\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\n\nexport type ConsumeTopicShortcutProps = {\n  onChangeConsumerResourcePrefixRule: (value: ResourcePrefixRuleValue) => void;\n  onChangeTopicResourcePrefixRule: (value: ResourcePrefixRuleValue) => void;\n  consumerPrefixRuleValue: ResourcePrefixRuleValue;\n  topicPrefixRuleValue: ResourcePrefixRuleValue;\n  consumerResourceNameValue: string | undefined;\n  topicResourceNameValue: string | undefined;\n  onChangeConsumerResourceName: (value: string | undefined) => void;\n  onChangeTopicResourceName: (value: string | undefined) => void;\n  onFetchConsumerResourceNameOptions: (filter: string) => string[];\n  onFetchTopicResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  multipleShorctutPermissions?: boolean;\n  onDelete: (row: number) => void;\n  row: number;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ConsumeTopicShortcut: React.FC<ConsumeTopicShortcutProps> = ({\n  onChangeConsumerResourceName,\n  topicPrefixRuleValue,\n  topicResourceNameValue,\n  consumerPrefixRuleValue,\n  consumerResourceNameValue,\n  submitted,\n  onChangeConsumerResourcePrefixRule,\n  onChangeTopicResourceName,\n  onChangeTopicResourcePrefixRule,\n  onFetchConsumerResourceNameOptions,\n  onFetchTopicResourceNameOptions,\n  onDelete,\n  multipleShorctutPermissions = true,\n  row,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_consume_topic\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_consume_topic\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_consume_topic_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_consumer\")}\n            />\n          </Td>\n        </Tr>\n        <ProduceTopicRow\n          setIsNameValid={setIsNameValid}\n          isConsumeTopicShortcut={true}\n          onChange={onChangeTopicResourcePrefixRule}\n          prefixRuleValue={topicPrefixRuleValue}\n          resourceNameValue={topicResourceNameValue}\n          onChangeResourceName={onChangeTopicResourceName}\n          onFetchResourceNameOptions={onFetchTopicResourceNameOptions}\n          submitted={submitted}\n        />\n        <Tr>\n          <Td>\n            {\" \"}\n            <ResourceTypeLabel variant={\"GROUP\"} />{\" \"}\n            <DisplayResourceName resourceType={\"GROUP\"} />{\" \"}\n          </Td>\n          <Td>\n            <ResourcePrefixRule\n              value={consumerPrefixRuleValue}\n              onChangeValue={onChangeConsumerResourcePrefixRule}\n            />\n          </Td>\n          <Td>\n            {\n              <ResourceName\n                value={consumerResourceNameValue}\n                onChangeValue={onChangeConsumerResourceName}\n                onFetchOptions={onFetchConsumerResourceNameOptions}\n                submitted={submitted}\n                resourceType={\"topic\"}\n                resourcePrefixRule={consumerPrefixRuleValue}\n                setIsNameValid={setIsNameValid}\n              />\n            }\n          </Td>\n          <Td>\n            <PermissionOperationCell\n              permission={\"ALLOW\"}\n              operation={[\"READ\"]}\n            />\n          </Td>\n        </Tr>\n      </Tbody>\n    </>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type ManageAccessShortcutProps = {\n  onDelete: (row: number) => void;\n  multipleShorctutPermissions?: boolean;\n  instanceName: string;\n  row: number;\n};\nexport const ManageAccessShortcut: React.FC<ManageAccessShortcutProps> = ({\n  onDelete,\n  multipleShorctutPermissions = true,\n  instanceName,\n  row,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_manage_access\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_manage_access\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_manage_access_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_access\")}\n            />\n          </Td>\n        </Tr>\n\n        <Tr>\n          <Td colSpan={2}>\n            <ResourceTypeLabel variant={\"CLUSTER\"} />{\" \"}\n            <DisplayResourceName resourceType={\"CLUSTER\"} />{\" \"}\n            {t(\"is_kafka_instance\", { value: instanceName })}\n          </Td>\n\n          <Td />\n\n          <Td>\n            <PermissionOperationCell\n              permission={\"ALLOW\"}\n              operation={[\"ALTER\"]}\n            />\n          </Td>\n        </Tr>\n      </Tbody>\n    </>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nimport { ProduceTopicRow } from \"./ProduceTopicRow\";\n\nexport type ProduceTopicShortcutProps = {\n  onChange: (value: ResourcePrefixRuleValue) => void;\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n  onChangeResourceName: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  onDelete: (row: number) => void;\n  multipleShorctutPermissions?: boolean;\n  row: number;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ProduceTopicShortcut: React.FC<ProduceTopicShortcutProps> = ({\n  onChange,\n  onDelete,\n  prefixRuleValue,\n  onChangeResourceName,\n  resourceNameValue,\n  submitted,\n  onFetchResourceNameOptions,\n  multipleShorctutPermissions = true,\n  row,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_produce_topic\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_produce_topic\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_produce_topic_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_producer\")}\n            />\n          </Td>\n        </Tr>\n\n        <ProduceTopicRow\n          onChange={onChange}\n          prefixRuleValue={prefixRuleValue}\n          resourceNameValue={resourceNameValue}\n          onChangeResourceName={onChangeResourceName}\n          onFetchResourceNameOptions={onFetchResourceNameOptions}\n          submitted={submitted}\n          setIsNameValid={setIsNameValid}\n        />\n      </Tbody>\n    </>\n  );\n};\n","import { ActionList, ActionListItem } from \"@patternfly/react-core\";\nimport { TableComposable } from \"@patternfly/react-table\";\nimport { PermissionsDropdown } from \"./PermissionsDropdown\";\nimport type { AddAclType } from \"../types\";\nimport { AssignPermissionsManual } from \"./AssignPermissionsManual\";\nimport { ConsumeTopicShortcut } from \"./ConsumeTopicShortcut\";\nimport { ManageAccessShortcut } from \"./ManageAccessShortcut\";\nimport { ProduceTopicShortcut } from \"./ProduceTopicShortcut\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type AssignPermissionsProps = {\n  submitted: boolean;\n  onDelete: (index: number) => void;\n  topicNameOptions: (filter: string) => string[];\n  consumerGroupNameOptions: (filter: string) => string[];\n  addedAcls?: AddAclType[];\n  onAddManualPermissions: () => void;\n  onAddProduceTopicShortcut: () => void;\n  onConsumeTopicShortcut: () => void;\n  onManageAccessShortcut: () => void;\n  kafkaName: string;\n  setAddedAcls: (value: AddAclType[]) => void;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const AssignPermissions: React.VFC<AssignPermissionsProps> = ({\n  submitted,\n  onDelete,\n  topicNameOptions,\n  consumerGroupNameOptions,\n  onAddManualPermissions,\n  onAddProduceTopicShortcut,\n  onConsumeTopicShortcut,\n  onManageAccessShortcut,\n  addedAcls,\n  kafkaName,\n  setAddedAcls,\n  setIsNameValid,\n}) => {\n  return (\n    <>\n      <TableComposable variant=\"compact\">\n        {addedAcls && addedAcls.length > 0 && <ShortcutsTableHead />}\n        {addedAcls &&\n          addedAcls.map((aclTemplate, idx) => {\n            switch (aclTemplate.type) {\n              case \"manual\":\n                return (\n                  <AssignPermissionsManual\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    resourceType={aclTemplate.resourceType}\n                    onChangeResourceType={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourceType: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    submitted={submitted}\n                    resourcePrefix={aclTemplate.resourcePrefix}\n                    onChangeResourcePrefix={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourcePrefix: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    resourceName={aclTemplate.resourceName}\n                    onChangeResource={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourceName: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchResourceNameOptions={topicNameOptions}\n                    resourcePermission={aclTemplate.resourcePermission}\n                    onChangeResourcePermission={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourcePermission: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    resourceOperation={aclTemplate.resourceOperation}\n                    onChangeResourceOperation={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourceOperation: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    row={idx}\n                    onDelete={onDelete}\n                  />\n                );\n\n              case \"consume-topic\":\n                return (\n                  <ConsumeTopicShortcut\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    onChangeConsumerResourcePrefixRule={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                consumerResourcePrefixRule: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onChangeTopicResourcePrefixRule={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                topicResourcePrefixRule: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    consumerPrefixRuleValue={\n                      aclTemplate.consumerResourcePrefixRule\n                    }\n                    topicPrefixRuleValue={aclTemplate.topicResourcePrefixRule}\n                    consumerResourceNameValue={aclTemplate.consumerResourceName}\n                    topicResourceNameValue={aclTemplate.topicResourceName}\n                    onChangeConsumerResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                consumerResourceName: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onChangeTopicResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                topicResourceName: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchConsumerResourceNameOptions={\n                      consumerGroupNameOptions\n                    }\n                    onFetchTopicResourceNameOptions={topicNameOptions}\n                    submitted={submitted}\n                    onDelete={onDelete}\n                    row={idx}\n                  />\n                );\n\n              case \"produce-topic\":\n                return (\n                  <ProduceTopicShortcut\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    onChange={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, prefixRuleValue: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    prefixRuleValue={aclTemplate.prefixRuleValue}\n                    resourceNameValue={aclTemplate.resourceNameValue}\n                    onChangeResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourceNameValue: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchResourceNameOptions={topicNameOptions}\n                    submitted={submitted}\n                    onDelete={onDelete}\n                    row={idx}\n                  />\n                );\n\n              case \"manage-access\":\n                return (\n                  <ManageAccessShortcut\n                    key={idx}\n                    row={idx}\n                    instanceName={kafkaName}\n                    onDelete={onDelete}\n                  />\n                );\n            }\n          })}\n      </TableComposable>\n      <ActionList>\n        <ActionListItem style={{ paddingTop: \"20px\" }}>\n          <PermissionsDropdown\n            onAddPermission={onAddManualPermissions}\n            onShortcutConsumeTopic={onConsumeTopicShortcut}\n            onShortcutProduceTopic={onAddProduceTopicShortcut}\n            onShortcutManageAccess={onManageAccessShortcut}\n          />\n        </ActionListItem>\n      </ActionList>\n    </>\n  );\n};\n","import type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Modal,\n  ModalVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\n\nexport type PreCancelModalProps = {\n  isOpen: boolean;\n  closeModal: () => void;\n  resumeEditing: () => void;\n};\n\nconst PreCancelModal: React.FC<PreCancelModalProps> = ({\n  isOpen,\n  closeModal,\n  resumeEditing,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Modal\n      id=\"manage-permissions-precancel-modal\"\n      variant={ModalVariant.small}\n      isOpen={isOpen}\n      aria-label={t(\"pre_cancel_label\")}\n      title={t(\"pre_cancel_title\")}\n      titleIconVariant=\"warning\"\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={resumeEditing}\n      onEscapePress={closeModal}\n      actions={[\n        <Button onClick={closeModal} key={1} variant={ButtonVariant.primary}>\n          {t(\"discard_changes\")}\n        </Button>,\n        <Button\n          onClick={resumeEditing}\n          key={2}\n          variant={ButtonVariant.secondary}\n        >\n          {t(\"resume_editing\")}\n        </Button>,\n      ]}\n    >\n      {t(\"cancel_description\")}\n    </Modal>\n  );\n};\n\nexport { PreCancelModal };\n","import type { VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\n\nimport type { AclBinding } from \"../types\";\nimport { PermissionOperationCell, PrincipalCell, ResourceCell } from \"./Cells\";\n\nexport type ReviewPermissionsTableProps = {\n  acls: AclBinding[];\n  selectedAccountId: string;\n  onRemoveAcl: (idx: number) => void;\n};\n\nexport const ReviewPermissionsTable: VFC<ReviewPermissionsTableProps> = ({\n  selectedAccountId,\n  acls = [],\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <TableComposable\n      variant={TableVariant.compact}\n      aria-label={t(\"review_permissions_table\")}\n    >\n      <Thead noWrap>\n        <Tr>\n          <Th width={60}>{t(\"table.resource_column_title\")}</Th>\n          <Th width={20}>{t(\"table.permissions_column_title\")}</Th>\n          <Th width={20} />\n        </Tr>\n      </Thead>\n      <Tbody>\n        {acls.map((acl, idx) => {\n          const {\n            patternType,\n            resourceType,\n            resourceName,\n            operation,\n            permission,\n            principal,\n          } = acl;\n          const isDeleteEnabled =\n            selectedAccountId === \"All accounts\" ||\n            principal === `User:${selectedAccountId}` ||\n            principal != `User:*`;\n          const isAllAccounts = principal === \"User:*\";\n\n          return (\n            <Tr key={idx}>\n              <Td>\n                <ResourceCell\n                  patternType={patternType}\n                  resourceType={resourceType}\n                  resourceName={resourceName}\n                />\n              </Td>\n              <Td>\n                <PermissionOperationCell\n                  permission={permission}\n                  operation={operation}\n                />\n              </Td>\n              <Td>\n                <PrincipalCell\n                  isDeleteEnabled={isDeleteEnabled}\n                  isAllAccounts={isAllAccounts}\n                  onRemoveAcl={() => onRemoveAcl(idx)}\n                />\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </TableComposable>\n  );\n};\n","import { Text, TextContent, TextVariants } from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { AclBinding } from \"../types\";\nimport { ReviewPermissionsTable } from \"./ReviewPermissionsTable\";\n\nexport type ViewAccountDetailsProps = {\n  accountId: string | undefined;\n  existingAcls: AclBinding[];\n  onRemoveAcl: (index: number) => void;\n};\n\nexport const ViewAccountDetails: React.VFC<ViewAccountDetailsProps> = ({\n  accountId,\n  existingAcls,\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const HelperText: React.FunctionComponent = () => {\n    if (accountId === \"All accounts\") {\n      return t(\"all_accounts_help\");\n    }\n    return (\n      <Trans ns={[\"manage-kafka-permissions\"]} i18nKey=\"selected_account_help\">\n        Review the list of existing permissions for the selected account. The\n        list includes account-specific permissions and permissions applied to\n        all accounts within this Kafka instance. Permissions labeled\n        <strong>All accounts</strong> cannot be removed when an individual\n        account ID is selected.\n      </Trans>\n    );\n  };\n  return (\n    <>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          <HelperText />\n        </Text>\n      </TextContent>\n      <ReviewPermissionsTable\n        acls={existingAcls}\n        selectedAccountId={accountId ? accountId : \"\"}\n        onRemoveAcl={onRemoveAcl}\n      />\n    </>\n  );\n};\n","import type { ResourceOperationValue } from \"./components/ResourceOperation\";\nimport type { ResourceTypeValue } from \"./components/ResourceType\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport { AclResourceType } from \"@rhoas/kafka-instance-sdk\";\nimport type { AddAclType } from \"./types\";\n\nexport const transformPermissions = (\n  transformAclData: AclBinding[],\n  newAcls?: AddAclType[],\n  selectedAccount?: string\n) => {\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  const selectedAccountName = `User:${selectedAccount}`;\n  newAcls?.map((value) => {\n    switch (value.type) {\n      case \"manual\": {\n        transformAclData.push({\n          resourceName:\n            value.resourceType == \"kafka-instance\"\n              ? \"kafka-cluster\"\n              : value.resourceName\n              ? value.resourceName\n              : \"\",\n          resourceType: transformResourceType(value.resourceType),\n          patternType: value.resourcePrefix == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n          operation: transformResourceOperation(value.resourceOperation),\n          permission: value.resourcePermission == \"allow\" ? \"ALLOW\" : \"DENY\",\n          principal:\n            selectedAccount == \"All accounts\" ? `User:*` : selectedAccountName,\n        });\n        break;\n      }\n      case \"manage-access\":\n        {\n          transformAclData.push({\n            resourceName: \"kafka-cluster\",\n            resourceType: \"CLUSTER\",\n            patternType: \"LITERAL\",\n            operation: \"ALTER\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          });\n        }\n        break;\n      case \"consume-topic\":\n        {\n          transformAclData.push(\n            {\n              resourceName: value.topicResourceName || \"\",\n              resourceType: \"TOPIC\",\n              patternType:\n                value.topicResourcePrefixRule == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n              operation: \"READ\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            },\n            {\n              resourceName: value.topicResourceName || \"\",\n              resourceType: \"TOPIC\",\n              patternType:\n                value.topicResourcePrefixRule == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n              operation: \"DESCRIBE\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            },\n            {\n              resourceName: value.consumerResourceName || \"\",\n              resourceType: \"GROUP\",\n              patternType:\n                value.consumerResourcePrefixRule == \"Is\"\n                  ? \"LITERAL\"\n                  : \"PREFIXED\",\n              operation: \"READ\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            }\n          );\n        }\n        break;\n      case \"produce-topic\": {\n        transformAclData.push(\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"WRITE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          },\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"CREATE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          },\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"DESCRIBE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          }\n        );\n      }\n    }\n  });\n};\n\nexport const transformResourceType = (value: ResourceTypeValue | undefined) => {\n  switch (value) {\n    case \"consumer-group\":\n      return AclResourceType.Group;\n    case \"kafka-instance\":\n      return AclResourceType.Cluster;\n    case \"topic\":\n      return AclResourceType.Topic;\n    default:\n      return AclResourceType.TransactionalId;\n  }\n};\nexport const transformResourceOperation = (\n  value: ResourceOperationValue | undefined\n) => {\n  switch (value) {\n    case \"All\":\n      return \"ALL\";\n    case \"Alter\":\n      return \"ALTER\";\n    case \"Alter configs\":\n      return \"ALTER_CONFIGS\";\n    case \"Create\":\n      return \"CREATE\";\n    case \"Delete\":\n      return \"DELETE\";\n    case \"Describe\":\n      return \"DESCRIBE\";\n    case \"Describe configs\":\n      return \"DESCRIBE_CONFIGS\";\n    case \"Read\":\n      return \"READ\";\n    default:\n      return \"WRITE\";\n  }\n};\n","import {\n  Button,\n  ExpandableSection,\n  Form,\n  FormGroup,\n  Modal,\n  TextContent,\n  TextVariants,\n  Text,\n  Badge,\n  Alert,\n  Popover,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AssignPermissions } from \"./AssignPermissions\";\nimport { PreCancelModal } from \"./PreCancelModal\";\nimport { ViewAccountDetails } from \"./ViewAccountDetails\";\nimport type { AddAclType } from \"../types\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport type { Permissions } from \"ui\";\nimport {\n  createEmptyConsumeTopicAcl,\n  createEmptyManageAccessAcl,\n  createEmptyManualAcl,\n  createEmptyProduceTopicAcl,\n} from \"../types\";\nimport { transformPermissions } from \"../utils\";\n\nexport type AclType = {\n  groups: Permissions[];\n  count: number;\n};\n\nexport type EditPermissionsProps = {\n  onCancel: () => void;\n  kafkaName: string;\n  onSave: (\n    acls: AclBinding[] | undefined,\n    deletedAcls: AclBinding[] | undefined\n  ) => void;\n  acls: AclBinding[];\n  topicsList: string[];\n  consumerGroupsList: string[];\n  id?: string;\n  selectedAccount: string | undefined;\n};\n\nexport const EditPermissions: React.FC<EditPermissionsProps> = ({\n  onCancel,\n  kafkaName,\n  acls,\n  onSave,\n  topicsList,\n  consumerGroupsList,\n  selectedAccount,\n  id,\n}) => {\n  const { t } = useTranslation([\n    \"manage-kafka-permissions\",\n    \"create-kafka-instance\",\n  ]);\n\n  const escapeClosesModal = useRef<boolean>(true);\n  const [\n    isExpandedExistingPermissionSection,\n    setIsExpandedExistingPermissionSection,\n  ] = useState<boolean>(false);\n  const [isAclDeleted, setIsAclDeleted] = useState<boolean>(false);\n  const [\n    isExpandedAssignPermissionsSection,\n    setIsExpandedAssignPermissionsSection,\n  ] = useState<boolean>(true);\n  const [isNameValid, setIsNameValid] = useState<boolean>(true);\n  const [canSave, setCanSave] = useState<boolean>(false);\n  const [submitted, setSubmitted] = useState<boolean>(false);\n  const [isOpenPreCancelModal, setIsOpenPreCancelModal] =\n    useState<boolean>(false);\n  const [existingAcls, setExistingAcls] = useState<AclBinding[]>(acls);\n  const [newAcls, setNewAcls] = useState<AddAclType[]>();\n  const [deletedAcls, setDeletedAcls] = useState<AclBinding[] | undefined>(\n    undefined\n  );\n\n  const checkValidation = useCallback(() => {\n    if (newAcls) {\n      const isRowInvalid = newAcls?.map((value) =>\n        value.type == \"manual\" &&\n        value.resourceType == \"kafka-instance\" &&\n        value.resourceOperation != undefined\n          ? false\n          : Object.values(value).includes(undefined)\n      );\n      isRowInvalid.includes(true) ? setCanSave(false) : setCanSave(true);\n      if (canSave == true && isNameValid) return true;\n      else return false;\n    }\n    if (deletedAcls && deletedAcls.length > 0) {\n      setCanSave(true);\n      return true;\n    } else return false;\n  }, [canSave, deletedAcls, isNameValid, newAcls]);\n\n  useEffect(() => {\n    checkValidation();\n  }, [checkValidation, newAcls]);\n\n  useEffect(() => {\n    //Fetch the latest table for exiting acls, only when no row is scheduled for deletion\n    if (deletedAcls == undefined) setExistingAcls(acls);\n  }, [acls, deletedAcls]);\n\n  const onEscapePress = () => {\n    if (escapeClosesModal.current) {\n      onCancel();\n    }\n  };\n  const topicFilter = (filter: string) => {\n    if (filter == \"\" || filter == undefined) return topicsList;\n    else return topicsList.filter((v) => v.includes(filter));\n  };\n\n  const consumerGroupsFilter = (filter: string) => {\n    if (filter == \"\" || filter == undefined) return consumerGroupsList;\n    else return consumerGroupsList.filter((v) => v.includes(filter));\n  };\n\n  const aclsToSave: AclBinding[] = [];\n\n  const onClickSubmit = () => {\n    if (\n      (newAcls && newAcls.length > 0) ||\n      (deletedAcls && deletedAcls.length > 0)\n    ) {\n      setSubmitted(true);\n      const isAclValid = checkValidation();\n      transformPermissions(aclsToSave, newAcls, selectedAccount);\n      isAclValid && onSave(aclsToSave, deletedAcls);\n    }\n  };\n\n  const onAddManualPermissions = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyManualAcl()]\n        : [createEmptyManualAcl()]\n    );\n  };\n  const onAddProduceTopicShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyProduceTopicAcl()]\n        : [createEmptyProduceTopicAcl()]\n    );\n  };\n  const onConsumeTopicShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyConsumeTopicAcl()]\n        : [createEmptyConsumeTopicAcl()]\n    );\n  };\n  const onManageAccessShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyManageAccessAcl(kafkaName)]\n        : [createEmptyManageAccessAcl(kafkaName)]\n    );\n  };\n\n  const onDeleteNewAcl = (row: number) => {\n    setNewAcls(\n      (prevState) => prevState && prevState.filter((_, index) => index !== row)\n    );\n  };\n\n  const onChangeExpandedExistingPermissionsSection = (value: boolean) => {\n    setIsExpandedExistingPermissionSection(value);\n  };\n  const onChangeExpandedAssignPermissionsSection = (value: boolean) => {\n    setIsExpandedAssignPermissionsSection(value);\n  };\n\n  const isDisabled =\n    (submitted && !canSave) ||\n    ((newAcls == undefined || newAcls.length < 1) && !isAclDeleted) ||\n    !isNameValid\n      ? true\n      : false;\n  const onClose = () => {\n    !isDisabled || (newAcls && newAcls?.length > 0)\n      ? setIsOpenPreCancelModal(true)\n      : onCancel();\n  };\n\n  const closePreCancelModal = () => {\n    setIsOpenPreCancelModal(false);\n    onCancel();\n  };\n\n  const resumeEditingPermissions = () => {\n    setIsOpenPreCancelModal(false);\n  };\n\n  const updateExistingAcls = (row: number) => {\n    setExistingAcls((existingAcls || []).filter((_, index) => index != row));\n  };\n\n  const onRemoveAcls = (row: number) => {\n    setDeletedAcls((prevState) =>\n      existingAcls && prevState != undefined\n        ? [...prevState, existingAcls[row]]\n        : existingAcls && [existingAcls[row]]\n    );\n    setIsAclDeleted(true);\n    updateExistingAcls(row);\n  };\n  //The value received will have a prefix 'User:'.Remove the prefix when displaying value\n  const accountDisplayName =\n    selectedAccount === \"All accounts\"\n      ? t(\"all_accounts_title\")\n      : selectedAccount?.includes(\"User:\")\n      ? selectedAccount?.split(\":\")[1]\n      : selectedAccount;\n  return (\n    <Modal\n      id=\"manage-permissions-modal\"\n      variant={\"large\"}\n      isOpen={true}\n      aria-label={t(\"dialog_aria_label\")}\n      position=\"top\"\n      title={t(\"dialog_title\")}\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={onClose}\n      onEscapePress={onEscapePress}\n      appendTo={() =>\n        id ? document.getElementById(id) || document.body : document.body\n      }\n      actions={[\n        <Button\n          key={1}\n          variant=\"primary\"\n          isDisabled={isDisabled}\n          onClick={onClickSubmit}\n          aria-label={t(\"step_2_submit_button\")}\n        >\n          {t(\"step_2_submit_button\")}\n        </Button>,\n        <Button\n          onClick={onClose}\n          key={2}\n          variant=\"secondary\"\n          aria-label={t(\"common:cancel\")}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <PreCancelModal\n        isOpen={isOpenPreCancelModal}\n        closeModal={closePreCancelModal}\n        resumeEditing={resumeEditingPermissions}\n      />\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <FormGroup\n          fieldId=\"kafka-instance-name\"\n          label={t(\"kafka_instance\")}\n          id=\"modal-message\"\n        >\n          {kafkaName}\n        </FormGroup>\n\n        <FormGroup\n          fieldId=\"account-name\"\n          label={t(\"account_id_title\")}\n          labelIcon={\n            <Popover bodyContent={t(\"account_id_help\")}>\n              <button\n                type=\"button\"\n                onClick={(e) => e.preventDefault()}\n                className=\"pf-c-form__group-label-help\"\n                aria-label={t(\"account_help\")}\n              >\n                <HelpIcon noVerticalAlign />\n              </button>\n            </Popover>\n          }\n        >\n          {accountDisplayName}\n        </FormGroup>\n        {(!canSave || !isNameValid) && submitted && (\n          <Alert\n            isInline\n            title={t(\"create-kafka-instance:form_errors.form_invalid\")}\n            variant={\"danger\"}\n          />\n        )}\n        <ExpandableSection\n          isIndented={true}\n          isExpanded={isExpandedExistingPermissionSection}\n          onToggle={onChangeExpandedExistingPermissionsSection}\n          toggleContent={\n            <div>\n              <span>{t(\"review_existing_title\")}</span>{\" \"}\n              <Badge isRead={existingAcls.length == 0 ? true : false}>\n                {existingAcls.length}\n              </Badge>\n            </div>\n          }\n        >\n          <ViewAccountDetails\n            accountId={selectedAccount}\n            existingAcls={existingAcls}\n            onRemoveAcl={onRemoveAcls}\n          />\n        </ExpandableSection>\n        <FormGroup>\n          <ExpandableSection\n            toggleText={t(\"assign_permissions_title\")}\n            isIndented={true}\n            isExpanded={isExpandedAssignPermissionsSection}\n            onToggle={onChangeExpandedAssignPermissionsSection}\n          >\n            <FormGroup>\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  {selectedAccount === \"All accounts\"\n                    ? t(\"assign_permissions_all_description\")\n                    : t(\"assign_permissions_description\", {\n                        value: accountDisplayName,\n                      })}\n                </Text>\n                {newAcls && newAcls?.length > 0 && (\n                  <Text component={TextVariants.small}>\n                    {t(\"all_fields_required\")}\n                  </Text>\n                )}\n              </TextContent>\n            </FormGroup>\n            <AssignPermissions\n              setIsNameValid={setIsNameValid}\n              submitted={submitted}\n              onAddManualPermissions={onAddManualPermissions}\n              onAddProduceTopicShortcut={onAddProduceTopicShortcut}\n              onConsumeTopicShortcut={onConsumeTopicShortcut}\n              onManageAccessShortcut={onManageAccessShortcut}\n              onDelete={onDeleteNewAcl}\n              topicNameOptions={topicFilter}\n              consumerGroupNameOptions={consumerGroupsFilter}\n              addedAcls={newAcls}\n              kafkaName={kafkaName}\n              setAddedAcls={setNewAcls}\n            />\n          </ExpandableSection>\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const EmptyStateInitialLoading: VoidFunctionComponent = () => {\n  return (\n    <PageSection isFilled={true}>\n      <EmptyState variant={EmptyStateVariant.xs}>\n        <EmptyStateBody data-chromatic=\"ignore\">\n          <AppServicesLoading />\n        </EmptyStateBody>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  PageSection,\n  Title,\n} from \"@patternfly/react-core\";\nimport { TachometerAltIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\n\nexport const EmptyStateMetricsUnavailable: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <PageSection isFilled={true}>\n      <EmptyState variant={EmptyStateVariant.xs}>\n        <EmptyStateIcon icon={TachometerAltIcon} />\n        <Title headingLevel=\"h3\" size=\"lg\">\n          {t(\"metrics:empty_state_no_data_title\")}\n        </Title>\n        <EmptyStateBody>{t(\"metrics:empty_state_no_data_body\")}</EmptyStateBody>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import { Grid, GridItem, PageSection } from \"@patternfly/react-core\";\nimport type { FunctionComponent, ReactElement } from \"react\";\n\ntype MetricsLayoutProps = {\n  metricsLagAlert: ReactElement;\n  topicsKpi: ReactElement;\n  topicPartitionsKpi: ReactElement;\n  consumerGroupKpi: ReactElement;\n  diskSpaceMetrics: ReactElement;\n  topicMetrics: ReactElement;\n};\nexport const MetricsLayout: FunctionComponent<MetricsLayoutProps> = ({\n  metricsLagAlert,\n  topicsKpi,\n  topicPartitionsKpi,\n  consumerGroupKpi,\n  diskSpaceMetrics,\n  topicMetrics,\n}) => {\n  return (\n    <PageSection\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n      padding={{ default: \"noPadding\" }}\n      className={\n        \"pf-u-px-lg-on-xl pf-u-pt-sm-on-xl pf-u-pb-lg-on-xl pf-u-px-md pf-u-pb-md\"\n      }\n    >\n      <Grid hasGutter>\n        <GridItem>{metricsLagAlert}</GridItem>\n        <GridItem sm={4}>{topicsKpi}</GridItem>\n        <GridItem sm={4}>{topicPartitionsKpi}</GridItem>\n        <GridItem sm={4}>{consumerGroupKpi}</GridItem>\n        <GridItem lg={6}>{diskSpaceMetrics}</GridItem>\n        <GridItem lg={6}>{topicMetrics}</GridItem>\n      </Grid>\n    </PageSection>\n  );\n};\n","import { CardBody, Bullseye, Spinner } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\n\nexport const CardBodyLoading: FunctionComponent = () => (\n  <CardBody>\n    <Bullseye>\n      <Spinner isSVG data-chromatic=\"ignore\" />\n    </Bullseye>\n  </CardBody>\n);\n","import { DurationOptions } from \"./types\";\n\nexport const timeIntervalsMapping = {\n  [DurationOptions.Last5minutes]: {\n    interval: 1 * 60,\n    ticks: 6,\n    showDate: false,\n  },\n  [DurationOptions.Last15minutes]: {\n    interval: 3 * 60,\n    ticks: 6,\n    showDate: false,\n  },\n  [DurationOptions.Last30minutes]: {\n    interval: 5 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last1hour]: { interval: 10 * 60, ticks: 6, showDate: false },\n  [DurationOptions.Last3hours]: {\n    interval: 30 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last6hours]: {\n    interval: 1 * 60 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last12hours]: {\n    interval: 2 * 60 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last24hours]: {\n    interval: 4 * 60 * 60,\n    ticks: 7,\n    showDate: true,\n  },\n  [DurationOptions.Last2days]: {\n    interval: 8 * 60 * 60,\n    ticks: 7,\n    showDate: true,\n  },\n  [DurationOptions.Last7days]: {\n    interval: 24 * 60 * 60,\n    ticks: 8,\n    showDate: true,\n  },\n} as const;\n\nexport const chartHeight = 350;\nexport const chartPadding = {\n  bottom: 110, // Adjusted to accomodate legend\n  left: 120,\n  right: 40,\n  top: 10,\n};\n","import { Flex, FlexItem, Skeleton } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ChartSkeletonLoader: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <Flex direction={{ default: \"column\" }} data-chromatic=\"ignore\">\n      <FlexItem>\n        <Skeleton\n          height={`${chartHeight - chartPadding.bottom}px`}\n          screenreaderText={t(\"common:skeleton_loader_screenreader_text\")}\n        />\n      </FlexItem>\n      <FlexItem>\n        <Skeleton height={`${chartPadding.bottom / 2 - 12.5}px`} width=\"20%\" />\n      </FlexItem>\n      <FlexItem>\n        <Skeleton height={`${chartPadding.bottom / 2 - 12.5}px`} width=\"40%\" />\n      </FlexItem>\n    </Flex>\n  );\n};\n","import type { RefObject } from \"react\";\nimport { useEffect, useLayoutEffect, useRef, useState } from \"react\";\n\nexport function useChartWidth(): [RefObject<HTMLDivElement>, number] {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number>(0);\n\n  const handleResize = () =>\n    containerRef.current && setWidth(containerRef.current.clientWidth);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return [containerRef, width];\n}\n","import byteSize from \"byte-size\";\nimport { fromUnixTime, sub } from \"date-fns\";\nimport { formatInTimeZone } from \"date-fns-tz\";\nimport { timeIntervalsMapping } from \"../consts\";\nimport type { DurationOptions } from \"../types\";\n\nexport function formatBytes(bytes: number): string {\n  return byteSize(bytes, { units: \"iec\" }).toString();\n}\n\nexport const shouldShowDate = (timeDuration: DurationOptions): boolean => {\n  return timeIntervalsMapping[timeDuration].showDate;\n};\n\nexport const dateToChartValue = (\n  timestamp: number,\n  { showDate }: { showDate: boolean } = { showDate: false }\n): string => {\n  const date = fromUnixTime(timestamp / 1000);\n  return formatInTimeZone(date, \"utc\", showDate ? \"HH:mm'\\n'MMM dd\" : \"HH:mm\");\n};\n\nexport function timestampsToTicks(\n  timestamps: string[],\n  duration: DurationOptions\n): number[] {\n  const allTimestamps = [...timestamps];\n  allTimestamps.sort();\n  const mostRecentTs =\n    parseInt(allTimestamps[allTimestamps.length - 1]) || Date.now();\n  return new Array(\n    Math.max(timeIntervalsMapping[duration].ticks, allTimestamps.length)\n  )\n    .fill(mostRecentTs)\n    .map((d: number, index) =>\n      sub(new Date(d), {\n        seconds: timeIntervalsMapping[duration].interval * index,\n      }).getTime()\n    );\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartArea,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartThreshold,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_black_500,\n  chart_color_blue_300,\n} from \"@patternfly/react-tokens\";\nimport type { ReactElement, VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { DurationOptions, TimeSeriesMetrics } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport { dateToChartValue, shouldShowDate, timestampsToTicks } from \"./utils\";\n\ntype ChartData = {\n  areaColor: string;\n  softLimitColor: string;\n  area: BrokerChartData[];\n  softLimit: BrokerChartData[];\n};\n\ntype BrokerChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol?: {\n    fill?: string;\n    type?: string;\n  };\n};\n\ntype ChartLinearWithOptionalLimitProps = {\n  metrics: TimeSeriesMetrics;\n  duration: DurationOptions;\n  chartName: string;\n  xLabel?: string;\n  yLabel?: string;\n  usageLimit?: number;\n  formatValue?: (d: number) => string;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\n\nexport const ChartLinearWithOptionalLimit: VoidFunctionComponent<\n  ChartLinearWithOptionalLimitProps\n> = ({\n  metrics,\n  duration,\n  chartName,\n  xLabel,\n  yLabel,\n  usageLimit,\n  formatValue = (d) => `${d}`,\n  isLoading,\n  emptyState,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getChartData(\n    metrics,\n    duration,\n    chartName,\n    t(\"metrics:limit\"),\n    usageLimit\n  );\n\n  const hasMetrics = Object.keys(metrics).length > 0;\n  const showDate = shouldShowDate(duration);\n\n  switch (true) {\n    case isLoading:\n      return <ChartSkeletonLoader />;\n    case !hasMetrics:\n      return emptyState;\n    default: {\n      const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n        `${datum.name}: ${formatValue(datum.y)}`;\n      return (\n        <div ref={containerRef}>\n          <Chart\n            ariaTitle={chartName}\n            containerComponent={\n              <ChartVoronoiContainer labels={labels} constrainToVisibleArea />\n            }\n            legendPosition=\"bottom-left\"\n            legendComponent={\n              <ChartLegend\n                orientation={\"horizontal\"}\n                data={legendData}\n                itemsPerRow={itemsPerRow}\n              />\n            }\n            height={chartHeight}\n            padding={chartPadding}\n            themeColor={ChartThemeColor.multiUnordered}\n            width={width}\n            legendAllowWrap={true}\n          >\n            <ChartAxis\n              label={\"\\n\" + (xLabel || t(\"metrics:axis-label-time\") || \"\")}\n              tickValues={tickValues}\n              tickFormat={(d: number) =>\n                dateToChartValue(d, {\n                  showDate,\n                })\n              }\n            />\n            <ChartAxis\n              label={\"\\n\\n\\n\\n\\n\" + (yLabel || chartName)}\n              dependentAxis\n              tickFormat={formatValue}\n            />\n            <ChartGroup>\n              {chartData.map((value, index) => (\n                <ChartArea\n                  key={`chart-area-${index}`}\n                  data={value.area}\n                  style={{\n                    data: {\n                      // TODO: check if this is needed\n                      // stroke: value.color,\n                    },\n                  }}\n                />\n              ))}\n            </ChartGroup>\n            <ChartThreshold\n              key={`chart-softlimit`}\n              data={chartData[0].softLimit}\n              style={{\n                data: {\n                  stroke: chartData[0].softLimitColor,\n                },\n              }}\n            />\n          </Chart>\n        </div>\n      );\n    }\n  }\n};\n\nfunction getChartData(\n  metrics: TimeSeriesMetrics,\n  duration: number,\n  lineLabel: string,\n  limitLabel: string,\n  usageLimit?: number\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData = [\n    usageLimit\n      ? {\n          name: limitLabel,\n          symbol: { fill: chart_color_black_500.value, type: \"threshold\" },\n        }\n      : undefined,\n    { name: lineLabel, symbol: { fill: chart_color_blue_300.value } },\n  ].filter((d) => !!d) as Array<LegendData>;\n\n  const areaColor = chart_color_blue_300.value;\n  const softLimitColor = chart_color_black_500.value;\n  const chartData: Array<ChartData> = [];\n  const area: Array<BrokerChartData> = [];\n  const softLimit: Array<BrokerChartData> = [];\n\n  Object.entries(metrics).map(([timestamp, bytes]) => {\n    area.push({ name: lineLabel, x: parseInt(timestamp, 10), y: bytes });\n  });\n  chartData.push({ areaColor, softLimitColor, area, softLimit });\n\n  const tickValues = timestampsToTicks(Object.keys(metrics), duration);\n\n  if (usageLimit) {\n    tickValues.forEach((timestamp) =>\n      softLimit.push({\n        name: limitLabel,\n        x: timestamp,\n        y: usageLimit,\n      })\n    );\n  }\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport { ChartLine } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_cyan_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { PartitionBytesMetric, PartitionSelect } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\nconst colors = [chart_color_cyan_300.value, chart_color_blue_300.value];\n\ntype ChartData = {\n  color: string;\n  area: PartitionChartData[];\n};\n\ntype PartitionChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n};\n\nexport type ChartLogSizePerPartitionProps = {\n  partitions: PartitionBytesMetric;\n  topic: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n  selectedPartition: PartitionSelect;\n};\nexport const ChartLogSizePerPartition: FunctionComponent<\n  ChartLogSizePerPartitionProps\n> = ({\n  partitions,\n  topic,\n  duration,\n  isLoading,\n  emptyState,\n  selectedPartition,\n}) => {\n    const { t } = useTranslation();\n    const [containerRef, width] = useChartWidth();\n\n    const { chartData, legendData, tickValues } = getChartData(\n      partitions,\n      topic,\n      duration,\n      selectedPartition\n    );\n\n    const hasMetrics = Object.keys(partitions).length > 0;\n\n    const showDate = shouldShowDate(duration);\n\n    return (\n      <div ref={containerRef} style={{ marginTop: \"-30px\", height: \"700px\", width: \"650px\" }}>\n        {(() => {\n          switch (true) {\n            case isLoading:\n              return <ChartSkeletonLoader />;\n            case !hasMetrics:\n              return emptyState;\n            default: {\n              const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n                `${datum.name}: ${formatBytes(datum.y)}`;\n\n              return (\n                <Chart\n                  ariaTitle={t(\"metrics:log_size_per_partition\")}\n                  containerComponent={\n                    <ChartVoronoiContainer\n                      labels={labels}\n                      constrainToVisibleArea\n                    />\n                  }\n                  legendPosition=\"bottom-left\"\n                  legendComponent={<ChartLegend data={legendData} />}\n                  height={chartHeight}\n                  padding={chartPadding}\n                  themeColor={ChartThemeColor.multiOrdered}\n                  width={width}\n                  legendAllowWrap={true}\n                >\n                  <ChartAxis\n                    label={\"\\n\" + t(\"metrics:axis-label-time\")}\n                    tickValues={tickValues}\n                    tickFormat={(d: number) =>\n                      dateToChartValue(d, {\n                        showDate,\n                      })\n                    }\n                  />\n                  <ChartAxis\n                    label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n                    dependentAxis\n                    tickFormat={formatBytes}\n                  />\n                  <ChartGroup>\n                    {chartData.map((value, index) => (\n                      <ChartLine key={`chart-area-${index}`} data={value.area} />\n                    ))}\n                  </ChartGroup>\n                </Chart>\n              );\n            }\n          }\n        })()}\n      </div>\n    );\n  };\n\nexport function getChartData(\n  partitions: PartitionBytesMetric,\n  topic: string | undefined,\n  duration: number,\n  selectedPartition: PartitionSelect\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n\n  const top50Partition = Object.entries(partitions).sort((a, b) => {\n    const aValue = Object.values(a[1]).reduce((sum, val) => sum + val, 0);\n    const bValue = Object.values(b[1]).reduce((sum, val) => sum + val, 0);\n    return bValue - aValue;\n  });\n\n  selectedPartition === \"Top10\"\n    ? top50Partition.slice(0, 10).map(([partition, dataMap], index) => {\n      const name = topic ? `${topic} / ${partition}` : partition;\n      const color = colors[index];\n      legendData.push({\n        name,\n      });\n      const area: Array<PartitionChartData> = [];\n\n      Object.entries(dataMap).map(([timestamp, value]) => {\n        area.push({ name, x: parseInt(timestamp, 10), y: value });\n      });\n      chartData.push({ color, area });\n    })\n    : top50Partition\n      .slice(0, 20)\n      .sort((a, b) => {\n        const dataMapAValues = Object.values(a[1]);\n        const dataMapBValues = Object.values(b[1]);\n        const aValueSum = dataMapAValues.reduce((sum, val) => sum + val, 0);\n        const bValueSum = dataMapBValues.reduce((sum, val) => sum + val, 0);\n        return bValueSum - aValueSum;\n      })\n      .sort((a, b) => b[1][1] - a[1][1])\n      .slice(0, 20)\n      .map(([partition, dataMap], index) => {\n        const name = topic ? `${topic} / ${partition}` : partition;\n        const color = colors[index];\n        legendData.push({\n          name,\n        });\n        const area: Array<PartitionChartData> = [];\n\n        Object.entries(dataMap).map(([timestamp, value]) => {\n          area.push({ name, x: parseInt(timestamp, 10), y: value });\n        });\n        chartData.push({ color, area });\n      });\n\n  const allTimestamps = Array.from(\n    new Set(Object.values(partitions).flatMap((m) => Object.keys(m)))\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\ntype ChartPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ChartPopover: VoidFunctionComponent<ChartPopoverProps> = ({\n  title,\n  description,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Popover\n      aria-label={title}\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon\n        aria-label={t(\"metrics:chart-popover-icon-screenreader-text\", {\n          title,\n        })}\n      />\n    </Popover>\n  );\n};\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartLine,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_green_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding, timeIntervalsMapping } from \"../consts\";\nimport type { TimeSeriesMetrics } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\ntype ChartData = {\n  color: string;\n  line: TopicChartData[];\n};\n\ntype TopicChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol: {\n    fill: string;\n    type?: string;\n  };\n};\n\ntype ChartTotalBytesProps = {\n  incomingTopicsData: TimeSeriesMetrics;\n  outgoingTopicsData: TimeSeriesMetrics;\n  selectedTopic: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\nexport const ChartTotalBytes: FunctionComponent<ChartTotalBytesProps> = ({\n  incomingTopicsData,\n  outgoingTopicsData,\n  selectedTopic,\n  duration,\n  isLoading,\n  emptyState,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getBytesChartData(\n    incomingTopicsData,\n    outgoingTopicsData,\n    duration,\n    selectedTopic\n      ? t(\"metrics:incoming_bytes\", {\n          topic: selectedTopic,\n        })\n      : t(\"metrics:incoming_bytes_all_topics\"),\n    selectedTopic\n      ? t(\"metrics:outgoing_bytes\", {\n          topic: selectedTopic,\n        })\n      : t(\"metrics:outgoing_bytes_all_topics\")\n  );\n\n  const hasMetrics =\n    Object.keys(incomingTopicsData).length > 0 ||\n    Object.keys(outgoingTopicsData).length > 0;\n\n  const showDate = shouldShowDate(duration);\n\n  switch (true) {\n    case isLoading:\n      return <ChartSkeletonLoader />;\n    case !hasMetrics:\n      return emptyState;\n    default: {\n      const labels: ChartVoronoiContainerProps[\"labels\"] =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n        ({ datum }) => `${datum.name}: ${formatBytes(datum.y)}`;\n      return (\n        <div ref={containerRef}>\n          <Chart\n            ariaTitle={t(\"metrics:total_bytes\")}\n            containerComponent={\n              <ChartVoronoiContainer labels={labels} constrainToVisibleArea />\n            }\n            legendAllowWrap={true}\n            legendPosition=\"bottom-left\"\n            legendComponent={\n              <ChartLegend data={legendData} itemsPerRow={itemsPerRow} />\n            }\n            height={chartHeight}\n            padding={chartPadding}\n            themeColor={ChartThemeColor.multiUnordered}\n            width={width}\n          >\n            <ChartAxis\n              label={\"\\n\" + t(\"metrics:axis-label-time\")}\n              tickValues={tickValues}\n              tickCount={timeIntervalsMapping[duration].ticks}\n              tickFormat={(d: number) =>\n                dateToChartValue(d, {\n                  showDate,\n                })\n              }\n            />\n            <ChartAxis\n              label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n              dependentAxis\n              tickFormat={formatBytes}\n            />\n            <ChartGroup>\n              {chartData.map((value, index) => (\n                <ChartLine\n                  key={`chart-line-${index}`}\n                  data={value.line}\n                  style={{\n                    data: {\n                      stroke: value.color,\n                    },\n                  }}\n                />\n              ))}\n            </ChartGroup>\n          </Chart>\n        </div>\n      );\n    }\n  }\n};\n\nexport function getBytesChartData(\n  incomingTopic: TimeSeriesMetrics,\n  outgoingTopic: TimeSeriesMetrics,\n  duration: number,\n  incomingTopicName: string,\n  outgoingTopicName: string\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n\n  const incomingLine = metricsToLine(incomingTopic, incomingTopicName);\n  if (incomingLine.length > 0) {\n    const color = chart_color_blue_300.value;\n    chartData.push({ color, line: incomingLine });\n    legendData.push({\n      name: incomingTopicName,\n      symbol: {\n        fill: color,\n      },\n    });\n  }\n\n  const outgoingLine = metricsToLine(outgoingTopic, outgoingTopicName);\n  if (outgoingLine.length > 0) {\n    const color = chart_color_green_300.value;\n    chartData.push({ color, line: outgoingLine });\n    legendData.push({\n      name: outgoingTopicName,\n      symbol: {\n        fill: color,\n      },\n    });\n  }\n  const allTimestamps = Array.from(\n    new Set([...Object.keys(incomingTopic), ...Object.keys(outgoingTopic)])\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n\nexport function metricsToLine(\n  metrics: TimeSeriesMetrics,\n  name: string\n): Array<TopicChartData> {\n  const line: Array<TopicChartData> = [];\n\n  Object.entries(metrics).map(([timestamp, bytes]) => {\n    line.push({ name, x: parseInt(timestamp, 10), y: bytes });\n  });\n  return line;\n}\n","import {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateNoMetricsData: FunctionComponent = () => {\n  const { t } = useTranslation([\"metrics\"]);\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon\n        icon={ExclamationTriangleIcon}\n        color=\"var(--pf-global--warning-color--100)\"\n      />\n      <Title headingLevel=\"h3\" size=\"md\">\n        {t(\"metric_not_available\")}\n      </Title>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateNoMetricsDataForSelection: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_metrics_data_title\")}\n      </Title>\n      <EmptyStateBody>\n        {t(\"metrics:empty_state_no_metrics_data_body\")}\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { WrenchIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\ntype EmptyStateNoTopicsProps = {\n  onCreateTopic?: () => void;\n};\nexport const EmptyStateNoTopics: FunctionComponent<EmptyStateNoTopicsProps> = ({\n  onCreateTopic,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={WrenchIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_topics_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"metrics:empty_state_no_topics_body\")}</EmptyStateBody>\n      {onCreateTopic && (\n        <Button\n          ouiaId=\"button-create\"\n          variant=\"primary\"\n          onClick={onCreateTopic}\n        >\n          {t(\"metrics:empty_state_no_topics_create_topic\")}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const EmptyStateNoTopicSelected: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={FilterIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_filter_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"metrics\"}\n          i18nKey={\"empty_state_no_filter_body\"}\n          components={{ bold: <strong /> }}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { PartitionSelect } from \"../types\";\n\ntype FilterByPartitionProps = {\n  partitionValue: PartitionSelect;\n  onSetSelectedPartition: (value: PartitionSelect) => void;\n};\n\nexport const FilterByPartition: VoidFunctionComponent<\n  FilterByPartitionProps\n> = ({ partitionValue, onSetSelectedPartition }) => {\n  const { t } = useTranslation(\"metrics\");\n\n  const [ispartitionSelectOpen, setIspartitionSelectOpen] =\n    useState<boolean>(false);\n\n  const onBrokerToggle = (ispartitionSelectOpen: boolean) => {\n    setIspartitionSelectOpen(ispartitionSelectOpen);\n  };\n\n  const partitionSelectOption: { [key in PartitionSelect]: string } = {\n    Top10: t(\"top10_partitions\"),\n    Top20: t(\"top20_partitions\"),\n  };\n\n  const onBrokerSelect: SelectProps[\"onSelect\"] = (_, partition) => {\n    onSetSelectedPartition(partition as PartitionSelect);\n    setIspartitionSelectOpen(false);\n  };\n\n  const partitionOptions = () => {\n    return Object.entries(partitionSelectOption).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <ToolbarItem>\n      <Select\n        variant={SelectVariant.single}\n        isOpen={ispartitionSelectOpen}\n        onToggle={onBrokerToggle}\n        onSelect={onBrokerSelect}\n        selections={partitionValue}\n        position=\"left\"\n        placeholderText={t(\"top10_partitions\")}\n        aria-label={t(\"filter-by-partitions\")}\n      >\n        {partitionOptions()}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  ToolbarItem,\n  Select,\n  SelectVariant,\n  SelectGroup,\n  SelectOption,\n} from \"@patternfly/react-core\";\nimport { DurationOptions } from \"../types\";\n\nexport const DurationOptionsMap = {\n  [DurationOptions.Last5minutes]: \"Last 5 minutes\",\n  [DurationOptions.Last15minutes]: \"Last 15 minutes\",\n  [DurationOptions.Last30minutes]: \"Last 30 minutes\",\n  [DurationOptions.Last1hour]: \"Last 1 hour\",\n  [DurationOptions.Last3hours]: \"Last 3 hours\",\n  [DurationOptions.Last6hours]: \"Last 6 hours\",\n  [DurationOptions.Last12hours]: \"Last 12 hours\",\n  [DurationOptions.Last24hours]: \"Last 24 hours\",\n  [DurationOptions.Last2days]: \"Last 2 days\",\n  [DurationOptions.Last7days]: \"Last 7 days\",\n} as const;\n\ntype FilterByTimeProps = {\n  duration: DurationOptions;\n  onDurationChange: (value: DurationOptions) => void;\n  keyText: string;\n  ariaLabel: string;\n  disableToolbar: boolean;\n};\n\nexport const FilterByTime: VoidFunctionComponent<FilterByTimeProps> = ({\n  duration,\n  keyText,\n  ariaLabel,\n  disableToolbar,\n  onDurationChange,\n}) => {\n  const [isTimeSelectOpen, setIsTimeSelectOpen] = useState<boolean>(false);\n\n  const onTimeToggle = (isTimeSelectOpen: boolean) => {\n    setIsTimeSelectOpen(isTimeSelectOpen);\n  };\n\n  const onTimeSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    const mapping = Object.entries(DurationOptionsMap).find(\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ([_, value]) => value === selection\n    );\n    if (mapping) {\n      onDurationChange(parseInt(mapping[0], 10) as DurationOptions);\n    }\n    setIsTimeSelectOpen(false);\n  };\n\n  const timeOptions = (keyText: string) => [\n    <SelectGroup label=\"Relative time ranges\" key={`${keyText}-group`}>\n      {Object.values(DurationOptionsMap).map((label, idx) => (\n        <SelectOption key={`${keyText}-${idx}`} value={label} />\n      ))}\n    </SelectGroup>,\n  ];\n  const ariaId = `filter-by-time-${Date.now()}`;\n  return (\n    <ToolbarItem>\n      <label hidden id={ariaId}>\n        {ariaLabel}\n      </label>\n      <Select\n        variant={SelectVariant.single}\n        aria-labelledby={ariaId}\n        onToggle={onTimeToggle}\n        onSelect={onTimeSelect}\n        selections={DurationOptionsMap[duration]}\n        isOpen={isTimeSelectOpen}\n        isDisabled={disableToolbar}\n      >\n        {timeOptions(keyText)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport \"./FilterByTopic.css\";\n\nconst widths = {\n  default: \"150px\",\n  sm: \"150px\",\n  md: \"150px\",\n  lg: \"200px\",\n  xl: \"200px\",\n  \"2xl\": \"200px\",\n};\n\ntype FilterByTopicProps = {\n  selectedTopic: string | undefined;\n  topicList: string[];\n  disableToolbar: boolean;\n  ariaLabel: string;\n  onSetSelectedTopic: (value: string | undefined) => void;\n};\n\nexport const FilterByTopic: VoidFunctionComponent<FilterByTopicProps> = ({\n  selectedTopic,\n  topicList = [],\n  disableToolbar,\n  ariaLabel,\n  onSetSelectedTopic,\n}) => {\n  const { t } = useTranslation();\n  const [isTopicSelectOpen, setIsTopicSelectOpen] = useState<boolean>(false);\n  const [selectKey, setSelectKey] = useState(Math.random());\n\n  useEffect(() => setSelectKey(Math.random()), [topicList]);\n\n  const allTopicsLabel = t(\"metrics:all_topics\");\n\n  const onTopicToggle = (isTopicSelectOpen: boolean) => {\n    setIsTopicSelectOpen(isTopicSelectOpen);\n  };\n\n  const onTopicSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    selection !== allTopicsLabel\n      ? onSetSelectedTopic(selection as string)\n      : onSetSelectedTopic(undefined);\n    setIsTopicSelectOpen(false);\n  };\n\n  const onTopicFilter = (_: unknown, textInput: string) => {\n    const filteredTopics =\n      topicList.filter((topic) => topic.indexOf(textInput) != -1) || [];\n    return topicOptions(filteredTopics);\n  };\n\n  const topicOptions = (topicList: string[]) => [\n    <SelectOption key={\"topic-filter-0\"} value={allTopicsLabel} />,\n    <SelectGroup label=\"Filter by topic\" key=\"topic-filter-group\">\n      {topicList.map((topic, index) => (\n        <SelectOption\n          key={`topic-filter-${index + 1}`}\n          value={topic}\n          title={topic}\n        />\n      ))}\n    </SelectGroup>,\n  ];\n\n  const isDisabled = disableToolbar || topicList.length === 0;\n  const ariaId = `filter-by-topic-${Date.now()}`;\n\n  return (\n    <ToolbarItem widths={widths}>\n      <label hidden id={ariaId}>\n        {ariaLabel}\n      </label>\n      <Select\n        key={selectKey}\n        variant={SelectVariant.single}\n        onToggle={onTopicToggle}\n        onSelect={onTopicSelect}\n        selections={selectedTopic || allTopicsLabel}\n        isOpen={isTopicSelectOpen}\n        placeholderText={\n          <>\n            <FilterIcon /> {allTopicsLabel}\n          </>\n        }\n        aria-labelledby={ariaId}\n        onFilter={onTopicFilter}\n        isGrouped\n        hasInlineFilter\n        isDisabled={isDisabled}\n        position=\"left\"\n        className={\"appserv-metrics-filterbytopic\"}\n      >\n        {topicOptions(topicList)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import { ToolbarItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate, RefreshButton } from \"@rhoas/app-services-ui-components\";\n\nexport type ToolbarRefreshProps = {\n  isRefreshing: boolean;\n  lastUpdated: Date | undefined;\n  ariaLabel: string;\n  onRefresh: () => void;\n};\n\nexport const ToolbarRefresh: VoidFunctionComponent<ToolbarRefreshProps> = ({\n  isRefreshing,\n  lastUpdated = new Date(),\n  ariaLabel,\n  onRefresh,\n}) => {\n  const { t } = useTranslation([\"metrics\"]);\n\n  return (\n    <>\n      <ToolbarItem>\n        <RefreshButton\n          ariaLabel={ariaLabel}\n          onClick={onRefresh}\n          isRefreshing={isRefreshing}\n        />\n      </ToolbarItem>\n      <ToolbarItem\n        alignment={{ default: \"alignRight\" }}\n        style={{ color: \"var(--pf-global--Color--200)\" }}\n      >\n        <div className=\"pf-u-font-size-xs\">\n          {isRefreshing ? (\n            t(\"metrics:refreshing\")\n          ) : (\n            <>\n              {t(\"metrics:last-refresh\")}\n              <br />\n              <FormatDate date={lastUpdated} format=\"distanceToNow\" />\n              {t(\"metrics:last-refresh-distance\")}\n            </>\n          )}\n        </div>\n      </ToolbarItem>\n    </>\n  );\n};\n","import {\n  CardHeader,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { DurationOptions } from \"../types\";\nimport { FilterByTime } from \"./FilterByTime\";\nimport { FilterByTopic } from \"./FilterByTopic\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarRefresh } from \"./ToolbarRefresh\";\n\ntype ToolbarTopicsMetricsProps = {\n  title: string;\n  selectedTopic: string | undefined;\n  topicList: string[];\n  duration: DurationOptions;\n  isDisabled: boolean;\n  onSetTimeDuration: (value: DurationOptions) => void;\n  onSetSelectedTopic: (value: string | undefined) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\nexport const ToolbarTopicsMetrics: FunctionComponent<\n  ToolbarTopicsMetricsProps\n> = ({\n  title,\n  selectedTopic,\n  topicList,\n  duration,\n  isDisabled,\n  isRefreshing,\n  lastUpdated,\n  onSetTimeDuration,\n  onRefresh,\n  onSetSelectedTopic,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <CardHeader>\n        <CardTitle component=\"h2\">{title}</CardTitle>\n      </CardHeader>\n      <Divider />\n      <Toolbar>\n        <ToolbarContent>\n          <FilterByTopic\n            ariaLabel={t(\"metrics:topics_filter_by_topic\")}\n            selectedTopic={selectedTopic}\n            onSetSelectedTopic={onSetSelectedTopic}\n            topicList={topicList}\n            disableToolbar={isDisabled}\n          />\n          <FilterByTime\n            ariaLabel={t(\"metrics:topics_filter_by_time\")}\n            duration={duration}\n            onDurationChange={onSetTimeDuration}\n            disableToolbar={isDisabled}\n            keyText={\"topic-metrics-time-filter\"}\n          />\n          <ToolbarRefresh\n            isRefreshing={isRefreshing}\n            lastUpdated={lastUpdated}\n            onRefresh={onRefresh}\n            ariaLabel={t(\"metrics:topics_refresh\")}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <Divider />\n    </>\n  );\n};\n","import {\n  Card,\n  CardBody,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type {\n  DurationOptions,\n  PartitionBytesMetric,\n  PartitionSelect,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { CardBodyLoading } from \"./CardBodyLoading\";\nimport { ChartLinearWithOptionalLimit } from \"./ChartLinearWithOptionalLimit\";\nimport { ChartLogSizePerPartition } from \"./ChartLogSizePerPartition\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { ChartTotalBytes } from \"./ChartTotalBytes\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\nimport { EmptyStateNoMetricsDataForSelection } from \"./EmptyStateNoMetricsDataForSelection\";\nimport { EmptyStateNoTopics } from \"./EmptyStateNoTopics\";\nimport { EmptyStateNoTopicSelected } from \"./EmptyStateNoTopicSelected\";\nimport { FilterByPartition } from \"./FilterByPartition\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarTopicsMetrics } from \"./ToolbarTopicsMetrics\";\n\ntype CardTopicsMetricsProps = {\n  topics: string[];\n  incomingTopicsData: TimeSeriesMetrics;\n  outgoingTopicsData: TimeSeriesMetrics;\n  partitions: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n  duration: DurationOptions;\n  backendUnavailable: boolean;\n  isInitialLoading: boolean;\n  isLoading: boolean;\n  isJustCreated: boolean;\n  selectedTopic: string | undefined;\n  onCreateTopic: () => void;\n  onSelectedTopic: (topic: string | undefined) => void;\n  onDurationChange: (duration: DurationOptions) => void;\n  onSelectedPartition: (value: PartitionSelect) => void;\n  selectedPartition: PartitionSelect;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\n\nexport const CardTopicsMetrics: FunctionComponent<CardTopicsMetricsProps> = ({\n  topics,\n  incomingTopicsData,\n  outgoingTopicsData,\n  incomingMessageRate,\n  selectedTopic,\n  duration,\n  partitions,\n  backendUnavailable,\n  isInitialLoading,\n  isLoading,\n  isRefreshing,\n  isJustCreated,\n  lastUpdated,\n  onCreateTopic,\n  onRefresh,\n  onSelectedTopic,\n  onDurationChange,\n  selectedPartition,\n  onSelectedPartition,\n}) => {\n  const { t } = useTranslation();\n  const noTopics = topics.length === 0;\n  const selectedTopicNotInList =\n    selectedTopic !== undefined &&\n    topics.find((t) => t === selectedTopic) === undefined;\n  const chartEmptyState = selectedTopicNotInList ? (\n    <EmptyStateNoMetricsDataForSelection />\n  ) : (\n    <EmptyStateNoMetricsData />\n  );\n  return (\n    <Card data-testid={\"metrics-topics\"}>\n      <ToolbarTopicsMetrics\n        title={t(\"metrics:topic_metrics\")}\n        duration={duration}\n        onSetTimeDuration={onDurationChange}\n        isDisabled={\n          backendUnavailable || isJustCreated || noTopics || isLoading\n        }\n        isRefreshing={isRefreshing}\n        selectedTopic={selectedTopic}\n        onSetSelectedTopic={onSelectedTopic}\n        onRefresh={onRefresh}\n        topicList={topics}\n        lastUpdated={lastUpdated}\n      />\n      {(() => {\n        switch (true) {\n          case isInitialLoading:\n            return <CardBodyLoading />;\n\n          case backendUnavailable:\n            return (\n              <CardBody>\n                <EmptyStateNoMetricsData />\n              </CardBody>\n            );\n\n          case isJustCreated && !noTopics:\n            return (\n              <CardBody>\n                <EmptyStateNoTopics />\n              </CardBody>\n            );\n\n          case isJustCreated && noTopics:\n            return (\n              <CardBody>\n                <EmptyStateNoTopics onCreateTopic={onCreateTopic} />\n              </CardBody>\n            );\n\n          case selectedTopic !== undefined:\n            return (\n              <>\n                <TotalBytesTitle />\n                <CardBody>\n                  <ChartTotalBytes\n                    incomingTopicsData={incomingTopicsData}\n                    outgoingTopicsData={outgoingTopicsData}\n                    selectedTopic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <IncomingMessageRate />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"metrics:topic_incoming_message_rate\")}\n                    yLabel={t(\"metrics:topic_incoming_message_rate_y_axis\")}\n                    metrics={incomingMessageRate}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <PartitionSizeTitle />\n                <CardBody>\n                  <Toolbar>\n                    <ToolbarContent>\n                      <FilterByPartition\n                        onSetSelectedPartition={onSelectedPartition}\n                        partitionValue={selectedPartition}\n                      />\n                    </ToolbarContent>\n                  </Toolbar>\n                  <ChartLogSizePerPartition\n                    partitions={partitions}\n                    topic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                    selectedPartition={selectedPartition}\n                  />\n                </CardBody>\n              </>\n            );\n\n          default:\n            return (\n              <>\n                <TotalBytesTitle />\n                <CardBody>\n                  <ChartTotalBytes\n                    incomingTopicsData={incomingTopicsData}\n                    outgoingTopicsData={outgoingTopicsData}\n                    selectedTopic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <IncomingMessageRate />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"metrics:topic_incoming_message_rate\")}\n                    yLabel={t(\"metrics:topic_incoming_message_rate_y_axis\")}\n                    metrics={incomingMessageRate}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <PartitionSizeTitle />\n                <CardBody>\n                  <EmptyStateNoTopicSelected />\n                </CardBody>\n              </>\n            );\n        }\n      })()}\n    </Card>\n  );\n};\n\nconst TotalBytesTitle: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:total_bytes\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:total_bytes_popover_header\")}\n        description={t(\"metrics:topic_metrics_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n\nconst PartitionSizeTitle: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:partition_size\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:topic_partition_size_popover_header\")}\n        description={t(\"metrics:topic_partition_size_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n\nconst IncomingMessageRate: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:topic_incoming_message_rate\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:topic_incoming_message_rate_popover_header\")}\n        description={t(\"metrics:topic_incoming_message_rate_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { SelectGroup } from \"@patternfly/react-core\";\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ntype FilterByBrokerProps = {\n  selectedBroker: string | undefined;\n  brokerList: string[];\n  onSetSelectedBroker: (value: string | undefined) => void;\n  disableToolbar: boolean;\n};\n\nexport const FilterByBroker: VoidFunctionComponent<FilterByBrokerProps> = ({\n  selectedBroker,\n  brokerList,\n  onSetSelectedBroker,\n  disableToolbar,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  const [isBrokerSelectOpen, setIsBrokerSelectOpen] = useState<boolean>(false);\n\n  const onBrokerToggle = (isBrokerSelectOpen: boolean) => {\n    setIsBrokerSelectOpen(isBrokerSelectOpen);\n  };\n\n  const onBrokerSelect: SelectProps[\"onSelect\"] = (_, broker) => {\n    broker !== t(\"all_brokers\")\n      ? onSetSelectedBroker(broker as string)\n      : onSetSelectedBroker(undefined);\n    setIsBrokerSelectOpen(false);\n  };\n\n  const brokerOptions = (brokerList: string[]) => [\n    <SelectOption key={\"broker-filter-0\"} value={t(\"all_brokers\")} />,\n    <SelectGroup label=\"Filter by broker\" key=\"broker-filter-group\">\n      {brokerList.map((broker, index) => (\n        <SelectOption\n          key={`broker-filter-${index + 1}`}\n          value={broker}\n          title={broker}\n        />\n      ))}\n    </SelectGroup>,\n  ];\n\n  const isDisabled = disableToolbar || brokerList.length === 0;\n\n  return (\n    <ToolbarItem>\n      <Select\n        variant={SelectVariant.single}\n        isOpen={isBrokerSelectOpen}\n        onToggle={onBrokerToggle}\n        onSelect={onBrokerSelect}\n        selections={selectedBroker || t(\"all_brokers\")}\n        position=\"left\"\n        placeholderText={t(\"all_brokers\")}\n        aria-label={t(\"filter-by-broker\")}\n        isDisabled={isDisabled}\n      >\n        {brokerOptions(brokerList)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport {\n  CardHeader,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport { FilterByTime } from \"./FilterByTime\";\nimport { FilterByBroker } from \"./FilterByBroker\";\nimport type { DurationOptions } from \"../types\";\nimport { useTranslation } from \"react-i18next\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarRefresh } from \"./ToolbarRefresh\";\n\ntype ToolbarKafkaInstanceMetricProps = {\n  title: string;\n  selectedBroker: string | undefined;\n  brokerList: string[];\n  isDisabled: boolean;\n  duration: DurationOptions;\n  onSetTimeDuration: (value: DurationOptions) => void;\n  onSetSelectedBroker: (value: string | undefined) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\nexport const ToolbarKafkaInstanceMetric: FunctionComponent<\n  ToolbarKafkaInstanceMetricProps\n> = ({\n  title,\n  isDisabled,\n  isRefreshing,\n  lastUpdated,\n  duration,\n  onSetTimeDuration,\n  onRefresh,\n  selectedBroker,\n  brokerList,\n  onSetSelectedBroker,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <CardHeader>\n        <CardTitle component=\"h2\">{title}</CardTitle>\n      </CardHeader>\n      <Divider />\n      <Toolbar>\n        <ToolbarContent>\n          <FilterByBroker\n            selectedBroker={selectedBroker}\n            brokerList={brokerList}\n            onSetSelectedBroker={onSetSelectedBroker}\n            disableToolbar={isDisabled}\n          />\n          <FilterByTime\n            ariaLabel={t(\"metrics:kafka_instance_filter_by_time\")}\n            duration={duration}\n            onDurationChange={onSetTimeDuration}\n            keyText={\"kafka-metrics-time-filter\"}\n            disableToolbar={isDisabled}\n          />\n          <ToolbarRefresh\n            isRefreshing={isRefreshing}\n            lastUpdated={lastUpdated}\n            onRefresh={onRefresh}\n            ariaLabel={t(\"metrics:kafka_instance_refresh\")}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <Divider />\n    </>\n  );\n};\n","import { ToggleGroup, ToggleGroupItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { BrokerFilter } from \"../types\";\n\nexport type BrokerToggleProps = {\n  value: BrokerFilter;\n  onChange: (value: BrokerFilter) => void;\n  selectedBroker: string | undefined;\n};\n\nexport const BrokerToggle: VoidFunctionComponent<BrokerToggleProps> = ({\n  value,\n  onChange,\n  selectedBroker,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  return (\n    <ToggleGroup>\n      <ToggleGroupItem\n        text={t(\"broker_filter.total\")}\n        value=\"total\"\n        buttonId=\"total\"\n        isSelected={value === \"total\"}\n        onChange={() => onChange(\"total\")}\n        isDisabled={selectedBroker !== undefined}\n      />\n      <ToggleGroupItem\n        text={t(\"broker_filter.per_broker\")}\n        value=\"perBroker\"\n        buttonId=\"perBroker\"\n        isSelected={value === \"perBroker\" || selectedBroker !== undefined}\n        onChange={() => onChange(\"perBroker\")}\n      />\n    </ToggleGroup>\n  );\n};\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport { ChartLine } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_cyan_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { PartitionBytesMetric, PartitionSelect } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\nconst colors = [chart_color_cyan_300.value, chart_color_blue_300.value];\n\ntype ChartData = {\n  color: string;\n  area: PartitionChartData[];\n};\n\ntype PartitionChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n};\n\nexport type ChartPartitionLogSizePerBrokerProps = {\n  partitions: PartitionBytesMetric;\n  broker: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n  selectedPartition: PartitionSelect;\n};\nexport const ChartPartitionLogSizePerBroker: FunctionComponent<\n  ChartPartitionLogSizePerBrokerProps\n> = ({\n  partitions,\n  broker,\n  duration,\n  isLoading,\n  emptyState,\n  selectedPartition,\n}) => {\n    const { t } = useTranslation();\n    const [containerRef, width] = useChartWidth();\n\n    const { chartData, legendData, tickValues } = getChartData(\n      partitions,\n      broker,\n      duration,\n      selectedPartition\n    );\n\n    const hasMetrics = Object.keys(partitions).length > 0;\n\n    const showDate = shouldShowDate(duration);\n\n    return (\n      <div ref={containerRef} style={{ height: \"700px\" }}>\n        {(() => {\n          switch (true) {\n            case isLoading:\n              return <ChartSkeletonLoader />;\n            case !hasMetrics:\n              return emptyState;\n            default: {\n              const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n                `${datum.name}: ${formatBytes(datum.y)}`;\n\n              return (\n                <Chart\n                  ariaTitle={t(\"metrics:log_size_per_partition\")}\n                  containerComponent={\n                    <ChartVoronoiContainer\n                      labels={labels}\n                      constrainToVisibleArea\n                    />\n                  }\n                  legendPosition=\"bottom-left\"\n                  legendComponent={<ChartLegend data={legendData} />}\n                  height={chartHeight}\n                  padding={chartPadding}\n                  themeColor={ChartThemeColor.multiOrdered}\n                  width={width}\n                  legendAllowWrap={true}\n                >\n                  <ChartAxis\n                    label={\"\\n\" + t(\"metrics:axis-label-time\")}\n                    tickValues={tickValues}\n                    tickFormat={(d: number) =>\n                      dateToChartValue(d, {\n                        showDate,\n                      })\n                    }\n                  />\n                  <ChartAxis\n                    label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n                    dependentAxis\n                    tickFormat={formatBytes}\n                  />\n                  <ChartGroup>\n                    {chartData.map((value, index) => (\n                      <ChartLine key={`chart-area-${index}`} data={value.area} />\n                    ))}\n                  </ChartGroup>\n                </Chart>\n              );\n            }\n          }\n        })()}\n      </div>\n    );\n  };\n\nexport function getChartData(\n  partitions: PartitionBytesMetric,\n  broker: string | undefined,\n  duration: number,\n  selectedPartition: PartitionSelect\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n\n  const top50Partition = Object.entries(partitions).sort((a, b) => {\n    const aValue = Object.values(a[1]).reduce((sum, val) => sum + val, 0);\n    const bValue = Object.values(b[1]).reduce((sum, val) => sum + val, 0);\n    return bValue - aValue;\n  });\n  selectedPartition === \"Top10\"\n    ? top50Partition.slice(0, 10).map(([partition, dataMap], index) => {\n      const name = broker ? ` ${partition}` : partition;\n      const color = colors[index];\n      legendData.push({\n        name,\n      });\n      const area: Array<PartitionChartData> = [];\n\n      Object.entries(dataMap).map(([timestamp, value]) => {\n        area.push({ name, x: parseInt(timestamp, 10), y: value });\n      });\n      chartData.push({ color, area });\n    })\n    : top50Partition.slice(0, 20).map(([partition, dataMap], index) => {\n      const name = broker ? `${partition}` : partition;\n      const color = colors[index];\n      legendData.push({\n        name,\n      });\n      const area: Array<PartitionChartData> = [];\n\n      Object.entries(dataMap).map(([timestamp, value]) => {\n        area.push({ name, x: parseInt(timestamp, 10), y: value });\n      });\n      chartData.push({ color, area });\n    });\n\n  const allTimestamps = Array.from(\n    new Set(Object.values(partitions).flatMap((m) => Object.keys(m)))\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport { ChartLine } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n  ChartThreshold,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_cyan_300,\n  chart_color_black_500,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { BrokerBytesMetric, BrokerFilter } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\nconst colors = [chart_color_cyan_300.value, chart_color_blue_300.value];\n\ntype ChartData = {\n  color: string;\n  softLimitColor: string;\n  area: BrokerChartData[];\n  softLimit: BrokerChartData[];\n};\n\ntype BrokerChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol?: {\n    fill?: string;\n    type?: string;\n  };\n};\n\nexport type ChartUsedDiskSpaceProps = {\n  metrics: BrokerBytesMetric;\n  broker: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n  brokerToggle: BrokerFilter;\n  usageLimit?: number;\n};\nexport const ChartUsedDiskSpace: FunctionComponent<ChartUsedDiskSpaceProps> = ({\n  metrics,\n  broker,\n  duration,\n  isLoading,\n  emptyState,\n  brokerToggle,\n  usageLimit,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const { chartData, legendData, tickValues } = getChartData(\n    metrics,\n    broker,\n    duration,\n    brokerToggle,\n    t(\"metrics:limit\"),\n    usageLimit\n  );\n\n  const hasMetrics = Object.keys(metrics).length > 0;\n\n  const showDate = shouldShowDate(duration);\n\n  return (\n    <div ref={containerRef} style={{ height: \"400px\" }}>\n      {(() => {\n        switch (true) {\n          case isLoading:\n            return <ChartSkeletonLoader />;\n          case !hasMetrics:\n            return emptyState;\n          default: {\n            const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n              `${datum.name}: ${formatBytes(datum.y)}`;\n\n            return (\n              <Chart\n                ariaTitle={t(\"metrics:log_size_per_partition\")}\n                containerComponent={\n                  <ChartVoronoiContainer\n                    labels={labels}\n                    constrainToVisibleArea\n                  />\n                }\n                legendPosition=\"bottom-left\"\n                legendComponent={<ChartLegend data={legendData} />}\n                height={chartHeight}\n                padding={chartPadding}\n                themeColor={ChartThemeColor.multiOrdered}\n                width={width}\n                legendAllowWrap={true}\n              >\n                <ChartAxis\n                  label={\"\\n\" + t(\"metrics:axis-label-time\")}\n                  tickValues={tickValues}\n                  tickFormat={(d: number) =>\n                    dateToChartValue(d, {\n                      showDate,\n                    })\n                  }\n                />\n                <ChartAxis\n                  label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n                  dependentAxis\n                  tickFormat={formatBytes}\n                />\n                <ChartGroup>\n                  {chartData.map((value, index) => (\n                    <ChartLine key={`chart-area-${index}`} data={value.area} />\n                  ))}\n                </ChartGroup>\n                <ChartThreshold\n                  key={`chart-softlimit`}\n                  data={chartData[0].softLimit}\n                  style={{\n                    data: {\n                      stroke: chartData[0].softLimitColor,\n                    },\n                  }}\n                />\n              </Chart>\n            );\n          }\n        }\n      })()}\n    </div>\n  );\n};\n\nexport function getChartData(\n  metrics: BrokerBytesMetric,\n  broker: string | undefined,\n  duration: number,\n  brokerToggle: BrokerFilter,\n  limitLabel: string,\n  usageLimit?: number\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData = [\n    usageLimit\n      ? {\n          name: limitLabel,\n          symbol: { fill: chart_color_black_500.value, type: \"threshold\" },\n        }\n      : undefined,\n  ].filter((d) => !!d) as Array<LegendData>;\n\n  const chartData: Array<ChartData> = [];\n  const softLimit: Array<BrokerChartData> = [];\n  const softLimitColor = chart_color_black_500.value;\n\n  if (broker && metrics[broker]) {\n    const area: Array<BrokerChartData> = [];\n    const color = chart_color_blue_300.value;\n    legendData.push({ name: broker, symbol: { fill: color } });\n    Object.entries(metrics[broker]).forEach(([timestamp, bytes]) => {\n      area.push({ name: broker, x: parseInt(timestamp, 10), y: bytes });\n    });\n    chartData.push({ color, softLimitColor, area, softLimit });\n  } else if (brokerToggle === \"total\") {\n    const area: Array<BrokerChartData> = [];\n\n    const color = chart_color_blue_300.value;\n    legendData.push({ name: \"Instance\", symbol: { fill: color } });\n    metrics[brokerToggle] &&\n      Object.entries(metrics[brokerToggle]).forEach(([timestamp, bytes]) => {\n        area.push({ name: \"Instance\", x: parseInt(timestamp, 10), y: bytes });\n      });\n    chartData.push({ color, softLimitColor, area, softLimit });\n  } else {\n    Object.entries(metrics)\n      .filter((metric) => metric[0] !== \"total\")\n      .map(([metric, dataMap], index) => {\n        const name = metric;\n\n        const color = colors[index];\n        legendData.push({ name });\n        const area: Array<BrokerChartData> = [];\n\n        Object.entries(dataMap).forEach(([timestamp, value]) => {\n          area.push({ name, x: parseInt(timestamp, 10), y: value });\n        });\n        chartData.push({ color, softLimitColor, area, softLimit });\n      });\n  }\n\n  const allTimestamps = Array.from(\n    new Set(Object.values(metrics).flatMap((m) => Object.keys(m)))\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  if (usageLimit) {\n    tickValues.forEach((timestamp) =>\n      softLimit.push({\n        name: limitLabel,\n        x: timestamp,\n        y: usageLimit,\n      })\n    );\n  }\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import {\n  Alert,\n  Card,\n  CardBody,\n  CardTitle,\n  Divider,\n  Grid,\n  GridItem,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type {\n  BrokerBytesMetric,\n  BrokerFilter,\n  DurationOptions,\n  PartitionBytesMetric,\n  PartitionSelect,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { CardBodyLoading } from \"./CardBodyLoading\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { ChartLinearWithOptionalLimit } from \"./ChartLinearWithOptionalLimit\";\nimport { EmptyStateMetricsUnavailable } from \"./EmptyStateMetricsUnavailable\";\nimport { ToolbarKafkaInstanceMetric } from \"./ToolbarKafkaInstanceMetric\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { BrokerToggle } from \"./BrokerToggle\";\nimport { ChartPartitionLogSizePerBroker } from \"./ChartPartitionLogSizePerBroker\";\nimport { FilterByPartition } from \"./FilterByPartition\";\nimport { ChartUsedDiskSpace } from \"./CardUsedDiskSpaceMetrics\";\n\nexport type CardKafkaInstanceMetricsLimits = {\n  diskSpaceLimit: number;\n  connectionsLimit: number;\n  connectionRateLimit: number;\n};\n\nexport type CardKafkaInstanceMetricsProps = {\n  usedDiskMetrics: BrokerBytesMetric;\n  brokers: string[];\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n  duration: DurationOptions;\n  lastUpdated: Date | undefined;\n  backendUnavailable: boolean;\n  isInitialLoading: boolean;\n  isLoading: boolean;\n  isJustCreated: boolean;\n  selectedBroker: string | undefined;\n  onSelectedBroker: (broker: string | undefined) => void;\n  onDurationChange: (duration: DurationOptions) => void;\n  selectToggle: BrokerFilter;\n  onSelectedToggle: (value: BrokerFilter) => void;\n  bytesPerPartitions: PartitionBytesMetric;\n  onSelectedPartition: (value: PartitionSelect) => void;\n  selectedPartition: PartitionSelect;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\"> &\n  CardKafkaInstanceMetricsLimits;\n\ntype ChartTitleProps = {\n  title: string;\n  helperText: string;\n};\n\nexport const CardKafkaInstanceMetrics: FunctionComponent<\n  CardKafkaInstanceMetricsProps\n> = ({\n  usedDiskMetrics,\n  brokers,\n  clientConnectionsMetrics,\n  connectionAttemptRateMetrics,\n  duration,\n  lastUpdated,\n  backendUnavailable,\n  isInitialLoading,\n  isLoading,\n  isRefreshing,\n  isJustCreated,\n  diskSpaceLimit,\n  connectionsLimit,\n  connectionRateLimit,\n  onRefresh,\n  onDurationChange,\n  selectedBroker,\n  onSelectedBroker,\n  selectToggle,\n  onSelectedToggle,\n  selectedPartition,\n  onSelectedPartition,\n  bytesPerPartitions,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  return (\n    <Card data-testid={\"metrics-kafka-instance\"}>\n      <ToolbarKafkaInstanceMetric\n        title={t(\"kafka_instance_metrics\")}\n        duration={duration}\n        lastUpdated={lastUpdated}\n        onSetTimeDuration={onDurationChange}\n        isDisabled={backendUnavailable || isJustCreated || isLoading}\n        isRefreshing={isRefreshing}\n        onRefresh={onRefresh}\n        selectedBroker={selectedBroker}\n        onSetSelectedBroker={onSelectedBroker}\n        brokerList={brokers}\n      />\n      {(() => {\n        switch (true) {\n          case isInitialLoading:\n            return <CardBodyLoading />;\n\n          case backendUnavailable:\n            return (\n              <CardBody>\n                <EmptyStateNoMetricsData />\n              </CardBody>\n            );\n\n          case isJustCreated:\n            return (\n              <CardBody>\n                <EmptyStateMetricsUnavailable />\n              </CardBody>\n            );\n\n          default:\n            return (\n              <>\n                <ChartTitle\n                  title={t(\"used_disk_space\")}\n                  helperText={t(\"used_disk_space_help_text\")}\n                />\n                <CardBody>\n                  <BrokerToggle\n                    value={selectToggle}\n                    onChange={onSelectedToggle}\n                    selectedBroker={selectedBroker}\n                  />\n                  <ChartUsedDiskSpace\n                    metrics={usedDiskMetrics}\n                    broker={selectedBroker}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                    brokerToggle={selectToggle}\n                    usageLimit={diskSpaceLimit}\n                  />\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"partition_size\")}\n                  helperText={t(\"broker_partition_size_help_text\")}\n                />\n                <CardBody>\n                  <Toolbar>\n                    <ToolbarContent>\n                      <FilterByPartition\n                        onSetSelectedPartition={onSelectedPartition}\n                        partitionValue={selectedPartition}\n                      />\n                    </ToolbarContent>\n                    <ChartPartitionLogSizePerBroker\n                      partitions={bytesPerPartitions}\n                      broker={selectedBroker}\n                      duration={duration}\n                      isLoading={isLoading}\n                      selectedPartition={selectedPartition}\n                      emptyState={<EmptyStateNoMetricsData />}\n                    />\n                  </Toolbar>\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"client_connections\")}\n                  helperText={t(\"client_connections_helper_text\")}\n                />\n                <CardBody>\n                  <Grid hasGutter>\n                    <GridItem>\n                      {selectedBroker ? (\n                        <Alert\n                          variant=\"info\"\n                          isInline\n                          title={t(\"client_connection_alert\")}\n                        />\n                      ) : null}\n                    </GridItem>\n                    <GridItem>\n                      <ChartLinearWithOptionalLimit\n                        chartName={t(\"client_connections\")}\n                        yLabel={t(\"client_connections_y_axis\")}\n                        metrics={clientConnectionsMetrics}\n                        duration={duration}\n                        usageLimit={connectionsLimit}\n                        isLoading={isLoading}\n                        emptyState={<EmptyStateNoMetricsData />}\n                      />\n                    </GridItem>\n                  </Grid>\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"connection_attempt_rate\")}\n                  helperText={t(\"connection_attempt_rate_help_text\")}\n                />\n                <CardBody>\n                  <Grid hasGutter>\n                    <GridItem>\n                      {selectedBroker ? (\n                        <Alert\n                          variant=\"info\"\n                          isInline\n                          title={t(\"connection_attempt_rate_alert\")}\n                        />\n                      ) : null}\n                    </GridItem>\n                    <GridItem>\n                      <ChartLinearWithOptionalLimit\n                        chartName={t(\"connection_attempt_rate\")}\n                        yLabel={t(\"connection_attempt_rate_yaxis\")}\n                        metrics={connectionAttemptRateMetrics}\n                        duration={duration}\n                        usageLimit={connectionRateLimit}\n                        isLoading={isLoading}\n                        emptyState={<EmptyStateNoMetricsData />}\n                      />\n                    </GridItem>\n                  </Grid>\n                </CardBody>\n              </>\n            );\n        }\n      })()}\n    </Card>\n  );\n};\n\nexport const ChartTitle: FunctionComponent<ChartTitleProps> = ({\n  title,\n  helperText,\n}) => {\n  return (\n    <CardTitle component=\"h3\">\n      {title} <ChartPopover title={title} description={helperText} />\n    </CardTitle>\n  );\n};\n","import {\n  Bullseye,\n  Card,\n  CardBody,\n  CardTitle,\n  Skeleton,\n  Title,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\n\ntype CardKpiProps = {\n  metric: string | number | undefined;\n  name: string;\n  popover: string;\n  isLoading: boolean;\n};\n\nexport const CardKpi: VoidFunctionComponent<CardKpiProps> = ({\n  metric,\n  name,\n  popover,\n  isLoading,\n}) => {\n  return (\n    <Card isFullHeight data-testid={name}>\n      <CardTitle component=\"h3\">\n        {name} <ChartPopover title={name} description={popover} />\n      </CardTitle>\n      <CardBody>\n        {!isLoading &&\n          (metric === undefined ? (\n            <Bullseye>\n              <EmptyStateNoMetricsData />\n            </Bullseye>\n          ) : (\n            <Title\n              headingLevel=\"h3\"\n              size=\"4xl\"\n              aria-valuetext={`${metric} ${name}`}\n            >\n              {metric}\n            </Title>\n          ))}\n        {isLoading && <Skeleton width=\"50px\" shape=\"square\" />}\n      </CardBody>\n    </Card>\n  );\n};\n","import { assign, createMachine } from \"xstate\";\nimport type {\n  BrokerBytesMetric,\n  BrokerFilter,\n  GetKafkaInstanceMetricsResponse,\n  PartitionBytesMetric,\n  PartitionSelect,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { DurationOptions } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#kafkaInstanceMetrics.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type KafkaInstanceMetricsMachineContext = {\n  lastUpdated: Date | undefined;\n\n  // from the UI elements\n  duration: DurationOptions;\n  selectedBroker: string | undefined;\n  selectedToggle: BrokerFilter;\n  selectedPartition: PartitionSelect;\n\n  // from the api\n  brokers: string[];\n  usedDiskSpaceMetrics: BrokerBytesMetric;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n  bytesPerPartitionMetrics: PartitionBytesMetric;\n  diskSpaceLimit: number | undefined;\n  connectionsLimit: number | undefined;\n  connectionRateLimit: number | undefined;\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const KafkaInstanceMetricsMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./KafkaInstanceMetricsMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as KafkaInstanceMetricsMachineContext,\n      events: {} as\n        | ({ type: \"fetchSuccess\" } & GetKafkaInstanceMetricsResponse)\n        | { type: \"fetchFail\" }\n        // to refresh the data\n        | { type: \"refresh\" }\n        // from the UI elements\n        | { type: \"selectTopic\"; topic: string | undefined }\n        | { type: \"selectDuration\"; duration: DurationOptions }\n        | { type: \"selectBroker\"; broker: string | undefined }\n        | { type: \"selectToggle\"; value: BrokerFilter }\n        | { type: \"selectPartition\"; value: PartitionSelect },\n    },\n    id: \"kafkaInstanceMetrics\",\n    context: {\n      lastUpdated: undefined,\n      selectedBroker: undefined,\n      duration: DurationOptions.Last1hour,\n      usedDiskSpaceMetrics: {},\n      bytesPerPartitionMetrics: {},\n      clientConnectionsMetrics: {},\n      connectionAttemptRateMetrics: {},\n      diskSpaceLimit: undefined,\n      connectionsLimit: undefined,\n      connectionRateLimit: undefined,\n      fetchFailures: 0,\n      brokers: [],\n      selectedToggle: \"total\",\n      selectedPartition: \"Top10\",\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#kafkaInstanceMetrics.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#kafkaInstanceMetrics.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        on: {\n          refresh: {\n            target: \"refreshing\",\n          },\n          selectDuration: {\n            actions: \"setDuration\",\n            target: \"callApi\",\n          },\n          selectBroker: {\n            actions: \"setBroker\",\n            target: \"callApi\",\n          },\n          selectToggle: {\n            actions: \"setToggle\",\n            target: \"callApi\",\n          },\n          selectPartition: {\n            actions: \"setPartition\",\n          },\n        },\n      },\n      refreshing: {\n        tags: \"refreshing\",\n        entry: \"setFetchTimestamp\",\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"withResponse\",\n          },\n          fetchFail: {\n            // 👀 we silently ignore this happened and go back to the right\n            // state depending on the previous data\n            target: \"withResponse\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setFetchTimestamp: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        lastUpdated: (_context) => new Date(),\n      }),\n      setMetrics: assign((_, event) => {\n        const {\n          usedDiskSpaceMetrics,\n          bytesPerPartitionMetrics,\n          clientConnectionsMetrics,\n          connectionAttemptRateMetrics,\n          diskSpaceLimit,\n          connectionsLimit,\n          connectionRateLimit,\n          brokers,\n        } = event;\n        return {\n          brokers,\n          usedDiskSpaceMetrics,\n          bytesPerPartitionMetrics,\n          clientConnectionsMetrics,\n          connectionAttemptRateMetrics,\n          diskSpaceLimit: diskSpaceLimit * 1024 ** 3, // convert it to GiB\n          connectionsLimit,\n          connectionRateLimit,\n        };\n      }),\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n      setDuration: assign((_context, event) => ({\n        duration: event.duration,\n        usedDiskSpaceMetrics: {},\n        bytesPerPartitionMetrics: {},\n        clientConnectionsMetrics: {},\n        connectionAttemptRateMetrics: {},\n      })),\n      setBroker: assign({\n        selectedBroker: (_context, event) => event.broker,\n      }),\n      setToggle: assign((_, { value }) => ({ selectedToggle: value })),\n      setPartition: assign((_, { value }) => ({ selectedPartition: value })),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            Object.keys(event.clientConnectionsMetrics).length > 0 ||\n            Object.keys(event.connectionAttemptRateMetrics).length > 0 ||\n            Object.keys(event.usedDiskSpaceMetrics).length > 0 ||\n            Object.keys(event.bytesPerPartitionMetrics).length > 0\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type KafkaInstanceMetricsMachineType =\n  typeof KafkaInstanceMetricsMachine;\n","import { assign, createMachine } from \"xstate\";\nimport type {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  PartitionSelect,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { DurationOptions } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#topicsMetrics.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type TopicsMetricsMachineContext = {\n  lastUpdated: Date | undefined;\n\n  // from the UI elements\n  selectedTopic: string | undefined;\n  duration: DurationOptions;\n  selectedPartition: PartitionSelect;\n  // from the api\n  kafkaTopics: string[];\n  metricsTopics: string[];\n  bytesOutgoing: TimeSeriesMetrics;\n  bytesIncoming: TimeSeriesMetrics;\n  bytesPerPartition: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const TopicsMetricsMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./TopicsMetricsMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as TopicsMetricsMachineContext,\n      events: {} as  // called when a new kafka id has been specified\n        | ({ type: \"fetchSuccess\" } & GetTopicsMetricsResponse)\n        | { type: \"fetchFail\" }\n\n        // to refresh the data\n        | { type: \"refresh\" }\n\n        // from the UI elements\n        | { type: \"selectTopic\"; topic: string | undefined }\n        | { type: \"selectDuration\"; duration: DurationOptions }\n        | { type: \"selectPartition\"; value: PartitionSelect },\n    },\n    id: \"topicsMetrics\",\n    context: {\n      lastUpdated: undefined,\n\n      // from the UI elements\n      selectedTopic: undefined,\n      duration: DurationOptions.Last1hour,\n      selectedPartition: \"Top10\",\n\n      // from the api\n      kafkaTopics: [],\n      metricsTopics: [],\n      bytesOutgoing: {},\n      bytesIncoming: {},\n      bytesPerPartition: {},\n      incomingMessageRate: {},\n\n      // how many time did we try a fetch (that combines more api)\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#topicsMetrics.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#topicsMetrics.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        initial: \"idle\",\n        states: {\n          idle: {},\n          refreshing: {\n            tags: \"refreshing\",\n            entry: \"setFetchTimestamp\",\n            invoke: {\n              src: \"api\",\n            },\n            on: {\n              fetchSuccess: {\n                actions: \"setMetrics\",\n                target: \"#topicsMetrics.withResponse\",\n              },\n              fetchFail: {\n                // 👀 we silently ignore this happened\n                target: \"#topicsMetrics.withResponse\",\n              },\n            },\n          },\n        },\n        on: {\n          refresh: {\n            target: \"#topicsMetrics.withResponse.refreshing\",\n          },\n          selectTopic: {\n            actions: \"setTopic\",\n            target: \"callApi\",\n          },\n          selectDuration: {\n            actions: \"setDuration\",\n            target: \"callApi\",\n          },\n          selectPartition: {\n            actions: \"setPartition\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setFetchTimestamp: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        lastUpdated: (_context) => new Date(),\n      }),\n      setMetrics: assign((_context, event) => {\n        const {\n          kafkaTopics,\n          metricsTopics,\n          bytesPerPartition,\n          bytesIncoming,\n          bytesOutgoing,\n          incomingMessageRate,\n        } = event;\n        return {\n          kafkaTopics,\n          metricsTopics,\n          bytesPerPartition,\n          bytesIncoming,\n          bytesOutgoing,\n          incomingMessageRate,\n        };\n      }),\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n      setTopic: assign({\n        selectedTopic: (_context, event) => event.topic,\n      }),\n      setDuration: assign({\n        duration: (_, event) => event.duration,\n      }),\n      setPartition: assign((_, { value }) => ({ selectedPartition: value })),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            Object.keys(event.bytesIncoming).length > 0 ||\n            Object.keys(event.bytesOutgoing).length > 0 ||\n            Object.keys(event.bytesPerPartition).length > 0 ||\n            Object.keys(event.incomingMessageRate).length > 0\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type TopicsMetricsMachineType = typeof TopicsMetricsMachine;\n","import { assign, createMachine } from \"xstate\";\nimport type { GetMetricsKpiResponse } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#kpis.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type MetricsKpiMachineContext = {\n  // from the api\n  topics: number | undefined;\n  topicPartitions: number | undefined;\n  consumerGroups: number | undefined;\n  topicPartitionsLimit: number | undefined;\n\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const MetricsKpiMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./MetricsKpiMachine.typegen\").Typegen0,\n    predictableActionArguments: true,\n    schema: {\n      context: {} as MetricsKpiMachineContext,\n      events: {} as\n        | { type: \"fetch\" }\n        | ({ type: \"fetchSuccess\" } & GetMetricsKpiResponse)\n        | { type: \"fetchFail\" }\n        | { type: \"refresh\" },\n    },\n    id: \"kpis\",\n    context: {\n      topics: undefined,\n      topicPartitions: undefined,\n      consumerGroups: undefined,\n      topicPartitionsLimit: undefined,\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#kpis.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#kpis.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        initial: \"idle\",\n        states: {\n          idle: {},\n          refreshing: {\n            tags: \"refreshing\",\n            invoke: {\n              src: \"api\",\n            },\n            on: {\n              fetchSuccess: {\n                actions: \"setMetrics\",\n                target: \"#kpis.withResponse\",\n              },\n              fetchFail: {\n                // 👀 we silently ignore this happened\n                target: \"#kpis.withResponse\",\n              },\n            },\n          },\n        },\n        on: {\n          refresh: {\n            target: \"#kpis.withResponse.refreshing\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setMetrics: assign((_, event) => {\n        const {\n          topics,\n          topicPartitions,\n          consumerGroups,\n          topicPartitionsLimit,\n        } = event;\n        return {\n          topics,\n          topicPartitions,\n          consumerGroups,\n          topicPartitionsLimit,\n        };\n      }),\n\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            event.topics !== undefined ||\n            event.topicPartitions !== undefined ||\n            event.consumerGroups !== undefined ||\n            event.topicPartitionsLimit !== undefined\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type MetricsKpiMachineType = typeof MetricsKpiMachine;\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { timeIntervalsMapping } from \"./consts\";\nimport type { KafkaInstanceMetricsMachineType } from \"./machines\";\nimport { KafkaInstanceMetricsMachine } from \"./machines\";\nimport type { DurationOptions, GetKafkaInstanceMetricsResponse } from \"./types\";\n\nexport const KafkaInstanceMetricsContext = createContext<{\n  service: ActorRefFrom<KafkaInstanceMetricsMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type KafkaInstanceMetricsProviderProps = {\n  getKafkaInstanceMetrics: (options: {\n    duration: DurationOptions;\n    interval: number;\n    selectedBroker: string | undefined;\n  }) => Promise<GetKafkaInstanceMetricsResponse>;\n};\nexport const KafkaInstanceMetricsProvider: FunctionComponent<\n  KafkaInstanceMetricsProviderProps\n> = ({ children, getKafkaInstanceMetrics }) => {\n  const service = useInterpret(\n    () =>\n      KafkaInstanceMetricsMachine.withConfig({\n        services: {\n          api: (context) => {\n            return (callback) => {\n              getKafkaInstanceMetrics({\n                selectedBroker: context.selectedBroker,\n                duration: context.duration,\n                interval: timeIntervalsMapping[context.duration].interval,\n              })\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <KafkaInstanceMetricsContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </KafkaInstanceMetricsContext.Provider>\n  );\n};\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { MetricsKpiMachineType } from \"./machines\";\nimport { MetricsKpiMachine } from \"./machines\";\nimport type { GetMetricsKpiResponse } from \"./types\";\n\nexport const MetricsKpiContext = createContext<{\n  service: ActorRefFrom<MetricsKpiMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type MetricsKpiProviderProps = {\n  getMetricsKpi: () => Promise<GetMetricsKpiResponse>;\n};\nexport const MetricsKpiProvider: FunctionComponent<MetricsKpiProviderProps> = ({\n  children,\n  getMetricsKpi,\n}) => {\n  const service = useInterpret(\n    () =>\n      MetricsKpiMachine.withConfig({\n        services: {\n          api: () => {\n            return (callback) => {\n              getMetricsKpi()\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <MetricsKpiContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </MetricsKpiContext.Provider>\n  );\n};\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { timeIntervalsMapping } from \"./consts\";\nimport type { TopicsMetricsMachineType } from \"./machines\";\nimport { TopicsMetricsMachine } from \"./machines\";\nimport type { DurationOptions, GetTopicsMetricsResponse } from \"./types\";\n\nexport const TopicsMetricsContext = createContext<{\n  service: ActorRefFrom<TopicsMetricsMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type TopicsMetricsProviderProps = {\n  getTopicsMetrics: (options: {\n    duration: DurationOptions;\n    interval: number;\n    selectedTopic: string | undefined;\n  }) => Promise<GetTopicsMetricsResponse>;\n};\nexport const TopicsMetricsProvider: FunctionComponent<\n  TopicsMetricsProviderProps\n> = ({ children, getTopicsMetrics }) => {\n  const service = useInterpret(\n    () =>\n      TopicsMetricsMachine.withConfig({\n        services: {\n          api: (context) => {\n            return (callback) => {\n              getTopicsMetrics({\n                selectedTopic: context.selectedTopic,\n                duration: context.duration,\n                interval: timeIntervalsMapping[context.duration].interval,\n              })\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <TopicsMetricsContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </TopicsMetricsContext.Provider>\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport { KafkaInstanceMetricsContext } from \"./KafkaInstanceMetricsProvider\";\nimport type { KafkaInstanceMetricsMachineContext } from \"./machines\";\nimport type { BrokerFilter, DurationOptions, PartitionSelect } from \"./types\";\n\ntype SeletorReturn = KafkaInstanceMetricsMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useKafkaInstanceMetrics() {\n  const { service } = useContext(KafkaInstanceMetricsContext);\n\n  const {\n    selectedToggle,\n    selectedBroker,\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    bytesPerPartitionMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    duration,\n    lastUpdated,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    selectedPartition,\n    brokers,\n  } = useSelector<typeof service, SeletorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onBrokerChange = useCallback(\n    (broker: string | undefined) =>\n      service.send({ type: \"selectBroker\", broker }),\n    [service]\n  );\n\n  const onDurationChange = useCallback(\n    (duration: DurationOptions) =>\n      service.send({ type: \"selectDuration\", duration }),\n    [service]\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  const onSelectToggle = useCallback(\n    (value: BrokerFilter) => service.send({ type: \"selectToggle\", value }),\n    [service]\n  );\n\n  const onSelectPartition = useCallback(\n    (value: PartitionSelect) =>\n      service.send({ type: \"selectPartition\", value }),\n    [service]\n  );\n\n  return {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    bytesPerPartitionMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    lastUpdated,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    duration,\n    onDurationChange,\n    onRefresh,\n    onBrokerChange,\n    selectedBroker,\n    selectedToggle,\n    onSelectToggle,\n    onSelectPartition,\n    selectedPartition,\n    brokers,\n  };\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport type { TopicsMetricsMachineContext } from \"./machines\";\nimport { TopicsMetricsContext } from \"./TopicsMetricsProvider\";\nimport type { DurationOptions, PartitionSelect } from \"./types\";\n\ntype SelectorReturn = TopicsMetricsMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useTopicsMetrics() {\n  const { service } = useContext(TopicsMetricsContext);\n\n  const {\n    selectedTopic,\n    duration,\n    kafkaTopics,\n    metricsTopics,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    selectedPartition,\n  } = useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onTopicChange = useCallback(\n    (topic: string | undefined) => service.send({ type: \"selectTopic\", topic }),\n    [service]\n  );\n\n  const onDurationChange = useCallback(\n    (duration: DurationOptions) =>\n      service.send({ type: \"selectDuration\", duration }),\n    [service]\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  const mergedTopics = useMemo((): string[] => {\n    const topics = Array.from(\n      new Set<string>([...kafkaTopics, ...metricsTopics])\n    );\n    topics.sort((a, b) => a.localeCompare(b));\n    return topics;\n  }, [kafkaTopics, metricsTopics]);\n\n  const onSelectPartition = useCallback(\n    (value: PartitionSelect) =>\n      service.send({ type: \"selectPartition\", value }),\n    [service]\n  );\n\n  return {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    topics: mergedTopics,\n    selectedTopic,\n    duration,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    onTopicChange,\n    onDurationChange,\n    onRefresh,\n    onSelectPartition,\n    selectedPartition,\n  };\n}\n","import {\n  Alert,\n  AlertVariant,\n  Bullseye,\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Skeleton,\n  Text,\n  TextContent,\n  Title,\n} from \"@patternfly/react-core\";\nimport {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\n\ntype PartitionCardProps = {\n  metric: number | undefined;\n  isLoading: boolean;\n  topicPartitionsLimit: number | undefined;\n};\n\nexport const PartitionCard: VoidFunctionComponent<PartitionCardProps> = ({\n  metric,\n  isLoading,\n  topicPartitionsLimit = 0,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Card\n      isFullHeight\n      data-testid={t(\"metrics:metric_kpi_topicPartitions_name\")}\n    >\n      <CardTitle component=\"h3\">\n        {t(\"metrics:metric_kpi_topicPartitions_name\")}{\" \"}\n        <ChartPopover\n          title={t(\"metrics:metric_kpi_topicPartitions_name\")}\n          description={t(\"metrics:metric_kpi_topicPartitions_description\")}\n        />\n      </CardTitle>\n      <CardBody>\n        {!isLoading &&\n          (metric === undefined ? (\n            <Bullseye>\n              <EmptyStateNoMetricsData />\n            </Bullseye>\n          ) : (\n            <>\n              <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                aria-valuetext={`${metric} ${t(\n                  \"metrics:metric_kpi_topicPartitions_name\"\n                )}`}\n              >\n                {metric}{\" \"}\n                {(() => {\n                  if (metric >= topicPartitionsLimit) {\n                    return (\n                      <ExclamationCircleIcon color=\"var(--pf-global--danger-color--100)\" />\n                    );\n                  } else if (metric >= topicPartitionsLimit * 0.95) {\n                    return (\n                      <ExclamationTriangleIcon color=\"var(--pf-global--warning-color--100)\" />\n                    );\n                  } else {\n                    return \"\";\n                  }\n                })()}\n              </Title>\n              <TextContent>\n                <Text>\n                  {t(\"metrics:partition_limit\", {\n                    topic: topicPartitionsLimit,\n                  })}\n                </Text>\n              </TextContent>\n            </>\n          ))}\n        {isLoading && <Skeleton width=\"50px\" shape=\"square\" />}\n      </CardBody>\n      {(() => {\n        if (metric && metric >= topicPartitionsLimit) {\n          return (\n            <CardFooter>\n              <Alert\n                isExpandable\n                isInline\n                variant={AlertVariant.danger}\n                title={t(\"metrics:partition_limit_reached_title\")}\n              >\n                <p>{t(\"metrics:partition_limit_reached_description_1\")}</p>\n                <p>{t(\"metrics:partition_limit_reached_description_2\")}</p>\n              </Alert>\n            </CardFooter>\n          );\n        } else if (metric && metric >= topicPartitionsLimit * 0.95) {\n          return (\n            <CardFooter>\n              <Alert\n                role={\"alert\"}\n                isExpandable\n                isInline\n                variant={AlertVariant.warning}\n                title={t(\"metrics:partition_limit_approaching_title\")}\n              >\n                <p>\n                  {t(\"metrics:partition_limit_approaching_description_1\", {\n                    limit: topicPartitionsLimit,\n                  })}\n                </p>\n                <p>{t(\"metrics:partition_limit_approaching_description_2\")}</p>\n              </Alert>\n            </CardFooter>\n          );\n        } else {\n          return \" \";\n        }\n      })()}\n    </Card>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Alert, AlertActionCloseButton } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type MetricsLagAlertProps = {\n  isClosed: boolean;\n  onClickClose: () => void;\n};\n\nexport const MetricsLagAlert: VoidFunctionComponent<MetricsLagAlertProps> = ({\n  isClosed,\n  onClickClose,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  if (!isClosed) {\n    return (\n      <Alert\n        isInline\n        variant=\"info\"\n        title={t(\"metrics_lag_title\")}\n        actionClose={<AlertActionCloseButton onClose={onClickClose} />}\n      >\n        <p>{t(\"metrics_lag_description\")}</p>\n      </Alert>\n    );\n  } else {\n    return <> </>;\n  }\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  CardKafkaInstanceMetrics,\n  CardTopicsMetrics,\n  EmptyStateInitialLoading,\n  EmptyStateMetricsUnavailable,\n  MetricsLayout,\n} from \"./components\";\nimport { CardKpi } from \"./components/CardKpi\";\nimport type { KafkaInstanceMetricsProviderProps } from \"./KafkaInstanceMetricsProvider\";\nimport { KafkaInstanceMetricsProvider } from \"./KafkaInstanceMetricsProvider\";\nimport type { MetricsKpiProviderProps } from \"./MetricsKpiProvider\";\nimport { MetricsKpiProvider } from \"./MetricsKpiProvider\";\nimport type { TopicsMetricsProviderProps } from \"./TopicsMetricsProvider\";\nimport { TopicsMetricsProvider } from \"./TopicsMetricsProvider\";\nimport { useKafkaInstanceMetrics } from \"./useKafkaInstanceMetrics\";\nimport { useMetricsKpi } from \"./useMetricsKpi\";\nimport { useTopicsMetrics } from \"./useTopicsMetrics\";\nimport { PartitionCard } from \"./components/PartitionCard\";\nimport { MetricsLagAlert } from \"./components/MetricsLagAlert\";\n\nexport type MetricsProps = {\n  onCreateTopic: () => void;\n  onAlertClose: () => void;\n  hasUserAlreadyClosedAlert: boolean;\n} & KafkaInstanceMetricsProviderProps &\n  TopicsMetricsProviderProps &\n  MetricsKpiProviderProps;\n\nexport const Metrics: VoidFunctionComponent<MetricsProps> = ({\n  getKafkaInstanceMetrics,\n  getTopicsMetrics,\n  getMetricsKpi,\n  onCreateTopic,\n  onAlertClose,\n  hasUserAlreadyClosedAlert,\n}) => {\n  return (\n    <TopicsMetricsProvider getTopicsMetrics={getTopicsMetrics}>\n      <KafkaInstanceMetricsProvider\n        getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n      >\n        <MetricsKpiProvider getMetricsKpi={getMetricsKpi}>\n          <ConnectedMetrics\n            onCreateTopic={onCreateTopic}\n            onClickClose={onAlertClose}\n            isClosed={hasUserAlreadyClosedAlert}\n          />\n        </MetricsKpiProvider>\n      </KafkaInstanceMetricsProvider>\n    </TopicsMetricsProvider>\n  );\n};\n\ntype ConnectedMetricsProps = {\n  onCreateTopic: () => void;\n  onClickClose: () => void;\n  isClosed: boolean;\n};\nconst ConnectedMetrics: VoidFunctionComponent<ConnectedMetricsProps> = ({\n  onCreateTopic,\n  onClickClose,\n  isClosed,\n}) => {\n  const { t } = useTranslation();\n  const kafkaInstanceMetrics = useKafkaInstanceMetrics();\n  const topicsMetrics = useTopicsMetrics();\n  const metricsKpi = useMetricsKpi();\n\n  switch (true) {\n    case kafkaInstanceMetrics.isInitialLoading ||\n      topicsMetrics.isInitialLoading ||\n      metricsKpi.isInitialLoading:\n      return <EmptyStateInitialLoading />;\n    case kafkaInstanceMetrics.isFailed &&\n      topicsMetrics.isFailed &&\n      topicsMetrics.isFailed:\n    case kafkaInstanceMetrics.isJustCreated &&\n      topicsMetrics.isJustCreated &&\n      metricsKpi.isJustCreated:\n      return <EmptyStateMetricsUnavailable />;\n    default:\n      return (\n        <MetricsLayout\n          metricsLagAlert={\n            <MetricsLagAlert onClickClose={onClickClose} isClosed={isClosed} />\n          }\n          topicsKpi={\n            <CardKpi\n              metric={metricsKpi.topics}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              name={t(\"metrics:metric_kpi_topics_name\")}\n              popover={t(\"metrics:metric_kpi_topics_description\")}\n            />\n          }\n          topicPartitionsKpi={\n            <PartitionCard\n              metric={metricsKpi.topicPartitions}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              topicPartitionsLimit={metricsKpi.topicPartitionsLimit}\n            />\n          }\n          consumerGroupKpi={\n            <CardKpi\n              metric={metricsKpi.consumerGroups}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              name={t(\"metrics:metric_kpi_consumerGroup_name\")}\n              popover={t(\"metrics:metric_kpi_consumerGroup_description\")}\n            />\n          }\n          diskSpaceMetrics={<ConnectedKafkaInstanceMetrics />}\n          topicMetrics={\n            <ConnectedTopicsMetrics onCreateTopic={onCreateTopic} />\n          }\n        />\n      );\n  }\n};\n\nconst ConnectedKafkaInstanceMetrics: VoidFunctionComponent = () => {\n  const {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    duration,\n    lastUpdated,\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    onDurationChange,\n    onRefresh,\n    brokers,\n    onBrokerChange,\n    selectedBroker,\n    selectedToggle,\n    onSelectToggle,\n    bytesPerPartitionMetrics,\n    selectedPartition,\n    onSelectPartition,\n  } = useKafkaInstanceMetrics();\n\n  return (\n    <CardKafkaInstanceMetrics\n      usedDiskMetrics={usedDiskSpaceMetrics}\n      clientConnectionsMetrics={clientConnectionsMetrics}\n      connectionAttemptRateMetrics={connectionAttemptRateMetrics}\n      duration={duration}\n      backendUnavailable={isFailed}\n      isInitialLoading={isInitialLoading}\n      isLoading={isLoading}\n      isRefreshing={isRefreshing}\n      isJustCreated={isJustCreated}\n      lastUpdated={lastUpdated}\n      onRefresh={onRefresh}\n      onDurationChange={onDurationChange}\n      diskSpaceLimit={diskSpaceLimit || 0}\n      connectionsLimit={connectionsLimit || 0}\n      connectionRateLimit={connectionRateLimit || 0}\n      brokers={brokers}\n      selectedBroker={selectedBroker}\n      onSelectedBroker={onBrokerChange}\n      selectToggle={selectedToggle}\n      onSelectedToggle={onSelectToggle}\n      bytesPerPartitions={bytesPerPartitionMetrics}\n      onSelectedPartition={onSelectPartition}\n      selectedPartition={selectedPartition}\n    />\n  );\n};\n\ntype ConnectedTopicsMetricsProps = {\n  onCreateTopic: () => void;\n};\nconst ConnectedTopicsMetrics: VoidFunctionComponent<\n  ConnectedTopicsMetricsProps\n> = ({ onCreateTopic }) => {\n  const {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    selectedTopic,\n    duration,\n    topics,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    selectedPartition,\n    onDurationChange,\n    onTopicChange,\n    onRefresh,\n    onSelectPartition,\n  } = useTopicsMetrics();\n\n  return (\n    <CardTopicsMetrics\n      backendUnavailable={isFailed}\n      topics={topics}\n      incomingTopicsData={bytesIncoming}\n      outgoingTopicsData={bytesOutgoing}\n      partitions={bytesPerPartition}\n      incomingMessageRate={incomingMessageRate}\n      duration={duration}\n      isInitialLoading={isInitialLoading}\n      isLoading={isLoading}\n      isRefreshing={isRefreshing}\n      isJustCreated={isJustCreated}\n      lastUpdated={lastUpdated}\n      selectedTopic={selectedTopic}\n      onRefresh={onRefresh}\n      onSelectedTopic={onTopicChange}\n      onDurationChange={onDurationChange}\n      onCreateTopic={onCreateTopic}\n      onSelectedPartition={onSelectPartition}\n      selectedPartition={selectedPartition}\n    />\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport type { MetricsKpiMachineContext } from \"./machines\";\nimport { MetricsKpiContext } from \"./MetricsKpiProvider\";\n\ntype SelectorReturn = MetricsKpiMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useMetricsKpi() {\n  const { service } = useContext(MetricsKpiContext);\n\n  const {\n    topics,\n    topicPartitions,\n    topicPartitionsLimit,\n    consumerGroups,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n  } = useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  return {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    topics,\n    topicPartitions,\n    consumerGroups,\n    topicPartitionsLimit,\n    onRefresh,\n  };\n}\n","import {\n  Button,\n  Card,\n  CardBody,\n  Flex,\n  FlexItem,\n  Modal,\n  ModalVariant,\n  PageSection,\n  Spinner,\n  Stack,\n  StackItem,\n  Switch,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport \"./Settings.css\";\nimport type { SettingsStatus } from \"./types\";\n\nexport type SettingsProps = {\n  onSubmitReAuthentication: (\n    reauthenticationEnabled: boolean\n  ) => Promise<boolean>;\n  reauthenticationEnabled: boolean;\n};\n\nexport const Settings: FunctionComponent<SettingsProps> = ({\n  onSubmitReAuthentication,\n  reauthenticationEnabled,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  //states\n  const [connectionStatus, setConnectionStatus] = useState<SettingsStatus>(\n    reauthenticationEnabled ? \"On\" : \"Off\"\n  );\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  const onClose = () => {\n    setIsModalOpen(false);\n  };\n\n  const onChangeSwitch = (checked: boolean) => {\n    if (connectionStatus === \"On\") {\n      setIsModalOpen(true);\n    } else {\n      handleReAuthentication(checked);\n    }\n  };\n\n  const handleReAuthentication = (reAuthValue: boolean) => {\n    setConnectionStatus(reAuthValue ? \"TurningOn\" : \"TurningOff\");\n\n    onSubmitReAuthentication(reAuthValue)\n      .then((reauthentication) => {\n        setConnectionStatus(reauthentication ? \"On\" : \"Off\");\n\n        // TODO: send notification\n        // addAlert({\n        //   variant: \"success\",\n        //   title: t(\"settings.success_alert\", {\n        //     status: reauthentication ? \"on\" : \"off\",\n        //   }),\n        // });\n      })\n      .catch(() => {\n        setConnectionStatus(!reAuthValue ? \"On\" : \"Off\");\n\n        // TODO: send notification\n        // addAlert({\n        //   variant: \"danger\",\n        //   title: t(\"settings.error_alert_title\"),\n        //   description: t(\"settings.error_alert_title_description\"),\n        // });\n      });\n  };\n\n  const onTurnOff = () => {\n    setIsModalOpen(false);\n    handleReAuthentication(false);\n  };\n\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <Stack hasGutter>\n        <StackItem>\n          <Card>\n            <CardBody>{t(\"settings.kafka_instance_settings_label\")}</CardBody>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <Card className={\"mas--settings__card\"}>\n            <CardBody>\n              <Flex flexWrap={{ default: \"nowrap\" }}>\n                <FlexItem grow={{ default: \"grow\" }}>\n                  <Flex>\n                    <FlexItem\n                      component={\"span\"}\n                      spacer={{ default: \"spacerSm\" }}\n                    >\n                      <strong>\n                        {t(\"settings.connection_re_authentication_label\")}\n                        {\":\"}\n                      </strong>\n                    </FlexItem>\n                    <FlexItem>\n                      {(() => {\n                        switch (connectionStatus) {\n                          case \"On\":\n                            return t(\n                              \"settings.Connection_re_authentication_states.on\"\n                            );\n                          case \"TurningOff\":\n                            return (\n                              <>\n                                <Spinner\n                                  size=\"md\"\n                                  aria-valuetext={t(\n                                    \"settings.Connection_re_authentication_states.turning_off\"\n                                  )}\n                                  aria-label={t(\n                                    \"settings.connection_re_authentication_label\"\n                                  )}\n                                />{\" \"}\n                                {t(\n                                  \"settings.Connection_re_authentication_states.turning_off\"\n                                )}\n                              </>\n                            );\n                          case \"Off\":\n                            return t(\n                              \"settings.Connection_re_authentication_states.off\"\n                            );\n                          case \"TurningOn\":\n                            return (\n                              <>\n                                <Spinner\n                                  size=\"md\"\n                                  aria-valuetext={\n                                    \"settings.Connection_re_authentication_states.turning_on\"\n                                  }\n                                  aria-label={t(\n                                    \"settings.connection_re_authentication_label\"\n                                  )}\n                                />{\" \"}\n                                {t(\n                                  \"settings.Connection_re_authentication_states.turning_on\"\n                                )}\n                              </>\n                            );\n                          default:\n                            return null;\n                        }\n                      })()}\n                    </FlexItem>\n                  </Flex>\n                </FlexItem>\n                <FlexItem>\n                  <Switch\n                    id=\"Connection-re-authentication-switch\"\n                    aria-label={t(\n                      \"settings.connection_re_authentication_label\"\n                    )}\n                    isChecked={\n                      connectionStatus === \"On\" ||\n                      connectionStatus === \"TurningOff\"\n                    }\n                    isDisabled={\n                      connectionStatus === \"TurningOff\" ||\n                      connectionStatus === \"TurningOn\"\n                    }\n                    onChange={onChangeSwitch}\n                  />\n                </FlexItem>\n                <Modal\n                  variant={ModalVariant.small}\n                  isOpen={isModalOpen}\n                  title={t(\"settings.warning_title\")}\n                  titleIconVariant={\"warning\"}\n                  actions={[\n                    <Button\n                      key={\"confirm\"}\n                      variant=\"primary\"\n                      onClick={onTurnOff}\n                    >\n                      {t(\"settings.turn_off_button_label\")}\n                    </Button>,\n                    <Button key={\"cancel\"} variant=\"link\" onClick={onClose}>\n                      {t(\"common:cancel\")}\n                    </Button>,\n                  ]}\n                  onClose={onClose}\n                >\n                  {t(\"settings.warning_description\")}\n                </Modal>\n              </Flex>\n            </CardBody>\n          </Card>\n        </StackItem>\n      </Stack>\n    </PageSection>\n  );\n};\n","export type SelectOptions = {\n  key: string;\n  value: string;\n  isPlaceholder?: boolean;\n  isDisabled?: boolean;\n};\n\nexport const retentionTimeSelectOptions: SelectOptions[] = [\n  { key: \"days\", value: \"days\", isPlaceholder: true },\n  { key: \"hours\", value: \"hours\" },\n  { key: \"minutes\", value: \"minutes\" },\n  { key: \"seconds\", value: \"seconds\" },\n  { key: \"milliseconds\", value: \"milliseconds\" },\n];\n\nexport const retentionSizeSelectOptions: SelectOptions[] = [\n  { key: \"bytes\", value: \"bytes\", isPlaceholder: true },\n  { key: \"kibibytes\", value: \"kibibytes\" },\n  { key: \"mebibytes\", value: \"mebibytes\" },\n  { key: \"gibibytes\", value: \"gibibytes\" },\n  { key: \"tebibytes\", value: \"tebibytes\" },\n];\n\nexport type IDropdownOption = {\n  value?: string;\n  label?: string;\n  key?: string;\n  isDisabled?: boolean;\n};\n\nexport type TimeUnit =\n  | \"days\"\n  | \"hours\"\n  | \"minutes\"\n  | \"seconds\"\n  | \"milliseconds\"\n  | \"weeks\"\n  | \"unlimited\";\n\nexport type CustomSelect = {\n  unit: TimeUnit;\n  value: number;\n};\n\nexport type CustomRetentionSizeSelect = {\n  unit: CustomRetentionUnit;\n  value: number;\n};\n\nexport type CustomRetentionUnit =\n  | \"bytes\"\n  | \"kibibytes\"\n  | \"mebibytes\"\n  | \"gibibytes\"\n  | \"tebibytes\"\n  | \"unlimited\";\n\nexport type RadioSelectType = \"day\" | \"week\" | \"custom\" | \"unlimited\";\n\nexport type RetentionSizeRadioSelect = \"unlimited\" | \"custom\";\n","import type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport {\n  PageSection,\n  PageSectionVariants,\n  Title,\n  Switch,\n  Breadcrumb,\n  BreadcrumbItem,\n} from \"@patternfly/react-core\";\nimport { Link } from \"react-router-dom\";\n\nexport type CreateTopicHeadProps = {\n  showAllOptions: boolean;\n  kafkaName: string;\n  onShowAllOptions: (value: boolean) => void;\n  kafkaInstanceLink: string;\n  kafkaPageLink: string;\n};\n\nexport const CreateTopicHead: VoidFunctionComponent<CreateTopicHeadProps> = ({\n  showAllOptions,\n  onShowAllOptions,\n  kafkaName,\n  kafkaInstanceLink,\n  kafkaPageLink,\n}) => {\n  const { t } = useTranslation([\"common\", \"topic\"]);\n\n  const mainBreadcrumbs = (\n    <Breadcrumb ouiaId={\"breadcrumb\"}>\n      <BreadcrumbItem\n        render={() => (\n          <Link to={kafkaInstanceLink}>{t(\"common:kafka_instance\")}</Link>\n        )}\n      />\n      <BreadcrumbItem\n        render={() => <Link to={kafkaPageLink}>{kafkaName}</Link>}\n      />\n      <BreadcrumbItem isActive>{t(\"topic:create_topic\")}</BreadcrumbItem>\n    </Breadcrumb>\n  );\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        {mainBreadcrumbs}\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          {t(\"topic:create_topic\")}\n        </Title>\n        <br />\n        <Switch\n          ouiaId={\"toggle-switch-off\"}\n          id=\"id-show-all-options\"\n          label={t(\"topic:show_all_options\")}\n          labelOff={t(\"topic:show_all_options\")}\n          isChecked={showAllOptions}\n          onChange={onShowAllOptions}\n          className=\"create-topic-wizard\"\n        />\n      </PageSection>\n    </>\n  );\n};\n","import { Button, Modal } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { Topic } from \"ui-models/src/models/topic\";\n\nexport type PartitionLimitWarningProps = {\n  topicData: Topic;\n  onSave: (topicData: Topic) => void;\n  isModalOpen: boolean;\n  setIsModalOpen: (value: boolean) => void;\n};\n\nexport const PartitionLimitWarning: React.FC<PartitionLimitWarningProps> = ({\n  topicData,\n  onSave,\n  isModalOpen,\n  setIsModalOpen,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  const handleModalToggle = () => {\n    setIsModalOpen(false);\n  };\n  const onConfirm = () => {\n    setIsModalOpen(false);\n    onSave(topicData);\n  };\n  return (\n    <Modal\n      title={t(\"increase_partitions\")}\n      variant={\"small\"}\n      titleIconVariant=\"warning\"\n      aria-describedby=\"modal-title-icon-description\"\n      isOpen={isModalOpen}\n      onClose={handleModalToggle}\n      actions={[\n        <Button key=\"confirm\" variant=\"primary\" onClick={onConfirm}>\n          {t(\"common:yes\")}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={handleModalToggle}>\n          {t(\"no_return\")}\n        </Button>,\n      ]}\n    >\n      {t(\"partition_warning_modal\")}\n    </Modal>\n  );\n};\n","import { convert } from \"convert\";\nimport type { CustomSelect } from \"./types\";\n\nexport const retentionTimeTransformer = (value: CustomSelect) => {\n  if (value.value != null)\n    switch (value.unit) {\n      case \"days\": {\n        const convertedValue = convert(BigInt(value.value), \"days\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"weeks\": {\n        const convertedValue = convert(BigInt(value.value), \"weeks\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"seconds\": {\n        const convertedValue = convert(BigInt(value.value), \"seconds\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"hours\": {\n        const convertedValue = convert(BigInt(value.value), \"hours\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"minutes\": {\n        const convertedValue = convert(BigInt(value.value), \"minutes\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"unlimited\": {\n        return BigInt(value.value);\n      }\n      case \"milliseconds\": {\n        return BigInt(value.value);\n      }\n    }\n};\n","import { FormGroup, Popover, TextInput } from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\n\nexport interface TextWithLabelPopoverProps {\n  fieldId: string;\n  fieldLabel: string;\n  fieldValue?: string;\n  popoverHeader: string;\n  popoverBody: string;\n  btnAriaLabel: string;\n  showUnlimited?: boolean;\n}\n\nexport const TextWithLabelPopover: FunctionComponent<\n  TextWithLabelPopoverProps\n> = ({\n  fieldId,\n  fieldLabel,\n  btnAriaLabel,\n  fieldValue,\n  popoverBody,\n  popoverHeader,\n  showUnlimited,\n}) => {\n  let displayText = \"-\";\n\n  if (\n    showUnlimited === true &&\n    fieldValue !== undefined &&\n    parseInt(fieldValue) < 0\n  ) {\n    displayText = \"Unlimited\"; // TODO i18n\n  } else if (fieldValue) {\n    displayText = fieldValue;\n  }\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={fieldLabel}\n      className=\"kafka-ui-form-group--readonly\"\n      labelIcon={\n        <Popover\n          headerContent={<div>{popoverHeader}</div>}\n          bodyContent={<div>{popoverBody}</div>}\n        >\n          <button\n            aria-label={btnAriaLabel}\n            onClick={(event) => event.preventDefault()}\n            className=\"pf-c-form__group-label-help\"\n          >\n            <HelpIcon noVerticalAlign />\n          </button>\n        </Popover>\n      }\n    >\n      <TextInput\n        readOnlyVariant={\"plain\"}\n        type=\"text\"\n        id={fieldId}\n        name={fieldId}\n        value={displayText}\n      />\n    </FormGroup>\n  );\n};\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype CleanupProps = {\n  defaultLogSegmentSize: bigint;\n  defaultSegmentTime: bigint;\n  defaultSegmentJitterTime: bigint;\n  defaultFileDeleteDelay: bigint;\n};\n\nconst Cleanup: React.FC<CleanupProps> = ({\n  defaultFileDeleteDelay,\n  defaultLogSegmentSize,\n  defaultSegmentJitterTime,\n  defaultSegmentTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <FormSection title={t(\"cleanup\")} id=\"cleanup\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"cleanup_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"log-segment-size\"\n        btnAriaLabel={t(\"log_segment_size\")}\n        fieldLabel={t(\"log_segment_size\")}\n        fieldValue={t(\"bytes_to_gibibyte\", {\n          bytes: defaultLogSegmentSize,\n          gibibyte: convert(Number(defaultLogSegmentSize), \"bytes\").to(\n            \"gibibytes\"\n          ),\n        })}\n        popoverBody={t(\"log_segment_size\")}\n        popoverHeader={t(\"log_segment_size_description\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segement-time\"\n        btnAriaLabel={t(\"segement_time\")}\n        fieldLabel={t(\"segement_time\")}\n        fieldValue={t(\"milliseconds_to_days\", {\n          milliseconds: defaultSegmentTime,\n          days: convert(Number(defaultSegmentTime), \"milliseconds\").to(\"days\"),\n        })}\n        popoverBody={t(\"segement_time_description\")}\n        popoverHeader={t(\"segement_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segment-jitter-time\"\n        btnAriaLabel={t(\"segment_jitter_time\")}\n        fieldLabel={t(\"segment_jitter_time\")}\n        fieldValue={t(\"milliseconds_time\", { value: defaultSegmentJitterTime })}\n        popoverBody={t(\"segment_jitter_time_description\")}\n        popoverHeader={t(\"segment_jitter_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"file-delete-delay\"\n        btnAriaLabel={t(\"file_delete_delay\")}\n        fieldLabel={t(\"file_delete_delay\")}\n        fieldValue={t(\"milliseconds_to_minute\", {\n          milliseconds: defaultFileDeleteDelay,\n          minute: convert(Number(defaultFileDeleteDelay), \"milliseconds\").to(\n            \"minutes\"\n          ),\n        })}\n        popoverBody={t(\"file_delete_delay_description\")}\n        popoverHeader={t(\"file_delete_delay\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"preallocate-log-segment-files\"\n        btnAriaLabel={t(\"preallocate_log_segment_files\")}\n        fieldLabel={t(\"preallocate_log_segment_files\")}\n        fieldValue={t(\"common:disabled\")}\n        popoverBody={t(\"preallocate_log_segment_files_description\")}\n        popoverHeader={t(\"preallocate_log_segment_files\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Cleanup };\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { TextInput } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { CustomSelect, TimeUnit } from \"./types\";\nimport { retentionTimeSelectOptions } from \"./types\";\n\nexport type CustomRetentionMessageProps = {\n  id?: string;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n};\n\nconst CustomRetentionMessage: React.FC<CustomRetentionMessageProps> = ({\n  customTimeValue,\n  setCustomTimeValue,\n}) => {\n  const [isRetentionTimeSelectOpen, setIsRetentionTimeSelectOpen] =\n    useState<boolean>(false);\n\n  const onRetentionTimeToggle = (isOpen: boolean) => {\n    setIsRetentionTimeSelectOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (event, value) => {\n    const inputUnit: CustomSelect = {\n      unit: value as TimeUnit,\n      value: 1,\n    };\n    setCustomTimeValue(inputUnit);\n\n    onRetentionTimeToggle(false);\n  };\n\n  const onChange = (input: string) => {\n    const inputValue: CustomSelect = {\n      ...customTimeValue,\n      value: Number(input),\n    };\n    if (inputValue.value > -1) setCustomTimeValue(inputValue);\n  };\n\n  return (\n    <div className=\"kafka-ui--radio__parameters\">\n      <Flex>\n        <FlexItem>\n          <TextInput\n            aria-label={\"Retention time\"}\n            type=\"number\"\n            value={customTimeValue.value == 0 ? \"\" : customTimeValue.value}\n            onChange={onChange}\n            min={1}\n          />\n        </FlexItem>\n        <FlexItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={onRetentionTimeToggle}\n            onSelect={(event, value) => onSelect(event, value as string)}\n            placeholder=\"days\"\n            selections={customTimeValue.unit}\n            isOpen={isRetentionTimeSelectOpen}\n          >\n            {retentionTimeSelectOptions?.map((s) => (\n              <SelectOption\n                key={s.key}\n                value={s.value}\n                isPlaceholder={s.isPlaceholder}\n              >\n                {s.value}\n              </SelectOption>\n            ))}\n          </Select>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n\nexport { CustomRetentionMessage };\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { TextInput } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport type { CustomRetentionSizeSelect, CustomRetentionUnit } from \"./types\";\nimport { retentionSizeSelectOptions } from \"./types\";\nimport { useState } from \"react\";\n\nexport type CustomRetentionSizeProps = {\n  id?: string;\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n};\n\nconst CustomRetentionSize: React.FC<CustomRetentionSizeProps> = ({\n  customRetentionSizeValue,\n  setCustomRetentionSizeValue,\n}) => {\n  const [isRetentionSizeSelectOpen, setIsRetentionSizeSelectOpen] =\n    useState<boolean>(false);\n\n  const onRetentionSizeToggle = (isOpen: boolean) => {\n    setIsRetentionSizeSelectOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (event, value) => {\n    const inputUnit: CustomRetentionSizeSelect = {\n      unit: value as CustomRetentionUnit,\n      value: 1,\n    };\n    setCustomRetentionSizeValue(inputUnit);\n    onRetentionSizeToggle(false);\n  };\n\n  const onChange = (input: string) => {\n    const inputValue: CustomRetentionSizeSelect = {\n      ...customRetentionSizeValue,\n      value: Number(input),\n    };\n    if (inputValue.value > -1) setCustomRetentionSizeValue(inputValue);\n  };\n  return (\n    <div className=\"kafka-ui--radio__parameters\">\n      <Flex>\n        <FlexItem>\n          <TextInput\n            aria-label=\"Retention size\"\n            type=\"number\"\n            value={\n              customRetentionSizeValue.value == 0\n                ? \"\"\n                : customRetentionSizeValue.value\n            }\n            onChange={onChange}\n            min={1}\n          />\n        </FlexItem>\n        <FlexItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={onRetentionSizeToggle}\n            onSelect={onSelect}\n            selections={customRetentionSizeValue.unit}\n            isOpen={isRetentionSizeSelectOpen}\n          >\n            {retentionSizeSelectOptions?.map((s) => (\n              <SelectOption\n                key={s.key}\n                value={s.value}\n                isPlaceholder={s.isPlaceholder}\n              />\n            ))}\n          </Select>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n\nexport { CustomRetentionSize };\n","import { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { useCallback } from \"react\";\n\nexport const useValidateTopic = (): {\n  validateName: (name: string) => string | undefined;\n} => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return {\n    validateName: useCallback(\n      (name) => {\n        const legalNameChars = new RegExp(\"^[a-zA-Z0-9._-]+$\");\n        if (name.length && !legalNameChars.test(name)) {\n          return t(\"topic_name_helper_text\");\n        } else if (name.length > 249) {\n          return t(\"cannot_exceed_characters\");\n        } else if (name === \".\" || name === \"..\") {\n          return t(\"invalid_name_with_dot\");\n        }\n        return undefined;\n      },\n      [t]\n    ),\n  };\n};\n","import type { NumberInputProps } from \"@patternfly/react-core\";\nimport {\n  FormSection,\n  NumberInput,\n  Radio,\n  Stack,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport {\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useCallback } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type { TopicPartition } from \"ui-models/src/models/topic-partition\";\nimport { CustomRetentionMessage } from \"./CustomRetentionMessage\";\nimport { CustomRetentionSize } from \"./CustomRetentionSize\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"./types\";\nimport { useValidateTopic } from \"./useValidateTopic\";\n\nexport type CoreConfigurationProps = {\n  isCreate?: boolean;\n  topicData: Topic;\n  setTopicData: (data: Topic) => void;\n  invalidText: string;\n  setInvalidText: (message: string) => void;\n  setTopicValidated: (error: ValidatedOptions) => void;\n  topicValidated: ValidatedOptions;\n  setWarning: (isWarning: boolean) => void;\n  warning: boolean;\n  availablePartitionLimit: number;\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n  radioTimeSelectValue: RadioSelectType;\n  setRadioTimeSelectValue: (value: RadioSelectType) => void;\n  radioSizeSelectValue: RetentionSizeRadioSelect;\n  setRadioSizeSelectValue: (data: RetentionSizeRadioSelect) => void;\n};\n\nconst CoreConfiguration: FunctionComponent<CoreConfigurationProps> = ({\n  isCreate,\n  topicData,\n  setTopicData,\n  invalidText,\n  setInvalidText,\n  setTopicValidated,\n  topicValidated,\n  availablePartitionLimit,\n  customTimeValue,\n  setCustomTimeValue,\n  radioTimeSelectValue,\n  setRadioTimeSelectValue,\n  setCustomRetentionSizeValue,\n  customRetentionSizeValue,\n  radioSizeSelectValue,\n  setRadioSizeSelectValue,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  const [initialPartitions] = useState<TopicPartition[]>(topicData.partitions);\n  const { validateName } = useValidateTopic();\n  const validationCheck = useCallback(\n    (value: string) => {\n      const errorMessage = validateName(value);\n      if (errorMessage) {\n        setInvalidText(errorMessage);\n        setTopicValidated(ValidatedOptions.error);\n      } else {\n        setTopicValidated(ValidatedOptions.default);\n      }\n    },\n    [setInvalidText, setTopicValidated, validateName]\n  );\n\n  const handleRetentionMessageTime = (value: RadioSelectType) => {\n    if (value === \"unlimited\") {\n      setCustomTimeValue({ value: -1, unit: \"unlimited\" });\n      setRadioTimeSelectValue(value);\n    } else {\n      setCustomTimeValue({ value: 7, unit: \"days\" });\n      setRadioTimeSelectValue(value);\n    }\n  };\n\n  const handleRetentionMessageSize = (value: RetentionSizeRadioSelect) => {\n    if (value === \"unlimited\") {\n      setRadioSizeSelectValue(value);\n      setCustomRetentionSizeValue({ value: -1, unit: \"unlimited\" });\n    } else {\n      setCustomRetentionSizeValue({ value: 1, unit: \"bytes\" });\n      setRadioSizeSelectValue(value);\n    }\n  };\n  const handleTextInputChange = (value: string) => {\n    validationCheck(value);\n    setTopicData({ ...topicData, name: value });\n  };\n\n  const onPartitionsChange: NumberInputProps[\"onChange\"] = (event) => {\n    const partitions = Number((event.target as HTMLInputElement).value);\n\n    const updatedPartitions = Array(partitions)\n      .fill(null)\n      .map((_, index) => ({ partition: index }));\n    //Donot allow to set a value below original value in case of edit topic\n    setTopicData({\n      ...topicData,\n      partitions: isCreate\n        ? updatedPartitions\n        : updatedPartitions.length > initialPartitions.length\n        ? updatedPartitions\n        : initialPartitions,\n    });\n  };\n\n  const handleOnPlus = () => {\n    const currentPartitions = topicData.partitions;\n    const updatedPartitions = [\n      ...currentPartitions,\n      { partition: currentPartitions.length },\n    ];\n    setTopicData({\n      ...topicData,\n      partitions: updatedPartitions,\n    });\n  };\n\n  const handleOnMinus = () => {\n    const { partitions } = topicData;\n    const newPartitions = partitions.slice(0, partitions.length - 1);\n    setTopicData({\n      ...topicData,\n      partitions: newPartitions,\n    });\n  };\n\n  const retentionTimeInput = (\n    <CustomRetentionMessage\n      customTimeValue={customTimeValue}\n      setCustomTimeValue={setCustomTimeValue}\n    />\n  );\n\n  const retentionSizeInput = (\n    <CustomRetentionSize\n      customRetentionSizeValue={customRetentionSizeValue}\n      setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n    />\n  );\n\n  return (\n    <FormSection\n      title={t(\"core_configuration\")}\n      id=\"core-configuration\"\n      titleElement={\"h2\"}\n    >\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"core_config_info\")}\n        </Text>\n      </TextContent>\n      {isCreate ? (\n        <FormGroupWithPopover\n          labelHead={t(\"topic_name\")}\n          fieldId=\"create-topic-name\"\n          fieldLabel={t(\"topic_name\")}\n          labelBody={t(\"topic_name_description\")}\n          buttonAriaLabel=\"More info for topic name field\"\n          helperTextInvalid={invalidText}\n          validated={topicValidated}\n          isRequired={true}\n          helperText={t(\"topic_name_helper_text\")}\n        >\n          <TextInput\n            isRequired\n            type=\"text\"\n            id=\"create-topic-name\"\n            name=\"name\"\n            value={topicData.name}\n            onChange={handleTextInputChange}\n            label={t(\"topic_name\")}\n            placeholder={t(\"enter_name\")}\n            validated={topicValidated}\n          />\n        </FormGroupWithPopover>\n      ) : (\n        <TextWithLabelPopover\n          fieldId=\"topic-name\"\n          btnAriaLabel=\"topic detail name\"\n          fieldLabel=\"Name\"\n          fieldValue={topicData.name}\n          popoverBody={t(\"topic_name_description\")}\n          popoverHeader={t(\"topic_name\")}\n        />\n      )}\n\n      <FormGroupWithPopover\n        fieldId=\"create-topic-partitions\"\n        fieldLabel=\"Partitions\"\n        labelHead={t(\"partitions\")}\n        labelBody={t(\"partitions_description\")}\n        buttonAriaLabel=\"More info for partitions field\"\n        helperText={\n          topicData.partitions.length >= availablePartitionLimit\n            ? t(\"partitions_warning\")\n            : t(\"partition_helper_text\")\n        }\n        validated={\n          topicData.partitions.length >= availablePartitionLimit\n            ? \"warning\"\n            : \"default\"\n        }\n      >\n        <NumberInput\n          id=\"create-topic-partitions\"\n          inputName=\"num-partitions\"\n          onChange={onPartitionsChange}\n          data-testid={t(\"partitions\")}\n          onPlus={handleOnPlus}\n          onMinus={handleOnMinus}\n          value={\n            topicData.partitions.length == 0 ? \"\" : topicData.partitions.length\n          }\n          plusBtnProps={{ name: \"num-partitions\" }}\n          minusBtnProps={{ name: \"num-partitions\" }}\n          min={isCreate ? 1 : initialPartitions.length}\n        />\n      </FormGroupWithPopover>\n\n      {/*<TextWithLabelPopover\n        fieldId=\"replicas\"\n        btnAriaLabel={t(\"replicas\")}\n        fieldLabel={t(\"replicas\")}\n        popoverBody={t(\"replicas_description\")}\n        popoverHeader={t(\"replicas\")}\n      />*/}\n      <TextWithLabelPopover\n        fieldId=\"min-insync-replicas\"\n        btnAriaLabel=\"topic detail min-in-sync replica\"\n        fieldLabel=\"Minimum in-sync replicas\"\n        fieldValue={topicData[\"min.insync.replicas\"].toString()}\n        popoverBody={t(\"min_insync_replicas_description\")}\n        popoverHeader={t(\"min_insync_replicas\")}\n      />\n      <FormGroupWithPopover\n        fieldId=\"retention\"\n        fieldLabel=\"Retention time\"\n        labelHead={t(\"retention_time\")}\n        labelBody={t(\"retention_time_description\")}\n        buttonAriaLabel=\"More info for retention time field\"\n      >\n        <Stack hasGutter>\n          <Radio\n            isChecked={radioTimeSelectValue === \"custom\"}\n            name=\"custom-retention-time\"\n            onChange={() => handleRetentionMessageTime(\"custom\")}\n            label={retentionTimeInput}\n            className=\"kafka-ui--radio-label__number-input\"\n            aria-label=\"custom duration\"\n            id=\"custom-retention-time\"\n            value={radioTimeSelectValue}\n          />\n          <Radio\n            isChecked={radioTimeSelectValue === \"unlimited\"}\n            name=\"unlimited-retention-time\"\n            onChange={() => handleRetentionMessageTime(\"unlimited\")}\n            label=\"Unlimited time\"\n            aria-label=\"Unlimited\"\n            id=\"unlimited-retention-time\"\n            value={radioTimeSelectValue}\n          />\n        </Stack>\n      </FormGroupWithPopover>\n      <FormGroupWithPopover\n        fieldId=\"retention-size\"\n        fieldLabel=\"Retention size\"\n        labelHead={t(\"retention_size\")}\n        labelBody={t(\"retention_size_description\")}\n        buttonAriaLabel=\"More info for retention size field\"\n      >\n        <Stack hasGutter>\n          <Radio\n            isChecked={radioSizeSelectValue === \"custom\"}\n            name=\"custom-retention-size\"\n            onChange={() => handleRetentionMessageSize(\"custom\")}\n            label={retentionSizeInput}\n            className=\"kafka-ui--radio-label__number-input\"\n            aria-label=\"custom size\"\n            id=\"custom-retention-size\"\n            value={radioSizeSelectValue}\n          />\n          <Radio\n            isChecked={radioSizeSelectValue === \"unlimited\"}\n            name=\"unlimited-retention-size\"\n            onChange={() => handleRetentionMessageSize(\"unlimited\")}\n            label=\"Unlimited size\"\n            aria-label=\"Unlimited\"\n            id=\"unlimited-retention-size\"\n            value={radioSizeSelectValue}\n          />\n        </Stack>\n      </FormGroupWithPopover>\n    </FormSection>\n  );\n};\n\nexport { CoreConfiguration };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype FlushProps = {\n  defaultFlushIntervalMessages: bigint;\n  defaultFlushIntervalTime: bigint;\n};\n\nconst Flush: React.FC<FlushProps> = ({\n  defaultFlushIntervalMessages,\n  defaultFlushIntervalTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"flush\")} id=\"flush\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"flush_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"flush-interval-messages\"\n        btnAriaLabel={t(\"flush_interval_messages\")}\n        fieldLabel={t(\"flush_interval_messages\")}\n        fieldValue={t(\"messages_time\", {\n          value: defaultFlushIntervalMessages,\n        })}\n        popoverBody={t(\"flush_interval_messages_description\")}\n        popoverHeader={t(\"flush_interval_messages\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"flush-interval-time\"\n        btnAriaLabel={t(\"flush_interval_time\")}\n        fieldLabel={t(\"flush_interval_time\")}\n        fieldValue={t(\"milliseconds_time\", { value: defaultFlushIntervalTime })}\n        popoverBody={t(\"flush_interval_time_description\")}\n        popoverHeader={t(\"flush_interval_time\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Flush };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport {\n  DropdownWithToggle,\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\nimport type { IDropdownOption } from \"./types\";\nimport { TopicConfig } from \"ui-models/src/models/topic-config\";\n\nexport type LogProps = {\n  topicData: Topic;\n  setTopicData: (data: Topic) => void;\n  defaultDeleteRetentionTime: bigint;\n  defaultMinCleanbleRatio: number;\n  defaultMinimumCompactionLagTime: bigint;\n};\n\nconst Log: React.FC<LogProps> = ({\n  topicData,\n  setTopicData,\n  defaultDeleteRetentionTime,\n  defaultMinCleanbleRatio,\n  defaultMinimumCompactionLagTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  const cleanupPolicyOptions: IDropdownOption[] = [\n    {\n      key: \"compact\",\n      value: \"compact\",\n      label: t(\"compact\"),\n      isDisabled: false,\n    },\n    {\n      key: \"delete\",\n      value: \"delete\",\n      label: t(\"common:delete\"),\n      isDisabled: false,\n    },\n    {\n      key: \"delete, compact\",\n      value: \"compact,delete\",\n      label: `${t(\"compact\")},${t(\"common:delete\")}`,\n      isDisabled: false,\n    },\n  ];\n\n  const onSelectOption = (value: string) => {\n    setTopicData({\n      ...topicData,\n      \"cleanup.policy\": value as TopicConfig[\"cleanup.policy\"],\n    });\n  };\n\n  return (\n    <FormSection title={t(\"log\")} id=\"log\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p}>{t(\"log_section_info\")}</Text>\n        <Text component={TextVariants.small}>{t(\"log_section_info_note\")}</Text>\n      </TextContent>\n\n      <FormGroupWithPopover\n        fieldId=\"cleanup-policy\"\n        fieldLabel={t(\"cleanup_policy\")}\n        labelHead={t(\"cleanup_policy\")}\n        labelBody={t(\"cleanup_policy_description\")}\n        buttonAriaLabel={t(\"cleanup_policy\")}\n      >\n        <DropdownWithToggle\n          id=\"log-section-policy-type-dropdown\"\n          toggleId=\"log-section-policy-type-dropdowntoggle\"\n          ariaLabel={t(\"select_policy\")}\n          onSelectOption={onSelectOption}\n          items={cleanupPolicyOptions}\n          name=\"cleanup-policy\"\n          value={topicData[\"cleanup.policy\"]}\n          isLabelAndValueNotSame={true}\n          key={topicData[\"cleanup.policy\"]}\n        />\n      </FormGroupWithPopover>\n\n      <TextWithLabelPopover\n        fieldId=\"delete-retention-time\"\n        btnAriaLabel={t(\"delete_retention_time\")}\n        fieldLabel={t(\"delete_retention_time\")}\n        fieldValue={t(\"milliseconds_time_to_day\", {\n          value: defaultDeleteRetentionTime,\n          days: convert(Number(defaultDeleteRetentionTime), \"milliseconds\").to(\n            \"days\"\n          ),\n        })}\n        popoverBody={t(\"delete_retention_time_description\")}\n        popoverHeader={t(\"delete_retention_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"min-cleanable-ratio\"\n        btnAriaLabel={t(\"min_cleanable_ratio\")}\n        fieldLabel={t(\"min_cleanable_ratio\")}\n        fieldValue={String(defaultMinCleanbleRatio)}\n        popoverBody={t(\"min_cleanable_ratio_description\")}\n        popoverHeader={t(\"min_cleanable_ratio\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"min-compaction-lag-time-description\"\n        btnAriaLabel={t(\"min_compaction_lag_time\")}\n        fieldLabel={t(\"min_compaction_lag_time\")}\n        fieldValue={t(\"milliseconds_time\", {\n          value: defaultMinimumCompactionLagTime,\n        })}\n        popoverBody={t(\"min_compaction_lag_time_description\")}\n        popoverHeader={t(\"min_compaction_lag_time\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Log };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype MessageProps = {\n  defaultMaximumMessageBytes: bigint;\n  defaultMessageTimestampType: string;\n  defaultMaxMessageTimestampDiff: bigint;\n};\n\nconst Message: React.FC<MessageProps> = ({\n  defaultMaximumMessageBytes,\n  defaultMessageTimestampType,\n  defaultMaxMessageTimestampDiff,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"messages\")} id=\"messages\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"message_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"max-message-size\"\n        btnAriaLabel={t(\"max_message_size\")}\n        fieldLabel={t(\"max_message_size\")}\n        fieldValue={t(\"bytes_size\", { value: defaultMaximumMessageBytes })}\n        popoverBody={t(\"max_message_size_description\")}\n        popoverHeader={t(\"max_message_size\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"message-timestamp-type\"\n        btnAriaLabel={t(\"message_timestamp_type\")}\n        fieldLabel={t(\"message_timestamp_type\")}\n        fieldValue={String(defaultMessageTimestampType)}\n        popoverBody={t(\"message_timestamp_type_description\")}\n        popoverHeader={t(\"message_timestamp_type\")}\n      />\n      <TextWithLabelPopover\n        fieldId=\"max-message-timestamp-diff\"\n        btnAriaLabel={t(\"max_message_timestamp_diff\")}\n        fieldLabel={t(\"max_message_timestamp_diff\")}\n        fieldValue={t(\"milliseconds_time\", {\n          value: defaultMaxMessageTimestampDiff,\n        })}\n        popoverBody={t(\"max_message_timestamp_diff_description\")}\n        popoverHeader={t(\"max_message_timestamp_diff\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"compression-type\"\n        btnAriaLabel={t(\"compression_type\")}\n        fieldLabel={t(\"compression_type\")}\n        fieldValue={\"Producer\"}\n        popoverBody={t(\"compression_type_description\")}\n        popoverHeader={t(\"compression_type\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"message-format\"\n        btnAriaLabel={t(\"message_format\")}\n        fieldLabel={t(\"message_format\")}\n        fieldValue={\"2.7-IV2\"}\n        popoverBody={t(\"message_format_description\")}\n        popoverHeader={t(\"message_format\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Message };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\nconst Replication: React.FC = () => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <FormSection title={t(\"replication\")} id=\"replication\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {t(\"replication_section_info\")}\n          <Text component={TextVariants.small}>\n            {t(\"replication_section_info_note\")}\n          </Text>\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"unclean-leader-election\"\n        btnAriaLabel={t(\"unclean_leader_election\")}\n        fieldLabel={t(\"unclean_leader_election\")}\n        fieldValue={t(\"common:disabled\")}\n        popoverBody={t(\"unclean_leader_election_description\")}\n        popoverHeader={t(\"unclean_leader_election\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Replication };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype TopicAdavanceIndexProps = {\n  defaultIndexIntervalSize: bigint;\n  defaultSegmentIndexSize: bigint;\n};\n\nconst TopicAdvanceIndex: React.FC<TopicAdavanceIndexProps> = ({\n  defaultIndexIntervalSize,\n  defaultSegmentIndexSize,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"index\")} id=\"index\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"index_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"index-interval-size\"\n        btnAriaLabel={t(\"index_interval_size\")}\n        fieldLabel={t(\"index_interval_size\")}\n        fieldValue={t(\"bytes_to_kibibytes\", {\n          bytes: defaultIndexIntervalSize,\n          kibibytes: convert(Number(defaultIndexIntervalSize), \"bytes\").to(\n            \"kibibytes\"\n          ),\n        })}\n        popoverBody={t(\"index_interval_size_description\")}\n        popoverHeader={t(\"index_interval_size\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segment-index-size\"\n        btnAriaLabel={t(\"segment_index_size\")}\n        fieldLabel={t(\"segment_index_size\")}\n        fieldValue={t(\"bytes_to_mebibytes\", {\n          bytes: defaultSegmentIndexSize,\n          mebibytes: convert(Number(defaultIndexIntervalSize), \"bytes\").to(\n            \"mebibytes\"\n          ),\n        })}\n        popoverBody={t(\"segment_index_size_description\")}\n        popoverHeader={t(\"segment_index_size\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { TopicAdvanceIndex };\n","import { JumpLinks, JumpLinksItem, SidebarPanel } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\n\nexport type TopicAdvanceJumpLinksProps = {\n  canHaveDelete?: boolean;\n};\nconst TopicAdvanceJumpLinks: React.FC<TopicAdvanceJumpLinksProps> = ({\n  canHaveDelete,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <SidebarPanel variant=\"sticky\">\n      <JumpLinks\n        isVertical\n        label={t(\"jump_to_section\")}\n        scrollableSelector=\".topic-properties\"\n        style={{ position: \"sticky\" }}\n        // offset={-164} // for header\n      >\n        <JumpLinksItem key={0} href=\"#core-configuration\">\n          {t(\"core_configuration\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={1} href=\"#messages\">\n          {t(\"messages\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={2} href=\"#log\">\n          {t(\"log\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={3} href=\"#replication\">\n          {t(\"replication\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={4} href=\"#cleanup\">\n          {t(\"cleanup\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={5} href=\"#index\">\n          {t(\"index\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={6} href=\"#flush\">\n          {t(\"flush\")}\n        </JumpLinksItem>\n        {canHaveDelete ? (\n          <JumpLinksItem key={7} href=\"#delete\">\n            {t(\"delete\")}\n          </JumpLinksItem>\n        ) : (\n          <></>\n        )}\n      </JumpLinks>\n    </SidebarPanel>\n  );\n};\n\nexport { TopicAdvanceJumpLinks };\n","import {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  PageGroup,\n  PageSection,\n  Sidebar,\n  SidebarContent,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"..\";\nimport { Cleanup } from \"./Cleanup\";\nimport { CoreConfiguration } from \"./CoreConfiguration\";\nimport { Flush } from \"./Flush\";\nimport { Log } from \"./Log\";\nimport { Message } from \"./Message\";\nimport { Replication } from \"./Replication\";\nimport { TopicAdvanceIndex } from \"./TopicAdvanceIndex\";\nimport { TopicAdvanceJumpLinks } from \"./TopicAdvanceJumpLinks\";\n\nexport type TopicAdvancePageProps = {\n  isCreate: boolean;\n  onConfirm: (data: Topic) => void;\n  handleCancel?: () => void;\n  topicData: Topic;\n  setTopicData: (val: Topic) => void;\n  checkTopicName?: (value: string) => boolean;\n  availablePartitionLimit: number;\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n  radioTimeSelectValue: RadioSelectType;\n  setRadioTimeSelectValue: (value: RadioSelectType) => void;\n  radioSizeSelectValue: RetentionSizeRadioSelect;\n  setRadioSizeSelectValue: (data: RetentionSizeRadioSelect) => void;\n};\n\nexport const TopicAdvancePage: React.FunctionComponent<\n  TopicAdvancePageProps\n> = ({\n  isCreate,\n  onConfirm,\n  handleCancel,\n  topicData,\n  setTopicData,\n  checkTopicName,\n  availablePartitionLimit,\n  customTimeValue,\n  setCustomTimeValue,\n  radioTimeSelectValue,\n  setRadioTimeSelectValue,\n  setCustomRetentionSizeValue,\n  customRetentionSizeValue,\n  radioSizeSelectValue,\n  setRadioSizeSelectValue,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n  const actionText = isCreate ? t(\"create_topic\") : t(\"common:save\");\n\n  //states\n\n  const [topicValidated, setTopicValidated] = useState<ValidatedOptions>(\n    ValidatedOptions.default\n  );\n  const [invalidText, setInvalidText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [warning, setWarning] = useState<boolean>(false);\n  const onValidateTopic = () => {\n    if (isCreate) {\n      if (topicData?.name.length < 1) {\n        setInvalidText(t(\"common:required\"));\n        setTopicValidated(ValidatedOptions.error);\n      } else {\n        setIsLoading(true);\n\n        const isTopicNameValid =\n          checkTopicName && checkTopicName(topicData?.name);\n        if (!isTopicNameValid) {\n          setIsLoading(false);\n          setInvalidText(t(\"already_exists\", { name: topicData?.name })),\n            setTopicValidated(ValidatedOptions.error);\n        } else onConfirm(topicData);\n      }\n    } else {\n      onConfirm(topicData);\n    }\n  };\n  return (\n    <PageSection padding={{ default: \"noPadding\" }}>\n      <Sidebar hasGutter>\n        <TopicAdvanceJumpLinks />\n        <SidebarContent>\n          <PageGroup\n            hasOverflowScroll={true}\n            id=\"topic-detail-view\"\n            aria-label={\"TODO\"}\n          >\n            <PageSection padding={{ default: \"noPadding\" }}>\n              <Form>\n                <CoreConfiguration\n                  isCreate={isCreate}\n                  topicData={topicData}\n                  setTopicData={setTopicData}\n                  availablePartitionLimit={availablePartitionLimit}\n                  invalidText={invalidText}\n                  setInvalidText={setInvalidText}\n                  setTopicValidated={setTopicValidated}\n                  topicValidated={topicValidated}\n                  setWarning={setWarning}\n                  warning={warning}\n                  customRetentionSizeValue={customRetentionSizeValue}\n                  setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n                  customTimeValue={customTimeValue}\n                  setCustomTimeValue={setCustomTimeValue}\n                  radioTimeSelectValue={radioTimeSelectValue}\n                  setRadioTimeSelectValue={setRadioTimeSelectValue}\n                  radioSizeSelectValue={radioSizeSelectValue}\n                  setRadioSizeSelectValue={setRadioSizeSelectValue}\n                />\n                <Message\n                  defaultMaximumMessageBytes={\n                    topicData[\"max.message.bytes\"].value\n                  }\n                  defaultMessageTimestampType={\n                    topicData[\"message.timestamp.type\"]\n                  }\n                  defaultMaxMessageTimestampDiff={\n                    topicData[\"message.timestamp.difference.max.ms\"].value\n                  }\n                />\n                <Log\n                  topicData={topicData}\n                  setTopicData={setTopicData}\n                  defaultDeleteRetentionTime={topicData[\"retention.ms\"].value}\n                  defaultMinCleanbleRatio={\n                    topicData[\"min.cleanable.dirty.ratio\"]\n                  }\n                  defaultMinimumCompactionLagTime={\n                    topicData[\"min.compaction.lag.ms\"].value\n                  }\n                />\n                <Replication />\n                <Cleanup\n                  defaultLogSegmentSize={topicData[\"segment.bytes\"].value}\n                  defaultSegmentTime={topicData[\"segment.ms\"].value}\n                  defaultSegmentJitterTime={\n                    topicData[\"segment.jitter.ms\"].value\n                  }\n                  defaultFileDeleteDelay={\n                    topicData[\"file.delete.delay.ms\"].value\n                  }\n                />\n                <TopicAdvanceIndex\n                  defaultIndexIntervalSize={\n                    topicData[\"index.interval.bytes\"].value\n                  }\n                  defaultSegmentIndexSize={\n                    topicData[\"segment.index.bytes\"].value\n                  }\n                />\n                <Flush\n                  defaultFlushIntervalMessages={\n                    topicData[\"flush.messages\"].value\n                  }\n                  defaultFlushIntervalTime={topicData[\"flush.ms\"].value}\n                />\n              </Form>\n\n              <ActionGroup className=\"kafka-ui--sticky-footer\">\n                <Divider className=\"kafka-ui--divider--FlexShrink\" />\n                <Button\n                  isLoading={isLoading}\n                  onClick={onValidateTopic}\n                  variant=\"primary\"\n                  data-testid={\n                    isCreate\n                      ? \"topicAdvanceCreate-actionCreate\"\n                      : \"tabProperties-actionSave\"\n                  }\n                  isDisabled={topicValidated !== \"default\"}\n                >\n                  {actionText}\n                </Button>\n                <Button\n                  onClick={handleCancel}\n                  variant=\"link\"\n                  data-testid={\n                    isCreate\n                      ? \"topicAdvanceCreate-actionCancel\"\n                      : \"tabProperties-actionCancel\"\n                  }\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </ActionGroup>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import { convert } from \"convert\";\nimport type { CustomRetentionSizeSelect } from \"./types\";\n\nexport const retentionSizeTransformer = (size: CustomRetentionSizeSelect) => {\n  switch (size.unit) {\n    case \"bytes\":\n      return BigInt(size.value);\n    case \"kibibytes\":\n      return convert(BigInt(size.value), \"kibibytes\").to(\"bytes\");\n    case \"mebibytes\":\n      return convert(BigInt(size.value), \"mebibytes\").to(\"bytes\");\n    case \"gibibytes\":\n      return convert(BigInt(size.value), \"gibibytes\").to(\"bytes\");\n    case \"tebibytes\":\n      return convert(BigInt(size.value), \"tebibytes\").to(\"bytes\");\n    case \"unlimited\":\n      return BigInt(size.value);\n  }\n};\n","import type { WizardStep } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  PageSection,\n  PageSectionTypes,\n  PageSectionVariants,\n  ValidatedOptions,\n  Wizard,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type { IWizardFooter } from \"./index\";\nimport {\n  StepMessageRetention,\n  StepPartitions,\n  StepReplicas,\n  StepTopicName,\n  WizardCustomFooter,\n} from \"./index\";\nimport { PartitionLimitWarning } from \"./PartitionLimitWarning\";\nimport { retentionTimeTransformer } from \"./retentionTimeTransformer\";\nimport { TopicAdvancePage } from \"./TopicAdvancePage\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"./types\";\nimport { retentionSizeTransformer } from \"./retentionSizeTransformer\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\n\nexport type CreateTopicWizardProps = {\n  isSwitchChecked: boolean;\n  setIsCreateTopic?: (value: boolean) => void;\n  onCloseCreateTopic: () => void;\n  onSave: (topicData: Topic) => void;\n  initialFieldsValue: Topic;\n  checkTopicName: (value: string) => boolean;\n  availablePartitionLimit: number;\n  availabilityZone: AZ;\n};\n\nexport const CreateTopicWizard: React.FC<CreateTopicWizardProps> = ({\n  isSwitchChecked,\n  onCloseCreateTopic,\n  onSave,\n  initialFieldsValue,\n  checkTopicName,\n  availablePartitionLimit,\n  availabilityZone,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  const [customTimeValue, setCustomTimeValue] = useState<CustomSelect>({\n    unit: \"days\",\n    value: 7,\n  });\n\n  const [customRetentionSizeValue, setCustomRetentionSizeValue] =\n    useState<CustomRetentionSizeSelect>({ unit: \"unlimited\", value: -1 });\n\n  const [topicNameValidated, setTopicNameValidated] =\n    useState<ValidatedOptions>(ValidatedOptions.default);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [invalidText, setInvalidText] = useState<string>(\"\");\n  const [topicData, setTopicData] = useState<Topic>(initialFieldsValue);\n  const [warningModalOpen, setWarningModalOpen] = useState<boolean>(false);\n  const [radioTimeSelectValue, setRadioTimeSelectValue] =\n    useState<RadioSelectType>(\"week\");\n\n  const [radioSizeSelectValue, setRadioSizeSelectValue] =\n    useState<RetentionSizeRadioSelect>(\"unlimited\");\n\n  const closeWizard = () => {\n    onCloseCreateTopic && onCloseCreateTopic();\n  };\n\n  const steps: WizardStep[] = [\n    {\n      name: t(\"topic_name\"),\n      enableNext:\n        topicData?.name.trim() !== \"\" &&\n        topicNameValidated === ValidatedOptions.default,\n      component: (\n        <StepTopicName\n          newTopicData={topicData}\n          onTopicNameChange={setTopicData}\n          topicNameValidated={topicNameValidated}\n          onValidationCheck={setTopicNameValidated}\n          invalidText={invalidText}\n          setInvalidText={setInvalidText}\n        />\n      ),\n    },\n    {\n      name: t(\"partitions\"),\n      canJumpTo: topicData?.name.trim() !== \"\",\n      component: (\n        <StepPartitions\n          newTopicData={topicData}\n          onPartitionsChange={setTopicData}\n          availablePartitionLimit={availablePartitionLimit}\n        />\n      ),\n    },\n    {\n      name: t(\"message_retention\"),\n      canJumpTo: topicData?.name.trim() !== \"\",\n      component: (\n        <StepMessageRetention\n          customRetentionSizeValue={customRetentionSizeValue}\n          setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n          customTimeValue={customTimeValue}\n          setCustomTimeValue={setCustomTimeValue}\n          radioTimeSelectValue={radioTimeSelectValue}\n          setRadioTimeSelectValue={setRadioTimeSelectValue}\n          radioSizeSelectValue={radioSizeSelectValue}\n          setRadioSizeSelectValue={setRadioSizeSelectValue}\n        />\n      ),\n    },\n    {\n      name: t(\"replicas\"),\n      canJumpTo: topicData?.name.trim() !== \"\",\n      component: (\n        <StepReplicas\n          minInSyncReplica={topicData[\"min.insync.replicas\"]}\n          availabilityZone={availabilityZone}\n        />\n      ),\n      nextButtonText: t(\"finish\"),\n    },\n  ];\n\n  const title = t(\"wizard_title\");\n\n  const onTransform = () => {\n    const tranformedValueInMilliseconds =\n      retentionTimeTransformer(customTimeValue);\n    const tranformedValueInBytes = retentionSizeTransformer(\n      customRetentionSizeValue\n    );\n    const transformedTopic: Topic = {\n      ...topicData,\n      \"retention.ms\": {\n        type: \"ms\",\n        value: tranformedValueInMilliseconds || BigInt(-1),\n      },\n      \"retention.bytes\": { type: \"bytes\", value: tranformedValueInBytes },\n    };\n    onSaveTopic(transformedTopic);\n  };\n\n  const onValidate: IWizardFooter[\"onValidate\"] = (onNext) => {\n    if (topicData?.name.length < 1) {\n      setInvalidText(t(\"common:required\"));\n      setTopicNameValidated(ValidatedOptions.error);\n    } else {\n      setIsLoading(true);\n\n      const isTopicNameValid = checkTopicName(topicData?.name);\n      if (!isTopicNameValid) {\n        setIsLoading(false);\n        setInvalidText(t(\"already_exists\", { name: topicData?.name })),\n          setTopicNameValidated(ValidatedOptions.error);\n      } else onNext();\n    }\n  };\n  const onSaveTopic = (transformedTopic: Topic) => {\n    if (topicData.partitions.length >= availablePartitionLimit)\n      setWarningModalOpen(true);\n    else onSave(transformedTopic);\n  };\n  return (\n    <>\n      {isSwitchChecked ? (\n        <>\n          <Divider className=\"kafka-ui--divider--FlexShrink\" />\n          <PageSection\n            variant={PageSectionVariants.light}\n            hasOverflowScroll={true}\n            aria-label={\"TODO\"}\n          >\n            {\n              <TopicAdvancePage\n                isCreate={true}\n                onConfirm={onTransform}\n                handleCancel={onCloseCreateTopic}\n                topicData={topicData}\n                setTopicData={setTopicData}\n                checkTopicName={checkTopicName}\n                availablePartitionLimit={availablePartitionLimit}\n                customRetentionSizeValue={customRetentionSizeValue}\n                setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n                customTimeValue={customTimeValue}\n                setCustomTimeValue={setCustomTimeValue}\n                radioTimeSelectValue={radioTimeSelectValue}\n                setRadioTimeSelectValue={setRadioTimeSelectValue}\n                radioSizeSelectValue={radioSizeSelectValue}\n                setRadioSizeSelectValue={setRadioSizeSelectValue}\n              />\n            }\n            {warningModalOpen && (\n              <PartitionLimitWarning\n                topicData={topicData}\n                onSave={onSaveTopic}\n                isModalOpen={warningModalOpen}\n                setIsModalOpen={setWarningModalOpen}\n              />\n            )}\n          </PageSection>\n        </>\n      ) : (\n        <PageSection\n          variant={PageSectionVariants.light}\n          type={PageSectionTypes.wizard}\n          hasOverflowScroll={true}\n          aria-label={\"TODO\"}\n        >\n          <Wizard\n            navAriaLabel={`${title} steps`}\n            mainAriaLabel={`${title} content`}\n            steps={steps}\n            onClose={closeWizard}\n            onSave={onTransform}\n            data-testid=\"topicBasicCreate-Wizard\"\n            footer={\n              <WizardCustomFooter\n                isLoading={isLoading}\n                onValidate={onValidate}\n                topicNameValidated={topicNameValidated}\n                closeWizard={closeWizard}\n              />\n            }\n          />\n          {warningModalOpen && (\n            <PartitionLimitWarning\n              topicData={topicData}\n              onSave={onSave}\n              isModalOpen={warningModalOpen}\n              setIsModalOpen={setWarningModalOpen}\n            />\n          )}\n        </PageSection>\n      )}\n    </>\n  );\n};\n","import {\n  Form,\n  FormGroup,\n  FormSection,\n  Radio,\n  Stack,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { CustomRetentionMessage } from \"./CustomRetentionMessage\";\nimport { CustomRetentionSize } from \"./CustomRetentionSize\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"./types\";\n\nexport type StepMessageRetentionProps = {\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n  radioTimeSelectValue: RadioSelectType;\n  setRadioTimeSelectValue: (value: RadioSelectType) => void;\n  radioSizeSelectValue: RetentionSizeRadioSelect;\n  setRadioSizeSelectValue: (data: RetentionSizeRadioSelect) => void;\n};\n\nexport const StepMessageRetention: React.FC<StepMessageRetentionProps> = ({\n  customTimeValue,\n  setCustomTimeValue,\n  radioTimeSelectValue,\n  setRadioTimeSelectValue,\n  setCustomRetentionSizeValue,\n  customRetentionSizeValue,\n  radioSizeSelectValue,\n  setRadioSizeSelectValue,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  const handleRetentionMessageSize = (value: RetentionSizeRadioSelect) => {\n    if (value === \"unlimited\") {\n      setRadioSizeSelectValue(value);\n      setCustomRetentionSizeValue({ value: -1, unit: \"unlimited\" });\n    } else {\n      setCustomRetentionSizeValue({ value: 1, unit: \"bytes\" });\n      setRadioSizeSelectValue(value);\n    }\n  };\n\n  const retentionTime = (value: RadioSelectType) => {\n    switch (value) {\n      case \"day\":\n        setCustomTimeValue({ value: 1, unit: \"days\" });\n        break;\n      case \"week\":\n        setCustomTimeValue({ value: 1, unit: \"weeks\" });\n        break;\n      case \"custom\":\n        setCustomTimeValue({ value: 7, unit: \"days\" });\n        break;\n      case \"unlimited\":\n        setCustomTimeValue({ value: -1, unit: \"unlimited\" });\n        break;\n    }\n    setRadioTimeSelectValue(value);\n  };\n\n  return (\n    <>\n      <Form onSubmit={(event) => event.preventDefault()}>\n        <FormSection\n          title={t(\"message_retention\")}\n          id=\"message-retention\"\n          titleElement={\"h2\"}\n        >\n          <TextContent>\n            <Text component={TextVariants.p}>\n              {t(\"message_retention_info\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"message_retention_info_note\")}\n            </Text>\n          </TextContent>\n\n          <FormGroup\n            fieldId=\"form-group-retention-time-in-wizard\"\n            label={t(\"retention_time\")}\n            isRequired\n          >\n            <Stack hasGutter>\n              <Radio\n                isChecked={radioTimeSelectValue === \"day\"}\n                name=\"radioDay\"\n                onChange={() => retentionTime(\"day\")}\n                label=\"A day\"\n                aria-label=\"A day\"\n                id=\"radio-controlled-1\"\n                value={radioTimeSelectValue}\n              />\n              <Radio\n                isChecked={radioTimeSelectValue === \"week\"}\n                name=\"radioWeek\"\n                onChange={() => retentionTime(\"week\")}\n                label=\"A week\"\n                aria-label=\"A week\"\n                id=\"radio-controlled-2\"\n                value={radioTimeSelectValue}\n              />\n              <Radio\n                isChecked={radioTimeSelectValue === \"custom\"}\n                name=\"radioCustomTime\"\n                onChange={() => retentionTime(\"custom\")}\n                label=\"Custom duration\"\n                aria-label=\"custom input\"\n                id=\"radio-controlled-4\"\n                value={radioTimeSelectValue}\n              />\n              {radioTimeSelectValue === \"custom\" && (\n                <CustomRetentionMessage\n                  customTimeValue={customTimeValue}\n                  setCustomTimeValue={setCustomTimeValue}\n                />\n              )}\n              <Radio\n                isChecked={radioTimeSelectValue === \"unlimited\"}\n                name=\"radioUnlimitedTime\"\n                onChange={() => retentionTime(\"unlimited\")}\n                label=\"Unlimited time\"\n                aria-label=\"Unlimited\"\n                id=\"radio-controlled-3\"\n                value={radioTimeSelectValue}\n              />\n            </Stack>\n          </FormGroup>\n          <FormGroup\n            fieldId=\"form-group-retention-size-in-wizard\"\n            label=\"Retention size\"\n          >\n            <Stack hasGutter>\n              <Radio\n                isChecked={radioSizeSelectValue === \"unlimited\"}\n                name=\"radioUnlimitedSize\"\n                onChange={() => handleRetentionMessageSize(\"unlimited\")}\n                label=\"Unlimited size\"\n                aria-label=\"Unlimited\"\n                id=\"radio-controlled-6\"\n                value={radioSizeSelectValue}\n              />\n              <Radio\n                isChecked={radioSizeSelectValue === \"custom\"}\n                name=\"radioCustomSize\"\n                onChange={() => handleRetentionMessageSize(\"custom\")}\n                label=\"Custom size\"\n                aria-label=\"custom size\"\n                id=\"radio-controlled-5\"\n                value={radioSizeSelectValue}\n              />\n              {radioSizeSelectValue === \"custom\" && (\n                <CustomRetentionSize\n                  customRetentionSizeValue={customRetentionSizeValue}\n                  setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n                />\n              )}\n            </Stack>\n          </FormGroup>\n        </FormSection>\n      </Form>\n    </>\n  );\n};\n","import type { NumberInputProps } from \"@patternfly/react-core\";\nimport {\n  Form,\n  FormGroup,\n  FormSection,\n  NumberInput,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\n\nexport type StepPartitionsProps = {\n  newTopicData: Topic;\n  onPartitionsChange: (value: Topic) => void;\n  availablePartitionLimit: number;\n};\n\nexport const StepPartitions: React.FC<StepPartitionsProps> = ({\n  newTopicData,\n  onPartitionsChange,\n  availablePartitionLimit,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  const handleOnPlus = () => {\n    const newPartitions = [\n      ...newTopicData.partitions,\n      { partition: newTopicData.partitions.length },\n    ];\n    onPartitionsChange({\n      ...newTopicData,\n      partitions: newPartitions,\n    });\n  };\n\n  const handleOnMinus = () => {\n    const { partitions } = newTopicData;\n    const newPartitions = partitions.slice(0, partitions.length - 1);\n    onPartitionsChange({\n      ...newTopicData,\n      partitions: newPartitions,\n    });\n  };\n\n  const handlePartitionTouchspinChange: NumberInputProps[\"onChange\"] = (\n    event\n  ) => {\n    const newPartitionCount = Number((event.target as HTMLInputElement).value);\n    const newPartitions = Array.from(\n      { length: newPartitionCount },\n      (_, i) => newTopicData.partitions[i] ?? { partition: i }\n    );\n    onPartitionsChange({\n      ...newTopicData,\n      partitions: newPartitions,\n    });\n  };\n  const onBlur = () => {\n    if (newTopicData.partitions.length < 1) {\n      onPartitionsChange({ ...newTopicData, partitions: [{ partition: 1 }] });\n    }\n  };\n\n  return (\n    <Form>\n      <FormSection title={t(\"partitions\")} id=\"partitions\" titleElement={\"h2\"}>\n        <TextContent>\n          <Text component={TextVariants.p}>{t(\"partition_info\")}</Text>\n          <Text component={TextVariants.small}>{t(\"partition_info_note\")}</Text>\n        </TextContent>\n\n        <FormGroup\n          label=\"Partitions\"\n          fieldId=\"step-topic-name-form\"\n          helperText={\n            newTopicData.partitions.length >= availablePartitionLimit\n              ? t(\"partitions_warning\")\n              : t(\"partition_helper_text\")\n          }\n          validated={\n            newTopicData.partitions.length >= availablePartitionLimit\n              ? \"warning\"\n              : \"default\"\n          }\n          isRequired\n        >\n          <NumberInput\n            onPlus={handleOnPlus}\n            onMinus={handleOnMinus}\n            value={\n              Number(newTopicData.partitions.length) == 0\n                ? \"\"\n                : Number(newTopicData.partitions.length)\n            }\n            inputName=\"input\"\n            onChange={handlePartitionTouchspinChange}\n            widthChars={20}\n            onBlur={onBlur}\n            min={1}\n          />\n        </FormGroup>\n      </FormSection>\n    </Form>\n  );\n};\n","import {\n  Alert,\n  Form,\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\nexport type StepReplicasProps = {\n  //replicationFactor: number;\n  minInSyncReplica: number;\n  availabilityZone: AZ;\n};\n\nexport const StepReplicas: React.FC<StepReplicasProps> = ({\n  minInSyncReplica,\n  availabilityZone,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <Form>\n      <FormSection\n        title={t(\"replicas\")}\n        id=\"replica-section\"\n        titleElement={\"h2\"}\n      >\n        <TextContent>\n          <Text component={TextVariants.p}>{t(\"replicas_info\")}</Text>\n          <Text component={TextVariants.small}>{t(\"replicas_detail\")}</Text>\n        </TextContent>\n        <Alert\n          variant=\"info\"\n          isInline\n          title={\n            availabilityZone == \"multi\"\n              ? t(\"replicas_helper_text_multi_az\")\n              : t(\"replicas_helper_text_single_az\")\n          }\n        />\n\n        {/*<TextWithLabelPopover\n          fieldId=\"replicas\"\n          btnAriaLabel={t(\"replicas\")}\n          fieldLabel={t(\"replicas\")}\n          popoverBody={t(\"replicas_description\")}\n          popoverHeader={t(\"replicas\")}\n        />*/}\n\n        <TextWithLabelPopover\n          fieldId=\"min-insync-replicas\"\n          btnAriaLabel=\"topic detail min-in-sync replica\"\n          fieldLabel=\"Minimum in-sync replicas\"\n          fieldValue={minInSyncReplica.toString()}\n          popoverBody={t(\"min_insync_replicas_description\")}\n          popoverHeader={t(\"min_insync_replicas\")}\n        />\n      </FormSection>\n    </Form>\n  );\n};\n","import {\n  Form,\n  FormGroup,\n  FormSection,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { useValidateTopic } from \"./useValidateTopic\";\n\nexport type StepTopicNameProps = {\n  newTopicData: Topic;\n  onTopicNameChange: (value: Topic) => void;\n  topicNameValidated: ValidatedOptions;\n  onValidationCheck: (value: ValidatedOptions) => void;\n  invalidText: string;\n  setInvalidText: (value: string) => void;\n};\n\nexport const StepTopicName: React.FC<StepTopicNameProps> = ({\n  newTopicData,\n  onTopicNameChange,\n  topicNameValidated,\n  onValidationCheck,\n  invalidText,\n  setInvalidText,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  const { validateName } = useValidateTopic();\n\n  const validationCheck = useCallback(\n    (inputValue: string) => {\n      const errorMessage = validateName(inputValue);\n      if (errorMessage) {\n        setInvalidText(errorMessage);\n        onValidationCheck(ValidatedOptions.error);\n      } else {\n        onValidationCheck(ValidatedOptions.default);\n      }\n    },\n    [setInvalidText, onValidationCheck, validateName]\n  );\n\n  useEffect(() => {\n    validationCheck(newTopicData.name);\n  }, [newTopicData.name, validationCheck]);\n\n  const handleTopicNameChange = (value: string) => {\n    validationCheck(value);\n    onTopicNameChange({ ...newTopicData, name: value });\n  };\n\n  return (\n    <Form onSubmit={(event) => event.preventDefault()}>\n      <FormSection title={t(\"topic_name\")} id=\"topic-name\" titleElement={\"h2\"}>\n        <TextContent>\n          <Text component={TextVariants.p}>{t(\"topic_name_info\")}</Text>\n          <Text component={TextVariants.small}>\n            {t(\"topic_name_info_note\")}\n          </Text>\n        </TextContent>\n        <FormGroup\n          label={t(\"topic_name\")}\n          fieldId=\"step-topic-name-form\"\n          helperText={t(\"topic_name_helper_text\")}\n          helperTextInvalid={invalidText}\n          validated={topicNameValidated}\n          isRequired\n        >\n          <TextInput\n            ouiaId={\"text-input\"}\n            isRequired\n            type=\"text\"\n            id=\"step-topic-name-input\"\n            name=\"step-topic-name\"\n            value={newTopicData.name}\n            onChange={handleTopicNameChange}\n            placeholder={t(\"enter_name\")}\n            validated={topicNameValidated}\n          />\n        </FormGroup>\n      </FormSection>\n    </Form>\n  );\n};\n","import type React from \"react\";\nimport {\n  WizardContextConsumer,\n  Button,\n  WizardFooter,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport interface IWizardFooter {\n  isLoading: boolean;\n  onValidate: (value: () => void) => void;\n  topicNameValidated: ValidatedOptions;\n  closeWizard: () => void;\n}\n\nexport const WizardCustomFooter: React.FC<IWizardFooter> = ({\n  isLoading,\n  onValidate,\n  closeWizard,\n  topicNameValidated,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack }) => {\n          if (activeStep.name == t(\"topic_name\")) {\n            return (\n              <>\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isLoading={isLoading}\n                  onClick={() => onValidate(onNext)}\n                  isDisabled={\n                    topicNameValidated == ValidatedOptions.default\n                      ? false\n                      : true\n                  }\n                  ouiaId={\"button-next\"}\n                >\n                  {t(\"common:next\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-back\"}\n                  variant=\"secondary\"\n                  isDisabled={true}\n                >\n                  {t(\"common:back\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-cancel\"}\n                  variant=\"link\"\n                  onClick={closeWizard}\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </>\n            );\n          }\n\n          if (activeStep.name == \"Replicas\") {\n            return (\n              <>\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={onNext}\n                  ouiaId={\"button-finish\"}\n                >\n                  {t(\"common:finish\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-back\"}\n                  variant=\"secondary\"\n                  onClick={onBack}\n                >\n                  {t(\"common:back\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-cancel\"}\n                  variant=\"link\"\n                  onClick={closeWizard}\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </>\n            );\n          }\n          return (\n            <>\n              <Button\n                ouiaId={\"button-next\"}\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={onNext}\n              >\n                {t(\"common:next\")}\n              </Button>\n              <Button\n                ouiaId={\"button-back\"}\n                variant=\"secondary\"\n                onClick={onBack}\n              >\n                {t(\"common:back\")}\n              </Button>\n              <Button\n                ouiaId={\"button-cancel\"}\n                variant=\"link\"\n                onClick={closeWizard}\n              >\n                {t(\"common:cancel\")}\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n};\n","import type React from \"react\";\nimport { useState } from \"react\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { CreateTopicHead, CreateTopicWizard } from \"../components\";\n\nexport type CreateTopicPageProps = {\n  kafkaName: string;\n  kafkaPageLink: string;\n  kafkaInstanceLink: string;\n  onSave: (topicData: Topic) => void;\n  initialTopicValues: Topic;\n  onCloseCreateTopic: () => void;\n  checkTopicName: (value: string) => boolean;\n  availablePartitionLimit: number;\n  availabilityZone: AZ;\n};\n\nexport const CreateTopic: React.FC<CreateTopicPageProps> = ({\n  kafkaName,\n  kafkaPageLink,\n  kafkaInstanceLink,\n  onSave,\n  initialTopicValues,\n  onCloseCreateTopic,\n  checkTopicName,\n  availablePartitionLimit,\n  availabilityZone,\n}) => {\n  const [isSwitchChecked, setIsSwitchChecked] = useState<boolean>(false);\n\n  return (\n    <>\n      <CreateTopicHead\n        showAllOptions={isSwitchChecked}\n        kafkaName={kafkaName}\n        kafkaInstanceLink={kafkaInstanceLink}\n        kafkaPageLink={kafkaPageLink}\n        onShowAllOptions={setIsSwitchChecked}\n      />\n      <CreateTopicWizard\n        isSwitchChecked={isSwitchChecked}\n        onCloseCreateTopic={onCloseCreateTopic}\n        onSave={onSave}\n        initialFieldsValue={initialTopicValues}\n        checkTopicName={checkTopicName}\n        availablePartitionLimit={availablePartitionLimit}\n        availabilityZone={availabilityZone}\n      />\n    </>\n  );\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { TopicAdvancePage } from \"../components/TopicAdvancePage\";\nimport { PartitionLimitWarning } from \"../components\";\nimport type {\n  CustomSelect,\n  CustomRetentionSizeSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n  TimeUnit,\n} from \"../../\";\nimport { bytesToMemorySize, millisecondsToTime } from \"../../KafkaTopics/types\";\nimport type { CustomRetentionUnit } from \"../components/types\";\nimport { retentionSizeTransformer } from \"../components/retentionSizeTransformer\";\nimport { retentionTimeTransformer } from \"../components/retentionTimeTransformer\";\n\nexport type EditTopicPropertiesProps = {\n  topic: Topic;\n  onCancel: () => void;\n  onSave: (data: Topic) => void;\n  availablePartitionLimit: number;\n};\n\nexport const EditTopicProperties: FunctionComponent<\n  EditTopicPropertiesProps\n> = ({ topic, onCancel, onSave, availablePartitionLimit }) => {\n  const millisecondsToTimeValue = millisecondsToTime(\n    topic[\"retention.ms\"].value\n  );\n  const bytesToSizeValue = bytesToMemorySize(topic[\"retention.bytes\"].value);\n  const [customTimeValue, setCustomTimeValue] = useState<CustomSelect>({\n    unit:\n      topic[\"retention.ms\"].value != BigInt(-1)\n        ? (millisecondsToTimeValue.unit as TimeUnit)\n        : \"days\",\n    value:\n      topic[\"retention.ms\"].value != BigInt(-1)\n        ? Number(millisecondsToTimeValue.value)\n        : 7,\n  });\n\n  const [customRetentionSizeValue, setCustomRetentionSizeValue] =\n    useState<CustomRetentionSizeSelect>({\n      unit:\n        topic[\"retention.bytes\"].value != BigInt(-1)\n          ? (bytesToSizeValue.unit as CustomRetentionUnit)\n          : \"bytes\",\n      value:\n        topic[\"retention.bytes\"].value != BigInt(-1)\n          ? Number(bytesToSizeValue.value)\n          : 1,\n    });\n\n  const [radioTimeSelectValue, setRadioTimeSelectValue] =\n    useState<RadioSelectType>(\n      topic[\"retention.ms\"].value == BigInt(-1) ? \"unlimited\" : \"custom\"\n    );\n\n  const [radioSizeSelectValue, setRadioSizeSelectValue] =\n    useState<RetentionSizeRadioSelect>(\n      topic[\"retention.bytes\"].value == BigInt(-1) ? \"unlimited\" : \"custom\"\n    );\n\n  const [topicData, setTopicData] = useState<Topic>(topic);\n\n  const [warningModalOpen, setWarningModalOpen] = useState<boolean>(false);\n\n  const onSaveTopic = (transformedTopic: Topic) => {\n    if (topicData.partitions.length >= availablePartitionLimit)\n      setWarningModalOpen(true);\n    else onSave(transformedTopic);\n  };\n\n  const onTransform = () => {\n    const tranformedValueInMilliseconds =\n      retentionTimeTransformer(customTimeValue);\n    const tranformedValueInBytes = retentionSizeTransformer(\n      customRetentionSizeValue\n    );\n    const transformedTopic: Topic = {\n      ...topicData,\n      \"retention.ms\": {\n        type: \"ms\",\n        value: tranformedValueInMilliseconds || BigInt(-1),\n      },\n      \"retention.bytes\": { type: \"bytes\", value: tranformedValueInBytes },\n    };\n    onSaveTopic(transformedTopic);\n  };\n\n  return (\n    <PageSection\n      variant={\"light\"}\n      className={\"topic-properties\"}\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n    >\n      <TopicAdvancePage\n        isCreate={false}\n        onConfirm={onTransform}\n        handleCancel={onCancel}\n        topicData={topicData}\n        setTopicData={setTopicData}\n        availablePartitionLimit={availablePartitionLimit}\n        customRetentionSizeValue={customRetentionSizeValue}\n        setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n        customTimeValue={customTimeValue}\n        setCustomTimeValue={setCustomTimeValue}\n        radioTimeSelectValue={radioTimeSelectValue}\n        setRadioTimeSelectValue={setRadioTimeSelectValue}\n        radioSizeSelectValue={radioSizeSelectValue}\n        setRadioSizeSelectValue={setRadioSizeSelectValue}\n      />\n      {warningModalOpen && (\n        <PartitionLimitWarning\n          topicData={topicData}\n          onSave={onSave}\n          isModalOpen={warningModalOpen}\n          setIsModalOpen={setWarningModalOpen}\n        />\n      )}\n    </PageSection>\n  );\n};\n","import {\n  Button,\n  Divider,\n  Form,\n  FormSection,\n  PageGroup,\n  PageSection,\n  Sidebar,\n  SidebarContent,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport {\n  formattedRetentionSize,\n  formattedRetentionTime,\n} from \"../../KafkaTopics/types\";\nimport { TextWithLabelPopover } from \"../components\";\nimport { Cleanup } from \"../components/Cleanup\";\nimport { Flush } from \"../components/Flush\";\nimport { Message } from \"../components/Message\";\nimport { Replication } from \"../components/Replication\";\nimport { TopicAdvanceIndex } from \"../components/TopicAdvanceIndex\";\nimport { TopicAdvanceJumpLinks } from \"../components/TopicAdvanceJumpLinks\";\n\nexport type TopicViewDetailProps = {\n  topic: Topic;\n  deleteTopicHref: string;\n  updateTopicHref: string;\n};\n\nexport const TopicProperties: React.FunctionComponent<TopicViewDetailProps> = ({\n  topic,\n  deleteTopicHref,\n  updateTopicHref,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  return (\n    <PageSection\n      variant={\"light\"}\n      className={\"topic-properties\"}\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n    >\n      <Sidebar hasGutter>\n        <TopicAdvanceJumpLinks canHaveDelete={true} />\n        <SidebarContent>\n          <PageGroup\n            hasOverflowScroll={true}\n            aria-label={\"TODO\"}\n            id=\"topic-detail-view\"\n            className={\"pf-u-mb-4xl\"}\n          >\n            <PageSection padding={{ default: \"noPadding\" }}>\n              <Split>\n                <SplitItem isFilled>\n                  <Form id=\"topic-form\">\n                    <FormSection\n                      title={t(\"core_configuration\")}\n                      id=\"core-configuration\"\n                      titleElement={\"h2\"}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className=\"section-info\"\n                        >\n                          {t(\"core_config_info\")}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"topic-name\"\n                        btnAriaLabel={t(\"topic_name\")}\n                        fieldLabel={t(\"topic_name\")}\n                        fieldValue={topic.name}\n                        popoverBody={t(\"topic_name_description\")}\n                        popoverHeader={t(\"topic_name\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"partitions\"\n                        btnAriaLabel={t(\"partitions\")}\n                        fieldLabel={t(\"partitions\")}\n                        fieldValue={topic.partitions.length.toString()}\n                        popoverBody={t(\"partitions_description\")}\n                        popoverHeader={t(\"partitions\")}\n                      />\n\n                      {/*<TextWithLabelPopover\n                        fieldId=\"replicas\"\n                        btnAriaLabel={t(\"replicas\")}\n                        fieldLabel={t(\"replicas\")}\n                        fieldValue={}\n                        popoverBody={t(\"replicas_description\")}\n                        popoverHeader={t(\"replicas\")}\n                      />*/}\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-insync-replicas\"\n                        btnAriaLabel={t(\"min_insync_replicas\")}\n                        fieldLabel={t(\"min_insync_replicas\")}\n                        fieldValue={topic[\"min.insync.replicas\"].toString()}\n                        popoverBody={t(\"min_insync_replicas_description\")}\n                        popoverHeader={t(\"min_insync_replicas\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"retention-time\"\n                        btnAriaLabel={t(\"retention_time\")}\n                        fieldLabel={t(\"retention_time\")}\n                        fieldValue={formattedRetentionTime(\n                          topic[\"retention.ms\"].value\n                        )}\n                        popoverBody={t(\"retention_time_description\")}\n                        popoverHeader={t(\"retention_time\")}\n                        showUnlimited={true}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"retention-size\"\n                        btnAriaLabel={t(\"retention_size\")}\n                        fieldLabel={t(\"retention_size\")}\n                        fieldValue={formattedRetentionSize(\n                          topic[\"retention.bytes\"].value\n                        )}\n                        popoverHeader={t(\"retention_size\")}\n                        popoverBody={t(\"retention_size_description\")}\n                        showUnlimited={true}\n                      />\n                    </FormSection>\n                    <Message\n                      defaultMaximumMessageBytes={\n                        topic[\"max.message.bytes\"].value\n                      }\n                      defaultMessageTimestampType={\n                        topic[\"message.timestamp.type\"]\n                      }\n                      defaultMaxMessageTimestampDiff={\n                        topic[\"message.timestamp.difference.max.ms\"].value\n                      }\n                    />\n                    <FormSection title={t(\"log\")} id=\"log\" titleElement={\"h2\"}>\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t(\"log_section_info\")}\n                          <Text\n                            component={TextVariants.small}\n                            className=\"section-info-note\"\n                          >\n                            {t(\"log_section_info_note\")}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"cleanup-policy\"\n                        btnAriaLabel={t(\"cleanup_policy\")}\n                        fieldLabel={t(\"cleanup_policy\")}\n                        fieldValue={topic[\"cleanup.policy\"]}\n                        popoverBody={t(\"cleanup_policy_description\")}\n                        popoverHeader={t(\"cleanup_policy\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"delete-retention-time\"\n                        btnAriaLabel={t(\"delete_retention_time\")}\n                        fieldLabel={t(\"delete_retention_time\")}\n                        fieldValue={topic[\n                          \"delete.retention.ms\"\n                        ].value.toString()}\n                        popoverBody={t(\"delete_retention_time_description\")}\n                        popoverHeader={t(\"delete_retention_time\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-cleanable-ratio\"\n                        btnAriaLabel={t(\"min_cleanable_ratio\")}\n                        fieldLabel={t(\"min_cleanable_ratio\")}\n                        fieldValue={topic[\n                          \"min.cleanable.dirty.ratio\"\n                        ].toString()}\n                        popoverBody={t(\"min_cleanable_ratio_description\")}\n                        popoverHeader={t(\"min_cleanable_ratio\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-compaction-lag-time\"\n                        btnAriaLabel={t(\"min_compaction_lag_time\")}\n                        fieldLabel={t(\"min_compaction_lag_time\")}\n                        fieldValue={topic[\n                          \"min.compaction.lag.ms\"\n                        ].value.toString()}\n                        popoverBody={t(\"min_compaction_lag_time_description\")}\n                        popoverHeader={t(\"min_compaction_lag_time\")}\n                      />\n                    </FormSection>\n                    <Replication />\n                    <Cleanup\n                      defaultLogSegmentSize={topic[\"segment.bytes\"].value}\n                      defaultSegmentTime={topic[\"segment.ms\"].value}\n                      defaultSegmentJitterTime={\n                        topic[\"segment.jitter.ms\"].value\n                      }\n                      defaultFileDeleteDelay={\n                        topic[\"file.delete.delay.ms\"].value\n                      }\n                    />\n                    <TopicAdvanceIndex\n                      defaultIndexIntervalSize={\n                        topic[\"index.interval.bytes\"].value\n                      }\n                      defaultSegmentIndexSize={\n                        topic[\"segment.index.bytes\"].value\n                      }\n                    />\n                    <Flush\n                      defaultFlushIntervalMessages={\n                        topic[\"flush.messages\"].value\n                      }\n                      defaultFlushIntervalTime={topic[\"flush.ms\"].value}\n                    />\n                  </Form>\n\n                  <Divider className=\"pf-u-mt-2xl pf-u-mb-2xl\" />\n\n                  <TextContent>\n                    <Text component={TextVariants.h2} id=\"delete\">\n                      {t(\"delete_topic_irreversible\")}\n                    </Text>\n                    <Text component={TextVariants.p} className=\"section-info\">\n                      {t(\"delete_topic_info\")}\n                    </Text>\n                    <Button\n                      variant=\"danger\"\n                      data-testid=\"tabProperties-actionDelete\"\n                      component={(props) => (\n                        <Link {...props} to={deleteTopicHref}>\n                          {t(\"delete_topic\")}\n                        </Link>\n                      )}\n                    />\n                  </TextContent>\n                </SplitItem>\n                <SplitItem>\n                  <Button\n                    variant=\"primary\"\n                    data-testid=\"tabProperties-actionEdit\"\n                    component={(props) => (\n                      <Link {...props} to={updateTopicHref}>\n                        {t(\"edit_props\")}\n                      </Link>\n                    )}\n                  />\n                </SplitItem>\n              </Split>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { FC } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { OwnerAccount } from \"./types\";\n\nexport type SelectOwnerProps = {\n  isDisabled: boolean;\n  accounts: OwnerAccount[];\n  owner: string | undefined;\n  onChangeOwner: (owner: string | undefined) => void;\n};\n\nexport const SelectOwner: FC<SelectOwnerProps> = ({\n  isDisabled,\n  accounts,\n  owner,\n  onChangeOwner,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isExpanded: boolean) => {\n    setIsOpen(isExpanded);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, owner) => {\n    onChangeOwner(owner as string);\n    setIsOpen(false);\n  };\n\n  function selectOptions(filter = \"\") {\n    const filterRegExp = new RegExp(filter, \"i\");\n    const filteredAccounts =\n      filter !== \"\"\n        ? accounts.filter(\n            (account) =>\n              filterRegExp.test(account.displayName) ||\n              filterRegExp.test(account.id)\n          )\n        : accounts;\n    return filteredAccounts.map((account) => (\n      <SelectOption\n        key={account.id}\n        value={account.id}\n        description={account.displayName}\n      >\n        {account.id}\n      </SelectOption>\n    ));\n  }\n\n  return (\n    <Select\n      id=\"change-permission-owner-select\"\n      variant={SelectVariant.typeahead}\n      onToggle={onToggle}\n      isDisabled={isDisabled}\n      isOpen={isOpen}\n      placeholderText={t(\"select_user_account\")}\n      isCreatable={true}\n      createText={t(\"change_owner_create_text\")}\n      menuAppendTo=\"parent\"\n      maxHeight={400}\n      selections={owner}\n      onSelect={onSelect}\n      onFilter={(_, value) => selectOptions(value)}\n    >\n      {selectOptions()}\n    </Select>\n  );\n};\n","import {\n  Alert,\n  AlertVariant,\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  Skeleton,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { SelectOwner } from \"./SelectOwner\";\nimport type { ChangeOwnerErrorMessage, OwnerAccount } from \"./types\";\n\nexport type ChangeKafkaOwnerProps = {\n  currentOwner: string;\n  accounts: OwnerAccount[] | undefined;\n  savingState: \"idle\" | \"saving\" | ChangeOwnerErrorMessage;\n  onConfirm: (newOwner: string) => void;\n  onCancel: () => void;\n};\n\nexport const ChangeKafkaOwner: FunctionComponent<ChangeKafkaOwnerProps> = ({\n  currentOwner,\n  accounts,\n  savingState,\n  onConfirm,\n  onCancel,\n}) => {\n  const { t } = useTranslation([\"kafka\", \"common\"]);\n  const [account, setAccount] = useState<string | undefined>();\n  const submittedAccount = useRef<string>();\n\n  const isSaving = savingState === \"saving\";\n\n  const onConfirmOwner = useCallback(() => {\n    if (account) {\n      submittedAccount.current = account;\n      onConfirm(account);\n    }\n  }, [onConfirm, account]);\n\n  const renderAlert = () => {\n    switch (savingState) {\n      case \"invalid-user\":\n        return (\n          <Alert\n            variant={AlertVariant.danger}\n            aria-live=\"polite\"\n            isInline\n            title={t(\"new_owner_does_not_exist_title\")}\n          >\n            {t(\"new_owner_does_not_exist_message\", {\n              newOwner: submittedAccount.current,\n            })}\n          </Alert>\n        );\n      case \"unknown-error\":\n        return (\n          <Alert\n            variant={AlertVariant.danger}\n            aria-live=\"polite\"\n            isInline\n            title={t(\"can_not_change_owner_title\")}\n          >\n            {t(\"owner_transfer_failed_message\", {\n              name: currentOwner,\n            })}\n          </Alert>\n        );\n    }\n  };\n  return (\n    <Modal\n      id=\"change-owner-modal\"\n      title={t(\"change-owner-title\")}\n      isOpen={true}\n      onClose={onCancel}\n      variant={\"medium\"}\n      position=\"top\"\n      actions={[\n        <Button\n          id=\"confirm-button\"\n          key=\"changeowner\"\n          variant=\"primary\"\n          isDisabled={isSaving}\n          onClick={onConfirmOwner}\n        >\n          {t(\"change-owner-button\")}\n        </Button>,\n        <Button\n          id=\"cancel-button\"\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={onCancel}\n          isDisabled={isSaving}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={(e) => e?.preventDefault()}>\n        {renderAlert()}\n        <FormGroup fieldId=\"Current-owner-name\" label={t(\"current_owner\")}>\n          {currentOwner}\n        </FormGroup>\n        <FormGroup fieldId=\"New-owner-name\" label={t(\"new_owner\")}>\n          {accounts ? (\n            <SelectOwner\n              isDisabled={isSaving}\n              accounts={accounts}\n              owner={account}\n              onChangeOwner={setAccount}\n            />\n          ) : (\n            <Skeleton width={\"100%\"} />\n          )}\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans } from \"react-i18next\";\n\nexport type TermsAndConditionsDialogProps = {\n  isOpen: boolean;\n  disableFocusTrap?: boolean;\n  appendTo?: () => HTMLElement;\n  onViewTerms: () => void;\n  onCancel: () => void;\n};\n\nexport const TermsAndConditionsDialog: VoidFunctionComponent<\n  TermsAndConditionsDialogProps\n> = ({ isOpen, disableFocusTrap, appendTo, onViewTerms, onCancel }) => {\n  const { t } = useTranslation(\"terms-and-conditions\");\n\n  return (\n    <Modal\n      aria-label={t(\"title\")}\n      ouiaId={\"terms-and-conditions-dialog\"}\n      variant={ModalVariant.small}\n      isOpen={isOpen}\n      title={t(\"title\")}\n      onClose={onCancel}\n      appendTo={appendTo}\n      disableFocusTrap={disableFocusTrap}\n      actions={[\n        <Button\n          key={\"confirm__button\"}\n          variant={ButtonVariant.primary}\n          onClick={onViewTerms}\n          ouiaId={\"view_terms_and_conditions\"}\n        >\n          {t(\"view_button\")}\n        </Button>,\n        <Button\n          key={\"cancel__button\"}\n          variant={ButtonVariant.link}\n          onClick={onCancel}\n          ouiaId={\"cancel\"}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Trans\n        ns={\"terms-and-conditions\"}\n        i18nKey={\"body\"}\n        components={{\n          bold: <strong />,\n          br: <br />,\n        }}\n      />\n    </Modal>\n  );\n};\n","import {\n  Level,\n  LevelItem,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const LegacyControlPlaneHeader: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        hasShadowBottom={true}\n        type={\"tabs\"}\n      >\n        <Level>\n          <LevelItem>\n            <TextContent className={\"pf-u-p-md pf-u-p-lg-on-xl\"}>\n              <Text component=\"h1\">{t(\"kafka:title\")}</Text>\n              <p>{t(\"kafka:description\")}</p>\n            </TextContent>\n          </LevelItem>\n        </Level>\n      </PageSection>\n    </>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoDedicatedEntitlementProps = {\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoDedicatedEntitlement: VoidFunctionComponent<\n  EmptyStateNoDedicatedEntitlementProps\n> = ({ onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs} isFullHeight={true}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_dedicated_entitlement_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_dedicated_entitlement_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoDedicatedInstancesProps = {\n  onCreate: () => void;\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoDedicatedInstances: VoidFunctionComponent<\n  EmptyStateNoDedicatedInstancesProps\n> = ({ onCreate, onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs} isFullHeight={true}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_dedicated_instances_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_dedicated_instances_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button ouiaId=\"button-create\" variant=\"primary\" onClick={onCreate}>\n        {t(\"empty_state_no_dedicated_instances_create_instance\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoInstancesProps = {\n  onCreate: () => void;\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoInstances: VoidFunctionComponent<\n  EmptyStateNoInstancesProps\n> = ({ onCreate, onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs} isFullHeight={true}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_instances_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_instances_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button ouiaId=\"button-create\" variant=\"primary\" onClick={onCreate}>\n        {t(\"empty_state_no_instances_create_instance\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoResultsProps = {\n  onClearAllFilters: () => void;\n};\n\nexport const EmptyStateNoResults: VoidFunctionComponent<\n  EmptyStateNoResultsProps\n> = ({ onClearAllFilters }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs} isFullHeight={true}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_results_found_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_results_found_body\"}\n          components={[<a onClick={onClearAllFilters} />]}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n"],"names":["NewInstanceSegment","DeleteSegment","ChangeOwnerSegment","TermsAndConditionsSegment","ControlPlaneSpecialSegments","ControlPlaneRoutePath","ControlPlaneNewInstancePath","ControlPlaneTermsAndConditionsPath","ControlPlaneDeleteInstancePath","ControlPlaneChangeOwnerPath","DedicatedControlPlaneRouteRoot","DedicatedControlPlaneRoutePath","DedicatedControlPlaneNewInstanceRoutePath","DedicatedControlPlaneSelectedInstanceRoutePath","instanceId","DedicatedControlPlaneDeleteInstanceRoutePath","DedicatedControlPlaneChangeOwnerRoutePath","DedicatedControlPlaneRouteMatch","DedicatedControlPlaneTermsAndConditionsMatch","DedicatedControlPlaneNewInstanceMatch","DedicatedControlPlaneDeleteInstanceMatch","DedicatedControlPlaneChangeOwnerMatch","DedicatedControlPlaneClustersPath","DrawerContext","createContext","DrawerProvider","children","standardMatch","useRouteMatch","dedicatedMatch","match","Error","selectedInstance","params","id","includes","undefined","section","instance","useState","isExact","isExpanded","setIsExpanded","activeTab","setActiveTab","onClose","useRef","tokenEndPointUrl","toggleExpanded","useCallback","newValue","prev","current","useEffect","value","useMemo","Provider","onTabChange","tokenEndpointUrl","useDrawer","context","useContext","RedirectOnGateError","redirectUrl","key","useLocation","ErrorBoundary","resetKeys","fallbackRender","RedirectAndResetError","reset","Redirect","to","useUserControlGate","auth","getUser","user","username","identity","isOrgAdmin","is_org_admin","userData","suspense","useKafkaInstancesTable","instancesHref","instanceSelectedHref","instanceCreationHref","instanceDeletionHref","instanceChangeOwnerHref","history","useHistory","setActiveQuickStart","QuickStartContext","replace","labels","usePaginationSearchParams","page","perPage","setPagination","setPaginationQuery","resetPaginationQuery","namesChips","useURLSearchParamsChips","ownersChips","statusesChips","useSortableSearchParams","fields","isColumnSortable","sort","sortDirection","onClearAllFilters","clearChained","openDrawer","tab","onDetailsClick","onConnectionsClick","onCreate","push","onDelete","onChangeOwner","onQuickstartGuide","KafkaInstancesRoute","getUrlForInstance","data","name","chips","owner","status","direction","deployment","columns","instances","itemCount","count","names","owners","statuses","onPageChange","onSearchName","add","onRemoveNameChip","remove","onRemoveNameChips","clear","onSearchOwner","onRemoveOwnerChip","onRemoveOwnerChips","onSearchStatus","toggle","onRemoveStatusChip","onRemoveStatusChips","isRowSelected","onDetails","onConnection","onClickConnectionTabLink","onClickSupportLink","onInstanceLinkClick","canHaveInstanceLink","canOpenConnection","row","canChangeOwner","canDelete","isUserOwnerOrAdmin","CreateDedicatedKafkaInstanceRoute","callbacks","dedicatedQuotaQuery","dedicatedClustersQuery","dedicatedClusterSizesQuery","checkDedicatedQuota","onQuotaAvailable","onNoQuotaAvailable","onOutOfQuota","remainingDedicatedQuota","quota","fetchClusters","plan","onAvailable","onUnavailable","clusters","defaultCluster","length","getDedicatedSizes","cluster","clusterId","useCreateDedicatedKafkaCallbacks","createDedicatedKafkaInstance","qsContext","areTermsAccepted","onClickKafkaOverview","onClickQuickStart","onSuccess","onError","mutateAsync","onCancel","isModalOpen","onClickContactUs","onLearnHowToAddStreamingUnits","onLearnMoreAboutSizes","subscriptionOptionsHref","document","location","href","appendTo","getElementById","body","useControlPlaneGate","enterpriseMatch","useAlerts","dispatch","useDispatch","addAlert","variant","message","dismissable","description","addNotification","title","DeleteKafkaInstanceRoute","isDeleting","instanceName","TermsAndConditionsRoute","createHref","cancelHref","selfTermsReview","baselinedCreateHref","window","origin","pathname","baselinedCancelHref","termsUrl","onViewTerms","isOpen","ChangeOwnerRoute","accounts","updateInstance","onConfirm","newOwner","mutate","updates","savingState","isLoading","isError","error","type","currentOwner","map","a","displayName","ControlPlaneRoutes","Route","path","exact","Suspense","fallback","activeSection","ConnectedControlPlaneHeader","clustersHref","sectionsHref","DedicatedKafkaInstancesRoute","dedicatedClusters","standardInstances","didAlertForLegacyInstances","hasReadyClusters","filter","c","Link","Button","component","emptyStateNoData","DedicatedControlPlaneRoutes","DedicatedClustersRoute","dedicated","noEntitlement","refetchInterval","ams","account","useApi","useQuery","queryKey","queryFn","apiAccountsMgmtV1CurrentAccountGet","args","organization","apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet","Promise","reject","useStandardQuota","refetch","isSuccess","hasStandardQuota","isFetched","DedicatedClustersWithEntitlementRoute","DataPlaneRoutePath","root","DataPlaneTopicRoutePath","DataPlaneConsumerGroupRoutePath","DataPlaneTopicConsumerGroupRoutePath","DataPlanePermissionsRoutePath","useDataPlaneGate","DataPlaneHeaderConnected","url","dashboard","topics","consumer","permissions","settings","PermissionsRoute","managePermissionsHref","editPermissionsHref","acls","adminUrl","serviceAccounts","userAccounts","userAccount","email","principalType","serviceAccountList","serviceAccount","allAccounts","onDeleteSelected","rowIndex","rowToDelete","groups","acl","patternType","resource","permissionType","permission","principal","resourceName","operation","resourceType","_","onManagePermissionsActionItem","onManagePermission","onManagePermissions","onPerPageChange","TopicsRoute","topicChips","onDeleteTopic","topicName","onEditTopic","getUrlFortopic","onEdit","onSearchTopic","onCreateTopic","onRemoveTopicChip","onRemoveTopicChips","SettingsRoute","onSubmitReAuthentication","reauthenticationEnabled","reauthentication_enabled","request","DashboardRoute","hasUserAlreadyClosedAlert","setHasUserAlreadyClosedAlert","onAlertClose","queryInstance","queryKpisMetrics","queryInstanceMetrics","queryTopicMetrics","queryTopics","getMetricsKpi","kpis","topicPartitionsLimit","maxPartitions","getKafkaInstanceMetrics","interval","duration","selectedBroker","all","metrics","diskSpaceLimit","max_data_retention_size","bytes","connectionsLimit","connections","connectionRateLimit","connectionRate","getTopicsMetrics","selectedTopic","kafkaTopics","t","ConsumerGroupsRoute","instanceConsumerGroupsHref","consumerName","groupId","onDeletConsumerGroup","onViewPartition","onClickResetOffset","consumers","onSearchConsumer","onRemoveConsumerChip","onRemoveConsumerChips","onViewResetOffset","useTopicGate","topic","DataPlaneTopicHeaderConnected","instanceDetailsHref","instanceTopicsHref","tabsHref","messages","properties","schemas","instanceDetailHref","TopicConsumerGroupsRoute","TopicMessagesGroupsRoute","kafkaTopicMessagesFetchQuery","getMessages","partitions","TopicPropertiesRoute","deleteTopicHref","updateTopicHref","TopicSchemasRoute","chrome","processor2","entry","e","basename","srs","getToken","AuthContext","ConfigContext","apiBasePath","I18nProvider","lng","resources","en","common","srsTemporaryFixMe","debug","ScalprumComponent","appName","module","scope","ErrorComponent","processor","renderSchema","registry","version","registryId","useConsumerGroupGate","consumerGroup","consumerGroupId","ConsumerGroupDeleteRoute","onDeleteConsumer","state","ConsumerGroupResetOffsetRoute","onConfirmResetOffset","offset","customOffsetValue","Array","from","Set","onClickClose","ConsumerGroupViewPartitionRoute","viewPartitionConsumerGroupHref","consumerGroupByTopic","activeMembers","activeConsumers","partitionsWithLag","laggingPartitions","onSelectDeleteConsumerGroup","onSelectResetOffsetConsumerGroup","useTopicConsumerGroupGate","TopicConsumerGroupDeleteRoute","instanceTopicConsumerGroupsHref","TopicConsumerGroupResetOffsetRoute","TopicConsumerGroupViewPartitionRoute","viewTopicPartitionConsumerGroupHref","DeleteKafkaTopic","props","useTranslation","DeleteModal","confirmationValue","Trans","ns","i18nKey","components","values","TopicDeleteRoute","TopicEditPropertiesRoute","updateTopic","onSave","topicData","availablePartitionLimit","PermissionsEditRoute","consumerGroups","consumerGroupsList","topicsList","updatePermissions","onSaveAcls","aclPermission","deletedPermissions","aclData","aclToDelete","existingAcls","aclsForSelectedAccount","selectedAccount","kafkaName","PermissionsSelectAccountRoute","filteredAccounts","onNext","TopicCreateRoute","createTopic","availabilityZone","az","checkTopicName","onCloseCreateTopic","initialTopicValues","partition","kafkaPageLink","kafkaInstanceLink","DataPlaneRoutes","topicHref","instanceTopicConsumerGroupHref","permissionsModalHref","Switch","InvalidObject","OverviewRoute","Routes","render","memo","updateDocumentTitle","on","register","notifications","unregister","event","console","dir","navId","basePath","getPath","QuickstartLoader","loaded","setLoaded","quickStarts","AssetsContext","item","guides","showDrafts","onLoad","qs","set","init","errorDescriptionKey","middleware","useDedicatedClusterSizesFetchQuery","queryClient","api","fetchQuery","getEnterpriseClusterById","useDedicatedClustersFetchQuery","getEnterpriseOsdClusters","useDedicatedQuotaFetchQuery","skipCache","staleTime","Infinity","useConsumerGroup","getConsumerGroupById","enabled","Boolean","useConsumerGroups","getConsumerGroups","useDedicatedClusters","refetchOnWindowFocus","refetchOnReconnect","refetchOnMount","retry","kafkaRequestToKafkaInstanceEnhanched","marketplaceSubscriptions","developerPlanInstanceLimits","standardPlanInstanceLimits","enhancedInstance","billing","createdAt","created_at","Date","toISOString","egress","expiryDate","expires_at","ingress","messageSize","BigInt","instance_type","provider","cloud_provider","region","size","accepted","preparing","provisioning","ready","failed","deprovision","deleting","storage","updatedAt","updated_at","cluster_id","bootstrapUrl","bootstrap_server_host","admin_api_server_url","multi_az","marketplaceForBilling","find","ms","subscriptions","s","billing_cloud_account_id","marketplace","billing_model","subscription","warn","thisInstanceLimits","l","size_id","APIErrorCodes","kafkasFleet","getStandardQuotaQuery","useStandardQuotaFetchQuery","getProvidersInfo","kms","getCloudProviders","getCloudProviderRegions","getProviderRegionsSizes","getInstanceTypesByCloudProviderAndRegion","useProviderRegionSizesFetchQuery","JSON","stringify","standardQuota","providersInfo","providerInfo","providers","p","standardPlanLimitsQuery","developerPlanLimitsQuery","standardPlanLimits","developerPlanLimits","useKafka","dataMapper","getKafkaById","useKafkas","clusterIds","getKafkas","res","forEach","i","setQueryData","useTopic","getTopic","useTopics","getTopics","useUserAccounts","getUserAccounts","listPrincipals","useAcls","getAcls","useServiceAccounts","getServiceAccounts","useUser","useSSOProvider","fetch","json","token_url","useSelfTermsReview","apiAuthorizationsV1SelfTermsReviewPost","useKafkaFetchQuery","useKafkaKpisFetchQuery","getMetricsByInstantQuery","useKafkaMetricsFetchQuery","getMetricsByRangeQuery","useMessagesFetchQuery","records","consumeRecords","useTopicsFetchQuery","useTopicsMetricsFetchQuery","useCreateDedicatedKafkaMutation","kafkaRequest","sizeId","createKafka","isServiceApiError","response","DUPLICATE_INSTANCE_NAME","INTERNAL_CAPACITY_ERROR","INSUFFICIENT_QUOTA","invalidateQueries","UNAUTHORIZED_USER","TRIAL_USED","FAILED_TO_CHECK_QUOTA","OWNER_DOES_NOT_EXIST","useDeleteKafkaMutation","deleteKafkaById","code","useDeleteTopicMutation","deleteTopic","useUpdateKafkaMutation","updateKafkaById","getErrorCode","reason","AxiosError","useDeleteConsumerGroupMutation","deleteConsumerGroupById","useResetConsumerGroupMutation","resetConsumerGroupOffset","useDeletePermissionsMutation","deleteAcls","useUpdatePermissionsMutation","createAcl","useCreateTopicMutation","useUpdateTopicMutation","KafkaInstancesSortableColumns","KafkaTopicsSortableColumns","Object","TopicOrderKey","KafkaConsumerGroupSortableColumns","ConsumerGroupOrderKey","ReactQueryDevtoolsProduction","lazy","then","d","default","ReactQueryDevtools","ApiContext","ApiProvider","showDevTools","client","useApiConfiguration","consumerGroupTransformer","stateMapping","lag","memberId","logEndOffset","unassignedPartitions","DEAD","EMPTY","STABLE","UNKNOWN","COMPLETING_REBALANCE","PREPARING_REBALANCE","fetchConsumerGroup","fetchConsumerGroups","items","total","dedicatedClusterTransformer","requiresPrivateNetwork","access_kafkas_via_private_network","cloudProvider","cloudRegion","fetchDedicatedClusters","MissingDedicatedEntitlement","isStandardQuota","q","related_resources","r","isMarketplaceQuota","fetchDedicatedQuota","organizationId","quotaResponse","statusText","dedicatedQuotas","resource_name","product","dedicatedQuota","hasDedicatedQuota","allowed","consumed","apiSizeToComponentSize","isDisabled","apiSize","display_name","quota_consumed","ingress_throughput_per_sec","egress_throughput_per_sec","Math","round","total_max_connections","max_connection_attempts_per_sec","max_partitions","max_message_size","maturity_status","trialDurationHours","lifespan_seconds","fetchDedicatedClusterSizes","supported_instance_types","instance_types","flatMap","sizes","fetchKafkaKpis","topicPartitions","metric","fetchKafkaMetrics","safeMetrics","m","broker_id","partition_id","persistentvolumeclaim","brokers","usedDiskSpaceMetrics","connectionAttemptRateMetrics","clientConnectionsMetrics","bytesPerPartitionMetrics","partitionKey","addAggregatedValuesTo","timestamp","addAggregateBrokerBytes","valuesToQuery","field","comparison","join","v","trim","uiColumnMapping","fetchKafkas","search","filtersToSearch","toString","resolve","rawInstances","fetchMessages","limit","headers","fetchOrganization","fetchProviderRegionSizes","instanceType","regions","regionInfo","availableSizes","capacity","available_sizes","bind","fetchProvidersWithRegions","allProviders","fetchProviderRegions","firstProvider","defaultProvider","some","max_capacity_reached","fetchStandardQuota","standardQuotas","prepaidQuota","marketplaceQuotas","hasTrialQuota","remainingPrepaidQuota","remainingMarketplaceQuota","reduce","agg","unaggregatedSubscriptions","cloud_accounts","subscriptionMarketplaces","cloud_provider_id","cloud_account_id","fetchTopic","topicTransformer","fetchTopics","fetchTopicsMetrics","filteredMetrics","bytesIncoming","bytesOutgoing","bytesPerPartition","incomingMessageRate","addAggregatedTotalBytesTo","metricsTopics","fetchUserAccounts","fullObject","first_name","last_name","fetchPermissions","fetchServiceAccounts","fetchSelfTermsReview","event_code","site_code","terms_required","terms_available","redirect_url","URL","searchParams","masQueries","_root","entity","standardAvailable","subentity","dedicatedAvailable","developerAvailability","standardAvailability","dedicatedQueries","clusterSizes","kafkaQueries","list","details","topicMessages","kpi","providerQueries","limits","standard","developer","developerDefaults","preallocate","standardDefaults","topicTransformerFactory","cm","fromEntries","config","configValueToMilliseconds","configValueToBytes","configValueToBoolean","configValueToNumber","defaultIfEmpty","defaultIfError","parseInt","parse","convertToTopicSettings","inputObj","keyValuePairs","configEntries","numPartitions","accessToken","DefaultApi","Configuration","token","PrincipalApi","SecurityApi","AppServicesApi","TopicsApi","GroupsApi","AclsApi","RecordsApi","EnterpriseDataplaneClustersApi","REACT_QUERY_DEVTOOLS","METRICS_LAG_ALERT","isDevToolsEnabled","localStorage","getItem","metricsIsLagAlertsDismissed","metricsDismissLagAlerts","setItem","CreatingStatuses","ReadyStatuses","DegradedStatuses","SuspendingStatuses","SuspendedStatuses","DeletingStatuses","ResumingStatuses","SimplifiedStatuses","creating","degraded","suspended","resuming","suspending","ConsumerGroupPopover","Popover","headerContent","bodyContent","OutlinedQuestionCircleIcon","ConsumerGroupStateLabel","ConsumerGroupByKafka","columnNames","consumer_id","current_offset","log_end_offset","offset_lag","Stack","hasGutter","DescriptionList","columnModifier","lg","className","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","TableComposable","TableVariant","Thead","noWrap","Tr","Th","width","Tbody","Td","dataLabel","ConsumerGroupByTopic","ConsumerGroupDetails","ConsumerGroupEmptyState","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","CubesIcon","Title","headingLevel","TitleSizes","EmptyStateBody","OffsetSelect","onChange","setIsOpen","offsetValueOption","absolute","latest","earliest","Select","toggleAriaLabel","onToggle","onSelect","selection","SelectVariant","placeholderText","selections","menuAppendTo","entries","label","SelectOption","TopicSelect","index","ConsumerGroupResetOffset","disableFocusTrap","setSelectedTopic","selectedOffset","setSelectedOffset","setcustomOffsetValue","isResetAccepted","setIsResetAccepted","selectedConsumer","setSelectedConsumer","isDisconnected","consumerList","isResetOffsetDisabled","tableColumns","clientId","new_offset","areAllConsumerSelected","isConsumerSelected","onResetOffset","Modal","ModalVariant","showClose","position","actions","onClick","StackItem","Form","isHorizontal","FormGroup","fieldId","TextInput","readOnlyVariant","Alert","isInline","select","_event","isSelecting","onSelectAllConsumer","isSelected","String","Checkbox","isChecked","DeleteConsumerGroup","isConsumerConnected","Text","ConsumerGroupDrawer","dropdownItems","DropdownItem","panelContent","DrawerPanelContent","widths","DrawerHead","TextContent","TextVariants","DrawerActions","Dropdown","KebabToggle","isPlain","DropdownPosition","DrawerCloseButton","DrawerPanelBody","Drawer","DrawerContent","DrawerContentBody","useKafkaLabels","statusesSimplified","aws","gcp","azure","providerRegions","useTopicLabels","useConsumerGroupLabels","XStateInspector","useXStateInspector","Columns","ConsumerGroups","isFiltered","PageSection","isFilled","hasOverflowScroll","TableView","tableOuiaId","ariaLabel","renderHeader","column","info","popover","popoverProps","renderCell","renderActions","ActionsColumn","filters","onSearch","onRemoveChip","onRemoveGroup","validate","test","errorMessage","emptyStateNoResults","EmptyStateNoResults","ControlPlaneHeader","PageSectionVariants","padding","hasShadowBottom","Level","LevelItem","Nav","NavList","NavItem","style","borderTop","ouiaId","isActive","Divider","ExternalLink","testId","onProviderChange","selectedProvider","defaultRegion","capabilities","form","creationError","tsTypes","predictableActionArguments","schema","events","services","initial","states","verifyAvailability","always","cond","target","overQuota","tags","instanceUnavailable","regionsUnavailable","configuring","unsubmitted","submitting","submitted","create","invalid","valid","fieldInvalid","submit","saving","createSuccess","createError","saved","empty","nameChange","providerChange","regionChange","idle","disabled","waitingForQuota","loading","invoke","src","onDone","sizeChange","billingChange","prepaidOnly","singleSubscription","onlySubscriptions","selectSubscription","prepaidAndSubscriptions","prepaid","selectPrepaid","setInitialContext","availableProviders","setName","setProvider","setRegion","setSize","setSizes","smallestSize","b","resetCreationErrorMessage","_context","setCreationError","triggerSave","triggerSubmit","triggerBillingChange","setBillingToPrepaid","setBillingToSubscription","unsetSubscription","guards","isOverQuota","instanceAvailability","isInstanceUnavailable","isRegionsUnavailable","nameIsEmpty","nameIsValid","providerIsValid","selectedProviderInfo","regionIsValid","noProviderOrRegion","noSizes","emptySizes","sizeIsDisabled","billingRequiredButNotSelected","meta","hasTag","sizeIsOverQuota","availableQuota","didProviderChange","didRegionChange","didSizeChange","onlyPrepaid","matchesSelectedProviderOrRHMarketplaceAndHasQuota","hasPrepaidQuota","noSelectedProvider","trialUsed","trialUnavailable","trial","isTrialUsed","isTrialUnavailable","noProviderAndRegion","save","complete","setDeveloperAvailable","setDeveloperUnavailable","setDeveloperUsed","setStandardAvailable","setStandardOutOfQuota","setStandardUnavailable","setProviders","setProvidersOrRegionsUnavailable","setCapabilities","notifyCreateErrorToStandardPlan","notifyCreateErrorToTrialPlan","LogoAWS","LogoAzure","LogoGCP","LogoRedhat","AWSLogo","alt","height","AzureLogo","GCPLogo","CloudProvidersTiles","validated","Skeleton","screenreaderText","role","Flex","justifyContent","spacer","spaceItems","providerDisabled","FlexItem","grow","Tile","isStacked","FormSelect","FormSelectOption","CloudRegionSelect","isSizeUnavailable","makeRegionOptions","toggleId","prevState","options","validity","enabledZone","trigger","helperTextInvalid","ToggleGroup","Tooltip","content","ToggleGroupItem","text","buttonId","isValid","isRequired","allRegionsUnavailable","every","disableControl","someRegionsUnavailable","validation","placeholder","HelperText","HelperTextItem","hasIcon","helperText","autoFocus","FieldSizeHelperText","remainingQuota","isPreview","isUnavailable","AlertVariant","FieldSizeHelperTextOverQuota","ButtonVariant","FieldSizeHelperTextTrial","isLoadingError","helperTextTrial","FormGroupWithPopover","labelHead","fieldLabel","labelBody","buttonAriaLabel","Grid","sm","GridItem","fontSize","valueIndex","findIndex","steps","helperTextOverQuota","Slider","max","showTicks","customSteps","onClickContactUS","AlertGroup","isTrial","trialDurationInHours","streamingUnits","Card","isFlat","CardTitle","CardBody","isCompact","ClockIcon","color","isSmall","customIcon","Spinner","ModalAlertsDedicatedPlan","alignItems","flex","onSubmit","DisabledFieldInstanceName","DisabledFieldCloudProvider","DisabledFieldCloudRegion","DisabledFieldAZ","DisabledFieldSize","DedicatedPlanMachine","clusterUnavailable","clusterChange","setCluster","isClusterUnavailable","clusterIsValid","selectedCluster","availableClusters","noCluster","didClusterChange","CreateDedicatedKafkaInstanceMachine","setDedicatedAvailable","setDedicatedOutOfQuota","setDedicatedUnavailable","setClusters","setClustersUnavailable","notifyCreateErrorToDedicatedPlan","CreateDedicatedKafkaInstanceContext","CreateDedicatedKafkaInstanceProvider","service","checkDedicatedQuotaCb","fetchClustersCb","getDedicatedSizesCb","withConfig","send","createInstance","dedicatedPlan","withContext","getSizes","makeCreateDedicatedKafkaInstanceMachine","devTools","useCreateDedicatedKafkaInstance","dedicatedPlanMachine","isSystemUnavailable","isAvailable","isSaving","isSaved","done","useDedicatedPlanMachine","setBillingPrepaid","isBlocked","isFormInvalid","isNameTaken","isConfigurable","isLoadingSizes","isBillingPrepaidAvailable","selectedSize","isBillingPrepaidOverQuota","isFormEnabled","isNameInvalid","isNameEmpty","isNameError","isSizeDisabled","isSizeOverQuota","isSizeLoadingError","isSizeAvailable","isSizeError","isClusterError","isBillingError","DedicatedClusterTiles","hasSelectableInput","isSelectableRaised","isDisabledRaised","onSelectableInputChange","CardFooter","OkIcon","ErrorCircleOIcon","FieldDedicatedCluster","DedicatedInstanceForm","formId","preventDefault","CreateDedicatedKafkaInstance","ConnectedCreateDedicatedKafkaInstance","FORM_ID","footer","OutlinedClockIcon","spinnerAriaValueText","KafkaInstanceActions","customChild","DropdownGroup","tooltipProps","tooltip","pointerEvents","cursor","isSeparator","DataPlaneHeader","actionsProps","Breadcrumb","BreadcrumbItem","DataPlaneTopicHeader","EmptyStateNoDedicatedClusters","PlusCircleIcon","DedicatedClusters","toolbarBreakpoint","DeleteKafkaInstance","kafka","it","delete","DetailsTabAlert","hoursLeft","differenceInHours","now","time","FormatDate","date","format","KafkaDetailsTab","kafkaVersion","renderTextListItem","TextListItem","TextListItemVariants","contentName","TextList","TextListVariants","SuspendedConnection","ExclamationTriangleIcon","KafkaConnectionTabP2","isKafkaSuspended","isKafkaPending","externalServer","linkToServiceAccount","linkToAccessTab","adminAPIUrl","kafkaFleetManagerUrl","ClipboardCopy","textAriaLabel","isReadOnly","startsWith","ExpandableSection","toggleContent","HelpIcon","Label","SampleCodeSnippet","expandableCode","codeBlockCode","codeSnippet","copied","setCopied","copyCode","CodeBlockAction","ClipboardCopyButton","textId","exitDelay","maxWidth","navigator","clipboard","writeText","catch","CodeBlock","CodeBlockCode","isDetached","contentId","ExpandableSectionToggle","javaConfigCodeBlock","kafkaBootstrapUrl","pythonConfigCodeBlock","pythonConfigExpandabledBlock","quarkusConfigExpandableBlock","springBootConfigCodeBlock","KafkaSampleCode","clientSelect","setClientSelect","clientProvider","java","python","quarkus","springboot","client_type","KafkaInstanceDrawer","KafkaInstanceDrawerPanel","handleSelect","Tabs","activeKey","Tab","eventKey","TabTitleText","parseISO","getExternalServer","getAdminServerUrl","showCreateServiceAccountModal","endsWith","StatusLabel","forwardRef","ref","showWarning","showError","withPopover","buttonVariant","Split","SplitItem","CheckCircleIcon","PopoverStatusOrder","KafkaToPopoverMapping","StatusProgressStepper","currentStatus","currentStep","getVariant","ProgressStepper","isVertical","ProgressStep","titleId","isCurrent","StatusPopoverContent","StatusPopover","initialOpen","reference","isVisible","setIsVisible","handleClickConnectionTabLink","handleClickSupportLink","shouldOpen","shouldClose","enableFlip","SuspendedPopover","alertSeverityVariant","headerIcon","KafkaInstanceStatus","warningAfterMinutes","errorAfterMinutes","popoverStatus","alert","setAlert","labelRef","checkCreatedAt","elapsed","differenceInMinutes","useInterval","StandardColumns","DedicatedColumns","KafkaInstances","timeCreatedDate","instanceLinkEnable","isAriaDisabled","changeOwnerEnabled","deleteEnabled","openConnectionEnabled","onRowClick","isRowDeleted","isPrimary","DateTimePicker","timeSelected","setIsTimeSelected","InputGroup","DatePicker","formatInTimeZone","newDate","formatISO","TimePicker","hour","minute","__","setHours","setMinutes","FilterGroup","epoch","onOffsetChange","onTimestampChange","onEpochChange","onLatest","currentCategory","setCurrentCategory","ToolbarItem","DropdownToggle","DropdownSeparator","newOffset","Number","isInteger","LimitSelector","InputGroupText","hidden","idx","isSameMessage","m1","m2","beautifyUnknownValue","RetentionTimeUnits","RetentionSizeUnits","NoDataCell","columnLabel","MessageDetails","defaultTab","isResizable","minSize","MessageDetailsBody","messageKey","defaultActiveKey","isCode","random","NoDataEmptyState","onRefresh","NoResultsEmptyState","onReset","SearchIcon","OffsetRange","min","PartitionSelector","handleChange","valueAsNum","allPartitions","fill","makeOptions","slice","hiddenOptionsCount","handleFilter","typeAheadAriaLabel","maxHeight","onFilter","isInputValuePersisted","onClear","InputGroupTextVariant","UnknownValuePreview","truncateAt","shouldTruncate","substring","truncate","preview","truncated","stopPropagation","MessageBrowserMachine","selectedMessage","initialLoading","fetchSuccess","fetchFail","verifyMessages","noData","refresh","pristine","dirty","shouldSearch","setPartition","setEpoch","setTimestamp","setOffset","setLatest","setLimit","selectMessage","deselectMessage","refreshing","setMessages","offsetMin","offsetMax","lastUpdated","noMessages","selectedMessageNotAvailable","areFiltersChanged","columnWidths","KafkaMessageBrowser","useMachine","KafkaMessageBrowserConnected","isFirstLoad","matches","isNoData","isRefreshing","requiresSearch","filterOffset","filterEpoch","filterTimestamp","setDefaultTab","columnLabels","Loading","OuterScrollContainer","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","FilterIcon","breakpoint","ToolbarGroup","RefreshButton","alignment","InnerScrollContainer","ResponsiveTable","expectedLength","colIndex","keys","KafkaInstanceCapacityTable","firstStreamingUnit","secondStreamingUnit","table","MarketingPageHero","tagLine","description2","heroImage","heroImageSize","heroImageCanRepeat","heroImagePositionY","cta","MarketingPageSection","isWidthLimited","KafkaPageV3","CardHeader","CardHeaderMain","bold","alignSelf","xl","orientation","EmptyStateNoTopic","PrincipalType","unitsToBytes","BYTE","KIBIBYTE","MEBIBYTE","GIBIBYTE","TEBIBYTE","unitsToMilliSecond","MILLISECOND","SECOND","MINUTE","HOUR","DAY","millisecondsToTime","days","unit","hours","minutes","seconds","formattedRetentionTime","formattedRetentionSize","bytesToMemorySize","tebibytes","gibibytes","mebibytes","kibibytes","KafkaTopics","DurationOptions","createEmptyManageAccessAcl","PermissionsDropdown","onAddPermission","onShortcutConsumeTopic","onShortcutProduceTopic","onShortcutManageAccess","menuRef","handleMenuKeys","contains","handleClickOutside","addEventListener","removeEventListener","onToggleClick","open","ev","setTimeout","firstElement","querySelector","focus","menu","Menu","itemId","MenuContent","MenuList","MenuGroup","MenuItem","splitButtonItems","DropdownToggleAction","splitButtonVariant","Popper","popper","popperMatchesTriggerWidth","labelColor","DisplayResourceName","PatternType","ResourceCell","PermissionOperationCell","ALLOW","DENY","operations","ALL","READ","WRITE","CREATE","DELETE","ALTER","DESCRIBE","DESCRIBE_CONFIGS","ALTER_CONFIGS","LabelGroup","numLabels","isArray","PrincipalCell","isDeleteEnabled","isAllAccounts","onRemoveAcl","isReviewTable","ServiceAccount","tabIndex","split","InfoCircleIcon","RemoveButton","PermissionsTableEmptyState","openManagePermissions","PermissionsTable","checkedRows","setCheckedRows","kebabActions","onCheck","isRowChecked","SelectAccount","isDirty","setIsDirty","setSelectedAccount","useLayoutEffect","noServiceAccounts","isNoResultsOption","noUserAccounts","filterValue","toLowerCase","serviceAccountOptions","localeCompare","userAccountOperations","UserAccount","SelectGroup","ValidatedOptions","onEscapePress","labelIcon","noVerticalAlign","newState","isCreatable","createText","isGrouped","onCreateOption","ResourceName","onChangeValue","resourcePrefixRule","onFetchOptions","setIsNameValid","AsyncTypeaheadSelect","required","onValidationCheck","validationMessage","resourcePreixCondition","regExp","RegExp","validationCheck","ResourceOperation","resourceTypeOptions","ResourcePermission","resourcePermissionOptions","allow","deny","ResourcePrefixRule","resourcePrefixRuleOptions","Is","ResourceType","ShortcutsTableHead","KafkaInstanceManualPermissions","resourceOperation","resourcePermission","onChangeResourceOperation","onChangeResourcePermission","onChangeResourceType","AssignPermissionsManual","resourcePrefix","onChangeResourcePrefix","onChangeResource","onFetchResourceNameOptions","multipleShorctutPermissions","ProduceTopicRow","prefixRuleValue","resourceNameValue","onChangeResourceName","isConsumeTopicShortcut","borderBottom","colSpan","ConsumeTopicShortcut","onChangeConsumerResourceName","topicPrefixRuleValue","topicResourceNameValue","consumerPrefixRuleValue","consumerResourceNameValue","onChangeConsumerResourcePrefixRule","onChangeTopicResourceName","onChangeTopicResourcePrefixRule","onFetchConsumerResourceNameOptions","onFetchTopicResourceNameOptions","ManageAccessShortcut","ProduceTopicShortcut","AssignPermissions","topicNameOptions","consumerGroupNameOptions","onAddManualPermissions","onAddProduceTopicShortcut","onConsumeTopicShortcut","onManageAccessShortcut","addedAcls","setAddedAcls","aclTemplate","resourceValues","consumerResourcePrefixRule","topicResourcePrefixRule","consumerResourceName","topicResourceName","ActionList","ActionListItem","paddingTop","PreCancelModal","closeModal","resumeEditing","titleIconVariant","ReviewPermissionsTable","selectedAccountId","ViewAccountDetails","accountId","transformResourceType","AclResourceType","transformResourceOperation","EditPermissions","escapeClosesModal","isExpandedExistingPermissionSection","setIsExpandedExistingPermissionSection","isAclDeleted","setIsAclDeleted","isExpandedAssignPermissionsSection","setIsExpandedAssignPermissionsSection","isNameValid","canSave","setCanSave","setSubmitted","isOpenPreCancelModal","setIsOpenPreCancelModal","setExistingAcls","newAcls","setNewAcls","deletedAcls","setDeletedAcls","checkValidation","aclsToSave","accountDisplayName","isAclValid","transformAclData","selectedAccountName","transformPermissions","isIndented","Badge","isRead","updateExistingAcls","toggleText","EmptyStateInitialLoading","EmptyStateMetricsUnavailable","TachometerAltIcon","MetricsLayout","metricsLagAlert","topicsKpi","topicPartitionsKpi","consumerGroupKpi","diskSpaceMetrics","topicMetrics","CardBodyLoading","Bullseye","isSVG","timeIntervalsMapping","Last5minutes","ticks","showDate","Last15minutes","Last30minutes","Last1hour","Last3hours","Last6hours","Last12hours","Last24hours","Last2days","Last7days","chartHeight","chartPadding","bottom","left","right","top","ChartSkeletonLoader","useChartWidth","containerRef","setWidth","handleResize","clientWidth","formatBytes","units","shouldShowDate","timeDuration","dateToChartValue","fromUnixTime","timestampsToTicks","timestamps","allTimestamps","mostRecentTs","sub","getTime","ChartLinearWithOptionalLimit","chartName","xLabel","yLabel","usageLimit","formatValue","emptyState","itemsPerRow","lineLabel","limitLabel","legendData","symbol","chart_color_black_500","chart_color_blue_300","areaColor","softLimitColor","chartData","area","softLimit","x","y","tickValues","getChartData","hasMetrics","Chart","ariaTitle","containerComponent","ChartVoronoiContainer","datum","constrainToVisibleArea","legendPosition","legendComponent","ChartLegend","themeColor","ChartTheme","legendAllowWrap","ChartAxis","C","tickFormat","dependentAxis","ChartGroup","ChartArea","ChartThreshold","stroke","colors","chart_color_cyan_300","ChartLogSizePerPartition","selectedPartition","top50Partition","aValue","sum","val","dataMap","dataMapAValues","dataMapBValues","aValueSum","marginTop","ChartLine","ChartPopover","ChartTotalBytes","incomingTopicsData","outgoingTopicsData","incomingTopic","outgoingTopic","incomingTopicName","outgoingTopicName","incomingLine","metricsToLine","line","outgoingLine","chart_color_green_300","getBytesChartData","tickCount","EmptyStateNoMetricsData","EmptyStateNoMetricsDataForSelection","EmptyStateNoTopics","WrenchIcon","EmptyStateNoTopicSelected","FilterByPartition","partitionValue","onSetSelectedPartition","ispartitionSelectOpen","setIspartitionSelectOpen","partitionSelectOption","Top10","Top20","DurationOptionsMap","FilterByTime","keyText","disableToolbar","onDurationChange","isTimeSelectOpen","setIsTimeSelectOpen","ariaId","mapping","timeOptions","md","FilterByTopic","topicList","onSetSelectedTopic","isTopicSelectOpen","setIsTopicSelectOpen","selectKey","setSelectKey","allTopicsLabel","topicOptions","textInput","filteredTopics","indexOf","hasInlineFilter","ToolbarRefresh","ToolbarTopicsMetrics","onSetTimeDuration","CardTopicsMetrics","backendUnavailable","isInitialLoading","isJustCreated","onSelectedTopic","onSelectedPartition","noTopics","selectedTopicNotInList","chartEmptyState","TotalBytesTitle","IncomingMessageRate","PartitionSizeTitle","FilterByBroker","brokerList","onSetSelectedBroker","isBrokerSelectOpen","setIsBrokerSelectOpen","broker","brokerOptions","ToolbarKafkaInstanceMetric","BrokerToggle","ChartPartitionLogSizePerBroker","ChartUsedDiskSpace","brokerToggle","CardKafkaInstanceMetrics","usedDiskMetrics","onSelectedBroker","selectToggle","onSelectedToggle","bytesPerPartitions","ChartTitle","CardKpi","isFullHeight","shape","apiState","failure","after","KafkaInstanceMetricsMachine","fetchFailures","selectedToggle","callApi","criticalFail","justCreated","withResponse","selectDuration","selectBroker","selectPartition","setFetchTimestamp","setMetrics","incrementRetries","resetRetries","setDuration","setBroker","setToggle","canRetryFetching","TopicsMetricsMachine","selectTopic","setTopic","MetricsKpiMachine","KafkaInstanceMetricsContext","KafkaInstanceMetricsProvider","callback","results","MetricsKpiContext","MetricsKpiProvider","TopicsMetricsContext","TopicsMetricsProvider","useKafkaInstanceMetrics","isFailed","onBrokerChange","onSelectToggle","onSelectPartition","useTopicsMetrics","onTopicChange","PartitionCard","ExclamationCircleIcon","isExpandable","MetricsLagAlert","isClosed","actionClose","AlertActionCloseButton","Metrics","ConnectedMetrics","kafkaInstanceMetrics","topicsMetrics","metricsKpi","useMetricsKpi","ConnectedKafkaInstanceMetrics","ConnectedTopicsMetrics","Settings","connectionStatus","setConnectionStatus","setIsModalOpen","handleReAuthentication","reAuthValue","reauthentication","flexWrap","checked","retentionTimeSelectOptions","isPlaceholder","retentionSizeSelectOptions","CreateTopicHead","showAllOptions","onShowAllOptions","mainBreadcrumbs","labelOff","PartitionLimitWarning","handleModalToggle","retentionTimeTransformer","TextWithLabelPopover","btnAriaLabel","fieldValue","popoverBody","popoverHeader","displayText","Cleanup","defaultFileDeleteDelay","defaultLogSegmentSize","defaultSegmentJitterTime","defaultSegmentTime","FormSection","titleElement","gibibyte","milliseconds","CustomRetentionMessage","customTimeValue","setCustomTimeValue","isRetentionTimeSelectOpen","setIsRetentionTimeSelectOpen","onRetentionTimeToggle","input","inputValue","CustomRetentionSize","customRetentionSizeValue","setCustomRetentionSizeValue","isRetentionSizeSelectOpen","setIsRetentionSizeSelectOpen","onRetentionSizeToggle","useValidateTopic","validateName","legalNameChars","CoreConfiguration","isCreate","setTopicData","invalidText","setInvalidText","setTopicValidated","topicValidated","radioTimeSelectValue","setRadioTimeSelectValue","radioSizeSelectValue","setRadioSizeSelectValue","initialPartitions","handleRetentionMessageTime","handleRetentionMessageSize","retentionTimeInput","retentionSizeInput","NumberInput","inputName","updatedPartitions","onPlus","currentPartitions","onMinus","newPartitions","plusBtnProps","minusBtnProps","Radio","Flush","defaultFlushIntervalMessages","defaultFlushIntervalTime","Log","defaultDeleteRetentionTime","defaultMinCleanbleRatio","defaultMinimumCompactionLagTime","cleanupPolicyOptions","DropdownWithToggle","onSelectOption","isLabelAndValueNotSame","Message","defaultMaximumMessageBytes","defaultMessageTimestampType","defaultMaxMessageTimestampDiff","Replication","TopicAdvanceIndex","defaultIndexIntervalSize","defaultSegmentIndexSize","TopicAdvanceJumpLinks","canHaveDelete","SidebarPanel","JumpLinks","scrollableSelector","JumpLinksItem","TopicAdvancePage","handleCancel","actionText","setIsLoading","warning","setWarning","Sidebar","SidebarContent","PageGroup","ActionGroup","retentionSizeTransformer","CreateTopicWizard","isSwitchChecked","initialFieldsValue","topicNameValidated","setTopicNameValidated","warningModalOpen","setWarningModalOpen","closeWizard","enableNext","StepTopicName","newTopicData","onTopicNameChange","canJumpTo","StepPartitions","onPartitionsChange","StepMessageRetention","StepReplicas","minInSyncReplica","nextButtonText","onTransform","tranformedValueInMilliseconds","tranformedValueInBytes","transformedTopic","onSaveTopic","PageSectionTypes","Wizard","navAriaLabel","mainAriaLabel","WizardCustomFooter","onValidate","retentionTime","newPartitionCount","widthChars","onBlur","WizardFooter","WizardContextConsumer","activeStep","onBack","CreateTopic","setIsSwitchChecked","EditTopicProperties","millisecondsToTimeValue","bytesToSizeValue","TopicProperties","showUnlimited","SelectOwner","selectOptions","filterRegExp","ChangeKafkaOwner","setAccount","submittedAccount","onConfirmOwner","renderAlert","TermsAndConditionsDialog","br","LegacyControlPlaneHeader","EmptyStateNoDedicatedEntitlement","EmptyStateNoDedicatedInstances","EmptyStateNoInstances"],"sourceRoot":""}