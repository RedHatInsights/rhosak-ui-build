{"version":3,"file":"js/src_AppEntry_tsx-webpack_sharing_consume_default_scalprum_react-core_scalprum_react-core.js","mappings":"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","sources":["webpack:///./src/App.scss","webpack:///../../packages/ui/src/components/ConsumerGroups/ConsumerGroup.css","webpack:///../../packages/ui/src/components/CreateKafkaInstance/CreateKafkaInstance.css","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusLabel.css","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/KafkaMessageBrowser.css","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceTypeLabel.css","webpack:///../../packages/ui/src/components/MarketingPage.css","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTopic.css","webpack:///../../packages/ui/src/components/Settings/Settings.css","webpack:///./src/App.tsx","webpack:///./src/AppEntry.tsx","webpack:///./src/DrawerProvider.tsx","webpack:///./src/routes/StreamsRoutes.tsx","webpack:///./src/routes/overview/OverviewRoute.tsx","webpack:///./src/routes/streams/detail/AclsRoute.tsx","webpack:///./src/routes/streams/detail/ConsumerGroupsRoute.tsx","webpack:///./src/routes/streams/detail/DashboardRoute.tsx","webpack:///./src/routes/streams/detail/DataPlaneGate.tsx","webpack:///./src/routes/streams/detail/DataPlaneHeaderConnected.tsx","webpack:///./src/routes/streams/detail/SettingsRoute.tsx","webpack:///./src/routes/streams/detail/TopicsRoute.tsx","webpack:///./src/routes/streams/detail/useDataPlaneInstance.tsx","webpack:///./src/routes/streams/kafka-instances/CreateKafkaInstanceRoute.tsx","webpack:///./src/routes/streams/kafka-instances/DeleteKafkaInstanceRoute.tsx","webpack:///./src/routes/streams/kafka-instances/KafkaInstancesRoute.tsx","webpack:///./src/routes/streams/kafka-instances/useCreateKafkaCallbacks.ts","webpack:///./src/routes/streams/routes.ts","webpack:///./src/store/index.ts","webpack:///../../packages/consoledot-api/src/ApiProvider.tsx","webpack:///../../packages/consoledot-api/src/fetchQueries/index.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDeveloperInstanceAvailabilityFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaInstanceFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaInstanceKpiMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaInstanceMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaInstanceTopicMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaInstanceTopicsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useProviderRegionSizesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useProvidersWithRegionsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useStandardQuotaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaConsumerGroups.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaInstanceMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaInstances.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaKpiMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaTopicMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaTopics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchOrganization.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchProviderRegionSizes.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchProvidersWithRegions.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchStandardQuota.ts","webpack:///../../packages/consoledot-api/src/fetchers/index.ts","webpack:///../../packages/consoledot-api/src/fetchers/valuesToQuery.ts","webpack:///../../packages/consoledot-api/src/index.ts","webpack:///../../packages/consoledot-api/src/mutations/index.ts","webpack:///../../packages/consoledot-api/src/mutations/useKafkaCreateInstanceMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useKafkaDeleteInstanceMutation.ts","webpack:///../../packages/consoledot-api/src/queries/index.ts","webpack:///../../packages/consoledot-api/src/queries/useCreateInstance.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkaInstance.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkaInstanceConsumerGroups.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkaInstanceTopics.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkaInstanceTransformer.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkaInstances.ts","webpack:///../../packages/consoledot-api/src/queryKeys.ts","webpack:///../../packages/consoledot-api/src/transformers/kafkaRequestToKafkaInstanceEnhanched.ts","webpack:///../../packages/consoledot-api/src/types.ts","webpack:///../../packages/consoledot-api/src/useApi.ts","webpack:///../../packages/consoledot-api/src/utilsAndConstants.ts","webpack:///../../packages/ui/src/components/ConsumerGroups/ConsumerGroups.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupByKafka.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupByTopic.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupDetails.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupEmptyState.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupPopover.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupResetOffset.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupState.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupToolbar.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/OffsetSelect.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/TopicSelect.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/index.ts","webpack:///../../packages/ui/src/components/ConsumerGroups/index.ts","webpack:///../../packages/ui/src/components/ControlPlaneHeader.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/CreateKafkaInstance.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/LoadingForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/StandardInstanceForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/TrialInstanceForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/BillingHelp.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/BillingTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/CloudProviderTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/CloudRegionsSelect.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldAZ.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldBillingTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldCloudProvider.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldCloudRegion.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldInstanceName.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSize.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSizeHelperText.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSizeHelperTextOverQuota.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSizeHelperTextTrial.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FormAlerts.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/InstanceInfo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/InstanceInfoSkeleton.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsLoading.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsStandardPlan.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsSystemUnavailable.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsTrialPlan.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/index.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/index.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateKafkaInstanceMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateKafkaInstanceProvider.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/StandardPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/TrialPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/index.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/shared.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useCreateKafkaInstance.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useStandardPlan.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useTrialPlan.ts","webpack:///../../packages/ui/src/components/DataPlaneHeader.tsx","webpack:///../../packages/ui/src/components/DeleteKafKaInstance/DeleteKafkaInstance.tsx","webpack:///../../packages/ui/src/components/DeleteKafKaInstance/index.ts","webpack:///../../packages/ui/src/components/I18nProvider.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceActions.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceCapacityTable.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/KafkaInstanceDrawer.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/DetailsTabAlert.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaConnectionTab.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaConnectionTabP1.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaConnectionTabP2.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaDetailsTab.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/SuspendedConnection.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/index.ts","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/index.ts","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/KafkaInstanceStatus.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusLabel.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusPopover.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusPopoverContent.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusProgressStepper.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/SuspendedPopover.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/index.ts","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/index.ts","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/types.ts","webpack:///../../packages/ui/src/components/KafkaInstances/KafkaInstances.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoInstances.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoResults.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/index.ts","webpack:///../../packages/ui/src/components/KafkaInstances/index.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/KafkaMessageBrowser.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/MessageBrowserMachine.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/DateTimePicker.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/FilterGroup.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/LimitSelector.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/MessageDetails.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoDataCell.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoDataEmptyState.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoResultsEmptyState.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/OffsetRange.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/PartitionSelector.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/UnknownValuePreview.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/index.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/index.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/utils.ts","webpack:///../../packages/ui/src/components/KafkaPageV3.tsx","webpack:///../../packages/ui/src/components/KafkaTopics/KafkaTopics.tsx","webpack:///../../packages/ui/src/components/KafkaTopics/components/EmptyStateNoTopic.tsx","webpack:///../../packages/ui/src/components/KafkaTopics/components/index.ts","webpack:///../../packages/ui/src/components/KafkaTopics/index.ts","webpack:///../../packages/ui/src/components/KafkaTopics/types.ts","webpack:///../../packages/ui/src/components/Logos/AWSLogo.tsx","webpack:///../../packages/ui/src/components/Logos/AzureLogo.tsx","webpack:///../../packages/ui/src/components/Logos/GCPLogo.tsx","webpack:///../../packages/ui/src/components/Logos/RedhatLogo.tsx","webpack:///../../packages/ui/src/components/Logos/images.ts","webpack:///../../packages/ui/src/components/Logos/index.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/ManageKafkaPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/AssignPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/AssignPermissionsManual.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/Cells.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ConsumeTopicShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/KafkaInstanceManualPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ManageAccessShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PermissionsDropdown.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ProduceTopicRow.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ProduceTopicShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceName.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceOperation.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourcePermission.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourcePrefixRule.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceType.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceTypeLabel.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceTypeOperationFilter.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ReviewPermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/SelectAccount.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ShortcutsTableHead.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ViewAccountDetails.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/index.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/index.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/types.ts","webpack:///../../packages/ui/src/components/MarketingPage.tsx","webpack:///../../packages/ui/src/components/Metrics/KafkaInstanceMetricsProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/Metrics.tsx","webpack:///../../packages/ui/src/components/Metrics/MetricsKpiProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/TopicsMetricsProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardBodyLoading.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardKafkaInstanceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardKpi.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartLinearWithOptionalLimit.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartLogSizePerPartition.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartPopover.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartSkeletonLoader.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartTotalBytes.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateInitialLoading.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateMetricsUnavailable.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoMetricsData.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoMetricsDataForSelection.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoTopicSelected.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoTopics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTime.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTopic.tsx","webpack:///../../packages/ui/src/components/Metrics/components/MetricsLagAlert.tsx","webpack:///../../packages/ui/src/components/Metrics/components/MetricsLayout.tsx","webpack:///../../packages/ui/src/components/Metrics/components/PartitionCard.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarKafkaInstanceMetric.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarRefresh.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/index.ts","webpack:///../../packages/ui/src/components/Metrics/components/useChartWidth.tsx","webpack:///../../packages/ui/src/components/Metrics/components/utils.ts","webpack:///../../packages/ui/src/components/Metrics/consts.ts","webpack:///../../packages/ui/src/components/Metrics/index.ts","webpack:///../../packages/ui/src/components/Metrics/machines/KafkaInstanceMetricsMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/MetricsKpiMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/TopicsMetricsMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/index.ts","webpack:///../../packages/ui/src/components/Metrics/types.ts","webpack:///../../packages/ui/src/components/Metrics/useKafkaInstanceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/useMetricsKpi.tsx","webpack:///../../packages/ui/src/components/Metrics/useTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/ServiceAccount/components/FilterSelect.tsx","webpack:///../../packages/ui/src/components/ServiceAccount/components/Search.tsx","webpack:///../../packages/ui/src/components/ServiceAccount/components/SearchChips.tsx","webpack:///../../packages/ui/src/components/ServiceAccount/components/ServiceAccountToolbar.tsx","webpack:///../../packages/ui/src/components/ServiceAccount/components/index.ts","webpack:///../../packages/ui/src/components/ServiceAccount/index.ts","webpack:///../../packages/ui/src/components/Settings/Settings.tsx","webpack:///../../packages/ui/src/components/Settings/index.ts","webpack:///../../packages/ui/src/components/index.ts","webpack:///../../packages/ui/src/hooks/index.ts","webpack:///../../packages/ui/src/hooks/useKafkaLabels.ts","webpack:///../../packages/ui/src/index.ts","webpack:///../../packages/ui/src/types.ts","webpack:///../../packages/consoledot-api/index.tsx","webpack:///../../packages/local-storage-helpers/index.ts","webpack:///../../packages/ui/index.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1670949583032\n      var cssReload = require(\"/Users/riccardoforina/Code/bf2fc6cc711aee1a0c2a/rhosak-ui/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1670949608723\n      var cssReload = require(\"/Users/riccardoforina/Code/bf2fc6cc711aee1a0c2a/rhosak-ui/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1670949604072\n      var cssReload = require(\"/Users/riccardoforina/Code/bf2fc6cc711aee1a0c2a/rhosak-ui/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1670949617301\n      var cssReload = require(\"/Users/riccardoforina/Code/bf2fc6cc711aee1a0c2a/rhosak-ui/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1670949603810\n      var cssReload = require(\"/Users/riccardoforina/Code/bf2fc6cc711aee1a0c2a/rhosak-ui/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1670949608767\n      var cssReload = require(\"/Users/riccardoforina/Code/bf2fc6cc711aee1a0c2a/rhosak-ui/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1670949599417\n      var cssReload = require(\"/Users/riccardoforina/Code/bf2fc6cc711aee1a0c2a/rhosak-ui/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1670949618442\n      var cssReload = require(\"/Users/riccardoforina/Code/bf2fc6cc711aee1a0c2a/rhosak-ui/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1670949603804\n      var cssReload = require(\"/Users/riccardoforina/Code/bf2fc6cc711aee1a0c2a/rhosak-ui/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import NotificationsPortal from \"@redhat-cloud-services/frontend-components-notifications/NotificationPortal\";\nimport { notificationsReducer } from \"@redhat-cloud-services/frontend-components-notifications/redux\";\nimport { getRegistry } from \"@redhat-cloud-services/frontend-components-utilities/Registry\";\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { memo, useEffect } from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport type { Reducer } from \"redux\";\n\nimport \"./App.scss\";\nimport { DrawerProvider } from \"./DrawerProvider\";\nimport { OverviewRoute } from \"./routes/overview/OverviewRoute\";\n\nimport { StreamsRoutes } from \"./routes/StreamsRoutes\";\n\nconst App = memo(() => {\n  const history = useHistory();\n  const { updateDocumentTitle, on } = useChrome();\n\n  const { t } = useTranslation();\n  const title = t(\"kafka:rhosakTitle\");\n\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer as Reducer });\n\n    updateDocumentTitle(title);\n\n    const unregister = on(\"APP_NAVIGATION\", (event) => {\n      console.dir(event);\n      event.navId && history.push(\"/\" + event.navId === \"/\" ? \"\" : event.navId);\n    });\n    return () => {\n      if (unregister) {\n        unregister();\n      }\n    };\n  }, [history, on, title, updateDocumentTitle]);\n\n  return (\n    <>\n      <NotificationsPortal />\n      <Switch>\n        <Route path={\"/overview\"} exact>\n          <OverviewRoute />\n        </Route>\n        <Redirect from={\"/\"} to={\"/kafkas\"} exact />\n        <Route path={\"/kafkas\"}>\n          <DrawerProvider>\n            <StreamsRoutes />\n          </DrawerProvider>\n        </Route>\n        <Route path={\"\"} exact></Route>\n      </Switch>\n    </>\n  );\n});\n\nexport default App;\n","import { getBaseName } from \"@redhat-cloud-services/frontend-components-utilities/helpers\";\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { ApiProvider } from \"consoledot-api\";\nimport { memo } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport logger from \"redux-logger\";\nimport { I18nProvider } from \"ui\";\nimport App from \"./App\";\nimport { init } from \"./store\";\n\nconst store = init(\n  ...(process.env.NODE_ENV !== \"production\" ? [logger] : [])\n).getStore();\n\nconst AppEntry = memo(() => {\n  const { auth } = useChrome();\n\n  return (\n    <Provider store={store}>\n      <ApiProvider\n        accessToken={auth.getToken}\n        basePath={\"https://api.openshift.com\"}\n        refetchInterval={5000}\n      >\n        <Router basename={getBaseName(window.location.pathname)}>\n          <I18nProvider lng={\"en\"}>\n            <App />\n          </I18nProvider>\n        </Router>\n      </ApiProvider>\n    </Provider>\n  );\n});\n\nexport default AppEntry;\n","import type { FunctionComponent, MutableRefObject } from \"react\";\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { KafkaInstanceDrawerTab } from \"ui\";\nimport type { ControlPlaneRouteParams } from \"./routes/streams/routes\";\nimport {\n  ControlPlaneRoutePath,\n  ControlPlaneSpecialSegments,\n} from \"./routes/streams/routes\";\n\ntype DrawerContextProps = {\n  selectedInstance: string | undefined;\n  activeTab: KafkaInstanceDrawerTab;\n  setActiveTab: (tab: KafkaInstanceDrawerTab) => void;\n  isExpanded: boolean;\n  toggleExpanded: (newState?: boolean) => void;\n  onClose: MutableRefObject<(() => void) | undefined>;\n};\nconst DrawerContext = createContext<DrawerContextProps>(null!);\n\nexport const DrawerProvider: FunctionComponent = ({ children }) => {\n  const match = useRouteMatch<ControlPlaneRouteParams>(ControlPlaneRoutePath);\n  if (!match) {\n    throw Error(\"DrawerProvider used outside the expected route\");\n  }\n  const selectedInstance =\n    (match.params.id &&\n      ControlPlaneSpecialSegments.includes(match.params.id)) ||\n    match.params.section !== undefined\n      ? undefined\n      : match.params.id;\n  const [isExpanded, setIsExpanded] = useState(\n    selectedInstance !== undefined && match.isExact\n  );\n  const [activeTab, setActiveTab] = useState<KafkaInstanceDrawerTab>(\"details\");\n  const onClose = useRef<() => void | undefined>();\n\n  const toggleExpanded = useCallback((newValue: boolean | undefined) => {\n    setIsExpanded((prev) => {\n      const isExpanded = newValue !== undefined ? newValue : !prev;\n      if (isExpanded === false && onClose.current) {\n        onClose.current();\n      }\n      return isExpanded;\n    });\n  }, []);\n\n  const value = useMemo(() => {\n    const shouldBeExpanded = selectedInstance !== undefined && isExpanded;\n\n    return {\n      selectedInstance: selectedInstance,\n      activeTab,\n      setActiveTab,\n      isExpanded: shouldBeExpanded,\n      toggleExpanded,\n      onClose,\n    };\n  }, [activeTab, isExpanded, selectedInstance, toggleExpanded]);\n\n  return (\n    <DrawerContext.Provider value={value}>{children}</DrawerContext.Provider>\n  );\n};\n\nexport function useDrawer(onClose?: () => void) {\n  const context = useContext(DrawerContext);\n  context.onClose.current = onClose;\n  return context;\n}\n","import { InvalidObject } from \"@redhat-cloud-services/frontend-components\";\nimport { useKafkaInstance } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Suspense } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { KafkaInstanceDrawer } from \"ui\";\nimport { useDrawer } from \"../DrawerProvider\";\nimport { AclsRoute } from \"./streams/detail/AclsRoute\";\nimport { ConsumerGroupsRoute } from \"./streams/detail/ConsumerGroupsRoute\";\nimport { DashboardRoute } from \"./streams/detail/DashboardRoute\";\nimport { DataPlaneGate } from \"./streams/detail/DataPlaneGate\";\nimport { SettingsRoute } from \"./streams/detail/SettingsRoute\";\nimport { TopicsRoute } from \"./streams/detail/TopicsRoute\";\nimport { CreateKafkaInstanceRoute } from \"./streams/kafka-instances/CreateKafkaInstanceRoute\";\nimport { DeleteKafkaInstanceRoute } from \"./streams/kafka-instances/DeleteKafkaInstanceRoute\";\nimport { KafkaInstancesRoute } from \"./streams/kafka-instances/KafkaInstancesRoute\";\nimport {\n  ControlPlaneDeleteInstancePath,\n  ControlPlaneNewInstancePath,\n  ControlPlaneRoutePath,\n  DataPlaneRoutePath,\n} from \"./streams/routes\";\n\nexport const StreamsRoutes: VoidFunctionComponent = () => {\n  const {\n    selectedInstance,\n    activeTab,\n    setActiveTab,\n    isExpanded,\n    toggleExpanded,\n  } = useDrawer();\n  const { data: drawerInstance } = useKafkaInstance(selectedInstance);\n\n  return (\n    <KafkaInstanceDrawer\n      instance={drawerInstance}\n      activeTab={activeTab}\n      onTabChange={setActiveTab}\n      isExpanded={isExpanded}\n      onClose={() => toggleExpanded(false)}\n    >\n      <Suspense fallback={Fallback}>\n        <Switch>\n          {/* CONTROL PLANE */}\n          <Route path={ControlPlaneRoutePath} exact>\n            <Route path={ControlPlaneNewInstancePath}>\n              <CreateKafkaInstanceRoute instancesHref={\"/kafkas\"} />\n            </Route>\n            <Route path={ControlPlaneDeleteInstancePath}>\n              <DeleteKafkaInstanceRoute instancesHref={\"/kafkas\"} />\n            </Route>\n            <KafkaInstancesRoute\n              getUrlForInstance={(instance) => `/kafkas/${instance.id}/details`}\n            />\n          </Route>\n\n          {/* DATA PLANE*/}\n          <Route path={DataPlaneRoutePath}>\n            <DataPlaneGate instancesHref={\"/kafkas\"}>\n              <Switch>\n                <Route path={`${DataPlaneRoutePath}/dashboard`} exact>\n                  <DashboardRoute instancesHref={\"/kafkas\"} />\n                </Route>\n                <Route path={`${DataPlaneRoutePath}/topics`} exact>\n                  <TopicsRoute instancesHref={\"/kafkas\"} />\n                </Route>\n\n                <Route path={`${DataPlaneRoutePath}/consumer-groups`} exact>\n                  <ConsumerGroupsRoute instancesHref={\"/kafkas\"} />\n                </Route>\n                <Route path={`${DataPlaneRoutePath}/acls`} exact>\n                  <AclsRoute instancesHref={\"/kafkas\"} />\n                </Route>\n                <Route path={`${DataPlaneRoutePath}/settings`} exact>\n                  <SettingsRoute instancesHref={\"/kafkas\"} />\n                </Route>\n                <Route path={`${DataPlaneRoutePath}/topics/:topicName`} exact>\n                  <TopicsRoute instancesHref={\"/kafkas\"} />\n                </Route>\n\n                <Redirect\n                  from={`${DataPlaneRoutePath}`}\n                  to={`${DataPlaneRoutePath}/dashboard`}\n                  exact\n                />\n\n                <Route>\n                  <InvalidObject />\n                </Route>\n              </Switch>\n            </DataPlaneGate>\n          </Route>\n          <Route>\n            <InvalidObject />\n          </Route>\n        </Switch>\n      </Suspense>\n    </KafkaInstanceDrawer>\n  );\n};\n\nconst Fallback = () => {\n  return \"⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️⚠️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️️\";\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { KafkaPageV3 } from \"ui\";\n\nexport const OverviewRoute: VoidFunctionComponent = () => {\n  return <KafkaPageV3 />;\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { NavigationProps } from \"../routes\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const AclsRoute: VoidFunctionComponent<NavigationProps> = ({\n  instancesHref,\n}) => {\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"permissions\"}\n      />\n      <PageSection>TODO</PageSection>\n    </>\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaConsumerGroupSortableColumns,\n  useKafkaInstanceConsumerGroups,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { ConsumerGroups } from \"ui\";\nimport type { NavigationProps } from \"../routes\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport { useDataPlaneInstance } from \"./useDataPlaneInstance\";\n\nexport const ConsumerGroupsRoute: VoidFunctionComponent<NavigationProps> = ({\n  instancesHref,\n}) => {\n  const { instance } = useDataPlaneInstance(instancesHref);\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const consumerName = useURLSearchParamsChips(\n    \"consumer\",\n    resetPaginationQuery\n  );\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaConsumerGroupSortableColumns,\n    {\n      name: \"TODO name\",\n    },\n    \"name\",\n    \"desc\"\n  );\n  const { data } = useKafkaInstanceConsumerGroups({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort!,\n    direction: sortDirection,\n    groupId: consumerName.chips[0],\n  });\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"consumer\"}\n      />\n      <ConsumerGroups\n        consumers={data?.groups}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        consumerName={consumerName.chips}\n        isRowSelected={() => false}\n        isColumnSortable={isColumnSortable}\n        onDelete={() => {}}\n        onSearchConsumer={(value) => {\n          consumerName.clear();\n          consumerName.toggle(value);\n        }}\n        onClearAllFilters={consumerName.clear}\n        onPageChange={setPagination}\n        onRemoveConsumerChip={consumerName.clear}\n        onRemoveConsumerChips={consumerName.clear}\n        onViewPartition={() => {}}\n        onViewResetOffset={() => {}}\n      />\n    </>\n  );\n};\n","import {\n  useKafkaInstanceFetchQuery,\n  useKafkaInstanceKpiMetricsFetchQuery,\n  useKafkaInstanceMetricsFetchQuery,\n  useKafkaInstanceTopicMetricsFetchQuery,\n  useKafkaInstanceTopicsFetchQuery,\n} from \"consoledot-api\";\nimport {\n  metricsDismissLagAlerts,\n  metricsIsLagAlertsDismissed,\n} from \"local-storage-helpers\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport type { MetricsProps } from \"ui\";\nimport { Metrics } from \"ui\";\nimport type { NavigationProps } from \"../routes\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport { useDataPlaneInstance } from \"./useDataPlaneInstance\";\n\nexport const DashboardRoute: VoidFunctionComponent<NavigationProps> = ({\n  instancesHref,\n}) => {\n  const {\n    instance,\n    match: { params },\n  } = useDataPlaneInstance(instancesHref);\n  const [hasUserAlreadyClosedAlert, setHasUserAlreadyClosedAlert] = useState(\n    metricsIsLagAlertsDismissed()\n  );\n\n  const onAlertClose = useCallback(() => {\n    setHasUserAlreadyClosedAlert(true);\n    metricsDismissLagAlerts();\n  }, []);\n\n  const queryInstance = useKafkaInstanceFetchQuery();\n  const queryKpisMetrics = useKafkaInstanceKpiMetricsFetchQuery();\n  const queryInstanceMetrics = useKafkaInstanceMetricsFetchQuery();\n  const queryTopicMetrics = useKafkaInstanceTopicMetricsFetchQuery();\n  const queryTopics = useKafkaInstanceTopicsFetchQuery();\n\n  const getMetricsKpi: MetricsProps[\"getMetricsKpi\"] = useCallback(async () => {\n    const kpis = await queryKpisMetrics(params.id);\n    return {\n      ...kpis,\n      topicPartitionsLimit: instance!.maxPartitions || 0,\n    };\n  }, [instance, params.id, queryKpisMetrics]);\n\n  const getKafkaInstanceMetrics: MetricsProps[\"getKafkaInstanceMetrics\"] =\n    useCallback(\n      async ({ interval, duration }) => {\n        const [instance, metrics] = await Promise.all([\n          queryInstance(params.id),\n          queryInstanceMetrics({ id: params.id, duration, interval }),\n        ]);\n        if (!instance) {\n          return Promise.reject(\"Can't retrieve instance\");\n        }\n        return {\n          ...metrics,\n          diskSpaceLimit:\n            (instance.request.max_data_retention_size?.bytes || 0) / 1073741824,\n          connectionsLimit: instance.connections || 0,\n          connectionRateLimit: instance.connectionRate || 0,\n        };\n      },\n      [params.id, queryInstance, queryInstanceMetrics]\n    );\n\n  const getTopicsMetrics: MetricsProps[\"getTopicsMetrics\"] = useCallback(\n    async ({ interval, duration, selectedTopic }) => {\n      const [instance, metrics] = await Promise.all([\n        queryInstance(params.id),\n        queryTopicMetrics({ id: params.id, duration, interval, selectedTopic }),\n      ]);\n      if (!instance || !instance.adminUrl) {\n        return Promise.reject(\"Can't retrieve instance\");\n      }\n      const kafkaTopics = (\n        await queryTopics({\n          id: instance.id,\n          adminUrl: instance.adminUrl,\n          page: 1,\n          perPage: 1000,\n        })\n      ).topics.map((t) => t.topic_name);\n      return {\n        ...metrics,\n        kafkaTopics,\n      };\n    },\n    [params.id, queryInstance, queryTopicMetrics, queryTopics]\n  );\n\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"dashboard\"}\n      />\n      <Metrics\n        onCreateTopic={() => {}}\n        onAlertClose={onAlertClose}\n        hasUserAlreadyClosedAlert={hasUserAlreadyClosedAlert}\n        getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n        getTopicsMetrics={getTopicsMetrics}\n        getMetricsKpi={getMetricsKpi}\n      />\n    </>\n  );\n};\n","import { Loading } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport type { NavigationProps } from \"../routes\";\nimport { useDataPlaneInstance } from \"./useDataPlaneInstance\";\n\nexport const DataPlaneGate: FunctionComponent<NavigationProps> = ({\n  instancesHref,\n  children,\n}) => {\n  const { instance } = useDataPlaneInstance(instancesHref);\n\n  return instance ? <>{children}</> : <Loading />;\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlaneHeaderProps } from \"ui\";\nimport { DataPlaneHeader, ReadyStatuses } from \"ui\";\nimport { useDrawer } from \"../../../DrawerProvider\";\nimport type { NavigationProps } from \"../routes\";\nimport { useDataPlaneInstance } from \"./useDataPlaneInstance\";\n\nexport const DataPlaneHeaderConnected: VoidFunctionComponent<\n  NavigationProps & Pick<DataPlaneHeaderProps, \"activeSection\">\n> = ({ instancesHref, activeSection }) => {\n  const history = useHistory();\n  const { setActiveTab, toggleExpanded } = useDrawer();\n\n  const {\n    instance,\n    match: { url },\n  } = useDataPlaneInstance(instancesHref);\n\n  const sectionsHref = {\n    dashboard: `${url}/dashboard`,\n    topics: `${url}/topics`,\n    consumer: `${url}/consumer-groups`,\n    permissions: `${url}/acls`,\n    settings: `${url}/settings`,\n  };\n\n  const onDelete = useCallback(() => {\n    // TODO: unhardcode this url\n    history.push(`${instancesHref}/${instance!.id}/delete`);\n  }, [history, instance, instancesHref]);\n\n  return (\n    <DataPlaneHeader\n      instancesHref={instancesHref}\n      instanceName={instance?.name || \"\"}\n      activeSection={activeSection}\n      sectionsHref={sectionsHref}\n      onDetails={() => {\n        setActiveTab(\"details\");\n        toggleExpanded(true);\n      }}\n      onConnection={() => {\n        setActiveTab(\"connections\");\n        toggleExpanded(true);\n      }}\n      canOpenConnection={\n        instance ? ReadyStatuses.includes(instance?.status) : false\n      }\n      canChangeOwner={true /* TODO */}\n      onChangeOwner={() => false /* TODO */}\n      canDelete={true /* TODO */}\n      onDelete={onDelete}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Settings as SettingsComp } from \"ui\";\nimport type { NavigationProps } from \"../routes\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const SettingsRoute: VoidFunctionComponent<NavigationProps> = ({\n  instancesHref,\n}) => {\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"settings\"}\n      />\n      <SettingsComp\n        onSubmitReAuthentication={() => Promise.resolve(true)}\n        reauthenticationEnabled={false}\n      />\n    </>\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaTopicsSortableColumns,\n  useKafkaInstanceTopics,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { KafkaTopics } from \"ui\";\nimport type { NavigationProps } from \"../routes\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport { useDataPlaneInstance } from \"./useDataPlaneInstance\";\n\nexport const TopicsRoute: VoidFunctionComponent<NavigationProps> = ({\n  instancesHref,\n}) => {\n  const { instance } = useDataPlaneInstance(instancesHref);\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const topicChips = useURLSearchParamsChips(\"topic\", resetPaginationQuery);\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaTopicsSortableColumns,\n    {\n      name: \"TODO name\",\n      partitions: \"TODO partitions\",\n      \"retention.bytes\": \"TODO retention bytes\",\n      \"retention.ms\": \"TODO retention ms\",\n    },\n    \"name\",\n    \"desc\"\n  );\n  const { data } = useKafkaInstanceTopics({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort!,\n    direction: sortDirection,\n    filter: topicChips.chips[0],\n  });\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"topics\"}\n      />\n      <KafkaTopics\n        topics={data?.topics}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        topicName={topicChips.chips}\n        getUrlFortopic={(row) => `./topic/${row.topic_name}`}\n        isColumnSortable={isColumnSortable}\n        onDelete={() => {}}\n        onEdit={() => {}}\n        onSearchTopic={(value) => {\n          topicChips.clear();\n          topicChips.toggle(value);\n        }}\n        onClearAllFilters={topicChips.clear}\n        onCreateTopic={() => {}}\n        onPageChange={setPagination}\n        onRemoveTopicChip={topicChips.clear}\n        onRemoveTopicChips={topicChips.clear}\n        onTopicLinkClick={() => {}}\n      />\n    </>\n  );\n};\n","import { useKafkaInstance } from \"consoledot-api\";\nimport { useEffect } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport type { DataPlaneRouteParams } from \"../routes\";\nimport { DataPlaneRoutePath } from \"../routes\";\n\nexport function useDataPlaneInstance(instancesHref: string) {\n  const history = useHistory();\n\n  const match = useRouteMatch<DataPlaneRouteParams>(DataPlaneRoutePath);\n\n  if (!match) {\n    throw Error(\"useDataPlaneInstance used outside the expected route\");\n  }\n  const { data: instance, isError } = useKafkaInstance(match.params.id);\n\n  useEffect(() => {\n    if (isError) {\n      history.replace(instancesHref);\n    }\n  }, [history, instancesHref, isError]);\n\n  return { instance, match };\n}\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport type { CreateKafkaInstanceServices } from \"@rhoas/app-services-ui-components\";\nimport { CreateKafkaInstance } from \"@rhoas/app-services-ui-components\";\nimport { useKafkaCreateInstanceMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { NavigationProps } from \"../routes\";\nimport { ControlPlaneRouteRoot } from \"../routes\";\nimport { useCreateKafkaCallbacks } from \"./useCreateKafkaCallbacks\";\n\nexport const CreateKafkaInstanceRoute: FunctionComponent<NavigationProps> = ({\n  instancesHref,\n}) => {\n  const history = useHistory();\n  const callbacks = useCreateKafkaCallbacks();\n  const createKafkaInstance = useKafkaCreateInstanceMutation();\n  const qsContext = useContext(QuickStartContext);\n\n  const onClickKafkaOverview = () => {\n    history.push(`overview`);\n  };\n\n  const onClickQuickStart = useCallback(() => {\n    qsContext.setActiveQuickStart &&\n      qsContext.setActiveQuickStart(\"getting-started\");\n  }, [qsContext]);\n\n  const onCreate = useCallback<CreateKafkaInstanceServices[\"onCreate\"]>(\n    function (instance, onSuccess, onError) {\n      const onOnSuccess = () => {\n        onSuccess();\n        history.push(ControlPlaneRouteRoot);\n      };\n      void createKafkaInstance.mutateAsync({\n        instance,\n        onSuccess: onOnSuccess,\n        onError,\n      });\n    },\n    [createKafkaInstance, history]\n  );\n\n  const onCancel = useCallback(() => {\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  return (\n    <CreateKafkaInstance\n      {...callbacks}\n      isModalOpen={true}\n      onCancel={onCancel}\n      onClickContactUs={onClickKafkaOverview}\n      onClickKafkaOverview={onClickKafkaOverview}\n      onClickQuickStart={onClickQuickStart}\n      onCreate={onCreate}\n      onLearnHowToAddStreamingUnits={onClickKafkaOverview}\n      onLearnMoreAboutSizes={onClickKafkaOverview}\n      subscriptionOptionsHref={document.location.href + \"/../overview\"}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import {\n  useKafkaDeleteInstanceMutation,\n  useKafkaInstance,\n} from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { DeleteKafkaInstance, ReadyStatuses } from \"ui\";\nimport type { ControlPlaneRouteParams, NavigationProps } from \"../routes\";\nimport { ControlPlaneRoutePath } from \"../routes\";\n\nexport const DeleteKafkaInstanceRoute: FunctionComponent<NavigationProps> = ({\n  instancesHref,\n}) => {\n  const history = useHistory();\n  const match = useRouteMatch<ControlPlaneRouteParams>(ControlPlaneRoutePath);\n\n  const { data: instance, isError } = useKafkaInstance(match?.params.id);\n  const { mutateAsync, isLoading: isDeleting } =\n    useKafkaDeleteInstanceMutation();\n\n  const onCancel = useCallback(() => {\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  const onDelete = useCallback(() => {\n    if (instance?.id) {\n      void mutateAsync({\n        id: instance.id,\n        onError: () => {\n          // TODO: alert\n        },\n        onSuccess: () => {\n          history.replace(instancesHref);\n        },\n      });\n    }\n  }, [mutateAsync, history, instance?.id, instancesHref]);\n\n  useEffect(() => {\n    if (isError) {\n      history.replace(instancesHref);\n    }\n  }, [history, instancesHref, isError]);\n\n  if (!instance) {\n    return null;\n  }\n\n  return (\n    <DeleteKafkaInstance\n      isModalOpen={true}\n      isDeleting={isDeleting}\n      onCancel={onCancel}\n      onDelete={onDelete}\n      instanceName={\n        ReadyStatuses.includes(instance.status) ? instance.name : undefined\n      }\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaInstancesSortableColumns,\n  useKafkaInstances,\n} from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type {\n  KafkaInstance,\n  KafkaInstanceDrawerTab,\n  KafkaInstancesProps,\n  SimplifiedStatus,\n} from \"ui\";\nimport {\n  ControlPlaneHeader,\n  KafkaInstances,\n  ReadyStatuses,\n  useKafkaLabels,\n} from \"ui\";\nimport { useDrawer } from \"../../../DrawerProvider\";\nimport { ControlPlaneNewInstancePath, ControlPlaneRouteRoot } from \"../routes\";\n\nexport type KafkaInstancesRoute = Pick<\n  KafkaInstancesProps<KafkaInstance>,\n  \"getUrlForInstance\"\n>;\n\nexport const KafkaInstancesRoute: FunctionComponent<KafkaInstancesRoute> = ({\n  getUrlForInstance,\n}) => {\n  const history = useHistory();\n\n  const { selectedInstance, toggleExpanded, setActiveTab, isExpanded } =\n    useDrawer(\n      useCallback(() => history.replace(`${ControlPlaneRouteRoot}`), [history])\n    );\n\n  const labels = useKafkaLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const namesChips = useURLSearchParamsChips(\"names\", resetPaginationQuery);\n  const ownersChips = useURLSearchParamsChips(\"owners\", resetPaginationQuery);\n  const statusesChips = useURLSearchParamsChips<SimplifiedStatus>(\n    \"statuses\",\n    resetPaginationQuery\n  );\n\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaInstancesSortableColumns,\n    labels.fields,\n    \"createdAt\",\n    \"desc\"\n  );\n\n  const { data } = useKafkaInstances({\n    page,\n    perPage,\n    name: namesChips.chips,\n    owner: ownersChips.chips,\n    status: statusesChips.chips,\n    sort: sort!,\n    direction: sortDirection,\n  });\n\n  const onClearAllFilters = useCallback(() => {\n    namesChips.clearChained(\n      ownersChips.clearChained(\n        statusesChips.clearChained(setPaginationQuery(1, perPage))\n      ),\n      true\n    );\n  }, [namesChips, ownersChips, perPage, setPaginationQuery, statusesChips]);\n\n  const openDrawer = useCallback(\n    (id: string, tab: KafkaInstanceDrawerTab) => {\n      if (selectedInstance === id && isExpanded) {\n        toggleExpanded(false);\n      } else {\n        history.replace(`${ControlPlaneRouteRoot}/${id}`);\n        toggleExpanded(true);\n        setActiveTab(tab);\n      }\n    },\n    [history, isExpanded, selectedInstance, setActiveTab, toggleExpanded]\n  );\n\n  const onDetailsClick: KafkaInstancesProps<KafkaInstance>[\"onDetails\"] =\n    useCallback(\n      (instance) => {\n        openDrawer(instance.id, \"details\");\n      },\n      [openDrawer]\n    );\n\n  const onConnectionsClick: KafkaInstancesProps<KafkaInstance>[\"onDetails\"] =\n    useCallback(\n      (instance) => {\n        openDrawer(instance.id, \"connections\");\n      },\n      [openDrawer]\n    );\n\n  const onCreate = useCallback(() => {\n    history.push(`${ControlPlaneNewInstancePath}`);\n  }, [history]);\n\n  const onDelete = useCallback(\n    ({ id }) => {\n      history.push(`${ControlPlaneRouteRoot}/${id}/delete`);\n    },\n    [history]\n  );\n\n  return (\n    <>\n      <ControlPlaneHeader />\n      <KafkaInstances\n        instances={data?.instances}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        names={namesChips.chips}\n        owners={ownersChips.chips}\n        statuses={statusesChips.chips}\n        isColumnSortable={isColumnSortable}\n        onPageChange={setPagination}\n        onSearchName={namesChips.add}\n        onRemoveNameChip={namesChips.remove}\n        onRemoveNameChips={namesChips.clear}\n        onSearchOwner={ownersChips.add}\n        onRemoveOwnerChip={ownersChips.remove}\n        onRemoveOwnerChips={ownersChips.clear}\n        onSearchStatus={statusesChips.toggle}\n        onRemoveStatusChip={statusesChips.remove}\n        onRemoveStatusChips={statusesChips.clear}\n        onClearAllFilters={onClearAllFilters}\n        onChangeOwner={(row) => {}}\n        onDelete={onDelete}\n        onCreate={onCreate}\n        isRowSelected={({ row }) => row.id === selectedInstance}\n        getUrlForInstance={getUrlForInstance}\n        onDetails={onDetailsClick}\n        onConnection={onConnectionsClick}\n        onClickConnectionTabLink={() => {}}\n        onClickSupportLink={() => {}}\n        onInstanceLinkClick={() => {}}\n        onQuickstartGuide={() => {}}\n        canHaveInstanceLink={({ status }) => ReadyStatuses.includes(status)}\n        canOpenConnection={({ status }) => ReadyStatuses.includes(status)}\n        canChangeOwner={() => true}\n        canDelete={() => true}\n      />\n    </>\n  );\n};\n","import { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport {\n  useDeveloperInstanceAvailabilityFetchQuery,\n  useProviderRegionSizesFetchQuery,\n  useProvidersWithRegionsFetchQuery,\n  useStandardQuotaFetchQuery,\n} from \"consoledot-api\";\nimport { useCallback } from \"react\";\nimport type { CreateKafkaInstanceProps, StandardSizes } from \"ui\";\n\nexport function useCreateKafkaCallbacks() {\n  const { auth } = useChrome();\n\n  const getUsername = useCallback(async () => {\n    const username = (await auth.getUser()).identity.user?.username;\n    if (!username) {\n      return Promise.reject(\"Invalid user\");\n    }\n    return username;\n  }, [auth]);\n\n  const checkDeveloperAvailabilityQuery =\n    useDeveloperInstanceAvailabilityFetchQuery();\n\n  const standardQuotaQuery = useStandardQuotaFetchQuery(true);\n  const providersWithRegionsQuery = useProvidersWithRegionsFetchQuery();\n  const getProvidersInfo = useProvidersWithRegionsFetchQuery();\n  const getProviderRegionsSizes = useProviderRegionSizesFetchQuery();\n\n  const checkDeveloperAvailability = useCallback<\n    CreateKafkaInstanceProps[\"checkDeveloperAvailability\"]\n  >(\n    async ({ onAvailable, onUsed, onUnavailable }) => {\n      try {\n        const available = await checkDeveloperAvailabilityQuery(getUsername);\n\n        if (available) {\n          onAvailable();\n        } else {\n          onUsed();\n        }\n      } catch {\n        onUnavailable();\n      }\n    },\n    [checkDeveloperAvailabilityQuery, getUsername]\n  );\n\n  const checkStandardQuota = useCallback<\n    CreateKafkaInstanceProps[\"checkStandardQuota\"]\n  >(\n    async ({ onQuotaAvailable, onNoQuotaAvailable, onOutOfQuota }) => {\n      try {\n        const {\n          hasTrialQuota,\n          remainingPrepaidQuota,\n          remainingMarketplaceQuota,\n          marketplaceSubscriptions,\n        } = await standardQuotaQuery();\n\n        if (\n          remainingMarketplaceQuota !== undefined ||\n          remainingPrepaidQuota !== undefined\n        ) {\n          if (\n            (remainingMarketplaceQuota || 0) === 0 &&\n            (remainingPrepaidQuota || 0) === 0\n          ) {\n            onOutOfQuota({\n              quota: {\n                marketplaceSubscriptions,\n              },\n            });\n          } else {\n            onQuotaAvailable({\n              quota: {\n                remainingPrepaidQuota,\n                remainingMarketplaceQuota,\n                marketplaceSubscriptions,\n              },\n            });\n          }\n        } else {\n          onNoQuotaAvailable({ hasTrialQuota });\n        }\n      } catch (e) {\n        onNoQuotaAvailable({ hasTrialQuota: false });\n      }\n    },\n    [standardQuotaQuery]\n  );\n\n  const fetchProvidersWithRegions = useCallback<\n    CreateKafkaInstanceProps[\"fetchProvidersWithRegions\"]\n  >(\n    async (plan, { onAvailable, onUnavailable }) => {\n      try {\n        const providers = await providersWithRegionsQuery(plan);\n        onAvailable(providers);\n      } catch {\n        onUnavailable();\n      }\n    },\n    [providersWithRegionsQuery]\n  );\n\n  const getStandardSizes = useCallback<\n    CreateKafkaInstanceProps[\"getStandardSizes\"]\n  >(\n    async (provider, region) => {\n      const providersInfo = await getProvidersInfo(\"standard\");\n      const providerInfo = providersInfo.providers.find(\n        (p) => p.id === provider\n      );\n      if (!providerInfo) {\n        return Promise.reject(\"Invalid cloud provider\");\n      }\n      return getProviderRegionsSizes(providerInfo, region, \"standard\");\n    },\n    [getProviderRegionsSizes, getProvidersInfo]\n  );\n\n  const getTrialSizes = useCallback<CreateKafkaInstanceProps[\"getTrialSizes\"]>(\n    async (provider, region) => {\n      let standardSizes: StandardSizes;\n\n      try {\n        standardSizes = await getStandardSizes(provider, region);\n      } catch {\n        // It can happen that the selected provider doesn't support standard instances.\n        // In this case we provide a faux sample list of sizes just to make the slider happy.\n        standardSizes = [\n          { id: \"1\", displayName: \"1\" },\n          { id: \"2\", displayName: \"2\" },\n        ] as StandardSizes;\n      }\n      const providersInfo = await getProvidersInfo(\"developer\");\n      const providerInfo = providersInfo.providers.find(\n        (p) => p.id === provider\n      );\n      if (!providerInfo) {\n        return Promise.reject(\"Invalid cloud provider\");\n      }\n      const trialSizes = await getProviderRegionsSizes(\n        providerInfo,\n        region,\n        \"developer\"\n      );\n      return {\n        standard: standardSizes,\n        trial: trialSizes[0],\n      };\n    },\n    [getProviderRegionsSizes, getProvidersInfo, getStandardSizes]\n  );\n  return {\n    checkDeveloperAvailability,\n    checkStandardQuota,\n    fetchProvidersWithRegions,\n    getStandardSizes,\n    getTrialSizes,\n  };\n}\n","import type { DataPlaneHeaderProps } from \"ui\";\n\nexport const ControlPlaneRouteRoot = \"/kafkas\" as const;\nconst NewInstanceSegment = \"create\";\nexport const ControlPlaneSpecialSegments = [NewInstanceSegment];\n\nexport const ControlPlaneRoutePath =\n  `${ControlPlaneRouteRoot}/:id?/:section(delete)?` as const;\nexport const ControlPlaneNewInstancePath = `${ControlPlaneRouteRoot}/${NewInstanceSegment}`;\nexport const ControlPlaneDeleteInstancePath = `${ControlPlaneRouteRoot}/:id/delete`;\nexport type ControlPlaneRouteParams = { id?: string; section?: \"delete\" };\n\nexport const DataPlaneRoutePath =\n  `${ControlPlaneRouteRoot}/:id/details` as const;\nexport type DataPlaneRouteParams = { id: string };\nexport type NavigationProps = {\n  instancesHref: DataPlaneHeaderProps[\"instancesHref\"];\n};\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { Middleware } from 'redux';\n\nexport let registry: ReducerRegistry<any>;\n\nexport function init(...middleware: Middleware[]) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n","import type { ConfigurationParameters } from \"@rhoas/kafka-management-sdk\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { ReactQueryDevtools } from \"@tanstack/react-query-devtools\";\nimport { isReactQueryDevToolsEanbled } from \"local-storage-helpers\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext, lazy, Suspense, useContext } from \"react\";\n\nconst ReactQueryDevtoolsProduction = lazy(() =>\n  import(\"@tanstack/react-query-devtools/build/lib/index.prod.js\").then(\n    (d) => ({\n      default: d.ReactQueryDevtools,\n    })\n  )\n);\n\ntype ApiContextProps = Pick<\n  ConfigurationParameters,\n  \"accessToken\" | \"basePath\"\n> & {\n  refetchInterval: number;\n};\n\nconst ApiContext = createContext<ApiContextProps>(null!);\n\nconst queryClient = new QueryClient();\n\nexport const ApiProvider: FunctionComponent<ApiContextProps> = ({\n  children,\n  ...context\n}) => {\n  const showDevTools = isReactQueryDevToolsEanbled();\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ApiContext.Provider value={context}>\n        {children}\n        <ReactQueryDevtools initialIsOpen />\n        {showDevTools && (\n          <Suspense fallback={null}>\n            <ReactQueryDevtoolsProduction />\n          </Suspense>\n        )}\n      </ApiContext.Provider>\n    </QueryClientProvider>\n  );\n};\n\nexport function useApiConfiguration() {\n  return useContext(ApiContext);\n}\n","export * from \"./useKafkaInstanceFetchQuery\";\nexport * from \"./useStandardQuotaFetchQuery\";\nexport * from \"./useKafkaInstanceTopicsFetchQuery\";\nexport * from \"./useKafkaInstanceMetricsFetchQuery\";\nexport * from \"./useProviderRegionSizesFetchQuery\";\nexport * from \"./useProvidersWithRegionsFetchQuery\";\nexport * from \"./useKafkaInstanceKpiMetricsFetchQuery\";\nexport * from \"./useKafkaInstanceTopicMetricsFetchQuery\";\nexport * from \"./useDeveloperInstanceAvailabilityFetchQuery\";\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchKafkaInstances } from \"../fetchers\";\nimport { useKafkaInstanceTransformer } from \"../queries\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport const useDeveloperInstanceAvailabilityFetchQuery = () => {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n  const dataMapper = useKafkaInstanceTransformer();\n\n  return (getUsername: () => Promise<string>) => {\n    const api = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.developerAvailability(),\n      queryFn: async () => {\n        const username = await getUsername();\n        if (!username) {\n          return Promise.reject(new Error(\"Invalid username\"));\n        }\n\n        const { instances } = await queryClient.fetchQuery({\n          queryKey: kafkaQueries.list({\n            direction: \"desc\",\n            sort: \"createdAt\",\n            name: [],\n            status: [],\n            owner: [username],\n            perPage: 1000,\n            page: 1,\n          }),\n          queryFn: () =>\n            fetchKafkaInstances({\n              getKafkas: (...args) => api.getKafkas(...args),\n              dataMapper,\n              direction: \"desc\",\n              sort: \"createdAt\",\n              name: [],\n              status: [],\n              owner: [username],\n              perPage: 1000,\n              page: 1,\n            }),\n          staleTime: Infinity,\n        });\n\n        return instances.some((k) => k?.plan !== \"standard\") !== true;\n      },\n    });\n  };\n};\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { useKafkaInstanceTransformer } from \"../queries\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaInstanceFetchQuery() {\n  const queryClient = useQueryClient();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  return async (id: string) => {\n    const api = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.details({ id }),\n      queryFn: async () => {\n        const instance = await api.getKafkaById(id);\n        return dataMapper(instance.data);\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchKafkaKpiMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaInstanceKpiMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (id: string) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.kpi({ id }),\n      queryFn: async () => {\n        return fetchKafkaKpiMetrics(\n          (...args) => api.getMetricsByInstantQuery(...args),\n          id\n        );\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchKafkaInstanceMetricsProps } from \"../fetchers\";\nimport { fetchKafkaInstanceMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaInstanceMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (\n    params: Omit<FetchKafkaInstanceMetricsProps, \"getMetricsByRangeQuery\">\n  ) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.instance(params),\n      queryFn: async () => {\n        return fetchKafkaInstanceMetrics({\n          getMetricsByRangeQuery: (...args) =>\n            api.getMetricsByRangeQuery(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchTopicsMetricsProps } from \"../fetchers\";\nimport { fetchKafkaTopicMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaInstanceTopicMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (params: Omit<FetchTopicsMetricsProps, \"getMetricsByRangeQuery\">) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.topic(params),\n      queryFn: async () => {\n        return fetchKafkaTopicMetrics({\n          getMetricsByRangeQuery: (...args) =>\n            api.getMetricsByRangeQuery(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchKafkaTopicsParams } from \"../fetchers\";\nimport { fetchKafkaTopics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaInstanceTopicsFetchQuery() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return (\n    params: Omit<FetchKafkaTopicsParams, \"getTopics\"> & {\n      id: string;\n      adminUrl: string;\n    }\n  ) => {\n    const api = topics(params.adminUrl);\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.topics(params),\n      queryFn: async () => {\n        return fetchKafkaTopics({\n          getTopics: (...args) => api.getTopics(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { Plan } from \"ui\";\nimport type { CloudProviderInfoWithRegionsCapacity } from \"../fetchers\";\nimport { fetchProviderRegionSizes } from \"../fetchers\";\nimport { providerQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useProviderRegionSizesFetchQuery() {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n\n  return (\n    provider: CloudProviderInfoWithRegionsCapacity,\n    region: string,\n    plan: Plan\n  ) => {\n    const kms = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: providerQueries.limits[\n        plan === \"standard\" ? \"standard\" : \"developer\"\n      ]({ provider: provider.id, region }),\n      queryFn: () =>\n        fetchProviderRegionSizes(\n          (...args) => kms.getInstanceTypesByCloudProviderAndRegion(...args),\n          provider,\n          region,\n          plan\n        ),\n      staleTime: Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { Plan } from \"ui\";\nimport { fetchProvidersWithRegions } from \"../fetchers\";\nimport { providerQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useProvidersWithRegionsFetchQuery() {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n\n  return (plan: Plan) => {\n    const kms = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: providerQueries.list({ plan }),\n      queryFn: () =>\n        fetchProvidersWithRegions(\n          (...args) => kms.getCloudProviders(...args),\n          (...args) => kms.getCloudProviderRegions(...args),\n          plan\n        ),\n      staleTime: Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchOrganization, fetchStandardQuota } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useStandardQuotaFetchQuery(skipCache = false) {\n  const queryClient = useQueryClient();\n  const { account } = useApi();\n  const ams = account();\n\n  return async () => {\n    const organization = await queryClient.fetchQuery({\n      queryKey: masQueries.organization(),\n      queryFn: () =>\n        fetchOrganization((...args) =>\n          ams.apiAccountsMgmtV1CurrentAccountGet(...args)\n        ),\n      staleTime: Infinity,\n    });\n    if (!organization) {\n      return Promise.reject(\"Missing organization id\");\n    }\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.available({ organization }),\n      queryFn: () =>\n        fetchStandardQuota(\n          (...args) =>\n            ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(...args),\n          organization\n        ),\n      staleTime: skipCache ? undefined : Infinity,\n    });\n  };\n}\n","import type {\n  ConsumerGroupState,\n  GroupsApi,\n  SortDirection,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { ConsumerGroup } from \"ui\";\nimport type { KafkaConsumerGroupSortableColumn } from \"../types\";\n\nexport type FetchKafkaConsumerGroupsParams = {\n  getConsumerGroups: GroupsApi[\"getConsumerGroups\"];\n  page?: number;\n  perPage?: number;\n  sort?: KafkaConsumerGroupSortableColumn;\n  direction?: SortDirection;\n  topic?: string;\n  groupId?: string;\n};\n\nexport async function fetchKafkaConsumerGroups({\n  getConsumerGroups,\n  page,\n  perPage,\n  topic,\n  groupId,\n  sort,\n  direction,\n}: FetchKafkaConsumerGroupsParams): Promise<{\n  groups: ConsumerGroup[];\n  count: number;\n}> {\n  const response = await getConsumerGroups(\n    undefined,\n    undefined,\n    perPage,\n    page,\n    topic,\n    groupId,\n    direction,\n    sort\n  );\n  const groups = (response.data.items || []).map<ConsumerGroup>((t) => ({\n    consumerGroupId: t.groupId || \"\",\n    activeMembers: t.metrics?.activeConsumers || 0,\n    partitionsWithLag: t.metrics?.laggingPartitions || 0,\n    state: stateMapping[t.state as ConsumerGroupState],\n  }));\n  const count = response.data.total;\n  return { count, groups };\n}\n\nconst stateMapping: { [state in ConsumerGroupState]: ConsumerGroup[\"state\"] } =\n  {\n    DEAD: \"Dead\",\n    EMPTY: \"Empty\",\n    STABLE: \"Stable\",\n    UNKNOWN: \"Unknown\",\n    COMPLETING_REBALANCE: \"CompletingRebalance\",\n    PREPARING_REBALANCE: \"PreparingRebalance\",\n  };\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { GetKafkaInstanceMetricsResponse, TimeSeriesMetrics } from \"ui\";\nimport type { SafeRangeQuery } from \"../types\";\n\nexport type FetchKafkaInstanceMetricsProps = {\n  getMetricsByRangeQuery: DefaultApi[\"getMetricsByRangeQuery\"];\n  id: string;\n  duration: number;\n  interval: number;\n};\n\nexport async function fetchKafkaInstanceMetrics({\n  getMetricsByRangeQuery,\n  id,\n  duration,\n  interval,\n}: FetchKafkaInstanceMetricsProps): Promise<GetKafkaInstanceMetricsResponse> {\n  const response = await getMetricsByRangeQuery(id, duration, interval, [\n    \"kubelet_volume_stats_used_bytes\",\n    \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\",\n    \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\",\n  ]);\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(\n        m.values &&\n        m.metric &&\n        m.metric.topic &&\n        m.metric.name &&\n        m.metric.persistentvolumeclaim &&\n        m.metric.persistentvolumeclaim.includes(\"zookeeper\")\n      )\n  ) as SafeRangeQuery[];\n\n  const usedDiskSpaceMetrics: TimeSeriesMetrics = {};\n  const connectionAttemptRateMetrics: TimeSeriesMetrics = {};\n  const clientConnectionsMetrics: TimeSeriesMetrics = {};\n\n  const connectionRateLimit = 0,\n    connectionsLimit = 0,\n    diskSpaceLimit = 0;\n\n  safeMetrics.forEach((m) => {\n    const { __name__: name } = m.metric;\n\n    function addAggregatedValuesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    switch (name) {\n      case \"kubelet_volume_stats_used_bytes\":\n        addAggregatedValuesTo(usedDiskSpaceMetrics);\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\":\n        addAggregatedValuesTo(connectionAttemptRateMetrics);\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\":\n        addAggregatedValuesTo(clientConnectionsMetrics);\n        break;\n    }\n  });\n\n  return {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionRateLimit,\n    connectionsLimit,\n  };\n}\n","import type { DefaultApi, KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport type { SimplifiedStatus } from \"ui\";\nimport { SimplifiedStatuses } from \"ui\";\nimport type { KafkaInstanceEnhanced } from \"../transformers/kafkaRequestToKafkaInstanceEnhanched\";\nimport type { KafkaInstancesSortableColumn } from \"../types\";\nimport { valuesToQuery } from \"./valuesToQuery\";\n\nconst uiColumnMapping: {\n  [key in KafkaInstancesSortableColumn]: keyof KafkaRequest;\n} = {\n  name: \"name\",\n  owner: \"owner\",\n  provider: \"cloud_provider\",\n  region: \"region\",\n  createdAt: \"created_at\",\n};\nexport type FetchKafkaInstancesParams = {\n  getKafkas: DefaultApi[\"getKafkas\"];\n  dataMapper: (data: KafkaRequest) => Promise<KafkaInstanceEnhanced>;\n  page: number;\n  perPage: number;\n  name: string[];\n  owner: string[];\n  status: SimplifiedStatus[];\n  sort: KafkaInstancesSortableColumn;\n  direction: \"asc\" | \"desc\";\n};\n\nexport async function fetchKafkaInstances(\n  params: FetchKafkaInstancesParams\n): Promise<{\n  instances: KafkaInstanceEnhanced[];\n  count: number;\n}> {\n  const {\n    name,\n    status,\n    owner,\n    sort,\n    direction,\n    page,\n    perPage,\n    dataMapper,\n    getKafkas,\n  } = params;\n  const search = filtersToSearch(name, owner, status);\n\n  const res = await getKafkas(\n    page.toString(10),\n    perPage.toString(10),\n    sort ? `${uiColumnMapping[sort]} ${direction}` : undefined,\n    search\n  );\n  const rawInstances = res.data.items;\n  const count = res.data.total;\n  const instances = await Promise.all(rawInstances.map(dataMapper));\n  return {\n    instances,\n    count,\n  };\n}\n\nexport function filtersToSearch(\n  name: string[],\n  owner: string[],\n  status: SimplifiedStatus[]\n): string {\n  const querystring = [\n    valuesToQuery(\"name\", name, \"%\"),\n    valuesToQuery(\"owner\", owner, \"%\"),\n    valuesToQuery(\n      \"status\",\n      status.flatMap((s) => SimplifiedStatuses[s]),\n      \"=\"\n    ),\n  ]\n    .filter(Boolean)\n    .map((q) => `(${q!})`)\n    .join(\" and \");\n  return querystring;\n}\n","import type { DefaultApi, InstantQuery } from \"@rhoas/kafka-management-sdk\";\nimport type { NoUndefinedField } from \"../types\";\n\nexport async function fetchKafkaKpiMetrics(\n  getMetricsByInstantQuery: DefaultApi[\"getMetricsByInstantQuery\"],\n  id: string\n) {\n  let topics = 0,\n    topicPartitions = 0,\n    consumerGroups = 0;\n\n  const response = await getMetricsByInstantQuery(id, [\n    \"kafka_topic:kafka_topic_partitions:sum\", // (Number of topic partitions)\n    \"kafka_topic:kafka_topic_partitions:count\", // (Number of topics)\n    \"consumergroup:kafka_consumergroup_members:count\", // (number of consumer groups - note that this metric will appear after a consumer group is created. There should be handled by the UI in a way that the metric isn't visible if no consumer groups are created)\n  ]);\n\n  const safeMetrics: NoUndefinedField<InstantQuery[]> = (response.data.items ||\n    []) as NoUndefinedField<InstantQuery[]>;\n\n  safeMetrics.forEach(({ metric, value }) => {\n    const { __name__: name } = metric;\n\n    switch (name) {\n      case \"kafka_topic:kafka_topic_partitions:sum\":\n        topicPartitions = value;\n        break;\n      case \"kafka_topic:kafka_topic_partitions:count\":\n        topics = value;\n        break;\n      case \"consumergroup:kafka_consumergroup_members:count\":\n        consumerGroups = value;\n        break;\n    }\n  });\n  return {\n    consumerGroups,\n    topicPartitions,\n    topics,\n  };\n}\n","import type {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"@rhoas/app-services-ui-components\";\nimport type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { SafeRangeQuery } from \"../types\";\n\nexport type FetchTopicsMetricsProps = {\n  getMetricsByRangeQuery: DefaultApi[\"getMetricsByRangeQuery\"];\n  id: string;\n  duration: number;\n  interval: number;\n  selectedTopic: string | undefined;\n};\n\nexport async function fetchKafkaTopicMetrics({\n  getMetricsByRangeQuery,\n  id,\n  duration,\n  interval,\n  selectedTopic,\n}: FetchTopicsMetricsProps): Promise<\n  Omit<GetTopicsMetricsResponse, \"kafkaTopics\">\n> {\n  const response = await getMetricsByRangeQuery(id, duration, interval, [\n    \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\",\n    \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\",\n    \"kafka_topic:kafka_log_log_size:sum\",\n    \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\",\n  ]);\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(m.values && m.metric && m.metric.topic && m.metric.name)\n  ) as SafeRangeQuery[];\n\n  // Also filter for metrics about the selectedTopic, if specified\n  const filteredMetrics = safeMetrics.filter((m) =>\n    // filter for metrics for the selectedTopic, if needed\n    selectedTopic !== undefined ? m.metric?.topic === selectedTopic : true\n  );\n\n  // get the unique topics we have metrics for in the selected time range\n  const topics = Array.from(new Set(safeMetrics.map((m) => m.metric.topic)));\n\n  const bytesIncoming: TimeSeriesMetrics = {};\n  const bytesOutgoing: TimeSeriesMetrics = {};\n  const bytesPerPartition: PartitionBytesMetric = {};\n  const incomingMessageRate: TimeSeriesMetrics = {};\n\n  filteredMetrics.forEach((m) => {\n    const { __name__: name, topic } = m.metric;\n\n    function addAggregatedTotalBytesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    function addAggregatePartitionBytes() {\n      const partition = bytesPerPartition[topic] || {};\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (partition[timestamp] = value + (partition[timestamp] || 0))\n      );\n      bytesPerPartition[topic] = partition;\n    }\n\n    switch (name) {\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesIncoming);\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesOutgoing);\n        break;\n      case \"kafka_topic:kafka_log_log_size:sum\":\n        addAggregatePartitionBytes();\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\":\n        addAggregatedTotalBytesTo(incomingMessageRate);\n        break;\n    }\n  });\n\n  return {\n    metricsTopics: topics,\n    bytesOutgoing,\n    bytesIncoming,\n    bytesPerPartition,\n    incomingMessageRate,\n  };\n}\n","import type {\n  SortDirection,\n  Topic,\n  TopicsApi,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { KafkaTopic } from \"ui\";\nimport type { KafkaTopicsSortableColumn } from \"../types\";\n\nexport type FetchKafkaTopicsParams = {\n  getTopics: TopicsApi[\"getTopics\"];\n  page?: number;\n  perPage?: number;\n  sort?: KafkaTopicsSortableColumn;\n  direction?: SortDirection;\n  filter?: string;\n};\n\nexport async function fetchKafkaTopics({\n  getTopics,\n  page,\n  perPage,\n  filter,\n  sort,\n  direction,\n}: FetchKafkaTopicsParams): Promise<{ topics: KafkaTopic[]; count: number }> {\n  const response = await getTopics(\n    undefined,\n    undefined,\n    perPage,\n    filter,\n    page,\n    direction,\n    sort\n  );\n  const topics = (response.data.items || []).map((t: Topic) => ({\n    topic_name: t.name!,\n    partitions: t.partitions?.length || 0,\n    retention_size:\n      t.config?.find(({ key }) => key === \"retention.bytes\")?.value || \"\",\n    retention_time:\n      t.config?.find(({ key }) => key === \"retention.ms\")?.value || \"\",\n  }));\n  const count = response.data.total;\n  return { count, topics };\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\n\nexport async function fetchOrganization(\n  api: AppServicesApi[\"apiAccountsMgmtV1CurrentAccountGet\"]\n) {\n  const account = await api();\n  const orgId = account?.data?.organization?.id;\n  return orgId;\n}\n","import type { Size } from \"@rhoas/app-services-ui-components\";\nimport type {\n  DefaultApi,\n  SupportedKafkaSize,\n} from \"@rhoas/kafka-management-sdk\";\nimport type { Plan } from \"ui\";\nimport type { CloudProviderInfoWithRegionsCapacity } from \"./fetchProvidersWithRegions\";\n\nexport type SizeWithLimits = Size & { trialDurationHours: number };\n\nexport async function fetchProviderRegionSizes(\n  api: DefaultApi[\"getInstanceTypesByCloudProviderAndRegion\"],\n  providerInfo: CloudProviderInfoWithRegionsCapacity,\n  region: string,\n  instanceType: Plan\n) {\n  const regions = providerInfo.regions;\n  const regionInfo = regions.find((r) => r.id === region);\n  const availableSizes =\n    regionInfo?.capacity.flatMap((c) =>\n      c.available_sizes.map((s) => `${c.instance_type}.${s}`)\n    ) || [];\n  const sizes = await api(providerInfo.id, region);\n  if (!sizes?.data?.instance_types) {\n    throw new Error(`No instance_types from backend`);\n  }\n\n  const standardSizes =\n    sizes?.data?.instance_types.find((i) => i.id === instanceType)?.sizes || [];\n\n  return standardSizes.map(\n    apiSizeToComponentSize.bind(\n      undefined,\n      (id) => !availableSizes.includes(`${instanceType}.${id}`)\n    )\n  );\n}\n\n//\n// export async function fetchProviderRegionSizesForPlanStandard (\n//   api: DefaultApi['getInstanceTypesByCloudProviderAndRegion'], providerInfo: CloudProviderInfoWithRegionsCapacity, region: string\n// )  {\n//   return fetchProviderRegionSizes(api, providerInfo, region, \"standard\");\n// };\n//\n// export const fetchProviderRegionSizesForPlanDeveloper = (\n//   api: DefaultApi['getInstanceTypesByCloudProviderAndRegion'], providerInfo: CloudProviderInfoWithRegionsCapacity, region: string\n//\n// ) => {\n//   const { data: standardSizes, isError } = await fetchProviderRegionSizes(\n//     provider,\n//     region,\n//     \"standard\"\n//   );\n//   const { data: developerSizes } = fetchProviderRegionSizes(\n//     provider,\n//     region,\n//     \"developer\"\n//   );\n//   return useQuery({\n//     queryKey: [],\n//     queryFn: () => {\n//       return {\n//         standard:\n//           standardSizes ||\n//           ([\n//             { id: \"1\", displayName: \"1\" },\n//             { id: \"2\", displayName: \"2\" },\n//           ] as StandardSizes),\n//         trial: developerSizes![0],\n//       };\n//     },\n//     enabled: (!!standardSizes || isError) && !!developerSizes,\n//   });\n// };\n\nfunction apiSizeToComponentSize(\n  isDisabled: (id: string) => boolean,\n  apiSize: SupportedKafkaSize\n): SizeWithLimits {\n  const s = apiSize as Required<SupportedKafkaSize>;\n  return {\n    id: s.id,\n    displayName: s.display_name,\n    quota: s.quota_consumed,\n    ingress: (s.ingress_throughput_per_sec.bytes || 0) / 1048576,\n    egress: (s.egress_throughput_per_sec.bytes || 0) / 1048576,\n    storage: Math.round((s.max_data_retention_size.bytes || 0) / 1073741824),\n    connections: s.total_max_connections,\n    connectionRate: s.max_connection_attempts_per_sec,\n    maxPartitions: s.max_partitions,\n    messageSize: (s.max_message_size.bytes || 0) / 1048576,\n    status: s.maturity_status === \"stable\" ? \"stable\" : \"preview\",\n    trialDurationHours: s.lifespan_seconds ? s.lifespan_seconds / 60 / 60 : 0,\n    isDisabled: isDisabled(s.id),\n  };\n}\n","import type {\n  CloudProvider,\n  CloudProviderInfo,\n} from \"@rhoas/app-services-ui-components\";\nimport type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { Plan } from \"ui\";\n\nexport type CloudProviderInfoWithRegionsCapacity = Omit<\n  CloudProviderInfo,\n  \"regions\"\n> & {\n  regions: Awaited<ReturnType<typeof fetchProviderRegions>>;\n};\n\nexport async function fetchProvidersWithRegions(\n  getCloudProviders: DefaultApi[\"getCloudProviders\"],\n  getCloudProviderRegions: DefaultApi[\"getCloudProviderRegions\"],\n  plan: Plan\n) {\n  const res = await getCloudProviders();\n  const allProviders = res?.data?.items || [];\n\n  const providers = await Promise.all(\n    allProviders\n      .filter((p) => p.enabled)\n      .map(async (provider) => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const regions = await fetchProviderRegions(\n          getCloudProviderRegions,\n          provider.id!,\n          plan\n        );\n        const providerInfo: CloudProviderInfoWithRegionsCapacity = {\n          id: provider.id as CloudProvider,\n          displayName: provider.display_name!,\n          regions,\n        };\n        return providerInfo;\n      })\n  );\n  const firstProvider = providers[0];\n  return { providers, defaultProvider: firstProvider?.id };\n}\n\nexport async function fetchProviderRegions(\n  getCloudProviderRegions: DefaultApi[\"getCloudProviderRegions\"],\n  provider: string,\n  instanceType: Plan\n) {\n  const res = await getCloudProviderRegions(provider);\n\n  if (!res?.data?.items) {\n    return Promise.reject(\"Invalid provider\");\n  }\n\n  const regionsForInstance = res.data.items.filter(\n    (region) =>\n      region.enabled &&\n      region.capacity.some((c) => c.instance_type === instanceType)\n  );\n\n  return regionsForInstance.map((r) => {\n    const max_capacity_reached = r.capacity?.some(\n      (c) => c.instance_type === instanceType && c.available_sizes?.length === 0\n    );\n\n    return {\n      id: r.id as CloudProvider,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      displayName: r.display_name!,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      isDisabled: max_capacity_reached,\n      capacity: r.capacity,\n    };\n  });\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport type {\n  MarketPlace,\n  MarketPlaceSubscriptions,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  developerId,\n  isMarketplaceQuota,\n  isStandardQuota,\n  resourceName,\n  standardId,\n} from \"../utilsAndConstants\";\n\nexport type StandardQuota = {\n  hasTrialQuota: boolean;\n  remainingPrepaidQuota: number | undefined;\n  remainingMarketplaceQuota: number | undefined;\n  marketplaceSubscriptions: MarketPlaceSubscriptions[];\n};\nexport const fetchStandardQuota = async (\n  api: AppServicesApi[\"apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet\"],\n  organizationId: string\n) => {\n  const quotaResponse = await api(\n    organizationId,\n    undefined,\n    true,\n    undefined,\n    true\n  );\n  if (quotaResponse.status !== 200) {\n    throw new Error(quotaResponse.statusText);\n  }\n  const standardQuotas = quotaResponse.data.items?.filter((q) =>\n    q.related_resources?.find(\n      (r) => r.resource_name === resourceName && r.product === standardId\n    )\n  );\n\n  const prepaidQuota = standardQuotas?.find(isStandardQuota);\n\n  const marketplaceQuotas = standardQuotas?.some(isMarketplaceQuota)\n    ? standardQuotas?.filter(isMarketplaceQuota)\n    : undefined;\n\n  const hasTrialQuota =\n    (prepaidQuota === undefined &&\n      marketplaceQuotas === undefined &&\n      quotaResponse.data.items?.some((q) =>\n        q.related_resources?.find(\n          (r) => r.resource_name === resourceName && r.product === developerId\n        )\n      )) ||\n    false;\n\n  const remainingPrepaidQuota = prepaidQuota\n    ? prepaidQuota.allowed - prepaidQuota.consumed\n    : undefined;\n  const remainingMarketplaceQuota = marketplaceQuotas\n    ? marketplaceQuotas.reduce((agg, q) => q.allowed - q.consumed + agg, 0)\n    : undefined;\n  const unaggregatedSubscriptions = marketplaceQuotas\n    ?.filter((q) => q.cloud_accounts !== undefined)\n    .flatMap((q) => q.cloud_accounts!);\n  const subscriptionMarketplaces = Array.from(\n    new Set(\n      unaggregatedSubscriptions?.map((s) => s.cloud_provider_id as MarketPlace)\n    )\n  );\n  const marketplaceSubscriptions: MarketPlaceSubscriptions[] =\n    unaggregatedSubscriptions\n      ? subscriptionMarketplaces.map((marketplace) => ({\n          marketplace,\n          subscriptions: unaggregatedSubscriptions\n            .filter((s) => s.cloud_provider_id === marketplace)\n            .map((s) => s.cloud_account_id!),\n        }))\n      : [];\n\n  return {\n    hasTrialQuota,\n    remainingPrepaidQuota,\n    remainingMarketplaceQuota,\n    marketplaceSubscriptions,\n  };\n};\n","export * from \"./fetchKafkaTopics\";\nexport * from \"./fetchOrganization\";\nexport * from \"./fetchStandardQuota\";\nexport * from \"./fetchKafkaInstances\";\nexport * from \"./fetchKafkaKpiMetrics\";\nexport * from \"./fetchKafkaTopicMetrics\";\nexport * from \"./fetchKafkaConsumerGroups\";\nexport * from \"./fetchProviderRegionSizes\";\nexport * from \"./fetchKafkaInstanceMetrics\";\nexport * from \"./fetchProvidersWithRegions\";\n","export function valuesToQuery(\n  field: string,\n  values: string[],\n  comparison: \"%\" | \"=\"\n): string | undefined {\n  return values\n    .map((v) =>\n      comparison === \"%\"\n        ? `${field} like %${v.trim()}%`\n        : `${field} = ${v.trim()}`\n    )\n    .join(\" or \");\n}\n","export * from \"./fetchQueries\";\nexport * from \"./mutations\";\nexport * from \"./queries\";\nexport * from \"./ApiProvider\";\nexport * from \"./types\";\n","export * from \"./useKafkaCreateInstanceMutation\";\nexport * from \"./useKafkaDeleteInstanceMutation\";\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type { CreateKafkaFormData, CreateKafkaInstanceError } from \"ui\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaCreateInstanceMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      instance: CreateKafkaFormData;\n      onSuccess: () => void;\n      onError: (error: CreateKafkaInstanceError) => void;\n    }) {\n      const { instance, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      const kafkaRequest: KafkaRequestPayload = {\n        name: instance.name,\n        cloud_provider: instance.provider,\n        region: instance.region,\n      };\n      kafkaRequest.plan = instance.plan + \".\" + instance.sizeId;\n      kafkaRequest.billing_model =\n        instance.billing === \"prepaid\"\n          ? \"standard\"\n          : instance.billing !== undefined\n          ? \"marketplace\"\n          : null;\n      kafkaRequest.billing_cloud_account_id =\n        instance.billing && instance.billing !== \"prepaid\"\n          ? instance.billing.subscription\n          : null;\n      try {\n        await api.createKafka(true, kafkaRequest);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const { code } = error?.response?.data || {};\n\n          switch (instance.plan) {\n            case \"developer\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                // regardless of the error, let's not give too many details to trial users\n                default:\n                  onError(\"developer-unavailable\");\n                  break;\n              }\n              break;\n\n            case \"standard\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                  onError(\"region-unavailable\");\n                  break;\n\n                case ErrorCodes.INSUFFICIENT_QUOTA:\n                  onError(\"insufficient-quota\");\n                  break;\n\n                default:\n                  console.error(\n                    \"useKafkaCreateInstanceMutation\",\n                    \"createKafka unknown error\",\n                    error\n                  );\n                  onError(\"unknown\");\n              }\n              break;\n          }\n        } else {\n          console.error(\n            \"useKafkaCreateInstanceMutation\",\n            \"createKafka unexpected error\",\n            error\n          );\n          onError(\"unknown\");\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n      },\n    }\n  );\n}\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n} as const;\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaDeleteInstanceMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      id: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { id, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      try {\n        await api.deleteKafkaById(id, true);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n      },\n    }\n  );\n}\n","export * from \"./useKafkaInstance\";\nexport * from \"./useCreateInstance\";\nexport * from \"./useKafkaInstances\";\nexport * from \"./useKafkaInstanceTopics\";\nexport * from \"./useKafkaInstanceTransformer\";\nexport * from \"./useKafkaInstanceConsumerGroups\";\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport type { CreateKafkaInstanceServices } from \"ui\";\nimport { useApi } from \"../useApi\";\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n};\n\n/**\n * Create Kafka instance hook that creates kafka instance\n * @param currentAMSPlan\n * @returns\n */\nexport const useCreateInstance =\n  (): CreateKafkaInstanceServices[\"onCreate\"] => {\n    const { kafkasFleet } = useApi();\n\n    return async (data, onSuccess, onError) => {\n      const apisService = kafkasFleet();\n\n      try {\n        const kafkaRequest = {} as KafkaRequestPayload;\n        kafkaRequest.name = data.name;\n        kafkaRequest.cloud_provider = data.provider;\n        kafkaRequest.region = data.region;\n        kafkaRequest.plan = data.plan + \".\" + data.sizeId;\n        kafkaRequest.billing_model =\n          data.billing === \"prepaid\"\n            ? \"standard\"\n            : data.billing !== undefined\n            ? \"marketplace\"\n            : null;\n        kafkaRequest.billing_cloud_account_id =\n          data.billing && data.billing !== \"prepaid\"\n            ? data.billing.subscription\n            : null;\n        await apisService.createKafka(true, kafkaRequest);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const { code } = error?.response?.data || {};\n\n          switch (data.plan) {\n            case \"developer\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                // regardless of the error, let's not give too many details to trial users\n                default:\n                  onError(\"developer-unavailable\");\n                  break;\n              }\n              break;\n\n            case \"standard\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                  onError(\"region-unavailable\");\n                  break;\n\n                case ErrorCodes.INSUFFICIENT_QUOTA:\n                  onError(\"insufficient-quota\");\n                  break;\n\n                default:\n                  console.error(\n                    \"useAvailableProvidersAndDefault\",\n                    \"createKafka unknown error\",\n                    error\n                  );\n                  onError(\"unknown\");\n              }\n              break;\n          }\n        } else {\n          console.error(\n            \"useAvailableProvidersAndDefault\",\n            \"createKafka unexpected error\",\n            error\n          );\n        }\n      }\n    };\n  };\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport { useKafkaInstanceTransformer } from \"./useKafkaInstanceTransformer\";\n\nexport function useKafkaInstance(id: string | undefined) {\n  const { refetchInterval } = useApiConfiguration();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  const api = kafkasFleet();\n\n  return useQuery({\n    enabled: Boolean(id),\n    queryKey: kafkaQueries.instance.details({ id }),\n    queryFn: async () => {\n      if (!id) {\n        return Promise.reject(\"Invalid Kafka instance id\");\n      }\n      const instance = await api.getKafkaById(id);\n      return dataMapper(instance.data);\n    },\n    refetchInterval,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchKafkaConsumerGroupsParams } from \"../fetchers\";\nimport { fetchKafkaConsumerGroups } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaInstanceConsumerGroups(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchKafkaConsumerGroupsParams,\n    \"getConsumerGroups\"\n  >\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { consumerGroups } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.consumerGroups(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = consumerGroups(params.adminUrl);\n\n      return fetchKafkaConsumerGroups({\n        getConsumerGroups: (...args) => api.getConsumerGroups(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl) && Boolean(params.id),\n    refetchInterval,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchKafkaTopicsParams } from \"../fetchers\";\nimport { fetchKafkaTopics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaInstanceTopics(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchKafkaTopicsParams,\n    \"getTopics\"\n  >\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { topics } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.topics(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = topics(params.adminUrl);\n\n      return fetchKafkaTopics({\n        getTopics: (...args) => api.getTopics(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl) && Boolean(params.id),\n    refetchInterval,\n  });\n}\n","import type { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport {\n  useProviderRegionSizesFetchQuery,\n  useProvidersWithRegionsFetchQuery,\n  useStandardQuotaFetchQuery,\n} from \"../fetchQueries\";\nimport { kafkaRequestToKafkaInstanceEnhanched } from \"../transformers/kafkaRequestToKafkaInstanceEnhanched\";\n\nexport function useKafkaInstanceTransformer() {\n  const getStandardQuotaQuery = useStandardQuotaFetchQuery();\n  const getProvidersInfo = useProvidersWithRegionsFetchQuery();\n  const getProviderRegionsSizes = useProviderRegionSizesFetchQuery();\n\n  return async function kafkaInstanceTransformer(instance: KafkaRequest) {\n    const standardQuota = await getStandardQuotaQuery();\n\n    const providersInfo = await getProvidersInfo(\n      instance.billing_model !== \"standard\" ? \"developer\" : \"standard\"\n    );\n    const providerInfo = providersInfo.providers.find(\n      (p) => p.id === instance.cloud_provider\n    );\n    if (!providerInfo) {\n      return Promise.reject(\"Invalid cloud provider\");\n    }\n    const standardPlanLimitsQuery = getProviderRegionsSizes(\n      providerInfo,\n      instance.region!,\n      \"standard\"\n    );\n    const developerPlanLimitsQuery = getProviderRegionsSizes(\n      providerInfo,\n      instance.region!,\n      \"developer\"\n    );\n    const [standardPlanLimits, developerPlanLimits] = await Promise.all([\n      standardPlanLimitsQuery,\n      developerPlanLimitsQuery,\n    ]);\n    return kafkaRequestToKafkaInstanceEnhanched(\n      instance,\n      standardQuota.marketplaceSubscriptions,\n      developerPlanLimits,\n      standardPlanLimits\n    );\n  };\n}\n","import { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchKafkaInstancesParams } from \"../fetchers\";\nimport { fetchKafkaInstances } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport { useKafkaInstanceTransformer } from \"./useKafkaInstanceTransformer\";\n\nexport function useKafkaInstances(\n  params: Omit<FetchKafkaInstancesParams, \"dataMapper\" | \"getKafkas\">\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const queryClient = useQueryClient();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  const api = kafkasFleet();\n\n  return useQuery({\n    queryKey: kafkaQueries.list(params),\n    queryFn: async () => {\n      const res = await fetchKafkaInstances({\n        getKafkas: (...args) => api.getKafkas(...args),\n        dataMapper,\n        ...params,\n      });\n      res.instances.forEach((i) =>\n        queryClient.setQueryData(kafkaQueries.instance.details({ id: i.id }), i)\n      );\n      return res;\n    },\n    refetchInterval,\n  });\n}\n","import type { FetchKafkaConsumerGroupsParams } from \"./fetchers/fetchKafkaConsumerGroups\";\nimport type { FetchKafkaInstanceMetricsProps } from \"./fetchers/fetchKafkaInstanceMetrics\";\nimport type { FetchKafkaInstancesParams } from \"./fetchers/fetchKafkaInstances\";\nimport type { FetchTopicsMetricsProps } from \"./fetchers/fetchKafkaTopicMetrics\";\nimport type { FetchKafkaTopicsParams } from \"./fetchers/fetchKafkaTopics\";\n\nexport const masQueries = {\n  _root: () => ({ scope: \"mas\" } as const),\n  organization: () =>\n    [{ ...masQueries._root(), entity: \"organization\" }] as const,\n  quota: {\n    _root: () => ({ ...masQueries._root(), entity: \"quota\" } as const),\n    available: (params: { organization?: string }) =>\n      [\n        { ...masQueries.quota._root(), subentity: \"available\", ...params },\n      ] as const,\n    developerAvailability: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"developerAvailability\" },\n      ] as const,\n    standardAvailability: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"standardAvailability\" },\n      ] as const,\n  },\n} as const;\n\nexport const kafkaQueries = {\n  _root: () => ({ scope: \"kafka\" } as const),\n  list: (params: Omit<FetchKafkaInstancesParams, \"dataMapper\" | \"getKafkas\">) =>\n    [\n      {\n        ...kafkaQueries._root(),\n        entity: \"list\",\n      },\n      params,\n    ] as const,\n  instance: {\n    _root: ({ id }: { id?: string }) =>\n      ({ ...kafkaQueries._root(), entity: \"instance\", id } as const),\n    details: (params: { id?: string }) =>\n      [\n        { ...kafkaQueries.instance._root(params), subentity: \"details\" },\n      ] as const,\n    topics: (\n      params: { id?: string; adminUrl?: string } & Omit<\n        FetchKafkaTopicsParams,\n        \"getTopics\"\n      >\n    ) =>\n      [\n        {\n          ...kafkaQueries.instance._root(params),\n          subentity: \"topics\",\n        },\n        params,\n      ] as const,\n    consumerGroups: (\n      params: { id?: string; adminUrl?: string } & Omit<\n        FetchKafkaConsumerGroupsParams,\n        \"getConsumerGroups\"\n      >\n    ) =>\n      [\n        {\n          ...kafkaQueries.instance._root(params),\n          subentity: \"consumer-groups\",\n        },\n        params,\n      ] as const,\n    metrics: {\n      _root: ({ id }: { id: string }) =>\n        ({\n          ...kafkaQueries.instance._root({ id }),\n          subentity: \"metrics\",\n          id,\n        } as const),\n      kpi: (params: { id: string }) =>\n        [{ ...kafkaQueries.instance._root(params), type: \"kpi\" }] as const,\n      instance: ({\n        id,\n        ...params\n      }: Omit<FetchKafkaInstanceMetricsProps, \"getMetricsByRangeQuery\">) =>\n        [\n          {\n            ...kafkaQueries.instance._root({ id }),\n            type: \"instance\",\n          },\n          params,\n        ] as const,\n      topic: ({\n        id,\n        ...params\n      }: Omit<FetchTopicsMetricsProps, \"getMetricsByRangeQuery\">) =>\n        [\n          {\n            ...kafkaQueries.instance._root({ id }),\n            type: \"topic\",\n          },\n          params,\n        ] as const,\n    },\n  },\n} as const;\n\nexport const providerQueries = {\n  _root: () => ({ scope: \"providers\" }),\n  list: (params: { plan?: string }) =>\n    [{ ...providerQueries._root(), entity: \"list\", ...params }] as const,\n  limits: {\n    _root: ({ provider }: { provider?: string }) =>\n      ({\n        ...providerQueries._root(),\n        entity: \"limits\",\n        provider,\n      } as const),\n    standard: ({ provider, region }: { provider?: string; region: string }) => [\n      {\n        ...providerQueries.limits._root({ provider }),\n        plan: \"standard\",\n        region,\n      },\n    ],\n    developer: ({\n      provider,\n      region,\n    }: {\n      provider?: string;\n      region: string;\n    }) => [\n      {\n        ...providerQueries.limits._root({ provider }),\n        plan: \"developer\",\n        region,\n      },\n    ],\n  },\n} as const;\n","import type { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  CloudProvider,\n  KafkaInstance,\n  MarketPlaceSubscriptions,\n  Plan,\n  Status,\n} from \"ui\";\nimport type { SizeWithLimits } from \"../fetchers\";\n\nexport type KafkaInstanceEnhanced = Required<KafkaInstance> & {\n  request: KafkaRequest;\n};\n\nexport function kafkaRequestToKafkaInstanceEnhanched(\n  instance: KafkaRequest,\n  marketplaceSubscriptions: MarketPlaceSubscriptions[],\n  developerPlanInstanceLimits: SizeWithLimits[],\n  standardPlanInstanceLimits: SizeWithLimits[]\n): KafkaInstanceEnhanced {\n  const enhancedInstance: KafkaInstanceEnhanced = {\n    billing: undefined,\n    connectionRate: 0,\n    connections: 0,\n    createdAt: instance.created_at || new Date().toISOString(),\n    egress: 0,\n    expiryDate: instance.expires_at as string | undefined,\n    id: instance.id,\n    ingress: 0,\n    maxPartitions: 0,\n    messageSize: 0,\n    name: instance.name || \"\",\n    owner: instance.owner || \"\",\n    plan: instance.billing_model as Plan,\n    provider: instance.cloud_provider as CloudProvider,\n    region: instance.region || \"\",\n    size: \"1\",\n    status: apiStatusToUIStatus(instance.status || \"\"),\n    storage: 0,\n    updatedAt: instance.updated_at || new Date().toISOString(),\n    request: instance,\n    version: instance.version || \"\",\n    bootstrapUrl: instance.bootstrap_server_host,\n    adminUrl: instance.admin_api_server_url,\n  };\n\n  // update the billing info\n  try {\n    const marketplaceForBilling = marketplaceSubscriptions.find((ms) =>\n      ms.subscriptions.find((s) => s === instance.billing_cloud_account_id)\n    )?.marketplace;\n\n    const billing: KafkaInstanceEnhanced[\"billing\"] =\n      instance.billing_model === \"standard\"\n        ? \"prepaid\"\n        : marketplaceForBilling && instance.billing_cloud_account_id\n        ? {\n            marketplace: marketplaceForBilling,\n            subscription: instance.billing_cloud_account_id,\n          }\n        : undefined;\n    enhancedInstance.billing = billing;\n  } catch (e) {\n    console.warn(\n      \"kafkaRequestToKafkaInstance\",\n      `couldn't retrieve the billing info for`,\n      instance\n    );\n  }\n\n  // update the limits\n  try {\n    const limits =\n      instance.instance_type === \"developer\"\n        ? developerPlanInstanceLimits\n        : standardPlanInstanceLimits;\n    const thisInstanceLimits = limits.find((l) => l.id === instance.size_id);\n    if (thisInstanceLimits) {\n      enhancedInstance.size = thisInstanceLimits.displayName;\n      enhancedInstance.ingress = thisInstanceLimits.ingress;\n      enhancedInstance.egress = thisInstanceLimits.egress;\n      enhancedInstance.storage = instance.max_data_retention_size?.bytes;\n      enhancedInstance.connections = thisInstanceLimits.connections;\n      enhancedInstance.connectionRate = thisInstanceLimits.connectionRate;\n      enhancedInstance.maxPartitions = thisInstanceLimits.maxPartitions;\n      enhancedInstance.messageSize = thisInstanceLimits.messageSize;\n    }\n  } catch (e) {\n    console.warn(\n      \"kafkaRequestToKafkaInstance\",\n      `couldn't retrieve the limits info for`,\n      instance\n    );\n  }\n\n  return enhancedInstance;\n}\n\nfunction apiStatusToUIStatus(status: string): Status {\n  const mapping: { [key: string]: Status } = {\n    accepted: \"accepted\",\n    preparing: \"preparing\",\n    provisioning: \"provisioning\",\n    ready: \"ready\",\n    failed: \"degraded\",\n    deprovision: \"deprovision\",\n    deleting: \"deleting\",\n  };\n  return mapping[status] || \"degraded\";\n}\n","import {\n  ConsumerGroupOrderKey,\n  TopicOrderKey,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { RangeQuery } from \"@rhoas/kafka-management-sdk\";\n\nexport type NoUndefinedField<T> = {\n  [P in keyof T]-?: NoUndefinedField<NonNullable<T[P]>>;\n};\n\nexport type SafeRangeQuery = NoUndefinedField<RangeQuery>;\n\nexport const KafkaInstancesSortableColumns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"provider\",\n  \"region\",\n] as const;\n\nexport type KafkaInstancesSortableColumn =\n  typeof KafkaInstancesSortableColumns[number];\n\nexport const KafkaTopicsSortableColumns = [\n  ...Object.values(TopicOrderKey),\n] as const;\n\nexport type KafkaTopicsSortableColumn =\n  typeof KafkaTopicsSortableColumns[number];\n\nexport const KafkaConsumerGroupSortableColumns = [\n  ...Object.values(ConsumerGroupOrderKey),\n] as const;\n\nexport type KafkaConsumerGroupSortableColumn =\n  typeof KafkaConsumerGroupSortableColumns[number];\n","import { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport { GroupsApi, TopicsApi } from \"@rhoas/kafka-instance-sdk\";\nimport { Configuration, DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport { useCallback } from \"react\";\nimport { useApiConfiguration } from \"./ApiProvider\";\n\nexport const useApi = () => {\n  const { accessToken, basePath } = useApiConfiguration();\n  const kafkasFleet = useCallback(\n    () =>\n      new DefaultApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n  const account = useCallback(\n    () =>\n      new AppServicesApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n  const topics = useCallback(\n    (adminUrl: string) =>\n      new TopicsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n  const consumerGroups = useCallback(\n    (adminUrl: string) =>\n      new GroupsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n  return {\n    kafkasFleet,\n    account,\n    topics,\n    consumerGroups,\n  };\n};\n","import type { QuotaCost } from \"@rhoas/account-management-sdk\";\n\nexport const standardId = \"RHOSAK\" as const;\nexport const developerId = \"RHOSAKTrial\" as const;\nexport const resourceName = \"rhosak\" as const;\n\nexport function isStandardQuota(q: QuotaCost) {\n  return q.related_resources?.find((r) => r.billing_model === \"standard\");\n}\n\nexport function isMarketplaceQuota(q: QuotaCost) {\n  return q.related_resources?.find((r) => r.billing_model === \"marketplace\");\n}\n","import type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport { EmptyStateNoResults, TableView } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { ConsumerGroupEmptyState, ConsumerGroupStateLabel } from \"./components\";\nimport { TableVariant } from \"@patternfly/react-table\";\nimport type { ConsumerGroup, ConsumerGroupField } from \"./types\";\n\nconst Columns: ConsumerGroupField[] = [\n  \"consumerGroupId\",\n  \"activeMembers\",\n  \"partitionsWithLag\",\n  \"state\",\n];\n\nexport type ConsumerGroupsProps<T extends ConsumerGroup> = {\n  consumers: Array<T> | undefined;\n  onDelete: (row: T) => void;\n  onViewPartition: (row: T) => void;\n  onViewResetOffset: (row: T) => void;\n  consumerName: string[];\n  onSearchConsumer: (value: string) => void;\n  onRemoveConsumerChip: (value: string) => void;\n  onRemoveConsumerChips: () => void;\n} & Pick<\n  TableViewProps<T, typeof Columns[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n>;\n\nexport const ConsumerGroups = <T extends ConsumerGroup>({\n  consumers,\n  onDelete,\n  onViewPartition,\n  isColumnSortable,\n  itemCount,\n  onViewResetOffset,\n  onClearAllFilters,\n  page,\n  perPage,\n  onPageChange,\n  consumerName,\n  onSearchConsumer,\n  onRemoveConsumerChip,\n  onRemoveConsumerChips,\n}: ConsumerGroupsProps<T>) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const labels: { [field in ConsumerGroupField]: string } = {\n    consumerGroupId: t(\"consumerGroup.consumer_group_id\"),\n    activeMembers: t(\"consumerGroup.active_members\"),\n    partitionsWithLag: t(\"consumerGroup.partitions_with_lag\"),\n    state: t(\"consumerGroup.state_header\"),\n  };\n\n  const isFiltered = consumerName.length > 0;\n  return (\n    <TableView\n      variant={TableVariant.compact}\n      tableOuiaId={\"card-table\"}\n      ariaLabel={t(\"consumerGroup.consumer_group_list\")}\n      data={consumers}\n      columns={Columns}\n      renderHeader={({ column, Th, key }) => (\n        <Th\n          key={key}\n          info={\n            column === \"partitionsWithLag\"\n              ? {\n                  popover: (\n                    <div>\n                      {t(\"consumerGroup.partitions_with_lag_description\")}\n                    </div>\n                  ),\n                  ariaLabel: \"partitions with lag\",\n                  popoverProps: {\n                    headerContent: t(\"consumerGroup.partitions_with_lag_name\"),\n                  },\n                }\n              : undefined\n          }\n        >\n          {labels[column]}\n        </Th>\n      )}\n      renderCell={({ column, row, Td, key }) => {\n        return (\n          <Td key={key} dataLabel={labels[column]}>\n            {(() => {\n              switch (column) {\n                case \"consumerGroupId\":\n                  return row.consumerGroupId;\n                case \"activeMembers\":\n                  return row.activeMembers;\n                case \"partitionsWithLag\":\n                  return row.partitionsWithLag;\n                case \"state\":\n                  return <ConsumerGroupStateLabel state={row.state} />;\n                default:\n                  return row[column];\n              }\n            })()}\n          </Td>\n        );\n      }}\n      renderActions={({ row, ActionsColumn }) => (\n        <ActionsColumn\n          items={[\n            {\n              title: t(\"consumerGroup.view_partitions_offsets\"),\n              onClick: () => onViewPartition(row),\n            },\n            {\n              title: t(\"consumerGroup.reset_offset\"),\n              onClick: () => onViewResetOffset(row),\n            },\n            {\n              title: t(\"common:delete\"),\n              onClick: () => onDelete(row),\n            },\n          ]}\n        />\n      )}\n      isColumnSortable={isColumnSortable}\n      filters={{\n        [labels.consumerGroupId]: {\n          type: \"search\",\n          chips: consumerName,\n          onSearch: onSearchConsumer,\n          onRemoveChip: onRemoveConsumerChip,\n          onRemoveGroup: onRemoveConsumerChips,\n          validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n          errorMessage: t(\"input_field_invalid_message\"),\n        },\n      }}\n      itemCount={itemCount}\n      page={page}\n      onPageChange={onPageChange}\n      perPage={perPage}\n      isFiltered={isFiltered}\n      onClearAllFilters={onClearAllFilters}\n      emptyStateNoData={<ConsumerGroupEmptyState />}\n      emptyStateNoResults={<EmptyStateNoResults />}\n    />\n  );\n};\n","import {\n  Stack,\n  DescriptionList,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DescriptionListDescription,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, ConsumerGroupState } from \"../types\";\nimport { ConsumerGroupPopover } from \"./ConsumerGroupPopover\";\nimport { ConsumerGroupStateLabel } from \"./ConsumerGroupState\";\n\nexport type ConsumerGroupByKafkaProps = {\n  state: ConsumerGroupState;\n  consumers: Consumer[];\n  activeMembers: number;\n  partitionsWithLag: number;\n};\n\nexport const ConsumerGroupByKafka: FunctionComponent<\n  ConsumerGroupByKafkaProps\n> = ({ state, consumers, activeMembers, partitionsWithLag }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const columnNames = {\n    topic: t(\"topic.topic\"),\n    partition: t(\"consumerGroup.partition\"),\n    consumer_id: t(\"consumerGroup.consumer_id\"),\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n  };\n\n  return (\n    <Stack hasGutter>\n      <DescriptionList\n        columnModifier={{ lg: \"3Col\" }}\n        className={\"pf-m-display-2xl\"}\n      >\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.active_members\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {activeMembers}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.partitions_with_lag\")}{\" \"}\n            <ConsumerGroupPopover\n              title={t(\"consumerGroup.partitions_with_lag_name\")}\n              description={t(\"consumerGroup.partitions_with_lag_description\")}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {partitionsWithLag}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.state_header\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <ConsumerGroupStateLabel state={state} />\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TableComposable\n        aria-label={t(\"consumerGroup.consumer_group_info_table_aria\")}\n        variant={TableVariant.compact}\n      >\n        <Thead noWrap>\n          <Tr>\n            <Th width={20}>{columnNames.topic}</Th>\n            <Th width={20}>{columnNames.partition}</Th>\n            <Th width={20}>{columnNames.consumer_id}</Th>\n            <Th width={20}>{columnNames.current_offset}</Th>\n            <Th width={20}>{columnNames.log_end_offset}</Th>\n            <Th width={20}>{columnNames.offset_lag}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {consumers.map((consumer) => {\n            const {\n              groupId,\n              partition,\n              topic,\n              memberId,\n              offset,\n              logEndOffset,\n              lag,\n            } = consumer;\n            return (\n              <Tr key={consumer.groupId}>\n                <Td dataLabel={columnNames.topic}>{topic}</Td>\n                <Td dataLabel={columnNames.partition}>{partition}</Td>\n                <Td dataLabel={columnNames.consumer_id}>\n                  {memberId ? (\n                    groupId + \"\\n\" + memberId\n                  ) : (\n                    <i>{t(\"consumerGroup.unassigned\")}</i>\n                  )}\n                </Td>\n                <Td dataLabel={columnNames.current_offset}>{offset}</Td>\n                <Td dataLabel={columnNames.log_end_offset}>{logEndOffset}</Td>\n                <Td dataLabel={columnNames.offset_lag}>{lag}</Td>\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </TableComposable>\n    </Stack>\n  );\n};\n","import {\n  Stack,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, ConsumerGroupState } from \"../types\";\nimport { ConsumerGroupPopover } from \"./ConsumerGroupPopover\";\nimport { ConsumerGroupStateLabel } from \"./ConsumerGroupState\";\n\nexport type ConsumerGroupByTopicProps = {\n  state: ConsumerGroupState;\n  consumers: Consumer[];\n  activeMembers: number;\n  partitionsWithLag: number;\n};\n\nexport const ConsumerGroupByTopic: FunctionComponent<\n  ConsumerGroupByTopicProps\n> = ({ state, consumers, activeMembers, partitionsWithLag }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const columnNames = {\n    partition: t(\"consumerGroup.partition\"),\n    consumer_id: t(\"consumerGroup.consumer_id\"),\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n  };\n\n  return (\n    <Stack hasGutter>\n      <DescriptionList\n        columnModifier={{ lg: \"3Col\" }}\n        className={\"pf-m-display-2xl\"}\n      >\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.active_members_for_topic\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {activeMembers}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.partitions_with_lag_for_topic\")}{\" \"}\n            <ConsumerGroupPopover\n              title={t(\"consumerGroup.partitions_with_lag_name\")}\n              description={t(\"consumerGroup.partitions_with_lag_description\")}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {partitionsWithLag}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.state_header\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {<ConsumerGroupStateLabel state={state} />}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TableComposable\n        aria-label={t(\"consumerGroup.consumer_group_info_table_aria\")}\n        variant={TableVariant.compact}\n      >\n        <Thead noWrap>\n          <Tr>\n            <Th key={columnNames.partition} width={20}>\n              {columnNames.partition}\n            </Th>\n            <Th key={columnNames.consumer_id} width={20}>\n              {columnNames.consumer_id}\n            </Th>\n            <Th key={columnNames.current_offset} width={20}>\n              {columnNames.current_offset}\n            </Th>\n            <Th key={columnNames.log_end_offset} width={20}>\n              {columnNames.log_end_offset}\n            </Th>\n            <Th key={columnNames.offset_lag} width={20}>\n              {columnNames.offset_lag}\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {consumers.map((consumer) => {\n            const { groupId, partition, memberId, offset, logEndOffset, lag } =\n              consumer;\n            return (\n              <Tr key={groupId}>\n                <Td dataLabel={columnNames.partition}>{partition}</Td>\n                <Td dataLabel={columnNames.consumer_id}>\n                  {memberId ? (\n                    groupId + \"\\n\" + memberId\n                  ) : (\n                    <i>{t(\"consumerGroup.unassigned\")}</i>\n                  )}{\" \"}\n                </Td>\n                <Td dataLabel={columnNames.current_offset}>{offset}</Td>\n                <Td dataLabel={columnNames.log_end_offset}>{logEndOffset}</Td>\n                <Td dataLabel={columnNames.offset_lag}>{lag}</Td>\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </TableComposable>\n    </Stack>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport type { Consumer, ConsumerGroupState } from \"../types\";\nimport { ConsumerGroupByTopic } from \"./ConsumerGroupByTopic\";\nimport { ConsumerGroupByKafka } from \"./ConsumerGroupByKafka\";\n\nexport type ConsumerGroupDetailsProps = {\n  consumerGroupByTopic: boolean;\n  state: ConsumerGroupState;\n  activeMembers: number;\n  partitionsWithLag: number;\n  consumers: Consumer[];\n};\n\nexport const ConsumerGroupDetails: FunctionComponent<\n  ConsumerGroupDetailsProps\n> = ({\n  consumerGroupByTopic,\n  state,\n  consumers,\n  activeMembers,\n  partitionsWithLag,\n}) => {\n  return (\n    <div>\n      {consumerGroupByTopic ? (\n        <ConsumerGroupByTopic\n          state={state}\n          consumers={consumers}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n        />\n      ) : (\n        <ConsumerGroupByKafka\n          state={state}\n          consumers={consumers}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n        />\n      )}\n    </div>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ConsumerGroupEmptyState: FunctionComponent = () => {\n  const { t } = useTranslation([\"kafka\"]);\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel={\"h1\"} size={TitleSizes.lg}>\n        {t(\"consumerGroup.empty_consumer_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"consumerGroup.empty_consumer_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\n\ntype ConsumerGroupPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ConsumerGroupPopover: FunctionComponent<\n  ConsumerGroupPopoverProps\n> = ({ title, description }) => {\n  return (\n    <Popover\n      aria-label=\"Consumer groups popover\"\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon />\n    </Popover>\n  );\n};\n","import {\n  Alert,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n  TextInput,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../ConsumerGroup.css\";\nimport type { Consumer, OffsetValue } from \"../types\";\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport { TopicSelect } from \"./TopicSelect\";\nimport { OffsetSelect } from \"./OffsetSelect\";\n\nexport type ConsumerRow = Consumer & {\n  selected?: boolean;\n};\n\nexport type ConsumerGroupResetOffsetProps = {\n  isModalOpen: boolean;\n  isDisconnected: boolean;\n  groupId: string;\n  topics: string[];\n  selectedTopic: string;\n  customOffsetValue: string;\n  setcustomOffsetValue: (customOffsetValue: string) => void;\n  consumers: ConsumerRow[];\n  isSelected: boolean;\n  onClickClose: () => void;\n  onClickResetOffset: () => void;\n  onChangeTopic: (value: string) => void;\n  selectedOffset: OffsetValue;\n  onChangeOffsetValue: (value: OffsetValue) => void;\n  confirmCheckboxChecked: boolean;\n  onConfirmationChange: (value: boolean) => void;\n  SelectAllConsumer: (consumer: ConsumerRow[]) => void;\n  onSelectAll: (isSelected: boolean) => void;\n  onSelectRow: (index: number, isSelected: boolean) => void;\n  disableFocusTrap?: boolean;\n  appendTo?: () => HTMLElement;\n};\n\nexport const ConsumerGroupResetOffset: FunctionComponent<\n  ConsumerGroupResetOffsetProps\n> = ({\n  isDisconnected,\n  groupId,\n  topics,\n  customOffsetValue,\n  setcustomOffsetValue,\n  consumers,\n  onClickClose,\n  isModalOpen,\n  onClickResetOffset,\n  selectedTopic,\n  onChangeTopic,\n  selectedOffset,\n  onChangeOffsetValue,\n  confirmCheckboxChecked,\n  onConfirmationChange,\n  isSelected,\n  onSelectAll,\n  onSelectRow,\n  disableFocusTrap,\n  appendTo,\n}) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const isResetOffsetDisabled =\n    !selectedTopic ||\n    !selectedOffset ||\n    !confirmCheckboxChecked ||\n    !isDisconnected ||\n    consumers.filter(({ selected }) => selected === true).length === 0;\n\n  const tableColumns = {\n    partition: t(\"consumerGroup.partition\"),\n    clientId: `${t(\"consumerGroup.client_id\")} + ${t(\n      \"consumerGroup.member_id\"\n    )}`,\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n    new_offset: t(\"consumerGroup.new_offset\"),\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.large}\n      isOpen={isModalOpen}\n      aria-label={t(\"consumerGroup.reset_offset_modal_label\")}\n      title={t(\"consumerGroup.reset_offset\")}\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      disableFocusTrap={disableFocusTrap}\n      appendTo={appendTo}\n      position=\"top\"\n      actions={[\n        <Button\n          variant=\"danger\"\n          key={1}\n          isDisabled={isResetOffsetDisabled}\n          onClick={onClickResetOffset}\n        >\n          {t(\"consumerGroup.reset_offset\")}\n        </Button>,\n        <Button variant=\"link\" key={2} onClick={onClickClose}>\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <Form isHorizontal>\n            <FormGroup\n              className=\"mas--ConsumerGroupResetOffset-form-group--readonly\"\n              label={t(\"consumerGroup.reset_offset_consumer_group_label\")}\n              fieldId=\"consumer-group-input\"\n            >\n              <TextInput\n                isReadOnly\n                type=\"text\"\n                name={t(\"consumerGroup.reset_offset_consumer_group_label\")}\n                id={\"consumer-group-input\"}\n                value={groupId}\n              />\n            </FormGroup>\n            {isDisconnected && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_topic_label\")}\n                fieldId=\"topic-select\"\n              >\n                <TopicSelect\n                  value={selectedTopic}\n                  topics={topics}\n                  onChange={onChangeTopic}\n                />\n              </FormGroup>\n            )}\n            {isDisconnected && selectedTopic && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_new_offset_label\")}\n                fieldId=\"offset-select\"\n              >\n                <OffsetSelect\n                  value={selectedOffset}\n                  onChange={onChangeOffsetValue}\n                />\n              </FormGroup>\n            )}\n            {isDisconnected && selectedTopic && selectedOffset === \"absolute\" && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_custom_offset_label\")}\n                fieldId=\"custom-offset-input\"\n              >\n                <TextInput\n                  id=\"custom-offset-input\"\n                  name={t(\"consumerGroup.reset_offset_custom_offset_label\")}\n                  value={customOffsetValue}\n                  onChange={setcustomOffsetValue}\n                  type=\"number\"\n                />\n              </FormGroup>\n            )}\n          </Form>\n        </StackItem>\n        <StackItem>\n          {!isDisconnected && (\n            <Alert\n              className=\"modal-alert\"\n              variant=\"danger\"\n              isInline\n              title={t(\"consumerGroup.reset_offset_connected_alert_title\")}\n            >\n              <p>{t(\"consumerGroup.reset_offset_connected_alert_body\")}</p>\n            </Alert>\n          )}\n        </StackItem>\n        <StackItem>\n          {isDisconnected && consumers.length > 0 && selectedTopic && (\n            <Stack hasGutter>\n              <StackItem>\n                <TableComposable\n                  aria-label={t(\"consumerGroup.reset_offset_selectable table\")}\n                  className=\"consumer-table\"\n                >\n                  <Thead>\n                    <Tr>\n                      <Th\n                        select={{\n                          isSelected: isSelected,\n                          onSelect: (_event, isSelected) =>\n                            onSelectAll(isSelected),\n                        }}\n                      />\n                      <Th>{tableColumns.partition}</Th>\n                      <Th>{tableColumns.clientId}</Th>\n                      <Th>{tableColumns.current_offset}</Th>\n                      <Th>{tableColumns.log_end_offset}</Th>\n                      <Th>{tableColumns.offset_lag}</Th>\n                      <Th>{tableColumns.new_offset}</Th>\n                    </Tr>\n                  </Thead>\n                  <Tbody>\n                    {consumers.map((consumer, index) => {\n                      return (\n                        <Tr key={index}>\n                          <Td\n                            select={{\n                              rowIndex: index,\n                              isSelected: isSelected,\n                              onSelect: (_event) =>\n                                onSelectRow(index, isSelected),\n                            }}\n                          />\n                          <Td dataLabel={tableColumns.partition}>\n                            {consumer.partition}\n                          </Td>\n                          <Td dataLabel={tableColumns.clientId}>\n                            {String(consumer.groupId)}\n                            {String(consumer.memberId)}\n                          </Td>\n                          <Td dataLabel={tableColumns.current_offset}>\n                            {consumer.offset}\n                          </Td>\n                          <Td dataLabel={tableColumns.log_end_offset}>\n                            {consumer.logEndOffset}\n                          </Td>\n                          <Td dataLabel={tableColumns.offset_lag}>\n                            {consumer.lag}\n                          </Td>\n                          <Td dataLabel={tableColumns.offset_lag}>\n                            {consumer.selected && selectedOffset\n                              ? selectedOffset === \"absolute\"\n                                ? customOffsetValue\n                                : selectedOffset\n                              : \"-\"}\n                          </Td>\n                        </Tr>\n                      );\n                    })}\n                  </Tbody>\n                </TableComposable>\n              </StackItem>\n              <StackItem>\n                <Checkbox\n                  label={t(\"consumerGroup.reset_offset_accept\")}\n                  id=\"resetoffset-checkbox\"\n                  isChecked={confirmCheckboxChecked}\n                  onChange={onConfirmationChange}\n                />\n              </StackItem>\n            </Stack>\n          )}\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { ConsumerGroupState } from \"../types\";\n\nexport type ConsumerGroupStateLabelProps = {\n  state: ConsumerGroupState;\n};\n\nexport const ConsumerGroupStateLabel: FunctionComponent<\n  ConsumerGroupStateLabelProps\n> = ({ state }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  switch (state) {\n    case \"Stable\":\n      return t(\"consumerGroup.state.stable\");\n    case \"Empty\":\n      return t(\"consumerGroup.state.empty\");\n    case \"Dead\":\n      return t(\"consumerGroup.state.dead\");\n    case \"CompletingRebalance\":\n      return t(\"consumerGroup.state.completing_rebalance\");\n    case \"PreparingRebalance\":\n      return t(\"consumerGroup.state.preparing_rebalance\");\n    case \"Unknown\":\n      return t(\"consumerGroup.state.unknown\");\n    default:\n      return null;\n  }\n};\n","import {\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  Toolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarItem,\n  ToolbarToggleGroup,\n} from \"@patternfly/react-core\";\nimport { FilterIcon, SearchIcon } from \"@patternfly/react-icons\";\nimport { Pagination } from \"@rhoas/app-services-ui-components\";\nimport type { PaginationProps } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type ConsumerGroupToolbarProps = {\n  onSearch: (value: string) => void;\n} & PaginationProps;\n\nexport const ConsumerGroupToolbar: FunctionComponent<\n  ConsumerGroupToolbarProps\n> = ({ onSearch, page, perPage, itemCount, onChange }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const [value, setValue] = useState<string>(\"\");\n\n  const canSearch = value.length !== 0;\n\n  const [search, setSearch] = useState<string>(\"\");\n\n  const onClickSearch = useCallback(() => {\n    if (canSearch) {\n      onSearch(value);\n      setSearch(value);\n      setValue(\"\");\n    }\n  }, [onSearch, value, canSearch]);\n\n  const onDeleteChip = () => {\n    setSearch(\"\");\n  };\n\n  const onClear = () => {\n    setSearch(\"\");\n  };\n\n  return (\n    <Toolbar clearAllFilters={onClear}>\n      <ToolbarContent>\n        <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n          <ToolbarFilter\n            categoryName={\"\"}\n            chips={search ? [search] : []}\n            deleteChip={onDeleteChip}\n          >\n            <InputGroup>\n              <TextInput\n                name=\"searchConsumerGroups\"\n                id=\"search-consumer-groups-input\"\n                type=\"search\"\n                aria-label={t(\"consumerGroup.consumer_group_search_input\")}\n                placeholder={t(\"common:search_button_label\")}\n                value={value}\n                onChange={setValue}\n              />\n              <Button\n                isDisabled={!canSearch}\n                variant={ButtonVariant.control}\n                aria-label={t(\"consumerGroup.consumer_group_search\")}\n                onClick={onClickSearch}\n              >\n                <SearchIcon />\n              </Button>\n            </InputGroup>\n          </ToolbarFilter>\n        </ToolbarToggleGroup>\n        <ToolbarItem variant=\"pagination\" alignment={{ default: \"alignRight\" }}>\n          <Pagination\n            itemCount={itemCount}\n            page={page}\n            perPage={perPage}\n            onChange={onChange}\n          />\n        </ToolbarItem>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n","import { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { OffsetValue } from \"../types\";\n\nexport type OffsetSelectProps = {\n  value: OffsetValue;\n  onChange: (value: OffsetValue) => void;\n};\n\nexport const OffsetSelect: FunctionComponent<OffsetSelectProps> = ({\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const offsetValueOption: { [key in OffsetValue]: string } = {\n    absolute: t(\"consumerGroup.offset.absolute\"),\n    latest: t(\"consumerGroup.offset.latest\"),\n    earliest: t(\"consumerGroup.offset.earliest\"),\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChange(selection as OffsetValue);\n    setIsOpen(false);\n  };\n\n  const makeOptions = () => {\n    return Object.entries(offsetValueOption).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <Select\n      aira-label={t(\"consumerGroup.reset_offset_new_offset_label\")}\n      toggleAriaLabel={t(\"consumerGroup.reset_offset_new_offset_label\")}\n      id={\"offset-select\"}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      variant={SelectVariant.single}\n      isOpen={isOpen}\n      placeholderText={t(\"consumerGroup.select_offset\")}\n      selections={value}\n      menuAppendTo={\"parent\"}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type TopicSelectProps = {\n  value: string;\n  topics: string[];\n  onChange: (topic: string) => void;\n};\n\nexport const TopicSelect: FunctionComponent<TopicSelectProps> = ({\n  topics,\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, topic) => {\n    onChange(topic as string);\n    setIsOpen(false);\n  };\n\n  return (\n    <Select\n      aira-label={t(\"consumerGroup.reset_offset_topic_label\")}\n      toggleAriaLabel={t(\"consumerGroup.reset_offset_topic_label\")}\n      id={\"topic-select\"}\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      selections={value}\n      placeholderText={t(\"consumerGroup.select_topic\")}\n      menuAppendTo={\"parent\"}\n    >\n      {topics.map((topic) => (\n        <SelectOption key={topic}>{topic}</SelectOption>\n      ))}\n    </Select>\n  );\n};\n","export * from \"./ConsumerGroupDetails\";\nexport * from \"./ConsumerGroupPopover\";\nexport * from \"./ConsumerGroupByKafka\";\nexport * from \"./ConsumerGroupByTopic\";\nexport * from \"./ConsumerGroupState\";\nexport * from \"./ConsumerGroupToolbar\";\nexport * from \"./ConsumerGroupEmptyState\";\nexport * from \"./ConsumerGroupResetOffset\";\n","export * from \"./components\";\nexport * from \"./types\";\nexport * from \"./ConsumerGroups\";\n","import {\n  Level,\n  LevelItem,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const ControlPlaneHeader: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n\n  return (\n    <PageSection\n      variant={PageSectionVariants.light}\n      hasShadowBottom={true}\n      stickyOnBreakpoint={{ default: \"top\" }}\n    >\n      <Level>\n        <LevelItem>\n          <TextContent>\n            <Text component=\"h1\">{t(\"kafka:table.title\")}</Text>\n          </TextContent>\n        </LevelItem>\n      </Level>\n    </PageSection>\n  );\n};\n","import {\n  Alert,\n  Button,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\nimport { OutlinedClockIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nimport { CreateKafkaInstanceProvider } from \"./machines/CreateKafkaInstanceProvider\";\n\nimport \"./CreateKafkaInstance.css\";\nimport { LoadingForm } from \"./LoadingForm\";\nimport { useCreateKafkaInstance } from \"./machines\";\nimport { StandardInstanceForm } from \"./StandardInstanceForm\";\nimport { TrialInstanceForm } from \"./TrialInstanceForm\";\nimport type { CreateKafkaInstanceServices } from \"./machines\";\nimport { ModalAlertsLoading, ModalAlertsSystemUnavailable } from \"./components\";\n\nexport type CreateKafkaInstanceProps = ConnectedCreateKafkaInstanceProps &\n  CreateKafkaInstanceServices;\nexport const CreateKafkaInstance: FunctionComponent<\n  CreateKafkaInstanceProps\n> = ({\n  checkStandardQuota,\n  checkDeveloperAvailability,\n  fetchProvidersWithRegions,\n  getStandardSizes,\n  getTrialSizes,\n  onCreate,\n  ...props\n}) =>\n  props.isModalOpen ? (\n    <CreateKafkaInstanceProvider\n      checkStandardQuota={checkStandardQuota}\n      checkDeveloperAvailability={checkDeveloperAvailability}\n      fetchProvidersWithRegions={fetchProvidersWithRegions}\n      getStandardSizes={getStandardSizes}\n      getTrialSizes={getTrialSizes}\n      onCreate={onCreate}\n    >\n      <ConnectedCreateKafkaInstance {...props} />\n    </CreateKafkaInstanceProvider>\n  ) : null;\n\nexport type ConnectedCreateKafkaInstanceProps = {\n  /**\n   *\n   * Flag to show the modal\n   */\n  isModalOpen: boolean;\n\n  /**\n   * Set this to `true` on Storybook when there are multiple modals open at a time.\n   */\n  disableFocusTrap?: boolean;\n  /**\n   * The parent container to append the modal to. Defaults to document.body\n   */\n  appendTo?: () => HTMLElement;\n\n  /**\n   * A callback for when the cancel or close button are clicked.\n   */\n  onCancel: () => void;\n  onClickQuickStart: () => void;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickKafkaOverview: () => void;\n  subscriptionOptionsHref: string;\n};\nexport const ConnectedCreateKafkaInstance: VoidFunctionComponent<\n  ConnectedCreateKafkaInstanceProps\n> = ({\n  isModalOpen,\n  appendTo,\n  onClickQuickStart,\n  onCancel,\n  disableFocusTrap,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickKafkaOverview,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const { isLoading, isStandardPlan, isTrialPlan, isSaving } =\n    useCreateKafkaInstance();\n\n  const FORM_ID = \"create_kafka_instance_form\";\n\n  return (\n    <Modal\n      id=\"modalCreateKafka\"\n      variant={ModalVariant.large}\n      title={t(\"create_instance_title\")}\n      disableFocusTrap={disableFocusTrap}\n      isOpen={isModalOpen}\n      ouiaId=\"modal-create-kafka\"\n      onClose={onCancel}\n      appendTo={appendTo}\n      position=\"top\"\n      footer={\n        <Stack hasGutter={true}>\n          <StackItem>\n            <Alert\n              className=\"mas--CreateKafkaInstance__creationTimeAlert\"\n              customIcon={<OutlinedClockIcon />}\n              variant=\"info\"\n              isInline\n              isPlain\n              title={t(\"instance_creation_time_alert\")}\n            />\n          </StackItem>\n          <StackItem>\n            <Button\n              key=\"submit\"\n              variant=\"primary\"\n              type=\"submit\"\n              form={FORM_ID}\n              spinnerAriaValueText={t(\"common:submitting_request\")}\n              isDisabled={isLoading || isSaving}\n              isLoading={isSaving}\n              data-testid=\"modalCreateKafka-buttonSubmit\"\n              ouiaId=\"button-create\"\n            >\n              {t(\"create_instance\")}\n            </Button>\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              onClick={onCancel}\n              data-testid=\"modalCreateKafka-buttonCancel\"\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      {(() => {\n        switch (true) {\n          case isLoading:\n            return (\n              <>\n                <ModalAlertsLoading />\n                <LoadingForm\n                  onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                  onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                  onClickQuickStart={onClickQuickStart}\n                />\n              </>\n            );\n          case isStandardPlan:\n            return (\n              <StandardInstanceForm\n                formId={FORM_ID}\n                onClickContactUs={onClickContactUs}\n                onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                onClickQuickStart={onClickQuickStart}\n                subscriptionOptionsHref={subscriptionOptionsHref}\n              />\n            );\n          case isTrialPlan:\n            return (\n              <TrialInstanceForm\n                formId={FORM_ID}\n                onClickContactUs={onClickContactUs}\n                onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                onClickQuickStart={onClickQuickStart}\n                onClickKafkaOverview={onClickKafkaOverview}\n              />\n            );\n          default:\n            return (\n              <>\n                <ModalAlertsSystemUnavailable />\n                <LoadingForm\n                  onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                  onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                  onClickQuickStart={onClickQuickStart}\n                />\n              </>\n            );\n        }\n      })()}\n    </Modal>\n  );\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { FieldSizeProps } from \"./components\";\nimport {\n  FieldAZ,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldInstanceName,\n  FieldSize,\n  InstanceInfoSkeleton,\n} from \"./components\";\n\nexport type LoadingFormProps = {\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n};\n\nexport const LoadingForm: VoidFunctionComponent<LoadingFormProps> = ({\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n}) => {\n  return (\n    <>\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <Form onSubmit={() => false}>\n            <DisabledFieldInstanceName />\n            <DisabledFieldCloudProvider />\n            <DisabledFieldCloudRegion />\n            <DisabledFieldAZ />\n            <DisabledFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          <InstanceInfoSkeleton\n            isTrial={false}\n            onClickQuickStart={onClickQuickStart}\n          />\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const DisabledFieldInstanceName: VoidFunctionComponent = () => {\n  return (\n    <FieldInstanceName\n      value={\"\"}\n      validity={\"valid\"}\n      isDisabled={true}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldCloudProvider: VoidFunctionComponent = () => {\n  return (\n    <FieldCloudProvider\n      isValid={true}\n      providers={[]}\n      value={undefined}\n      isDisabled={true}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldCloudRegion: VoidFunctionComponent = () => {\n  return (\n    <FieldCloudRegion\n      validity={\"valid\"}\n      regions={undefined}\n      value={undefined}\n      isDisabled={true}\n      isSizeUnavailable={false}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldAZ: VoidFunctionComponent = () => {\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={true}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  return (\n    <FieldSize\n      value={1}\n      sizes={undefined}\n      //TODO remainingQuota={capabilities.remainingQuota || 0}\n      remainingQuota={0}\n      isDisabled={true}\n      isLoading={true}\n      isError={false}\n      isLoadingError={false}\n      validity={\"disabled\"}\n      onChange={() => false}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { FormEvent, VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { CloudProvider, MarketPlace } from \"../../types\";\nimport type {\n  FieldInstanceNameProps,\n  FieldSizeProps,\n  InstanceInfoProps,\n} from \"./components\";\nimport {\n  FieldAZ,\n  FieldBillingTiles,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldInstanceName,\n  FieldSize,\n  FormAlerts,\n  InstanceInfo,\n  InstanceInfoSkeleton,\n  ModalAlertsStandardPlan,\n} from \"./components\";\nimport { useStandardPlanMachine } from \"./machines\";\n\nexport type StandardInstanceFormProps = {\n  formId: string;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n  subscriptionOptionsHref: string;\n};\n\nexport const StandardInstanceForm: VoidFunctionComponent<\n  StandardInstanceFormProps\n> = ({\n  formId,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n  subscriptionOptionsHref,\n}) => {\n  const {\n    isBillingSelectionRequired,\n    isBillingSingleMarketplace,\n    capabilities,\n    selectedSize,\n    billingType,\n    error,\n    onCreate,\n  } = useStandardPlanMachine();\n\n  const onSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      onCreate();\n    },\n    [onCreate]\n  );\n\n  const instanceInfoBilling: InstanceInfoProps[\"billing\"] = (() => {\n    if (!isBillingSelectionRequired) {\n      if (isBillingSingleMarketplace === false) {\n        return {\n          value: \"prepaid\",\n          subscriptionOptionsHref,\n          type: billingType,\n        };\n      } else {\n        return {\n          value: isBillingSingleMarketplace,\n          subscriptionOptionsHref,\n          type: billingType,\n        };\n      }\n    }\n    return undefined;\n  })();\n\n  return (\n    <>\n      <ModalAlertsStandardPlan\n        instanceAvailability={capabilities.instanceAvailability}\n        onClickContactUs={onClickContactUs}\n      />\n\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <FormAlerts error={error} onClickContactUS={onClickContactUs} />\n          <Form onSubmit={onSubmit} id={formId}>\n            <ConnectedFieldInstanceName />\n            <ConnectedFieldCloudProvider />\n            <ConnectedFieldCloudRegion />\n            <ConnectedFieldAZ />\n            <ConnectedFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n            {isBillingSelectionRequired && (\n              <ConnectedBillingTiles\n                subscriptionOptionsHref={subscriptionOptionsHref}\n              />\n            )}\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          {selectedSize === undefined ? (\n            <InstanceInfoSkeleton\n              isTrial={false}\n              onClickQuickStart={onClickQuickStart}\n            />\n          ) : (\n            <InstanceInfo\n              isTrial={false}\n              trialDurationInHours={undefined}\n              ingress={selectedSize.ingress}\n              egress={selectedSize.egress}\n              storage={selectedSize.storage}\n              maxPartitions={selectedSize.maxPartitions}\n              connections={selectedSize.connections}\n              connectionRate={selectedSize.connectionRate}\n              messageSize={selectedSize.messageSize}\n              onClickQuickStart={onClickQuickStart}\n              streamingUnits={selectedSize.displayName}\n              billing={instanceInfoBilling}\n            />\n          )}\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const ConnectedFieldInstanceName: VoidFunctionComponent = () => {\n  const {\n    form,\n    isNameTaken,\n    isNameInvalid,\n    isNameEmpty,\n    isNameError,\n    isFormEnabled,\n    setName,\n  } = useStandardPlanMachine();\n\n  const validity: FieldInstanceNameProps[\"validity\"] = (() => {\n    if (isNameTaken) {\n      return \"taken\";\n    } else if (isNameInvalid) {\n      return \"invalid\";\n    } else if (isNameEmpty && isNameError) {\n      return \"required\";\n    }\n    return \"valid\";\n  })();\n\n  return (\n    <FieldInstanceName\n      value={form.name || \"\"}\n      validity={validity}\n      isDisabled={!isFormEnabled}\n      onChange={setName}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudProvider: VoidFunctionComponent = () => {\n  const {\n    form,\n    capabilities,\n    isProviderError,\n    isFormEnabled,\n    isBillingSingleMarketplace,\n    setProvider,\n  } = useStandardPlanMachine();\n\n  const providers =\n    isBillingSingleMarketplace &&\n    isBillingSingleMarketplace.marketplace !== \"rhm\"\n      ? capabilities.availableProviders.map((p) => ({\n          ...p,\n          isDisabled: p.id !== isBillingSingleMarketplace.marketplace,\n        }))\n      : capabilities.availableProviders;\n\n  return (\n    <FieldCloudProvider\n      isValid={!isProviderError}\n      providers={providers}\n      value={form.provider}\n      isDisabled={!isFormEnabled}\n      onChange={setProvider}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudRegion: VoidFunctionComponent = () => {\n  const {\n    form,\n    selectedProvider,\n    selectedSize,\n    isRegionError,\n    isFormEnabled,\n    capabilities,\n    error,\n    setRegion,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldCloudRegion\n      validity={\n        isRegionError\n          ? \"required\"\n          : error === \"region-unavailable\" ||\n            capabilities.instanceAvailability === \"regions-unavailable\"\n          ? \"region-unavailable\"\n          : \"valid\"\n      }\n      regions={selectedProvider?.regions}\n      value={form.region}\n      isDisabled={!isFormEnabled}\n      isSizeUnavailable={selectedSize?.isDisabled || false}\n      onChange={setRegion}\n    />\n  );\n};\n\nexport const ConnectedFieldAZ: VoidFunctionComponent = () => {\n  const { isFormEnabled } = useStandardPlanMachine();\n\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={!isFormEnabled}\n      onChange={() => false} // AZ is defined by the backend, we just visualize the value here\n    />\n  );\n};\n\nexport const ConnectedFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  const {\n    form,\n    sizes,\n    isSizeOverQuota,\n    isSizeDisabled,\n    isSizeError,\n    isSizeLoadingError,\n    isBillingSelectionRequired,\n    isFormEnabled,\n    isLoadingSizes,\n    isLoading,\n    setSize,\n    remainingQuota,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldSize\n      value={form.size?.quota}\n      sizes={sizes}\n      remainingQuota={isBillingSelectionRequired ? undefined : remainingQuota}\n      isDisabled={!isFormEnabled || sizes === undefined}\n      isLoading={isLoading || isLoadingSizes}\n      isError={isSizeError}\n      isLoadingError={isSizeLoadingError}\n      validity={\n        isSizeOverQuota ? \"out-of-quota\" : isSizeDisabled ? \"required\" : \"valid\"\n      }\n      onChange={setSize}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n\nfunction isMarketplaceDisabled(\n  marketplace: MarketPlace,\n  selectedProvider: CloudProvider | undefined\n) {\n  if (marketplace === \"rhm\") {\n    return false;\n  } else if (selectedProvider) {\n    return marketplace !== selectedProvider;\n  }\n  return false;\n}\n\nexport const ConnectedBillingTiles: VoidFunctionComponent<{\n  subscriptionOptionsHref: string;\n}> = ({ subscriptionOptionsHref }) => {\n  const {\n    form,\n    capabilities,\n    selectedBilling,\n    billingType,\n    isBillingPrepaidAvailable,\n    isSizeOverQuota,\n    isBillingError,\n    isBillingPrepaidOverQuota,\n    isBillingMarketplaceOverQuota,\n    setBillingPrepaid,\n    setBillingSubscription,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldBillingTiles\n      value={\n        selectedBilling === \"prepaid\"\n          ? \"prepaid\"\n          : selectedBilling?.subscription\n      }\n      hasPrepaid={isBillingPrepaidAvailable}\n      subscriptions={capabilities.marketplaceSubscriptions.flatMap((mq) =>\n        mq.subscriptions.map((subscription) => ({\n          marketplace: mq.marketplace,\n          subscription,\n          isDisabled: isMarketplaceDisabled(mq.marketplace, form.provider),\n        }))\n      )}\n      isPrepaidOverQuota={isBillingPrepaidOverQuota}\n      prepaidQuota={capabilities.remainingPrepaidQuota || 0} // we can default to 0 here just to make TS happy, we will have the info here\n      isMarketplaceOverQuota={isBillingMarketplaceOverQuota}\n      marketplaceQuota={capabilities.remainingMarketplaceQuota || 0} // we can default to 0 here just to make TS happy, we will have the info here\n      onPrepaid={setBillingPrepaid}\n      onSubscription={setBillingSubscription}\n      isValid={!isSizeOverQuota && !isBillingError}\n      billingType={billingType}\n      subscriptionOptionsHref={subscriptionOptionsHref}\n    />\n  );\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { FormEvent, VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { FieldSizeProps } from \"./components\";\nimport {\n  ModalAlertsTrialPlan,\n  FormAlerts,\n  InstanceInfoSkeleton,\n  InstanceInfo,\n  FieldInstanceName,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldAZ,\n  FieldSize,\n} from \"./components\";\nimport { useTrialPlanMachine } from \"./machines\";\n\nexport type TrialInstanceFormProps = {\n  formId: string;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n  onClickKafkaOverview: () => void;\n};\n\nexport const TrialInstanceForm: VoidFunctionComponent<\n  TrialInstanceFormProps\n> = ({\n  formId,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n  onClickKafkaOverview,\n}) => {\n  const { capabilities, error, isLoadingSizes, sizes, onCreate } =\n    useTrialPlanMachine();\n\n  const onSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      onCreate();\n    },\n    [onCreate]\n  );\n\n  return (\n    <>\n      <ModalAlertsTrialPlan\n        instanceAvailability={capabilities.instanceAvailability}\n        trialDurationInHours={sizes?.trial.trialDurationHours}\n        onClickKafkaOverview={onClickKafkaOverview}\n      />\n\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <FormAlerts error={error} onClickContactUS={onClickContactUs} />\n          <Form onSubmit={onSubmit} id={formId}>\n            <ConnectedFieldInstanceName />\n            <ConnectedFieldCloudProvider />\n            <ConnectedFieldCloudRegion />\n            <ConnectedFieldAZ />\n            <ConnectedFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          {isLoadingSizes || !sizes ? (\n            <InstanceInfoSkeleton\n              isTrial={false}\n              onClickQuickStart={onClickQuickStart}\n            />\n          ) : (\n            <InstanceInfo\n              isTrial={true}\n              trialDurationInHours={sizes.trial.trialDurationHours}\n              ingress={sizes.trial.ingress}\n              egress={sizes.trial.egress}\n              storage={sizes.trial.storage}\n              maxPartitions={sizes.trial.maxPartitions}\n              connections={sizes.trial.connections}\n              connectionRate={sizes.trial.connectionRate}\n              messageSize={sizes.trial.messageSize}\n              onClickQuickStart={onClickQuickStart}\n              streamingUnits={sizes.trial.displayName}\n              billing={undefined}\n            />\n          )}\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const ConnectedFieldInstanceName: VoidFunctionComponent = () => {\n  const {\n    form,\n    isNameTaken,\n    isNameInvalid,\n    isNameEmpty,\n    isNameError,\n    isFormEnabled,\n    setName,\n  } = useTrialPlanMachine();\n\n  return (\n    <FieldInstanceName\n      value={form.name || \"\"}\n      validity={\n        isNameTaken\n          ? \"taken\"\n          : isNameInvalid\n          ? \"invalid\"\n          : isNameEmpty && isNameError\n          ? \"required\"\n          : \"valid\"\n      }\n      isDisabled={!isFormEnabled}\n      onChange={setName}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudProvider: VoidFunctionComponent = () => {\n  const { form, capabilities, isProviderError, isFormEnabled, setProvider } =\n    useTrialPlanMachine();\n\n  return (\n    <FieldCloudProvider\n      isValid={!isProviderError}\n      providers={capabilities.availableProviders || []}\n      value={form.provider}\n      isDisabled={!isFormEnabled}\n      onChange={setProvider}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudRegion: VoidFunctionComponent = () => {\n  const {\n    form,\n    selectedProvider,\n    isRegionError,\n    isFormEnabled,\n    error,\n    setRegion,\n  } = useTrialPlanMachine();\n\n  return (\n    <FieldCloudRegion\n      validity={\n        isRegionError\n          ? \"required\"\n          : error === \"region-unavailable\"\n          ? \"region-unavailable\"\n          : \"valid\"\n      }\n      regions={selectedProvider?.regions}\n      value={form.region}\n      isDisabled={!isFormEnabled}\n      isSizeUnavailable={false}\n      onChange={setRegion}\n    />\n  );\n};\n\nexport const ConnectedFieldAZ: VoidFunctionComponent = () => {\n  const { isFormEnabled } = useTrialPlanMachine();\n\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"single\"}\n      value={\"single\"}\n      isDisabled={!isFormEnabled}\n      onChange={() => false} // AZ is defined by the backend, we just visualize the value here\n    />\n  );\n};\n\nexport const ConnectedFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  const { sizes, isSizeError, isSizeLoadingError, isLoadingSizes, isLoading } =\n    useTrialPlanMachine();\n\n  return (\n    <FieldSize\n      value={1}\n      sizes={sizes?.standard}\n      remainingQuota={undefined}\n      isDisabled={true}\n      isLoading={isLoading || isLoadingSizes}\n      isError={isSizeError}\n      isLoadingError={isSizeLoadingError}\n      validity={\"developer\"}\n      onChange={() => false} // for trial instances users can't change the size. This will never get fired\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { Link } from \"react-router-dom\";\n\nexport type BillingHelpProps = {\n  type: \"rh-only\" | \"external-marketplaces\";\n  subscriptionOptionsHref: string;\n};\n\nexport const BillingHelp: VoidFunctionComponent<BillingHelpProps> = ({\n  type,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <Popover\n      aria-label={t(\"billing.field_label\")}\n      headerContent={t(\"billing.field_label\")}\n      bodyContent={\n        <Trans\n          i18nKey={\n            type === \"rh-only\"\n              ? \"billing.field_popover_rh_only\"\n              : \"billing.field_popover_external_marketplace\"\n          }\n          ns={\"create-kafka-instance\"}\n          components={[<Link to={subscriptionOptionsHref} />]}\n        />\n      }\n    >\n      <OutlinedQuestionCircleIcon />\n    </Popover>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Gallery,\n  GalleryItem,\n  HelperText,\n  HelperTextItem,\n  Tile,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { AWSLogo, AzureLogo, GCPLogo, RedhatLogo } from \"../../Logos\";\nimport type { MarketPlace } from \"../../../types\";\n\nexport type BillingTilesProps = {\n  value: \"prepaid\" | string | undefined;\n  hasPrepaid: boolean;\n  subscriptions: {\n    marketplace: MarketPlace;\n    subscription: string;\n    isDisabled: boolean;\n  }[];\n  isPrepaidOverQuota: boolean;\n  prepaidQuota: number;\n  isMarketplaceOverQuota: boolean;\n  marketplaceQuota: number;\n  onPrepaid: () => void;\n  onSubscription: (marketplace: MarketPlace, subscription: string) => void;\n  validated?: SelectProps[\"validated\"];\n};\nexport const BillingTiles: VoidFunctionComponent<BillingTilesProps> = ({\n  value,\n  hasPrepaid,\n  subscriptions,\n  isPrepaidOverQuota,\n  prepaidQuota,\n  isMarketplaceOverQuota,\n  marketplaceQuota,\n  onPrepaid,\n  onSubscription,\n  validated,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const marketplaces: { [key in MarketPlace]: string } = {\n    aws: t(\"billing.marketplace_aws\"),\n    azure: t(\"billing.marketplace_azure\"),\n    gcp: t(\"billing.marketplace_gcp\"),\n    rhm: t(\"billing.marketplace_rh\"),\n  };\n  return (\n    <>\n      <Flex\n        role=\"listbox\"\n        aria-label={t(\"select_billing\")}\n        direction={{ default: \"column\", md: \"row\" }}\n      >\n        {hasPrepaid && (\n          <Flex\n            flex={{ default: \"flex_1\" }}\n            direction={{ default: \"column\" }}\n            spaceItems={{ default: \"spaceItemsSm\" }}\n          >\n            <span className=\"pf-c-form__label\">\n              <span className=\"pf-c-form__label-text\">\n                {t(\"billing.prepaid\")}\n              </span>\n            </span>\n            <FlexItem flex={{ default: \"flex_1\" }}>\n              <Tile\n                className={\"pf-u-w-100\"}\n                title={t(\"billing.prepaid_option\")}\n                icon={tiles[\"rhm\"]}\n                isDisabled={isPrepaidOverQuota}\n                isStacked={true}\n                isSelected={value === \"prepaid\"}\n                onClick={onPrepaid}\n              >\n                &nbsp;\n              </Tile>\n            </FlexItem>\n            {isPrepaidOverQuota && prepaidQuota > 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.prepaid_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {isPrepaidOverQuota && prepaidQuota === 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.prepaid_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </Flex>\n        )}\n        {subscriptions.length > 0 && (\n          <Flex\n            flex={{ default: \"flex_1\" }}\n            direction={{ default: \"column\" }}\n            spaceItems={{ default: \"spaceItemsSm\" }}\n          >\n            {hasPrepaid && (\n              <span className=\"pf-c-form__label\">\n                <span className=\"pf-c-form__label-text\">\n                  {t(\"billing.marketplace\")}\n                </span>\n              </span>\n            )}\n            <Gallery hasGutter={true}>\n              {subscriptions.map(\n                ({ marketplace, subscription, isDisabled }) => (\n                  <GalleryItem key={`tile-${subscription}`}>\n                    <Tile\n                      className={\"pf-u-w-100\"}\n                      title={marketplaces[marketplace]}\n                      icon={tiles[marketplace]}\n                      isStacked={true}\n                      isSelected={value === subscription}\n                      isDisabled={isDisabled || isMarketplaceOverQuota}\n                      onClick={() => onSubscription(marketplace, subscription)}\n                    >\n                      {subscription}\n                    </Tile>\n                  </GalleryItem>\n                )\n              )}\n            </Gallery>\n            {isMarketplaceOverQuota && marketplaceQuota > 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.marketplace_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {isMarketplaceOverQuota && marketplaceQuota === 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.marketplace_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </Flex>\n        )}\n      </Flex>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-billing-option\"\n        name=\"billing\"\n        validated={validated}\n        onChange={(value) => {\n          if (value === \"prepaid\") {\n            onPrepaid();\n          } else {\n            const s = subscriptions.find((s) => s.marketplace === value);\n            if (s) {\n              onSubscription(s.marketplace, s.subscription);\n            }\n          }\n        }}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_billing\")}\n          />,\n          hasPrepaid ? (\n            <FormSelectOption\n              key={\"prepaid\"}\n              value={\"prepaid\"}\n              label={`prepaid`}\n            />\n          ) : null,\n          subscriptions.map(({ marketplace, subscription, isDisabled }) => {\n            return (\n              <FormSelectOption\n                key={`select-option-${subscription}`}\n                value={subscription}\n                label={`${marketplace} - ${subscription}`}\n                isDisabled={isDisabled}\n              />\n            );\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n\nconst tiles: { [id in MarketPlace]: JSX.Element } = {\n  aws: <AWSLogo />,\n  gcp: <GCPLogo />,\n  azure: <AzureLogo />,\n  rhm: <RedhatLogo />,\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Skeleton,\n  Tile,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { AWSLogo, AzureLogo, GCPLogo } from \"../../Logos\";\nimport type { CloudProvider } from \"../../../types\";\nimport type { CloudProviderInfo } from \"../types\";\n\nexport type CloudProvidersTilesProps = {\n  providers: (CloudProviderInfo & { isDisabled?: boolean })[];\n  value: CloudProvider | undefined;\n  onChange: (provider: CloudProvider) => void;\n  isDisabled: boolean;\n  validated?: SelectProps[\"validated\"];\n};\nexport const CloudProvidersTiles: VoidFunctionComponent<\n  CloudProvidersTilesProps\n> = ({ providers, value, onChange, isDisabled, validated }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      {providers.length === 0 && (\n        <Skeleton\n          className=\"pf-m-text-4xl\"\n          screenreaderText=\"Loading contents\"\n        />\n      )}\n      <div role=\"listbox\" aria-label={t(\"select_cloud_provider\")}>\n        <Flex\n          justifyContent={{ default: \"justifyContentSpaceBetween\" }}\n          spacer={{ default: \"spacerNone\" }}\n          spaceItems={{ default: \"spaceItemsXs\" }}\n        >\n          {providers.map(\n            ({ id, displayName, isDisabled: providerDisabled }) => (\n              <FlexItem grow={{ default: \"grow\" }} key={id}>\n                <Tile\n                  className={\"pf-u-w-100\"}\n                  title={displayName}\n                  icon={tiles[id]}\n                  isStacked={true}\n                  isSelected={value === id}\n                  isDisabled={providerDisabled || isDisabled}\n                  onClick={() => onChange(id)}\n                >\n                  {(providerDisabled || isDisabled) &&\n                    t(\"billing.provider_incompatible_with_current_billing\")}\n                  &nbsp;\n                </Tile>\n              </FlexItem>\n            )\n          )}\n        </Flex>\n      </div>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-cloud-provider-option\"\n        name=\"cloud-provider\"\n        isDisabled={isDisabled}\n        validated={validated}\n        onChange={(value) => onChange(value as CloudProvider)}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_cloud_provider\")}\n          />,\n          providers.map(({ id, displayName }, index) => {\n            return (\n              <FormSelectOption key={index} value={id} label={displayName} />\n            );\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n\nconst tiles: { [id in CloudProvider]: JSX.Element } = {\n  aws: <AWSLogo />,\n  gcp: <GCPLogo />,\n  azure: <AzureLogo />,\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { CloudRegion } from \"../../../types\";\nimport type { RegionInfo } from \"../types\";\n\nexport type CloudRegionProps = {\n  value: CloudRegion | undefined;\n  regions: RegionInfo[] | undefined;\n  isDisabled: boolean;\n  isSizeUnavailable: boolean;\n  onChange: (region: string) => void;\n  validated?: SelectProps[\"validated\"];\n  placeholderText: SelectProps[\"placeholderText\"];\n};\n\nexport const CloudRegionSelect: FunctionComponent<CloudRegionProps> = ({\n  value,\n  regions,\n  isDisabled,\n  isSizeUnavailable,\n  validated,\n  onChange,\n  placeholderText,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, value) => {\n    setIsOpen((prevState) => !prevState);\n    onChange(value as string);\n  };\n\n  const makeRegionOptions = regions?.map(\n    ({ id, displayName, isDisabled }, index) => (\n      <SelectOption\n        isDisabled={isDisabled}\n        disabled={isDisabled}\n        key={index}\n        value={id}\n        description={\n          isDisabled\n            ? t(\"create-kafka-instance:temporarily_unavailable\")\n            : undefined\n        }\n      >\n        {displayName}\n      </SelectOption>\n    )\n  );\n\n  return (\n    <Select\n      id=\"form-cloud-region-option\"\n      toggleId=\"form-cloud-region-option\"\n      name=\"form-cloud-region-option\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      validated={validated}\n      selections={value}\n      isOpen={isOpen}\n      isDisabled={isDisabled}\n      aria-describedby={\n        isSizeUnavailable\n          ? \"instance-size-unavailable\"\n          : \"form-cloud-region-option\"\n      }\n      placeholderText={placeholderText}\n    >\n      {makeRegionOptions}\n    </Select>\n  );\n};\n","import {\n  FormGroup,\n  ToggleGroup,\n  ToggleGroupItem,\n  Tooltip,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { AZ } from \"../../../types\";\n\nexport type FieldAZProps = {\n  value: AZ | undefined;\n  validity: \"valid\" | \"required\";\n  options: AZ | \"all\";\n  isDisabled: boolean;\n  onChange: (value: AZ) => void;\n};\nexport const FieldAZ: VoidFunctionComponent<FieldAZProps> = ({\n  value,\n  options,\n  validity,\n  isDisabled,\n  onChange,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const validated = validity !== \"valid\" ? \"error\" : \"default\";\n  const disableAZTooltip = options === \"all\" || isDisabled;\n  const enabledZone = options === \"multi\" ? \"multi\" : \"single\";\n  const trigger = disableAZTooltip ? \"manual\" : undefined;\n  return (\n    <FormGroup\n      label={t(\"availability_zones\")}\n      fieldId=\"availability-zones\"\n      validated={validated}\n      helperTextInvalid={t(\"common:required\")}\n      data-testid={\"az\"}\n    >\n      <ToggleGroup aria-label={t(\"availability_zone_selection\")}>\n        <Tooltip\n          content={t(\"availability_zones_tooltip_message\", {\n            enabledZone,\n          })}\n          trigger={trigger}\n        >\n          <ToggleGroupItem\n            text={t(\"az.single\")}\n            value={\"single\"}\n            isDisabled={isDisabled || options === \"multi\"}\n            buttonId=\"single\"\n            isSelected={value === \"single\"}\n            onChange={() => onChange(\"single\")}\n          />\n        </Tooltip>\n\n        <Tooltip\n          trigger={trigger}\n          content={t(\"availability_zones_tooltip_message\", {\n            enabledZone,\n          })}\n        >\n          <ToggleGroupItem\n            text={t(\"az.multi\")}\n            value=\"multi\"\n            buttonId=\"multi\"\n            isDisabled={isDisabled || options === \"single\"}\n            isSelected={value === \"multi\"}\n            onChange={() => onChange(\"multi\")}\n          />\n        </Tooltip>\n      </ToggleGroup>\n    </FormGroup>\n  );\n};\n","import { FormGroup } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { BillingHelpProps } from \"./BillingHelp\";\nimport { BillingHelp } from \"./BillingHelp\";\nimport type { BillingTilesProps } from \"./BillingTiles\";\nimport { BillingTiles } from \"./BillingTiles\";\n\nexport type FieldBillingTilesProps = {\n  isValid: boolean;\n  billingType: BillingHelpProps[\"type\"];\n  subscriptionOptionsHref: BillingHelpProps[\"subscriptionOptionsHref\"];\n} & Omit<BillingTilesProps, \"validated\">;\nexport const FieldBillingTiles: VoidFunctionComponent<\n  FieldBillingTilesProps\n> = ({\n  value,\n  hasPrepaid,\n  subscriptions,\n  isPrepaidOverQuota,\n  prepaidQuota,\n  isMarketplaceOverQuota,\n  marketplaceQuota,\n  onPrepaid,\n  onSubscription,\n  isValid,\n  billingType,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const validated = !isValid ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={\n        <>\n          {t(\"billing.field_label\")}{\" \"}\n          <BillingHelp\n            type={billingType}\n            subscriptionOptionsHref={subscriptionOptionsHref}\n          />\n        </>\n      }\n      fieldId=\"form-billing-option\"\n      validated={validated}\n      helperTextInvalid={\n        isPrepaidOverQuota || isMarketplaceOverQuota\n          ? \" \"\n          : t(\"common:required\")\n      }\n      isRequired\n    >\n      <BillingTiles\n        value={value}\n        hasPrepaid={hasPrepaid}\n        subscriptions={subscriptions}\n        isPrepaidOverQuota={isPrepaidOverQuota}\n        prepaidQuota={prepaidQuota}\n        isMarketplaceOverQuota={isMarketplaceOverQuota}\n        marketplaceQuota={marketplaceQuota}\n        onPrepaid={onPrepaid}\n        onSubscription={onSubscription}\n        validated={validated}\n      />\n    </FormGroup>\n  );\n};\n","import { FormGroup } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { CloudProvidersTilesProps } from \"./CloudProviderTiles\";\nimport { CloudProvidersTiles } from \"./CloudProviderTiles\";\n\nexport type FieldCloudProviderProps = {\n  isValid: boolean;\n} & Omit<CloudProvidersTilesProps, \"validated\">;\nexport const FieldCloudProvider: VoidFunctionComponent<\n  FieldCloudProviderProps\n> = ({ value, providers, onChange, isDisabled, isValid }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const validated = !isValid ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={t(\"cloud_provider\")}\n      fieldId=\"form-cloud-provider-option\"\n      validated={validated}\n      helperTextInvalid={t(\"common:required\")}\n      isRequired\n    >\n      <CloudProvidersTiles\n        providers={providers}\n        value={value}\n        onChange={onChange}\n        isDisabled={isDisabled}\n        validated={validated}\n      />\n    </FormGroup>\n  );\n};\n","import { FormGroup, HelperText, HelperTextItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { CloudRegionProps } from \"./CloudRegionsSelect\";\nimport { CloudRegionSelect } from \"./CloudRegionsSelect\";\n\nexport type FieldCloudRegionProps = {\n  validity: \"valid\" | \"region-unavailable\" | \"required\";\n} & Omit<CloudRegionProps, \"validated\" | \"placeholderText\">;\nexport const FieldCloudRegion: VoidFunctionComponent<FieldCloudRegionProps> = ({\n  value,\n  regions,\n  onChange,\n  isDisabled,\n  isSizeUnavailable,\n  validity,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const allRegionsUnavailable = regions\n    ? regions.every(({ isDisabled }) => isDisabled === true) ||\n      regions.length === 0\n    : true;\n\n  const disableControl =\n    isDisabled || allRegionsUnavailable || regions?.length === 0;\n\n  const someRegionsUnavailable =\n    !allRegionsUnavailable &&\n    regions?.some(({ isDisabled }) => isDisabled === true);\n\n  const validation =\n    validity !== \"valid\"\n      ? value !== undefined\n        ? \"error\"\n        : \"default\"\n      : \"default\";\n\n  const placeholder =\n    allRegionsUnavailable && regions\n      ? t(\"regions_temporarily_unavailable\")\n      : t(\"select_region\");\n\n  const helperTextInvalid = isDisabled ? undefined : validity ===\n    \"region-unavailable\" ? (\n    <HelperText className={\"pf-c-form__helper-text\"}>\n      <HelperTextItem variant=\"error\" hasIcon>\n        {t(\"form_errors.region_unavailable_message\")}\n      </HelperTextItem>\n    </HelperText>\n  ) : allRegionsUnavailable ? (\n    t(\"all_region_unavailable_helper_text\")\n  ) : (\n    t(\"common:required\")\n  );\n\n  return (\n    <FormGroup\n      data-testid=\"cloudRegion\"\n      label={t(\"cloud_region\")}\n      fieldId=\"form-cloud-region-option\"\n      isRequired\n      validated={validation}\n      helperText={\n        regions && (allRegionsUnavailable || someRegionsUnavailable) ? (\n          <HelperText className={\"pf-c-form__helper-text\"}>\n            <HelperTextItem\n              variant={someRegionsUnavailable ? \"warning\" : \"error\"}\n              hasIcon\n            >\n              {someRegionsUnavailable\n                ? t(\"some_region_unavailable_helper_text\")\n                : t(\"all_region_unavailable_helper_text\")}\n            </HelperTextItem>\n          </HelperText>\n        ) : undefined\n      }\n      helperTextInvalid={helperTextInvalid}\n    >\n      <CloudRegionSelect\n        value={value}\n        regions={regions}\n        onChange={onChange}\n        isDisabled={disableControl}\n        isSizeUnavailable={isSizeUnavailable}\n        validated={validation}\n        placeholderText={placeholder}\n      />\n    </FormGroup>\n  );\n};\n","import { FormGroup, TextInput } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type FieldInstanceNameProps = {\n  value: string;\n  validity: \"valid\" | \"required\" | \"taken\" | \"invalid\";\n  isDisabled: boolean;\n  onChange: (value: string) => void;\n};\nexport const FieldInstanceName: VoidFunctionComponent<\n  FieldInstanceNameProps\n> = ({ value, validity, isDisabled, onChange }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const validation = validity !== \"valid\" ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={t(\"instance_name\")}\n      helperText={t(\"create_instance_name_helper_text\")}\n      helperTextInvalid={\n        validity === \"taken\"\n          ? t(\"create_instance_name_helper_text_name_taken\", { name: value })\n          : validity === \"invalid\"\n          ? t(\"create_instance_name_helper_text\")\n          : t(\"common:required\")\n      }\n      isRequired\n      validated={validation}\n      fieldId=\"form-instance-name\"\n    >\n      <TextInput\n        id=\"form-instance-name\"\n        isRequired\n        validated={validation}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        autoFocus={true}\n        isDisabled={isDisabled}\n      />\n    </FormGroup>\n  );\n};\n","import type { SliderProps } from \"@patternfly/react-core\";\nimport { Grid, GridItem, Skeleton, Slider } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { FormGroupWithPopover } from \"@rhoas/app-services-ui-components\";\nimport type { Size } from \"../../../types\";\nimport { FieldSizeHelperText } from \"./FieldSizeHelperText\";\nimport { FieldSizeHelperTextOverQuota } from \"./FieldSizeHelperTextOverQuota\";\nimport { FieldSizeHelperTextTrial } from \"./FieldSizeHelperTextTrial\";\n\nexport type FieldSizeProps = {\n  value: number | undefined;\n  sizes: Size[] | undefined;\n  remainingQuota: number | undefined;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isError: boolean;\n  isLoadingError: boolean;\n  validity: \"valid\" | \"required\" | \"out-of-quota\" | \"developer\" | \"disabled\";\n  onChange: (size: Size) => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n};\nexport const FieldSize: VoidFunctionComponent<FieldSizeProps> = ({\n  value,\n  sizes,\n  remainingQuota,\n  isDisabled,\n  isLoading,\n  isError,\n  isLoadingError,\n  validity,\n  onChange,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const isRequired = validity !== \"developer\";\n\n  const helperTextTrial = (\n    <FieldSizeHelperTextTrial onClick={onLearnMoreAboutSizes} />\n  );\n\n  if (isLoading || isLoadingError) {\n    return (\n      <FormGroupWithPopover\n        labelHead={t(\"common:size\")}\n        fieldId=\"streaming-size\"\n        fieldLabel={t(\"common:size\")}\n        labelBody={t(\"size_help_content\")}\n        buttonAriaLabel={t(\"size_field_aria\")}\n        isRequired={isRequired}\n        helperText={\n          <Grid sm={6} lg={12} hasGutter data-testid={\"size-loading\"}>\n            <GridItem>\n              <Skeleton width={\"50%\"} fontSize={\"3xl\"} />\n            </GridItem>\n            <GridItem>\n              <Skeleton width={\"40%\"} fontSize={\"sm\"} />\n            </GridItem>\n          </Grid>\n        }\n        validated={isLoadingError ? \"error\" : \"default\"}\n        helperTextInvalid={t(\"sizes_error\")}\n      />\n    );\n  }\n\n  if (sizes === undefined) {\n    return (\n      <FormGroupWithPopover\n        labelHead={t(\"common:size\")}\n        fieldId=\"streaming-size\"\n        fieldLabel={t(\"common:size\")}\n        labelBody={t(\"size_help_content\")}\n        buttonAriaLabel={t(\"size_field_aria\")}\n        isRequired={isRequired}\n        helperText={\n          validity === \"developer\" ? helperTextTrial : t(\"sizes_missing\")\n        }\n      >\n        <div data-testid={\"size-slider\"} />\n      </FormGroupWithPopover>\n    );\n  }\n\n  const valueIndex =\n    validity !== \"developer\"\n      ? sizes.findIndex((size) => size.quota === value)\n      : -1;\n\n  const steps: SliderProps[\"customSteps\"] = sizes.map((s, index) => ({\n    value: index,\n    label: `${s.quota}`,\n  }));\n\n  const isUnavailable = sizes[valueIndex]?.isDisabled;\n\n  const helperText = (\n    <FieldSizeHelperText\n      remainingQuota={remainingQuota}\n      isPreview={sizes[valueIndex]?.status === \"preview\"}\n      isUnavailable={isUnavailable}\n      isError={isError}\n    />\n  );\n  const helperTextOverQuota = remainingQuota && (\n    <FieldSizeHelperTextOverQuota\n      remainingQuota={remainingQuota}\n      onClick={onLearnHowToAddStreamingUnits}\n    />\n  );\n\n  const handleChange = (index: number) => {\n    onChange(sizes[index]);\n  };\n\n  const validation =\n    remainingQuota &&\n    value &&\n    (validity !== \"valid\" || remainingQuota < value) &&\n    validity !== \"developer\" &&\n    isError\n      ? \"error\"\n      : \"default\";\n\n  return (\n    <FormGroupWithPopover\n      labelHead={t(\"common:size\")}\n      fieldId=\"streaming-size\"\n      fieldLabel={t(\"common:size\")}\n      labelBody={t(\"size_help_content\")}\n      buttonAriaLabel={t(\"size_field_aria\")}\n      isRequired={isRequired}\n      validated={validation}\n      helperText={validity !== \"developer\" ? helperText : helperTextTrial}\n      helperTextInvalid={\n        validity === \"out-of-quota\" ? helperTextOverQuota : helperText\n      }\n    >\n      <div className=\"pf-c-input-group pf-u-w-50\">\n        <Slider\n          id=\"streaming-size\"\n          data-testid={\"size-slider\"}\n          max={steps.length - 1}\n          value={valueIndex}\n          showTicks={true}\n          customSteps={steps}\n          className=\"pf-u-w-100\"\n          isDisabled={isDisabled || validity === \"developer\"}\n          onChange={handleChange}\n          aria-describedby={\n            isUnavailable ? \"instance-size-unavailable\" : \"streaming-size\"\n          }\n        />\n        <span className=\"pf-c-input-group__text pf-m-plain pf-u-text-nowrap\">\n          {t(\"streaming_unit\")}\n        </span>\n      </div>\n    </FormGroupWithPopover>\n  );\n};\n","import {\n  Alert,\n  AlertVariant,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { ExternalLink } from \"@rhoas/app-services-ui-components\";\n\nexport const FieldSizeHelperText: VoidFunctionComponent<{\n  remainingQuota: number | undefined;\n  isPreview: boolean;\n  isUnavailable: boolean;\n  isError: boolean;\n}> = ({ remainingQuota, isPreview, isUnavailable, isError }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <HelperText className={\"pf-c-form__helper-text\"}>\n      {remainingQuota && (\n        <HelperTextItem>\n          {t(\"standard_kafka_streaming_unit\", {\n            count: remainingQuota,\n          })}\n        </HelperTextItem>\n      )}\n\n      {isUnavailable && (\n        <Alert\n          id=\"instance-size-unavailable\"\n          aria-live=\"polite\"\n          role={\"alert\"}\n          className=\"pf-u-mb-md pf-u-mt-lg\"\n          variant={isError ? \"danger\" : \"warning\"}\n          title={t(\"size_unavailable_title\")}\n          isInline\n        >\n          {t(\"size_unavailable_message\")}\n        </Alert>\n      )}\n      {isPreview && (\n        <Alert\n          aria-live=\"polite\"\n          role={\"alert\"}\n          className={`pf-u-mb-md ${isUnavailable ? \"\" : \"pf-u-mt-lg\"}`}\n          variant={AlertVariant.info}\n          title={t(\"size_preview_title\")}\n          isInline\n        >\n          <Trans\n            ns={\"create-kafka-instance\"}\n            i18nKey={\"size_preview_message\"}\n            components={[\n              <ExternalLink\n                href={\"https://access.redhat.com/articles/6473891\"}\n                testId={\"size-preview-support-link\"}\n                className={\"pf-u-ml-xs\"}\n              />,\n            ]}\n          />\n        </Alert>\n      )}\n    </HelperText>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const FieldSizeHelperTextOverQuota: VoidFunctionComponent<{\n  remainingQuota: number;\n  onClick: () => void;\n}> = ({ remainingQuota, onClick }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      <HelperText className={\"pf-c-form__helper-text\"}>\n        <HelperTextItem variant=\"error\" hasIcon>\n          {t(\"standard_kafka_streaming_unit\", {\n            count: remainingQuota,\n          })}\n        </HelperTextItem>\n      </HelperText>\n      <HelperText>\n        <HelperTextItem>\n          <Button\n            className=\"pf-c-form__helper-text\"\n            variant={ButtonVariant.link}\n            isInline\n            onClick={onClick}\n          >\n            {t(\"standard_kafka_size_description\")}\n          </Button>\n        </HelperTextItem>\n      </HelperText>\n    </>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const FieldSizeHelperTextTrial: VoidFunctionComponent<{\n  onClick: () => void;\n}> = ({ onClick }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      <HelperText className={\"pf-c-form__helper-text\"}>\n        <HelperTextItem>{t(\"trial_kafka_size_description\")}</HelperTextItem>\n      </HelperText>\n      <HelperText>\n        <HelperTextItem>\n          <Button\n            className=\"pf-c-form__helper-text\"\n            variant={ButtonVariant.link}\n            isInline\n            onClick={onClick}\n          >\n            {t(\"learn_about_sizes\")}\n          </Button>\n        </HelperTextItem>\n      </HelperText>\n    </>\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { CreateKafkaInstanceError } from \"../types\";\n\nexport type FormAlertsProps = {\n  error: CreateKafkaInstanceError | \"form-invalid\" | undefined;\n  onClickContactUS: () => void;\n};\n\nexport const FormAlerts: VoidFunctionComponent<FormAlertsProps> = ({\n  error,\n  onClickContactUS,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup aria-live=\"assertive\">\n      {(() => {\n        switch (error) {\n          case \"form-invalid\":\n          case \"name-taken\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.form_invalid\")}\n                isInline\n              />\n            );\n\n          case \"insufficient-quota\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.out_of_quota_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"form_errors.out_of_quota_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-contact-us\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickContactUS}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"developer-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.trial_unavailable_title\")}\n                isInline\n              >\n                {t(\"form_errors.trial_unavailable_message\")}\n              </Alert>\n            );\n          case \"region-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.region_unavailable_title\")}\n                isInline\n              >\n                {t(\"form_errors.region_unavailable_message\")}\n              </Alert>\n            );\n          case \"unknown\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.unknown_error_title\")}\n                isInline\n              >\n                {t(\"form_errors.unknown_error_message\")}\n              </Alert>\n            );\n        }\n        return null;\n      })()}\n    </AlertGroup>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\n\nimport { ClockIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { MarketplaceSubscription } from \"../../../types\";\nimport type { BillingHelpProps } from \"./BillingHelp\";\nimport { BillingHelp } from \"./BillingHelp\";\n\nexport type InstanceInfoProps = {\n  isTrial: boolean;\n  onClickQuickStart: () => void;\n\n  trialDurationInHours: number | undefined;\n  ingress: number;\n  egress: number;\n  /**\n   * Max storage in GiB\n   */\n  storage: number;\n  maxPartitions: number;\n  connections: number;\n  /**\n   * Max connections/second\n   */\n  connectionRate: number;\n  /**\n   * Message size in MiB\n   */\n  messageSize: number;\n  streamingUnits: string | undefined;\n\n  billing:\n    | ({\n        value: \"prepaid\" | MarketplaceSubscription;\n      } & BillingHelpProps)\n    | undefined;\n};\n\nexport const InstanceInfo: VoidFunctionComponent<InstanceInfoProps> = ({\n  isTrial,\n  trialDurationInHours,\n  ingress,\n  egress,\n  storage,\n  maxPartitions,\n  connections,\n  connectionRate,\n  messageSize,\n  onClickQuickStart,\n  streamingUnits,\n  billing,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <Stack hasGutter data-testid={\"instance-info\"}>\n      <StackItem>\n        <Card isFlat>\n          <CardTitle component=\"h2\">{t(\"instance_information\")}</CardTitle>\n          <CardBody>\n            <DescriptionList isCompact>\n              <DescriptionListGroup>\n                <Grid sm={6} lg={12} hasGutter>\n                  {!isTrial && (\n                    <GridItem data-testid={\"instance-size\"}>\n                      <DescriptionListTerm>\n                        {t(\"common:size\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"stream_unit_value\", { size: streamingUnits })}\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  {isTrial && (\n                    <GridItem>\n                      <DescriptionListTerm>\n                        {t(\"kafka:duration\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        <ClockIcon color=\"var(--pf-global--info-color--100)\" />{\" \"}\n                        {t(\"duration_value\", {\n                          value: trialDurationInHours,\n                        })}\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:ingress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"ingress_value\", {\n                        value: ingress,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:egress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"egress_value\", {\n                        value: egress,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:storage\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"storage_value\", {\n                        value: storage,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:partitions\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"partitions_value\", {\n                        value: maxPartitions,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:client_connections\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"client_connections_value\", {\n                        value: connections,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:connection_rate\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"connection_rate_value\", {\n                        value: connectionRate,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:message_size\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"message_size_value\", {\n                        value: messageSize,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  {billing && (\n                    <GridItem>\n                      <DescriptionListTerm>\n                        {t(\"billing.field_label\")}&nbsp;\n                        <BillingHelp\n                          type={billing.type}\n                          subscriptionOptionsHref={\n                            billing.subscriptionOptionsHref\n                          }\n                        />\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {(() => {\n                          if (billing.value === \"prepaid\") {\n                            return t(\"billing.prepaid_option\");\n                          }\n                          switch (billing.value.marketplace) {\n                            case \"aws\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_aws\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                            case \"gcp\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_gcp\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                            case \"azure\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_azure\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                            case \"rhm\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_rh\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                          }\n                        })()}\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                </Grid>\n              </DescriptionListGroup>\n            </DescriptionList>\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem>\n        <Card isFlat isCompact>\n          <CardTitle component=\"h2\">{t(\"quick_start_guide_title\")}</CardTitle>\n          <CardBody>\n            <Button\n              isSmall\n              isInline\n              variant={ButtonVariant.link}\n              onClick={onClickQuickStart}\n            >\n              {t(\"quick_start_guide_message_exp\")}\n            </Button>\n          </CardBody>\n        </Card>\n      </StackItem>\n    </Stack>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Grid,\n  GridItem,\n  Skeleton,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\nimport { ClockIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type InstanceInfoSkeletonProps = {\n  isTrial: boolean;\n  onClickQuickStart: () => void;\n};\n\nexport const InstanceInfoSkeleton: VoidFunctionComponent<\n  InstanceInfoSkeletonProps\n> = ({ isTrial, onClickQuickStart }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <Stack hasGutter data-testid={\"instance-info\"}>\n      <StackItem>\n        <Card isFlat>\n          <CardTitle component=\"h2\">{t(\"instance_information\")}</CardTitle>\n          <CardBody>\n            <DescriptionList isCompact>\n              <DescriptionListGroup>\n                <Grid sm={6} lg={12} hasGutter>\n                  {!isTrial && (\n                    <GridItem data-testid={\"instance-size\"}>\n                      <DescriptionListTerm>\n                        {t(\"common:size\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        <Skeleton\n                          width=\"35%\"\n                          screenreaderText=\"Loading contents\"\n                        />\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  {isTrial && (\n                    <GridItem>\n                      <DescriptionListTerm>\n                        {t(\"kafka:duration\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        <ClockIcon color=\"var(--pf-global--info-color--100)\" />{\" \"}\n                        <Skeleton\n                          width=\"35%\"\n                          screenreaderText=\"Loading contents\"\n                        />\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:ingress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"75%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:egress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"66%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:storage\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"66%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:partitions\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"50%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:client_connections\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"33%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:connection_rate\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"25%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:message_size\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"55%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                </Grid>\n              </DescriptionListGroup>\n            </DescriptionList>\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem>\n        <Card isFlat isCompact>\n          <CardTitle component=\"h2\">{t(\"quick_start_guide_title\")}</CardTitle>\n          <CardBody>\n            <Button\n              isSmall\n              isInline\n              variant={ButtonVariant.link}\n              onClick={onClickQuickStart}\n            >\n              {t(\"quick_start_guide_message_exp\")}\n            </Button>\n          </CardBody>\n        </Card>\n      </StackItem>\n    </Stack>\n  );\n};\n","import { Alert, AlertVariant, Spinner } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ModalAlertsLoading: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <Alert\n      role={\"alert\"}\n      className=\"pf-u-mb-md\"\n      variant={AlertVariant.info}\n      title={t(\"checking_instance_title\")}\n      isInline\n      customIcon={\n        <Spinner size=\"md\" aria-valuetext={t(\"checking_instance_message\")} />\n      }\n    />\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { StandardPlanAvailability } from \"../types\";\n\nexport type ModalAlertsStandardPlanProps = {\n  instanceAvailability: StandardPlanAvailability;\n  onClickContactUs: () => void;\n};\n\nexport const ModalAlertsStandardPlan: VoidFunctionComponent<\n  ModalAlertsStandardPlanProps\n> = ({ instanceAvailability, onClickContactUs }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup>\n      {(() => {\n        switch (instanceAvailability) {\n          case \"out-of-quota\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.out_of_quota_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"modal_alerts.out_of_quota_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-contact-us\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickContactUs}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"regions-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.instance_unavailable_title\")}\n                isInline\n              >\n                {t(\"modal_alerts.regions_unavailable_message\")}\n              </Alert>\n            );\n          case \"instance-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.instance_unavailable_title\")}\n                isInline\n              >\n                {t(\"modal_alerts.instance_unavailable_message\")}\n              </Alert>\n            );\n          case \"available\":\n            return null;\n        }\n      })()}\n    </AlertGroup>\n  );\n};\n","import { Alert, AlertVariant } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ModalAlertsSystemUnavailable: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <Alert\n      role={\"alert\"}\n      className=\"pf-u-mb-md\"\n      variant={AlertVariant.warning}\n      title={t(\"modal_alerts.system_unavailable_title\")}\n      isInline\n    >\n      {t(\"modal_alerts.system_unavailable_message\")}\n    </Alert>\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  Spinner,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { TrialPlanAvailability } from \"../types\";\n\nexport type ModalAlertsTrialPlanProps = {\n  instanceAvailability: TrialPlanAvailability;\n  trialDurationInHours: number | undefined;\n  onClickKafkaOverview: () => void;\n};\n\nexport const ModalAlertsTrialPlan: VoidFunctionComponent<\n  ModalAlertsTrialPlanProps\n> = ({ instanceAvailability, trialDurationInHours, onClickKafkaOverview }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup>\n      {(() => {\n        switch (instanceAvailability) {\n          case \"unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.trial_unavailable_title\")}\n                isInline\n              >\n                {t(\"modal_alerts.trial_unavailable_message\")}\n              </Alert>\n            );\n          case \"used\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.trial_used_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"modal_alerts.trial_used_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-overview\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickKafkaOverview}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"available\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.info}\n                title={t(\"modal_alerts.trial_available_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey=\"modal_alerts.trial_available_message\"\n                  components={[\n                    <Button\n                      key=\"btn-pricing-purchasing\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickKafkaOverview}\n                      isInline\n                    />,\n                    trialDurationInHours ? <></> : <Spinner size={\"sm\"} />,\n                  ]}\n                  values={{\n                    time: trialDurationInHours,\n                  }}\n                />\n              </Alert>\n            );\n        }\n      })()}\n    </AlertGroup>\n  );\n};\n","export * from \"./BillingHelp\";\nexport * from \"./BillingTiles\";\nexport * from \"./CloudProviderTiles\";\nexport * from \"./CloudRegionsSelect\";\nexport * from \"./FieldAZ\";\nexport * from \"./FieldBillingTiles\";\nexport * from \"./FieldCloudProvider\";\nexport * from \"./FieldCloudRegion\";\nexport * from \"./FieldInstanceName\";\nexport * from \"./FieldSize\";\nexport * from \"./FieldSizeHelperText\";\nexport * from \"./FieldSizeHelperTextOverQuota\";\nexport * from \"./FieldSizeHelperTextTrial\";\nexport * from \"./FormAlerts\";\nexport * from \"./InstanceInfo\";\nexport * from \"./InstanceInfoSkeleton\";\nexport * from \"./ModalAlertsLoading\";\nexport * from \"./ModalAlertsStandardPlan\";\nexport * from \"./ModalAlertsSystemUnavailable\";\nexport * from \"./ModalAlertsTrialPlan\";\n","export * from \"./CreateKafkaInstance\";\nexport type { CreateKafkaInstanceServices } from \"./machines\";\nexport * from \"./types\";\n","import { assign, createMachine, EventFrom, forwardTo, send } from \"xstate\";\nimport { CloudProvider, CloudRegion } from \"../../../types\";\nimport type {\n  CloudProviders,\n  CreateKafkaFormData,\n  CreateKafkaInitializationData,\n  CreateKafkaInstanceError,\n  StandardPlanInitializationData,\n  StandardSizes,\n  TrialPlanInitializationData,\n  TrialSizes,\n} from \"../types\";\nimport {\n  StandardPlanMachine,\n  StandardPlanMachineContext,\n} from \"./StandardPlanMachine\";\nimport { TrialPlanMachine, TrialPlanMachineContext } from \"./TrialPlanMachine\";\n\ntype Quota =\n  | Pick<\n      StandardPlanInitializationData,\n      | \"plan\"\n      | \"remainingPrepaidQuota\"\n      | \"marketplaceSubscriptions\"\n      | \"remainingMarketplaceQuota\"\n      | \"instanceAvailability\"\n    >\n  | Pick<TrialPlanInitializationData, \"plan\" | \"instanceAvailability\">;\n\nexport type CreateKafkaInstanceMachineContext = {\n  quota: Quota | undefined;\n  providers: CloudProviders | undefined;\n  defaultProvider: CloudProvider | undefined;\n  capabilities: CreateKafkaInitializationData | undefined;\n};\n\nconst CreateKafkaInstanceMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMBOYCGAXMBpDAZgNYYCSAdrFhucmAHQA2A9hhAJblT0COArs2r1kACzDIinKAAIqNCBlQRp-QRgDEYVKmap6AB0bYCugLbD02PIRIU5tBizZTeAoaPGSus6uQVKVNwwETgA3ZmRsdmZyAG0ABgBdRFB9Zlh2LGjyFJAAD0QAFniAJnp4gGYAdkKATgAOeqr4qvrCgFYAGhAAT0QANir++n769tqq2sKARhKKjsKAX0XutEwcfGIySl86JlYOLlc1YTEJKR95RWVVanV7fxug6QxQjHYjACNGMFy0jKyMVyBQQxTKlRqDSaLTaXV6iHG8XoVXahX6UyqJVqJX6-WWq0sGxs23seych24twwp08Fwe10CanUzD4WGkzAIlz8DKpf3SmWywKKpXK1TqjWarQ63T6CHa8UK9Hqcw6JUK6palXxIDWVk2th2NDJBxcVJp5289ICVPU5GYXMejOoLzeHww31+SBA-wFQK9ILBoshEph0vhoPaw2hFRKasKbQa0yWKx1hOsWzsu0cJqOZqtEHUfIBgv9iCTU2RkZj03RYsjMoGyvo0yG40KJSq0wq02m9W1uqJGcNDn2zlzQXoEDAoTALH0WkLXp9gJypYQ5cVKP61drNXr4faFSRJVmdUmasjvf7af1JKzo4px3cZy8MinM7nWhd7y+H0yPU0bRdAMIwsBMVBzAHdMDVJbMx0pCcPAtN9p1nZh51Qb83U+P8sB6EJyHCSIVwSZIl35FchQQWpanaeh4y7JN5gqbFZgbOU1WRE96m3Bp+lRKoKmvdZoLvI04MfM0kNfaR3zQjCsN-Rh-3UOTP0wvhYEgItfVXUAQRouiGO7QpmNYkp2NMqolXqWZcSPCpRn6NFhL1YlM3Eh9TUQl8LjU9Cv1eH93VwgD-IUoLsJ+HTKLXQz6NskyzJPCzwwqdppnoWj4niaZ2kPepaiTaZXMHGD73JFwCDALBRAufQdFCdgp1QWB1Aa5gmpa2AXj8aR0CgbIesir5ovI4s-X0staNqegjzGcZ+hKHjeyqdj2jGcplu4moFSqKpStEjyR0qo5qtqkR6sa5qtDarQdD0QxjDMCwRNvY7jXg+hzrq7wOq626CKIqIYlImKSym9cMRsiY0RmaYFXiOFZUKfa5rqRy5mmWp4kGdpDve4dPsfH7Lr+67uvainbvZTCBqG6Q+HIEb3TG1IKIh-Jpsjeh2k7XHOw7QqWnY0Z6mbapakGNVqgR-GUygwnYK8rhVJiBg5BwV63KHZXTqgcHJq5hASlROj+lKCp6kqdUVvYq3Mr3ds0UaPLZgJ9yiY13xHSe8h6Gan57leT12YmvTjaxbd6NM+NDIVdLCkskUFmxyZt2cwYPd1+982kP36FgV4pHUKCAGU+GQOhYHgcbdKoxOjKR0p6nmYXlvt1Fyn6Lt1W7E9Jkc7Pys8vOC6LprVaggBRIDUENiOQSjioY7b+PTNRe2a152NbLy03M7y4exJHcKvwLwOwGDmcF6orFWl5i2Nt7toEYqUWpayrt5SW+z4ls4+H0GBn0wuPYuU80wVyrnAWuYd65rkbvRBUtQ6x9zaKLeMO8WhDB7PEKEtRAFe0nKhdS+cjD+wniXGec9b5rnvuLSMSNErxhmJUUWCMsrKmWngsEuJ5YpjtFOWBqY3qez1jmBCJxpJ0h9jyIItDIYI1SrKSM4tW6dmVB0TsaISoKxvGIiqEinzUnzAo42zRxYojmD3FEtk+bTFFkMZskYcS9mfiwwh4ivpmhAWYkEswGg2RwSxJosxSjrU4tjAePcEY8SKp4wx3ifK0m8CAxSIVlJ4T8QMfic1lrFVaMqeYDjwztjojxHhsYOxW1ssmAkoic6eX1sY7JCBWjsQ7LNKWjRKiLRxmieW9SdYjxOkY0mV1Oo3Vaq0msCoY7FCGOlWMsxkYIkxMiHh7RYyMPjEJPRDSRnExcJYCAso4GxUhrGQY5QMpjCSpedaExkRND5jorEFQ9lDLKifI5XBWmb3DC2TKlRGLVCxBeDoCTR49CoGAUwjNmaulGqHb0HMjYgkciiLK+UUFWRxt2VZbT1mt1GK0Fo-EOx4n2cMn53srgBAvhANmqLw53yaIqfi4xsQdnyu2d+aVqjONbmna2OJuxQpHGPchhdwEGzrhc42MZBXYwmD3CE-F+j21jCMZy8Ytxdlom0CVewpU0FacteUIwcXcpRKiOY7FsYrzBdbeMhUWJt2NcAkhAVQHSsvuaxos19rzUxelFsyiBjdhGC2UYLY4k9l0V8o6RC0lgMnnK85nMMVVPKJo2GbiirsOsrMd1uU1SWzqSImlQDiEfh9WQs18qs2IGWrk4N-9Q0ZUxJZJoSolWVBylYwqnrhDMFMIYGqKLlzNoQNUf+SomFoP2p2Ht1lcZ5Roj2IW4rqXfKAa0o87EaI3JyhtQS2Ntyo2WMsIAA */\n  createMachine(\n    {\n      context: {\n        providers: undefined,\n        defaultProvider: undefined,\n        quota: undefined,\n        capabilities: undefined,\n      },\n      tsTypes: {} as import(\"./CreateKafkaInstanceMachine.typegen\").Typegen0,\n      schema: {\n        context: {} as CreateKafkaInstanceMachineContext,\n        events: {} as\n          | {\n              type: \"standard quota available\";\n              quota: Pick<\n                StandardPlanInitializationData,\n                | \"remainingPrepaidQuota\"\n                | \"remainingMarketplaceQuota\"\n                | \"marketplaceSubscriptions\"\n              >;\n            }\n          | {\n              type: \"out of standard quota\";\n              quota: Pick<\n                StandardPlanInitializationData,\n                \"marketplaceSubscriptions\"\n              >;\n            }\n          | {\n              type: \"no standard quota available\";\n              hasTrialQuota: boolean;\n            }\n          | {\n              type: \"trial available\";\n              capabilities: TrialPlanInitializationData;\n            }\n          | { type: \"trial used\" }\n          | { type: \"developer available\" }\n          | { type: \"developer used\" }\n          | { type: \"developer unavailable\" }\n          | {\n              type: \"providers and regions available\";\n              providers: CloudProviders;\n              defaultProvider: CloudProvider | undefined;\n            }\n          | { type: \"providers or regions unavailable\" }\n          | { type: \"save\"; data: CreateKafkaFormData }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          checkStandardQuota: {\n            data: never;\n          };\n          checkDeveloperAvailability: {\n            data: never;\n          };\n          fetchProvidersWithRegions: {\n            data: never;\n          };\n          standardPlan: {\n            data: StandardPlanMachineContext;\n          };\n          trialPlan: {\n            data: TrialPlanMachineContext;\n          };\n        },\n      },\n      id: \"createKafkaInstance\",\n      initial: \"loading\",\n      states: {\n        loading: {\n          description: \"Fetch the data required to drive the creation flow\",\n          tags: \"loading\",\n          initial: \"quota\",\n          states: {\n            quota: {\n              initial: \"checking standard quota\",\n              states: {\n                \"checking standard quota\": {\n                  invoke: {\n                    src: \"checkStandardQuota\",\n                    onError: [\n                      {\n                        actions: \"setStandardUnavailable\",\n                        target: \"standard\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"standard quota available\": {\n                      actions: \"setStandardAvailable\",\n                      target: \"standard\",\n                    },\n                    \"out of standard quota\": {\n                      actions: \"setStandardOutOfQuota\",\n                      target: \"standard\",\n                    },\n                    \"no standard quota available\": {\n                      target: \"checking developer availability\",\n                    },\n                  },\n                },\n                standard: {\n                  type: \"final\",\n                  always: {\n                    target: \"#createKafkaInstance.loading.fetching providers\",\n                  },\n                },\n                developer: {\n                  type: \"final\",\n                  always: {\n                    target: \"#createKafkaInstance.loading.fetching providers\",\n                  },\n                },\n                \"checking developer availability\": {\n                  invoke: {\n                    src: \"checkDeveloperAvailability\",\n                    onError: [\n                      {\n                        actions: \"setDeveloperUnavailable\",\n                        target: \"developer\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"developer used\": {\n                      actions: \"setDeveloperUsed\",\n                      target: \"developer\",\n                    },\n                    \"developer available\": {\n                      actions: \"setDeveloperAvailable\",\n                      target: \"developer\",\n                    },\n                    \"developer unavailable\": {\n                      actions: \"setDeveloperUnavailable\",\n                      target: \"developer\",\n                    },\n                  },\n                },\n              },\n            },\n            \"fetching providers\": {\n              invoke: {\n                src: \"fetchProvidersWithRegions\",\n                onError: [\n                  {\n                    actions: \"setProvidersOrRegionsUnavailable\",\n                    target: \"ready\",\n                  },\n                ],\n              },\n              on: {\n                \"providers and regions available\": {\n                  actions: \"setProviders\",\n                  target: \"ready\",\n                },\n                \"providers or regions unavailable\": {\n                  actions: \"setProvidersOrRegionsUnavailable\",\n                  target: \"ready\",\n                },\n              },\n            },\n            ready: {\n              type: \"final\",\n              entry: \"setCapabilities\",\n            },\n          },\n          onDone: [\n            {\n              cond: \"standard plan\",\n              target: \"standard plan\",\n            },\n            {\n              cond: \"developer plan\",\n              target: \"developer plan\",\n            },\n            {\n              target: \"system unavailable\",\n            },\n          ],\n        },\n        \"system unavailable\": {\n          tags: \"systemUnavailable\",\n          type: \"final\",\n        },\n        \"standard plan\": {\n          invoke: {\n            src: \"standardPlan\",\n            id: \"standardPlanService\",\n          },\n          tags: \"standardPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToStandardPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        \"developer plan\": {\n          invoke: {\n            src: \"trialPlan\",\n            id: \"trialPlanService\",\n          },\n          tags: \"trialPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToTrialPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        complete: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        setDeveloperAvailable: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"available\" as const,\n          },\n        })),\n        setDeveloperUnavailable: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"unavailable\" as const,\n          },\n        })),\n        setDeveloperUsed: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"used\" as const,\n          },\n        })),\n        setStandardAvailable: assign((_, event) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"available\" as const,\n            remainingPrepaidQuota: event.quota.remainingPrepaidQuota,\n            marketplaceSubscriptions: event.quota.marketplaceSubscriptions,\n            remainingMarketplaceQuota: event.quota.remainingMarketplaceQuota,\n          },\n        })),\n        setStandardOutOfQuota: assign((_, event) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"out-of-quota\" as const,\n            marketplaceSubscriptions: event.quota.marketplaceSubscriptions,\n            remainingMarketplaceQuota: 0,\n            remainingPrepaidQuota: 0,\n          },\n        })),\n        setStandardUnavailable: assign((_) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"instance-unavailable\" as const,\n            marketplaceSubscriptions: [],\n            remainingMarketplaceQuota: 0,\n            remainingPrepaidQuota: 0,\n          },\n        })),\n        setProviders: assign((_, event) => {\n          return {\n            providers: event.providers,\n            defaultProvider: event.defaultProvider,\n          };\n        }),\n        setProvidersOrRegionsUnavailable: assign((context) => {\n          const quota = context.quota!;\n          if (quota.plan === \"standard\") {\n            quota.instanceAvailability = \"regions-unavailable\";\n          } else {\n            quota.instanceAvailability = \"unavailable\";\n          }\n          return {\n            providers: [],\n            quota,\n          };\n        }),\n        setCapabilities: assign((context) => {\n          const { providers, defaultProvider, quota } = context;\n          if (!providers || !quota) {\n            throw new Error(\"unexpected condition, no providers or quota\");\n          }\n          if (quota.plan === \"standard\") {\n            const capabilities: StandardPlanInitializationData = {\n              plan: \"standard\",\n              availableProviders: providers,\n              defaultProvider,\n              instanceAvailability: quota.instanceAvailability,\n              marketplaceSubscriptions: quota.marketplaceSubscriptions,\n              remainingMarketplaceQuota: quota.remainingMarketplaceQuota,\n              remainingPrepaidQuota: quota.remainingPrepaidQuota,\n            };\n            return { capabilities };\n          } else {\n            const capabilities: TrialPlanInitializationData = {\n              plan: \"developer\",\n              availableProviders: providers,\n              defaultProvider,\n              instanceAvailability: quota.instanceAvailability,\n            };\n            return { capabilities };\n          }\n        }),\n        notifyCreateErrorToStandardPlan: forwardTo(\"standardPlanService\"),\n        notifyCreateErrorToTrialPlan: send(\n          (_, event) => {\n            return { type: \"createError\", error: event.error };\n          },\n          { to: \"trialPlanService\" }\n        ),\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n      },\n      guards: {\n        \"standard plan\": (context) => context.quota?.plan === \"standard\",\n        \"developer plan\": (context) => context.quota?.plan === \"developer\",\n      },\n    }\n  );\n\ntype EventTypes = Pick<\n  EventFrom<typeof CreateKafkaInstanceMachine>,\n  \"type\"\n>[\"type\"];\n\ntype EventOptions<E extends EventTypes> = Omit<\n  EventFrom<typeof CreateKafkaInstanceMachine, E>,\n  \"type\"\n>;\n\nexport type CreateKafkaInstanceServices = {\n  checkStandardQuota: (events: {\n    onOutOfQuota: (p: EventOptions<\"out of standard quota\">) => void;\n    onQuotaAvailable: (p: EventOptions<\"standard quota available\">) => void;\n    onNoQuotaAvailable: (\n      p: EventOptions<\"no standard quota available\">\n    ) => void;\n  }) => void;\n  checkDeveloperAvailability: (events: {\n    onUsed: () => void;\n    onAvailable: () => void;\n    onUnavailable: () => void;\n  }) => void;\n  fetchProvidersWithRegions: (\n    plan: \"standard\" | \"developer\",\n    events: {\n      onAvailable: (p: EventOptions<\"providers and regions available\">) => void;\n      onUnavailable: () => void;\n    }\n  ) => void;\n  getStandardSizes: (\n    provider: CloudProvider,\n    region: CloudRegion\n  ) => Promise<StandardSizes>;\n  getTrialSizes: (\n    provider: CloudProvider,\n    region: CloudRegion\n  ) => Promise<TrialSizes>;\n  onCreate: (\n    data: CreateKafkaFormData,\n    onSuccess: () => void,\n    onError: (error: CreateKafkaInstanceError) => void\n  ) => void;\n};\n\nexport function makeCreateKafkaInstanceMachine({\n  checkStandardQuota: checkStandardQuotaCb,\n  checkDeveloperAvailability: checkDeveloperAvailabilityCb,\n  fetchProvidersWithRegions: fetchProvidersWithRegionsCb,\n  getStandardSizes: getStandardSizesCb,\n  getTrialSizes: getTrialSizesCb,\n  onCreate,\n}: CreateKafkaInstanceServices) {\n  return CreateKafkaInstanceMachine.withConfig({\n    services: {\n      checkStandardQuota: () => {\n        return (send) =>\n          checkStandardQuotaCb({\n            onNoQuotaAvailable: ({ hasTrialQuota }) => {\n              send({ type: \"no standard quota available\", hasTrialQuota });\n            },\n            onOutOfQuota: ({ quota }) => {\n              send({ type: \"out of standard quota\", quota });\n            },\n            onQuotaAvailable: ({ quota }) => {\n              send({ type: \"standard quota available\", quota });\n            },\n          });\n      },\n      checkDeveloperAvailability: () => {\n        return (send) => {\n          checkDeveloperAvailabilityCb({\n            onAvailable: () => send(\"developer available\"),\n            onUsed: () => send(\"developer used\"),\n            onUnavailable: () => send(\"developer unavailable\"),\n          });\n        };\n      },\n      fetchProvidersWithRegions: (context) => {\n        const instanceType = context.quota!.plan;\n        return (send) => {\n          fetchProvidersWithRegionsCb(instanceType, {\n            onAvailable: ({ providers, defaultProvider }) =>\n              send({\n                type: \"providers and regions available\",\n                providers,\n                defaultProvider,\n              }),\n            onUnavailable: () => send(\"providers or regions unavailable\"),\n          });\n        };\n      },\n      createInstance: (_context, event) => {\n        const form = event.data;\n\n        return (send) => {\n          function onSuccess() {\n            send(\"createSuccess\");\n          }\n\n          function onError(error: CreateKafkaInstanceError) {\n            send({ type: \"createError\", error });\n          }\n\n          onCreate(\n            {\n              plan: form.plan,\n              name: form.name,\n              provider: form.provider,\n              region: form.region,\n              sizeId: form.sizeId,\n              billing: form.billing,\n            },\n            onSuccess,\n            onError\n          );\n        };\n      },\n      standardPlan: (context) => {\n        return StandardPlanMachine.withContext({\n          capabilities: context.capabilities as StandardPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getStandardSizesCb(form.provider, form.region);\n            },\n          },\n        });\n      },\n      trialPlan: (context) => {\n        return TrialPlanMachine.withContext({\n          capabilities: context.capabilities as TrialPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getTrialSizesCb(form.provider, form.region);\n            },\n          },\n        });\n      },\n    },\n  });\n}\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { CreateKafkaInstanceServices } from \"./CreateKafkaInstanceMachine\";\nimport { makeCreateKafkaInstanceMachine } from \"./CreateKafkaInstanceMachine\";\n\nexport const CreateKafkaInstanceContext = createContext<{\n  service: ActorRefFrom<ReturnType<typeof makeCreateKafkaInstanceMachine>>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport const CreateKafkaInstanceProvider: FunctionComponent<\n  CreateKafkaInstanceServices\n> = ({\n  onCreate,\n  checkStandardQuota,\n  checkDeveloperAvailability,\n  fetchProvidersWithRegions,\n  getStandardSizes,\n  getTrialSizes,\n  children,\n}) => {\n  const service = useInterpret(\n    () =>\n      makeCreateKafkaInstanceMachine({\n        checkStandardQuota,\n        checkDeveloperAvailability,\n        fetchProvidersWithRegions,\n        getStandardSizes,\n        getTrialSizes,\n        onCreate,\n      }),\n    { devTools: true }\n  );\n  return (\n    <CreateKafkaInstanceContext.Provider value={{ service }}>\n      {children}\n    </CreateKafkaInstanceContext.Provider>\n  );\n};\n","import { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CloudProvider,\n  CloudRegion,\n  MarketplaceSubscription,\n  Size,\n} from \"../../../types\";\nimport {\n  CreateKafkaFormData,\n  CreateKafkaInstanceError,\n  StandardPlanInitializationData,\n  StandardSizes,\n} from \"../types\";\nimport { onProviderChange } from \"./shared\";\n\nexport type StandardPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: StandardPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    provider?: CloudProvider;\n    region?: CloudRegion;\n    size?: Size;\n    billing?: MarketplaceSubscription | \"prepaid\";\n  };\n\n  // based on the form.provider selection\n\n  // based on the form.provider and form.region selection\n  sizes: StandardSizes | undefined;\n\n  creationError: CreateKafkaInstanceError | undefined;\n};\n\nexport const StandardPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5SwC4EMB2E0CcIAUAbTAWTQGMALASwzADoA3MHagMwE8BBRta4gEb9qKDgGJEoAA4B7WCOoyMkkAA9EAZgAcARnoBOfQAYdOrQHYArABYNAJnMAaEB0Q6j++reuXL5k3bWWpY65gC+Yc6omNh4RKQUNHT05Eps1FAArqwYUPTRKJmwYuQ4YGgoYCqy8iiKykhqmjp29OYW5hpGQYG+zq4Ilvoa9KZGlh4a5joAbPqBEVHoWLgExBhkVLQMqRjpWTl5bDI4ALZMaITUEGLpYIQQAJIYvFcQ1XIKSirqCKGG9Ds+ksU1m5n0M2s1n0-UQdgmllGdjsOj8QJm7ihixA0RWcXWmySOzSGWytCOJ3Or2uYlgmQEpxEH1q9R+bmMnnMnRR9n8di0RjssIQ-MFo2sgQ81lCGjm2NxsTWCS2yV2+zJuXoxzO+TQjHJJTKFTAAGVMuRyHB4I0al8GqBfoEZlp6FpISYdBp7PprFZhaK9JDAuDproQfLlor4htEtsUiSDuStZTdfrcobypUAKI4HAnZl2tkinn0WVTFFQrS+mb+jEzehzMz84btazjCMxVbRwlxtWkw7Js63aj3J4vS7XAt1b6NR0+etaWXzPmQmsuOGmRGWfmWRchbctGYdvFKmMq4l7ftJu4PWD0DBoU4ManYSoSG2faf2poIIL15GmDo+iLkBdhGOYa4DLMUKjKCljOkYbrDFox5RgSsaqgmGpHCOt73o+YAZsaU6srObj2F45gSn4UIaDY7QaMKMouohVgzNuHhgRoOioV26HnvGl6JpqN4QHeD5PmIElgAAwpQmAwCRM4OuRrS+tRVG2PRi5MexrSojM9iIW2VgSrx+LKkSgnqgOol3lIeb6hALAXG8xrvtIn6kSpgxAm00IosiEEzDMTjriKHj1hMEIoqE1iGeYdjmaePaYUJ2FarhYn0A5MhOSwRGVEp36-J6alUfCml0b6Onhci8UGJxnoSuBGj6Ml3YYReNnXll9mOdcBW5flOByQpVQfiyyk-mVlEabR2mMXVUr0EYgo+qGQHtJYHX8VZfbCTho53mUUD1K51zucVRYHl4hg6EEPisdYTHwkYgLDNKRjsSF0I7ZEOKRnxlm9lhtl9fQp31IVE2eVNJWqXNlULTVS1QXR5iAqidgzCYApui0u0g2lPUiRDUNKGIw2DaN8m5LDIC2l+RazepyNaajTFdJ4OM8hBnRejxAMKsDZ77WDvXHZDYBnZTFMYGN9PXWRfwUWzNEcwxTEGaWvgWA9Gg+P41hE2LoPpeDUvyAAXs+E6voRys+b6gbcW7czQu4tUDA44KrZCsogfyXqm6l3VXmTVvULb9CEDIaAQAaEBKAwtCMDIADWDAixZZskxHR14TbDBxwn5IIGnMjkBU9QANpGAAuk7P6gvQNi6HY2gPVCwr2HRbS6PoVG7lYQyh111kF5lUcx6XifpiweY4DlxAoNq5w5ylE8HRldn5NHJfx-PUAVy8Vc10o9dN5NhYq9uLqBMiwEWBKneWL3vKrSEiHDOBILDOPASO9LZFwPjDZujpQq6wAuxYwoEpj+n-qMT0254KG3ig9QB4sLaS1AbbKmA1nK03GhAtwi4sYeisPMQw9hay4wML6RKhhvrgiFksTsucw6T0OtPPBhF5aK0UjfZmKtcYuh9GBQwGIUS1kNgYT6Ewfqd26Fg82pNC7ZWLrSA+giGZM28j+KiLopjbkhPrcCuhaweGgT4Ux-hZj-XYSeTqQCJaRz4WIIQhAri5F0aQ388E26NnYuCZcEEXp1VxpjAmVYqKsOBEeYWQNOHbzcRou8XifF5BfFdYRBjfjbhGFoAUZjZjLj8L3YpmM1pWHCZVGYONVH5x4XvTJSYlCEA4GaAQsBSjUCkF+YosB7hgHICgbpvTWADIMfo6apU1rWDaO6EKa0goNMqfoPQ-gbC4x9MBQUGgmnhxaRDNpmoHJgCkHwCAXAsATL6dMpQQyRljPuVMkRcNb4+UPIiYpQI9y7ngsBYU3hFlrU9GYjwIRwhJI4VvVxOD3HZTOXkC5Vzri3IgG8-pgzaQvJQPgMo6L3h5LmW4IwUxXS7i9L4KwswtAgr7m3FEQxEq6EhEc7hu9Tn8CyQQvKNM-GkoRqres3FURxPsMiIEvdAUD0XIhHG8VEKOMBnClx2D1G8LEmIZOyQCjZ2SfCzVU87L+NmOMNo7hxjlgaYbd+kT+6aWCG-XcSrOXAKTinfI6BKg+vVXtNRBd-H8hxq6aUxtfQmCkf6WU9YWhgUqiETEEQAYYBkM5a0yAjUarjMwVgnAeB8EEMIUQ-iQjhtCm1WUEofTjGFFYAw3oQj2p9NRTleUWAAEVMgyHQP4gUIxOLQh8FoX2DLwoJtLI9cFWg63TESU4tCxNU4YFxJaAAqg+Xg-A0ACEIHoryZKEBcnep0NtwQuTSIdT7ClrpQoonmC0XQa1F1qucYG5I8tYBbr1MWvdB7-FckWdCYpD1+RujHTCOqVZSwB3GMiRcwxZgerSf6wod5MhrvpIyFAlQSWfI+TNRCpY2pVhCI+jmwohg8zilRA2Y7fSocRXkAoRR8g4ZEPh-x84DBmGlPjLko8IkDAXatLoi54Sd3hPBZjWq2NZsZkekVsGvTAR8C0ICVHwoTBdKYUKLbkSsQhHJ01KY0723NeCRZnpNkmFCqEMdsaUSrWYd0LkgcTOwo-SurltkUwvis8BUY4EMQ-3cA9G9cJcYjFCmtYIQRhhzEOd55dedjm7xTLAPU5IQ0oIbBYDw4x5wojCj7Kw+lZScV8PCT0pmWlZb1JAENCUDDhOs8CYI-pwSIgabFHGHtMGpdFlwz1IlKRWf8LBOzYJHNCmWl0Nura51uu+vV7lUtpL0DAKcAZAxCP5MQEw0YhS2xoJqhOqCiUh3OmleMCEKWl0jdSSx7V4kCL0As28c1asKoa2qlrSd4J6zdG+h0MEXoTbDZSQirVe8tuBeFSzKiDYfT0UMqYkETFNkg4Mu0aY4xFxQ6ezDk1JzNsfZyUVJHKtDYjDavMKTc6vSdyYtd-2Y6jNDEMutkB2VpLmpI+rKqi0mK+E8AbX0QJWXGCStD41Qbyd4WpkQi6Dt-HaHrMubiHmTJukghuaEXhdzPo8BCFbvPcHZRVy5L7k4affJsICbQSrDBAiHlFkUXRFluk7nReYY7nQwpJwr5pG3leEJcojg7x6Kv+yCBYEEtWuT+gep4UdpupEW-l7msPfP+oCqIYLl0wuUaA9vdYta8xDJei6EYy3SKToy3OlTw98MixTBdKFAWLQbBlTK+RO9gR+NfW4vFFCOfP0Zfz9LWWGBPvjm+w7maExkG8lCCCQUtimLSkRPSl3zokNDZD7n6fVum9z7V0BxbDnBQNOdEBSEXMh8CahO4MfzoG-pNnzM5TLMhd-Yi6cyTrgR6CygoiJ7BAhQhRf5vb7wxyt4a7tANidD6bDwPrzY+wOYNiBCc4hTNiPbvppajZoZ7zFyfYQCAbL6lQUQgiGygFuztDwjdYQjiZQiigZ5vqbyn5+bn7wEMCJzZb7rNbUGIAdBeC6DcRVheiSGYFwjAh6DAgmCKJWDaA+CwFkEHz0AADufAdQuQAAYicD2n2mgD9q0HQVMLyNMDjAguFDSnoOMF7L-KoQApPr5mNt-uQZ2jgCYf2qIarBYZDgwZ6EwZ7l0HeozoqkEBYhPiflPrwY3vwVfgEZspyPZohuxN6HIQgBJmAdIdtA5tCMHkQc9rDqahDOQYvPmAEbNJYdyFyIeHYQMM2qtG2GVDaozhoZUVoXPLlgERBLFtoPfAKFCEMCJs0MMG0IlNuCGIuJ-u4elokV4QfMXktl6A0TYQlP6D4DZkBH3uBMPKqtwQkZ4XASimrsRLUdoI1J0IZBSn4HAuEZIf5C1O4EMJ3GwqUaToruHsirykmOmiaPivUAAEpgAACOmQ1AZQBGSm7eKs+WEw6+OuVe4RChro1mI6iE0a3RUsFxHSXS9IkyOK9Qd4ducJsyKmKOFiEq0wPQNglSwQowwQ0EYE-GcR3xoeZ+SRBJGAnS2Kjya6KRMeIqkWmMf4-IwOdqD0vcGJ0IkObq7Q4wXBOapxpBPK3i7S-JRJPSDygyA6q+tJfg9JY6jJ9hFUWMkIoQDEDSnJJxHhGp+JAJ5yRK1ymKgpgy22u2ZaARFgIw8IxgGmFKDgoQjKoQq0AQ9qjmwIeJeEFxaK7pdyxJ+pZJHGep7yv+CJ3yfIXgtmfeW0Y6l2iAb+Yq7QAo2y7g8IcZ-xWprplySZWKKZmZTyOUbp9uopRYzCroHgi4i4dKesIKtg6egoxSJSbU0wNZGSLpqK7ZNyyZGZpJTyA6RugZ3Q386+A+v4qIQ6r8hsVZvIU59AKK5qpgbcIZ0wqJUKsqa0bQPo7EFiEoKGixJBr2ZqfpIGgBZe3siAhgxizoY+-Ib+xSX+-i9Cam5GmmPo1UjKe+iGypYEVYJgnK2WzAlJf+Ks-yUUmyJp9Bl5saQwDYJgTCa0Y+boRyIa0S8U56NaQIZ2ORrQwwaR3oNewEz5EQQAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as StandardPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./StandardPlanMachine.typegen\").Typegen0,\n      schema: {\n        context: {} as StandardPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"providerChange\"; provider: CloudProvider }\n          | { type: \"regionChange\"; region: CloudRegion }\n          | { type: \"sizeChange\"; size: Size }\n          | {\n              type: \"selectSubscription\";\n              subscription: MarketplaceSubscription;\n            }\n          | { type: \"selectPrepaid\" }\n          | { type: \"billingChange\" }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: StandardSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"standardPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isOverQuota\",\n              target: \"overQuota\",\n            },\n            {\n              cond: \"isInstanceUnavailable\",\n              target: \"instanceUnavailable\",\n            },\n            {\n              cond: \"isRegionsUnavailable\",\n              target: \"regionsUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        overQuota: {\n          tags: \"blocked\",\n        },\n        instanceUnavailable: {\n          tags: \"blocked\",\n        },\n        regionsUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitted: {\n                  entry: \"triggerSubmit\",\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitted\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  tags: \"creatable\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                provider: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"providerIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"providerInvalid\",\n                    },\n                    valid: {\n                      tags: \"providerValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      actions: \"setProvider\",\n                      cond: \"didProviderChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                region: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"regionIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"regionInvalid\",\n                    },\n                    valid: {\n                      tags: \"regionValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      actions: \"setRegion\",\n                      cond: \"didRegionChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noProviderOrRegion\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          cond: \"sizeIsDisabled\",\n                          target: \"disabled\",\n                        },\n                        {\n                          cond: \"billingRequiredButNotSelected\",\n                          target: \"waitingForQuota\",\n                        },\n                        {\n                          cond: \"sizeIsOverQuota\",\n                          target: \"overQuota\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    disabled: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeDisabled\",\n                    },\n                    waitingForQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeWaitingForQuota\",\n                    },\n                    overQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeOverQuota\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      target: \".validate\",\n                    },\n                    sizeChange: {\n                      actions: \"setSize\",\n                      cond: \"didSizeChange\",\n                      target: \".validate\",\n                    },\n                    billingChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n                billing: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"onlyPrepaid\",\n                          target: \"prepaidOnly\",\n                        },\n                        {\n                          cond: \"singleSubscription\",\n                          target: \"singleSubscription\",\n                        },\n                        {\n                          cond: \"onlySubscriptions\",\n                          target: \"onlySubscriptions\",\n                        },\n                        {\n                          description:\n                            \"user has both prepaid and marketplace subscriptions\",\n                          target: \"prepaidAndSubscriptions\",\n                        },\n                      ],\n                    },\n                    prepaidOnly: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\"],\n                      entry: \"setBillingToPrepaid\",\n                      type: \"final\",\n                    },\n                    singleSubscription: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\", \"singleSubscription\"],\n                      entry: \"setBillingToSubscription\",\n                      type: \"final\",\n                    },\n                    onlySubscriptions: {\n                      description:\n                        \"More than one subscription exist. The user needs to select one to procede.\",\n                      initial: \"invalid\",\n                      type: \"final\",\n                      states: {\n                        invalid: {},\n                        valid: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                      },\n                      on: {\n                        selectSubscription: [\n                          {\n                            actions: \"setBillingToSubscription\",\n                            cond: \"matchesSelectedProviderOrRHMarketplaceAndHasQuota\",\n                            target: \".valid\",\n                          },\n                          {\n                            cond: \"noSelectedProvider\",\n                            target: \".valid\",\n                          },\n                        ],\n                      },\n                    },\n                    prepaidAndSubscriptions: {\n                      description:\n                        \"The user has both prepaid quota and one or more subscription to a marketplace. The user needs to select one to procede.\",\n                      initial: \"empty\",\n                      type: \"final\",\n                      states: {\n                        empty: {},\n                        subscription: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                        prepaid: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                      },\n                      on: {\n                        selectSubscription: [\n                          {\n                            actions: \"setBillingToSubscription\",\n                            cond: \"matchesSelectedProviderOrRHMarketplaceAndHasQuota\",\n                            target: \".subscription\",\n                          },\n                          {\n                            cond: \"noSelectedProvider\",\n                            target: \".subscription\",\n                          },\n                        ],\n                        selectPrepaid: {\n                          actions: \"setBillingToPrepaid\",\n                          cond: \"hasPrepaidQuota\",\n                          target: \".prepaid\",\n                        },\n                      },\n                    },\n                  },\n                  on: {\n                    providerChange: {\n                      actions: \"unsetSubscription\",\n                      description:\n                        \"If a new provider is selected, deselect any previously selected billing option.\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#standardPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              ...(context.capabilities.defaultProvider\n                ? onProviderChange(\n                    context.capabilities.availableProviders,\n                    context.capabilities.defaultProvider\n                  )\n                : {}),\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setProvider: assign((context, { provider }) => {\n          return {\n            form: {\n              ...context.form,\n              ...onProviderChange(\n                context.capabilities.availableProviders,\n                provider\n              ),\n            },\n            sizes: undefined,\n          };\n        }),\n        setRegion: assign((context, { region }) => {\n          if (context.creationError === \"region-unavailable\") {\n            return {\n              form: { ...context.form, region },\n              sizes: undefined,\n              creationError: undefined,\n            };\n          }\n          return {\n            form: {\n              ...context.form,\n              region,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSize: assign((context, { size }) => ({\n          form: {\n            ...context.form,\n            size,\n          },\n        })),\n        setSizes: assign((context, event) => {\n          const sizes = event.data;\n          const smallestSize = sizes.sort((a, b) => a.quota - b.quota)[0];\n          return {\n            sizes,\n            form: {\n              ...context.form,\n              size: smallestSize,\n            },\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => {\n          return {\n            creationError: error,\n          };\n        }),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form> &\n            Pick<typeof context.form, \"billing\">;\n          const data: CreateKafkaFormData = {\n            plan: \"standard\",\n            name: form.name,\n            provider: form.provider,\n            region: form.region,\n            sizeId: form.size.id,\n            billing: form.billing,\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n        triggerBillingChange: send(\"billingChange\"),\n        setBillingToPrepaid: assign((context) => {\n          const form = { ...context.form };\n          form.billing = \"prepaid\";\n          return { form };\n        }),\n        setBillingToSubscription: assign((context, event) => {\n          const form = { ...context.form };\n          if (event.type === \"selectSubscription\") {\n            form.billing = event.subscription;\n          } else {\n            // single subscription, take it from the context\n            const ms = context.capabilities.marketplaceSubscriptions[0];\n            form.billing = {\n              marketplace: ms.marketplace,\n              subscription: ms.subscriptions[0],\n            };\n          }\n          return { form };\n        }),\n        unsetSubscription: assign((context) => {\n          const form = { ...context.form };\n          form.billing = undefined;\n          return { form };\n        }),\n      },\n      guards: {\n        isOverQuota: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"out-of-quota\",\n        isInstanceUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"instance-unavailable\",\n        isRegionsUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"regions-unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        providerIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableProviders || []).length > 0 &&\n            // must have selected a provider\n            selectedProviderInfo !== undefined\n          );\n        },\n        regionIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have selected a region\n            form.region !== undefined &&\n            // the region must be included in the capabilities for the provider\n            selectedProviderInfo?.regions.find((r) => r.id === form.region) !==\n              undefined\n          );\n        },\n        noProviderOrRegion: ({ form }) =>\n          form.provider === undefined || form.region === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) => sizes !== undefined && sizes.length === 0,\n        sizeIsDisabled: ({ form, capabilities }) => {\n          if (capabilities === undefined) return true;\n          return form.size?.isDisabled === true;\n        },\n        billingRequiredButNotSelected: ({ form }, _, meta) => {\n          if (meta.state.hasTag(\"noBilling\")) {\n            return false;\n          }\n          return form.billing === undefined;\n        },\n        sizeIsOverQuota: ({ form, capabilities }) => {\n          if (capabilities === undefined || !form.size) return true;\n          const availableQuota =\n            form.billing === \"prepaid\" || form.billing === undefined\n              ? capabilities.remainingPrepaidQuota\n              : capabilities.remainingMarketplaceQuota;\n          if (!availableQuota) return true;\n          return form.size.quota > availableQuota;\n        },\n        didProviderChange: (context, event) =>\n          context.form.provider !== event.provider,\n        didRegionChange: (context, event) =>\n          context.form.region !== event.region,\n        didSizeChange: (context, event) =>\n          context.form.size?.id !== event.size.id,\n        onlyPrepaid: (context) =>\n          context.capabilities.marketplaceSubscriptions.length === 0,\n        singleSubscription: (context) =>\n          context.capabilities.remainingPrepaidQuota === undefined &&\n          context.capabilities.marketplaceSubscriptions.flatMap(\n            (m) => m.subscriptions\n          ).length === 1,\n        onlySubscriptions: (context) =>\n          context.capabilities.remainingPrepaidQuota === undefined &&\n          context.capabilities.marketplaceSubscriptions.length > 0,\n        matchesSelectedProviderOrRHMarketplaceAndHasQuota: (\n          { form, capabilities },\n          { subscription }\n        ) =>\n          capabilities.remainingMarketplaceQuota !== undefined &&\n          capabilities.remainingMarketplaceQuota > 0 &&\n          (subscription.marketplace === \"rhm\" ||\n            form.provider === subscription.marketplace),\n        hasPrepaidQuota: (context) =>\n          context.capabilities.remainingPrepaidQuota !== undefined &&\n          context.capabilities.remainingPrepaidQuota > 0,\n        noSelectedProvider: ({ form }) => form.provider === undefined,\n      },\n    }\n  );\n","import { assign, createMachine, send, sendParent } from \"xstate\";\nimport { CloudProvider, CloudRegion } from \"../../../types\";\nimport {\n  CreateKafkaFormData,\n  CreateKafkaInstanceError,\n  TrialPlanInitializationData,\n  TrialSizes,\n} from \"../types\";\nimport { onProviderChange } from \"./shared\";\n\nexport type TrialPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: TrialPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    provider?: CloudProvider;\n    region?: CloudRegion;\n  };\n\n  // based on the form.provider and form.region selection\n  sizes: TrialSizes | undefined;\n\n  creationError: CreateKafkaInstanceError | undefined;\n};\n\nexport const TrialPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QBUBOBLAhgGwArcwDsBZTAYwAt1CwA6ANzAwDMBPAQXs3QICMf0AF1YBiRKAAOAe1hD0UwuJAAPRACYAbAA4AnLQ0AGNQBYArBo0BmHQHYNNywBoQrRDoO1bARjWmv54y8DY18AX1DnNCw8AhJyKhpaMgVmdCgAVwxCKFpYQUxBdNgRMlQwArAlaVlBeUUkFUQgtWdXBFNLY1o7LRDTG1NTLVNjG3DIjBx8IlJKajpkwlSMrJzmKVQAWwYcdAgRVLBsCABJQi5sPaqZOQUlVQQvLRs9NR1TI1Mdey0tNS1Wk1nqZaJodIEbEYTAZ7OMQFEprFZgkFik0plqGsNtsLnsSmUKtcanV7kCXqD3p9vjZfv9AQg1AYhrQDF4fH9jJ0aVo4QiYjN4vMkmiVpjaOstrlMPRMfjyoIwABldJkMhweANaq3eqgB5qSxqGwsgwmgzPHRBGxeemMrQeCwfAY6NT6s2mXmTflxOaJRbLDHZcXYqUy7JyioAUVQqA2RO1pIZBqNppN5st1pcTR04O6gX+9hMefdEXhnum3pRwqW6NWQa2B3QR1O512EDjtTuDQe-i+tD+Jpdxm0NhdpnpXlGXTNnIt-RCnOLE2i5eRQr9NbFh2OsFohEwmzouIgFTEmpuHZ1jQQxmG3VHfjUE7Zb3HGlGoK8Vo0-ksli0Vh0D1lyRQVfRFAM1kbbdd33MADmxZVeE2IR2xJLsmgNccbECWgvAsGwBkhBwb0sIDEQFH1UWrUVAy3CAdz3A8REYsAAGEKCIGBUM7XUMJaTNHg0QZQU5Axf0MYxRmwsivVXMDqIg8UoPo2gJBjGUICYHZLmPBVT0kc80N49o3lBQxgnBLkmQBATH20Wghy8WxnS0IJLA0GSV1Aqj-VrOidzUqQNKYeCtkQ5DBG4y9u0w2zLCePs33cxkmW0IdPJAyiq18zdlIC9S9hCwLgtQdjOMqM9iR4q8vFito7JBd4XhpGF-FGDKKMrdcaMgpsdzKKA6m0vYTyihNTEfY0TH-aFzGCccni6G8DGzf9WSE9KSz5Lysu6xT-NoAa6lCzZwpQyr43Qx46qaN4vFoawR1HT8Jv6DqKzXcC-Lyw6wEGhQRGKwrSo47IKoMqror48cTEsByOhItlLD8P93rknyN1on6joBnHCDKsGxqu2r+LaIJ3FoEYRytYYkZCNHvOyzHeug2QAC9D1bUaLovBNnjh2xnn-A1hgmmz6rtLRugMZrhhvJzF1LYDOs+hTvr63J0A52hsCkTAIFlCAFDoah6CkABrOhtsyrqvtyjX2boXX9cxBBTakMgCjqABtAwAF0ieM4x3k8O0jCc2qNDum0Bg0bpKXihxvmsYwGd2u2sYdrWnb1g2wyYGNUFUghBAlbZrZV+Scsz1ns513PXfdz2L19gOeaMq9g8asPHwtZKLRjs0+xRv5DHJzQ09ttX7drjmTrOyL2+qmLSfUC0uhMDRsysbRNH8SfVerlmVMdwGCs0kHysDmqboQSxgnuvD9THq1szCLayxtw-maUrO57xgmXEl5Q2uqvO+Zo9BBCsJCSwI5rA8g-srD6Vcf7+REEbRIeQKi0ArsgjGPVf7bmvt2QI90-BCx0PFWBXcbQPweoMLeidHyfAPignq6Dja5HyAqHBn9K74IgsQ9Q2g9CGBMOYACdgHBYU5KHay2FkbOhdOEEshApCaQ1CgPheCGBMHQGwTg3A+ACGEEI68YC8J6AtBHew35-wWDUKwugghPQAFVYCQDMW8ewuE+hsjZIMXwr4rFsgtLYp4Fgo5ONoC46Iri9xcB4JgXg2BwYgC1LzK6IQbR-j7FoJMYkhIRxpNEvGsB4nSiMck1JZjskCSCB4cEMtOQiNGDLLw0S9q1iwYUHc6RCCwHSEhIQCo2zAITM0ekQ4QTNSfhCbM9NEHkR0V0sUPSii5CGRFUZXj8mUwaayP4eFkb9HpNoOGkIVodBePYMSitcHoyZgQ9Zmj0mGWXogGk9I-weD+EMbMZpWTiVTks2SjNVm0WDKbVsXjg5xxlv+Zyj4CIWMRaCBhgwmQjD+KRUFO0p5HzrDiGF4ziaDD0P2KEQ5nijloStRKMIvjDmGMjTpGcsSSlgNKTEXiTRGleiaCaFprF0qlhNBWLomTHI8nir+bD9rBi5YwMZENLrGRMN8FkNIt4vGRSOWh2F9Ao1qu8Do+SZVLmWY8iFHLNhmJ-CCSlg5hy0vqX+SBtV2TPz-G8Nl08a4qRYrQfpggpAqgoJ40lxl-BqFBLoWBFhYEwn1E4epLwPVYr+K5dN9ztHWvZYQwNsFaBgE2BIUxUarwjilkJAYmh7DIxTVhTQuF+gcjsJQ38YxZX8KeftH6QboU6XtbfJysCWQdGnE1CaMs-WEoOkGo89rDUumZdmfof48Ljn-FLM0Tw7JOQsHO1BA7i1HkJJWh4nRY0WgGHhXQxhpzGGbXHfwNITAdt-LA49BCF2wXtWacc5hY3iPBEK5ovQf39o1kDC+wbCChvDZG1VmTo2Gusj4OcDghh2ByXYPse6wl3u-N2y1YL07+uPvlIKwNhq6TSRkjuV7-zww+P4NkQ4CKpvqi6e6IRmm6EZOu0jSsrXgoLQdWDWkh1XEvU0Do3RhzBzZEYb4ZgbSSRmS8MwbH77KJ7SsiTP0pNFyXXJhAd7KYOA5OSnQdowEukmvx7CgmVpNSg+raCJmAPi3UIC0O2gLK6HYx5meKk8bwcQ5QZDbzIYTK3p4N4nRAgfHzDCccQ5XjYW0AreKPxQsBv6n9Ia56FRmNgVLJy2E-DOiZPFHQMNx0zhHBxoSD6CtUd+v9QgtAZMqti2qmqwd9DWGpCjF0sCxxuuG50Fa35nQ-mkgZ-NlHC1Fe63RsxDgPB4Q+H+ecjIXz1P1EaGctigXDBEw88Tq2Dp4x8+OQVVnzK0yTO5Dra3Nba1Kwx95ID7CiPyXYL4wdDTfBtH3EbFlvxfsZLisj+Lv6-p+o7XrEAanmY4yCMehoTCHqEjaX4lXQeb38NvD7B1UdmZQ0x9QCnfCuXih8QYQQOgQ5HLhC0JohLaHwrmpBK350o7rgXWM5mLC7u-GCTkkltBTfqvYI0yMALzmnVdvNN2hd-xzi7bII6HP2C6GlTk+S-k+Ap8LjmD3bL-O6J6gYwRpn72W5rk9fUzG9HpJQ2NElqsvUCPD0T5GCXMzMSMb5Mth5Dn1N8Wm2holKpi4xj5DJ7OeEKbobT2ExJYXHd8XeIwRG2HVwL7y9rfOPAQeEIAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as TrialPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./TrialPlanMachine.typegen\").Typegen0,\n      schema: {\n        context: {} as TrialPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"providerChange\"; provider: CloudProvider }\n          | { type: \"regionChange\"; region: CloudRegion }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: TrialSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"TrialPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isTrialUsed\",\n              target: \"trialUsed\",\n            },\n            {\n              cond: \"isTrialUnavailable\",\n              target: \"trialUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        trialUsed: {\n          tags: \"blocked\",\n        },\n        trialUnavailable: {\n          tags: \"blocked\",\n        },\n        regionsUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitted: {\n                  entry: \"triggerSubmit\",\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitted\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                provider: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"providerIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"providerInvalid\",\n                    },\n                    valid: {\n                      tags: \"providerValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      actions: \"setProvider\",\n                      cond: \"didProviderChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                region: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"regionIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"regionInvalid\",\n                    },\n                    valid: {\n                      tags: \"regionValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      actions: \"setRegion\",\n                      cond: \"didRegionChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noProviderAndRegion\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#TrialPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              ...(context.capabilities.defaultProvider\n                ? onProviderChange(\n                    context.capabilities.availableProviders,\n                    context.capabilities.defaultProvider\n                  )\n                : {}),\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setProvider: assign((context, { provider }) => {\n          return {\n            form: {\n              ...context.form,\n              ...onProviderChange(\n                context.capabilities.availableProviders,\n                provider\n              ),\n            },\n            sizes: undefined,\n          };\n        }),\n        setRegion: assign((context, { region }) => {\n          if (context.creationError === \"region-unavailable\") {\n            return {\n              form: { ...context.form, region },\n              sizes: undefined,\n              creationError: undefined,\n            };\n          }\n          return {\n            form: {\n              ...context.form,\n              region,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSizes: assign((_context, event) => {\n          const sizes = event.data;\n          return {\n            sizes,\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => ({\n          creationError: error,\n        })),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form>;\n          const data: CreateKafkaFormData = {\n            plan: \"developer\",\n            name: form.name,\n            provider: form.provider,\n            region: form.region,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            sizeId: context.sizes!.trial.id,\n            billing: undefined,\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n      },\n      guards: {\n        isTrialUsed: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"used\",\n        isTrialUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        providerIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableProviders || []).length > 0 &&\n            // must have selected a provider\n            selectedProviderInfo !== undefined\n          );\n        },\n        regionIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have selected a region\n            form.region !== undefined &&\n            // the region must be included in the capabilities for the provider\n            selectedProviderInfo?.regions.find((r) => r.id === form.region) !==\n              undefined\n          );\n        },\n        noProviderAndRegion: ({ form }) =>\n          form.provider === undefined || form.region === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) =>\n          sizes !== undefined && sizes.standard.length === 0,\n        didProviderChange: (context, event) =>\n          context.form.provider !== event.provider,\n        didRegionChange: (context, event) =>\n          context.form.region !== event.region,\n      },\n    }\n  );\n","export * from \"./CreateKafkaInstanceMachine\";\nexport * from \"./CreateKafkaInstanceProvider\";\nexport * from \"./StandardPlanMachine\";\nexport * from \"./TrialPlanMachine\";\nexport * from \"./useCreateKafkaInstance\";\nexport * from \"./useStandardPlan\";\nexport * from \"./useTrialPlan\";\n","import type { CloudProvider, CloudRegion } from \"../../../types\";\nimport type { CloudProviderInfo } from \"../types\";\n\nexport function onProviderChange(\n  providers: CloudProviderInfo[],\n  provider: CloudProvider\n): { provider: CloudProvider; region: CloudRegion | undefined } {\n  const selectedProvider = providers.find((p) => p.id === provider);\n  const region =\n    selectedProvider?.defaultRegion ||\n    selectedProvider?.regions.filter((r) => !!r.isDisabled === false)[0]?.id;\n  return { provider, region };\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { CreateKafkaInstanceContext } from \"./CreateKafkaInstanceProvider\";\nimport type { StandardPlanMachine } from \"./StandardPlanMachine\";\nimport type { TrialPlanMachine } from \"./TrialPlanMachine\";\n\nexport type SelectorReturn = {\n  standardPlanMachine: ActorRefFrom<typeof StandardPlanMachine> | undefined;\n  trialPlanMachine: ActorRefFrom<typeof TrialPlanMachine> | undefined;\n  isLoading: boolean;\n  isSystemUnavailable: boolean;\n  isStandardPlan: boolean;\n  isTrialPlan: boolean;\n  isSaving: boolean;\n  isSaved: boolean;\n};\n\nexport function useCreateKafkaInstance() {\n  const { service } = useContext(CreateKafkaInstanceContext);\n  return useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback((state) => {\n      const standardPlanMachine = state.children[\"standardPlanService\"] as\n        | ActorRefFrom<typeof StandardPlanMachine>\n        | undefined;\n      const trialPlanMachine = state.children[\"trialPlanService\"] as\n        | ActorRefFrom<typeof TrialPlanMachine>\n        | undefined;\n\n      const isLoading = state.hasTag(\"loading\");\n      const isSystemUnavailable = state.hasTag(\"systemUnavailable\");\n      const isStandardPlan = state.hasTag(\"standardPlan\");\n      const isTrialPlan = state.hasTag(\"trialPlan\");\n      const isSaving = state.hasTag(\"saving\");\n      const isSaved = state.done === true;\n\n      return {\n        standardPlanMachine,\n        trialPlanMachine,\n        isLoading,\n        isSystemUnavailable,\n        isStandardPlan,\n        isTrialPlan,\n        isSaving,\n        isSaved,\n      };\n    }, [])\n  );\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback } from \"react\";\nimport type {\n  CloudProvider,\n  CloudRegion,\n  MarketPlace,\n  MarketplaceSubscription,\n  Size,\n} from \"../../../types\";\nimport type { CloudProviderInfo, CreateKafkaInstanceError } from \"../types\";\nimport type { StandardPlanMachineContext } from \"./StandardPlanMachine\";\nimport { useCreateKafkaInstance } from \"./useCreateKafkaInstance\";\n\ntype SelectorReturn = {\n  form: StandardPlanMachineContext[\"form\"];\n  capabilities: StandardPlanMachineContext[\"capabilities\"];\n  selectedProvider: CloudProviderInfo | undefined;\n  selectedSize: Size | undefined;\n  sizes: StandardPlanMachineContext[\"sizes\"];\n  selectedBilling: \"prepaid\" | MarketplaceSubscription | undefined;\n  billingType: \"rh-only\" | \"external-marketplaces\";\n  remainingQuota: number | undefined;\n\n  isFormEnabled: boolean;\n\n  isNameInvalid: boolean;\n  isNameEmpty: boolean;\n  isNameError: boolean;\n  isNameTaken: boolean;\n  isSizeDisabled: boolean;\n  isSizeOverQuota: boolean;\n  isSizeLoadingError: boolean;\n  isSizeAvailable: boolean;\n  isSizeError: boolean;\n  isBillingError: boolean;\n  isBillingSingleSubscription: boolean;\n  isBillingSelectionRequired: boolean;\n  isBillingPrepaidAvailable: boolean;\n  isBillingPrepaidOverQuota: boolean;\n  isBillingMarketplaceOverQuota: boolean;\n  isBillingSingleMarketplace: MarketplaceSubscription | false;\n\n  isProviderError: boolean;\n  isRegionError: boolean;\n\n  isLoading: boolean;\n  isLoadingSizes: boolean;\n  isSaving: boolean;\n\n  error: CreateKafkaInstanceError | \"form-invalid\" | undefined;\n\n  setName: (name: string) => void;\n  setProvider: (name: CloudProvider) => void;\n  setRegion: (name: CloudRegion) => void;\n  onCreate: () => void;\n  setSize: (size: Size) => void;\n  setBillingSubscription: (\n    marketplace: MarketPlace,\n    subscription: string\n  ) => void;\n  setBillingPrepaid: () => void;\n};\n\nexport function useStandardPlanMachine(): SelectorReturn {\n  const {\n    standardPlanMachine: service,\n    isLoading,\n    isSaving,\n  } = useCreateKafkaInstance();\n\n  if (!service) {\n    throw new Error(\n      \"useStandardPlanMachine should be called only when the parent CreateKafkaInstanceMachine is in the right state\"\n    );\n  }\n\n  const setName = useCallback(\n    (name: string) => service.send({ type: \"nameChange\", name }),\n    [service]\n  );\n  const setProvider = useCallback(\n    (provider: CloudProvider) =>\n      service.send({ type: \"providerChange\", provider }),\n    [service]\n  );\n  const setRegion = useCallback(\n    (region: CloudRegion) => service.send({ type: \"regionChange\", region }),\n    [service]\n  );\n  const onCreate = useCallback(() => service.send(\"create\"), [service]);\n  const setSize = useCallback(\n    (size: Size) => service.send({ type: \"sizeChange\", size }),\n    [service]\n  );\n\n  const setBillingSubscription = useCallback(\n    (marketplace: MarketPlace, subscription: string) =>\n      service.send({\n        type: \"selectSubscription\",\n        subscription: { marketplace, subscription },\n      }),\n    [service]\n  );\n\n  const setBillingPrepaid = useCallback(\n    () =>\n      service.send({\n        type: \"selectPrepaid\",\n      }),\n    [service]\n  );\n\n  return useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => {\n        const { creationError, capabilities, form, sizes } = state.context;\n        const isBlocked = state.hasTag(\"blocked\");\n        const isFormInvalid =\n          state.hasTag(\"formInvalid\") && state.hasTag(\"submitted\");\n        const isNameTaken = creationError === \"name-taken\";\n        const isConfigurable = state.hasTag(\"configurable\");\n        const isLoadingSizes = state.hasTag(\"sizeLoading\");\n        const isBillingSelectionRequired =\n          !state.hasTag(\"noBilling\") && !isBlocked;\n\n        const marketplaces = Array.from(\n          new Set(\n            capabilities.marketplaceSubscriptions.flatMap<MarketplaceSubscription>(\n              (m) =>\n                m.subscriptions.map((s) => ({\n                  marketplace: m.marketplace,\n                  subscription: s,\n                }))\n            )\n          )\n        );\n        const isBillingSingleSubscription = state.hasTag(\"singleSubscription\");\n        const isBillingSingleMarketplace =\n          isBillingSingleSubscription ||\n          (marketplaces.length === 1 &&\n            capabilities.remainingPrepaidQuota === undefined)\n            ? marketplaces[0]\n            : false;\n\n        const isBillingPrepaidAvailable =\n          capabilities.remainingPrepaidQuota !== undefined;\n\n        const selectedProvider = isBlocked\n          ? undefined\n          : capabilities.availableProviders.find((p) => p.id === form.provider);\n\n        const selectedSize = isBlocked\n          ? undefined\n          : sizes?.find((s) => form.size?.id === s.id);\n\n        const billingType = capabilities.marketplaceSubscriptions.some(\n          (m) => m.marketplace !== \"rhm\"\n        )\n          ? \"external-marketplaces\"\n          : \"rh-only\";\n\n        const selectedBilling =\n          form.billing === \"prepaid\" ? \"prepaid\" : form.billing;\n\n        const error: SelectorReturn[\"error\"] = creationError\n          ? creationError\n          : isFormInvalid\n          ? \"form-invalid\"\n          : undefined;\n\n        const remainingQuota =\n          form.billing === \"prepaid\" || form.billing === undefined\n            ? capabilities.remainingPrepaidQuota\n            : capabilities.remainingMarketplaceQuota;\n\n        const isBillingPrepaidOverQuota: boolean = (() => {\n          if (\n            capabilities.remainingPrepaidQuota !== undefined &&\n            capabilities.remainingPrepaidQuota === 0\n          ) {\n            return true;\n          } else if (\n            selectedSize?.quota &&\n            capabilities.remainingPrepaidQuota\n          ) {\n            return selectedSize.quota > capabilities.remainingPrepaidQuota;\n          }\n          return false;\n        })();\n\n        const isBillingMarketplaceOverQuota: boolean = (() => {\n          if (\n            capabilities.remainingMarketplaceQuota !== undefined &&\n            capabilities.remainingMarketplaceQuota === 0\n          ) {\n            return true;\n          } else if (\n            selectedSize?.quota &&\n            capabilities.remainingMarketplaceQuota\n          ) {\n            return selectedSize.quota > capabilities.remainingMarketplaceQuota;\n          }\n          return false;\n        })();\n\n        return {\n          form: form,\n          capabilities,\n          selectedProvider,\n          selectedSize,\n          sizes: sizes,\n          billingType,\n          selectedBilling,\n          remainingQuota,\n\n          isFormEnabled: !isLoading && !isSaving && !isBlocked,\n          isNameInvalid: state.hasTag(\"nameInvalid\"),\n          isNameEmpty: state.hasTag(\"nameEmpty\"),\n          isNameError:\n            state.hasTag(\"nameInvalid\") ||\n            isNameTaken ||\n            (!state.hasTag(\"nameValid\") && isFormInvalid),\n          isNameTaken,\n          isSizeDisabled: state.hasTag(\"sizeDisabled\"),\n          isSizeOverQuota: state.hasTag(\"sizeOverQuota\"),\n          isSizeLoadingError: state.hasTag(\"sizeError\"),\n          isSizeAvailable: !state.hasTag(\"sizeIdle\"),\n          isSizeError: !state.hasTag(\"sizeValid\") && isFormInvalid,\n          isProviderError: !state.hasTag(\"providerValid\") && isFormInvalid,\n          isRegionError: !state.hasTag(\"regionValid\") && isFormInvalid,\n          isBillingError: !state.hasTag(\"billingValid\") && isFormInvalid,\n          isBillingSingleSubscription,\n          isBillingSelectionRequired,\n          isBillingPrepaidAvailable,\n          isBillingPrepaidOverQuota,\n          isBillingMarketplaceOverQuota,\n          isBillingSingleMarketplace,\n          isLoading,\n          isLoadingSizes,\n          isConfigurable,\n          isSaving,\n\n          error,\n\n          setName,\n          setProvider,\n          setRegion,\n          onCreate,\n          setSize,\n          setBillingSubscription,\n          setBillingPrepaid,\n        };\n      },\n      [\n        isLoading,\n        isSaving,\n        onCreate,\n        setBillingPrepaid,\n        setBillingSubscription,\n        setName,\n        setProvider,\n        setRegion,\n        setSize,\n      ]\n    )\n  );\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback } from \"react\";\nimport type { CloudProvider, CloudRegion } from \"../../../types\";\nimport type { CloudProviderInfo, CreateKafkaInstanceError } from \"../types\";\nimport type { TrialPlanMachineContext } from \"./TrialPlanMachine\";\nimport { useCreateKafkaInstance } from \"./useCreateKafkaInstance\";\n\ntype SelectorReturn = {\n  form: TrialPlanMachineContext[\"form\"];\n  capabilities: TrialPlanMachineContext[\"capabilities\"];\n  selectedProvider: CloudProviderInfo | undefined;\n  sizes: TrialPlanMachineContext[\"sizes\"];\n\n  isFormEnabled: boolean;\n\n  isNameInvalid: boolean;\n  isNameEmpty: boolean;\n  isNameError: boolean;\n  isNameTaken: boolean;\n  isSizeLoadingError: boolean;\n  isSizeAvailable: boolean;\n  isSizeError: boolean;\n\n  isProviderError: boolean;\n  isRegionError: boolean;\n\n  isLoading: boolean;\n  isLoadingSizes: boolean;\n  isSaving: boolean;\n\n  error: CreateKafkaInstanceError | \"form-invalid\" | undefined;\n\n  setName: (name: string) => void;\n  setProvider: (name: CloudProvider) => void;\n  setRegion: (name: CloudRegion) => void;\n  onCreate: () => void;\n};\n\nexport function useTrialPlanMachine(): SelectorReturn {\n  const {\n    trialPlanMachine: service,\n    isLoading,\n    isSaving,\n  } = useCreateKafkaInstance();\n\n  if (!service) {\n    throw new Error(\n      \"useTrialPlanMachine should be called only when the parent CreateKafkaInstanceMachine is in the right state\"\n    );\n  }\n\n  const setName = useCallback(\n    (name: string) => service.send({ type: \"nameChange\", name }),\n    [service]\n  );\n  const setProvider = useCallback(\n    (provider: CloudProvider) =>\n      service.send({ type: \"providerChange\", provider }),\n    [service]\n  );\n  const setRegion = useCallback(\n    (region: CloudRegion) => service.send({ type: \"regionChange\", region }),\n    [service]\n  );\n  const onCreate = useCallback(() => service.send(\"create\"), [service]);\n\n  return useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => {\n        const isBlocked = state.hasTag(\"blocked\");\n        const isFormInvalid =\n          state.hasTag(\"formInvalid\") && state.hasTag(\"submitted\");\n        const isNameTaken = state.context.creationError === \"name-taken\";\n        const isConfigurable = state.hasTag(\"configurable\");\n        const isLoadingSizes = state.hasTag(\"sizeLoading\");\n\n        const selectedProvider = isBlocked\n          ? undefined\n          : state.context.capabilities.availableProviders.find(\n              (p) => p.id === state.context.form.provider\n            );\n\n        const error: SelectorReturn[\"error\"] = state.context.creationError\n          ? state.context.creationError\n          : isFormInvalid\n          ? \"form-invalid\"\n          : undefined;\n\n        return {\n          form: state.context.form,\n          capabilities: state.context.capabilities,\n          selectedProvider,\n          sizes: state.context.sizes,\n\n          isFormEnabled: !isLoading && !isSaving && !isBlocked,\n\n          isNameInvalid: state.hasTag(\"nameInvalid\"),\n          isNameEmpty: state.hasTag(\"nameEmpty\"),\n          isNameError:\n            state.hasTag(\"nameInvalid\") ||\n            isNameTaken ||\n            (!state.hasTag(\"nameValid\") && isFormInvalid),\n          isNameTaken,\n          isSizeLoadingError: state.hasTag(\"sizeError\"),\n          isSizeAvailable: !state.hasTag(\"sizeIdle\"),\n          isSizeError: !state.hasTag(\"sizeValid\") && isFormInvalid,\n\n          isProviderError: !state.hasTag(\"providerValid\") && isFormInvalid,\n          isRegionError: !state.hasTag(\"regionValid\") && isFormInvalid,\n\n          isLoading,\n          isLoadingSizes,\n          isConfigurable,\n          isSaving,\n\n          error,\n\n          setName,\n          setProvider,\n          setRegion,\n          onCreate,\n        };\n      },\n      [isLoading, isSaving, onCreate, setName, setProvider, setRegion]\n    )\n  );\n}\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { KafkaInstanceActionsProps } from \"./KafkaInstanceActions\";\nimport { KafkaInstanceActions } from \"./KafkaInstanceActions\";\n\ntype Sections =\n  | \"dashboard\"\n  | \"topics\"\n  | \"consumer\"\n  | \"permissions\"\n  | \"settings\";\n\nexport type DataPlaneHeaderProps = {\n  instancesHref: string;\n  instanceName: string;\n  activeSection: Sections;\n  sectionsHref: { [key in Sections]: string };\n} & KafkaInstanceActionsProps;\n\nexport const DataPlaneHeader: VoidFunctionComponent<DataPlaneHeaderProps> = ({\n  instancesHref,\n  instanceName,\n  activeSection,\n  sectionsHref,\n  ...actionsProps\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <Breadcrumb ouiaId={\"breadcrumb\"}>\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instancesHref}>{t(\"common:kafka_instance\")}</Link>\n            )}\n          />\n          <BreadcrumbItem isActive={true}>{instanceName}</BreadcrumbItem>\n        </Breadcrumb>\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <LevelItem>\n            <TextContent>\n              <Text component=\"h1\">{instanceName}</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <KafkaInstanceActions {...actionsProps} />\n          </LevelItem>\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        className=\"pf-c-page__main-tabs\"\n        hasShadowBottom={true}\n      >\n        <Nav\n          variant=\"tertiary\"\n          data-testid=\"pageKafka-tabProperties\"\n          className=\"pf-m-page-insets\"\n        >\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabDashboard\"\n              id=\"dashboard-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.dashboard\")}\n              ouiaId={\"tab-Dashboard\"}\n              isActive={activeSection === \"dashboard\"}\n            >\n              <Link to={sectionsHref[\"dashboard\"]}>\n                {t(\"dataPlaneNavigation.dashboard\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabTopics\"\n              id=\"topics-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.topics\")}\n              ouiaId={\"tab-Topics\"}\n              isActive={activeSection === \"topics\"}\n            >\n              <Link to={sectionsHref[\"topics\"]}>\n                {t(\"dataPlaneNavigation.topics\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabConsumers\"\n              id=\"consumer-groups-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.consumer_groups\")}\n              ouiaId={\"tab-Consumers\"}\n              isActive={activeSection === \"consumer\"}\n            >\n              <Link to={sectionsHref[\"consumer\"]}>\n                {t(\"dataPlaneNavigation.consumer_groups\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabPermissions\"\n              id=\"permissions-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.permissions\")}\n              ouiaId={\"tab-Permissions\"}\n              isActive={activeSection === \"permissions\"}\n            >\n              <Link to={sectionsHref[\"permissions\"]}>\n                {t(\"dataPlaneNavigation.permissions\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabSettings\"\n              id=\"settings-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.settings\")}\n              ouiaId={\"tab-Settings\"}\n              isActive={activeSection === \"settings\"}\n            >\n              <Link to={sectionsHref[\"settings\"]}>\n                {t(\"dataPlaneNavigation.settings\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n      </PageSection>\n    </>\n  );\n};\n","import type { DeleteModalProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  DeleteModal,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type DeleteKafkaInstanceProps = {\n  instanceName: string | undefined;\n} & Omit<\n  DeleteModalProps,\n  \"title\" | \"variant\" | \"confirmationValue\" | \"children\"\n>;\n\nexport const DeleteKafkaInstance: VoidFunctionComponent<\n  DeleteKafkaInstanceProps\n> = ({ instanceName, ...props }) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <DeleteModal\n      {...props}\n      variant={\"destructive\"}\n      title={t(\"delete_instance_title\")}\n      confirmationValue={instanceName}\n    >\n      <Trans\n        ns={\"kafka\"}\n        i18nKey={\"delete_instance_message\"}\n        components={[<strong />]}\n        values={{\n          instanceName,\n        }}\n      />\n    </DeleteModal>\n  );\n};\n","export * from \"./DeleteKafkaInstance\";\n","import type { I18nProviderProps } from \"@rhoas/app-services-ui-components\";\nimport { I18nProvider as UiComponentsI18nProvider } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\n\nexport const I18nProvider: FunctionComponent<\n  Omit<I18nProviderProps, \"resources\">\n> = ({ lng, debug, children }) => {\n  return (\n    <UiComponentsI18nProvider\n      lng={lng}\n      resources={{\n        en: {\n          common: () =>\n            import(\"@rhoas/app-services-ui-components/locales/en/common.json\"),\n          \"create-kafka-instance\": () =>\n            import(\"locales/en/create-kafka-instance.json\"),\n          kafka: () => import(\"locales/en/kafka.json\"),\n          \"kafkaoverview-v3\": () => import(\"locales/en/kafkaoverview-v3.json\"),\n          metrics: () => import(\"locales/en/metrics.json\"),\n          topic: () => import(\"locales/en/topic.json\"),\n          \"manage-kafka-permissions\": () =>\n            import(\"locales/en/manage-kafka-permissions.json\"),\n          \"create-topic\": () => import(\"locales/en/create-topic.json\"),\n          \"message-browser\": () => import(\"locales/en/message-browser.json\"),\n          \"connection-tab\": () => import(\"locales/en/connection-tab.json\"),\n          \"connection-tab-p1\": () =>\n            import(\"locales/en/connection-tab-p1.json\"),\n        },\n        it: {\n          common: () => Promise.resolve({ delete: \"Elimina\" }),\n        },\n      }}\n      debug={debug}\n    >\n      {children}\n    </UiComponentsI18nProvider>\n  );\n};\n","import { DropdownGroup } from \"@patternfly/react-core\";\nimport { ActionsColumn } from \"@patternfly/react-table\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type KafkaInstanceActionsProps = {\n  onDetails: () => void;\n  onConnection: () => void;\n  canOpenConnection: boolean;\n  canChangeOwner: boolean;\n  onChangeOwner: () => void;\n  canDelete: boolean;\n  onDelete: () => void;\n};\n\nexport const KafkaInstanceActions: VoidFunctionComponent<\n  KafkaInstanceActionsProps\n> = ({\n  onDetails,\n  onConnection,\n  canOpenConnection,\n  canChangeOwner,\n  onChangeOwner,\n  canDelete,\n  onDelete,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <ActionsColumn\n      items={[\n        {\n          customChild: (\n            <DropdownGroup\n              label={t(\"table.actions.view-instance-information\")}\n            />\n          ),\n        },\n        {\n          title: t(\"table.actions.details\"),\n          onClick: onDetails,\n        },\n        {\n          title: t(\"table.actions.connection\"),\n          ...(!canOpenConnection\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_see_connections\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onConnection,\n              }),\n        },\n        {\n          isSeparator: true,\n        },\n        {\n          title: t(\"table.actions.change-owner\"),\n          ...(!canChangeOwner\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_change_owner\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onChangeOwner,\n              }),\n        },\n        {\n          title: t(\"table.actions.delete\"),\n          ...(!canDelete\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_delete_kafka\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onDelete,\n              }),\n        },\n      ]}\n    />\n  );\n};\n","import {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface CapacityTable {\n  name: string;\n  firstStreamingUnit: string;\n  secondStreamingUnit: string;\n}\n\nexport const KafkaInstanceCapacityTable: FunctionComponent = () => {\n  const { t } = useTranslation(\"kafkaoverview-v2\");\n\n  const capacityTable: CapacityTable[] = [\n    {\n      name: \"Ingress (MB/second)\",\n      firstStreamingUnit: \"up to 50\",\n      secondStreamingUnit: \"up to 100\",\n    },\n    {\n      name: \"Egress (MB/second)\",\n      firstStreamingUnit: \"up to 100\",\n      secondStreamingUnit: \"up to 200\",\n    },\n    {\n      name: \"Storage* (GB)\",\n      firstStreamingUnit: \"up to 1000\",\n      secondStreamingUnit: \"up to 2000\",\n    },\n    {\n      name: \"Topic partitions\",\n      firstStreamingUnit: \"up to 1500\",\n      secondStreamingUnit: \"up to 3000\",\n    },\n    {\n      name: \"Client connections\",\n      firstStreamingUnit: \"up to 3000\",\n      secondStreamingUnit: \"up to 6000\",\n    },\n    {\n      name: \"Connection rate (connections/second)\",\n      firstStreamingUnit: \"up to 100\",\n      secondStreamingUnit: \"up to 200\",\n    },\n    {\n      name: \"Message size (MB)\",\n      firstStreamingUnit: \"up to 1\",\n      secondStreamingUnit: \"up to 1\",\n    },\n  ];\n\n  const columnNames = {\n    name: \"\",\n    firstStreamingUnit: t(\"firstStreamingUnit\"),\n    secondStreamingUnit: t(\"secondStreamingUnit\"),\n  };\n\n  return (\n    <TableComposable>\n      <Thead>\n        <Tr>\n          <Th>{columnNames.name}</Th>\n          <Th>{columnNames.firstStreamingUnit}</Th>\n          <Th>{columnNames.secondStreamingUnit}</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {capacityTable.map((table) => {\n          return (\n            <Tr key={table.name}>\n              <Td dataLabel={columnNames.name}>{table.name}</Td>\n              <Td dataLabel={columnNames.firstStreamingUnit}>\n                {table.firstStreamingUnit}\n              </Td>\n              <Td dataLabel={columnNames.secondStreamingUnit}>\n                {table.secondStreamingUnit}\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </TableComposable>\n  );\n};\n","import type { TabsProps } from \"@patternfly/react-core\";\nimport {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { useKafkaLabels } from \"../../hooks\";\nimport type { KafkaInstance } from \"../../types\";\nimport { CreatingStatuses } from \"../../types\";\nimport { KafkaConnectionTabP2, KafkaDetailsTab } from \"./components\";\n\nexport type KafkaInstanceDrawerProps = {\n  instance?: KafkaInstance;\n  isExpanded: boolean;\n  activeTab: KafkaInstanceDrawerTab;\n  onTabChange: (tab: KafkaInstanceDrawerTab) => void;\n\n  onClose: () => void;\n};\n\nexport const KafkaInstanceDrawer: FunctionComponent<\n  KafkaInstanceDrawerProps\n> = ({ instance, activeTab, isExpanded, onTabChange, onClose, children }) => {\n  const content = useMemo(() => {\n    return (\n      <DrawerPanelContent>\n        {instance ? (\n          <KafkaInstanceDrawerPanel\n            instance={instance}\n            activeTab={activeTab}\n            onTabChange={onTabChange}\n            onClose={onClose}\n          />\n        ) : null}\n      </DrawerPanelContent>\n    );\n  }, [activeTab, instance, onClose, onTabChange]);\n  return (\n    <Drawer isExpanded={isExpanded} isInline={true}>\n      <DrawerContent panelContent={content}>\n        <DrawerContentBody\n          className={\"pf-u-display-flex pf-u-flex-direction-column\"}\n        >\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nexport type KafkaInstanceDrawerTab = \"details\" | \"connections\";\n\nexport const KafkaInstanceDrawerPanel: VoidFunctionComponent<\n  Required<Omit<KafkaInstanceDrawerProps, \"isExpanded\">> & {\n    activeTab: KafkaInstanceDrawerTab;\n  }\n> = ({ instance, activeTab, onTabChange, onClose }) => {\n  const { t } = useTranslation([\"kafka\"]);\n  const labels = useKafkaLabels();\n\n  const handleSelect: TabsProps[\"onSelect\"] = useCallback(\n    (_, tab) => {\n      const t = tab as KafkaInstanceDrawerTab;\n      onTabChange(t);\n    },\n    [onTabChange]\n  );\n\n  const isKafkaPending = CreatingStatuses.includes(instance.status);\n\n  return (\n    <>\n      <DrawerHead>\n        <TextContent>\n          <Text component={TextVariants.small} className={\"pf-u-mb-0\"}>\n            {t(\"common:name\")}\n          </Text>\n          <Title\n            headingLevel={\"h1\"}\n            size={TitleSizes[\"xl\"]}\n            className={\"pf-u-mt-0\"}\n          >\n            {instance.name}\n          </Title>\n        </TextContent>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <Tabs activeKey={activeTab} onSelect={handleSelect}>\n          <Tab\n            eventKey={\"details\"}\n            title={<TabTitleText>{t(\"drawer-tabs.details\")}</TabTitleText>}\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaDetailsTab\n                id={instance.id}\n                owner={instance.owner}\n                createdAt={parseISO(instance.createdAt)}\n                updatedAt={parseISO(instance.updatedAt)}\n                expiryDate={\n                  instance.expiryDate\n                    ? parseISO(instance.expiryDate)\n                    : undefined\n                }\n                size={instance.size}\n                ingress={instance.ingress}\n                egress={instance.egress}\n                storage={instance.storage}\n                maxPartitions={instance.maxPartitions}\n                connections={instance.connections}\n                connectionRate={instance.connectionRate}\n                messageSize={instance.messageSize}\n                provider={\n                  labels.providers[instance.provider] || instance.provider\n                }\n                region={\n                  labels.providerRegions[instance.provider][instance.region] ||\n                  instance.region\n                }\n                instanceType={instance.plan}\n                billing={instance.billing}\n                kafkaVersion={instance.version}\n              />\n            </div>\n          </Tab>\n          <Tab\n            eventKey={\"connections\"}\n            title={<TabTitleText>{t(\"drawer-tabs.connections\")}</TabTitleText>}\n            data-testid=\"drawerStreams-tabConnect\"\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaConnectionTabP2\n                isKafkaPending={isKafkaPending}\n                externalServer={getExternalServer(instance.bootstrapUrl)}\n                tokenEndPointUrl={\"TODO\"}\n                linkToServiceAccount={\"service-accounts\"}\n                linkToAccessTab={`TODO/acls`}\n                adminAPIUrl={getAdminServerUrl(instance.adminUrl)}\n                showCreateServiceAccountModal={() => {\n                  /* TODO */\n                }}\n                kafkaFleetManagerUrl={\n                  \"https://api.openshift.com/api/kafkas_mgmt/v1/openapi\"\n                }\n              />\n            </div>\n          </Tab>\n        </Tabs>\n      </DrawerPanelBody>\n    </>\n  );\n};\n\nconst getExternalServer = (bootstrapUrl: string | undefined) => {\n  if (!bootstrapUrl) {\n    return undefined;\n  }\n  return bootstrapUrl?.endsWith(\":443\") ? bootstrapUrl : `${bootstrapUrl}:443`;\n};\n\nconst getAdminServerUrl = (adminUrl: string | undefined) => {\n  return adminUrl ? `${adminUrl}/openapi` : undefined;\n};\n","import { Alert } from \"@patternfly/react-core\";\nimport { differenceInHours } from \"date-fns\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate } from \"@rhoas/app-services-ui-components\";\n\ntype DetailsTabAlertProps = {\n  expiryDate: Date;\n};\n\nexport const DetailsTabAlert: FunctionComponent<DetailsTabAlertProps> = ({\n  expiryDate,\n}) => {\n  const hoursLeft = expiryDate ? differenceInHours(expiryDate, Date.now()) : 0;\n  return (\n    <Alert\n      variant={\n        hoursLeft > 24\n          ? \"info\"\n          : hoursLeft < 24 && hoursLeft > 5\n          ? \"warning\"\n          : \"danger\"\n      }\n      title={\n        <Trans\n          i18nKey=\"kafka:will_expire\"\n          components={{\n            time: <FormatDate date={expiryDate} format=\"expiration\" />,\n          }}\n        />\n      }\n      aria-live=\"polite\"\n      isInline\n      className=\"pf-u-mb-lg\"\n    />\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  ClipboardCopy,\n  ExpandableSection,\n  Label,\n  Popover,\n  Skeleton,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { Link } from \"react-router-dom\";\n\nexport type KafkaConnectionTabProps = {\n  isKafkaPending?: boolean;\n  externalServer?: string;\n  tokenEndPointUrl: string;\n  linkToServiceAccount: string;\n  linkToAccessTab: string;\n  adminAPIUrl: string | undefined;\n  showCreateServiceAccountModal: () => void;\n  kafkaFleetManagerUrl: string;\n};\n\nexport const KafkaConnectionTab: FunctionComponent<KafkaConnectionTabProps> = ({\n  isKafkaPending,\n  externalServer,\n  tokenEndPointUrl,\n  linkToServiceAccount,\n  linkToAccessTab,\n  adminAPIUrl,\n  kafkaFleetManagerUrl,\n  showCreateServiceAccountModal,\n}) => {\n  const { t } = useTranslation();\n\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n\n  const onChangeExpandedSection = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"kafka:connection_tab.drawer_resource_tab_body_description_1\")}\n        </Text>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"kafka:connection_tab.bootstrap_server\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"kafka:connection_tab.bootstrap_server_description\")}\n        </Text>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            data-testid=\"drawerStreams-copyBootstrapURL\"\n            textAriaLabel={t(\"kafka:connection_tab.bootstrap_server\")}\n            isReadOnly\n          >\n            {externalServer}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"kafka:connection_tab.service_accounts_small\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\n                \"kafka:connection_tab.create_service_account_to_generate_credentials\"\n              }\n              components={{\n                value: (\n                  <Link\n                    to={linkToServiceAccount}\n                    data-testid=\"tableStreams-linkKafka\"\n                  ></Link>\n                ),\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <Button\n        variant={ButtonVariant.secondary}\n        isInline\n        onClick={showCreateServiceAccountModal}\n        data-testid=\"drawerStreams-buttonCreateServiceAccount\"\n      >\n        {t(\"kafka:connection_tab.create_service_account\")}\n      </Button>\n      <TextContent className=\"pf-u-pt-sm\">\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\"kafka:connection_tab.current_instance\"}\n              components={{\n                value: <Link to={linkToAccessTab}></Link>,\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <ExpandableSection\n        toggleContent={\n          <div className=\"pf-c-content\">\n            <Text component={TextVariants.h3}>\n              {t(\"kafka:connection_tab.rest_api_header\")}\n            </Text>\n          </div>\n        }\n        isExpanded={isExpanded}\n        onToggle={onChangeExpandedSection}\n        className=\"pf-u-mt-lg\"\n      >\n        <TextContent className=\"pf-u-pb-sm\">\n          <Text component={TextVariants.small} className={\"pf-c-content\"}>\n            {t(\"kafka:connection_tab.rest_api_description\")}\n          </Text>\n        </TextContent>\n        <TextContent>\n          <strong>\n            {t(\"kafka:connection_tab.kafka_instance_url_label\")}\n            <Popover\n              headerContent={\n                <div>\n                  {t(\"kafka:connection_tab.kafka_instance_url_popover_label\")}\n                </div>\n              }\n              bodyContent={\n                <div>\n                  {t(\"kafka:connection_tab.kafka_instance_url_popover_body\")}\n                </div>\n              }\n            >\n              <Button\n                variant={ButtonVariant.plain}\n                aria-label={t(\n                  \"kafka:connection_tab.kafka_instance_url_button_aria_label\"\n                )}\n              >\n                <HelpIcon />\n              </Button>\n            </Popover>\n          </strong>\n          {adminAPIUrl ? (\n            <ClipboardCopy\n              textAriaLabel={t(\"kafka:connection_tab.kafka_instance_url_label\")}\n              isReadOnly\n            >\n              {adminAPIUrl}\n            </ClipboardCopy>\n          ) : (\n            <Skeleton fontSize=\"2xl\" />\n          )}\n          <TextContent className=\"pf-u-pt-sm\">\n            <Text component={TextVariants.small}>\n              {t(\"kafka:connection_tab.kafka_instance_url_description\")}\n            </Text>\n          </TextContent>\n        </TextContent>\n        <TextContent className=\"pf-u-mt-md\">\n          <strong>\n            {t(\"kafka:connection_tab.kafka_management_url\")}\n            <Popover\n              headerContent={\n                <div>\n                  {t(\"kafka:connection_tab.kafka_management_popover_header\")}\n                </div>\n              }\n              bodyContent={\n                <div>\n                  {t(\"kafka:connection_tab.kafka_management_popover_body\")}\n                </div>\n              }\n            >\n              <Button\n                variant={ButtonVariant.plain}\n                aria-label={t(\n                  \"kafka:connection_tab.kafka_management_button_aria_label\"\n                )}\n              >\n                <HelpIcon />\n              </Button>\n            </Popover>\n          </strong>\n          {isKafkaPending ? (\n            <Skeleton fontSize=\"2xl\" />\n          ) : (\n            <ClipboardCopy\n              textAriaLabel={t(\"kafka:connection_tab.kafka_management_url\")}\n              isReadOnly\n            >\n              {kafkaFleetManagerUrl}\n            </ClipboardCopy>\n          )}\n          <TextContent className=\"pf-u-pt-sm\">\n            <Text component={TextVariants.small}>\n              {t(\"kafka:connection_tab.kafka_management_description\")}\n            </Text>\n          </TextContent>\n        </TextContent>\n      </ExpandableSection>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"kafka:connection_tab.authentication_method\")}\n        </Text>\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"kafka:connection_tab.sasl_oauthbearer\")}{\" \"}\n          <Label color=\"green\">{t(\"kafka:connection_tab.recommended\")}</Label>\n          <Popover\n            aria-label={t(\"kafka:connection_tab.sasl_oauthbearer\")}\n            bodyContent={\n              <div>\n                {t(\"kafka:connection_tab.sasl_oauthbearer_popover_content\")}\n              </div>\n            }\n          >\n            <Button\n              variant={ButtonVariant.plain}\n              aria-label={t(\n                \"kafka:connection_tab.more_info_about_sasl_oauthbearer\"\n              )}\n            >\n              <HelpIcon />\n            </Button>\n          </Popover>\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"kafka:connection_tab.sasl_oauthbearer_description\")}\n        </Text>\n        <strong>{t(\"kafka:connection_tab.token_endpoint_url\")}</strong>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            textAriaLabel={t(\"kafka:connection_tab.token_endpoint_url\")}\n            isReadOnly\n          >\n            {tokenEndPointUrl}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"kafka:connection_tab.sasl_plain\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"kafka:connection_tab.sasl_plain_description\")}\n        </Text>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  ClipboardCopy,\n  ExpandableSection,\n  Label,\n  Popover,\n  Skeleton,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport type KafkaConnectionTabP1Props = {\n  isKafkaPending?: boolean;\n  externalServer?: string;\n  tokenEndPointUrl: string;\n  linkToServiceAccount: string;\n  linkToAccessTab: string;\n  adminAPIUrl: string | undefined;\n  showCreateServiceAccountModal: () => void;\n  kafkaFleetManagerUrl: string;\n};\n\nexport const KafkaConnectionTabP1: FunctionComponent<\n  KafkaConnectionTabP1Props\n> = ({\n  isKafkaPending,\n  externalServer,\n  tokenEndPointUrl,\n  linkToServiceAccount,\n  linkToAccessTab,\n  adminAPIUrl,\n  kafkaFleetManagerUrl,\n  showCreateServiceAccountModal,\n}) => {\n  const { t } = useTranslation(\"connection-tab-p1\");\n\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n\n  const onChangeExpandedSection = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"drawer_resource_tab_body_description_1\")}\n        </Text>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"bootstrap_server\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"bootstrap_server_description\")}\n        </Text>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            data-testid=\"drawerStreams-copyBootstrapURL\"\n            textAriaLabel={t(\"bootstrap_server\")}\n            isReadOnly\n          >\n            {externalServer}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"service_accounts_small\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\n                \"connection-tab-p1:create_service_account_to_generate_credentials\"\n              }\n              components={{\n                value: (\n                  <Link\n                    to={linkToServiceAccount}\n                    data-testid=\"tableStreams-linkKafka\"\n                  ></Link>\n                ),\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <Button\n        variant={ButtonVariant.secondary}\n        isInline\n        onClick={showCreateServiceAccountModal}\n        data-testid=\"drawerStreams-buttonCreateServiceAccount\"\n      >\n        {t(\"create_service_account\")}\n      </Button>\n      <TextContent className=\"pf-u-pt-sm\">\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\"connection-tab-p1:current_instance\"}\n              components={{\n                value: <Link to={linkToAccessTab}></Link>,\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <ExpandableSection\n          toggleContent={\n            <div className=\"pf-c-content\">\n              <Text component={TextVariants.h3} className={\"pf-c-content\"}>\n                {t(\"rest_api_header\")}\n              </Text>\n            </div>\n          }\n          isExpanded={isExpanded}\n          onToggle={onChangeExpandedSection}\n          className=\"pf-u-mt-lg\"\n        >\n          <TextContent className=\"pf-u-pb-sm\">\n            <Text component={TextVariants.small}>\n              {t(\"rest_api_description\")}\n            </Text>\n          </TextContent>\n          <TextContent>\n            <strong>\n              {t(\"kafka_instance_url_label\")}\n              <Popover\n                headerContent={\n                  <div>{t(\"kafka_instance_url_popover_label\")}</div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"kafka_instance_url_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab-p1\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkainstance?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kafka-admin-rest.yaml%3Fref%3Ddoc-portal&readonly=true\"\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\"kafka_instance_url_button_aria_label\")}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {adminAPIUrl ? (\n              <ClipboardCopy\n                textAriaLabel={t(\"kafka_instance_url_label\")}\n                isReadOnly\n              >\n                {adminAPIUrl}\n              </ClipboardCopy>\n            ) : (\n              <Skeleton fontSize=\"2xl\" />\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"kafka_instance_url_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n          <TextContent className=\"pf-u-mt-md\">\n            <strong>\n              {t(\"kafka_management_url\")}\n              <Popover\n                headerContent={\n                  <div>{t(\"kafka_management_popover_header\")}</div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"kafka_management_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab-p1\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkamgmt?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kas-fleet-manager.yaml%3Fref%3Ddoc-portal\"\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\"kafka_management_button_aria_label\")}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {isKafkaPending ? (\n              <Skeleton fontSize=\"2xl\" />\n            ) : (\n              <ClipboardCopy\n                textAriaLabel={t(\"kafka_management_url\")}\n                isReadOnly\n              >\n                {kafkaFleetManagerUrl}\n              </ClipboardCopy>\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"kafka_management_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n        </ExpandableSection>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"authentication_method\")}\n        </Text>\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"sasl_oauthbearer\")}{\" \"}\n          <Label color=\"green\">{t(\"recommended\")}</Label>\n          <Popover\n            aria-label={t(\"sasl_oauthbearer\")}\n            bodyContent={<div>{t(\"sasl_oauthbearer_popover_content\")}</div>}\n          >\n            <Button\n              variant={ButtonVariant.plain}\n              aria-label={t(\"more_info_about_sasl_oauthbearer\")}\n            >\n              <HelpIcon />\n            </Button>\n          </Popover>\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sasl_oauthbearer_description\")}\n        </Text>\n        <strong>{t(\"token_endpoint_url\")}</strong>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy textAriaLabel={t(\"token_endpoint_url\")} isReadOnly>\n            {tokenEndPointUrl}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"sasl_plain\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sasl_plain_description\")}\n        </Text>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  ClipboardCopy,\n  ExpandableSection,\n  Label,\n  Popover,\n  Skeleton,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport {\n  ExternalLink,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SuspendedConnection } from \"./SuspendedConnection\";\n\nexport type KafkaConnectionTabP2Props = {\n  isKafkaSuspended?: boolean;\n  isKafkaPending?: boolean;\n  externalServer?: string;\n  tokenEndPointUrl: string;\n  linkToServiceAccount: string;\n  linkToAccessTab: string;\n  adminAPIUrl: string | undefined;\n  showCreateServiceAccountModal: () => void;\n  kafkaFleetManagerUrl: string;\n};\n\nexport const KafkaConnectionTabP2: FunctionComponent<\n  KafkaConnectionTabP2Props\n> = ({\n  isKafkaSuspended,\n  isKafkaPending,\n  externalServer,\n  tokenEndPointUrl,\n  linkToServiceAccount,\n  linkToAccessTab,\n  adminAPIUrl,\n  kafkaFleetManagerUrl,\n  showCreateServiceAccountModal,\n}) => {\n  const { t } = useTranslation();\n\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n\n  const onChangeExpandedSection = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return isKafkaSuspended ? (\n    <SuspendedConnection />\n  ) : (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:drawer_resource_tab_body_description_1\")}\n        </Text>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:bootstrap_server\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:bootstrap_server_description\")}\n        </Text>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            data-testid=\"drawerStreams-copyBootstrapURL\"\n            textAriaLabel={t(\"connection-tab:bootstrap_server\")}\n            isReadOnly\n          >\n            {externalServer}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:service_accounts_small\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\n                \"connection-tab:create_service_account_to_generate_credentials\"\n              }\n              components={{\n                value: (\n                  <Link\n                    to={linkToServiceAccount}\n                    data-testid=\"tableStreams-linkKafka\"\n                  ></Link>\n                ),\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <Button\n        variant={ButtonVariant.secondary}\n        isInline\n        onClick={showCreateServiceAccountModal}\n        data-testid=\"drawerStreams-buttonCreateServiceAccount\"\n      >\n        {t(\"connection-tab:create_service_account\")}\n      </Button>\n      <TextContent className=\"pf-u-pt-sm\">\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\"connection-tab:current_instance\"}\n              components={{\n                value: <Link to={linkToAccessTab}></Link>,\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <ExpandableSection\n          toggleContent={\n            <div className=\"pf-c-content\">\n              <Text component={TextVariants.h3} className={\"pf-c-content\"}>\n                {t(\"connection-tab:rest_api_header\")}\n              </Text>\n            </div>\n          }\n          isExpanded={isExpanded}\n          onToggle={onChangeExpandedSection}\n          className=\"pf-u-mt-lg\"\n        >\n          <TextContent className=\"pf-u-pb-sm\">\n            <Text component={TextVariants.small}>\n              {t(\"connection-tab:rest_api_description\")}\n            </Text>\n          </TextContent>\n          <TextContent>\n            <strong>\n              {t(\"connection-tab:kafka_instance_url_label\")}\n              <Popover\n                headerContent={\n                  <div>\n                    {t(\"connection-tab:kafka_instance_url_popover_label\")}\n                  </div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"connection-tab:kafka_instance_url_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkainstance?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kafka-admin-rest.yaml%3Fref%3Ddoc-portal&readonly=true\"\n                          />,\n                          <ExternalLink\n                            testId={\"customerPortal-link\"}\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_openshift_application_services/1/guide/2409253a-45ee-470e-bdc9-5db4bfcf9d0f\"\n                            className={\"pf-u-ml-xs\"}\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\n                    \"connection-tab:kafka_instance_url_button_aria_label\"\n                  )}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {adminAPIUrl ? (\n              <ClipboardCopy\n                textAriaLabel={t(\"connection-tab:kafka_instance_url_label\")}\n                isReadOnly\n              >\n                {adminAPIUrl}\n              </ClipboardCopy>\n            ) : (\n              <Skeleton fontSize=\"2xl\" />\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"connection-tab:kafka_instance_url_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n          <TextContent className=\"pf-u-mt-md\">\n            <strong>\n              {t(\"connection-tab:kafka_management_url\")}\n              <Popover\n                headerContent={\n                  <div>\n                    {t(\"connection-tab:kafka_management_popover_header\")}\n                  </div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"connection-tab:kafka_management_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkamgmt?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kas-fleet-manager.yaml%3Fref%3Ddoc-portal\"\n                          />,\n                          <ExternalLink\n                            testId={\"customerPortal-link\"}\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_openshift_application_services/1/guide/2409253a-45ee-470e-bdc9-5db4bfcf9d0f\"\n                            className={\"pf-u-ml-xs\"}\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\n                    \"connection-tab:kafka_management_button_aria_label\"\n                  )}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {isKafkaPending ? (\n              <Skeleton fontSize=\"2xl\" />\n            ) : (\n              <ClipboardCopy\n                textAriaLabel={t(\"connection-tab:kafka_management_url\")}\n                isReadOnly\n              >\n                {kafkaFleetManagerUrl}\n              </ClipboardCopy>\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"connection-tab:kafka_management_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n        </ExpandableSection>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:authentication_method\")}\n        </Text>\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"connection-tab:sasl_oauthbearer\")}{\" \"}\n          <Label color=\"green\">{t(\"connection-tab:recommended\")}</Label>\n          <Popover\n            aria-label={t(\"connection-tab:sasl_oauthbearer\")}\n            bodyContent={\n              <div>{t(\"connection-tab:sasl_oauthbearer_popover_content\")}</div>\n            }\n          >\n            <Button\n              variant={ButtonVariant.plain}\n              aria-label={t(\"connection-tab:more_info_about_sasl_oauthbearer\")}\n            >\n              <HelpIcon />\n            </Button>\n          </Popover>\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:sasl_oauthbearer_description\")}\n        </Text>\n        <strong>{t(\"connection-tab:token_endpoint_url\")}</strong>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            textAriaLabel={t(\"connection-tab:token_endpoint_url\")}\n            isReadOnly\n          >\n            {tokenEndPointUrl}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"connection-tab:sasl_plain\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:sasl_plain_description\")}\n        </Text>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  Skeleton,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from \"@patternfly/react-core\";\nimport { FormatDate, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { ReactChild, VoidFunctionComponent } from \"react\";\nimport type { MarketplaceSubscription, Plan } from \"../../../types\";\nimport { DetailsTabAlert } from \"./DetailsTabAlert\";\n\n/**\n * All fields marked as accepting undefined will show a skeleton loader until the value is available.\n * This is to support fetching the data from different APIs.\n */\nexport type KafkaDetailsTabProps = {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n  expiryDate: Date | undefined;\n  owner: string;\n  provider: string;\n  region: string;\n  instanceType: Plan;\n  size: string | undefined;\n  ingress: number | undefined;\n  egress: number | undefined;\n  storage: number | undefined;\n  maxPartitions: number | undefined;\n  connections: number | undefined;\n  connectionRate: number | undefined;\n  messageSize: number | undefined;\n  billing: \"prepaid\" | MarketplaceSubscription | undefined;\n  kafkaVersion: string;\n};\n\nexport const KafkaDetailsTab: VoidFunctionComponent<KafkaDetailsTabProps> = ({\n  id,\n  createdAt,\n  updatedAt,\n  owner,\n  provider,\n  region,\n  expiryDate,\n  instanceType,\n  size,\n  ingress,\n  egress,\n  storage,\n  maxPartitions,\n  connections,\n  connectionRate,\n  messageSize,\n  billing,\n  kafkaVersion,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const renderTextListItem = (title: string, value: ReactChild | undefined) => (\n    <>\n      <TextListItem component={TextListItemVariants.dt}>{title}</TextListItem>\n      {value ? (\n        <TextListItem component={TextListItemVariants.dd}>{value}</TextListItem>\n      ) : (\n        <Skeleton\n          width=\"50%\"\n          screenreaderText={t(\"common:skeleton_loader_screenreader_text\", {\n            contentName: title,\n          })}\n        />\n      )}\n    </>\n  );\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      {instanceType !== \"standard\" && expiryDate && (\n        <DetailsTabAlert expiryDate={expiryDate} />\n      )}\n      <TextContent>\n        <TextList component={TextListVariants.dl}>\n          {instanceType === \"standard\" &&\n            renderTextListItem(\n              t(\"common:size\"),\n              size\n                ? t(\"create-kafka-instance:streaming_size_value\", {\n                    value: size,\n                  })\n                : undefined\n            )}\n          {renderTextListItem(\n            t(\"ingress\"),\n            ingress\n              ? t(\"create-kafka-instance:ingress_value\", {\n                  value: ingress,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"egress\"),\n            egress\n              ? t(\"create-kafka-instance:egress_value\", {\n                  value: egress,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"storage\"),\n            storage\n              ? t(\"create-kafka-instance:storage_value\", {\n                  value: storage,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"partitions\"),\n            maxPartitions\n              ? t(\"create-kafka-instance:partitions_value\", {\n                  value: maxPartitions,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"client_connections\"),\n            connections\n              ? t(\"create-kafka-instance:client_connections_value\", {\n                  value: connections,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"connection_rate\"),\n            connectionRate\n              ? t(\"create-kafka-instance:connection_rate_value\", {\n                  value: connectionRate,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"message_size\"),\n            messageSize\n              ? t(\"create-kafka-instance:message_size_value\", {\n                  value: messageSize,\n                })\n              : undefined\n          )}\n\n          {renderTextListItem(t(\"common:id\"), id)}\n          {renderTextListItem(t(\"common:kafka_version\"), kafkaVersion)}\n          {renderTextListItem(t(\"common:owner\"), owner)}\n          {renderTextListItem(\n            t(\"common:time_created\"),\n            <FormatDate date={createdAt} format={\"long\"} />\n          )}\n          {renderTextListItem(\n            t(\"common:time_updated\"),\n            <FormatDate date={updatedAt} format={\"long\"} />\n          )}\n          {renderTextListItem(t(\"common:cloud_provider\"), provider)}\n          {renderTextListItem(t(\"common:region\"), region)}\n          {renderTextListItem(\n            t(\"create-kafka-instance:billing.field_label\"),\n            (() => {\n              if (billing === undefined) {\n                return undefined;\n              } else if (billing === \"prepaid\") {\n                return t(\"create-kafka-instance:billing.prepaid_option\");\n              } else {\n                switch (billing.marketplace) {\n                  case \"aws\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_aws\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"azure\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_azure\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"gcp\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_gcp\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"rhm\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_rh\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                }\n              }\n            })()\n          )}\n        </TextList>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const SuspendedConnection: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.small}>\n      <EmptyStateIcon icon={ExclamationTriangleIcon} color={\"#f0ab00\"} />\n      <Title headingLevel={\"h1\"} size={TitleSizes.lg}>\n        {t(\"suspend_empty_state_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"suspend_empty_state_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","export * from './KafkaConnectionTab';\nexport * from './KafkaConnectionTabP1';\nexport * from './KafkaDetailsTab';\nexport * from './KafkaConnectionTabP2';","export * from \"./KafkaInstanceDrawer\";\n","import { differenceInMinutes } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport { useInterval } from \"@rhoas/app-services-ui-components\";\nimport type { Status } from \"../../types\";\nimport type { StatusPopoverProps } from \"./components\";\nimport { StatusLabel, StatusPopover, SuspendedPopover } from \"./components\";\nimport { KafkaToPopoverMapping } from \"./types\";\n\nexport type KafkaInstanceStatusProps = {\n  status: Status;\n  createdAt: Date;\n  warningAfterMinutes?: number;\n  errorAfterMinutes?: number;\n} & Pick<StatusPopoverProps, \"onClickConnectionTabLink\" | \"onClickSupportLink\">;\n\n/**\n * A component to show the status of a Kafka instance combining the\n * `StatusPopover` with the `StatusLabel`, with automatic handling of which\n * statuses should have a companion popover.\n */\nexport const KafkaInstanceStatus: VoidFunctionComponent<\n  KafkaInstanceStatusProps\n> = ({\n  status,\n  createdAt,\n  warningAfterMinutes = 15,\n  errorAfterMinutes = 30,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n}) => {\n  const popoverStatus = KafkaToPopoverMapping[status];\n  const [alert, setAlert] = useState<\"warning\" | \"error\" | false>(false);\n  const labelRef = useRef<HTMLButtonElement>(null);\n\n  const checkCreatedAt = useCallback(() => {\n    const elapsed = differenceInMinutes(new Date(), createdAt);\n    if (elapsed > errorAfterMinutes) {\n      setAlert(\"error\");\n    } else if (elapsed > warningAfterMinutes) {\n      setAlert(\"warning\");\n    } else {\n      setAlert(false);\n    }\n  }, [createdAt, errorAfterMinutes, warningAfterMinutes]);\n\n  useInterval(checkCreatedAt, 5000);\n  const showWarning = alert === \"warning\";\n  const showError = alert === \"error\";\n  return (\n    <>\n      {popoverStatus === \"suspended\" ? (\n        <SuspendedPopover reference={labelRef} />\n      ) : (\n        popoverStatus && (\n          <StatusPopover\n            status={popoverStatus}\n            showWarning={showWarning}\n            showError={showError}\n            onClickConnectionTabLink={onClickConnectionTabLink}\n            onClickSupportLink={onClickSupportLink}\n            reference={labelRef}\n          />\n        )\n      )}\n      <StatusLabel\n        value={status}\n        showWarning={showWarning}\n        showError={showError}\n        withPopover={popoverStatus !== undefined}\n        ref={labelRef}\n      />\n    </>\n  );\n};\n","import {\n  Alert,\n  Button,\n  Flex,\n  FlexItem,\n  HelperText,\n  HelperTextItem,\n  Spinner,\n  Split,\n  SplitItem,\n} from \"@patternfly/react-core\";\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { forwardRef } from \"react\";\nimport type { Status } from \"../../../types\";\nimport {\n  CreatingStatuses,\n  DegradedStatuses,\n  DeletingStatuses,\n  ReadyStatuses,\n  ResumingStatuses,\n  SuspendedStatuses,\n  SuspendingStatuses,\n} from \"../../../types\";\nimport \"./StatusLabel.css\";\n\ntype StatusLabelProps = {\n  value: Status;\n  showWarning?: boolean;\n  showError?: boolean;\n  withPopover?: boolean;\n};\n\n/**\n *<strong> Introduction </strong>\n *These are the various statuses that can show in the Kafka instances table under the \"Status\" header.\n */\nexport const StatusLabel = forwardRef<HTMLButtonElement, StatusLabelProps>(\n  (\n    { value, showWarning = false, showError = false, withPopover = false },\n    ref\n  ) => {\n    const { t } = useTranslation(\"kafka\");\n\n    const buttonVariant = withPopover ? \"link\" : \"plain\";\n\n    switch (true) {\n      case ReadyStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <CheckCircleIcon className=\"mas-m-ready\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.ready\")}</SplitItem>\n            </Split>\n          </div>\n        );\n\n      case CreatingStatuses.includes(value):\n        switch (true) {\n          case showWarning:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                  </SplitItem>\n                </Split>\n                <Alert\n                  variant=\"warning\"\n                  isInline\n                  isPlain\n                  title=\"This is taking longer than expected.\"\n                />\n              </div>\n            );\n          case showError:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                  </SplitItem>\n                </Split>\n                <Alert\n                  variant=\"danger\"\n                  isInline\n                  isPlain\n                  title={t(\"status_warning_or_error_title\")}\n                />\n              </div>\n            );\n          default:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                    <Flex>\n                      <FlexItem>\n                        <HelperText>\n                          <HelperTextItem variant=\"indeterminate\">\n                            {t(\"status_created_shortly_help\")}\n                          </HelperTextItem>\n                        </HelperText>\n                      </FlexItem>\n                    </Flex>\n                  </SplitItem>\n                </Split>\n              </div>\n            );\n        }\n\n      case DegradedStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <ExclamationTriangleIcon className=\"mas-m-degraded\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.degraded\")}</SplitItem>\n            </Split>\n          </div>\n        );\n\n      case SuspendingStatuses.includes(value):\n        return (\n          <div>\n            <p className=\"mas-m-deleting\"> {t(\"statuses.suspending\")}</p>\n          </div>\n        );\n      case SuspendedStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <ExclamationTriangleIcon className=\"mas-m-degraded\" />\n              </SplitItem>\n              <SplitItem>\n                <Button ref={ref} variant={buttonVariant} isInline>\n                  {t(\"statuses.suspended\")}\n                </Button>\n              </SplitItem>\n            </Split>\n          </div>\n        );\n      case ResumingStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <Spinner size=\"md\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.resuming\")}</SplitItem>\n            </Split>\n          </div>\n        );\n      case DeletingStatuses.includes(value):\n        return (\n          <div>\n            <p className=\"mas-m-deleting\"> {t(\"statuses.deleting\")}</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  }\n);\n","import type { PopoverProps } from \"@patternfly/react-core\";\nimport { Popover } from \"@patternfly/react-core\";\nimport type { RefObject, VoidFunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport type { StatusPopoverContentProps } from \"./StatusPopoverContent\";\nimport { StatusPopoverContent } from \"./StatusPopoverContent\";\n\nexport type StatusPopoverProps = {\n  status: PopoverStatus;\n  initialOpen?: boolean;\n  showWarning?: boolean;\n  showError?: boolean;\n  children?: PopoverProps[\"children\"];\n  onClickConnectionTabLink: StatusPopoverContentProps[\"onClickConnectionTabLink\"];\n  onClickSupportLink: StatusPopoverContentProps[\"onClickSupportLink\"];\n  reference?: RefObject<HTMLButtonElement>;\n};\n\n/**\n * ## Introduction\n *\n * This is a popover that can be reached from the Kafka Instance table while the status of the instance in question is “Creating”.\n * A Kafka instance usually takes a few minutes to create. The purpose of this popover is to give the user some insights into\n * the creation process of their instance while they wait for it to be available to use.\n *\n * - The text at the top explains that the instance will be ready shortly & suggests that the user creates a service account while they wait.\n *  (Provides a link to the “Connections tab\" where this is done).\n *\n * - The steps shown in the progress stepper are statuses that show in the api. They have been grouped together under the one overall\n * “Creating status” in the table.There is some descriptive text accompanying each step too. When these steps are complete the instance will be ready for use\n *\n * - The popover is only available while instance creation is in progress.\n * - After creation is complete the table displays the ready status and the popover is no longer available.\n *\n */\nexport const StatusPopover: VoidFunctionComponent<StatusPopoverProps> = ({\n  initialOpen = false,\n  status,\n  showWarning = false,\n  showError = false,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n  reference,\n  children,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const [isVisible, setIsVisible] = useState(initialOpen);\n  const onClose = () => setIsVisible(false);\n\n  const handleClickConnectionTabLink = useCallback(() => {\n    onClose();\n    onClickConnectionTabLink();\n  }, [onClickConnectionTabLink]);\n\n  const handleClickSupportLink = useCallback(() => {\n    onClose();\n    onClickSupportLink();\n  }, [onClickSupportLink]);\n\n  return (\n    <Popover\n      headerContent={t(\"kafka_status_popover.title\")}\n      bodyContent={\n        <StatusPopoverContent\n          currentStatus={status}\n          showWarning={showWarning}\n          showError={showError}\n          onClickConnectionTabLink={handleClickConnectionTabLink}\n          onClickSupportLink={handleClickSupportLink}\n        />\n      }\n      isVisible={isVisible}\n      shouldOpen={() => setIsVisible(true)}\n      shouldClose={() => setIsVisible(false)}\n      position={\"right\"}\n      enableFlip={true}\n      reference={reference}\n    >\n      {children}\n    </Popover>\n  );\n};\n","import {\n  Alert,\n  Button,\n  ButtonVariant,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport { PopoverStatusOrder } from \"../types\";\nimport { StatusProgressStepper } from \"./StatusProgressStepper\";\n\nexport type StatusPopoverContentProps = {\n  currentStatus: PopoverStatus;\n  showWarning?: boolean;\n  showError?: boolean;\n  onClickConnectionTabLink: () => void;\n  onClickSupportLink: () => void;\n};\n\nexport const StatusPopoverContent: VoidFunctionComponent<\n  StatusPopoverContentProps\n> = ({\n  currentStatus,\n  showWarning = false,\n  showError = false,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const currentStep = PopoverStatusOrder.findIndex((s) => s === currentStatus);\n\n  return (\n    <div>\n      <Stack hasGutter>\n        <StackItem>\n          {showWarning && (\n            <Alert\n              variant=\"warning\"\n              isInline\n              isPlain\n              title={t(\"kafka_status_popover.warning_or_error_title\")}\n            >\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  <Trans\n                    ns={[\"create-kafka-instance\"]}\n                    i18nKey=\"kafka_status_popover.header_content_with_warning\"\n                    components={[\n                      <Button\n                        key=\"btn-connetcion-tab\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickConnectionTabLink}\n                        isInline\n                      />,\n                    ]}\n                  />\n                </Text>\n              </TextContent>\n            </Alert>\n          )}\n          {showError && (\n            <Alert\n              variant=\"danger\"\n              isInline\n              isPlain\n              title={t(\"kafka_status_popover.warning_or_error_title\")}\n            >\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  <Trans\n                    ns={[\"create-kafka-instance\"]}\n                    i18nKey=\"kafka_status_popover.header_content_with_error\"\n                    components={[\n                      <Button\n                        key=\"btn-connetcion-tab\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickConnectionTabLink}\n                        isInline\n                      />,\n                      <Button\n                        key=\"btn-support-case\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickSupportLink}\n                        isInline\n                      />,\n                    ]}\n                  />\n                </Text>\n              </TextContent>\n            </Alert>\n          )}\n          {!showError && !showWarning && (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey=\"kafka_status_popover.header_content\"\n                  components={[\n                    <Button\n                      key=\"btn-connetcion-tab\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickConnectionTabLink}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Text>\n            </TextContent>\n          )}\n        </StackItem>\n        <StackItem>\n          {t(\"common:progress_stepper_current_step\", {\n            currentStep,\n            total: PopoverStatusOrder.length,\n          })}\n        </StackItem>\n        <StackItem>\n          <StatusProgressStepper currentStatus={currentStatus} />\n        </StackItem>\n      </Stack>\n    </div>\n  );\n};\n","import { ProgressStep, ProgressStepper } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport { PopoverStatusOrder } from \"../types\";\n\ntype StatusProgressStepperProps = {\n  currentStatus: PopoverStatus;\n};\n\nexport const StatusProgressStepper: VoidFunctionComponent<\n  StatusProgressStepperProps\n> = ({ currentStatus }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const currentStep = PopoverStatusOrder.findIndex((s) => s === currentStatus);\n\n  const getVariant = (index: number) =>\n    (currentStep === index && \"info\") ||\n    (currentStep > index && \"success\") ||\n    \"default\";\n\n  return (\n    <ProgressStepper isVertical={true}>\n      <ProgressStep\n        id={\"pending\"}\n        titleId={\"pending\"}\n        isCurrent={currentStatus === \"pending\"}\n        description={t(\"kafka_status_popover.pending.description\")}\n        aria-label={t(\"kafka_status_popover.pending.description\")}\n        variant={getVariant(0)}\n      >\n        {t(\"kafka_status_popover.pending.title\")}\n      </ProgressStep>\n\n      <ProgressStep\n        id={\"provisioning\"}\n        titleId={\"provisioning\"}\n        isCurrent={currentStatus === \"provisioning\"}\n        description={t(\"kafka_status_popover.provisioning.description\")}\n        aria-label={t(\"kafka_status_popover.provisioning.description\")}\n        variant={getVariant(1)}\n      >\n        {t(\"kafka_status_popover.provisioning.title\")}\n      </ProgressStep>\n      <ProgressStep\n        id={\"preparing\"}\n        titleId={\"preparing\"}\n        isCurrent={currentStatus === \"preparing\"}\n        description={t(\"kafka_status_popover.preparing.description\")}\n        aria-label={t(\"kafka_status_popover.preparing.description\")}\n        variant={getVariant(2)}\n      >\n        {t(\"kafka_status_popover.preparing.title\")}\n      </ProgressStep>\n    </ProgressStepper>\n  );\n};\n","import type { PopoverProps } from \"@patternfly/react-core\";\nimport { Popover, TextContent } from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { RefObject, VoidFunctionComponent } from \"react\";\n\nexport type SuspendedPopoverProps = {\n  children?: PopoverProps[\"children\"];\n  reference?: RefObject<HTMLButtonElement>;\n};\n\nexport const SuspendedPopover: VoidFunctionComponent<SuspendedPopoverProps> = ({\n  children,\n  reference,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <Popover\n      alertSeverityVariant={\"warning\"}\n      headerIcon={<ExclamationTriangleIcon />}\n      headerContent={t(\"suspend_popover_title\")}\n      bodyContent={\n        <TextContent>\n          <p>{t(\"suspend_popover_body_1\")}</p>\n        </TextContent>\n      }\n      position={\"right\"}\n      reference={reference}\n    >\n      {children}\n    </Popover>\n  );\n};\n","export * from \"./StatusLabel\";\nexport * from \"./StatusPopover\";\nexport * from \"./SuspendedPopover\";\n","export * from \"./KafkaInstanceStatus\";\n","export type KafkaStatus =\n  | \"ready\"\n  | \"degraded\"\n  | \"accepted\"\n  | \"provisioning\"\n  | \"preparing\"\n  | \"deprovision\"\n  | \"deleting\"\n  | \"suspended\"\n  | \"suspending\"\n  | \"resuming\";\n\nexport type PopoverStatus =\n  | \"pending\"\n  | \"provisioning\"\n  | \"preparing\"\n  | \"ready\"\n  | \"suspended\";\n\nexport const PopoverStatusOrder: PopoverStatus[] = [\n  \"pending\",\n  \"preparing\",\n  \"provisioning\",\n];\n\nexport const KafkaToPopoverMapping: {\n  [status in KafkaStatus]: PopoverStatus | null;\n} = {\n  ready: null,\n  degraded: null,\n  accepted: \"pending\",\n  provisioning: \"provisioning\",\n  preparing: \"preparing\",\n  deprovision: null,\n  deleting: null,\n  suspended: \"suspended\",\n  suspending: null,\n  resuming: null,\n};\n","import { Button, PageSection, Stack, StackItem } from \"@patternfly/react-core\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  FormatDate,\n  TableView,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport { useKafkaLabels } from \"../../hooks\";\nimport type { KafkaInstance, SimplifiedStatus } from \"../../types\";\nimport { DeletingStatuses } from \"../../types\";\nimport { KafkaInstanceActions } from \"../KafkaInstanceActions\";\nimport { KafkaInstanceStatus } from \"../KafkaInstanceStatus\";\nimport type {\n  EmptyStateNoInstancesProps,\n  EmptyStateNoResultsProps,\n} from \"./components\";\nimport { EmptyStateNoInstances, EmptyStateNoResults } from \"./components\";\n\nconst Columns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"provider\",\n  \"region\",\n  \"status\",\n] as const;\n\nexport type KafkaInstancesProps<T extends KafkaInstance> = {\n  instances: Array<T> | undefined | null;\n  getUrlForInstance: (row: T) => string;\n  names: string[];\n  owners: string[];\n  statuses: string[];\n  onCreate: () => void;\n  onSearchName: (value: string) => void;\n  onRemoveNameChip: (value: string) => void;\n  onRemoveNameChips: () => void;\n  onSearchOwner: (value: string) => void;\n  onRemoveOwnerChip: (value: string) => void;\n  onRemoveOwnerChips: () => void;\n  onSearchStatus: (value: SimplifiedStatus) => void;\n  onRemoveStatusChip: (value: SimplifiedStatus) => void;\n  onRemoveStatusChips: () => void;\n  onDetails: (row: T) => void;\n  onConnection: (row: T) => void;\n  canChangeOwner: (row: T) => boolean;\n  onChangeOwner: (row: T) => void;\n  canDelete: (row: T) => boolean;\n  onDelete: (row: T) => void;\n  onClickConnectionTabLink: (row: T) => void;\n  onClickSupportLink: () => void;\n  onInstanceLinkClick: (row: T) => void;\n  canHaveInstanceLink: (row: T) => boolean;\n  canOpenConnection: (row: T) => boolean;\n} & Pick<\n  TableViewProps<T, typeof Columns[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n> &\n  EmptyStateNoInstancesProps &\n  EmptyStateNoResultsProps;\n\nexport const KafkaInstances = <T extends KafkaInstance>({\n  instances,\n  itemCount,\n  page,\n  perPage,\n  names,\n  owners,\n  statuses,\n  getUrlForInstance,\n  isRowSelected,\n  isColumnSortable,\n  onPageChange,\n  onDetails,\n  onConnection,\n  canChangeOwner,\n  onChangeOwner,\n  canDelete,\n  onDelete,\n  onCreate,\n  onQuickstartGuide,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n  onInstanceLinkClick,\n  onSearchName,\n  onRemoveNameChip,\n  onRemoveNameChips,\n  onSearchOwner,\n  onRemoveOwnerChip,\n  onRemoveOwnerChips,\n  onSearchStatus,\n  onRemoveStatusChip,\n  onRemoveStatusChips,\n  onClearAllFilters,\n\n  canHaveInstanceLink,\n  canOpenConnection,\n}: KafkaInstancesProps<T>) => {\n  const { t } = useTranslation(\"kafka\");\n  const labels = useKafkaLabels();\n  const breakpoint = \"lg\";\n\n  const isFiltered =\n    names.length > 0 || owners.length > 0 || statuses.length > 0;\n\n  return (\n    <PageSection isFilled={true}>\n      <TableView\n        data={instances}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          const timeCreatedDate = parseISO(row.createdAt);\n          const instanceLinkEnable = canHaveInstanceLink(row);\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"name\":\n                    return (\n                      <Button\n                        variant=\"link\"\n                        component={(props) => (\n                          <Link to={getUrlForInstance(row)} {...props}>\n                            {row.name}\n                          </Link>\n                        )}\n                        isInline={true}\n                        isAriaDisabled={!instanceLinkEnable}\n                        isDisabled={!instanceLinkEnable}\n                        onClick={() => onInstanceLinkClick(row)}\n                      />\n                    );\n                  case \"provider\":\n                    return labels.providers[row.provider];\n                  case \"createdAt\":\n                    return (\n                      <Stack>\n                        <StackItem>\n                          <FormatDate\n                            date={timeCreatedDate}\n                            format={\"distanceToNowWithAgo\"}\n                          />\n                        </StackItem>\n                        {row.expiryDate && (\n                          <StackItem>\n                            <Trans\n                              i18nKey=\"will_expire_short\"\n                              ns={[\"kafka\"]}\n                              components={{\n                                time: (\n                                  <FormatDate\n                                    date={parseISO(row.expiryDate)}\n                                    format=\"expiration\"\n                                  />\n                                ),\n                              }}\n                            />\n                          </StackItem>\n                        )}\n                      </Stack>\n                    );\n                  case \"status\":\n                    return (\n                      <KafkaInstanceStatus\n                        status={row[\"status\"]}\n                        createdAt={timeCreatedDate}\n                        onClickConnectionTabLink={() =>\n                          onClickConnectionTabLink(row)\n                        }\n                        onClickSupportLink={onClickSupportLink}\n                      />\n                    );\n                  default:\n                    return row[column];\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row }) => {\n          const changeOwnerEnabled = canChangeOwner(row);\n          const deleteEnabled = canDelete(row);\n          const openConnectionEnabled = canOpenConnection(row);\n          return (\n            <KafkaInstanceActions\n              onDetails={() => onDetails(row)}\n              onConnection={() => onConnection(row)}\n              canOpenConnection={openConnectionEnabled}\n              canChangeOwner={changeOwnerEnabled}\n              onChangeOwner={() => onChangeOwner(row)}\n              canDelete={deleteEnabled}\n              onDelete={() => onDelete(row)}\n            />\n          );\n        }}\n        onRowClick={({ row }) => onDetails(row)}\n        isColumnSortable={isColumnSortable}\n        isRowSelected={isRowSelected}\n        isRowDeleted={({ row }) => DeletingStatuses.includes(row[\"status\"])}\n        toolbarBreakpoint={breakpoint}\n        filters={{\n          [labels.fields.name]: {\n            type: \"search\",\n            chips: names,\n            onSearch: onSearchName,\n            onRemoveChip: onRemoveNameChip,\n            onRemoveGroup: onRemoveNameChips,\n            validate: (value) => /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(value),\n            errorMessage: t(\"kafka:input_field_invalid_message\"),\n          },\n          [labels.fields.owner]: {\n            type: \"search\",\n            chips: owners,\n            onSearch: onSearchOwner,\n            onRemoveChip: onRemoveOwnerChip,\n            onRemoveGroup: onRemoveOwnerChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"kafka:input_field_invalid_message\"),\n          },\n          [labels.fields.status]: {\n            type: \"checkbox\",\n            chips: statuses,\n            options: labels.statusesSimplified,\n            onToggle: onSearchStatus,\n            onRemoveChip: onRemoveStatusChip,\n            onRemoveGroup: onRemoveStatusChips,\n          },\n        }}\n        actions={[\n          {\n            label: t(\"create_instance\"),\n            onClick: onCreate,\n            isPrimary: true,\n          },\n        ]}\n        itemCount={itemCount}\n        page={page}\n        perPage={perPage}\n        onPageChange={onPageChange}\n        onClearAllFilters={onClearAllFilters}\n        ariaLabel={t(\"table.title\")}\n        isFiltered={isFiltered}\n        emptyStateNoData={\n          <EmptyStateNoInstances\n            onCreate={onCreate}\n            onQuickstartGuide={onQuickstartGuide}\n          />\n        }\n        emptyStateNoResults={\n          <EmptyStateNoResults onClearAllFilters={onClearAllFilters} />\n        }\n      />\n    </PageSection>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type EmptyStateNoInstancesProps = {\n  onCreate: () => void;\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoInstances: VoidFunctionComponent<\n  EmptyStateNoInstancesProps\n> = ({ onCreate, onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_instances_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_instances_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button ouiaId=\"button-create\" variant=\"primary\" onClick={onCreate}>\n        {t(\"empty_state_no_instances_create_instance\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type EmptyStateNoResultsProps = {\n  onClearAllFilters: () => void;\n};\n\nexport const EmptyStateNoResults: VoidFunctionComponent<\n  EmptyStateNoResultsProps\n> = ({ onClearAllFilters }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_results_found_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_results_found_body\"}\n          components={[<a onClick={onClearAllFilters} />]}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","export * from \"./EmptyStateNoInstances\";\nexport * from \"./EmptyStateNoResults\";\n","export * from \"./KafkaInstances\";\n","import {\n  Button,\n  Drawer,\n  DrawerContent,\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup,\n} from \"@patternfly/react-core\";\nimport { FilterIcon, SearchIcon } from \"@patternfly/react-icons\";\nimport type { BaseCellProps } from \"@patternfly/react-table\";\nimport {\n  InnerScrollContainer,\n  OuterScrollContainer,\n} from \"@patternfly/react-table\";\nimport { useMachine } from \"@xstate/react\";\nimport { parseISO } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useMemo, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport {\n  FormatDate,\n  Loading,\n  RefreshButton,\n  ResponsiveTable,\n} from \"@rhoas/app-services-ui-components\";\nimport type { DateIsoString } from \"../../types\";\nimport type { MessageDetailsProps } from \"./components\";\nimport {\n  FilterGroup,\n  LimitSelector,\n  MessageDetails,\n  NoDataCell,\n  NoDataEmptyState,\n  NoResultsEmptyState,\n  OffsetRange,\n  PartitionSelector,\n  UnknownValuePreview,\n} from \"./components\";\nimport \"./KafkaMessageBrowser.css\";\nimport type { MessageApiResponse } from \"./MessageBrowserMachine\";\nimport { MessageBrowserMachine } from \"./MessageBrowserMachine\";\nimport type { Message } from \"./types\";\nimport { beautifyUnknownValue, isSameMessage } from \"./utils\";\n\nconst columns = [\n  \"partition\",\n  \"offset\",\n  \"timestamp\",\n  \"key\",\n  \"headers\",\n  \"value\",\n] as const;\n\nconst columnWidths: BaseCellProps[\"width\"][] = [10, 10, 15, 10, undefined, 30];\n\nexport type KafkaMessageBrowserProps = {\n  getMessages: (props: {\n    partition?: number;\n    offset?: number;\n    timestamp?: DateIsoString;\n    limit: number;\n  }) => Promise<{ messages: Message[]; partitions: number }>;\n};\nexport const KafkaMessageBrowser: VoidFunctionComponent<\n  KafkaMessageBrowserProps\n> = ({ getMessages }) => {\n  const [state, send] = useMachine(() => MessageBrowserMachine, {\n    devTools: true,\n    services: {\n      api: (context) => {\n        return (send) => {\n          getMessages({\n            partition: context.partition,\n            offset: context.offset,\n            timestamp: context.timestamp,\n            limit: context.limit,\n          })\n            .then(({ messages, partitions }) =>\n              send({\n                type: \"fetchSuccess\",\n                messages,\n                partitions,\n                offsetMin: context.offset || 0,\n                offsetMax: messages.reduce(\n                  (max, m) => Math.max(max, m.offset || 0),\n                  0\n                ),\n              })\n            )\n            .catch(() => send({ type: \"fetchFail\" }));\n        };\n      },\n    },\n  });\n\n  return (\n    <KafkaMessageBrowserConnected\n      isFirstLoad={state.matches(\"initialLoading\")}\n      isNoData={state.matches(\"noData\") || state.matches(\"error\")}\n      isRefreshing={state.matches(\"refreshing\")}\n      requiresSearch={state.hasTag(\"dirty\")}\n      selectedMessage={state.context.selectedMessage}\n      response={state.context.response}\n      lastUpdated={state.context.response?.lastUpdated}\n      partition={state.context.partition}\n      limit={state.context.limit}\n      filterOffset={state.context.offset}\n      filterEpoch={state.context.epoch}\n      filterTimestamp={state.context.timestamp}\n      setPartition={(value: number | undefined) =>\n        send({ type: \"setPartition\", value })\n      }\n      setOffset={(value: number | undefined) =>\n        send({ type: \"setOffset\", value })\n      }\n      setTimestamp={(value: DateIsoString | undefined) =>\n        send({ type: \"setTimestamp\", value })\n      }\n      setEpoch={(value: number | undefined) =>\n        send({ type: \"setEpoch\", value })\n      }\n      setLatest={() => send({ type: \"setLatest\" })}\n      setLimit={(value: number) => send({ type: \"setLimit\", value })}\n      refresh={() => send({ type: \"refresh\" })}\n      selectMessage={(message: Message) =>\n        send({ type: \"selectMessage\", message })\n      }\n      deselectMessage={() => send({ type: \"deselectMessage\" })}\n    />\n  );\n};\n\nexport type KafkaMessageBrowserConnectedProps = {\n  isFirstLoad: boolean;\n  isNoData: boolean;\n  isRefreshing: boolean;\n  requiresSearch: boolean;\n  selectedMessage: Message | undefined;\n  lastUpdated: Date | undefined;\n  response: MessageApiResponse | undefined;\n  partition: number | undefined;\n  limit: number;\n  filterOffset: number | undefined;\n  filterEpoch: number | undefined;\n  filterTimestamp: DateIsoString | undefined;\n  setPartition: (value: number | undefined) => void;\n  setOffset: (value: number | undefined) => void;\n  setTimestamp: (value: DateIsoString | undefined) => void;\n  setEpoch: (value: number | undefined) => void;\n  setLatest: () => void;\n  setLimit: (value: number) => void;\n  refresh: () => void;\n  selectMessage: (message: Message) => void;\n  deselectMessage: () => void;\n};\nexport const KafkaMessageBrowserConnected: VoidFunctionComponent<\n  KafkaMessageBrowserConnectedProps\n> = ({\n  isFirstLoad,\n  isNoData,\n  isRefreshing,\n  requiresSearch,\n  selectedMessage,\n  response,\n  partition,\n  limit,\n  filterOffset,\n  filterEpoch,\n  filterTimestamp,\n  setPartition,\n  setOffset,\n  setTimestamp,\n  setEpoch,\n  setLatest,\n  setLimit,\n  refresh,\n  selectMessage,\n  deselectMessage,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [defaultTab, setDefaultTab] =\n    useState<MessageDetailsProps[\"defaultTab\"]>(\"value\");\n\n  const columnLabels: { [key in typeof columns[number]]: string } = useMemo(\n    () =>\n      ({\n        partition: t(\"field.partition\"),\n        offset: t(\"field.offset\"),\n        timestamp: t(\"field.timestamp\"),\n        key: t(\"field.key\"),\n        value: t(\"field.value\"),\n        headers: t(\"field.headers\"),\n      } as const),\n    [t]\n  );\n\n  switch (true) {\n    case isFirstLoad:\n      return <Loading />;\n    case isNoData:\n      return <NoDataEmptyState onRefresh={refresh} />;\n    default:\n      return (\n        <Drawer isInline={true} isExpanded={selectedMessage !== undefined}>\n          <DrawerContent\n            panelContent={\n              <MessageDetails\n                message={selectedMessage}\n                defaultTab={defaultTab}\n                onClose={deselectMessage}\n              />\n            }\n          >\n            <OuterScrollContainer>\n              <Toolbar\n                className={\"mas-KafkaMessageBrowser-Toolbar\"}\n                data-testid={\"message-browser-toolbar\"}\n              >\n                <ToolbarContent>\n                  <ToolbarToggleGroup\n                    toggleIcon={<FilterIcon />}\n                    breakpoint=\"2xl\"\n                  >\n                    <ToolbarGroup variant=\"filter-group\">\n                      <ToolbarItem>\n                        <PartitionSelector\n                          value={partition}\n                          partitions={response?.partitions || 0}\n                          onChange={setPartition}\n                          isDisabled={isRefreshing}\n                        />\n                      </ToolbarItem>\n                    </ToolbarGroup>\n                    <ToolbarGroup variant=\"filter-group\">\n                      <FilterGroup\n                        isDisabled={isRefreshing}\n                        offset={filterOffset}\n                        epoch={filterEpoch}\n                        timestamp={filterTimestamp}\n                        onOffsetChange={setOffset}\n                        onTimestampChange={setTimestamp}\n                        onEpochChange={setEpoch}\n                        onLatest={setLatest}\n                      />\n                    </ToolbarGroup>\n                    <ToolbarGroup>\n                      <LimitSelector\n                        value={limit}\n                        onChange={setLimit}\n                        isDisabled={isRefreshing}\n                      />\n                    </ToolbarGroup>\n                  </ToolbarToggleGroup>\n                  <ToolbarGroup>\n                    <ToolbarItem>\n                      <Button\n                        variant={\"plain\"}\n                        isDisabled={!requiresSearch || isRefreshing}\n                        aria-label={t(\"common:search_button_label\")}\n                        onClick={refresh}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </ToolbarItem>\n                    <ToolbarItem>\n                      <RefreshButton\n                        onClick={refresh}\n                        isRefreshing={isRefreshing}\n                        isDisabled={requiresSearch}\n                      />\n                    </ToolbarItem>\n                  </ToolbarGroup>\n                  <ToolbarGroup alignment={{ default: \"alignRight\" }}>\n                    {response?.filter.partition !== undefined &&\n                      response?.messages.length > 0 && (\n                        <OffsetRange\n                          min={response?.offsetMin || 0}\n                          max={response?.offsetMax || 0}\n                        />\n                      )}\n                  </ToolbarGroup>\n                </ToolbarContent>\n              </Toolbar>\n              <InnerScrollContainer>\n                <ResponsiveTable\n                  ariaLabel={t(\"table_aria_label\")}\n                  columns={columns}\n                  data={response?.messages}\n                  expectedLength={response?.messages?.length}\n                  renderHeader={({ column, Th, key }) => (\n                    <Th key={key}>{columnLabels[column]}</Th>\n                  )}\n                  renderCell={({ column, row, colIndex, Td, key }) => (\n                    <Td\n                      key={key}\n                      dataLabel={columnLabels[column]}\n                      width={columnWidths[colIndex]}\n                    >\n                      {(() => {\n                        const empty = (\n                          <NoDataCell columnLabel={columnLabels[column]} />\n                        );\n                        switch (column) {\n                          case \"partition\":\n                            return row.partition;\n                          case \"offset\":\n                            return row.offset;\n                          case \"timestamp\":\n                            return row.timestamp ? (\n                              <FormatDate\n                                date={parseISO(row.timestamp)}\n                                format={\"longWithMilliseconds\"}\n                              />\n                            ) : (\n                              empty\n                            );\n                          case \"key\":\n                            return row.key ? (\n                              <UnknownValuePreview\n                                value={row.key}\n                                truncateAt={40}\n                              />\n                            ) : (\n                              empty\n                            );\n                          case \"headers\":\n                            return Object.keys(row.headers).length > 0 ? (\n                              <UnknownValuePreview\n                                value={beautifyUnknownValue(\n                                  JSON.stringify(row.headers)\n                                )}\n                                onClick={() => {\n                                  setDefaultTab(\"headers\");\n                                  selectMessage(row);\n                                }}\n                              />\n                            ) : (\n                              empty\n                            );\n                          case \"value\":\n                            return row.value ? (\n                              <UnknownValuePreview\n                                value={beautifyUnknownValue(row.value || \"\")}\n                                onClick={() => {\n                                  setDefaultTab(\"value\");\n                                  selectMessage(row);\n                                }}\n                              />\n                            ) : (\n                              empty\n                            );\n                        }\n                      })()}\n                    </Td>\n                  )}\n                  isRowSelected={({ row }) =>\n                    selectedMessage !== undefined &&\n                    isSameMessage(row, selectedMessage)\n                  }\n                  onRowClick={({ row }) => {\n                    setDefaultTab(\"value\");\n                    selectMessage(row);\n                  }}\n                >\n                  <NoResultsEmptyState\n                    onReset={() => {\n                      setLatest();\n                      setPartition(undefined);\n                      refresh();\n                    }}\n                  />\n                </ResponsiveTable>\n              </InnerScrollContainer>\n            </OuterScrollContainer>\n          </DrawerContent>\n        </Drawer>\n      );\n  }\n};\n","import { assign, createMachine } from \"xstate\";\nimport { DateIsoString } from \"../../types\";\nimport type { Message } from \"./types\";\nimport { isSameMessage } from \"./utils\";\n\nexport type MessageApiResponse = {\n  lastUpdated: Date;\n  messages: Message[];\n  partitions: number;\n  offsetMin: number;\n  offsetMax: number;\n\n  filter: {\n    partition: number | undefined;\n    offset: number | undefined;\n    timestamp: DateIsoString | undefined;\n    limit: number | undefined;\n    epoch: number | undefined;\n  };\n};\n\nexport const MessageBrowserMachine = createMachine(\n  {\n    id: \"message-browser\",\n    tsTypes: {} as import(\"./MessageBrowserMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as {\n        // response\n        response: MessageApiResponse | undefined;\n\n        limit: number;\n        // optional input\n        partition: number | undefined;\n        offset: number | undefined;\n        epoch: number | undefined;\n        timestamp: DateIsoString | undefined;\n        selectedMessage: Message | undefined;\n      },\n      events: {} as\n        | {\n            type: \"fetchSuccess\";\n            messages: Message[];\n            partitions: number;\n            offsetMin: number;\n            offsetMax: number;\n          }\n        | { type: \"fetchFail\" }\n        | { type: \"refresh\" }\n        | { type: \"setPartition\"; value: number | undefined }\n        | { type: \"setOffset\"; value: number | undefined }\n        | { type: \"setTimestamp\"; value: DateIsoString | undefined }\n        | { type: \"setEpoch\"; value: number | undefined }\n        | { type: \"setLatest\" }\n        | { type: \"setLimit\"; value: number }\n        | { type: \"selectMessage\"; message: Message }\n        | { type: \"deselectMessage\" },\n    },\n    initial: \"initialLoading\",\n    context: {\n      // response\n      response: undefined,\n\n      limit: 10,\n      // optional input\n      partition: undefined,\n      offset: undefined,\n      timestamp: undefined,\n      selectedMessage: undefined,\n      epoch: undefined,\n    },\n    states: {\n      initialLoading: {\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMessages\",\n            target: \"verifyMessages\",\n          },\n          fetchFail: \"error\",\n        },\n      },\n      verifyMessages: {\n        always: [{ cond: \"noMessages\", target: \"noData\" }, { target: \"ready\" }],\n      },\n      noData: {\n        on: {\n          refresh: \"initialLoading\",\n        },\n      },\n      error: {\n        on: {\n          refresh: \"initialLoading\",\n        },\n      },\n      ready: {\n        initial: \"pristine\",\n        states: {\n          pristine: {},\n          dirty: {\n            tags: \"dirty\",\n          },\n          shouldSearch: {\n            always: [\n              {\n                cond: \"areFiltersChanged\",\n                target: \"dirty\",\n              },\n              { target: \"pristine\" },\n            ],\n          },\n        },\n        always: [\n          {\n            cond: \"selectedMessageNotAvailable\",\n            actions: \"deselectMessage\",\n          },\n        ],\n        on: {\n          refresh: \"refreshing\",\n          setPartition: {\n            target: \".shouldSearch\",\n            actions: \"setPartition\",\n          },\n          setEpoch: {\n            actions: \"setEpoch\",\n            target: \".shouldSearch\",\n          },\n          setTimestamp: {\n            target: \".shouldSearch\",\n            actions: \"setTimestamp\",\n          },\n          setOffset: {\n            target: \".shouldSearch\",\n            actions: \"setOffset\",\n          },\n          setLatest: {\n            target: \".shouldSearch\",\n            actions: \"setLatest\",\n          },\n          setLimit: {\n            target: \".shouldSearch\",\n            actions: \"setLimit\",\n          },\n          selectMessage: {\n            actions: \"selectMessage\",\n          },\n          deselectMessage: {\n            actions: \"deselectMessage\",\n          },\n        },\n      },\n      refreshing: {\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMessages\",\n            target: \"ready\",\n          },\n          fetchFail: {\n            target: \"ready\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setMessages: assign(\n        (context, { messages, partitions, offsetMin, offsetMax }) => ({\n          response: {\n            lastUpdated: new Date(),\n            messages,\n            partitions,\n            offsetMin,\n            offsetMax,\n            filter: {\n              partition: context.partition,\n              timestamp: context.timestamp,\n              offset: context.offset,\n              limit: context.limit,\n              epoch: context.epoch,\n            },\n          },\n        })\n      ),\n      setPartition: assign((_, { value }) => ({ partition: value })),\n      setEpoch: assign((_, { value }) => ({\n        epoch: value,\n      })),\n      setTimestamp: assign((_, { value }) => ({\n        timestamp: value,\n      })),\n      setOffset: assign((_, { value }) => ({\n        offset: value,\n      })),\n      setLimit: assign((_, { value }) => ({\n        limit: value,\n      })),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      setLatest: assign((_) => ({\n        timestamp: undefined,\n        offset: undefined,\n      })),\n      selectMessage: assign((_, { message }) => ({ selectedMessage: message })),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      deselectMessage: assign((_) => ({ selectedMessage: undefined })),\n    },\n    guards: {\n      noMessages: ({ response }) =>\n        response === undefined || response.messages.length === 0,\n      selectedMessageNotAvailable: ({ response, selectedMessage }) =>\n        selectedMessage !== undefined &&\n        response?.messages.find((m) => isSameMessage(m, selectedMessage)) ===\n          undefined,\n      areFiltersChanged: (context) =>\n        context.response?.filter.limit !== context.limit ||\n        context.response?.filter.offset !== context.offset ||\n        context.response?.filter.partition !== context.partition ||\n        context.response?.filter.timestamp !== context.timestamp ||\n        context.response?.filter.epoch !== context.epoch,\n    },\n  }\n);\n","import type { DatePickerProps, TimePickerProps } from \"@patternfly/react-core\";\nimport { DatePicker, InputGroup, TimePicker } from \"@patternfly/react-core\";\nimport { formatISO, parseISO, setHours, setMinutes } from \"date-fns\";\nimport { formatInTimeZone } from \"date-fns-tz\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { DateIsoString } from \"../../../types\";\n\nexport type DateTimePickerProps = {\n  isDisabled: boolean;\n  value: DateIsoString | undefined;\n  onChange: (value: DateIsoString) => void;\n};\nexport const DateTimePicker: VoidFunctionComponent<DateTimePickerProps> = ({\n  isDisabled,\n  value,\n  onChange,\n}) => {\n  const [timeSelected, setIsTimeSelected] = useState(false);\n  const date = value ? parseISO(value) : undefined;\n\n  const onSelectCalendar: DatePickerProps[\"onChange\"] = (_, newDate) => {\n    if (newDate) {\n      onChange(formatISO(newDate));\n    }\n  };\n\n  const onSelectTime: TimePickerProps[\"onChange\"] = (\n    time,\n    hour,\n    minute,\n    __,\n    isValid\n  ) => {\n    if (\n      isValid &&\n      date &&\n      hour != undefined &&\n      hour > 0 &&\n      (time.includes(\"AM\") || time.includes(\"PM\"))\n    ) {\n      let newDate = date;\n      if (hour !== undefined) {\n        newDate = setHours(newDate, hour);\n      }\n      if (minute !== undefined) {\n        newDate = setMinutes(newDate, minute);\n      }\n\n      onChange(formatISO(newDate));\n      setIsTimeSelected(true);\n    }\n  };\n\n  return (\n    <InputGroup>\n      <DatePicker\n        isDisabled={isDisabled}\n        value={date ? formatInTimeZone(date, \"UTC\", \"yyyy-MM-dd\") : undefined}\n        onChange={onSelectCalendar}\n      />\n      <TimePicker\n        isDisabled={!date || isDisabled}\n        time={timeSelected ? date : undefined}\n        onChange={onSelectTime}\n      />\n    </InputGroup>\n  );\n};\n","import {\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  DropdownSeparator,\n  DropdownToggle,\n  InputGroup,\n  TextInput,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\n\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { DateIsoString } from \"../../../types\";\nimport { DateTimePicker } from \"./DateTimePicker\";\n\ntype Category = \"offset\" | \"timestamp\" | \"epoch\" | \"latest\";\nexport type FilterGroupProps = {\n  isDisabled: boolean;\n  offset: number | undefined;\n  epoch: number | undefined;\n  timestamp: DateIsoString | undefined;\n  onOffsetChange: (value: number | undefined) => void;\n  onTimestampChange: (value: DateIsoString | undefined) => void;\n  onEpochChange: (value: number | undefined) => void;\n  onLatest: () => void;\n};\nexport const FilterGroup: VoidFunctionComponent<FilterGroupProps> = ({\n  isDisabled,\n  offset,\n  epoch,\n  timestamp,\n  onOffsetChange,\n  onTimestampChange,\n  onEpochChange,\n  onLatest,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [currentCategory, setCurrentCategory] = useState<Category>(\"latest\");\n  const [isOpen, setIsOpen] = useState(false);\n  const labels: { [key in Category]: string } = {\n    offset: t(\"filter.offset\"),\n    timestamp: t(\"filter.timestamp\"),\n    epoch: t(\"filter.epoch\"),\n    latest: t(\"filter.latest\"),\n  };\n  return (\n    <ToolbarItem>\n      <InputGroup>\n        <Dropdown\n          data-testid={\"filter-group-dropdown\"}\n          toggle={\n            <DropdownToggle\n              onToggle={setIsOpen}\n              isDisabled={isDisabled}\n              data-testid={\"filter-group\"}\n            >\n              {labels[currentCategory]}\n            </DropdownToggle>\n          }\n          position={DropdownPosition.left}\n          isOpen={isOpen}\n          onSelect={() => setIsOpen(false)}\n          dropdownItems={[\n            <DropdownItem\n              key=\"offset\"\n              value=\"offset\"\n              autoFocus={currentCategory === \"offset\"}\n              onClick={() => setCurrentCategory(\"offset\")}\n            >\n              {labels[\"offset\"]}\n            </DropdownItem>,\n            <DropdownItem\n              key=\"timestamp\"\n              value=\"timestamp\"\n              autoFocus={currentCategory === \"timestamp\"}\n              onClick={() => setCurrentCategory(\"timestamp\")}\n            >\n              {labels[\"timestamp\"]}\n            </DropdownItem>,\n            <DropdownItem\n              key=\"epoch\"\n              value=\"epoch\"\n              autoFocus={currentCategory === \"epoch\"}\n              onClick={() => setCurrentCategory(\"epoch\")}\n            >\n              {labels[\"epoch\"]}\n            </DropdownItem>,\n            <DropdownSeparator key={\"divider\"} />,\n            <DropdownItem\n              key=\"latest\"\n              value=\"latest\"\n              autoFocus={currentCategory === \"latest\"}\n              onClick={() => {\n                setCurrentCategory(\"latest\");\n                onLatest();\n              }}\n            >\n              {labels[\"latest\"]}\n            </DropdownItem>,\n          ]}\n        />\n        {currentCategory === \"offset\" && (\n          <TextInput\n            isDisabled={isDisabled}\n            type={\"number\"}\n            aria-label={t(\"filter.offset_aria_label\")}\n            placeholder={t(\"filter.offset_placeholder\")}\n            onChange={(value) => {\n              if (value !== \"\") {\n                const newOffset = parseInt(value, 10);\n                if (Number.isInteger(newOffset)) {\n                  onOffsetChange(newOffset);\n                }\n              } else {\n                onOffsetChange(undefined);\n              }\n            }}\n            value={offset === undefined ? \"\" : offset}\n          />\n        )}\n        {currentCategory === \"timestamp\" && (\n          <DateTimePicker\n            isDisabled={isDisabled}\n            value={timestamp}\n            onChange={onTimestampChange}\n          />\n        )}\n        {currentCategory === \"epoch\" && (\n          <TextInput\n            isDisabled={isDisabled}\n            type={\"number\"}\n            aria-label={t(\"filter.epoch_aria_label\")}\n            placeholder={t(\"filter.epoch_placeholder\")}\n            className=\"pf-u-flex-basis-auto pf-u-flex-grow-0 pf-u-w-initial\"\n            size={t(\"filter.epoch_placeholder\").length}\n            onChange={(value) => {\n              if (value !== \"\" && Number(value) >= 0)\n                onEpochChange(Number(value));\n              else onEpochChange(undefined);\n            }}\n            value={epoch == undefined ? \"\" : epoch}\n          />\n        )}\n      </InputGroup>\n    </ToolbarItem>\n  );\n};\n","import {\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type LimitSelectorProps = {\n  value: number;\n  isDisabled: boolean;\n  onChange: (value: number) => void;\n};\nexport const LimitSelector: VoidFunctionComponent<LimitSelectorProps> = ({\n  value,\n  isDisabled,\n  onChange,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = (isOpen: boolean) => setIsOpen(isOpen);\n  const titleId = \"limit-selector\";\n\n  return (\n    <InputGroup>\n      <InputGroupText className=\"pf-c-content\">\n        {t(\"limit_label\")}\n      </InputGroupText>\n      <div>\n        <span id={titleId} hidden>\n          Select a state\n        </span>\n\n        <Select\n          aria-label={t(\"per_page_aria_label\")}\n          onToggle={toggleOpen}\n          selections={value !== undefined ? [t(\"limit\", { value })] : undefined}\n          isOpen={isOpen}\n          isDisabled={isDisabled}\n          onSelect={() => setIsOpen(false)}\n          data-testid={\"limit-selector\"}\n        >\n          {[10, 20, 50].map((value, idx) => (\n            <SelectOption\n              key={idx}\n              value={t(\"limit\", { value })}\n              onClick={() => onChange(value)}\n            />\n          ))}\n        </Select>\n      </div>\n    </InputGroup>\n  );\n};\n","import {\n  ClipboardCopy,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelContent,\n  Flex,\n  FlexItem,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { parseISO } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate } from \"@rhoas/app-services-ui-components\";\nimport type { Message } from \"../types\";\nimport { beautifyUnknownValue } from \"../utils\";\nimport { NoDataCell } from \"./NoDataCell\";\n\nexport type MessageDetailsProps = {\n  onClose: () => void;\n  defaultTab: MessageDetailsBodyProps[\"defaultTab\"];\n  message: Message | undefined;\n};\nexport const MessageDetails: VoidFunctionComponent<MessageDetailsProps> = ({\n  onClose,\n  defaultTab,\n  message,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n\n  return (\n    <DrawerPanelContent isResizable={true} minSize={\"400px\"}>\n      <DrawerHead>\n        <TextContent>\n          <Text component={TextVariants.h2}>{t(\"message\")}</Text>\n        </TextContent>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerContentBody>\n        {message && (\n          <MessageDetailsBody\n            defaultTab={defaultTab}\n            messageKey={message.key}\n            {...message}\n          />\n        )}\n      </DrawerContentBody>\n    </DrawerPanelContent>\n  );\n};\n\nexport type MessageDetailsBodyProps = {\n  defaultTab: \"value\" | \"headers\";\n  messageKey: Message[\"key\"];\n} & Omit<Message, \"key\">;\n\nexport const MessageDetailsBody: VoidFunctionComponent<\n  MessageDetailsBodyProps\n> = ({ defaultTab, ...message }) => {\n  const { t } = useTranslation(\"message-browser\");\n\n  return (\n    <Flex direction={{ default: \"column\" }} data-testid={\"message-details\"}>\n      <FlexItem>\n        <DescriptionList isHorizontal isCompact>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.partition\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.partition}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.offset\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.offset}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.timestamp\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.timestamp ? (\n                <FormatDate\n                  date={parseISO(message.timestamp)}\n                  format={\"longWithMilliseconds\"}\n                />\n              ) : (\n                <NoDataCell columnLabel={t(\"field.timestamp\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.epoch\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.timestamp ? (\n                <FormatDate\n                  date={parseISO(message.timestamp)}\n                  format={\"epoch\"}\n                />\n              ) : (\n                <NoDataCell columnLabel={t(\"field.epoch\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.key\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.messageKey ? (\n                message.messageKey\n              ) : (\n                <NoDataCell columnLabel={t(\"field.key\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n        </DescriptionList>\n      </FlexItem>\n      <FlexItem>\n        {/* set key to be a random number to force redraw the tabs in order to change the active tab from the outside */}\n        <Tabs defaultActiveKey={defaultTab} key={Math.random()}>\n          <Tab\n            eventKey={\"value\"}\n            title={<TabTitleText>{t(\"field.value\")}</TabTitleText>}\n          >\n            <ClipboardCopy isCode={true} isExpanded={true} isReadOnly={true}>\n              {beautifyUnknownValue(message.value || \"\")}\n            </ClipboardCopy>\n          </Tab>\n          <Tab\n            eventKey={\"headers\"}\n            title={<TabTitleText>{t(\"field.headers\")}</TabTitleText>}\n          >\n            <ClipboardCopy isCode={true} isExpanded={true} isReadOnly={true}>\n              {beautifyUnknownValue(JSON.stringify(message.headers) || \"\")}\n            </ClipboardCopy>\n          </Tab>\n        </Tabs>\n      </FlexItem>\n    </Flex>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type NoDataCellProps = {\n  columnLabel: string;\n};\nexport const NoDataCell: VoidFunctionComponent<NoDataCellProps> = ({\n  columnLabel,\n}) => {\n  const { t } = useTranslation(\"common\");\n  return (\n    <span className=\"pf-u-color-400\">\n      {t(\"table_cell_no_data\", { column: columnLabel })}\n    </span>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const NoDataEmptyState: VoidFunctionComponent<{\n  onRefresh: () => void;\n}> = ({ onRefresh }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {t(\"no_data_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_data_body\")}</EmptyStateBody>\n      <Button onClick={onRefresh}>{t(\"no_data_refresh\")}</Button>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const NoResultsEmptyState: VoidFunctionComponent<{\n  onReset: () => void;\n}> = ({ onReset }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {t(\"no_results_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_results_body\")}</EmptyStateBody>\n      <Button variant={\"link\"} onClick={onReset}>\n        {t(\"no_results_reset\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { Text, TextContent } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const OffsetRange: VoidFunctionComponent<{\n  min: number;\n  max: number;\n}> = ({ min, max }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <TextContent className=\"pf-u-font-size\">\n      <Text>\n        {t(\"offset\")} <span className=\"custom-text\">{min}</span> -{\" \"}\n        <span className=\"custom-text\">{max}</span>\n      </Text>\n    </TextContent>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  InputGroup,\n  InputGroupText,\n  InputGroupTextVariant,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nconst MAX_OPTIONS = 20;\n\nexport type PartitionSelectorProps = {\n  value: number | undefined;\n  partitions: number | undefined;\n  isDisabled: boolean;\n  onChange: (value: number | undefined) => void;\n};\nexport const PartitionSelector: VoidFunctionComponent<\n  PartitionSelectorProps\n> = ({ value, partitions, isDisabled, onChange }) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = (isOpen: boolean) => setIsOpen(isOpen);\n  const titleId = \"partition-selector\";\n\n  const handleChange = useCallback(\n    (value: string) => {\n      if (value !== \"\") {\n        const valueAsNum = parseInt(value, 10);\n        if (Number.isInteger(valueAsNum)) {\n          onChange(valueAsNum);\n        }\n      }\n      setIsOpen(false);\n    },\n    [onChange]\n  );\n\n  const allPartitions = useMemo(() => {\n    return new Array(partitions).fill(0).map((_, index) => index.toString());\n  }, [partitions]);\n\n  const makeOptions = useCallback(\n    (values: string[]) => {\n      const options = values\n        .slice(0, MAX_OPTIONS)\n        .map((v) => <SelectOption key={v} value={v} />);\n      const hiddenOptionsCount = values.length - options.length;\n      return hiddenOptionsCount\n        ? [\n            ...options,\n            <SelectOption\n              key={\"more-info\"}\n              isDisabled={true}\n              description={t(\"partitions_hidden\", {\n                count: hiddenOptionsCount,\n              })}\n            />,\n          ]\n        : options;\n    },\n    [t]\n  );\n\n  const options = useMemo(() => {\n    return makeOptions(allPartitions);\n  }, [allPartitions, makeOptions]);\n\n  const handleFilter: SelectProps[\"onFilter\"] = useCallback(\n    (_, filter: string) => {\n      if (filter !== \"\") {\n        return makeOptions(\n          allPartitions.filter((partition) => partition.includes(filter))\n        );\n      }\n      return options;\n    },\n    [allPartitions, makeOptions, options]\n  );\n\n  return (\n    <InputGroup>\n      <InputGroupText className=\"pf-c-content\">\n        {t(\"field.partition\")}\n      </InputGroupText>\n      <div>\n        <span id={titleId} hidden>\n          {t(\"select_partition_aria_label\")}\n        </span>\n        <Select\n          variant={SelectVariant.typeahead}\n          typeAheadAriaLabel={t(\"select_partition_typeahead\")}\n          onToggle={toggleOpen}\n          onSelect={(_, value) => handleChange(value as string)}\n          selections={value !== undefined ? [`${value}`] : undefined}\n          isOpen={isOpen}\n          aria-labelledby={titleId}\n          maxHeight={200}\n          width={150}\n          onFilter={handleFilter}\n          isInputValuePersisted={false}\n          isDisabled={isDisabled}\n          placeholderText={t(\"partition_placeholder\")}\n          onClear={() => onChange(undefined)}\n          data-testid={\"partition-selector\"}\n        >\n          {options}\n        </Select>\n      </div>\n      <InputGroupText\n        id={`${titleId}-input`}\n        variant={InputGroupTextVariant.plain}\n        className=\"pf-c-content\"\n      >\n        {t(\"select_partition_of_count\", { partitions })}\n      </InputGroupText>\n    </InputGroup>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { truncate } from \"../utils\";\nimport { Flex, FlexItem } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nconst PREVIEW_LENGTH = 170;\n\nexport type UnknownValuePreviewProps = {\n  value: string;\n  truncateAt?: number;\n  onClick?: () => void;\n};\nexport const UnknownValuePreview: VoidFunctionComponent<\n  UnknownValuePreviewProps\n> = ({ value, truncateAt = PREVIEW_LENGTH, onClick }) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [preview, truncated] = truncate(value, truncateAt);\n  return (\n    <Flex\n      direction={{ default: \"column\" }}\n      spaceItems={{ default: \"spaceItemsXs\" }}\n    >\n      <FlexItem>{preview}</FlexItem>\n      {truncated && (\n        <FlexItem>\n          <a\n            onClick={\n              onClick\n                ? (e) => {\n                    e.stopPropagation();\n                    onClick();\n                  }\n                : undefined\n            }\n          >\n            {t(\"show_more\")}\n          </a>\n        </FlexItem>\n      )}\n    </Flex>\n  );\n};\n","export * from \"./DateTimePicker\";\nexport * from \"./FilterGroup\";\nexport * from \"./LimitSelector\";\nexport * from \"./MessageDetails\";\nexport * from \"./NoDataCell\";\nexport * from \"./NoDataEmptyState\";\nexport * from \"./NoResultsEmptyState\";\nexport * from \"./OffsetRange\";\nexport * from \"./PartitionSelector\";\nexport * from \"./UnknownValuePreview\";\n","export * from \"./KafkaMessageBrowser\";\n","import type { Message } from \"./types\";\n\nexport function isSameMessage(m1: Message, m2: Message) {\n  return JSON.stringify(m1) === JSON.stringify(m2);\n}\n\nexport function beautifyUnknownValue(value: string): string {\n  try {\n    return JSON.stringify(JSON.parse(value), null, 2);\n  } catch (e) {\n    // noop\n  }\n  return value;\n}\n\nexport function truncate(value: string, length: number): [string, boolean] {\n  const shouldTruncate = value.length > length;\n  return [\n    shouldTruncate ? `${value.substring(0, length)}...` : value,\n    shouldTruncate,\n  ];\n}\n","import {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Divider,\n  Flex,\n  FlexItem,\n  Grid,\n  Split,\n  SplitItem,\n  Stack,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport {\n  AppSpeedKeyArt,\n  ExternalLink,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { KafkaInstanceCapacityTable } from \"./KafkaInstanceCapacityTable\";\nimport { LogoAWS, LogoAzure, LogoGCP } from \"./Logos/images\";\nimport { MarketingPageHero, MarketingPageSection } from \"./MarketingPage\";\n\nexport const KafkaPageV3: FunctionComponent = () => {\n  const { t } = useTranslation([\"kafkaoverview-v3\"]);\n  return (\n    <>\n      <MarketingPageHero\n        title={t(\"heroTitle\")}\n        tagLine={t(\"heroTagline\")}\n        description={t(\"heroDescription\")}\n        heroImage={AppSpeedKeyArt}\n        heroImageSize={478}\n        heroImageCanRepeat={false}\n        heroImagePositionY={-99}\n      />\n      <MarketingPageSection>\n        <Grid hasGutter lg={6}>\n          <Card\n            ouiaId=\"card-overview-purchase-now\"\n            aria-label={t(\"kafkaoverview:purchaseCardTitle\")}\n          >\n            <CardHeader>\n              <CardHeaderMain>\n                <CardTitle>\n                  <Title headingLevel=\"h2\">\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardTitle\"}\n                    >\n                      <span className=\"pf-u-color-200 pf-u-font-size-sm\"></span>\n                    </Trans>\n                  </Title>\n                </CardTitle>\n              </CardHeaderMain>\n            </CardHeader>\n            <CardBody>{t(\"purchaseCardMainText\")}</CardBody>\n            <CardFooter>\n              <Flex spaceItems={{ default: \"spaceItems2xl\" }}>\n                <FlexItem>\n                  <ExternalLink\n                    href={\n                      \"https://marketplace.redhat.com/en-us/products/red-hat-openshift-streams-for-apache-kafka\"\n                    }\n                    testId={\"cardPurchase-buttonRH\"}\n                    className={\"pf-u-ml-md \"}\n                  >\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardCallToActionButtonRedHat\"}\n                      components={{\n                        bold: <strong />,\n                        size: <span className=\"pf-u-font-size-lg\" />,\n                      }}\n                    />\n                  </ExternalLink>\n                </FlexItem>\n\n                <FlexItem>\n                  <ExternalLink\n                    href={\n                      \"https://aws.amazon.com/marketplace/pp/prodview-3xohcoyuwkumc\"\n                    }\n                    testId={\"cardPurchase-buttonAWS\"}\n                    className={\"pf-u-ml-md\"}\n                  >\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardCallToActionButtonAWS\"}\n                      components={{\n                        bold: <strong />,\n                        size: <span className=\"pf-u-font-size-lg\" />,\n                      }}\n                    />\n                  </ExternalLink>\n                </FlexItem>\n              </Flex>\n            </CardFooter>\n          </Card>\n          <Card\n            ouiaId=\"card-overview-contact-sales\"\n            aria-label={t(\"kafkaoverview:contactSalesCardTitle\")}\n          >\n            <CardHeader>\n              <CardTitle>\n                <Title headingLevel=\"h2\">\n                  <Trans\n                    ns={\"kafkaoverview-v3\"}\n                    i18nKey={\"contactSalesCardTitle\"}\n                  >\n                    <span className=\"pf-u-color-200 pf-u-font-size-sm\"></span>\n                  </Trans>\n                </Title>\n              </CardTitle>\n            </CardHeader>\n            <CardBody>{t(\"contactSalesCardMainText\")}</CardBody>\n            <CardFooter>\n              <ExternalLink\n                href={\n                  \"https://www.redhat.com/en/technologies/cloud-computing/openshift/openshift-streams-for-apache-kafka#contact-us\"\n                }\n                testId={\"cardContactSales-buttonCTA\"}\n                className={\"pf-u-ml-md\"}\n              >\n                <Trans\n                  ns={\"kafkaoverview-v3\"}\n                  i18nKey={\"contactSalesCardCallToActionButton\"}\n                  components={{\n                    bold: <strong />,\n                    size: <span className=\"pf-u-font-size-lg\" />,\n                  }}\n                />\n              </ExternalLink>\n            </CardFooter>\n          </Card>\n        </Grid>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"pricingModalTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Flex spaceItems={{ default: \"spaceItemsXl\" }}>\n              <Flex\n                alignSelf={{ default: \"alignSelfCenter\" }}\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <DescriptionList isHorizontal>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"steamingUnit\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"streamingUnit_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"dataTransfer\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"dataTransfer_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>{t(\"storage\")}</DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"storage_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                  </DescriptionList>\n                </FlexItem>\n              </Flex>\n              <Divider isVertical />\n              <FlexItem flex={{ default: \"flex_1\" }}>\n                <TextContent>\n                  <Text component={TextVariants.p}>\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"streamingUnitText\"}\n                      components={{ bold: <strong /> }}\n                    />\n                  </Text>\n                </TextContent>\n              </FlexItem>\n            </Flex>\n          </CardBody>\n        </Card>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"kafkaInstanceCapacityTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Stack hasGutter>\n              <Text component={TextVariants.p}>\n                {t(\"kafkaInstanceCapacityDescription\")}\n              </Text>\n              <KafkaInstanceCapacityTable />\n            </Stack>\n          </CardBody>\n          <CardFooter>\n            <TextContent className={\"pf-u-font-size-sm\"}>\n              <Trans\n                ns={\"kafkaoverview-v3\"}\n                i18nKey={\"kafkaInstanceCapacityfooter\"}\n                components={[\n                  <ExternalLink\n                    href={\"https://access.redhat.com/support\"}\n                    testId={\"SupportLink\"}\n                    className={\"pf-u-ml-xs\"}\n                  />,\n                  <ExternalLink\n                    href={\n                      \"https://access.redhat.com/documentation/en-us/red_hat_openshift_streams_for_apache_kafka/1/guide/aced8e5e-8229-4cb2-82f9-87a8caa24bb3\"\n                    }\n                    testId={\"MonitoringDiskSpaceLink\"}\n                    className={\"pf-u-ml-xs\"}\n                  />,\n                ]}\n              />\n            </TextContent>\n          </CardFooter>\n        </Card>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"cloudProvidersTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Flex\n              spaceItems={{ default: \"spaceItemsXl\" }}\n              direction={{ default: \"column\", xl: \"row\" }}\n            >\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img src={LogoAWS} alt={\"\"} style={{ height: \"60px\" }} />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"awsWebServiceTitle\")}\n                      </Title>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n              <Divider\n                orientation={{ default: \"horizontal\", xl: \"vertical\" }}\n              />\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img src={LogoGCP} alt={\"\"} style={{ height: \"60px\" }} />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"googleCloudProviderTitle\")}\n                      </Title>\n                      <Text\n                        component={TextVariants.p}\n                        className={\"pf-u-color-200\"}\n                      >\n                        {t(\"googleCloudProviderDescription\")}\n                      </Text>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n              <Divider\n                orientation={{ default: \"horizontal\", xl: \"vertical\" }}\n              />\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img\n                        src={LogoAzure}\n                        alt={\"\"}\n                        style={{ height: \"60px\" }}\n                      />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"microsoftAzureTitle\")}\n                      </Title>\n                      <Text\n                        component={TextVariants.p}\n                        className={\"pf-u-color-200\"}\n                      >\n                        {t(\"microsoftAzureDescription\")}\n                      </Text>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n            </Flex>\n          </CardBody>\n        </Card>\n      </MarketingPageSection>\n    </>\n  );\n};\n","import { Button } from \"@patternfly/react-core\";\nimport { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  EmptyStateNoResults,\n  TableView,\n} from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport type { KafkaTopic, KafkaTopicField } from \"../../types\";\nimport type { EmptyStateNoTopicProps } from \"./components\";\nimport { EmptyStateNoTopic } from \"./components\";\nimport { formattedRetentionSize, formattedRetentionTime } from \"./types\";\n\nconst Columns: KafkaTopicField[] = [\n  \"topic_name\",\n  \"partitions\",\n  \"retention_time\",\n  \"retention_size\",\n];\n\nexport type KafkaTopicsProps<T extends KafkaTopic> = {\n  topics: Array<T> | undefined;\n  getUrlFortopic: (row: T) => string;\n  onDelete: (row: T) => void;\n  onEdit: (row: T) => void;\n  topicName: string[];\n  onSearchTopic: (value: string) => void;\n  onRemoveTopicChip: (value: string) => void;\n  onRemoveTopicChips: () => void;\n  onTopicLinkClick: (row: T) => void;\n} & Pick<\n  TableViewProps<T, typeof Columns[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n> &\n  EmptyStateNoTopicProps;\n\nexport const KafkaTopics = <T extends KafkaTopic>({\n  topics,\n  onDelete,\n  onEdit,\n  isColumnSortable,\n  itemCount,\n  onSearchTopic,\n  topicName,\n  onClearAllFilters,\n  onCreateTopic,\n  page,\n  perPage,\n  onPageChange,\n  onRemoveTopicChip,\n  onRemoveTopicChips,\n  getUrlFortopic,\n  onTopicLinkClick,\n}: KafkaTopicsProps<T>) => {\n  const { t } = useTranslation(\"topic\");\n\n  const labels: { [field in KafkaTopicField]: string } = {\n    topic_name: t(\"topic_name\"),\n    partitions: t(\"partitions\"),\n    retention_time: t(\"retention_time\"),\n    retention_size: t(\"retention_size\"),\n  };\n\n  const isFiltered = topicName.length > 0;\n  return (\n    <TableView\n      variant={TableVariant.compact}\n      tableOuiaId={\"card-table\"}\n      ariaLabel={t(\"topic_list_table\")}\n      data={topics}\n      columns={Columns}\n      renderHeader={({ column, Th, key }) => (\n        <Th key={key}>{labels[column]}</Th>\n      )}\n      renderCell={({ column, row, Td, key }) => {\n        return (\n          <Td key={key} dataLabel={labels[column]}>\n            {(() => {\n              switch (column) {\n                case \"topic_name\":\n                  return (\n                    <Button\n                      variant=\"link\"\n                      component={(props) => (\n                        <Link\n                          to={getUrlFortopic(row)}\n                          {...props}\n                          data-testid=\"tableTopics-linkTopic\"\n                          data-ouia-component-id=\"table-link\"\n                        >\n                          {row.topic_name}\n                        </Link>\n                      )}\n                      onClick={() => onTopicLinkClick(row)}\n                      isInline\n                    />\n                  );\n                case \"partitions\":\n                  return row.partitions;\n                case \"retention_time\":\n                  return formattedRetentionTime(\n                    row.retention_time ? parseInt(row.retention_time, 10) : 0\n                  );\n                case \"retention_size\":\n                  return formattedRetentionSize(\n                    row.retention_size ? parseInt(row.retention_size, 10) : 0\n                  );\n                default:\n                  return row[column];\n              }\n            })()}\n          </Td>\n        );\n      }}\n      renderActions={({ row, ActionsColumn }) => (\n        <ActionsColumn\n          items={[\n            {\n              title: t(\"table.actions.edit\"),\n              onClick: () => onEdit(row),\n            },\n            {\n              title: t(\"table.actions.delete\"),\n              onClick: () => onDelete(row),\n            },\n          ]}\n        />\n      )}\n      isColumnSortable={isColumnSortable}\n      filters={{\n        [labels.topic_name]: {\n          type: \"search\",\n          chips: topicName,\n          onSearch: onSearchTopic,\n          onRemoveChip: onRemoveTopicChip,\n          onRemoveGroup: onRemoveTopicChips,\n          validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n          errorMessage: t(\"input_field_invalid_message\"),\n        },\n      }}\n      actions={[\n        {\n          label: t(\"create_topic\"),\n          onClick: onCreateTopic,\n          isPrimary: true,\n        },\n      ]}\n      itemCount={itemCount}\n      page={page}\n      onPageChange={onPageChange}\n      perPage={perPage}\n      isFiltered={isFiltered}\n      onClearAllFilters={onClearAllFilters}\n      emptyStateNoData={<EmptyStateNoTopic onCreateTopic={onCreateTopic} />}\n      emptyStateNoResults={<EmptyStateNoResults />}\n    ></TableView>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type EmptyStateNoTopicProps = {\n  onCreateTopic: () => void;\n};\n\nexport const EmptyStateNoTopic: VoidFunctionComponent<\n  EmptyStateNoTopicProps\n> = ({ onCreateTopic }) => {\n  const { t } = useTranslation(\"topic\");\n\n  return (\n    <EmptyState\n      data-ouia-page-id=\"emptyStateTopics\"\n      variant={EmptyStateVariant.large}\n    >\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_topics_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"empty_topics_body\")}</EmptyStateBody>\n      <Button\n        data-testid=\"actionCreateTopic\"\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={onCreateTopic}\n      >\n        {t(\"create_topic\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","export * from \"./EmptyStateNoTopic\";\n","export * from \"./KafkaTopics\";\n","import { RetentionSizeUnits, RetentionTimeUnits } from \"../../types\";\n\nexport const unitsToBytes = {\n  [RetentionSizeUnits.BYTE]: 1,\n  [RetentionSizeUnits.KIBIBYTE]: 1024,\n  [RetentionSizeUnits.MEBIBYTE]: 1048576,\n  [RetentionSizeUnits.GIBIBYTE]: 1073741824,\n  [RetentionSizeUnits.TEBIBYTE]: 1.0995116e12,\n};\n\nexport const unitsToMilliSecond = {\n  [RetentionTimeUnits.MILLISECOND]: 1,\n  [RetentionTimeUnits.SECOND]: 1000,\n  [RetentionTimeUnits.MINUTE]: 60000,\n  [RetentionTimeUnits.HOUR]: 3600000,\n  [RetentionTimeUnits.DAY]: 86400000,\n};\n\ntype ConversionUnit = {\n  value: number;\n  unit: string;\n};\n\nexport const millisecondsToTime = (value: number): ConversionUnit => {\n  if (value) {\n    if (value % unitsToMilliSecond.days == 0)\n      return { value: value / unitsToMilliSecond.days, unit: \"days\" };\n    if (value % unitsToMilliSecond.hours == 0)\n      return { value: value / unitsToMilliSecond.hours, unit: \"hours\" };\n    if (value % unitsToMilliSecond.minutes == 0)\n      return { value: value / unitsToMilliSecond.minutes, unit: \"minutes\" };\n    if (value % unitsToMilliSecond.seconds == 0)\n      return { value: value / unitsToMilliSecond.seconds, unit: \"seconds\" };\n  }\n\n  return { value, unit: \"milliseconds\" };\n};\n\nexport const formattedRetentionTime = (time: number): string => {\n  const { unit, value } = millisecondsToTime(time);\n  return Number(value) === -1 ? \"Unlimited\" : `${time} ms (${value} ${unit})`;\n};\n\nexport const formattedRetentionSize = (size: number): string => {\n  const { unit, value } = bytesToMemorySize(size);\n  return Number(value) === -1\n    ? \"Unlimited\"\n    : `${size} bytes (${value} ${unit})`;\n};\n\nexport const bytesToMemorySize = (value: number): ConversionUnit => {\n  if (value) {\n    if (value % unitsToBytes.tebibytes == 0)\n      return { value: value / unitsToBytes.tebibytes, unit: \"tebibytes\" };\n    if (value % unitsToBytes.gibibytes == 0)\n      return { value: value / unitsToBytes.gibibytes, unit: \"gibibytes\" };\n    if (value % unitsToBytes.mebibytes == 0)\n      return { value: value / unitsToBytes.mebibytes, unit: \"mebibytes\" };\n    if (value % unitsToBytes.kibibytes == 0)\n      return { value: value / unitsToBytes.kibibytes, unit: \"kibibytes\" };\n  }\n\n  return { value, unit: \"bytes\" };\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoAWS } from \"./images\";\n\nexport const AWSLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoAWS} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoAzure } from \"./images\";\n\nexport const AzureLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoAzure} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoGCP } from \"./images\";\n\nexport const GCPLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoGCP} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoRedhat } from \"./images\";\n\nexport const RedhatLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoRedhat} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","export const LogoAWS = new URL(\"./Logo-AWS.svg\", import.meta.url)\n  .href;\nexport const LogoAzure = new URL(\n  \"./Logo-Azure.svg\",\n  import.meta.url\n).href;\nexport const LogoGCP = new URL(\"./Logo-GCP.svg\", import.meta.url)\n  .href;\nexport const LogoRedhat = new URL(\n  \"./Logo-Redhat.svg\",\n  import.meta.url\n).href;","export * from \"./AWSLogo\";\nexport * from \"./AzureLogo\";\nexport * from \"./GCPLogo\";\nexport * from \"./RedhatLogo\";\n","import {\n  Alert,\n  Badge,\n  Button,\n  ExpandableSection,\n  Form,\n  FormGroup,\n  Modal,\n  Popover,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AssignPermissions } from \"./components/AssignPermissions\";\nimport { SelectAccount } from \"./components/SelectAccount\";\nimport { ViewAccountDetails } from \"./components/ViewAccountDetails\";\nimport type { Account, AclBinding, AddAclType } from \"./types\";\nimport {\n  createEmptyConsumeTopicAcl,\n  createEmptyManageAccessAcl,\n  createEmptyManualAcl,\n  createEmptyProduceTopicAcl,\n} from \"./types\";\n\nexport type ManageKafkaPermissionsProps = {\n  accounts: Account[];\n  onCancel: () => void;\n  kafkaName: string;\n  onSave: (acls: AddAclType[]) => void;\n  existingAcls: AclBinding[];\n  onRemoveAcls: (index: number) => void;\n  selectedAccount: string | undefined;\n  onChangeSelectedAccount: (value: string | undefined) => void;\n  topicNameOptions: (filter: string) => string[];\n  consumerGroupNameOptions: (filter: string) => string[];\n};\n\nexport const ManageKafkaPermissions: React.FC<ManageKafkaPermissionsProps> = ({\n  onCancel,\n  kafkaName,\n  accounts,\n  existingAcls,\n  onRemoveAcls,\n  onSave,\n  selectedAccount,\n  onChangeSelectedAccount,\n  topicNameOptions,\n  consumerGroupNameOptions,\n}) => {\n  const { t } = useTranslation([\n    \"manage-kafka-permissions\",\n    \"create-kafka-instance\",\n  ]);\n  const escapeClosesModal = useRef<boolean>(true);\n  const [\n    isExpandedExistingPermissionSection,\n    setIsExpandedExistingPermissionSection,\n  ] = useState<boolean>(false);\n  const [\n    isExpandedAssignPermissionsSection,\n    setIsExpandedAssignPermissionsSection,\n  ] = useState<boolean>(true);\n  const [isNameValid, setIsNameValid] = useState<boolean>(true);\n  const [canSave, setCanSave] = useState<boolean>(false);\n  const [submitted, setSubmitted] = useState<boolean>(false);\n  const [step, setStep] = useState<number>(1);\n  const [newAcls, setNewAcls] = useState<AddAclType[]>();\n\n  const checkValidation = useCallback(() => {\n    if (newAcls) {\n      const isRowInvalid = newAcls?.map((value) =>\n        Object.values(value).includes(undefined)\n      );\n      isRowInvalid.includes(true) ? setCanSave(false) : setCanSave(true);\n      if (canSave == true && isNameValid) return true;\n      else return false;\n    }\n    return false;\n  }, [canSave, isNameValid, newAcls]);\n\n  useEffect(() => {\n    checkValidation();\n  }, [checkValidation, newAcls]);\n\n  const onEscapePress = () => {\n    if (escapeClosesModal.current) {\n      onCancel();\n    }\n  };\n\n  const onClickSubmit = () => {\n    if (step == 1) setStep(2);\n    else if (newAcls) {\n      setSubmitted(true);\n      const isAclValid = checkValidation();\n      isAclValid && onSave(newAcls);\n    }\n  };\n\n  const onAddManualPermissions = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyManualAcl()]\n        : [createEmptyManualAcl()]\n    );\n  };\n  const onAddProduceTopicShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyProduceTopicAcl()]\n        : [createEmptyProduceTopicAcl()]\n    );\n  };\n  const onConsumeTopicShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyConsumeTopicAcl()]\n        : [createEmptyConsumeTopicAcl()]\n    );\n  };\n  const onManageAccessShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyManageAccessAcl(kafkaName)]\n        : [createEmptyManageAccessAcl(kafkaName)]\n    );\n  };\n\n  const onDeleteNewAcl = (row: number) => {\n    setNewAcls(\n      (prevState) => prevState && prevState.filter((_, index) => index !== row)\n    );\n  };\n\n  const onChangeExpandedExistingPermissionsSection = (value: boolean) => {\n    setIsExpandedExistingPermissionSection(value);\n  };\n  const onChangeExpandedAssignPermissionsSection = (value: boolean) => {\n    setIsExpandedAssignPermissionsSection(value);\n  };\n  const isDisabled =\n    step == 1 && (selectedAccount === undefined || selectedAccount === \"\")\n      ? true\n      : step == 2 &&\n        ((submitted && !canSave) ||\n          newAcls == undefined ||\n          newAcls.length < 1 ||\n          !isNameValid)\n      ? true\n      : false;\n\n  return (\n    <Modal\n      id=\"manage-permissions-modal\"\n      variant={\"large\"}\n      isOpen={true}\n      aria-label={t(\"dialog_aria_label\")}\n      position=\"top\"\n      title={t(\"dialog_title\")}\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={onCancel}\n      onEscapePress={onEscapePress}\n      actions={[\n        <Button\n          key={1}\n          variant=\"primary\"\n          isDisabled={isDisabled}\n          onClick={onClickSubmit}\n          aria-label={\n            step == 1 ? t(\"step_1_submit_button\") : t(\"step_2_submit_button\")\n          }\n        >\n          {step === 1 ? t(\"step_1_submit_button\") : t(\"step_2_submit_button\")}\n        </Button>,\n        <Button\n          onClick={onCancel}\n          key={2}\n          variant=\"secondary\"\n          aria-label={t(\"common:cancel\")}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Form>\n        <FormGroup\n          fieldId=\"kafka-instance-name\"\n          label={t(\"kafka_instance\")}\n          id=\"modal-message\"\n        >\n          {kafkaName}\n        </FormGroup>\n        {step == 1 ? (\n          <SelectAccount\n            value={selectedAccount}\n            onChangeAccount={onChangeSelectedAccount}\n            accounts={accounts}\n          />\n        ) : (\n          <>\n            <FormGroup\n              fieldId=\"account-name\"\n              label={t(\"account_id_title\")}\n              labelIcon={\n                <Popover bodyContent={t(\"account_id_help\")}>\n                  <button\n                    type=\"button\"\n                    onClick={(e) => e.preventDefault()}\n                    className=\"pf-c-form__group-label-help\"\n                    aria-label={t(\"account_help\")}\n                  >\n                    <HelpIcon noVerticalAlign />\n                  </button>\n                </Popover>\n              }\n            >\n              {selectedAccount === \"*\"\n                ? t(\"all_accounts_title\")\n                : selectedAccount}\n            </FormGroup>\n            {(!canSave || !isNameValid) && submitted && (\n              <Alert\n                isInline\n                title={t(\"create-kafka-instance:form_errors.form_invalid\")}\n                variant={\"danger\"}\n              />\n            )}\n            <ExpandableSection\n              isIndented={true}\n              isExpanded={isExpandedExistingPermissionSection}\n              onToggle={onChangeExpandedExistingPermissionsSection}\n              toggleContent={\n                <div>\n                  <span>{t(\"review_existing_title\")}</span>{\" \"}\n                  <Badge isRead={existingAcls.length == 0 ? true : false}>\n                    {existingAcls.length}\n                  </Badge>\n                </div>\n              }\n            >\n              <ViewAccountDetails\n                accountId={selectedAccount}\n                onRemoveAcl={onRemoveAcls}\n                existingAcls={existingAcls}\n              />\n            </ExpandableSection>\n            <FormGroup>\n              <ExpandableSection\n                toggleText={t(\"assign_permissions_title\")}\n                isIndented={true}\n                isExpanded={isExpandedAssignPermissionsSection}\n                onToggle={onChangeExpandedAssignPermissionsSection}\n              >\n                <FormGroup>\n                  <TextContent>\n                    <Text component={TextVariants.small}>\n                      {selectedAccount === \"*\"\n                        ? t(\"assign_permissions_all_description\")\n                        : t(\"assign_permissions_description\", {\n                            value: selectedAccount,\n                          })}\n                    </Text>\n                    {newAcls && newAcls?.length > 0 && (\n                      <Text component={TextVariants.small}>\n                        {t(\"all_fields_required\")}\n                      </Text>\n                    )}\n                  </TextContent>\n                </FormGroup>\n                <AssignPermissions\n                  setIsNameValid={setIsNameValid}\n                  submitted={submitted}\n                  onAddManualPermissions={onAddManualPermissions}\n                  onAddProduceTopicShortcut={onAddProduceTopicShortcut}\n                  onConsumeTopicShortcut={onConsumeTopicShortcut}\n                  onManageAccessShortcut={onManageAccessShortcut}\n                  onDelete={onDeleteNewAcl}\n                  topicNameOptions={topicNameOptions}\n                  consumerGroupNameOptions={consumerGroupNameOptions}\n                  addedAcls={newAcls}\n                  kafkaName={kafkaName}\n                  setAddedAcls={setNewAcls}\n                />\n              </ExpandableSection>\n            </FormGroup>\n          </>\n        )}\n      </Form>\n    </Modal>\n  );\n};\n","import { ActionList, ActionListItem } from \"@patternfly/react-core\";\nimport { TableComposable } from \"@patternfly/react-table\";\nimport { PermissionsDropdown } from \"./PermissionsDropdown\";\nimport type { AddAclType } from \"../types\";\nimport { AssignPermissionsManual } from \"./AssignPermissionsManual\";\nimport { ConsumeTopicShortcut } from \"./ConsumeTopicShortcut\";\nimport { ManageAccessShortcut } from \"./ManageAccessShortcut\";\nimport { ProduceTopicShortcut } from \"./ProduceTopicShortcut\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type AssignPermissionsProps = {\n  submitted: boolean;\n  onDelete: (index: number) => void;\n  topicNameOptions: (filter: string) => string[];\n  consumerGroupNameOptions: (filter: string) => string[];\n  addedAcls?: AddAclType[];\n  onAddManualPermissions: () => void;\n  onAddProduceTopicShortcut: () => void;\n  onConsumeTopicShortcut: () => void;\n  onManageAccessShortcut: () => void;\n  kafkaName: string;\n  setAddedAcls: (value: AddAclType[]) => void;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const AssignPermissions: React.VFC<AssignPermissionsProps> = ({\n  submitted,\n  onDelete,\n  topicNameOptions,\n  consumerGroupNameOptions,\n  onAddManualPermissions,\n  onAddProduceTopicShortcut,\n  onConsumeTopicShortcut,\n  onManageAccessShortcut,\n  addedAcls,\n  kafkaName,\n  setAddedAcls,\n  setIsNameValid,\n}) => {\n  return (\n    <>\n      <TableComposable variant=\"compact\">\n        {addedAcls && addedAcls.length > 0 && <ShortcutsTableHead />}\n        {addedAcls &&\n          addedAcls.map((aclTemplate, idx) => {\n            switch (aclTemplate.type) {\n              case \"manual\":\n                return (\n                  <AssignPermissionsManual\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    resourceType={aclTemplate.resourceType}\n                    onChangeResourceType={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourceType: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    submitted={submitted}\n                    resourcePrefix={aclTemplate.resourcePrefix}\n                    onChangeResourcePrefix={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourcePrefix: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    resourceName={aclTemplate.resourceName}\n                    onChangeResource={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourceName: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchResourceNameOptions={topicNameOptions}\n                    resourcePermission={aclTemplate.resourcePermission}\n                    onChangeResourcePermission={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourcePermission: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    resourceOperation={aclTemplate.resourceOperation}\n                    onChangeResourceOperation={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourceOperation: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    row={idx}\n                    onDelete={onDelete}\n                  />\n                );\n\n              case \"consume-topic\":\n                return (\n                  <ConsumeTopicShortcut\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    onChangeConsumerResourcePrefixRule={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                consumerResourcePrefixRule: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onChangeTopicResourcePrefixRule={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                topicResourcePrefixRule: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    consumerPrefixRuleValue={\n                      aclTemplate.consumerResourcePrefixRule\n                    }\n                    topicPrefixRuleValue={aclTemplate.topicResourcePrefixRule}\n                    consumerResourceNameValue={aclTemplate.consumerResourceName}\n                    topicResourceNameValue={aclTemplate.topicResourceName}\n                    onChangeConsumerResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                consumerResourceName: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onChangeTopicResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                topicResourceName: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchConsumerResourceNameOptions={\n                      consumerGroupNameOptions\n                    }\n                    onFetchTopicResourceNameOptions={topicNameOptions}\n                    submitted={submitted}\n                    onDelete={onDelete}\n                    row={idx}\n                  />\n                );\n\n              case \"produce-topic\":\n                return (\n                  <ProduceTopicShortcut\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    onChange={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, prefixRuleValue: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    prefixRuleValue={aclTemplate.prefixRuleValue}\n                    resourceNameValue={aclTemplate.resourceNameValue}\n                    onChangeResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourceNameValue: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchResourceNameOptions={topicNameOptions}\n                    submitted={submitted}\n                    onDelete={onDelete}\n                    row={idx}\n                  />\n                );\n\n              case \"manage-access\":\n                return (\n                  <ManageAccessShortcut\n                    key={idx}\n                    row={idx}\n                    instanceName={kafkaName}\n                    onDelete={onDelete}\n                  />\n                );\n            }\n          })}\n      </TableComposable>\n      <ActionList>\n        <ActionListItem style={{ paddingTop: \"20px\" }}>\n          <PermissionsDropdown\n            onAddPermission={onAddManualPermissions}\n            onShortcutConsumeTopic={onConsumeTopicShortcut}\n            onShortcutProduceTopic={onAddProduceTopicShortcut}\n            onShortcutManageAccess={onManageAccessShortcut}\n          />\n        </ActionListItem>\n      </ActionList>\n    </>\n  );\n};\n","import { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { KafkaInstanceManualPermissions } from \"./KafkaInstanceManualPermissions\";\nimport { ResourceName } from \"./ResourceName\";\nimport type { ResourceOperationValue } from \"./ResourceOperation\";\nimport { ResourceOperation } from \"./ResourceOperation\";\nimport type { ResourcePermissionValue } from \"./ResourcePermission\";\nimport { ResourcePermission } from \"./ResourcePermission\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport { ResourceType } from \"./ResourceType\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type AssignPermissionsManualProps = {\n  resourceType: ResourceTypeValue | undefined;\n  onChangeResourceType: (value: ResourceTypeValue | undefined) => void;\n  submitted: boolean;\n  resourcePrefix: ResourcePrefixRuleValue;\n  onChangeResourcePrefix: (value: ResourcePrefixRuleValue) => void;\n  resourceName: string | undefined;\n  onChangeResource: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  resourcePermission: ResourcePermissionValue;\n  onChangeResourcePermission: (value: ResourcePermissionValue) => void;\n  resourceOperation: ResourceOperationValue | undefined;\n  onChangeResourceOperation: (\n    value: ResourceOperationValue | undefined\n  ) => void;\n  multipleShorctutPermissions?: boolean;\n  row: number;\n  onDelete: (row: number) => void;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const AssignPermissionsManual: React.FC<\n  AssignPermissionsManualProps\n> = ({\n  resourceType,\n  onChangeResourceType,\n  submitted,\n  resourcePrefix,\n  onChangeResourcePrefix,\n  resourceName,\n  onChangeResource,\n  onFetchResourceNameOptions,\n  resourcePermission,\n  resourceOperation,\n  onChangeResourceOperation,\n  onChangeResourcePermission,\n  multipleShorctutPermissions = true,\n  row,\n  onDelete,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const resourceTypeOptions = () => {\n    switch (resourceType) {\n      case \"consumer-group\":\n        return [\n          t(\"operations.all\"),\n          t(\"operations.read\"),\n          t(\"operations.delete\"),\n          t(\"operations.describe\"),\n        ];\n      case \"kafka-instance\":\n        return [t(\"operations.alter\"), t(\"operations.describe\")];\n      case \"transactional-id\":\n        return [\n          t(\"operations.all\"),\n          t(\"operations.write\"),\n          t(\"operations.describe\"),\n        ];\n      default:\n        return [\n          t(\"operations.all\"),\n          t(\"operations.read\"),\n          t(\"operations.write\"),\n          t(\"operations.create\"),\n          t(\"operations.delete\"),\n          t(\"operations.alter\"),\n          t(\"operations.describe\"),\n          t(\"operations.describe_configs\"),\n          t(\"operations.alter_configs\"),\n        ];\n    }\n  };\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n      {resourceType === \"kafka-instance\" ? (\n        <KafkaInstanceManualPermissions\n          resourceOperation={resourceOperation}\n          resourcePermission={resourcePermission}\n          resourceType={resourceType}\n          submitted={submitted}\n          onChangeResourceOperation={onChangeResourceOperation}\n          onChangeResourcePermission={onChangeResourcePermission}\n          onChangeResourceType={onChangeResourceType}\n          onDelete={onDelete}\n          row={row}\n        />\n      ) : (\n        <Tbody>\n          <Tr>\n            <Td>\n              <ResourceType\n                value={resourceType}\n                onChangeValue={onChangeResourceType}\n                invalid={submitted && resourceType === undefined}\n              />\n            </Td>\n            <Td>\n              <ResourcePrefixRule\n                value={resourcePrefix}\n                onChangeValue={onChangeResourcePrefix}\n              />\n            </Td>\n            <Td>\n              <ResourceName\n                value={resourceName}\n                onChangeValue={onChangeResource}\n                onFetchOptions={onFetchResourceNameOptions}\n                submitted={submitted}\n                resourceType={resourceType}\n                resourcePrefixRule={resourcePrefix}\n                setIsNameValid={setIsNameValid}\n              />\n            </Td>\n            <Td>\n              <ResourcePermission\n                value={resourcePermission}\n                onChangeValue={onChangeResourcePermission}\n              />\n            </Td>\n            <Td>\n              <ResourceOperation\n                resourceTypeOptions={resourceTypeOptions()}\n                value={resourceOperation}\n                onChangeValue={onChangeResourceOperation}\n                invalid={\n                  submitted && resourceOperation === undefined ? true : false\n                }\n              />\n            </Td>\n            <Td>\n              <RemoveButton\n                variant=\"link\"\n                onClick={() => onDelete(row)}\n                tooltip={t(\"remove_permission_tooltip\")}\n                ariaLabel={t(\"manual_delete\")}\n              />\n            </Td>\n          </Tr>\n        </Tbody>\n      )}\n    </>\n  );\n};\n","import { Label, LabelGroup } from \"@patternfly/react-core\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport type { VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport type {\n  AclOperation,\n  AclPatternType,\n  AclPermissionType,\n  AclResourceType,\n} from \"../types\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\n\nexport const DisplayResourceName: VFC<{ resourceType: AclResourceType }> = ({\n  resourceType,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  switch (resourceType) {\n    case \"GROUP\":\n      return t(\"resourceTypes.consumer_group\");\n    case \"TOPIC\":\n      return t(\"resourceTypes.topic\");\n    case \"CLUSTER\":\n      return t(\"resourceTypes.kafka_instance\");\n    case \"TRANSACTIONAL_ID\":\n      return t(\"resourceTypes.transactional_id\");\n  }\n};\n\nconst PatternType: VFC<{ patternType: AclPatternType }> = ({ patternType }) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  if (patternType === \"PREFIXED\") {\n    return t(\"pattern_type_prefixed\");\n  } else {\n    return t(\"pattern_type_literal\");\n  }\n};\n\nexport type ResourceCellProps = {\n  resourceType: AclResourceType;\n  patternType: AclPatternType;\n  resourceName: string;\n};\n\nexport const ResourceCell: VFC<ResourceCellProps> = ({\n  resourceType,\n  patternType,\n  resourceName,\n}) => {\n  if (resourceType === \"CLUSTER\") {\n    return (\n      <>\n        <ResourceTypeLabel variant={resourceType} />{\" \"}\n        <DisplayResourceName resourceType={resourceType} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ResourceTypeLabel variant={resourceType} />{\" \"}\n      <DisplayResourceName resourceType={resourceType} />{\" \"}\n      <PatternType patternType={patternType} /> \"{resourceName}\"\n    </>\n  );\n};\n\nexport type PermissionOperationCellProps = {\n  permission: AclPermissionType;\n  operation: AclOperation | AclOperation[];\n};\n\nexport const PermissionOperationCell: VFC<PermissionOperationCellProps> = ({\n  permission,\n  operation,\n}) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const permissions: { [key in AclPermissionType]: string } = {\n    ALLOW: t(\"permissions.allow\"),\n    DENY: t(\"permissions.deny\"),\n  };\n  const operations: { [key in AclOperation]: string } = {\n    ALL: t(\"operations.all\"),\n    READ: t(\"operations.read\"),\n    WRITE: t(\"operations.write\"),\n    CREATE: t(\"operations.create\"),\n    DELETE: t(\"operations.delete\"),\n    ALTER: t(\"operations.alter\"),\n    DESCRIBE: t(\"operations.describe\"),\n    DESCRIBE_CONFIGS: t(\"operations.describe_configs\"),\n    ALTER_CONFIGS: t(\"operations.alter_configs\"),\n  };\n  return (\n    <LabelGroup>\n      {permission && (\n        <Label\n          variant=\"outline\"\n          color={permission === \"DENY\" ? \"red\" : undefined}\n        >\n          {permissions[permission]}\n        </Label>\n      )}\n      {Array.isArray(operation) ? (\n        operation.map((value, key) => (\n          <Label key={key} variant=\"outline\">\n            {operations[value]}\n          </Label>\n        ))\n      ) : (\n        <Label variant=\"outline\">{operations[operation]}</Label>\n      )}\n    </LabelGroup>\n  );\n};\n\nexport type PrincipalCellProps = {\n  isDeleteEnabled: boolean;\n  isAllAccounts: boolean;\n  onRemoveAcl: () => void;\n};\n\nexport const PrincipalCell: VFC<PrincipalCellProps> = ({\n  isDeleteEnabled,\n  isAllAccounts,\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <div className=\"pf-u-display-flex pf-u-justify-content-space-between pf-u-justify-content-flex-end-on-lg\">\n      {isAllAccounts && (\n        <Label variant=\"outline\">{t(\"table.all_accounts\")}</Label>\n      )}\n      {isDeleteEnabled && (\n        <RemoveButton\n          variant=\"link\"\n          tooltip={t(\"remove_permission_tooltip\")}\n          onClick={onRemoveAcl}\n          ariaLabel={t(\"operations.delete\")}\n        />\n      )}\n    </div>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ProduceTopicRow } from \"./ProduceTopicRow\";\n\nimport { ResourceName } from \"./ResourceName\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type ConsumeTopicShortcutProps = {\n  onChangeConsumerResourcePrefixRule: (value: ResourcePrefixRuleValue) => void;\n  onChangeTopicResourcePrefixRule: (value: ResourcePrefixRuleValue) => void;\n  consumerPrefixRuleValue: ResourcePrefixRuleValue;\n  topicPrefixRuleValue: ResourcePrefixRuleValue;\n  consumerResourceNameValue: string | undefined;\n  topicResourceNameValue: string | undefined;\n  onChangeConsumerResourceName: (value: string | undefined) => void;\n  onChangeTopicResourceName: (value: string | undefined) => void;\n  onFetchConsumerResourceNameOptions: (filter: string) => string[];\n  onFetchTopicResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  multipleShorctutPermissions?: boolean;\n  onDelete: (row: number) => void;\n  row: number;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ConsumeTopicShortcut: React.FC<ConsumeTopicShortcutProps> = ({\n  onChangeConsumerResourceName,\n  topicPrefixRuleValue,\n  topicResourceNameValue,\n  consumerPrefixRuleValue,\n  consumerResourceNameValue,\n  submitted,\n  onChangeConsumerResourcePrefixRule,\n  onChangeTopicResourceName,\n  onChangeTopicResourcePrefixRule,\n  onFetchConsumerResourceNameOptions,\n  onFetchTopicResourceNameOptions,\n  onDelete,\n  multipleShorctutPermissions = true,\n  row,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_consume_topic\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_consume_topic\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_consume_topic_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_consumer\")}\n            />\n          </Td>\n        </Tr>\n        <ProduceTopicRow\n          setIsNameValid={setIsNameValid}\n          isConsumeTopicShortcut={true}\n          onChange={onChangeTopicResourcePrefixRule}\n          prefixRuleValue={topicPrefixRuleValue}\n          resourceNameValue={topicResourceNameValue}\n          onChangeResourceName={onChangeTopicResourceName}\n          onFetchResourceNameOptions={onFetchTopicResourceNameOptions}\n          submitted={submitted}\n        />\n        <Tr>\n          <Td>\n            {\" \"}\n            <ResourceTypeLabel variant={\"GROUP\"} />{\" \"}\n            <DisplayResourceName resourceType={\"GROUP\"} />{\" \"}\n          </Td>\n          <Td>\n            <ResourcePrefixRule\n              value={consumerPrefixRuleValue}\n              onChangeValue={onChangeConsumerResourcePrefixRule}\n            />\n          </Td>\n          <Td>\n            {\n              <ResourceName\n                value={consumerResourceNameValue}\n                onChangeValue={onChangeConsumerResourceName}\n                onFetchOptions={onFetchConsumerResourceNameOptions}\n                submitted={submitted}\n                resourceType={\"topic\"}\n                resourcePrefixRule={consumerPrefixRuleValue}\n                setIsNameValid={setIsNameValid}\n              />\n            }\n          </Td>\n          <Td>\n            <PermissionOperationCell\n              permission={\"ALLOW\"}\n              operation={[\"READ\"]}\n            />\n          </Td>\n        </Tr>\n      </Tbody>\n    </>\n  );\n};\n","import { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport type { ResourceOperationValue } from \"./ResourceOperation\";\nimport { ResourceOperation } from \"./ResourceOperation\";\nimport type { ResourcePermissionValue } from \"./ResourcePermission\";\nimport { ResourcePermission } from \"./ResourcePermission\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport { ResourceType } from \"./ResourceType\";\n\nexport type KafkaInstanceManualPermissions = {\n  resourceType: ResourceTypeValue | undefined;\n  onChangeResourceType: (value: ResourceTypeValue | undefined) => void;\n  submitted: boolean;\n  resourcePermission: ResourcePermissionValue;\n  onChangeResourcePermission: (value: ResourcePermissionValue) => void;\n  resourceOperation: ResourceOperationValue | undefined;\n  onChangeResourceOperation: (\n    value: ResourceOperationValue | undefined\n  ) => void;\n  row: number;\n  onDelete: (row: number) => void;\n};\n\nexport const KafkaInstanceManualPermissions: React.FC<\n  KafkaInstanceManualPermissions\n> = ({\n  resourceType,\n  resourceOperation,\n  resourcePermission,\n  submitted,\n  onChangeResourceOperation,\n  onChangeResourcePermission,\n  onChangeResourceType,\n  row,\n  onDelete,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Tbody>\n      <Tr>\n        <Td width={60}>\n          <ResourceType\n            value={resourceType}\n            onChangeValue={onChangeResourceType}\n            invalid={submitted && resourceType === undefined}\n          />\n        </Td>\n\n        <Td />\n        <Td />\n\n        <Td>\n          <ResourcePermission\n            value={resourcePermission}\n            onChangeValue={onChangeResourcePermission}\n          />\n        </Td>\n        <Td>\n          <ResourceOperation\n            value={resourceOperation}\n            onChangeValue={onChangeResourceOperation}\n            resourceTypeOptions={[\n              t(\"operations.alter\"),\n              t(\"operations.describe\"),\n            ]}\n            invalid={submitted && resourceOperation === undefined}\n          />\n        </Td>\n        <Td>\n          <RemoveButton\n            variant=\"link\"\n            onClick={() => onDelete(row)}\n            tooltip={t(\"operations.delete\")}\n          />\n        </Td>\n      </Tr>\n    </Tbody>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type ManageAccessShortcutProps = {\n  onDelete: (row: number) => void;\n  multipleShorctutPermissions?: boolean;\n  instanceName: string;\n  row: number;\n};\nexport const ManageAccessShortcut: React.FC<ManageAccessShortcutProps> = ({\n  onDelete,\n  multipleShorctutPermissions = true,\n  instanceName,\n  row,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_manage_access\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_manage_access\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_manage_access_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_access\")}\n            />\n          </Td>\n        </Tr>\n\n        <Tr>\n          <Td colSpan={2}>\n            <ResourceTypeLabel variant={\"CLUSTER\"} />{\" \"}\n            <DisplayResourceName resourceType={\"CLUSTER\"} />{\" \"}\n            {t(\"is_kafka_instance\", { value: instanceName })}\n          </Td>\n\n          <Td />\n\n          <Td>\n            <PermissionOperationCell\n              permission={\"ALLOW\"}\n              operation={[\"ALTER\"]}\n            />\n          </Td>\n        </Tr>\n      </Tbody>\n    </>\n  );\n};\n","import type { MenuProps } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  Dropdown,\n  DropdownToggle,\n  DropdownToggleAction,\n  Menu,\n  MenuContent,\n  MenuGroup,\n  MenuItem,\n  MenuList,\n  Popper,\n} from \"@patternfly/react-core\";\nimport type {\n  MouseEvent as ReactMouseEvent,\n  VoidFunctionComponent,\n} from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type PermissionsDropdownProps = {\n  onAddPermission: () => void;\n  onShortcutConsumeTopic: () => void;\n  onShortcutProduceTopic: () => void;\n  onShortcutManageAccess: () => void;\n};\n\nexport const PermissionsDropdown: VoidFunctionComponent<\n  PermissionsDropdownProps\n> = ({\n  onAddPermission,\n  onShortcutConsumeTopic,\n  onShortcutProduceTopic,\n  onShortcutManageAccess,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  const [isOpen, setIsOpen] = useState(false);\n  useState<string | number | undefined>(0);\n\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const handleMenuKeys = useCallback(\n    (event: KeyboardEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        event.target &&\n        menuRef.current.contains(event.target as Node)\n      ) {\n        if (event.key === \"Escape\" || event.key === \"Tab\") {\n          setIsOpen(!isOpen);\n        }\n      }\n    },\n    [isOpen]\n  );\n\n  const handleClickOutside = useCallback(\n    (event: MouseEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        !menuRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleMenuKeys);\n    window.addEventListener(\"click\", handleClickOutside);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleMenuKeys);\n      window.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, [handleClickOutside, handleMenuKeys, isOpen, menuRef]);\n\n  const onToggleClick = useCallback((open: boolean, ev: ReactMouseEvent) => {\n    ev.stopPropagation(); // Stop handleClickOutside from handling\n    setTimeout(() => {\n      if (menuRef.current) {\n        const firstElement = menuRef.current.querySelector(\n          \"li > button,input:not(:disabled)\"\n        );\n        firstElement && (firstElement as HTMLElement).focus();\n      }\n    }, 0);\n    setIsOpen(open);\n  }, []);\n\n  const handleSelect: MenuProps[\"onSelect\"] = useCallback(\n    (_event, itemId) => {\n      setIsOpen(false);\n      switch (itemId) {\n        case \"add_permission\":\n          onAddPermission();\n          break;\n        case \"shortcut_consume_topic\":\n          onShortcutConsumeTopic();\n          break;\n        case \"shortcut_produce_topic\":\n          onShortcutProduceTopic();\n          break;\n        case \"shortcut_manage_access\":\n          onShortcutManageAccess();\n          break;\n      }\n    },\n    [\n      onAddPermission,\n      onShortcutConsumeTopic,\n      onShortcutManageAccess,\n      onShortcutProduceTopic,\n    ]\n  );\n\n  const menu = (\n    <Menu onSelect={handleSelect} key=\"acls-menu\" ref={menuRef}>\n      <MenuContent>\n        <MenuList>\n          <MenuGroup>\n            <MenuList>\n              <MenuItem itemId={\"add_permission\"}>\n                {t(\"permissions_dropdown.add_permission\")}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n\n          <Divider />\n          <MenuGroup label={t(\"permissions_dropdown.task_based_permission\")}>\n            <MenuList>\n              <MenuItem\n                itemId={\"shortcut_consume_topic\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_consume_topic_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_consume_topic\")}\n              </MenuItem>\n              <MenuItem\n                itemId={\"shortcut_produce_topic\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_produce_topic_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_produce_topic\")}\n              </MenuItem>\n              <MenuItem\n                itemId={\"shortcut_manage_access\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_manage_access_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_manage_access\")}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n        </MenuList>\n      </MenuContent>\n    </Menu>\n  );\n\n  const toggle = (\n    <Dropdown\n      toggle={\n        <DropdownToggle\n          data-testid={\"permissions-dropdown-toggle\"}\n          splitButtonItems={[\n            <DropdownToggleAction\n              key=\"cog-action\"\n              aria-label={t(\"permissions_dropdown.add_permission\")}\n              onClick={onAddPermission}\n            >\n              {t(\"permissions_dropdown.add_permission\")}\n            </DropdownToggleAction>,\n          ]}\n          splitButtonVariant=\"action\"\n          onToggle={onToggleClick}\n        />\n      }\n    />\n  );\n\n  return (\n    <Popper\n      trigger={toggle}\n      popper={menu}\n      isVisible={isOpen}\n      popperMatchesTriggerWidth={false}\n    />\n  );\n};\n","import { Tr, Td } from \"@patternfly/react-table\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ResourceName } from \"./ResourceName\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\n\nexport type ProduceTopicRowProps = {\n  onChange: (value: ResourcePrefixRuleValue) => void;\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n  onChangeResourceName: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  isConsumeTopicShortcut?: boolean;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ProduceTopicRow: React.FC<ProduceTopicRowProps> = ({\n  onChange,\n  prefixRuleValue,\n  resourceNameValue,\n  onChangeResourceName,\n  onFetchResourceNameOptions,\n  submitted,\n  isConsumeTopicShortcut,\n  setIsNameValid,\n}) => {\n  return (\n    <Tr style={{ borderBottom: isConsumeTopicShortcut ? \"none\" : \"\" }}>\n      <Td>\n        {\" \"}\n        <ResourceTypeLabel variant={\"TOPIC\"} />{\" \"}\n        <DisplayResourceName resourceType={\"TOPIC\"} />{\" \"}\n      </Td>\n      <Td>\n        {\n          <ResourcePrefixRule\n            value={prefixRuleValue}\n            onChangeValue={onChange}\n          />\n        }\n      </Td>\n      <Td>\n        <ResourceName\n          value={resourceNameValue}\n          onChangeValue={onChangeResourceName}\n          onFetchOptions={onFetchResourceNameOptions}\n          submitted={submitted}\n          resourceType={\"topic\"}\n          resourcePrefixRule={prefixRuleValue}\n          setIsNameValid={setIsNameValid}\n        />\n      </Td>\n      <Td colSpan={2}>\n        <PermissionOperationCell\n          permission={\"ALLOW\"}\n          operation={\n            isConsumeTopicShortcut\n              ? [\"READ\", \"DESCRIBE\"]\n              : [\"WRITE\", \"CREATE\", \"DESCRIBE\"]\n          }\n        />\n      </Td>\n    </Tr>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { ProduceTopicRow } from \"./ProduceTopicRow\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type ProduceTopicShortcutProps = {\n  onChange: (value: ResourcePrefixRuleValue) => void;\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n  onChangeResourceName: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  onDelete: (row: number) => void;\n  multipleShorctutPermissions?: boolean;\n  row: number;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ProduceTopicShortcut: React.FC<ProduceTopicShortcutProps> = ({\n  onChange,\n  onDelete,\n  prefixRuleValue,\n  onChangeResourceName,\n  resourceNameValue,\n  submitted,\n  onFetchResourceNameOptions,\n  multipleShorctutPermissions = true,\n  row,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_produce_topic\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_produce_topic\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_produce_topic_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_producer\")}\n            />\n          </Td>\n        </Tr>\n\n        <ProduceTopicRow\n          onChange={onChange}\n          prefixRuleValue={prefixRuleValue}\n          resourceNameValue={resourceNameValue}\n          onChangeResourceName={onChangeResourceName}\n          onFetchResourceNameOptions={onFetchResourceNameOptions}\n          submitted={submitted}\n          setIsNameValid={setIsNameValid}\n        />\n      </Tbody>\n    </>\n  );\n};\n","import { AsyncTypeaheadSelect } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\n\ntype ResourceNameProps = {\n  value: string | undefined;\n  onChangeValue: (value: string | undefined) => void;\n  onFetchOptions: (filter: string) => string[];\n  submitted: boolean;\n  resourceType: ResourceTypeValue | undefined;\n  resourcePrefixRule: ResourcePrefixRuleValue;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const ResourceName: React.VFC<ResourceNameProps> = ({\n  value,\n  onChangeValue,\n  submitted,\n  resourceType,\n  resourcePrefixRule,\n  onFetchOptions,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const validationCheck = (\n    resourceType: ResourceTypeValue | undefined,\n    resourcePreixCondition: \"Starts with\" | \"Is\",\n    filter: string | undefined\n  ) => {\n    const regExp = new RegExp(\"^[0-9A-Za-z_.-]+$\");\n\n    if (filter === undefined || filter === \"\")\n      return { isValid: true, message: undefined };\n    if (resourcePreixCondition == \"Is\" && resourceType == \"topic\") {\n      if (filter == \".\" || filter == \"..\")\n        return {\n          isValid: false,\n          message: t(\"resourcePrefix.invalid_topic_name\"),\n        };\n    }\n\n    if (resourceType == \"topic\" && !regExp.test(filter))\n      return {\n        isValid: false,\n        message: t(\"resourcePrefix.invalid_topic\"),\n      };\n\n    if (resourceType == \"consumer-group\" && !regExp.test(filter))\n      return {\n        isValid: false,\n        message: t(\"resourcePrefix.invalid_consumer_group\"),\n      };\n    if (filter.length > 32)\n      return { isValid: false, message: t(\"resourcePrefix.invalid_length\") };\n\n    return { isValid: true, message: undefined };\n  };\n\n  const onValidation = (filter: string | undefined) => {\n    const validationMessage = validationCheck(\n      resourceType,\n      resourcePrefixRule,\n      filter\n    );\n    setIsNameValid(validationMessage.isValid);\n    return validationMessage;\n  };\n\n  return (\n    <AsyncTypeaheadSelect\n      id=\"resource-name\"\n      ariaLabel={\n        resourcePrefixRule === \"Is\"\n          ? t(\"resourcePrefix.aria_label_name_is\", { value: resourceType })\n          : t(\"resourcePrefix.aria_label_name_starts_with\", {\n              value: resourceType,\n            })\n      }\n      value={value}\n      placeholderText={\n        resourcePrefixRule === \"Is\"\n          ? t(\"resourcePrefix.placeholder_name_is\")\n          : t(\"resourcePrefix.placeholder_name_starts_with\")\n      }\n      onChange={onChangeValue}\n      required={true}\n      submitted={submitted}\n      onFetchOptions={onFetchOptions}\n      onValidationCheck={onValidation}\n    />\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\n\nexport type ResourceOperationValue =\n  | \"All\"\n  | \"Read\"\n  | \"Write\"\n  | \"Create\"\n  | \"Delete\"\n  | \"Alter\"\n  | \"Describe\"\n  | \"Describe configs\"\n  | \"Alter configs\";\n\ntype ResourceOperationProps = {\n  value: ResourceOperationValue | undefined;\n  onChangeValue: (value: ResourceOperationValue | undefined) => void;\n  initialOpen?: boolean;\n  invalid: boolean;\n  resourceTypeOptions: string[];\n};\n\nexport const ResourceOperation: React.VFC<ResourceOperationProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n  invalid,\n  resourceTypeOptions,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourceOperationValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return resourceTypeOptions.map((value, index) => (\n      <SelectOption key={index} value={value}>\n        {value}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <FormGroup\n      validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n      helperTextInvalid={t(\"common:required\")}\n      fieldId={\"resource-operation-select\"}\n    >\n      <Select\n        id={\"resource-operation-select\"}\n        aria-label={t(\"operations.aria_label\", value)}\n        data-testid=\"acls-resource-operation-select\"\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        isOpen={isOpen}\n        width={200}\n        placeholderText={t(\"operations.placeholder_text\")}\n        validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n        selections={value}\n        menuAppendTo={\"parent\"}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroup>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\n\nexport type ResourcePermissionValue = \"allow\" | \"deny\";\n\ntype ResourcePermissionProps = {\n  value: ResourcePermissionValue;\n  onChangeValue: (value: ResourcePermissionValue) => void;\n  initialOpen?: boolean;\n};\n\nexport const ResourcePermission: React.VFC<ResourcePermissionProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourcePermissionOptions: {\n    [key in ResourcePermissionValue]: string;\n  } = {\n    allow: t(\"permissions.allow\"),\n    deny: t(\"permissions.deny\"),\n  };\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourcePermissionValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourcePermissionOptions).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <Select\n      id={\"resource-permission-select\"}\n      aria-label={t(\"permissions.aria_label\", { value })}\n      data-testid=\"acls-resource-permission-select\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      width={150}\n      selections={value}\n      menuAppendTo={\"parent\"}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type ResourcePrefixRuleValue = \"Is\" | \"Starts with\";\n\ntype ResourcePrefixRuleProps = {\n  value: ResourcePrefixRuleValue;\n  onChangeValue: (value: ResourcePrefixRuleValue) => void;\n  initialOpen?: boolean;\n};\n\nexport const ResourcePrefixRule: React.VFC<ResourcePrefixRuleProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourcePrefixRuleOptions: {\n    [key in ResourcePrefixRuleValue]: { label: string; description: string };\n  } = {\n    \"Starts with\": {\n      label: t(\"resource_prefix_rule.starts_with\"),\n      description: t(\"resource_prefix_rule.starts_with_description\"),\n    },\n    Is: {\n      label: t(\"resource_prefix_rule.is\"),\n      description: t(\"resource_prefix_rule.is_description\"),\n    },\n  };\n\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourcePrefixRuleValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourcePrefixRuleOptions).map(\n      ([key, { label, description }]) => (\n        <SelectOption key={key} value={key} description={description}>\n          {label}\n        </SelectOption>\n      )\n    );\n  };\n\n  return (\n    <Select\n      id={\"resource-prefix-rule-select\"}\n      aria-label={t(\"resource_prefix_rule.aria_label\", { value })}\n      data-testid=\"acls-resource-prefix-rule-select\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      width={150}\n      selections={value}\n      menuAppendTo={\"parent\"}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\n\nexport type ResourceTypeValue =\n  | \"topic\"\n  | \"consumer-group\"\n  | \"kafka-instance\"\n  | \"transactional-id\";\n\ntype ResourceTypeProps = {\n  value: ResourceTypeValue | undefined;\n  onChangeValue: (value: ResourceTypeValue | undefined) => void;\n  initialOpen?: boolean;\n  invalid: boolean;\n};\n\nexport const ResourceType: React.VFC<ResourceTypeProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n  invalid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourceTypeOptions: { [key in ResourceTypeValue]: string } = {\n    \"consumer-group\": t(\"resourceTypes.consumer_group\"),\n    topic: t(\"resourceTypes.topic\"),\n    \"kafka-instance\": t(\"resourceTypes.kafka_instance\"),\n    \"transactional-id\": t(\"resourceTypes.transactional_id\"),\n  };\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourceTypeValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourceTypeOptions).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <FormGroup\n      validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n      helperTextInvalid={t(\"common:required\")}\n      fieldId={\"resource-type-select\"}\n    >\n      <Select\n        id={\"resource-type-select\"}\n        aria-label={\n          value != undefined\n            ? t(\"resourceTypes.resource_type_selected\", { value: value })\n            : t(\"resourceTypes.resource_type\")\n        }\n        data-testid=\"acls-resource-type-select\"\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        isOpen={isOpen}\n        width={200}\n        placeholderText={t(\"resourceTypes.placeholder_text\")}\n        validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n        selections={value}\n        menuAppendTo={\"parent\"}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroup>\n  );\n};\n","import type { VFC } from \"react\";\nimport type { LabelProps } from \"@patternfly/react-core\";\nimport { Label } from \"@patternfly/react-core\";\nimport type { AclResourceType } from \"../types\";\nimport \"./ResourceTypeLabel.css\";\n\nexport type SolidLabelProps = {\n  variant: AclResourceType;\n};\n\ntype Variant = {\n  labelColor: LabelProps[\"color\"];\n  content: string;\n};\n\nexport const ResourceTypeLabel: VFC<SolidLabelProps> = ({ variant }) => {\n  const getVariant = (): Variant => {\n    switch (variant) {\n      case \"GROUP\":\n        return { labelColor: \"green\", content: \"G\" };\n      case \"CLUSTER\":\n        return { labelColor: \"grey\", content: \"KI\" };\n      case \"TOPIC\":\n        return { labelColor: \"blue\", content: \"T\" };\n      case \"TRANSACTIONAL_ID\":\n        return { labelColor: \"orange\", content: \"TI\" };\n    }\n  };\n\n  const { labelColor, content } = getVariant() || {};\n\n  return (\n    <Label color={labelColor} className={`mas-m-solid`}>\n      {content}\n    </Label>\n  );\n};\n","import * as React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport type { TreeViewDataItem } from \"@patternfly/react-core\";\nimport {\n  Menu,\n  MenuContent,\n  MenuGroup,\n  MenuList,\n  MenuToggle,\n  Popper,\n  TreeView,\n} from \"@patternfly/react-core\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport type { AclOperation, AclResourceType } from \"../types\";\n\nexport type ResourceTypeDataItem = TreeViewDataItem & {\n  id: `${AclResourceType}` | `${AclResourceType}-${AclOperation}`;\n  children?: ResourceTypeDataItem[];\n};\n\nexport type ResourceTypeOperationFilterProps = {\n  onCheckedItemsChange: (items: ResourceTypeDataItem[]) => void;\n  checkedItems: ResourceTypeDataItem[];\n};\n\nexport const ResourceTypeOperationFilter: React.VFC<\n  ResourceTypeOperationFilterProps\n> = ({ onCheckedItemsChange, checkedItems = [] }) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const toggleRef = useRef<HTMLButtonElement>(null);\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const consumerGroupOptions: ResourceTypeDataItem[] = [\n    {\n      name: (\n        <>\n          <ResourceTypeLabel variant={\"GROUP\"} /> {t(\"consumer_group\")}\n        </>\n      ),\n      id: \"GROUP\",\n      checkProps: { checked: false },\n      children: [\n        {\n          name: t(\"operations.all\"),\n          id: `GROUP-ALL`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.read\"),\n          id: `GROUP-READ`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.delete\"),\n          id: `GROUP-DELETE`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.describe\"),\n          id: `GROUP-DESCRIBE`,\n          checkProps: { checked: false },\n        },\n      ],\n    },\n  ];\n\n  const kafkaInstanceOptions: ResourceTypeDataItem[] = [\n    {\n      name: (\n        <>\n          <ResourceTypeLabel variant={\"CLUSTER\"} /> {t(\"kafka_instance\")}\n        </>\n      ),\n      id: \"CLUSTER\",\n      checkProps: { checked: false },\n      children: [\n        {\n          name: t(\"operations.alter\"),\n          id: `CLUSTER-ALTER`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.describe\"),\n          id: `CLUSTER-DESCRIBE`,\n          checkProps: { checked: false },\n        },\n      ],\n    },\n  ];\n\n  const topicOptions: ResourceTypeDataItem[] = [\n    {\n      name: (\n        <>\n          <ResourceTypeLabel variant={\"TOPIC\"} /> {t(\"topic\")}\n        </>\n      ),\n      id: \"TOPIC\",\n      checkProps: { checked: false },\n      children: [\n        {\n          name: t(\"operations.all\"),\n          id: `TOPIC-ALL`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.alter\"),\n          id: `TOPIC-ALTER`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.alter_configs\"),\n          id: `TOPIC-ALTER_CONFIGS`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.create\"),\n          id: `TOPIC-CREATE`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.delete\"),\n          id: `TOPIC-DELETE`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.describe\"),\n          id: `TOPIC-DESCRIBE`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.describe_configs\"),\n          id: `TOPIC-DESCRIBE_CONFIGS`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.read\"),\n          id: `TOPIC-READ`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.write\"),\n          id: `TOPIC-WRITE`,\n          checkProps: { checked: false },\n        },\n      ],\n    },\n  ];\n\n  const transactionalIdOptions: ResourceTypeDataItem[] = [\n    {\n      name: (\n        <>\n          <ResourceTypeLabel variant={\"TRANSACTIONAL_ID\"} />{\" \"}\n          {t(\"transactional_id\")}\n        </>\n      ),\n      id: \"TRANSACTIONAL_ID\",\n      checkProps: { checked: false },\n      children: [\n        {\n          name: t(\"operations.all\"),\n          id: `TRANSACTIONAL_ID-ALL`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.alter\"),\n          id: `TRANSACTIONAL_ID-ALTER`,\n          checkProps: { checked: false },\n        },\n        {\n          name: t(\"operations.describe\"),\n          id: `TRANSACTIONAL_ID-DESCRIBE`,\n          checkProps: { checked: false },\n        },\n      ],\n    },\n  ];\n\n  const isChecked = (dataItem: TreeViewDataItem) =>\n    checkedItems.some((item) => item.id === dataItem.id);\n\n  const areAllDescendantsChecked = (dataItem: TreeViewDataItem): boolean =>\n    dataItem.children\n      ? dataItem.children.every((child) => areAllDescendantsChecked(child))\n      : isChecked(dataItem);\n\n  const areSomeDescendantsChecked = (dataItem: TreeViewDataItem): boolean =>\n    dataItem.children\n      ? dataItem.children.some((child) => areSomeDescendantsChecked(child))\n      : isChecked(dataItem);\n\n  const flattenTree = (tree: ResourceTypeDataItem[]) => {\n    let result: ResourceTypeDataItem[] = [];\n\n    tree.forEach((item) => {\n      result.push(item);\n      if (item.children) {\n        result = result.concat(flattenTree(item.children));\n      }\n    });\n\n    return result;\n  };\n\n  const mapTree = (item: TreeViewDataItem): TreeViewDataItem => {\n    const hasCheck = areAllDescendantsChecked(item);\n    // Reset checked properties to be updated\n    const checkProps = item?.checkProps;\n    if (checkProps?.checked !== undefined && checkProps?.checked !== null)\n      checkProps.checked = false;\n\n    if (hasCheck) {\n      if (checkProps?.checked !== undefined && checkProps?.checked !== null)\n        checkProps.checked = true;\n    } else {\n      const hasPartialCheck = areSomeDescendantsChecked(item);\n      if (hasPartialCheck) {\n        if (checkProps?.checked !== undefined) checkProps.checked = null;\n      }\n    }\n\n    if (item.children) {\n      return {\n        ...item,\n        children: item.children.map(mapTree),\n      };\n    }\n\n    return item;\n  };\n\n  const filterItems = (\n    item: TreeViewDataItem,\n    checkedItem: TreeViewDataItem\n  ): TreeViewDataItem | boolean => {\n    if (item.id === checkedItem.id) {\n      return true;\n    }\n\n    if (item.children) {\n      return (\n        (item.children = item.children\n          .map((opt) => Object.assign({}, opt))\n          .filter((child) => filterItems(child, checkedItem))).length > 0\n      );\n    }\n\n    return false;\n  };\n\n  const onCheck = (\n    evt: React.ChangeEvent,\n    treeViewItem: TreeViewDataItem,\n    treeType: AclResourceType\n  ) => {\n    const checked = (evt.target as HTMLInputElement).checked;\n    let options: ResourceTypeDataItem[] = [];\n\n    switch (treeType) {\n      case \"GROUP\":\n        options = consumerGroupOptions;\n        break;\n      case \"CLUSTER\":\n        options = kafkaInstanceOptions;\n        break;\n      case \"TOPIC\":\n        options = topicOptions;\n        break;\n      case \"TRANSACTIONAL_ID\":\n        options = transactionalIdOptions;\n        break;\n      default:\n        break;\n    }\n\n    const checkedItemTree = options\n      .map((opt) => Object.assign({}, opt))\n      .filter((item) => filterItems(item, treeViewItem));\n\n    const flatCheckedItems = flattenTree(checkedItemTree);\n\n    const newCheckedItems = checked\n      ? checkedItems.concat(\n          flatCheckedItems.filter(\n            (item) => !checkedItems.some((i) => i.id === item.id)\n          )\n        )\n      : checkedItems.filter(\n          (item) => !flatCheckedItems.some((i) => i.id === item.id)\n        );\n\n    onCheckedItemsChange(newCheckedItems);\n  };\n\n  const handleMenuKeys = React.useCallback(\n    (event: KeyboardEvent) => {\n      if (!isOpen) {\n        return;\n      }\n      if (\n        menuRef?.current?.contains(event.target as Node) ||\n        toggleRef?.current?.contains(event.target as Node)\n      ) {\n        if (event.key === \"Escape\" || event.key === \"Tab\") {\n          setIsOpen(!isOpen);\n          toggleRef?.current?.focus();\n        }\n      }\n    },\n    [isOpen]\n  );\n\n  const handleClickOutside = React.useCallback(\n    (event: MouseEvent) => {\n      if (isOpen && !menuRef?.current?.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleMenuKeys);\n    window.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"keydown\", handleMenuKeys);\n      window.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, [isOpen, menuRef, handleMenuKeys, handleClickOutside]);\n\n  const onToggleClick = (ev: React.MouseEvent) => {\n    ev.stopPropagation(); // Stop handleClickOutside from handling\n    setTimeout(() => {\n      if (menuRef.current) {\n        const firstElement = menuRef.current.querySelector(\n          \"li > button:not(:disabled)\"\n        );\n        firstElement && (firstElement as HTMLElement).focus();\n      }\n    }, 0);\n    setIsOpen(!isOpen);\n  };\n\n  const toggle = (\n    <MenuToggle\n      ref={toggleRef}\n      onClick={onToggleClick}\n      isExpanded={isOpen}\n      data-testid=\"acls-treeview-menu-toggle\"\n    >\n      {t(\"resource_type_operation_filter_placeholder\")}\n    </MenuToggle>\n  );\n\n  const consumerGroupsMapped = consumerGroupOptions.map(mapTree);\n  const kafkaInstanceMapped = kafkaInstanceOptions.map(mapTree);\n  const topicMapped = topicOptions.map(mapTree);\n  const transactionalIdMapped = transactionalIdOptions.map(mapTree);\n\n  const menu = (\n    <Menu ref={menuRef} data-testid=\"acls-treeview-menu\">\n      <MenuContent>\n        <MenuList>\n          <MenuGroup>\n            <TreeView\n              data-testid=\"acls-consumer-group\"\n              data={consumerGroupsMapped}\n              hasChecks\n              onCheck={(event, item) => onCheck(event, item, \"GROUP\")}\n            />\n          </MenuGroup>\n          <MenuGroup>\n            <TreeView\n              data={kafkaInstanceMapped}\n              hasChecks\n              onCheck={(event, item) => onCheck(event, item, \"CLUSTER\")}\n            />\n          </MenuGroup>\n          <MenuGroup>\n            <TreeView\n              data={topicMapped}\n              hasChecks\n              onCheck={(event, item) => onCheck(event, item, \"TOPIC\")}\n            />\n          </MenuGroup>\n          <MenuGroup>\n            <TreeView\n              data={transactionalIdMapped}\n              hasChecks\n              onCheck={(event, item) =>\n                onCheck(event, item, \"TRANSACTIONAL_ID\")\n              }\n            />\n          </MenuGroup>\n        </MenuList>\n      </MenuContent>\n    </Menu>\n  );\n\n  return (\n    <Popper\n      trigger={toggle}\n      popper={menu}\n      isVisible={isOpen}\n      popperMatchesTriggerWidth={true}\n    />\n  );\n};\n","import type { VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\n\nimport type { AclBinding } from \"../types\";\nimport { PermissionOperationCell, PrincipalCell, ResourceCell } from \"./Cells\";\n\nexport type ReviewPermissionsTableProps = {\n  acls: AclBinding[];\n  selectedAccountId: string;\n  onRemoveAcl: (idx: number) => void;\n};\n\nexport const ReviewPermissionsTable: VFC<ReviewPermissionsTableProps> = ({\n  selectedAccountId,\n  acls = [],\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <TableComposable\n      variant={TableVariant.compact}\n      aria-label={t(\"review_permissions_table\")}\n    >\n      <Thead noWrap>\n        <Tr>\n          <Th width={60}>{t(\"table.resource_column_title\")}</Th>\n          <Th width={20}>{t(\"table.permissions_column_title\")}</Th>\n          <Th width={20} />\n        </Tr>\n      </Thead>\n      <Tbody>\n        {acls.map((acl, idx) => {\n          const {\n            patternType,\n            resourceType,\n            resourceName,\n            operation,\n            permission,\n            principal,\n          } = acl;\n          const isDeleteEnabled =\n            selectedAccountId === \"*\" ||\n            principal === `User:${selectedAccountId}` ||\n            principal === `User:*`;\n          const isAllAccounts = principal === \"User:*\";\n\n          return (\n            <Tr key={idx}>\n              <Td>\n                <ResourceCell\n                  patternType={patternType}\n                  resourceType={resourceType}\n                  resourceName={resourceName}\n                />\n              </Td>\n              <Td>\n                <PermissionOperationCell\n                  permission={permission}\n                  operation={operation}\n                />\n              </Td>\n              <Td>\n                <PrincipalCell\n                  isDeleteEnabled={isDeleteEnabled}\n                  isAllAccounts={isAllAccounts}\n                  onRemoveAcl={() => onRemoveAcl(idx)}\n                />\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </TableComposable>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { FormGroupWithPopover } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Account } from \"../types\";\nimport { PrincipalType } from \"../types\";\n\nexport type SelectAccountProps = {\n  value: string | undefined;\n  accounts: Account[];\n  initialOpen?: boolean;\n  onChangeAccount: (value: string | undefined) => void;\n};\n\nexport const SelectAccount: React.VFC<SelectAccountProps> = ({\n  value,\n  accounts,\n  initialOpen = false,\n  onChangeAccount,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [isDirty, setIsDirty] = useState<boolean>(false);\n\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const onToggle = (newState: boolean) => {\n    setIsOpen(newState);\n  };\n\n  const clearSelection = () => {\n    onChangeAccount(undefined);\n    setIsDirty(true);\n    setIsOpen(false);\n  };\n\n  const noServiceAccounts = [\n    <SelectOption isNoResultsOption={true} isDisabled={true} key={1}>\n      {t(\"no_results_found\")}\n    </SelectOption>,\n  ];\n  const noUserAccounts = [\n    <SelectOption isNoResultsOption={true} isDisabled={true} key={1}>\n      {t(\"no_results_found\")}\n    </SelectOption>,\n  ];\n\n  function makeOptions(filter = \"\") {\n    const filterRegExp = new RegExp(filter, \"i\");\n    const filteredAccounts =\n      filter !== \"\"\n        ? accounts.filter((principal) =>\n            filterRegExp.test(principal.displayName)\n          )\n        : accounts;\n\n    const serviceAccountOptions = filteredAccounts\n      .filter(\n        (principal) => principal.principalType === PrincipalType.ServiceAccount\n      )\n      .sort((a, b) =>\n        a.displayName && b.displayName\n          ? a.displayName.localeCompare(b.displayName)\n          : -1\n      )\n      .map((principal, index) => (\n        <SelectOption\n          key={index}\n          value={principal.id}\n          description={principal.displayName}\n        >\n          {principal.id}\n        </SelectOption>\n      ));\n\n    const userAccountOperations = filteredAccounts\n      .filter(\n        (principal) => principal.principalType === PrincipalType.UserAccount\n      )\n      .map((principal, index) => (\n        <SelectOption\n          key={index}\n          value={principal.id}\n          description={principal.displayName}\n        >\n          {principal.id}\n        </SelectOption>\n      ));\n\n    return [\n      <SelectGroup key=\"all_accounts_group\">\n        <SelectOption\n          key=\"*\"\n          value=\"*\"\n          description={t(\"all_accounts_description\")}\n        >\n          {t(\"all_accounts_title\")}\n        </SelectOption>\n      </SelectGroup>,\n\n      <Divider key=\"all_accounts_divider\" />,\n      <SelectGroup\n        label={t(\"all_accounts_service_account_group\")}\n        key=\"service_accounts_group\"\n      >\n        {serviceAccountOptions.length\n          ? serviceAccountOptions\n          : noServiceAccounts}\n      </SelectGroup>,\n      <Divider key=\"user_account_divider\" />,\n      <SelectGroup\n        label={t(\"all_accounts_user_account_group\")}\n        key=\"user_accounts_group\"\n      >\n        {userAccountOperations.length ? userAccountOperations : noUserAccounts}\n      </SelectGroup>,\n    ];\n  }\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, value) => {\n    onChangeAccount(value as string);\n    setIsDirty(false);\n    setIsOpen(false);\n  };\n\n  const validated: ValidatedOptions = isDirty\n    ? ValidatedOptions.error\n    : ValidatedOptions.default;\n\n  return (\n    <FormGroupWithPopover\n      labelHead={t(\"account_id_title\")}\n      fieldId=\"account-id\"\n      fieldLabel={t(\"account_id_title\")}\n      labelBody={t(\"account_id_help\")}\n      buttonAriaLabel={t(\"account_id_aria\")}\n      isRequired={true}\n      validated={validated}\n    >\n      <Select\n        id={\"account-id\"}\n        data-testid=\"acls-select-account\"\n        variant={SelectVariant.typeahead}\n        typeAheadAriaLabel={t(\"account_id_title\")}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        onClear={clearSelection}\n        selections={value}\n        onFilter={(_, value) => makeOptions(value)}\n        isOpen={isOpen}\n        placeholderText={t(\"account_id_typeahead_placeholder\")}\n        isCreatable={true}\n        menuAppendTo=\"parent\"\n        validated={validated}\n        createText={t(\"resourcePrefix.create_text\")}\n        isGrouped={true}\n        maxHeight={400}\n        onCreateOption={() => {\n          setIsOpen(false);\n          setIsDirty(false);\n        }}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroupWithPopover>\n  );\n};\n","import { Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ShortcutsTableHead: React.FC = () => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Thead>\n      <Tr>\n        <Th>{t(\"table.resource_column_title\")}</Th>\n        <Th />\n\n        <Th />\n\n        <Th>{t(\"table.permissions_column_title\")}</Th>\n        <Th />\n        <Th />\n      </Tr>\n    </Thead>\n  );\n};\n","import { Text, TextContent, TextVariants } from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { AclBinding } from \"../types\";\nimport { ReviewPermissionsTable } from \"./ReviewPermissionsTable\";\n\nexport type ViewAccountDetailsProps = {\n  accountId: string | undefined;\n  existingAcls: AclBinding[];\n  onRemoveAcl: (index: number) => void;\n};\n\nexport const ViewAccountDetails: React.VFC<ViewAccountDetailsProps> = ({\n  accountId,\n  existingAcls,\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const HelperText: React.FunctionComponent = () => {\n    if (accountId === \"*\") {\n      return t(\"all_accounts_help\");\n    }\n    return (\n      <Trans ns={[\"manage-kafka-permissions\"]} i18nKey=\"selected_account_help\">\n        Review the list of existing permissions for the selected account. The\n        list includes account-specific permissions and permissions applied to\n        all accounts within this Kafka instance. Permissions labeled\n        <strong>All accounts</strong> cannot be removed when an individual\n        account ID is selected.\n      </Trans>\n    );\n  };\n  return (\n    <>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          <HelperText />\n        </Text>\n      </TextContent>\n      <ReviewPermissionsTable\n        acls={existingAcls}\n        selectedAccountId={accountId ? accountId : \"\"}\n        onRemoveAcl={onRemoveAcl}\n      />\n    </>\n  );\n};\n","export * from \"./PermissionsDropdown\";\nexport * from \"./ResourceTypeOperationFilter\";\nexport * from \"./ResourceTypeLabel\";\n","export * from \"./ManageKafkaPermissions\";\nexport * from \"./types\";\nexport * from \"./components\";\n","import type { ResourceOperationValue } from \"./components/ResourceOperation\";\nimport type { ResourcePermissionValue } from \"./components/ResourcePermission\";\nimport type { ResourcePrefixRuleValue } from \"./components/ResourcePrefixRule\";\nimport type { ResourceTypeValue } from \"./components/ResourceType\";\n\nexport type AclOperation =\n  | \"ALL\"\n  | \"READ\"\n  | \"WRITE\"\n  | \"CREATE\"\n  | \"DELETE\"\n  | \"ALTER\"\n  | \"DESCRIBE\"\n  | \"DESCRIBE_CONFIGS\"\n  | \"ALTER_CONFIGS\";\n\nexport type AclResourceType =\n  | \"GROUP\"\n  | \"TOPIC\"\n  | \"CLUSTER\"\n  | \"TRANSACTIONAL_ID\";\n\nexport type AclPatternType = \"LITERAL\" | \"PREFIXED\";\n\nexport type AclPermissionType = \"ALLOW\" | \"DENY\";\n\nexport interface AclBinding {\n  /**\n   *\n   * @type {AclResourceType}\n   * @memberof AclBinding\n   */\n  resourceType: AclResourceType;\n  /**\n   *\n   * @type {string}\n   * @memberof AclBinding\n   */\n  resourceName: string;\n  /**\n   *\n   * @type {AclPatternType}\n   * @memberof AclBinding\n   */\n  patternType: AclPatternType;\n  /**\n   * Identifies the user or service account to which an ACL entry is bound. The literal prefix value of `User:` is required. May be used to specify all users with value `User:*`.\n   * @type {string}\n   * @memberof AclBinding\n   */\n  principal: string;\n  /**\n   *\n   * @type {AclOperation}\n   * @memberof AclBinding\n   */\n  operation: AclOperation;\n  /**\n   *\n   * @type {AclPermissionType}\n   * @memberof AclBinding\n   */\n  permission: AclPermissionType;\n}\nexport enum PrincipalType {\n  UserAccount = \"USER_ACCOUNT\",\n  ServiceAccount = \"SERVICE_ACCOUNT\",\n}\n\nexport type Account = {\n  id: string;\n  principalType: PrincipalType;\n  displayName: string;\n};\n\ntype ManualAcl = {\n  resourceType: ResourceTypeValue | undefined;\n  resourcePrefix: ResourcePrefixRuleValue;\n  resourceName: string | undefined;\n  resourcePermission: ResourcePermissionValue;\n  resourceOperation: ResourceOperationValue | undefined;\n};\n\ntype ProduceTopicTemplate = {\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n};\n\ntype ConsumeTopicTemplate = {\n  consumerResourceName: string | undefined;\n  consumerResourcePrefixRule: ResourcePrefixRuleValue;\n  topicResourceName: string | undefined;\n  topicResourcePrefixRule: ResourcePrefixRuleValue;\n};\n\ntype ManageAccessTemplate = {\n  instanceName: string;\n};\nexport type AddAclType =\n  | ({ type: \"manual\" } & ManualAcl)\n  | ({ type: \"consume-topic\" } & ConsumeTopicTemplate)\n  | ({ type: \"produce-topic\" } & ProduceTopicTemplate)\n  | ({ type: \"manage-access\" } & ManageAccessTemplate);\n\nexport const createEmptyManualAcl = (): AddAclType => {\n  return {\n    type: \"manual\",\n    resourceName: undefined,\n    resourceType: undefined,\n    resourceOperation: undefined,\n    resourcePrefix: \"Is\",\n    resourcePermission: \"allow\",\n  };\n};\nexport const createEmptyProduceTopicAcl = (): AddAclType => {\n  return {\n    type: \"produce-topic\",\n    prefixRuleValue: \"Is\",\n    resourceNameValue: undefined,\n  };\n};\nexport const createEmptyConsumeTopicAcl = (): AddAclType => {\n  return {\n    type: \"consume-topic\",\n    consumerResourceName: undefined,\n    consumerResourcePrefixRule: \"Is\",\n    topicResourceName: undefined,\n    topicResourcePrefixRule: \"Is\",\n  };\n};\nexport const createEmptyManageAccessAcl = (kafkaName: string): AddAclType => {\n  return {\n    type: \"manage-access\",\n    instanceName: kafkaName,\n  };\n};\n","import {\n  Bullseye,\n  Card,\n  PageSection,\n  PageSectionVariants,\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport classNames from \"classnames\";\nimport type {\n  CSSProperties,\n  FunctionComponent,\n  ReactNode,\n  VoidFunctionComponent,\n} from \"react\";\nimport \"./MarketingPage.css\";\n\nexport type MarketingPageHeroProps = {\n  title: string;\n  tagLine: string;\n  description: string;\n  description2?: string;\n  heroImage: string;\n  heroImageSize: number;\n  heroImageCanRepeat?: boolean;\n  heroImagePositionY?: number;\n  cta?: ReactNode;\n  variant?: \"light\" | \"dark\";\n};\n\nexport const MarketingPageHero: VoidFunctionComponent<\n  MarketingPageHeroProps\n> = ({\n  title,\n  tagLine,\n  description,\n  description2,\n  heroImage,\n  heroImageSize,\n  heroImageCanRepeat = true,\n  heroImagePositionY = 0,\n  cta,\n  variant = \"light\",\n}) => {\n  const style = {\n    \"--appsrv-marketing--banner--before--BackgroundImage\": `url(${heroImage})`,\n    \"--appsrv-marketing--banner--before--BackgroundSize\": `${heroImageSize}px`,\n    \"--appsrv-marketing--banner--before--BackgroundRepeat\": heroImageCanRepeat\n      ? \"repeat\"\n      : \"no-repeat\",\n    \"--appsrv-marketing--banner--before--BackgroundPositionY\": `${heroImagePositionY}px`,\n  } as CSSProperties;\n  return (\n    <PageSection\n      className={classNames(\"appsrv-marketing--banner\", {\n        \"pf-u-background-color-dark-100\": variant === \"dark\",\n        \"pf-u-background-color-100\": variant === \"light\",\n      })}\n      variant={\n        variant === \"dark\"\n          ? PageSectionVariants.dark\n          : PageSectionVariants.light\n      }\n      style={style}\n    >\n      <Stack hasGutter>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          {title}\n        </Title>\n        <Text\n          className={`appsrv-marketing--banner__tagline ${\n            variant === \"dark\" ? \"\" : \"pf-u-color-200\"\n          }`}\n        >\n          {tagLine}\n        </Text>\n        <Text component={TextVariants.p}>{description}</Text>\n        {description2 && (\n          <Text component={TextVariants.p} className=\"pf-u-mt-md\">\n            {description2}\n          </Text>\n        )}\n        {cta && <StackItem>{cta}</StackItem>}\n      </Stack>\n    </PageSection>\n  );\n};\n\nexport const MarketingPageBanner: FunctionComponent = ({ children }) => {\n  return (\n    <PageSection\n      variant={PageSectionVariants.light}\n      className=\"appsrv-marketing--page-section--marketing pf-u-background-color-100\"\n    >\n      <Bullseye>\n        <Text\n          component={TextVariants.p}\n          className=\"appsrv-marketing--banner--text-only\"\n        >\n          {children}\n        </Text>\n      </Bullseye>\n    </PageSection>\n  );\n};\n\nexport type MarketingPageSectionProps = {\n  className?: string;\n};\n\nexport const MarketingPageSection: FunctionComponent<\n  MarketingPageSectionProps & {\n    variant?: \"dark\" | \"light\" | \"default\";\n  }\n> = ({\n  className = \"appsrv-marketing--page-section--marketing\",\n  variant = \"default\",\n  children,\n}) => (\n  <PageSection\n    isWidthLimited\n    className={classNames(className, {\n      \"pf-u-background-color-dark-100\": variant === \"dark\",\n      \"pf-u-background-color-100\": variant === \"light\",\n    })}\n    variant={\n      variant === \"dark\"\n        ? PageSectionVariants.dark\n        : variant === \"light\"\n        ? PageSectionVariants.light\n        : PageSectionVariants.default\n    }\n  >\n    {children}\n  </PageSection>\n);\n\nexport const MarketingPageVideoCard: VoidFunctionComponent<{\n  src: string;\n  title: string;\n}> = ({ src, title }) => (\n  <Card className=\"appsrv-marketing--video\">\n    <div className=\"appsrv-marketing--video__wrapper\">\n      <iframe\n        src={src}\n        title={title}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  </Card>\n);\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { timeIntervalsMapping } from \"./consts\";\nimport type { KafkaInstanceMetricsMachineType } from \"./machines\";\nimport { KafkaInstanceMetricsMachine } from \"./machines\";\nimport type { DurationOptions, GetKafkaInstanceMetricsResponse } from \"./types\";\n\nexport const KafkaInstanceMetricsContext = createContext<{\n  service: ActorRefFrom<KafkaInstanceMetricsMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type KafkaInstanceMetricsProviderProps = {\n  getKafkaInstanceMetrics: (options: {\n    duration: DurationOptions;\n    interval: number;\n  }) => Promise<GetKafkaInstanceMetricsResponse>;\n};\nexport const KafkaInstanceMetricsProvider: FunctionComponent<\n  KafkaInstanceMetricsProviderProps\n> = ({ children, getKafkaInstanceMetrics }) => {\n  const service = useInterpret(\n    () =>\n      KafkaInstanceMetricsMachine.withConfig({\n        services: {\n          api: (context) => {\n            return (callback) => {\n              getKafkaInstanceMetrics({\n                duration: context.duration,\n                interval: timeIntervalsMapping[context.duration].interval,\n              })\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <KafkaInstanceMetricsContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </KafkaInstanceMetricsContext.Provider>\n  );\n};\n","import { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport {\n  CardKafkaInstanceMetrics,\n  CardTopicsMetrics,\n  EmptyStateInitialLoading,\n  EmptyStateMetricsUnavailable,\n  MetricsLayout,\n} from \"./components\";\nimport { CardKpi } from \"./components/CardKpi\";\nimport { MetricsLagAlert } from \"./components/MetricsLagAlert\";\nimport { PartitionCard } from \"./components/PartitionCard\";\nimport type { KafkaInstanceMetricsProviderProps } from \"./KafkaInstanceMetricsProvider\";\nimport { KafkaInstanceMetricsProvider } from \"./KafkaInstanceMetricsProvider\";\nimport type { MetricsKpiProviderProps } from \"./MetricsKpiProvider\";\nimport { MetricsKpiProvider } from \"./MetricsKpiProvider\";\nimport type { TopicsMetricsProviderProps } from \"./TopicsMetricsProvider\";\nimport { TopicsMetricsProvider } from \"./TopicsMetricsProvider\";\nimport { useKafkaInstanceMetrics } from \"./useKafkaInstanceMetrics\";\nimport { useMetricsKpi } from \"./useMetricsKpi\";\nimport { useTopicsMetrics } from \"./useTopicsMetrics\";\n\nexport type MetricsProps = {\n  onCreateTopic: () => void;\n  onAlertClose: () => void;\n  hasUserAlreadyClosedAlert: boolean;\n} & KafkaInstanceMetricsProviderProps &\n  TopicsMetricsProviderProps &\n  MetricsKpiProviderProps;\n\nexport const Metrics: VoidFunctionComponent<MetricsProps> = ({\n  getKafkaInstanceMetrics,\n  getTopicsMetrics,\n  getMetricsKpi,\n  onCreateTopic,\n  onAlertClose,\n  hasUserAlreadyClosedAlert,\n}) => {\n  return (\n    <TopicsMetricsProvider getTopicsMetrics={getTopicsMetrics}>\n      <KafkaInstanceMetricsProvider\n        getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n      >\n        <MetricsKpiProvider getMetricsKpi={getMetricsKpi}>\n          <ConnectedMetrics\n            onCreateTopic={onCreateTopic}\n            onClickClose={onAlertClose}\n            isClosed={hasUserAlreadyClosedAlert}\n          />\n        </MetricsKpiProvider>\n      </KafkaInstanceMetricsProvider>\n    </TopicsMetricsProvider>\n  );\n};\n\ntype ConnectedMetricsProps = {\n  onCreateTopic: () => void;\n  onClickClose: () => void;\n  isClosed: boolean;\n};\nconst ConnectedMetrics: VoidFunctionComponent<ConnectedMetricsProps> = ({\n  onCreateTopic,\n  onClickClose,\n  isClosed,\n}) => {\n  const { t } = useTranslation();\n  const kafkaInstanceMetrics = useKafkaInstanceMetrics();\n  const topicsMetrics = useTopicsMetrics();\n  const metricsKpi = useMetricsKpi();\n\n  switch (true) {\n    case kafkaInstanceMetrics.isInitialLoading ||\n      topicsMetrics.isInitialLoading ||\n      metricsKpi.isInitialLoading:\n      return <EmptyStateInitialLoading />;\n    case kafkaInstanceMetrics.isFailed &&\n      topicsMetrics.isFailed &&\n      topicsMetrics.isFailed:\n    case kafkaInstanceMetrics.isJustCreated &&\n      topicsMetrics.isJustCreated &&\n      metricsKpi.isJustCreated:\n      return <EmptyStateMetricsUnavailable />;\n    default:\n      return (\n        <MetricsLayout\n          metricsLagAlert={\n            <MetricsLagAlert onClickClose={onClickClose} isClosed={isClosed} />\n          }\n          topicsKpi={\n            <CardKpi\n              metric={metricsKpi.topics}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              name={t(\"metrics:metric_kpi_topics_name\")}\n              popover={t(\"metrics:metric_kpi_topics_description\")}\n            />\n          }\n          topicPartitionsKpi={\n            <PartitionCard\n              metric={metricsKpi.topicPartitions}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              topicPartitionsLimit={metricsKpi.topicPartitionsLimit}\n            />\n          }\n          consumerGroupKpi={\n            <CardKpi\n              metric={metricsKpi.consumerGroups}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              name={t(\"metrics:metric_kpi_consumerGroup_name\")}\n              popover={t(\"metrics:metric_kpi_consumerGroup_description\")}\n            />\n          }\n          diskSpaceMetrics={<ConnectedKafkaInstanceMetrics />}\n          topicMetrics={\n            <ConnectedTopicsMetrics onCreateTopic={onCreateTopic} />\n          }\n        />\n      );\n  }\n};\n\nconst ConnectedKafkaInstanceMetrics: VoidFunctionComponent = () => {\n  const {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    duration,\n    lastUpdated,\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    onDurationChange,\n    onRefresh,\n  } = useKafkaInstanceMetrics();\n\n  return (\n    <CardKafkaInstanceMetrics\n      usedDiskMetrics={usedDiskSpaceMetrics}\n      clientConnectionsMetrics={clientConnectionsMetrics}\n      connectionAttemptRateMetrics={connectionAttemptRateMetrics}\n      duration={duration}\n      backendUnavailable={isFailed}\n      isInitialLoading={isInitialLoading}\n      isLoading={isLoading}\n      isRefreshing={isRefreshing}\n      isJustCreated={isJustCreated}\n      lastUpdated={lastUpdated}\n      onRefresh={onRefresh}\n      onDurationChange={onDurationChange}\n      diskSpaceLimit={diskSpaceLimit || 0}\n      connectionsLimit={connectionsLimit || 0}\n      connectionRateLimit={connectionRateLimit || 0}\n    />\n  );\n};\n\ntype ConnectedTopicsMetricsProps = {\n  onCreateTopic: () => void;\n};\nconst ConnectedTopicsMetrics: VoidFunctionComponent<\n  ConnectedTopicsMetricsProps\n> = ({ onCreateTopic }) => {\n  const {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    selectedTopic,\n    duration,\n    topics,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    onDurationChange,\n    onTopicChange,\n    onRefresh,\n  } = useTopicsMetrics();\n\n  return (\n    <CardTopicsMetrics\n      backendUnavailable={isFailed}\n      topics={topics}\n      incomingTopicsData={bytesIncoming}\n      outgoingTopicsData={bytesOutgoing}\n      partitions={bytesPerPartition}\n      incomingMessageRate={incomingMessageRate}\n      duration={duration}\n      isInitialLoading={isInitialLoading}\n      isLoading={isLoading}\n      isRefreshing={isRefreshing}\n      isJustCreated={isJustCreated}\n      lastUpdated={lastUpdated}\n      selectedTopic={selectedTopic}\n      onRefresh={onRefresh}\n      onSelectedTopic={onTopicChange}\n      onDurationChange={onDurationChange}\n      onCreateTopic={onCreateTopic}\n    />\n  );\n};\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { MetricsKpiMachineType } from \"./machines\";\nimport { MetricsKpiMachine } from \"./machines\";\nimport type { GetMetricsKpiResponse } from \"./types\";\n\nexport const MetricsKpiContext = createContext<{\n  service: ActorRefFrom<MetricsKpiMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type MetricsKpiProviderProps = {\n  getMetricsKpi: () => Promise<GetMetricsKpiResponse>;\n};\nexport const MetricsKpiProvider: FunctionComponent<MetricsKpiProviderProps> = ({\n  children,\n  getMetricsKpi,\n}) => {\n  const service = useInterpret(\n    () =>\n      MetricsKpiMachine.withConfig({\n        services: {\n          api: () => {\n            return (callback) => {\n              getMetricsKpi()\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <MetricsKpiContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </MetricsKpiContext.Provider>\n  );\n};\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { timeIntervalsMapping } from \"./consts\";\nimport type { TopicsMetricsMachineType } from \"./machines\";\nimport { TopicsMetricsMachine } from \"./machines\";\nimport type { DurationOptions, GetTopicsMetricsResponse } from \"./types\";\n\nexport const TopicsMetricsContext = createContext<{\n  service: ActorRefFrom<TopicsMetricsMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type TopicsMetricsProviderProps = {\n  getTopicsMetrics: (options: {\n    duration: DurationOptions;\n    interval: number;\n    selectedTopic: string | undefined;\n  }) => Promise<GetTopicsMetricsResponse>;\n};\nexport const TopicsMetricsProvider: FunctionComponent<\n  TopicsMetricsProviderProps\n> = ({ children, getTopicsMetrics }) => {\n  const service = useInterpret(\n    () =>\n      TopicsMetricsMachine.withConfig({\n        services: {\n          api: (context) => {\n            return (callback) => {\n              getTopicsMetrics({\n                selectedTopic: context.selectedTopic,\n                duration: context.duration,\n                interval: timeIntervalsMapping[context.duration].interval,\n              })\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <TopicsMetricsContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </TopicsMetricsContext.Provider>\n  );\n};\n","import { CardBody, Bullseye, Spinner } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\n\nexport const CardBodyLoading: FunctionComponent = () => (\n  <CardBody>\n    <Bullseye>\n      <Spinner isSVG data-chromatic=\"ignore\" />\n    </Bullseye>\n  </CardBody>\n);\n","import { Card, CardBody, CardTitle, Divider } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { DurationOptions, TimeSeriesMetrics } from \"../types\";\nimport { CardBodyLoading } from \"./CardBodyLoading\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { ChartLinearWithOptionalLimit } from \"./ChartLinearWithOptionalLimit\";\nimport { EmptyStateMetricsUnavailable } from \"./EmptyStateMetricsUnavailable\";\nimport { ToolbarKafkaInstanceMetric } from \"./ToolbarKafkaInstanceMetric\";\nimport { formatBytes } from \"./utils\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\n\nexport type CardKafkaInstanceMetricsLimits = {\n  diskSpaceLimit: number;\n  connectionsLimit: number;\n  connectionRateLimit: number;\n};\n\nexport type CardKafkaInstanceMetricsProps = {\n  usedDiskMetrics: TimeSeriesMetrics;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n  duration: DurationOptions;\n  lastUpdated: Date | undefined;\n  backendUnavailable: boolean;\n  isInitialLoading: boolean;\n  isLoading: boolean;\n  isJustCreated: boolean;\n  onDurationChange: (duration: DurationOptions) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\"> &\n  CardKafkaInstanceMetricsLimits;\n\ntype ChartTitleProps = {\n  title: string;\n  helperText: string;\n};\n\nexport const CardKafkaInstanceMetrics: FunctionComponent<\n  CardKafkaInstanceMetricsProps\n> = ({\n  usedDiskMetrics,\n  clientConnectionsMetrics,\n  connectionAttemptRateMetrics,\n  duration,\n  lastUpdated,\n  backendUnavailable,\n  isInitialLoading,\n  isLoading,\n  isRefreshing,\n  isJustCreated,\n  diskSpaceLimit,\n  connectionsLimit,\n  connectionRateLimit,\n  onRefresh,\n  onDurationChange,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  return (\n    <Card data-testid={\"metrics-kafka-instance\"}>\n      <ToolbarKafkaInstanceMetric\n        title={t(\"kafka_instance_metrics\")}\n        duration={duration}\n        lastUpdated={lastUpdated}\n        onSetTimeDuration={onDurationChange}\n        isDisabled={backendUnavailable || isJustCreated || isLoading}\n        isRefreshing={isRefreshing}\n        onRefresh={onRefresh}\n      />\n      {(() => {\n        switch (true) {\n          case isInitialLoading:\n            return <CardBodyLoading />;\n\n          case backendUnavailable:\n            return (\n              <CardBody>\n                <EmptyStateNoMetricsData />\n              </CardBody>\n            );\n\n          case isJustCreated:\n            return (\n              <CardBody>\n                <EmptyStateMetricsUnavailable />\n              </CardBody>\n            );\n\n          default:\n            return (\n              <>\n                <ChartTitle\n                  title={t(\"used_disk_space\")}\n                  helperText={t(\"used_disk_space_help_text\")}\n                />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"used_disk_space\")}\n                    yLabel={t(\"axis-label-bytes\")}\n                    metrics={usedDiskMetrics}\n                    duration={duration}\n                    formatValue={formatBytes}\n                    usageLimit={diskSpaceLimit}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                  />\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"client_connections\")}\n                  helperText={t(\"client_connections_helper_text\")}\n                />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"client_connections\")}\n                    yLabel={t(\"client_connections_y_axis\")}\n                    metrics={clientConnectionsMetrics}\n                    duration={duration}\n                    usageLimit={connectionsLimit}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                  />\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"connection_attempt_rate\")}\n                  helperText={t(\"connection_attempt_rate_help_text\")}\n                />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"connection_attempt_rate\")}\n                    yLabel={t(\"connection_attempt_rate_yaxis\")}\n                    metrics={connectionAttemptRateMetrics}\n                    duration={duration}\n                    usageLimit={connectionRateLimit}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                  />\n                </CardBody>\n              </>\n            );\n        }\n      })()}\n    </Card>\n  );\n};\n\nexport const ChartTitle: FunctionComponent<ChartTitleProps> = ({\n  title,\n  helperText,\n}) => {\n  return (\n    <CardTitle component=\"h3\">\n      {title} <ChartPopover title={title} description={helperText} />\n    </CardTitle>\n  );\n};\n","import {\n  Bullseye,\n  Card,\n  CardBody,\n  CardTitle,\n  Skeleton,\n  Title,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\n\ntype CardKpiProps = {\n  metric: string | number | undefined;\n  name: string;\n  popover: string;\n  isLoading: boolean;\n};\n\nexport const CardKpi: VoidFunctionComponent<CardKpiProps> = ({\n  metric,\n  name,\n  popover,\n  isLoading,\n}) => {\n  return (\n    <Card isFullHeight data-testid={name}>\n      <CardTitle component=\"h3\">\n        {name} <ChartPopover title={name} description={popover} />\n      </CardTitle>\n      <CardBody>\n        {!isLoading &&\n          (metric === undefined ? (\n            <Bullseye>\n              <EmptyStateNoMetricsData />\n            </Bullseye>\n          ) : (\n            <Title\n              headingLevel=\"h3\"\n              size=\"4xl\"\n              aria-valuetext={`${metric} ${name}`}\n            >\n              {metric}\n            </Title>\n          ))}\n        {isLoading && <Skeleton width=\"50px\" shape=\"square\" />}\n      </CardBody>\n    </Card>\n  );\n};\n","import { Card, CardBody, CardTitle, Divider } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type {\n  DurationOptions,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { CardBodyLoading } from \"./CardBodyLoading\";\nimport { ChartLinearWithOptionalLimit } from \"./ChartLinearWithOptionalLimit\";\nimport { ChartLogSizePerPartition } from \"./ChartLogSizePerPartition\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { ChartTotalBytes } from \"./ChartTotalBytes\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\nimport { EmptyStateNoMetricsDataForSelection } from \"./EmptyStateNoMetricsDataForSelection\";\nimport { EmptyStateNoTopics } from \"./EmptyStateNoTopics\";\nimport { EmptyStateNoTopicSelected } from \"./EmptyStateNoTopicSelected\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarTopicsMetrics } from \"./ToolbarTopicsMetrics\";\n\ntype CardTopicsMetricsProps = {\n  topics: string[];\n  incomingTopicsData: TimeSeriesMetrics;\n  outgoingTopicsData: TimeSeriesMetrics;\n  partitions: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n  duration: DurationOptions;\n  backendUnavailable: boolean;\n  isInitialLoading: boolean;\n  isLoading: boolean;\n  isJustCreated: boolean;\n  selectedTopic: string | undefined;\n  onCreateTopic: () => void;\n  onSelectedTopic: (topic: string | undefined) => void;\n  onDurationChange: (duration: DurationOptions) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\n\nexport const CardTopicsMetrics: FunctionComponent<CardTopicsMetricsProps> = ({\n  topics,\n  incomingTopicsData,\n  outgoingTopicsData,\n  incomingMessageRate,\n  selectedTopic,\n  duration,\n  partitions,\n  backendUnavailable,\n  isInitialLoading,\n  isLoading,\n  isRefreshing,\n  isJustCreated,\n  lastUpdated,\n  onCreateTopic,\n  onRefresh,\n  onSelectedTopic,\n  onDurationChange,\n}) => {\n  const { t } = useTranslation();\n  const noTopics = topics.length === 0;\n  const selectedTopicNotInList =\n    selectedTopic !== undefined &&\n    topics.find((t) => t === selectedTopic) === undefined;\n  const chartEmptyState = selectedTopicNotInList ? (\n    <EmptyStateNoMetricsDataForSelection />\n  ) : (\n    <EmptyStateNoMetricsData />\n  );\n  return (\n    <Card data-testid={\"metrics-topics\"}>\n      <ToolbarTopicsMetrics\n        title={t(\"metrics:topic_metrics\")}\n        duration={duration}\n        onSetTimeDuration={onDurationChange}\n        isDisabled={\n          backendUnavailable || isJustCreated || noTopics || isLoading\n        }\n        isRefreshing={isRefreshing}\n        selectedTopic={selectedTopic}\n        onSetSelectedTopic={onSelectedTopic}\n        onRefresh={onRefresh}\n        topicList={topics}\n        lastUpdated={lastUpdated}\n      />\n      {(() => {\n        switch (true) {\n          case isInitialLoading:\n            return <CardBodyLoading />;\n\n          case backendUnavailable:\n            return (\n              <CardBody>\n                <EmptyStateNoMetricsData />\n              </CardBody>\n            );\n\n          case isJustCreated && !noTopics:\n            return (\n              <CardBody>\n                <EmptyStateNoTopics />\n              </CardBody>\n            );\n\n          case isJustCreated && noTopics:\n            return (\n              <CardBody>\n                <EmptyStateNoTopics onCreateTopic={onCreateTopic} />\n              </CardBody>\n            );\n\n          case selectedTopic !== undefined:\n            return (\n              <>\n                <TotalBytesTitle />\n                <CardBody>\n                  <ChartTotalBytes\n                    incomingTopicsData={incomingTopicsData}\n                    outgoingTopicsData={outgoingTopicsData}\n                    selectedTopic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <IncomingMessageRate />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"metrics:topic_incoming_message_rate\")}\n                    yLabel={t(\"metrics:topic_incoming_message_rate_y_axis\")}\n                    metrics={incomingMessageRate}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <PartitionSizeTitle />\n                <CardBody>\n                  <ChartLogSizePerPartition\n                    partitions={partitions}\n                    topic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n              </>\n            );\n\n          default:\n            return (\n              <>\n                <TotalBytesTitle />\n                <CardBody>\n                  <ChartTotalBytes\n                    incomingTopicsData={incomingTopicsData}\n                    outgoingTopicsData={outgoingTopicsData}\n                    selectedTopic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <IncomingMessageRate />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"metrics:topic_incoming_message_rate\")}\n                    yLabel={t(\"metrics:topic_incoming_message_rate_y_axis\")}\n                    metrics={incomingMessageRate}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <PartitionSizeTitle />\n                <CardBody>\n                  <EmptyStateNoTopicSelected />\n                </CardBody>\n              </>\n            );\n        }\n      })()}\n    </Card>\n  );\n};\n\nconst TotalBytesTitle: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:total_bytes\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:total_bytes_popover_header\")}\n        description={t(\"metrics:topic_metrics_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n\nconst PartitionSizeTitle: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:topic_partition_size\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:topic_partition_size_popover_header\")}\n        description={t(\"metrics:topic_partition_size_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n\nconst IncomingMessageRate: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:topic_incoming_message_rate\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:topic_incoming_message_rate_popover_header\")}\n        description={t(\"metrics:topic_incoming_message_rate_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartArea,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartThreshold,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_black_500,\n  chart_color_blue_300,\n} from \"@patternfly/react-tokens\";\nimport type { ReactElement, VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { DurationOptions, TimeSeriesMetrics } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport { dateToChartValue, shouldShowDate, timestampsToTicks } from \"./utils\";\n\ntype ChartData = {\n  areaColor: string;\n  softLimitColor: string;\n  area: BrokerChartData[];\n  softLimit: BrokerChartData[];\n};\n\ntype BrokerChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol?: {\n    fill?: string;\n    type?: string;\n  };\n};\n\ntype ChartLinearWithOptionalLimitProps = {\n  metrics: TimeSeriesMetrics;\n  duration: DurationOptions;\n  chartName: string;\n  xLabel?: string;\n  yLabel?: string;\n  usageLimit?: number;\n  formatValue?: (d: number) => string;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\n\nexport const ChartLinearWithOptionalLimit: VoidFunctionComponent<\n  ChartLinearWithOptionalLimitProps\n> = ({\n  metrics,\n  duration,\n  chartName,\n  xLabel,\n  yLabel,\n  usageLimit,\n  formatValue = (d) => `${d}`,\n  isLoading,\n  emptyState,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getChartData(\n    metrics,\n    duration,\n    chartName,\n    t(\"metrics:limit\"),\n    usageLimit\n  );\n\n  const hasMetrics = Object.keys(metrics).length > 0;\n  const showDate = shouldShowDate(duration);\n\n  switch (true) {\n    case isLoading:\n      return <ChartSkeletonLoader />;\n    case !hasMetrics:\n      return emptyState;\n    default: {\n      const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n        `${datum.name}: ${formatValue(datum.y)}`;\n      return (\n        <div ref={containerRef}>\n          <Chart\n            ariaTitle={chartName}\n            containerComponent={\n              <ChartVoronoiContainer labels={labels} constrainToVisibleArea />\n            }\n            legendPosition=\"bottom-left\"\n            legendComponent={\n              <ChartLegend\n                orientation={\"horizontal\"}\n                data={legendData}\n                itemsPerRow={itemsPerRow}\n              />\n            }\n            height={chartHeight}\n            padding={chartPadding}\n            themeColor={ChartThemeColor.multiUnordered}\n            width={width}\n            legendAllowWrap={true}\n          >\n            <ChartAxis\n              label={\"\\n\" + (xLabel || t(\"metrics:axis-label-time\") || \"\")}\n              tickValues={tickValues}\n              tickFormat={(d: number) =>\n                dateToChartValue(d, {\n                  showDate,\n                })\n              }\n            />\n            <ChartAxis\n              label={\"\\n\\n\\n\\n\\n\" + (yLabel || chartName)}\n              dependentAxis\n              tickFormat={formatValue}\n            />\n            <ChartGroup>\n              {chartData.map((value, index) => (\n                <ChartArea\n                  key={`chart-area-${index}`}\n                  data={value.area}\n                  style={{\n                    data: {\n                      // TODO: check if this is needed\n                      // stroke: value.color,\n                    },\n                  }}\n                />\n              ))}\n            </ChartGroup>\n            <ChartThreshold\n              key={`chart-softlimit`}\n              data={chartData[0].softLimit}\n              style={{\n                data: {\n                  stroke: chartData[0].softLimitColor,\n                },\n              }}\n            />\n          </Chart>\n        </div>\n      );\n    }\n  }\n};\n\nfunction getChartData(\n  metrics: TimeSeriesMetrics,\n  duration: number,\n  lineLabel: string,\n  limitLabel: string,\n  usageLimit?: number\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData = [\n    usageLimit\n      ? {\n          name: limitLabel,\n          symbol: { fill: chart_color_black_500.value, type: \"threshold\" },\n        }\n      : undefined,\n    { name: lineLabel, symbol: { fill: chart_color_blue_300.value } },\n  ].filter((d) => !!d) as Array<LegendData>;\n\n  const areaColor = chart_color_blue_300.value;\n  const softLimitColor = chart_color_black_500.value;\n  const chartData: Array<ChartData> = [];\n  const area: Array<BrokerChartData> = [];\n  const softLimit: Array<BrokerChartData> = [];\n\n  Object.entries(metrics).map(([timestamp, bytes]) => {\n    area.push({ name: lineLabel, x: parseInt(timestamp, 10), y: bytes });\n  });\n  chartData.push({ areaColor, softLimitColor, area, softLimit });\n\n  const tickValues = timestampsToTicks(Object.keys(metrics), duration);\n\n  if (usageLimit) {\n    tickValues.forEach((timestamp) =>\n      softLimit.push({\n        name: limitLabel,\n        x: timestamp,\n        y: usageLimit,\n      })\n    );\n  }\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartArea,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_cyan_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { PartitionBytesMetric } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\nconst colors = [chart_color_cyan_300.value, chart_color_blue_300.value];\n\ntype ChartData = {\n  color: string;\n  area: PartitionChartData[];\n};\n\ntype PartitionChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n};\n\nexport type ChartLogSizePerPartitionProps = {\n  partitions: PartitionBytesMetric;\n  topic: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\nexport const ChartLogSizePerPartition: FunctionComponent<\n  ChartLogSizePerPartitionProps\n> = ({ partitions, topic, duration, isLoading, emptyState }) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getChartData(\n    partitions,\n    topic,\n    duration\n  );\n\n  const hasMetrics = Object.keys(partitions).length > 0;\n\n  const showDate = shouldShowDate(duration);\n\n  return (\n    <div ref={containerRef}>\n      {(() => {\n        switch (true) {\n          case isLoading:\n            return <ChartSkeletonLoader />;\n          case !hasMetrics:\n            return emptyState;\n          default: {\n            const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n              `${datum.name}: ${formatBytes(datum.y)}`;\n\n            return (\n              <Chart\n                ariaTitle={t(\"metrics:log_size_per_partition\")}\n                containerComponent={\n                  <ChartVoronoiContainer\n                    labels={labels}\n                    constrainToVisibleArea\n                  />\n                }\n                legendPosition=\"bottom-left\"\n                legendComponent={\n                  <ChartLegend data={legendData} itemsPerRow={itemsPerRow} />\n                }\n                height={chartHeight}\n                padding={chartPadding}\n                themeColor={ChartThemeColor.multiOrdered}\n                width={width}\n                legendAllowWrap={true}\n              >\n                <ChartAxis\n                  label={\"\\n\" + t(\"metrics:axis-label-time\")}\n                  tickValues={tickValues}\n                  tickFormat={(d: number) =>\n                    dateToChartValue(d, {\n                      showDate,\n                    })\n                  }\n                />\n                <ChartAxis\n                  label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n                  dependentAxis\n                  tickFormat={formatBytes}\n                />\n                <ChartGroup>\n                  {chartData.map((value, index) => (\n                    <ChartArea key={`chart-area-${index}`} data={value.area} />\n                  ))}\n                </ChartGroup>\n              </Chart>\n            );\n          }\n        }\n      })()}\n    </div>\n  );\n};\n\nexport function getChartData(\n  partitions: PartitionBytesMetric,\n  topic: string | undefined,\n  duration: number\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n  Object.entries(partitions).map(([partition, dataMap], index) => {\n    const name = topic ? `${topic}: ${partition}` : partition;\n    const color = colors[index];\n    legendData.push({\n      name,\n    });\n    const area: Array<PartitionChartData> = [];\n\n    Object.entries(dataMap).map(([timestamp, value]) => {\n      area.push({ name, x: parseInt(timestamp, 10), y: value });\n    });\n    chartData.push({ color, area });\n  });\n\n  const allTimestamps = Array.from(\n    new Set(Object.values(partitions).flatMap((m) => Object.keys(m)))\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\ntype ChartPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ChartPopover: VoidFunctionComponent<ChartPopoverProps> = ({\n  title,\n  description,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Popover\n      aria-label={title}\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon\n        aria-label={t(\"metrics:chart-popover-icon-screenreader-text\", {\n          title,\n        })}\n      />\n    </Popover>\n  );\n};\n","import { Flex, FlexItem, Skeleton } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ChartSkeletonLoader: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <Flex direction={{ default: \"column\" }} data-chromatic=\"ignore\">\n      <FlexItem>\n        <Skeleton\n          height={`${chartHeight - chartPadding.bottom}px`}\n          screenreaderText={t(\"common:skeleton_loader_screenreader_text\")}\n        />\n      </FlexItem>\n      <FlexItem>\n        <Skeleton height={`${chartPadding.bottom / 2 - 12.5}px`} width=\"20%\" />\n      </FlexItem>\n      <FlexItem>\n        <Skeleton height={`${chartPadding.bottom / 2 - 12.5}px`} width=\"40%\" />\n      </FlexItem>\n    </Flex>\n  );\n};\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartLine,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_green_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding, timeIntervalsMapping } from \"../consts\";\nimport type { TimeSeriesMetrics } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\ntype ChartData = {\n  color: string;\n  line: TopicChartData[];\n};\n\ntype TopicChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol: {\n    fill: string;\n    type?: string;\n  };\n};\n\ntype ChartTotalBytesProps = {\n  incomingTopicsData: TimeSeriesMetrics;\n  outgoingTopicsData: TimeSeriesMetrics;\n  selectedTopic: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\nexport const ChartTotalBytes: FunctionComponent<ChartTotalBytesProps> = ({\n  incomingTopicsData,\n  outgoingTopicsData,\n  selectedTopic,\n  duration,\n  isLoading,\n  emptyState,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getBytesChartData(\n    incomingTopicsData,\n    outgoingTopicsData,\n    duration,\n    selectedTopic\n      ? t(\"metrics:incoming_bytes\", {\n          topic: selectedTopic,\n        })\n      : t(\"metrics:incoming_bytes_all_topics\"),\n    selectedTopic\n      ? t(\"metrics:outgoing_bytes\", {\n          topic: selectedTopic,\n        })\n      : t(\"metrics:outgoing_bytes_all_topics\")\n  );\n\n  const hasMetrics =\n    Object.keys(incomingTopicsData).length > 0 ||\n    Object.keys(outgoingTopicsData).length > 0;\n\n  const showDate = shouldShowDate(duration);\n\n  switch (true) {\n    case isLoading:\n      return <ChartSkeletonLoader />;\n    case !hasMetrics:\n      return emptyState;\n    default: {\n      const labels: ChartVoronoiContainerProps[\"labels\"] =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n        ({ datum }) => `${datum.name}: ${formatBytes(datum.y)}`;\n      return (\n        <div ref={containerRef}>\n          <Chart\n            ariaTitle={t(\"metrics:total_bytes\")}\n            containerComponent={\n              <ChartVoronoiContainer labels={labels} constrainToVisibleArea />\n            }\n            legendAllowWrap={true}\n            legendPosition=\"bottom-left\"\n            legendComponent={\n              <ChartLegend data={legendData} itemsPerRow={itemsPerRow} />\n            }\n            height={chartHeight}\n            padding={chartPadding}\n            themeColor={ChartThemeColor.multiUnordered}\n            width={width}\n          >\n            <ChartAxis\n              label={\"\\n\" + t(\"metrics:axis-label-time\")}\n              tickValues={tickValues}\n              tickCount={timeIntervalsMapping[duration].ticks}\n              tickFormat={(d: number) =>\n                dateToChartValue(d, {\n                  showDate,\n                })\n              }\n            />\n            <ChartAxis\n              label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n              dependentAxis\n              tickFormat={formatBytes}\n            />\n            <ChartGroup>\n              {chartData.map((value, index) => (\n                <ChartLine\n                  key={`chart-line-${index}`}\n                  data={value.line}\n                  style={{\n                    data: {\n                      stroke: value.color,\n                    },\n                  }}\n                />\n              ))}\n            </ChartGroup>\n          </Chart>\n        </div>\n      );\n    }\n  }\n};\n\nexport function getBytesChartData(\n  incomingTopic: TimeSeriesMetrics,\n  outgoingTopic: TimeSeriesMetrics,\n  duration: number,\n  incomingTopicName: string,\n  outgoingTopicName: string\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n\n  const incomingLine = metricsToLine(incomingTopic, incomingTopicName);\n  if (incomingLine.length > 0) {\n    const color = chart_color_blue_300.value;\n    chartData.push({ color, line: incomingLine });\n    legendData.push({\n      name: incomingTopicName,\n      symbol: {\n        fill: color,\n      },\n    });\n  }\n\n  const outgoingLine = metricsToLine(outgoingTopic, outgoingTopicName);\n  if (outgoingLine.length > 0) {\n    const color = chart_color_green_300.value;\n    chartData.push({ color, line: outgoingLine });\n    legendData.push({\n      name: outgoingTopicName,\n      symbol: {\n        fill: color,\n      },\n    });\n  }\n  const allTimestamps = Array.from(\n    new Set([...Object.keys(incomingTopic), ...Object.keys(outgoingTopic)])\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n\nexport function metricsToLine(\n  metrics: TimeSeriesMetrics,\n  name: string\n): Array<TopicChartData> {\n  const line: Array<TopicChartData> = [];\n\n  Object.entries(metrics).map(([timestamp, bytes]) => {\n    line.push({ name, x: parseInt(timestamp, 10), y: bytes });\n  });\n  return line;\n}\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateInitialLoading: VoidFunctionComponent = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateBody data-chromatic=\"ignore\">\n        <AppServicesLoading />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { TachometerAltIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateMetricsUnavailable: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={TachometerAltIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_data_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"metrics:empty_state_no_data_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateNoMetricsData: FunctionComponent = () => {\n  const { t } = useTranslation([\"metrics\"]);\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon\n        icon={ExclamationTriangleIcon}\n        color=\"var(--pf-global--warning-color--100)\"\n      />\n      <Title headingLevel=\"h3\" size=\"md\">\n        {t(\"metric_not_available\")}\n      </Title>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateNoMetricsDataForSelection: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_metrics_data_title\")}\n      </Title>\n      <EmptyStateBody>\n        {t(\"metrics:empty_state_no_metrics_data_body\")}\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const EmptyStateNoTopicSelected: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={FilterIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_filter_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"metrics\"}\n          i18nKey={\"empty_state_no_filter_body\"}\n          components={{ bold: <strong /> }}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { WrenchIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\ntype EmptyStateNoTopicsProps = {\n  onCreateTopic?: () => void;\n};\nexport const EmptyStateNoTopics: FunctionComponent<EmptyStateNoTopicsProps> = ({\n  onCreateTopic,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={WrenchIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_topics_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"metrics:empty_state_no_topics_body\")}</EmptyStateBody>\n      {onCreateTopic && (\n        <Button\n          ouiaId=\"button-create\"\n          variant=\"primary\"\n          onClick={onCreateTopic}\n        >\n          {t(\"metrics:empty_state_no_topics_create_topic\")}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  ToolbarItem,\n  Select,\n  SelectVariant,\n  SelectGroup,\n  SelectOption,\n} from \"@patternfly/react-core\";\nimport { DurationOptions } from \"../types\";\n\nexport const DurationOptionsMap = {\n  [DurationOptions.Last5minutes]: \"Last 5 minutes\",\n  [DurationOptions.Last15minutes]: \"Last 15 minutes\",\n  [DurationOptions.Last30minutes]: \"Last 30 minutes\",\n  [DurationOptions.Last1hour]: \"Last 1 hour\",\n  [DurationOptions.Last3hours]: \"Last 3 hours\",\n  [DurationOptions.Last6hours]: \"Last 6 hours\",\n  [DurationOptions.Last12hours]: \"Last 12 hours\",\n  [DurationOptions.Last24hours]: \"Last 24 hours\",\n  [DurationOptions.Last2days]: \"Last 2 days\",\n  [DurationOptions.Last7days]: \"Last 7 days\",\n} as const;\n\ntype FilterByTimeProps = {\n  duration: DurationOptions;\n  onDurationChange: (value: DurationOptions) => void;\n  keyText: string;\n  ariaLabel: string;\n  disableToolbar: boolean;\n};\n\nexport const FilterByTime: VoidFunctionComponent<FilterByTimeProps> = ({\n  duration,\n  keyText,\n  ariaLabel,\n  disableToolbar,\n  onDurationChange,\n}) => {\n  const [isTimeSelectOpen, setIsTimeSelectOpen] = useState<boolean>(false);\n\n  const onTimeToggle = (isTimeSelectOpen: boolean) => {\n    setIsTimeSelectOpen(isTimeSelectOpen);\n  };\n\n  const onTimeSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    const mapping = Object.entries(DurationOptionsMap).find(\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ([_, value]) => value === selection\n    );\n    if (mapping) {\n      onDurationChange(parseInt(mapping[0], 10) as DurationOptions);\n    }\n    setIsTimeSelectOpen(false);\n  };\n\n  const timeOptions = (keyText: string) => [\n    <SelectGroup label=\"Relative time ranges\" key={`${keyText}-group`}>\n      {Object.values(DurationOptionsMap).map((label, idx) => (\n        <SelectOption key={`${keyText}-${idx}`} value={label} />\n      ))}\n    </SelectGroup>,\n  ];\n  const ariaId = `filter-by-time-${Date.now()}`;\n  return (\n    <ToolbarItem>\n      <label hidden id={ariaId}>\n        {ariaLabel}\n      </label>\n      <Select\n        variant={SelectVariant.single}\n        aria-labelledby={ariaId}\n        onToggle={onTimeToggle}\n        onSelect={onTimeSelect}\n        selections={DurationOptionsMap[duration]}\n        isOpen={isTimeSelectOpen}\n        isDisabled={disableToolbar}\n      >\n        {timeOptions(keyText)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport \"./FilterByTopic.css\";\n\nconst widths = {\n  default: \"150px\",\n  sm: \"150px\",\n  md: \"150px\",\n  lg: \"200px\",\n  xl: \"200px\",\n  \"2xl\": \"200px\",\n};\n\ntype FilterByTopicProps = {\n  selectedTopic: string | undefined;\n  topicList: string[];\n  disableToolbar: boolean;\n  ariaLabel: string;\n  onSetSelectedTopic: (value: string | undefined) => void;\n};\n\nexport const FilterByTopic: VoidFunctionComponent<FilterByTopicProps> = ({\n  selectedTopic,\n  topicList = [],\n  disableToolbar,\n  ariaLabel,\n  onSetSelectedTopic,\n}) => {\n  const { t } = useTranslation();\n  const [isTopicSelectOpen, setIsTopicSelectOpen] = useState<boolean>(false);\n  const [selectKey, setSelectKey] = useState(Math.random());\n\n  useEffect(() => setSelectKey(Math.random()), [topicList]);\n\n  const allTopicsLabel = t(\"metrics:all_topics\");\n\n  const onTopicToggle = (isTopicSelectOpen: boolean) => {\n    setIsTopicSelectOpen(isTopicSelectOpen);\n  };\n\n  const onTopicSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    selection !== allTopicsLabel\n      ? onSetSelectedTopic(selection as string)\n      : onSetSelectedTopic(undefined);\n    setIsTopicSelectOpen(false);\n  };\n\n  const onTopicFilter = (_: unknown, textInput: string) => {\n    const filteredTopics =\n      topicList.filter((topic) => topic.indexOf(textInput) != -1) || [];\n    return topicOptions(filteredTopics);\n  };\n\n  const topicOptions = (topicList: string[]) => [\n    <SelectOption key={\"topic-filter-0\"} value={allTopicsLabel} />,\n    <SelectGroup label=\"Filter by topic\" key=\"topic-filter-group\">\n      {topicList.map((topic, index) => (\n        <SelectOption\n          key={`topic-filter-${index + 1}`}\n          value={topic}\n          title={topic}\n        />\n      ))}\n    </SelectGroup>,\n  ];\n\n  const isDisabled = disableToolbar || topicList.length === 0;\n  const ariaId = `filter-by-topic-${Date.now()}`;\n\n  return (\n    <ToolbarItem widths={widths}>\n      <label hidden id={ariaId}>\n        {ariaLabel}\n      </label>\n      <Select\n        key={selectKey}\n        variant={SelectVariant.single}\n        onToggle={onTopicToggle}\n        onSelect={onTopicSelect}\n        selections={selectedTopic || allTopicsLabel}\n        isOpen={isTopicSelectOpen}\n        placeholderText={\n          <>\n            <FilterIcon /> {allTopicsLabel}\n          </>\n        }\n        aria-labelledby={ariaId}\n        onFilter={onTopicFilter}\n        isGrouped\n        hasInlineFilter\n        isDisabled={isDisabled}\n        position=\"left\"\n        className={\"appserv-metrics-filterbytopic\"}\n      >\n        {topicOptions(topicList)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Alert, AlertActionCloseButton } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type MetricsLagAlertProps = {\n  isClosed: boolean;\n  onClickClose: () => void;\n};\n\nexport const MetricsLagAlert: VoidFunctionComponent<MetricsLagAlertProps> = ({\n  isClosed,\n  onClickClose,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  if (!isClosed) {\n    return (\n      <Alert\n        isInline\n        variant=\"info\"\n        title={t(\"metrics_lag_title\")}\n        actionClose={<AlertActionCloseButton onClose={onClickClose} />}\n      >\n        <p>{t(\"metrics_lag_description\")}</p>\n      </Alert>\n    );\n  } else {\n    return <> </>;\n  }\n};\n","import { Grid, GridItem, PageSection } from \"@patternfly/react-core\";\nimport type { FunctionComponent, ReactElement } from \"react\";\n\ntype MetricsLayoutProps = {\n  metricsLagAlert: ReactElement;\n  topicsKpi: ReactElement;\n  topicPartitionsKpi: ReactElement;\n  consumerGroupKpi: ReactElement;\n  diskSpaceMetrics: ReactElement;\n  topicMetrics: ReactElement;\n};\nexport const MetricsLayout: FunctionComponent<MetricsLayoutProps> = ({\n  metricsLagAlert,\n  topicsKpi,\n  topicPartitionsKpi,\n  consumerGroupKpi,\n  diskSpaceMetrics,\n  topicMetrics,\n}) => {\n  return (\n    <PageSection hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <Grid hasGutter>\n        <GridItem>{metricsLagAlert}</GridItem>\n        <GridItem sm={4}>{topicsKpi}</GridItem>\n        <GridItem sm={4}>{topicPartitionsKpi}</GridItem>\n        <GridItem sm={4}>{consumerGroupKpi}</GridItem>\n        <GridItem lg={6}>{diskSpaceMetrics}</GridItem>\n        <GridItem lg={6}>{topicMetrics}</GridItem>\n      </Grid>\n    </PageSection>\n  );\n};\n","import {\n  Alert,\n  AlertVariant,\n  Bullseye,\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Skeleton,\n  Text,\n  TextContent,\n  Title,\n} from \"@patternfly/react-core\";\nimport {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\n\ntype PartitionCardProps = {\n  metric: number | undefined;\n  isLoading: boolean;\n  topicPartitionsLimit: number | undefined;\n};\n\nexport const PartitionCard: VoidFunctionComponent<PartitionCardProps> = ({\n  metric,\n  isLoading,\n  topicPartitionsLimit = 0,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Card\n      isFullHeight\n      data-testid={t(\"metrics:metric_kpi_topicPartitions_name\")}\n    >\n      <CardTitle component=\"h3\">\n        {t(\"metrics:metric_kpi_topicPartitions_name\")}{\" \"}\n        <ChartPopover\n          title={t(\"metrics:metric_kpi_topicPartitions_name\")}\n          description={t(\"metrics:metric_kpi_topicPartitions_description\")}\n        />\n      </CardTitle>\n      <CardBody>\n        {!isLoading &&\n          (metric === undefined ? (\n            <Bullseye>\n              <EmptyStateNoMetricsData />\n            </Bullseye>\n          ) : (\n            <>\n              <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                aria-valuetext={`${metric} ${t(\n                  \"metrics:metric_kpi_topicPartitions_name\"\n                )}`}\n              >\n                {metric}{\" \"}\n                {(() => {\n                  if (metric >= topicPartitionsLimit) {\n                    return (\n                      <ExclamationCircleIcon color=\"var(--pf-global--danger-color--100)\" />\n                    );\n                  } else if (metric >= topicPartitionsLimit * 0.95) {\n                    return (\n                      <ExclamationTriangleIcon color=\"var(--pf-global--warning-color--100)\" />\n                    );\n                  } else {\n                    return \"\";\n                  }\n                })()}\n              </Title>\n              <TextContent>\n                <Text>\n                  {t(\"metrics:partition_limit\", {\n                    topic: topicPartitionsLimit,\n                  })}\n                </Text>\n              </TextContent>\n            </>\n          ))}\n        {isLoading && <Skeleton width=\"50px\" shape=\"square\" />}\n      </CardBody>\n      {(() => {\n        if (metric && metric >= topicPartitionsLimit) {\n          return (\n            <CardFooter>\n              <Alert\n                isExpandable\n                isInline\n                variant={AlertVariant.danger}\n                title={t(\"metrics:partition_limit_reached_title\")}\n              >\n                <p>{t(\"metrics:partition_limit_reached_description_1\")}</p>\n                <p>{t(\"metrics:partition_limit_reached_description_2\")}</p>\n              </Alert>\n            </CardFooter>\n          );\n        } else if (metric && metric >= topicPartitionsLimit * 0.95) {\n          return (\n            <CardFooter>\n              <Alert\n                role={\"alert\"}\n                isExpandable\n                isInline\n                variant={AlertVariant.warning}\n                title={t(\"metrics:partition_limit_approaching_title\")}\n              >\n                <p>\n                  {t(\"metrics:partition_limit_approaching_description_1\", {\n                    limit: topicPartitionsLimit,\n                  })}\n                </p>\n                <p>{t(\"metrics:partition_limit_approaching_description_2\")}</p>\n              </Alert>\n            </CardFooter>\n          );\n        } else {\n          return \" \";\n        }\n      })()}\n    </Card>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport {\n  CardHeader,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport { FilterByTime } from \"./FilterByTime\";\nimport type { DurationOptions } from \"../types\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarRefresh } from \"./ToolbarRefresh\";\n\ntype ToolbarKafkaInstanceMetricProps = {\n  title: string;\n  isDisabled: boolean;\n  duration: DurationOptions;\n  onSetTimeDuration: (value: DurationOptions) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\nexport const ToolbarKafkaInstanceMetric: FunctionComponent<\n  ToolbarKafkaInstanceMetricProps\n> = ({\n  title,\n  isDisabled,\n  isRefreshing,\n  lastUpdated,\n  duration,\n  onSetTimeDuration,\n  onRefresh,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <CardHeader>\n        <CardTitle component=\"h2\">{title}</CardTitle>\n      </CardHeader>\n      <Divider />\n      <Toolbar>\n        <ToolbarContent>\n          <FilterByTime\n            ariaLabel={t(\"metrics:kafka_instance_filter_by_time\")}\n            duration={duration}\n            onDurationChange={onSetTimeDuration}\n            keyText={\"kafka-metrics-time-filter\"}\n            disableToolbar={isDisabled}\n          />\n          <ToolbarRefresh\n            isRefreshing={isRefreshing}\n            lastUpdated={lastUpdated}\n            onRefresh={onRefresh}\n            ariaLabel={t(\"metrics:kafka_instance_refresh\")}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <Divider />\n    </>\n  );\n};\n","import { ToolbarItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate, RefreshButton } from \"@rhoas/app-services-ui-components\";\n\nexport type ToolbarRefreshProps = {\n  isRefreshing: boolean;\n  lastUpdated: Date | undefined;\n  ariaLabel: string;\n  onRefresh: () => void;\n};\n\nexport const ToolbarRefresh: VoidFunctionComponent<ToolbarRefreshProps> = ({\n  isRefreshing,\n  lastUpdated = new Date(),\n  ariaLabel,\n  onRefresh,\n}) => {\n  const { t } = useTranslation([\"metrics\"]);\n\n  return (\n    <>\n      <ToolbarItem>\n        <RefreshButton\n          ariaLabel={ariaLabel}\n          onClick={onRefresh}\n          isRefreshing={isRefreshing}\n        />\n      </ToolbarItem>\n      <ToolbarItem\n        alignment={{ default: \"alignRight\" }}\n        style={{ color: \"var(--pf-global--Color--200)\" }}\n      >\n        <div className=\"pf-u-font-size-xs\">\n          {isRefreshing ? (\n            t(\"metrics:refreshing\")\n          ) : (\n            <>\n              {t(\"metrics:last-refresh\")}\n              <br />\n              <FormatDate date={lastUpdated} format=\"distanceToNow\" />\n              {t(\"metrics:last-refresh-distance\")}\n            </>\n          )}\n        </div>\n      </ToolbarItem>\n    </>\n  );\n};\n","import {\n  CardHeader,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { DurationOptions } from \"../types\";\nimport { FilterByTime } from \"./FilterByTime\";\nimport { FilterByTopic } from \"./FilterByTopic\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarRefresh } from \"./ToolbarRefresh\";\n\ntype ToolbarTopicsMetricsProps = {\n  title: string;\n  selectedTopic: string | undefined;\n  topicList: string[];\n  duration: DurationOptions;\n  isDisabled: boolean;\n  onSetTimeDuration: (value: DurationOptions) => void;\n  onSetSelectedTopic: (value: string | undefined) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\nexport const ToolbarTopicsMetrics: FunctionComponent<\n  ToolbarTopicsMetricsProps\n> = ({\n  title,\n  selectedTopic,\n  topicList,\n  duration,\n  isDisabled,\n  isRefreshing,\n  lastUpdated,\n  onSetTimeDuration,\n  onRefresh,\n  onSetSelectedTopic,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <CardHeader>\n        <CardTitle component=\"h2\">{title}</CardTitle>\n      </CardHeader>\n      <Divider />\n      <Toolbar>\n        <ToolbarContent>\n          <FilterByTopic\n            ariaLabel={t(\"metrics:topics_filter_by_topic\")}\n            selectedTopic={selectedTopic}\n            onSetSelectedTopic={onSetSelectedTopic}\n            topicList={topicList}\n            disableToolbar={isDisabled}\n          />\n          <FilterByTime\n            ariaLabel={t(\"metrics:topics_filter_by_time\")}\n            duration={duration}\n            onDurationChange={onSetTimeDuration}\n            disableToolbar={isDisabled}\n            keyText={\"topic-metrics-time-filter\"}\n          />\n          <ToolbarRefresh\n            isRefreshing={isRefreshing}\n            lastUpdated={lastUpdated}\n            onRefresh={onRefresh}\n            ariaLabel={t(\"metrics:topics_refresh\")}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <Divider />\n    </>\n  );\n};\n","export * from \"./EmptyStateInitialLoading\";\nexport * from \"./EmptyStateMetricsUnavailable\";\nexport * from \"./MetricsLayout\";\nexport * from \"./CardTopicsMetrics\";\nexport * from \"./CardKafkaInstanceMetrics\";\n","import type { RefObject } from \"react\";\nimport { useEffect, useLayoutEffect, useRef, useState } from \"react\";\n\nexport function useChartWidth(): [RefObject<HTMLDivElement>, number] {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number>(0);\n\n  const handleResize = () =>\n    containerRef.current && setWidth(containerRef.current.clientWidth);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return [containerRef, width];\n}\n","import byteSize from \"byte-size\";\nimport { fromUnixTime, sub } from \"date-fns\";\nimport { formatInTimeZone } from \"date-fns-tz\";\nimport { timeIntervalsMapping } from \"../consts\";\nimport type { DurationOptions } from \"../types\";\n\nexport function formatBytes(bytes: number): string {\n  return byteSize(bytes, { units: \"iec\" }).toString();\n}\n\nexport const shouldShowDate = (timeDuration: DurationOptions): boolean => {\n  return timeIntervalsMapping[timeDuration].showDate;\n};\n\nexport const dateToChartValue = (\n  timestamp: number,\n  { showDate }: { showDate: boolean } = { showDate: false }\n): string => {\n  const date = fromUnixTime(timestamp / 1000);\n  return formatInTimeZone(date, \"utc\", showDate ? \"HH:mm'\\n'MMM dd\" : \"HH:mm\");\n};\n\nexport function timestampsToTicks(\n  timestamps: string[],\n  duration: DurationOptions\n): number[] {\n  const allTimestamps = [...timestamps];\n  allTimestamps.sort();\n  const mostRecentTs =\n    parseInt(allTimestamps[allTimestamps.length - 1]) || Date.now();\n  return new Array(\n    Math.max(timeIntervalsMapping[duration].ticks, allTimestamps.length)\n  )\n    .fill(mostRecentTs)\n    .map((d: number, index) =>\n      sub(new Date(d), {\n        seconds: timeIntervalsMapping[duration].interval * index,\n      }).getTime()\n    );\n}\n","import { DurationOptions } from \"./types\";\n\nexport const timeIntervalsMapping = {\n  [DurationOptions.Last5minutes]: {\n    interval: 1 * 60,\n    ticks: 6,\n    showDate: false,\n  },\n  [DurationOptions.Last15minutes]: {\n    interval: 3 * 60,\n    ticks: 6,\n    showDate: false,\n  },\n  [DurationOptions.Last30minutes]: {\n    interval: 5 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last1hour]: { interval: 10 * 60, ticks: 6, showDate: false },\n  [DurationOptions.Last3hours]: {\n    interval: 30 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last6hours]: {\n    interval: 1 * 60 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last12hours]: {\n    interval: 2 * 60 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last24hours]: {\n    interval: 4 * 60 * 60,\n    ticks: 7,\n    showDate: true,\n  },\n  [DurationOptions.Last2days]: {\n    interval: 8 * 60 * 60,\n    ticks: 7,\n    showDate: true,\n  },\n  [DurationOptions.Last7days]: {\n    interval: 24 * 60 * 60,\n    ticks: 8,\n    showDate: true,\n  },\n} as const;\n\nexport const chartHeight = 350;\nexport const chartPadding = {\n  bottom: 110, // Adjusted to accomodate legend\n  left: 120,\n  right: 40,\n  top: 10,\n};\n","export * from \"./Metrics\";\nexport * from \"./types\";\n","import { assign, createMachine } from \"xstate\";\nimport type {\n  GetKafkaInstanceMetricsResponse,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { DurationOptions } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#kafkaInstanceMetrics.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type KafkaInstanceMetricsMachineContext = {\n  lastUpdated: Date | undefined;\n\n  // from the UI elements\n  duration: DurationOptions;\n\n  // from the api\n  usedDiskSpaceMetrics: TimeSeriesMetrics;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n  diskSpaceLimit: number | undefined;\n  connectionsLimit: number | undefined;\n  connectionRateLimit: number | undefined;\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const KafkaInstanceMetricsMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./KafkaInstanceMetricsMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as KafkaInstanceMetricsMachineContext,\n      events: {} as\n        | ({ type: \"fetchSuccess\" } & GetKafkaInstanceMetricsResponse)\n        | { type: \"fetchFail\" }\n        // to refresh the data\n        | { type: \"refresh\" }\n        // from the UI elements\n        | { type: \"selectTopic\"; topic: string | undefined }\n        | { type: \"selectDuration\"; duration: DurationOptions },\n    },\n    id: \"kafkaInstanceMetrics\",\n    context: {\n      lastUpdated: undefined,\n      duration: DurationOptions.Last1hour,\n      usedDiskSpaceMetrics: {},\n      clientConnectionsMetrics: {},\n      connectionAttemptRateMetrics: {},\n      diskSpaceLimit: undefined,\n      connectionsLimit: undefined,\n      connectionRateLimit: undefined,\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#kafkaInstanceMetrics.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#kafkaInstanceMetrics.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        on: {\n          refresh: {\n            target: \"refreshing\",\n          },\n          selectDuration: {\n            actions: \"setDuration\",\n            target: \"callApi\",\n          },\n        },\n      },\n      refreshing: {\n        tags: \"refreshing\",\n        entry: \"setFetchTimestamp\",\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"withResponse\",\n          },\n          fetchFail: {\n            // 👀 we silently ignore this happened and go back to the right\n            // state depending on the previous data\n            target: \"withResponse\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setFetchTimestamp: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        lastUpdated: (_context) => new Date(),\n      }),\n      setMetrics: assign((_, event) => {\n        const {\n          usedDiskSpaceMetrics,\n          clientConnectionsMetrics,\n          connectionAttemptRateMetrics,\n          diskSpaceLimit,\n          connectionsLimit,\n          connectionRateLimit,\n        } = event;\n        return {\n          usedDiskSpaceMetrics,\n          clientConnectionsMetrics,\n          connectionAttemptRateMetrics,\n          diskSpaceLimit: diskSpaceLimit * 1024 ** 3, // convert it to GiB\n          connectionsLimit,\n          connectionRateLimit,\n        };\n      }),\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n      setDuration: assign((_context, event) => ({\n        duration: event.duration,\n        usedDiskSpaceMetrics: {},\n        clientConnectionsMetrics: {},\n        connectionAttemptRateMetrics: {},\n      })),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            Object.keys(event.clientConnectionsMetrics).length > 0 ||\n            Object.keys(event.connectionAttemptRateMetrics).length > 0 ||\n            Object.keys(event.usedDiskSpaceMetrics).length > 0\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type KafkaInstanceMetricsMachineType =\n  typeof KafkaInstanceMetricsMachine;\n","import { assign, createMachine } from \"xstate\";\nimport type { GetMetricsKpiResponse } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#kpis.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type MetricsKpiMachineContext = {\n  // from the api\n  topics: number | undefined;\n  topicPartitions: number | undefined;\n  consumerGroups: number | undefined;\n  topicPartitionsLimit: number | undefined;\n\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const MetricsKpiMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./MetricsKpiMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as MetricsKpiMachineContext,\n      events: {} as\n        | { type: \"fetch\" }\n        | ({ type: \"fetchSuccess\" } & GetMetricsKpiResponse)\n        | { type: \"fetchFail\" }\n        | { type: \"refresh\" },\n    },\n    id: \"kpis\",\n    context: {\n      topics: undefined,\n      topicPartitions: undefined,\n      consumerGroups: undefined,\n      topicPartitionsLimit: undefined,\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#kpis.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#kpis.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        initial: \"idle\",\n        states: {\n          idle: {},\n          refreshing: {\n            tags: \"refreshing\",\n            invoke: {\n              src: \"api\",\n            },\n            on: {\n              fetchSuccess: {\n                actions: \"setMetrics\",\n                target: \"#kpis.withResponse\",\n              },\n              fetchFail: {\n                // 👀 we silently ignore this happened\n                target: \"#kpis.withResponse\",\n              },\n            },\n          },\n        },\n        on: {\n          refresh: {\n            target: \"#kpis.withResponse.refreshing\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setMetrics: assign((_, event) => {\n        const {\n          topics,\n          topicPartitions,\n          consumerGroups,\n          topicPartitionsLimit,\n        } = event;\n        return {\n          topics,\n          topicPartitions,\n          consumerGroups,\n          topicPartitionsLimit,\n        };\n      }),\n\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            event.topics !== undefined ||\n            event.topicPartitions !== undefined ||\n            event.consumerGroups !== undefined ||\n            event.topicPartitionsLimit !== undefined\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type MetricsKpiMachineType = typeof MetricsKpiMachine;\n","import { assign, createMachine } from \"xstate\";\nimport type {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { DurationOptions } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#topicsMetrics.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type TopicsMetricsMachineContext = {\n  lastUpdated: Date | undefined;\n\n  // from the UI elements\n  selectedTopic: string | undefined;\n  duration: DurationOptions;\n\n  // from the api\n  kafkaTopics: string[];\n  metricsTopics: string[];\n  bytesOutgoing: TimeSeriesMetrics;\n  bytesIncoming: TimeSeriesMetrics;\n  bytesPerPartition: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const TopicsMetricsMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./TopicsMetricsMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as TopicsMetricsMachineContext,\n      events: {} as  // called when a new kafka id has been specified\n        | ({ type: \"fetchSuccess\" } & GetTopicsMetricsResponse)\n        | { type: \"fetchFail\" }\n\n        // to refresh the data\n        | { type: \"refresh\" }\n\n        // from the UI elements\n        | { type: \"selectTopic\"; topic: string | undefined }\n        | { type: \"selectDuration\"; duration: DurationOptions },\n    },\n    id: \"topicsMetrics\",\n    context: {\n      lastUpdated: undefined,\n\n      // from the UI elements\n      selectedTopic: undefined,\n      duration: DurationOptions.Last1hour,\n\n      // from the api\n      kafkaTopics: [],\n      metricsTopics: [],\n      bytesOutgoing: {},\n      bytesIncoming: {},\n      bytesPerPartition: {},\n      incomingMessageRate: {},\n\n      // how many time did we try a fetch (that combines more api)\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#topicsMetrics.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#topicsMetrics.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        initial: \"idle\",\n        states: {\n          idle: {},\n          refreshing: {\n            tags: \"refreshing\",\n            entry: \"setFetchTimestamp\",\n            invoke: {\n              src: \"api\",\n            },\n            on: {\n              fetchSuccess: {\n                actions: \"setMetrics\",\n                target: \"#topicsMetrics.withResponse\",\n              },\n              fetchFail: {\n                // 👀 we silently ignore this happened\n                target: \"#topicsMetrics.withResponse\",\n              },\n            },\n          },\n        },\n        on: {\n          refresh: {\n            target: \"#topicsMetrics.withResponse.refreshing\",\n          },\n          selectTopic: {\n            actions: \"setTopic\",\n            target: \"callApi\",\n          },\n          selectDuration: {\n            actions: \"setDuration\",\n            target: \"callApi\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setFetchTimestamp: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        lastUpdated: (_context) => new Date(),\n      }),\n      setMetrics: assign((_context, event) => {\n        const {\n          kafkaTopics,\n          metricsTopics,\n          bytesPerPartition,\n          bytesIncoming,\n          bytesOutgoing,\n          incomingMessageRate,\n        } = event;\n        return {\n          kafkaTopics,\n          metricsTopics,\n          bytesPerPartition,\n          bytesIncoming,\n          bytesOutgoing,\n          incomingMessageRate,\n        };\n      }),\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n      setTopic: assign({\n        selectedTopic: (_context, event) => event.topic,\n      }),\n      setDuration: assign({\n        duration: (_, event) => event.duration,\n      }),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            Object.keys(event.bytesIncoming).length > 0 ||\n            Object.keys(event.bytesOutgoing).length > 0 ||\n            Object.keys(event.bytesPerPartition).length > 0 ||\n            Object.keys(event.incomingMessageRate).length > 0\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type TopicsMetricsMachineType = typeof TopicsMetricsMachine;\n","export * from \"./KafkaInstanceMetricsMachine\";\nexport * from \"./TopicsMetricsMachine\";\nexport * from \"./MetricsKpiMachine\";\n","import type { CardKafkaInstanceMetricsLimits } from \"./components\";\n\nexport type TimeSeriesMetrics = { [timestamp: number]: number };\nexport type PartitionBytesMetric = { [partition: string]: TimeSeriesMetrics };\n\nexport enum DurationOptions {\n  Last5minutes = 5,\n  Last15minutes = 15,\n  Last30minutes = 30,\n  Last1hour = 60,\n  Last3hours = 3 * 60,\n  Last6hours = 6 * 60,\n  Last12hours = 12 * 60,\n  Last24hours = 24 * 60,\n  Last2days = 2 * 24 * 60,\n  Last7days = 7 * 24 * 60,\n}\n\nexport type GetTopicsMetricsResponse = {\n  kafkaTopics: string[];\n  metricsTopics: string[];\n  bytesOutgoing: TimeSeriesMetrics;\n  bytesIncoming: TimeSeriesMetrics;\n  bytesPerPartition: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n};\n\nexport type GetKafkaInstanceMetricsResponse = {\n  usedDiskSpaceMetrics: TimeSeriesMetrics;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n} & CardKafkaInstanceMetricsLimits;\n\nexport type GetMetricsKpiResponse = {\n  topics: number;\n  topicPartitions: number;\n  consumerGroups: number;\n  topicPartitionsLimit: number;\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport { KafkaInstanceMetricsContext } from \"./KafkaInstanceMetricsProvider\";\nimport type { KafkaInstanceMetricsMachineContext } from \"./machines\";\nimport type { DurationOptions } from \"./types\";\n\ntype SeletorReturn = KafkaInstanceMetricsMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useKafkaInstanceMetrics() {\n  const { service } = useContext(KafkaInstanceMetricsContext);\n\n  const {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    duration,\n    lastUpdated,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n  } = useSelector<typeof service, SeletorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onDurationChange = useCallback(\n    (duration: DurationOptions) =>\n      service.send({ type: \"selectDuration\", duration }),\n    [service]\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  return {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    lastUpdated,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    duration,\n    onDurationChange,\n    onRefresh,\n  };\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport type { MetricsKpiMachineContext } from \"./machines\";\nimport { MetricsKpiContext } from \"./MetricsKpiProvider\";\n\ntype SelectorReturn = MetricsKpiMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useMetricsKpi() {\n  const { service } = useContext(MetricsKpiContext);\n\n  const {\n    topics,\n    topicPartitions,\n    topicPartitionsLimit,\n    consumerGroups,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n  } = useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  return {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    topics,\n    topicPartitions,\n    consumerGroups,\n    topicPartitionsLimit,\n    onRefresh,\n  };\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport type { TopicsMetricsMachineContext } from \"./machines\";\nimport { TopicsMetricsContext } from \"./TopicsMetricsProvider\";\nimport type { DurationOptions } from \"./types\";\n\ntype SelectorReturn = TopicsMetricsMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useTopicsMetrics() {\n  const { service } = useContext(TopicsMetricsContext);\n\n  const {\n    selectedTopic,\n    duration,\n    kafkaTopics,\n    metricsTopics,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n  } = useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onTopicChange = useCallback(\n    (topic: string | undefined) => service.send({ type: \"selectTopic\", topic }),\n    [service]\n  );\n\n  const onDurationChange = useCallback(\n    (duration: DurationOptions) =>\n      service.send({ type: \"selectDuration\", duration }),\n    [service]\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  const mergedTopics = useMemo((): string[] => {\n    const topics = Array.from(\n      new Set<string>([...kafkaTopics, ...metricsTopics])\n    );\n    topics.sort((a, b) => a.localeCompare(b));\n    return topics;\n  }, [kafkaTopics, metricsTopics]);\n\n  return {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    topics: mergedTopics,\n    selectedTopic,\n    duration,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    onTopicChange,\n    onDurationChange,\n    onRefresh,\n  };\n}\n","import type { FunctionComponent, MouseEvent, ChangeEvent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { SelectOptionObject } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SearchCategory } from \"../types\";\n\nexport type FilterSelectProps = {\n  value: SearchCategory;\n  onChange: (value: SearchCategory) => void;\n};\n\nexport const FilterSelect: FunctionComponent<FilterSelectProps> = ({\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation();\n  const [isFilterExpanded, setIsFilterExpanded] = useState(false);\n\n  const onToggle = () => {\n    setIsFilterExpanded(!isFilterExpanded);\n  };\n\n  const onSelect = (\n    _event: MouseEvent | ChangeEvent,\n    selection: string | SelectOptionObject\n  ) => {\n    setIsFilterExpanded(!isFilterExpanded);\n    onChange(selection as SearchCategory);\n  };\n\n  const options = [\n    {\n      label: t(\"kafka:short_description\"),\n      value: \"description\",\n      disabled: false,\n    },\n    { label: t(\"kafka:clientID\"), value: \"clientid\", disabled: false },\n    { label: t(\"kafka:owner\"), value: \"owner\", disabled: false },\n  ];\n\n  const ariaId = \"select_filter_category\";\n\n  return (\n    <>\n      <label hidden id={ariaId}>\n        {t(\"kafka:select_filter_category\")}\n      </label>\n      <Select\n        variant={SelectVariant.single}\n        aria-labelledby={ariaId}\n        onToggle={onToggle}\n        selections={value}\n        isOpen={isFilterExpanded}\n        onSelect={onSelect}\n        width={\"200px\"}\n      >\n        {options.map((option, index) => (\n          <SelectOption\n            isDisabled={option.disabled}\n            key={index}\n            value={option.value}\n          >\n            {option.label}\n          </SelectOption>\n        ))}\n      </Select>\n    </>\n  );\n};\n","import { InputGroup, ToolbarItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { SearchInput } from \"@rhoas/app-services-ui-components\";\nimport type { SearchCategory } from \"../types\";\nimport { FilterSelect } from \"./FilterSelect\";\n\nexport type SearchProps = {\n  onSearch: (category: SearchCategory, value: string) => void;\n};\n\nexport const Search: VoidFunctionComponent<SearchProps> = ({ onSearch }) => {\n  const { t } = useTranslation();\n  const [category, setCategory] = useState<SearchCategory>(\"description\");\n  const labels: {\n    [category in SearchCategory]: {\n      placeholder: string;\n      errorMessage: string;\n      validate: (value: string) => boolean;\n    };\n  } = {\n    owner: {\n      placeholder: t(\"kafka:filter_by_owner\"),\n      errorMessage: t(\"kafka:owner_field_invalid_message\"),\n      validate: (value: string) => {\n        return !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value);\n      },\n    },\n    description: {\n      placeholder: t(\"kafka:filter_by_short_description\"),\n      errorMessage: t(\"kafka:input_field_invalid_message\"),\n      validate: (value: string) => {\n        return /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(value);\n      },\n    },\n    clientid: {\n      placeholder: t(\"kafka:filter_by_client_id\"),\n      errorMessage: t(\"kafka:input_field_invalid_message\"),\n      validate: (value: string) => {\n        return !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value);\n      },\n    },\n  };\n  return (\n    <ToolbarItem>\n      <InputGroup>\n        <FilterSelect value={category} onChange={setCategory} />\n        <SearchInput\n          key={category}\n          placeholder={labels[category].placeholder}\n          errorMessage={labels[category].errorMessage}\n          validate={labels[category].validate}\n          onSearch={(value) => onSearch(category, value)}\n        />\n      </InputGroup>\n    </ToolbarItem>\n  );\n};\n","import { ToolbarFilter, ToolbarGroup } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { SearchProps } from \"./Search\";\nimport { Search } from \"./Search\";\nimport type { SearchCategory } from \"../types\";\n\ntype SearchChipsProps = {\n  clientIdChips: string[];\n  descriptionChips: string[];\n  ownerChips: string[];\n  onSearch: SearchProps[\"onSearch\"];\n  onDeleteChip: (category: SearchCategory, value: string) => void;\n  onDeleteChipGroup: (category: SearchCategory) => void;\n};\n\nexport const SearchChips: VoidFunctionComponent<SearchChipsProps> = ({\n  clientIdChips,\n  descriptionChips,\n  ownerChips,\n  onSearch,\n  onDeleteChip,\n  onDeleteChipGroup,\n}) => {\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <Search onSearch={onSearch} />\n      <ToolbarFilter\n        chips={clientIdChips}\n        deleteChip={(_, value) => onDeleteChip(\"clientid\", value as string)}\n        deleteChipGroup={() => onDeleteChipGroup(\"clientid\")}\n        categoryName=\"Client ID\"\n      >\n        {/** */}\n      </ToolbarFilter>\n      <ToolbarFilter\n        chips={descriptionChips}\n        deleteChip={(_, value) => onDeleteChip(\"description\", value as string)}\n        deleteChipGroup={() => onDeleteChipGroup(\"description\")}\n        categoryName=\"Short description\"\n      >\n        {/** */}\n      </ToolbarFilter>\n      <ToolbarFilter\n        chips={ownerChips}\n        deleteChip={(_, value) => onDeleteChip(\"owner\", value as string)}\n        deleteChipGroup={() => onDeleteChipGroup(\"owner\")}\n        categoryName=\"Owner\"\n      >\n        {/** */}\n      </ToolbarFilter>\n    </ToolbarGroup>\n  );\n};\n","import {\n  Button,\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useEffect, useReducer } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { SearchCategory } from \"../types\";\nimport type { SearchProps } from \"./Search\";\nimport { SearchChips } from \"./SearchChips\";\n\nconst initialState: State = {\n  clientid: [],\n  description: [],\n  owner: [],\n};\n\nexport type ServiceAccountToolbarProps = {\n  onSearch: (search: State) => void;\n  onCreateServiceAccountClick: () => void;\n};\n\nexport const ServiceAccountToolbar: VoidFunctionComponent<\n  ServiceAccountToolbarProps\n> = ({ onSearch, onCreateServiceAccountClick }) => {\n  const { t } = useTranslation();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleSearch: SearchProps[\"onSearch\"] = (category, value) => {\n    dispatch({\n      type: \"search\",\n      category,\n      value,\n    });\n  };\n\n  const handleDeleteChip = (category: SearchCategory, chip: string) => {\n    dispatch({\n      type: \"removeChip\",\n      category,\n      value: chip,\n    });\n  };\n\n  const handleDeleteChipGroup = (category: SearchCategory) => {\n    dispatch({\n      type: \"removeGroup\",\n      category,\n    });\n  };\n\n  const handleClearAllFilters = () => {\n    dispatch({\n      type: \"clearAll\",\n    });\n  };\n\n  // communicate back any change on the state to allow a parent component to\n  // react on a change on the search topic\n  useEffect(() => {\n    onSearch(state);\n  }, [onSearch, state]);\n\n  return (\n    <Toolbar\n      id=\"service-account-toolbar\"\n      collapseListedFiltersBreakpoint={\"md\"}\n      inset={{ xl: \"insetLg\" }}\n      clearAllFilters={handleClearAllFilters}\n    >\n      <ToolbarContent>\n        <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n          <SearchChips\n            clientIdChips={state.clientid}\n            descriptionChips={state.description}\n            ownerChips={state.owner}\n            onSearch={handleSearch}\n            onDeleteChip={handleDeleteChip}\n            onDeleteChipGroup={handleDeleteChipGroup}\n          />\n        </ToolbarToggleGroup>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <Button variant={\"primary\"} onClick={onCreateServiceAccountClick}>\n              {t(\"connection-tab:create_service_account\")}\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n\ntype State = {\n  [category in SearchCategory]: string[];\n};\n\ntype Actions =\n  | {\n      type: \"search\";\n      category: SearchCategory;\n      value: string;\n    }\n  | {\n      type: \"removeChip\";\n      category: SearchCategory;\n      value: string;\n    }\n  | {\n      type: \"removeGroup\";\n      category: SearchCategory;\n    }\n  | {\n      type: \"clearAll\";\n    };\n\nfunction reducer(state: State, action: Actions) {\n  switch (action.type) {\n    case \"search\": {\n      const newChips = [...state[action.category], action.value];\n      const uniqueChips = new Set(newChips);\n      return {\n        ...state,\n        [action.category]: Array.from(uniqueChips),\n      };\n    }\n    case \"removeChip\":\n      return {\n        ...state,\n        [action.category]: state[action.category].filter(\n          (v) => v !== action.value\n        ),\n      };\n    case \"removeGroup\":\n      return {\n        ...state,\n        [action.category]: [],\n      };\n    case \"clearAll\": {\n      return initialState;\n    }\n    default:\n      return { ...state };\n  }\n}\n","export * from \"./FilterSelect\";\nexport * from \"./ServiceAccountToolbar\";\n","export { ServiceAccountToolbar } from \"./components\";\n","import {\n  Button,\n  Card,\n  CardBody,\n  Flex,\n  FlexItem,\n  Modal,\n  ModalVariant,\n  PageSection,\n  Spinner,\n  Switch,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport \"./Settings.css\";\n// import { useAlert, AlertVariant } from \"@rhoas/app-services-ui-components\";\nimport type { SettingsStatus } from \"./types\";\n\nexport type SettingsProps = {\n  onSubmitReAuthentication: (\n    reauthenticationEnabled: boolean\n  ) => Promise<boolean>;\n  reauthenticationEnabled: boolean;\n};\n\nexport const Settings: FunctionComponent<SettingsProps> = ({\n  onSubmitReAuthentication,\n  reauthenticationEnabled,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  const { addAlert } = {\n    //TODO\n    addAlert: (args: { [key: string]: any }) => {\n      // TODO\n    },\n  };\n  //states\n  const [connectionStatus, setConnectionStatus] = useState<SettingsStatus>(\n    reauthenticationEnabled ? \"On\" : \"Off\"\n  );\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  const onClose = () => {\n    setIsModalOpen(false);\n  };\n\n  const onChangeSwitch = (checked: boolean) => {\n    if (connectionStatus === \"On\") {\n      setIsModalOpen(true);\n    } else {\n      handleReAuthentication(checked);\n    }\n  };\n\n  const handleReAuthentication = (reAuthValue: boolean) => {\n    setConnectionStatus(reAuthValue ? \"TurningOn\" : \"TurningOff\");\n\n    onSubmitReAuthentication(reAuthValue)\n      .then((reauthentication) => {\n        setConnectionStatus(reauthentication ? \"On\" : \"Off\");\n\n        addAlert({\n          variant: \"success\",\n          title: t(\"settings.success_alert\", {\n            status: reauthentication ? \"on\" : \"off\",\n          }),\n        });\n      })\n      .catch(() => {\n        setConnectionStatus(!reAuthValue ? \"On\" : \"Off\");\n\n        addAlert({\n          variant: \"danger\",\n          title: t(\"settings.error_alert_title\"),\n          description: t(\"settings.error_alert_title_description\"),\n        });\n      });\n  };\n\n  const onTurnOff = () => {\n    setIsModalOpen(false);\n    handleReAuthentication(false);\n  };\n\n  return (\n    <>\n      <PageSection>\n        <Card>\n          <CardBody>{t(\"settings.kafka_instance_settings_label\")}</CardBody>\n        </Card>\n      </PageSection>\n      <PageSection>\n        <Card className={\"mas--settings__card\"}>\n          <CardBody>\n            <Flex flexWrap={{ default: \"nowrap\" }}>\n              <FlexItem grow={{ default: \"grow\" }}>\n                <Flex>\n                  <FlexItem component={\"span\"} spacer={{ default: \"spacerSm\" }}>\n                    <strong>\n                      {t(\"settings.connection_re_authentication_label\")}\n                      {\":\"}\n                    </strong>\n                  </FlexItem>\n                  <FlexItem>\n                    {(() => {\n                      switch (connectionStatus) {\n                        case \"On\":\n                          return t(\n                            \"settings.Connection_re_authentication_states.on\"\n                          );\n                        case \"TurningOff\":\n                          return (\n                            <>\n                              <Spinner\n                                size=\"md\"\n                                aria-valuetext={t(\n                                  \"settings.Connection_re_authentication_states.turning_off\"\n                                )}\n                                aria-label={t(\n                                  \"settings.connection_re_authentication_label\"\n                                )}\n                              />{\" \"}\n                              {t(\n                                \"settings.Connection_re_authentication_states.turning_off\"\n                              )}\n                            </>\n                          );\n                        case \"Off\":\n                          return t(\n                            \"settings.Connection_re_authentication_states.off\"\n                          );\n                        case \"TurningOn\":\n                          return (\n                            <>\n                              <Spinner\n                                size=\"md\"\n                                aria-valuetext={\n                                  \"settings.Connection_re_authentication_states.turning_on\"\n                                }\n                                aria-label={t(\n                                  \"settings.connection_re_authentication_label\"\n                                )}\n                              />{\" \"}\n                              {t(\n                                \"settings.Connection_re_authentication_states.turning_on\"\n                              )}\n                            </>\n                          );\n                        default:\n                          return null;\n                      }\n                    })()}\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n              <FlexItem>\n                <Switch\n                  id=\"Connection-re-authentication-switch\"\n                  aria-label={t(\"settings.connection_re_authentication_label\")}\n                  isChecked={\n                    connectionStatus === \"On\" ||\n                    connectionStatus === \"TurningOff\"\n                  }\n                  isDisabled={\n                    connectionStatus === \"TurningOff\" ||\n                    connectionStatus === \"TurningOn\"\n                  }\n                  onChange={onChangeSwitch}\n                />\n              </FlexItem>\n              <Modal\n                variant={ModalVariant.small}\n                isOpen={isModalOpen}\n                title={t(\"settings.warning_title\")}\n                titleIconVariant={\"warning\"}\n                actions={[\n                  <Button key={\"confirm\"} variant=\"primary\" onClick={onTurnOff}>\n                    {t(\"settings.turn_off_button_label\")}\n                  </Button>,\n                  <Button key={\"cancel\"} variant=\"link\" onClick={onClose}>\n                    {t(\"common:cancel\")}\n                  </Button>,\n                ]}\n                onClose={onClose}\n              >\n                {t(\"settings.warning_description\")}\n              </Modal>\n            </Flex>\n          </CardBody>\n        </Card>\n      </PageSection>\n    </>\n  );\n};\n","export * from \"./Settings\";\nexport * from \"./types\";\n","export * from \"./ConsumerGroups\";\nexport * from \"./ControlPlaneHeader\";\nexport * from \"./CreateKafkaInstance\";\nexport * from \"./DataPlaneHeader\";\nexport * from \"./DeleteKafKaInstance\";\nexport * from \"./I18nProvider\";\nexport * from \"./KafkaInstanceDrawer\";\nexport * from \"./KafkaInstanceStatus\";\nexport * from \"./KafkaInstances\";\nexport * from \"./KafkaMessageBrowser\";\nexport * from \"./KafkaPageV3\";\nexport * from \"./KafkaTopics\";\nexport * from \"./Logos\";\nexport * from \"./ManageKafkaPermissions\";\nexport * from \"./Metrics\";\nexport * from \"./ServiceAccount\";\nexport * from \"./Settings\";\n","export * from './useKafkaLabels';","import { useTranslation } from \"react-i18next\";\nimport type {\n  CloudProvider,\n  KafkaInstanceField,\n  SimplifiedStatus,\n  Status,\n} from \"../types\";\n\nexport function useKafkaLabels() {\n  const { t } = useTranslation(\"kafka\");\n\n  const statuses: { [status in Status]: string } = {\n    ready: t(\"statuses.ready\"),\n    degraded: t(\"statuses.degraded\"),\n    accepted: t(\"statuses.accepted\"),\n    provisioning: t(\"statuses.provisioning\"),\n    preparing: t(\"statuses.preparing\"),\n    deprovision: t(\"statuses.deprovision\"),\n    deleting: t(\"statuses.deleting\"),\n    suspended: t(\"statuses.suspended\"),\n    suspending: t(\"statuses.suspending\"),\n    resuming: t(\"statuses.resuming\"),\n  };\n  const statusesSimplified: { [status in SimplifiedStatus]: string } = {\n    creating: t(\"statusesSimplified.creating\"),\n    ready: t(\"statusesSimplified.ready\"),\n    degraded: t(\"statusesSimplified.degraded\"),\n    deleting: t(\"statusesSimplified.deleting\"),\n    suspended: t(\"statusesSimplified.suspended\"),\n    suspending: t(\"statusesSimplified.suspending\"),\n    resuming: t(\"statusesSimplified.resuming\"),\n  };\n  const providers: { [provider in CloudProvider]: string } = {\n    aws: t(\"common:cloudProviders.aws\"),\n    gcp: t(\"common:cloudProviders.gcp\"),\n    azure: t(\"common:cloudProviders.azure\"),\n  };\n  const providerRegions: { [provider in CloudProvider]: { [region: string]: string }} = {\n    aws: {},\n    gcp: {},\n    azure: {},\n  }\n  const fields: {\n    [field in KafkaInstanceField]: string;\n  } = {\n    id: t(\"fields.id\"),\n    name: t(\"fields.name\"),\n    createdAt: t(\"fields.createdAt\"),\n    updatedAt: t(\"fields.updatedAt\"),\n    expiryDate: t(\"fields.expiryDate\"),\n    owner: t(\"fields.owner\"),\n    provider: t(\"fields.provider\"),\n    region: t(\"fields.region\"),\n    status: t(\"fields.status\"),\n    plan: t(\"fields.plan\"),\n    size: t(\"fields.size\"),\n    ingress: t(\"fields.ingress\"),\n    egress: t(\"fields.egress\"),\n    storage: t(\"fields.storage\"),\n    maxPartitions: t(\"fields.maxPartitions\"),\n    connections: t(\"fields.connections\"),\n    connectionRate: t(\"fields.connectionRate\"),\n    messageSize: t(\"fields.messageSize\"),\n    billing: t(\"fields.billing\"),\n    adminUrl: t(\"fields.adminUrl\"),\n    bootstrapUrl: t(\"fields.bootstrapUrl\"),\n    version: t(\"fields.version\"),\n  };\n  return {\n    fields,\n    statuses,\n    statusesSimplified,\n    providers,\n    providerRegions\n  };\n}\n","export * from \"./components\";\nexport * from \"./hooks\";\nexport * from \"./types\";\n","/**\n * A date in the ISO format YYYY-MM-DDTHH:mm:ss.sssZ\n */\nexport type DateIsoString = string;\n\n/**\n * Supported Cloud Providers. Extend this to add a new provider, then follow\n * Typescript errors to find where extra information need to be added (images,\n * translations).\n */\nexport type CloudProvider = \"aws\" | \"gcp\" | \"azure\";\n\n/**\n * A Cloud Region. Since this varies between Cloud Providers and has no extra\n * visual attached, we take its name from the API and do no further\n * transformation.\n */\nexport type CloudRegion = string;\n/**\n * Cloud provider multi availability zone\n */\nexport type AZ = \"single\" | \"multi\";\n/**\n * A number that describes how much does an instance cost to create\n */\nexport type Quota = number;\n/**\n * The capabilities of an instance, and its quota cost. Some sizes might not be\n * enabled, eg. because temporarily out of capacity\n */\nexport type Size = {\n  id: string;\n  displayName: string;\n  status: \"stable\" | \"preview\";\n  quota: Quota;\n  ingress: number;\n  egress: number;\n  storage: number;\n  connections: number;\n  connectionRate: number;\n  maxPartitions: number;\n  messageSize: number;\n  isDisabled: boolean;\n};\n/**\n * Paid for instances are `standard`, evaluation instances are `developer`.\n * `standard` instances have a `Quota` associated, and bigger sizes.\n * `developer` instances are free to be created (up to 1 per user), have a\n * single, smaller size option than `standard` ones, and they expire after a\n * few hours.\n *\n * Note: a new kind of evaluation instance is being studied. They will have a\n * long expiration period and bigger sizes.\n */\nexport type Plan = \"standard\" | \"developer\";\n/**\n * All the statuses an instance can be. If new statuses are added, ensure to\n * add them to the relevant status group (`ReadyStatuses` etc.).\n */\nexport const Statuses = [\n  \"ready\",\n  \"degraded\",\n  \"accepted\",\n  \"provisioning\",\n  \"preparing\",\n  \"deprovision\",\n  \"deleting\",\n  \"suspended\",\n  \"suspending\",\n  \"resuming\",\n] as const;\n\nexport type Status = typeof Statuses[number];\n\nexport const CreatingStatuses: readonly Status[] = [\n  \"accepted\",\n  \"provisioning\",\n  \"preparing\",\n];\nexport const ReadyStatuses: readonly Status[] = [\"ready\"];\nexport const DegradedStatuses: readonly Status[] = [\"degraded\"];\nexport const SuspendingStatuses: readonly Status[] = [\"suspending\"];\nexport const SuspendedStatuses: readonly Status[] = [\"suspended\"];\nexport const DeletingStatuses: readonly Status[] = [\"deleting\", \"deprovision\"];\nexport const ResumingStatuses: readonly Status[] = [\"resuming\"];\n\nexport const SimplifiedStatuses = {\n  creating: CreatingStatuses,\n  ready: ReadyStatuses,\n  degraded: DegradedStatuses,\n  suspended: SuspendedStatuses,\n  deleting: DeletingStatuses,\n  resuming: ResumingStatuses,\n  suspending: SuspendingStatuses,\n} as const;\nexport type SimplifiedStatus = keyof typeof SimplifiedStatuses;\n\n/**\n * A list of marketplaces where an instance can be billed to\n */\nexport type MarketPlace = CloudProvider | \"rhm\";\n/**\n * List of marketplaces where a user has some subscription\n */\nexport type MarketPlaceSubscriptions = {\n  marketplace: MarketPlace;\n  subscriptions: string[];\n};\n/**\n * A specific marketplace's subscription, assigned as billing option to an\n * instance.\n *\n * Note: the API will provide only the `subscription`; the `MarketPlace` will\n * have to be fetched querying for the `subscription`.\n */\nexport type MarketplaceSubscription = {\n  marketplace: MarketPlace;\n  subscription: string;\n};\n\n/**\n * All the details abut a Kafka instance.\n *\n * Unless differently specified, the values marked as accepting `undefined`\n * will come from extra API calls.\n */\nexport type KafkaInstance = {\n  id: string;\n  name: string;\n  createdAt: DateIsoString;\n  updatedAt: DateIsoString;\n  expiryDate: DateIsoString | undefined;\n  owner: string;\n  provider: CloudProvider;\n  region: CloudRegion;\n  status: Status;\n  plan: Plan;\n  size: string | undefined;\n  ingress: number | undefined;\n  egress: number | undefined;\n  storage: number | undefined;\n  maxPartitions: number | undefined;\n  connections: number | undefined;\n  connectionRate: number | undefined;\n  messageSize: number | undefined;\n  billing: \"prepaid\" | MarketplaceSubscription | undefined;\n\n  version: string;\n\n  bootstrapUrl: string | undefined;\n  adminUrl: string | undefined;\n};\nexport type KafkaInstanceField = keyof KafkaInstance;\n\nexport enum RetentionTimeUnits {\n  MILLISECOND = \"milliseconds\",\n  SECOND = \"seconds\",\n  MINUTE = \"minutes\",\n  HOUR = \"hours\",\n  DAY = \"days\",\n  WEEK = \"weeks\",\n  CUSTOM = \"custom\",\n  UNLIMITED = \"unlimited\",\n}\n\nexport enum RetentionSizeUnits {\n  BYTE = \"bytes\",\n  KIBIBYTE = \"kibibytes\",\n  MEBIBYTE = \"mebibytes\",\n  GIBIBYTE = \"gibibytes\",\n  TEBIBYTE = \"tebibytes\",\n  CUSTOM = \"custom\",\n  UNLIMITED = \"unlimited\",\n}\n\nexport type KafkaTopic = {\n  topic_name: string;\n  partitions: number;\n  retention_time: string;\n  retention_size: string;\n};\n\nexport type KafkaTopicField = keyof KafkaTopic;\n\nexport type {ConsumerGroup} from \"./components/ConsumerGroups/types\"","export * from \"./src\";\n","const REACT_QUERY_DEVTOOLS = \"mas.devtools\";\nconst METRICS_LAG_ALERT = \"mas.rhosak.metrics.lag-alert-closed\";\n\nexport function isReactQueryDevToolsEanbled() {\n  return localStorage.getItem(REACT_QUERY_DEVTOOLS) === \"true\";\n}\n\nexport function metricsIsLagAlertsDismissed() {\n  return localStorage.getItem(METRICS_LAG_ALERT) === \"true\";\n}\n\nexport function metricsDismissLagAlerts() {\n  return localStorage.setItem(METRICS_LAG_ALERT, \"true\");\n}\n","export * from \"./src\";\n"],"names":[],"sourceRoot":""}