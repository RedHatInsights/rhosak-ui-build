{"version":3,"file":"js/3352.c9cb1c1415aaa79724e2.js","mappings":"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","sources":["webpack:///./src/routes/control-plane/routesConsts.ts","webpack:///./src/routes/control-plane/DrawerProvider.tsx","webpack:///./src/routes/RedirectOnGateError.tsx","webpack:///./src/routes/control-plane/routes/ConnectedControlPlaneHeader.tsx","webpack:///./src/routes/control-plane/routes/useKafkaInstancesTable.ts","webpack:///./src/routes/control-plane/routes/KafkaInstancesRoute.tsx","webpack:///./src/routes/control-plane/routes/CreateKafkaInstanceRoute.tsx","webpack:///./src/routes/control-plane/routes/useCreateKafkaCallbacks.ts","webpack:///./src/routes/control-plane/routes/CreateDedicatedKafkaInstanceRoute.tsx","webpack:///./src/routes/control-plane/routes/useCreateDedicatedKafkaCallbacks.ts","webpack:///./src/routes/control-plane/useControlPlaneGate.tsx","webpack:///./src/routes/control-plane/routes/DeleteKafkaInstanceRoute.tsx","webpack:///./src/routes/control-plane/routes/ChangeOwnerRoute.tsx","webpack:///./src/routes/control-plane/ControlPlaneRoutes.tsx","webpack:///./src/routes/useDedicatedGate.tsx","webpack:///../../packages/consoledot-api/src/queries/useStandardQuota.ts","webpack:///./src/routes/control-plane/routes/DedicatedClustersRoute.tsx","webpack:///./src/routes/control-plane/routes/DedicatedKafkaInstancesRoute.tsx","webpack:///./src/routes/control-plane/DedicatedControlPlaneRoutes.tsx","webpack:///./src/routes/data-plane/routesConsts.ts","webpack:///./src/routes/data-plane/useDataPlaneGate.tsx","webpack:///./src/routes/data-plane/routes/DataPlaneHeaderConnected.tsx","webpack:///./src/routes/data-plane/routes/AclsRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicsRoute.tsx","webpack:///./src/routes/data-plane/routes/SettingsRoute.tsx","webpack:///./src/routes/data-plane/routes/DashboardRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupsRoute.tsx","webpack:///./src/routes/data-plane/useTopicGate.tsx","webpack:///./src/routes/data-plane/routes/DataPlaneTopicHeaderConnected.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupsRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicMessagesRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicPropertiesRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicSchemasRoute.tsx","webpack:///./src/routes/data-plane/useConsumerGroupGate.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupResetOffsetRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupViewPartitionRoute.tsx","webpack:///./src/routes/data-plane/useTopicConsumerGroupGate.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupResetOffsetRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupViewPartitionRoute.tsx","webpack:///../../packages/ui/src/components/DeleteKafkaTopic/DeleteKafkaTopic.tsx","webpack:///./src/routes/data-plane/routes/TopicDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicEditPropertiesRoute.tsx","webpack:///./src/routes/data-plane/routes/EditPermissionsRoute.tsx","webpack:///./src/routes/data-plane/routes/ManagePermissionsRoute.tsx","webpack:///./src/routes/data-plane/DataPlaneRoutes.tsx","webpack:///./src/routes/DefaultServiceRedirect.tsx","webpack:///./src/routes/overview/OverviewRoute.tsx","webpack:///./src/routes/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/QuickstartLoader.tsx","webpack:///./src/store/index.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDedicatedClusterSizesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDedicatedClustersFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDedicatedQuotaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/queries/useConsumerGroup.ts","webpack:///../../packages/consoledot-api/src/queries/useConsumerGroups.ts","webpack:///../../packages/consoledot-api/src/queries/useDedicatedClusters.ts","webpack:///../../packages/consoledot-api/src/transformers/kafkaRequestToKafkaInstanceEnhanched.ts","webpack:///../../packages/consoledot-api/src/queries/useCreateInstance.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkaInstanceTransformer.ts","webpack:///../../packages/consoledot-api/src/queries/useKafka.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkas.ts","webpack:///../../packages/consoledot-api/src/queries/useTopic.ts","webpack:///../../packages/consoledot-api/src/queries/useTopics.ts","webpack:///../../packages/consoledot-api/src/queries/useUserAccounts.ts","webpack:///../../packages/consoledot-api/src/queries/useAcls.ts","webpack:///../../packages/consoledot-api/src/queries/useServiceAccounts.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDeveloperInstanceAvailabilityFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaKpisFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useMessagesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useProviderRegionSizesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useProvidersWithRegionsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useStandardQuotaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useTopicsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useTopicsMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/mutations/useCreateDedicatedKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useCreateKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteTopicMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdateKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteConsumerGroupMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useResetConsumerGroupMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeletePermissionsMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdatePermissionsMutation.ts","webpack:///../../packages/consoledot-api/src/types.ts","webpack:///../../packages/consoledot-api/src/ApiProvider.tsx","webpack:///../../packages/consoledot-api/src/transformers/consumerGroupTransformer.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchConsumerGroup.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchConsumerGroups.ts","webpack:///../../packages/consoledot-api/src/transformers/dedicatedClusterTransformer.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchDedicatedClusters.ts","webpack:///../../packages/consoledot-api/src/utilsAndConstants.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchDedicatedQuota.ts","webpack:///../../packages/consoledot-api/src/transformer/apiSizeToComponentSize.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchDedicatedClusterSizes.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaKpis.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/valuesToQuery.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkas.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchMessages.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchOrganization.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchProviderRegionSizes.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchProvidersWithRegions.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchStandardQuota.ts","webpack:///../../packages/consoledot-api/src/transformers/topicTransformer.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopic.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopicsMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchUserAccounts.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchPermissions.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchServiceAccounts.ts","webpack:///../../packages/consoledot-api/src/queryKeys.ts","webpack:///../../packages/consoledot-api/src/useApi.ts","webpack:///../../packages/local-storage-helpers/index.ts","webpack:///../../packages/ui-models/src/models/kafka.ts","webpack:///../../packages/ui/src/components/ChangeKafkaOwner/SelectOwner.tsx","webpack:///../../packages/ui/src/components/ChangeKafkaOwner/ChangeKafkaOwner.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupPopover.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupState.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupByKafka.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupByTopic.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupDetails.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupEmptyState.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/OffsetSelect.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/TopicSelect.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupResetOffset.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/DeleteConsumerGroup.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupDrawer.tsx","webpack:///../../packages/ui/src/hooks/useKafkaLabels.ts","webpack:///../../packages/ui/src/hooks/useTopicLabels.ts","webpack:///../../packages/ui/src/hooks/useConsumerGroupLabels.ts","webpack:///../../packages/ui/src/components/ConsumerGroups/ConsumerGroups.tsx","webpack:///../../packages/ui/src/components/ControlPlaneHeader.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/shared.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/StandardPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/TrialPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateKafkaInstanceMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateKafkaInstanceProvider.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/BillingHelp.tsx","webpack:///../../packages/ui/src/components/Logos/images.ts","webpack:///../../packages/ui/src/components/Logos/AWSLogo.tsx","webpack:///../../packages/ui/src/components/Logos/AzureLogo.tsx","webpack:///../../packages/ui/src/components/Logos/GCPLogo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/BillingTiles.tsx","webpack:///../../packages/ui/src/components/Logos/RedhatLogo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/CloudProviderTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/CloudRegionsSelect.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldAZ.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldBillingTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldCloudProvider.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldCloudRegion.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldInstanceName.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSizeHelperText.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSizeHelperTextOverQuota.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSizeHelperTextTrial.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldSize.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FormAlerts.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/InstanceInfo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/InstanceInfoSkeleton.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsLoading.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsStandardPlan.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsDedicatedPlan.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsSystemUnavailable.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/ModalAlertsTrialPlan.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/LoadingForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/DedicatedPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateDedicatedKafkaInstanceMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateDedicatedKafkaInstanceProvider.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useCreateKafkaInstance.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useCreateDedicatedKafkaInstance.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useStandardPlan.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useTrialPlan.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/useDedicatedPlan.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/StandardInstanceForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/TrialInstanceForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/CreateKafkaInstance.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/DedicatedClusterTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/FieldDedicatedCluster.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/DedicatedInstanceForm.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/CreateDedicatedKafkaInstance.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceActions.tsx","webpack:///../../packages/ui/src/components/DataPlaneHeader.tsx","webpack:///../../packages/ui/src/components/DataPlaneTopicHeader.tsx","webpack:///../../packages/ui/src/components/DedicatedClusters/components/EmptyStateNoDedicatedClusters.tsx","webpack:///../../packages/ui/src/components/DedicatedClusters/DedicatedClusters.tsx","webpack:///../../packages/ui/src/hooks/useDedicatedClusterLabels.ts","webpack:///../../packages/ui/src/components/DeleteKafKaInstance/DeleteKafkaInstance.tsx","webpack:///../../packages/ui/src/components/I18nProvider.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/DetailsTabAlert.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaDetailsTab.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/SuspendedConnection.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaConnectionTabP2.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/SampleCodeSnippet.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/CodeSnippets.ts","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaSampleCode.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/KafkaInstanceDrawer.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusLabel.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/types.ts","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusProgressStepper.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusPopoverContent.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusPopover.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/SuspendedPopover.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/KafkaInstanceStatus.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoDedicatedClusters.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoDedicatedEntitlement.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoDedicatedInstances.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoInstances.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoResults.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/KafkaInstances.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/DateTimePicker.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/FilterGroup.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/LimitSelector.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/utils.ts","webpack:///../../packages/ui/src/components/KafkaTopics/types.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoDataCell.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/MessageDetails.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoDataEmptyState.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoResultsEmptyState.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/OffsetRange.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/PartitionSelector.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/UnknownValuePreview.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/MessageBrowserMachine.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/KafkaMessageBrowser.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceCapacityTable.tsx","webpack:///../../packages/ui/src/components/MarketingPage.tsx","webpack:///../../packages/ui/src/components/KafkaPageV3.tsx","webpack:///../../packages/ui/src/components/KafkaTopics/components/EmptyStateNoTopic.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/types.ts","webpack:///../../packages/ui/src/components/KafkaTopics/KafkaTopics.tsx","webpack:///../../packages/ui/src/components/Metrics/types.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PermissionsDropdown.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceTypeLabel.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/Cells.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/EmptyPermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/SelectAccount.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceName.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceOperation.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourcePermission.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourcePrefixRule.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceType.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ShortcutsTableHead.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/KafkaInstanceManualPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/AssignPermissionsManual.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ProduceTopicRow.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ConsumeTopicShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ManageAccessShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ProduceTopicShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/AssignPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PreCancelModal.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ReviewPermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ViewAccountDetails.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/utils.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/EditPermissions.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateInitialLoading.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateMetricsUnavailable.tsx","webpack:///../../packages/ui/src/components/Metrics/components/MetricsLayout.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardBodyLoading.tsx","webpack:///../../packages/ui/src/components/Metrics/consts.ts","webpack:///../../packages/ui/src/components/Metrics/components/ChartSkeletonLoader.tsx","webpack:///../../packages/ui/src/components/Metrics/components/useChartWidth.tsx","webpack:///../../packages/ui/src/components/Metrics/components/utils.ts","webpack:///../../packages/ui/src/components/Metrics/components/ChartLinearWithOptionalLimit.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartLogSizePerPartition.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartPopover.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartTotalBytes.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoMetricsData.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoMetricsDataForSelection.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoTopics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoTopicSelected.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTime.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTopic.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarRefresh.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarKafkaInstanceMetric.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardKafkaInstanceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardKpi.tsx","webpack:///../../packages/ui/src/components/Metrics/components/MetricsLagAlert.tsx","webpack:///../../packages/ui/src/components/Metrics/components/PartitionCard.tsx","webpack:///../../packages/ui/src/components/Metrics/machines/KafkaInstanceMetricsMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/TopicsMetricsMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/MetricsKpiMachine.ts","webpack:///../../packages/ui/src/components/Metrics/KafkaInstanceMetricsProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/MetricsKpiProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/TopicsMetricsProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/useKafkaInstanceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/useTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/Metrics.tsx","webpack:///../../packages/ui/src/components/Metrics/useMetricsKpi.tsx","webpack:///../../packages/ui/src/components/Settings/Settings.tsx","webpack:///../../packages/ui/src/components/Topic/components/types.ts","webpack:///../../packages/ui/src/components/Topic/components/TextWithLabelPopover.tsx","webpack:///../../packages/ui/src/components/Topic/components/Cleanup.tsx","webpack:///../../packages/ui/src/components/Topic/components/CustomRetentionMessage.tsx","webpack:///../../packages/ui/src/components/Topic/components/CustomRetentionSize.tsx","webpack:///../../packages/ui/src/components/Topic/components/CoreConfiguration.tsx","webpack:///../../packages/ui/src/components/Topic/components/useValidateTopic.ts","webpack:///../../packages/ui/src/components/Topic/components/Flush.tsx","webpack:///../../packages/ui/src/components/Topic/components/Log.tsx","webpack:///../../packages/ui/src/components/Topic/components/Message.tsx","webpack:///../../packages/ui/src/components/Topic/components/Replication.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvanceIndex.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvanceJumpLinks.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvancePage.tsx","webpack:///../../packages/ui/src/components/Topic/EditTopicProperties/EditTopicProperties.tsx","webpack:///../../packages/ui/src/components/Topic/TopicProperties/TopicProperties.tsx"],"sourcesContent":["const NewInstanceSegment = \"create\";\nconst ClusterSegment = \"clusters\";\nexport const ControlPlaneSpecialSegments = [NewInstanceSegment, ClusterSegment];\n\nexport const ControlPlaneRouteRoot = \"/kafkas\" as const;\nexport const ControlPlaneRoutePath =\n  `${ControlPlaneRouteRoot}/:id?/:section(delete|change-owner)?` as const;\nexport const ControlPlaneNewInstancePath = `${ControlPlaneRouteRoot}/${NewInstanceSegment}`;\nexport const ControlPlaneDeleteInstancePath = `${ControlPlaneRouteRoot}/:id/delete`;\nexport const ControlPlaneChangeOwnerPath = `${ControlPlaneRouteRoot}/:id/change-owner`;\nexport type ControlPlaneRouteParams = {\n  id?: string;\n  section?: \"delete\" | \"change-owner\";\n};\n\nexport const DedicatedControlPlaneRouteRoot = \"/dedicated\" as const;\n\nexport const DedicatedControlPlaneRoutePath =\n  `${DedicatedControlPlaneRouteRoot}/:id?/:section(delete|change-owner)?` as const;\nexport const DedicatedControlPlaneClustersPath = `${DedicatedControlPlaneRouteRoot}/${ClusterSegment}`;\nexport const DedicatedControlPlaneNewInstancePath = `${DedicatedControlPlaneRouteRoot}/${NewInstanceSegment}`;\nexport const DedicatedControlPlaneDeleteInstancePath = `${DedicatedControlPlaneRouteRoot}/:id/delete`;\nexport const DedicatedControlPlaneChangeOwnerPath = `${DedicatedControlPlaneRouteRoot}/:id/change-owner`;\n\nexport type ControlPlaneNavigationProps = {\n  instancesHref: string;\n};\n","import { useKafka } from \"consoledot-api\";\nimport type { FunctionComponent, MutableRefObject } from \"react\";\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { KafkaInstanceDrawerTab } from \"ui\";\nimport { KafkaInstanceDrawer } from \"ui\";\nimport type { ControlPlaneRouteParams } from \"./routesConsts\";\nimport {\n  ControlPlaneRoutePath,\n  ControlPlaneSpecialSegments,\n  DedicatedControlPlaneRoutePath,\n} from \"./routesConsts\";\n\ntype DrawerContextProps = {\n  selectedInstance: string | undefined;\n  activeTab: KafkaInstanceDrawerTab;\n  setActiveTab: (tab: KafkaInstanceDrawerTab) => void;\n  isExpanded: boolean;\n  toggleExpanded: (newState?: boolean) => void;\n  onClose: MutableRefObject<(() => void) | undefined>;\n};\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst DrawerContext = createContext<DrawerContextProps>(null!);\n\nexport const DrawerProvider: FunctionComponent = ({ children }) => {\n  const standardMatch = useRouteMatch<ControlPlaneRouteParams>(\n    ControlPlaneRoutePath\n  );\n  const dedicatedMatch = useRouteMatch<ControlPlaneRouteParams>(\n    DedicatedControlPlaneRoutePath\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"DrawerProvider used outside the expected route\");\n  }\n  const selectedInstance =\n    (match.params.id &&\n      ControlPlaneSpecialSegments.includes(match.params.id)) ||\n    match.params.section !== undefined\n      ? undefined\n      : match.params.id;\n  const { data: instance } = useKafka(selectedInstance);\n  const [isExpanded, setIsExpanded] = useState(\n    selectedInstance !== undefined && match.isExact\n  );\n  const [activeTab, setActiveTab] = useState<KafkaInstanceDrawerTab>(\"details\");\n  const onClose = useRef<() => void | undefined>();\n\n  const toggleExpanded = useCallback((newValue: boolean | undefined) => {\n    setIsExpanded((prev) => {\n      const isExpanded = newValue !== undefined ? newValue : !prev;\n      if (isExpanded === false && onClose.current) {\n        onClose.current();\n      }\n      return isExpanded;\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!instance) {\n      setIsExpanded(false);\n    }\n  }, [instance]);\n\n  const value = useMemo(() => {\n    const shouldBeExpanded = selectedInstance !== undefined && isExpanded;\n\n    return {\n      selectedInstance,\n      activeTab,\n      setActiveTab,\n      isExpanded: shouldBeExpanded,\n      toggleExpanded,\n      onClose,\n    };\n  }, [activeTab, isExpanded, selectedInstance, toggleExpanded]);\n\n  return (\n    <DrawerContext.Provider value={value}>\n      <KafkaInstanceDrawer\n        instance={instance}\n        activeTab={activeTab}\n        onTabChange={setActiveTab}\n        isExpanded={isExpanded}\n        onClose={() => toggleExpanded(false)}\n      >\n        {children}\n      </KafkaInstanceDrawer>\n    </DrawerContext.Provider>\n  );\n};\n\nexport function useDrawer(onClose?: () => void) {\n  const context = useContext(DrawerContext);\n  context.onClose.current = onClose;\n  return context;\n}\n","import { useQueryErrorResetBoundary } from \"consoledot-api\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useEffect } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { Redirect, useLocation } from \"react-router-dom\";\n\nexport const RedirectOnGateError: FunctionComponent<{\n  redirectUrl: string;\n}> = ({ children, redirectUrl }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const { key } = useLocation();\n\n  return (\n    <ErrorBoundary\n      resetKeys={[key]}\n      fallbackRender={() => <RedirectAndResetError redirectUrl={redirectUrl} />}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n};\n\nconst RedirectAndResetError: VoidFunctionComponent<{ redirectUrl: string }> = ({\n  redirectUrl,\n}) => {\n  const { reset } = useQueryErrorResetBoundary();\n  useEffect(() => reset, [reset]);\n  return <Redirect to={redirectUrl} />;\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport type { ControlPlaneHeaderProps } from \"ui\";\nimport { ControlPlaneHeader } from \"ui\";\n\nexport type ConnectedControlPlaneHeaderProps = {\n  activeSection: ControlPlaneHeaderProps[\"activeSection\"];\n};\n\nexport const ConnectedControlPlaneHeader: VoidFunctionComponent<\n  ConnectedControlPlaneHeaderProps\n> = ({ activeSection }) => {\n  return (\n    <ControlPlaneHeader\n      activeSection={activeSection}\n      sectionsHref={{\n        standard: \"/kafkas\",\n        dedicated: \"/dedicated\",\n        clusters: \"/dedicated/clusters\",\n      }}\n    />\n  );\n};\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport { KafkaInstancesSortableColumns } from \"consoledot-api\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { KafkaInstanceDrawerTab, KafkaInstancesProps } from \"ui\";\nimport { useKafkaLabels } from \"ui\";\nimport type { SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { useDrawer } from \"../DrawerProvider\";\n\nexport type UseKafkaInstancesTableProps = {\n  instancesHref: string;\n  instanceSelectedHref: (id: string) => string;\n  instanceCreationHref: string;\n  instanceDeletionHref: (id: string) => string;\n  instanceChangeOwnerHref: (id: string) => string;\n};\n\nexport function useKafkaInstancesTable({\n  instancesHref,\n  instanceSelectedHref,\n  instanceCreationHref,\n  instanceDeletionHref,\n  instanceChangeOwnerHref,\n}: UseKafkaInstancesTableProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveQuickStart } = useContext(QuickStartContext);\n\n  const { selectedInstance, toggleExpanded, setActiveTab, isExpanded } =\n    useDrawer(\n      useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instancesHref);\n      }, [history, instancesHref])\n    );\n\n  const labels = useKafkaLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const namesChips = useURLSearchParamsChips(\"names\", resetPaginationQuery);\n  const ownersChips = useURLSearchParamsChips(\"owners\", resetPaginationQuery);\n  const statusesChips = useURLSearchParamsChips<SimplifiedStatus>(\n    \"statuses\",\n    resetPaginationQuery\n  );\n\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaInstancesSortableColumns,\n    labels.fields,\n    \"createdAt\",\n    \"desc\"\n  );\n\n  const onClearAllFilters = useCallback(() => {\n    namesChips.clearChained(\n      ownersChips.clearChained(\n        statusesChips.clearChained(setPaginationQuery(1, perPage))\n      ),\n      true\n    );\n  }, [namesChips, ownersChips, perPage, setPaginationQuery, statusesChips]);\n\n  const openDrawer = useCallback(\n    (id: string, tab: KafkaInstanceDrawerTab) => {\n      if (selectedInstance === id && isExpanded) {\n        toggleExpanded(false);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceSelectedHref(id));\n        toggleExpanded(true);\n        setActiveTab(tab);\n      }\n    },\n    [\n      history,\n      instanceSelectedHref,\n      isExpanded,\n      selectedInstance,\n      setActiveTab,\n      toggleExpanded,\n    ]\n  );\n\n  const onDetailsClick: KafkaInstancesProps[\"onDetails\"] = useCallback(\n    (instance) => {\n      openDrawer(instance.id, \"details\");\n    },\n    [openDrawer]\n  );\n\n  const onConnectionsClick: KafkaInstancesProps[\"onDetails\"] = useCallback(\n    (instance) => {\n      openDrawer(instance.id, \"connections\");\n    },\n    [openDrawer]\n  );\n\n  const onCreate = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceCreationHref);\n  }, [history, instanceCreationHref]);\n\n  const onDelete = useCallback<KafkaInstancesProps[\"onDelete\"]>(\n    ({ id }) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(instanceDeletionHref(id));\n    },\n    [history, instanceDeletionHref]\n  );\n  const onChangeOwner = useCallback<KafkaInstancesProps[\"onChangeOwner\"]>(\n    ({ id }) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(instanceChangeOwnerHref(id));\n    },\n    [history, instanceChangeOwnerHref]\n  );\n\n  const onQuickstartGuide = useCallback(\n    () => setActiveQuickStart && setActiveQuickStart(\"getting-started\"),\n    [setActiveQuickStart]\n  );\n\n  return {\n    selectedInstance,\n    page,\n    perPage,\n    setPagination,\n    namesChips,\n    ownersChips,\n    statusesChips,\n    isColumnSortable,\n    sort,\n    sortDirection,\n    onClearAllFilters,\n    onDetailsClick,\n    onConnectionsClick,\n    onCreate,\n    onDelete,\n    onChangeOwner,\n    onQuickstartGuide,\n  };\n}\n","import { useKafkas } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport type { ControlPlaneHeaderProps, KafkaInstancesProps } from \"ui\";\nimport { KafkaInstances } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport { ConnectedControlPlaneHeader } from \"./ConnectedControlPlaneHeader\";\nimport { useKafkaInstancesTable } from \"./useKafkaInstancesTable\";\n\nexport type KafkaInstancesRoute = {\n  activeSection: ControlPlaneHeaderProps[\"activeSection\"];\n  instancesHref: string;\n  instanceSelectedHref: (id: string) => string;\n  instanceCreationHref: string;\n  instanceDeletionHref: (id: string) => string;\n  instanceChangeOwnerHref: (id: string) => string;\n} & Pick<KafkaInstancesProps, \"getUrlForInstance\">;\n\nexport const KafkaInstancesRoute: FunctionComponent<KafkaInstancesRoute> = ({\n  activeSection,\n  instancesHref,\n  instanceDeletionHref,\n  instanceSelectedHref,\n  instanceCreationHref,\n  instanceChangeOwnerHref,\n  getUrlForInstance,\n}) => {\n  const {\n    selectedInstance,\n    page,\n    perPage,\n    setPagination,\n    namesChips,\n    ownersChips,\n    statusesChips,\n    isColumnSortable,\n    sort,\n    sortDirection,\n    onClearAllFilters,\n    onDetailsClick,\n    onConnectionsClick,\n    onCreate,\n    onDelete,\n    onChangeOwner,\n    onQuickstartGuide,\n  } = useKafkaInstancesTable({\n    instancesHref,\n    instanceDeletionHref,\n    instanceSelectedHref,\n    instanceCreationHref,\n    instanceChangeOwnerHref,\n  });\n\n  const { data } = useKafkas({\n    page,\n    perPage,\n    name: namesChips.chips,\n    owner: ownersChips.chips,\n    status: statusesChips.chips,\n    sort: sort || \"createdAt\",\n    direction: sortDirection,\n    deployment: \"standard\",\n  });\n\n  return (\n    <>\n      <ConnectedControlPlaneHeader activeSection={activeSection} />\n      <KafkaInstances\n        columns={\"standard\"}\n        instances={data?.instances}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        names={namesChips.chips}\n        owners={ownersChips.chips}\n        statuses={statusesChips.chips}\n        isColumnSortable={isColumnSortable}\n        onPageChange={setPagination}\n        onSearchName={namesChips.add}\n        onRemoveNameChip={namesChips.remove}\n        onRemoveNameChips={namesChips.clear}\n        onSearchOwner={ownersChips.add}\n        onRemoveOwnerChip={ownersChips.remove}\n        onRemoveOwnerChips={ownersChips.clear}\n        onSearchStatus={statusesChips.toggle}\n        onRemoveStatusChip={statusesChips.remove}\n        onRemoveStatusChips={statusesChips.clear}\n        onClearAllFilters={onClearAllFilters}\n        onChangeOwner={onChangeOwner}\n        onDelete={onDelete}\n        onCreate={onCreate}\n        isRowSelected={({ row }) => row.id === selectedInstance}\n        getUrlForInstance={getUrlForInstance}\n        onDetails={onDetailsClick}\n        onConnection={onConnectionsClick}\n        onClickConnectionTabLink={() => {\n          /* TODO */\n        }}\n        onClickSupportLink={() => {\n          /* TODO */\n        }}\n        onInstanceLinkClick={() => {\n          /* TODO */\n        }}\n        onQuickstartGuide={onQuickstartGuide}\n        canHaveInstanceLink={({ status }) => ReadyStatuses.includes(status)}\n        canOpenConnection={({ status }) => ReadyStatuses.includes(status)}\n        canChangeOwner={() => true}\n        canDelete={() => true}\n      />\n    </>\n  );\n};\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport { useCreateKafkaMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { CreateKafkaInstanceServices } from \"ui\";\nimport { CreateKafkaInstance } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { ControlPlaneRouteRoot } from \"../routesConsts\";\nimport { useCreateKafkaCallbacks } from \"./useCreateKafkaCallbacks\";\n\nexport const CreateKafkaInstanceRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const callbacks = useCreateKafkaCallbacks();\n  const createKafkaInstance = useCreateKafkaMutation();\n  const qsContext = useContext(QuickStartContext);\n\n  const onClickKafkaOverview = () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`overview`);\n  };\n\n  const onClickQuickStart = useCallback(() => {\n    qsContext.setActiveQuickStart &&\n      qsContext.setActiveQuickStart(\"getting-started\");\n  }, [qsContext]);\n\n  const onCreate = useCallback<CreateKafkaInstanceServices[\"onCreate\"]>(\n    function (instance, onSuccess, onError) {\n      const onOnSuccess = () => {\n        onSuccess();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.push(ControlPlaneRouteRoot);\n      };\n      void createKafkaInstance.mutateAsync({\n        instance,\n        onSuccess: onOnSuccess,\n        onError,\n      });\n    },\n    [createKafkaInstance, history]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  return (\n    <CreateKafkaInstance\n      {...callbacks}\n      isModalOpen={true}\n      onCancel={onCancel}\n      onClickContactUs={onClickKafkaOverview}\n      onClickKafkaOverview={onClickKafkaOverview}\n      onClickQuickStart={onClickQuickStart}\n      onCreate={onCreate}\n      onLearnHowToAddStreamingUnits={onClickKafkaOverview}\n      onLearnMoreAboutSizes={onClickKafkaOverview}\n      subscriptionOptionsHref={document.location.href + \"/../overview\"}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport {\n  useDeveloperInstanceAvailabilityFetchQuery,\n  useProviderRegionSizesFetchQuery,\n  useProvidersWithRegionsFetchQuery,\n  useStandardQuotaFetchQuery,\n} from \"consoledot-api\";\nimport { useCallback } from \"react\";\nimport type { CreateKafkaInstanceProps, StandardSizes } from \"ui\";\n\nexport function useCreateKafkaCallbacks() {\n  const { auth } = useChrome();\n\n  const getUsername = useCallback(async () => {\n    const username = (await auth.getUser())?.identity.user?.username;\n    if (!username) {\n      return Promise.reject(\"Invalid user\");\n    }\n    return username;\n  }, [auth]);\n\n  const checkDeveloperAvailabilityQuery =\n    useDeveloperInstanceAvailabilityFetchQuery();\n\n  const standardQuotaQuery = useStandardQuotaFetchQuery(true);\n  const providersWithRegionsQuery = useProvidersWithRegionsFetchQuery();\n  const getProvidersInfo = useProvidersWithRegionsFetchQuery();\n  const getProviderRegionsSizes = useProviderRegionSizesFetchQuery();\n\n  const checkDeveloperAvailability = useCallback<\n    CreateKafkaInstanceProps[\"checkDeveloperAvailability\"]\n  >(\n    async ({ onAvailable, onUsed, onUnavailable }) => {\n      try {\n        const available = await checkDeveloperAvailabilityQuery(getUsername);\n\n        if (available) {\n          onAvailable();\n        } else {\n          onUsed();\n        }\n      } catch {\n        onUnavailable();\n      }\n    },\n    [checkDeveloperAvailabilityQuery, getUsername]\n  );\n\n  const checkStandardQuota = useCallback<\n    CreateKafkaInstanceProps[\"checkStandardQuota\"]\n  >(\n    async ({ onQuotaAvailable, onNoQuotaAvailable, onOutOfQuota }) => {\n      try {\n        const {\n          hasTrialQuota,\n          remainingPrepaidQuota,\n          remainingMarketplaceQuota,\n          marketplaceSubscriptions,\n        } = await standardQuotaQuery();\n\n        if (\n          remainingMarketplaceQuota !== undefined ||\n          remainingPrepaidQuota !== undefined\n        ) {\n          if (\n            (remainingMarketplaceQuota || 0) === 0 &&\n            (remainingPrepaidQuota || 0) === 0\n          ) {\n            onOutOfQuota({\n              quota: {\n                marketplaceSubscriptions,\n              },\n            });\n          } else {\n            onQuotaAvailable({\n              quota: {\n                remainingPrepaidQuota,\n                remainingMarketplaceQuota,\n                marketplaceSubscriptions,\n              },\n            });\n          }\n        } else {\n          onNoQuotaAvailable({ hasTrialQuota });\n        }\n      } catch (e) {\n        onNoQuotaAvailable({ hasTrialQuota: false });\n      }\n    },\n    [standardQuotaQuery]\n  );\n\n  const fetchProvidersWithRegions = useCallback<\n    CreateKafkaInstanceProps[\"fetchProvidersWithRegions\"]\n  >(\n    async (plan, { onAvailable, onUnavailable }) => {\n      try {\n        const providers = await providersWithRegionsQuery(plan);\n        onAvailable(providers);\n      } catch {\n        onUnavailable();\n      }\n    },\n    [providersWithRegionsQuery]\n  );\n\n  const getStandardSizes = useCallback<\n    CreateKafkaInstanceProps[\"getStandardSizes\"]\n  >(\n    async (provider, region) => {\n      const providersInfo = await getProvidersInfo(\"standard\");\n      const providerInfo = providersInfo.providers.find(\n        (p) => p.id === provider\n      );\n      if (!providerInfo) {\n        return Promise.reject(\"Invalid cloud provider\");\n      }\n      return getProviderRegionsSizes(providerInfo, region, \"standard\");\n    },\n    [getProviderRegionsSizes, getProvidersInfo]\n  );\n\n  const getTrialSizes = useCallback<CreateKafkaInstanceProps[\"getTrialSizes\"]>(\n    async (provider, region) => {\n      let standardSizes: StandardSizes;\n\n      try {\n        standardSizes = await getStandardSizes(provider, region);\n        if (standardSizes.length === 0) {\n          throw new Error(\"No standard sizes found\");\n        }\n      } catch {\n        // It can happen that the selected provider doesn't support standard instances.\n        // In this case we provide a faux sample list of sizes just to make the slider happy.\n        standardSizes = [\n          { id: \"1\", displayName: \"1\", quota: 1 },\n          { id: \"2\", displayName: \"2\", quota: 2 },\n        ] as StandardSizes;\n      }\n      const providersInfo = await getProvidersInfo(\"developer\");\n      const providerInfo = providersInfo.providers.find(\n        (p) => p.id === provider\n      );\n      if (!providerInfo) {\n        return Promise.reject(\"Invalid cloud provider\");\n      }\n      const trialSizes = await getProviderRegionsSizes(\n        providerInfo,\n        region,\n        \"developer\"\n      );\n      return {\n        standard: standardSizes,\n        trial: trialSizes[0],\n      };\n    },\n    [getProviderRegionsSizes, getProvidersInfo, getStandardSizes]\n  );\n  return {\n    checkDeveloperAvailability,\n    checkStandardQuota,\n    fetchProvidersWithRegions,\n    getStandardSizes,\n    getTrialSizes,\n  };\n}\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport { useCreateDedicatedKafkaMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateDedicatedKafkaInstance } from \"ui\";\nimport type { CreateDedicatedKafkaInstanceServices } from \"ui/src/components/CreateKafkaInstance/machines\";\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { DedicatedControlPlaneRouteRoot } from \"../routesConsts\";\nimport { useCreateDedicatedKafkaCallbacks } from \"./useCreateDedicatedKafkaCallbacks\";\n\nexport const CreateDedicatedKafkaInstanceRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const callbacks = useCreateDedicatedKafkaCallbacks();\n  const createDedicatedKafkaInstance = useCreateDedicatedKafkaMutation();\n  const qsContext = useContext(QuickStartContext);\n\n  const onClickKafkaOverview = () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`overview`);\n  };\n\n  const onClickQuickStart = useCallback(() => {\n    qsContext.setActiveQuickStart &&\n      qsContext.setActiveQuickStart(\"getting-started\");\n  }, [qsContext]);\n\n  const onCreate = useCallback<\n    CreateDedicatedKafkaInstanceServices[\"onCreate\"]\n  >(\n    function (instance, onSuccess, onError) {\n      const onOnSuccess = () => {\n        onSuccess();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.push(DedicatedControlPlaneRouteRoot);\n      };\n      void createDedicatedKafkaInstance.mutateAsync({\n        instance,\n        onSuccess: onOnSuccess,\n        onError,\n      });\n    },\n    [createDedicatedKafkaInstance, history]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  return (\n    <CreateDedicatedKafkaInstance\n      {...callbacks}\n      isModalOpen={true}\n      onCancel={onCancel}\n      onClickContactUs={onClickKafkaOverview}\n      onClickKafkaOverview={onClickKafkaOverview}\n      onClickQuickStart={onClickQuickStart}\n      onCreate={onCreate}\n      onLearnHowToAddStreamingUnits={onClickKafkaOverview}\n      onLearnMoreAboutSizes={onClickKafkaOverview}\n      subscriptionOptionsHref={document.location.href + \"/../overview\"}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import {\n  useDedicatedClustersFetchQuery,\n  useDedicatedClusterSizesFetchQuery,\n  useDedicatedQuotaFetchQuery,\n} from \"consoledot-api\";\nimport { useCallback } from \"react\";\nimport type { CreateDedicatedKafkaInstanceProps } from \"ui\";\n\nexport function useCreateDedicatedKafkaCallbacks() {\n  const dedicatedQuotaQuery = useDedicatedQuotaFetchQuery(true);\n  const dedicatedClustersQuery = useDedicatedClustersFetchQuery();\n  const dedicatedClusterSizesQuery = useDedicatedClusterSizesFetchQuery();\n\n  const checkDedicatedQuota = useCallback<\n    CreateDedicatedKafkaInstanceProps[\"checkDedicatedQuota\"]\n  >(\n    async ({ onQuotaAvailable, onNoQuotaAvailable, onOutOfQuota }) => {\n      try {\n        const { remainingDedicatedQuota } = await dedicatedQuotaQuery();\n\n        if (remainingDedicatedQuota !== undefined) {\n          if ((remainingDedicatedQuota || 0) === 0) {\n            onOutOfQuota({});\n          } else {\n            onQuotaAvailable({\n              quota: {\n                remainingDedicatedQuota,\n              },\n            });\n          }\n        } else {\n          onNoQuotaAvailable({});\n        }\n      } catch (e) {\n        onNoQuotaAvailable({});\n      }\n    },\n    [dedicatedQuotaQuery]\n  );\n\n  const fetchClusters = useCallback<\n    CreateDedicatedKafkaInstanceProps[\"fetchClusters\"]\n  >(\n    async (plan, { onAvailable, onUnavailable }) => {\n      try {\n        const { clusters } = await dedicatedClustersQuery();\n        onAvailable({\n          clusters,\n          defaultCluster: clusters.length > 0 ? clusters[0] : undefined,\n        });\n      } catch {\n        onUnavailable();\n      }\n    },\n    [dedicatedClustersQuery]\n  );\n\n  const getDedicatedSizes = useCallback<\n    CreateDedicatedKafkaInstanceProps[\"getDedicatedSizes\"]\n  >(\n    (cluster) => dedicatedClusterSizesQuery({ clusterId: cluster.id }),\n    [dedicatedClusterSizesQuery]\n  );\n\n  return {\n    checkDedicatedQuota,\n    fetchClusters,\n    getDedicatedSizes,\n  };\n}\n","import { useKafka } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { ControlPlaneRouteParams } from \"./routesConsts\";\nimport {\n  ControlPlaneRoutePath,\n  DedicatedControlPlaneRoutePath,\n} from \"./routesConsts\";\n\nexport function useControlPlaneGate() {\n  const standardMatch = useRouteMatch<ControlPlaneRouteParams>(\n    ControlPlaneRoutePath\n  );\n  const enterpriseMatch = useRouteMatch<ControlPlaneRouteParams>(\n    DedicatedControlPlaneRoutePath\n  );\n  const match = standardMatch || enterpriseMatch;\n  if (!match) {\n    throw Error(\"useControlPlaneGate used outside the expected route\");\n  }\n  const { data: instance } = useKafka(match.params.id, true);\n  return { instance: instance as NonNullable<typeof instance>, match };\n}\n","import { useDeleteKafkaMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteKafkaInstance } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { useControlPlaneGate } from \"../useControlPlaneGate\";\n\nexport const DeleteKafkaInstanceRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useControlPlaneGate();\n  const { mutateAsync, isLoading: isDeleting } = useDeleteKafkaMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      id: instance.id,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instancesHref);\n      },\n    });\n  }, [mutateAsync, history, instance?.id, instancesHref]);\n\n  return (\n    <DeleteKafkaInstance\n      isModalOpen={true}\n      isDeleting={isDeleting}\n      onCancel={onCancel}\n      onDelete={onDelete}\n      instanceName={\n        ReadyStatuses.includes(instance.status) ? instance.name : undefined\n      }\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useUpdateKafkaMutation, useUserAccounts } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { ChangeKafkaOwnerProps } from \"ui\";\nimport { ChangeKafkaOwner } from \"ui\";\n\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { useControlPlaneGate } from \"../useControlPlaneGate\";\n\nexport const ChangeOwnerRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useControlPlaneGate();\n  const { data: accounts } = useUserAccounts({});\n  const updateInstance = useUpdateKafkaMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  const onConfirm = useCallback(\n    (newOwner: string) => {\n      updateInstance.mutate(\n        {\n          id: instance.id,\n          updates: { owner: newOwner },\n        },\n        {\n          onSuccess: () => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            history.replace(instancesHref);\n          },\n        }\n      );\n    },\n    [history, instance.id, instancesHref, updateInstance]\n  );\n\n  const savingState = ((): ChangeKafkaOwnerProps[\"savingState\"] => {\n    if (updateInstance.isLoading) return \"saving\";\n    if (updateInstance.isError) {\n      return updateInstance.error.type === \"invalid-user\"\n        ? \"invalid-user\"\n        : \"unknown-error\";\n    }\n    return \"idle\";\n  })();\n\n  return (\n    <ChangeKafkaOwner\n      currentOwner={instance.owner}\n      accounts={accounts?.accounts.map((a) => ({\n        id: a.username,\n        displayName: a.displayName,\n      }))}\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n      savingState={savingState}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  CreateKafkaInstanceRoute,\n  DeleteKafkaInstanceRoute,\n  KafkaInstancesRoute,\n} from \"./routes\";\nimport { ChangeOwnerRoute } from \"./routes/ChangeOwnerRoute\";\nimport {\n  ControlPlaneChangeOwnerPath,\n  ControlPlaneDeleteInstancePath,\n  ControlPlaneNewInstancePath,\n  ControlPlaneRoutePath,\n  ControlPlaneRouteRoot,\n} from \"./routesConsts\";\n\nexport const ControlPlaneRoutes: VoidFunctionComponent = () => {\n  return (\n    <Route path={ControlPlaneRoutePath} exact>\n      <Route path={ControlPlaneNewInstancePath}>\n        <CreateKafkaInstanceRoute instancesHref={ControlPlaneRouteRoot} />\n      </Route>\n      <RedirectOnGateError redirectUrl={ControlPlaneRouteRoot}>\n        <Route path={ControlPlaneDeleteInstancePath}>\n          <DeleteKafkaInstanceRoute instancesHref={ControlPlaneRouteRoot} />\n        </Route>\n        <Route path={ControlPlaneChangeOwnerPath}>\n          <ChangeOwnerRoute instancesHref={ControlPlaneRouteRoot} />\n        </Route>\n      </RedirectOnGateError>\n      <KafkaInstancesRoute\n        activeSection={\"standard\"}\n        instancesHref={ControlPlaneRouteRoot}\n        instanceSelectedHref={(id) => `${ControlPlaneRouteRoot}/${id}`}\n        instanceCreationHref={`${ControlPlaneRouteRoot}/create`}\n        instanceDeletionHref={(id) => `${ControlPlaneRouteRoot}/${id}/delete`}\n        instanceChangeOwnerHref={(id) =>\n          `${ControlPlaneRouteRoot}/${id}/change-owner`\n        }\n        getUrlForInstance={(instance) =>\n          `${ControlPlaneRouteRoot}/${instance.id}/details`\n        }\n      />\n    </Route>\n  );\n};\n","import { useDedicatedClusters } from \"consoledot-api\";\nimport { useStandardQuota } from \"consoledot-api/src/queries/useStandardQuota\";\n\nexport function useDedicatedGate() {\n  const quota = useStandardQuota();\n  const dedicated = useDedicatedClusters({ refetch: false });\n\n  if (\n    dedicated.isSuccess &&\n    quota.data &&\n    quota.data.hasStandardQuota === false\n  ) {\n    return \"dedicated-only\" as const;\n  }\n\n  if (dedicated.isError) {\n    return \"standard-only\" as const;\n  }\n\n  if (!quota.isFetched && !dedicated.isFetched) {\n    return \"loading\" as const;\n  }\n\n  return \"standard-and-dedicated\" as const;\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { fetchOrganization, fetchStandardQuota } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useStandardQuota() {\n  const { refetchInterval } = useApiConfiguration();\n  const { account } = useApi();\n  const ams = account();\n\n  return useQuery({\n    queryKey: masQueries.quota.standardAvailable(),\n    queryFn: async () => {\n      const organization = await fetchOrganization((...args) =>\n        ams.apiAccountsMgmtV1CurrentAccountGet(...args)\n      );\n      if (!organization) {\n        return Promise.reject(\"Missing organization id\");\n      }\n      return fetchStandardQuota(\n        (...args) =>\n          ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(...args),\n        organization\n      );\n    },\n    refetchInterval,\n  });\n}\n","import { useDedicatedClusters } from \"consoledot-api\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { DedicatedClusters, EmptyStateNoDedicatedEntitlement } from \"ui\";\nimport { useDedicatedGate } from \"../../useDedicatedGate\";\nimport { ConnectedControlPlaneHeader } from \"./ConnectedControlPlaneHeader\";\n\nexport const DedicatedClustersRoute: FunctionComponent = () => {\n  const dedicatedGate = useDedicatedGate();\n  const noEntitlement = dedicatedGate === \"standard-only\";\n\n  if (noEntitlement) {\n    return (\n      <>\n        <ConnectedControlPlaneHeader activeSection={\"clusters\"} />\n        <EmptyStateNoDedicatedEntitlement\n          onQuickstartGuide={() => {\n            /* TODO */\n          }}\n        />\n      </>\n    );\n  }\n\n  return <DedicatedClustersWithEntitlementRoute />;\n};\n\nexport const DedicatedClustersWithEntitlementRoute: VoidFunctionComponent =\n  () => {\n    const { data } = useDedicatedClusters();\n\n    return (\n      <>\n        <ConnectedControlPlaneHeader activeSection={\"clusters\"} />\n        <DedicatedClusters\n          clusters={data?.clusters}\n          itemCount={data?.count}\n          page={1}\n          onPageChange={() => {\n            /* TODO */\n          }}\n          onQuickstartGuide={() => {\n            /* TODO */\n          }}\n        />\n      </>\n    );\n  };\n","import { useDedicatedClusters, useKafkas } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport type { ControlPlaneHeaderProps, KafkaInstancesProps } from \"ui\";\nimport {\n  EmptyStateNoDedicatedClusters,\n  EmptyStateNoDedicatedEntitlement,\n  KafkaInstances,\n} from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport { useDedicatedGate } from \"../../useDedicatedGate\";\nimport { ConnectedControlPlaneHeader } from \"./ConnectedControlPlaneHeader\";\nimport { useKafkaInstancesTable } from \"./useKafkaInstancesTable\";\n\nexport type KafkaInstancesRoute = {\n  activeSection: ControlPlaneHeaderProps[\"activeSection\"];\n  instancesHref: string;\n  instanceSelectedHref: (id: string) => string;\n  instanceCreationHref: string;\n  instanceDeletionHref: (id: string) => string;\n  instanceChangeOwnerHref: (id: string) => string;\n} & Pick<KafkaInstancesProps, \"getUrlForInstance\">;\n\nexport const DedicatedKafkaInstancesRoute: FunctionComponent<\n  KafkaInstancesRoute\n> = (props) => {\n  const dedicatedGate = useDedicatedGate();\n  const noEntitlement = dedicatedGate === \"standard-only\";\n\n  if (noEntitlement) {\n    return (\n      <>\n        <ConnectedControlPlaneHeader activeSection={props.activeSection} />\n        <EmptyStateNoDedicatedEntitlement\n          onQuickstartGuide={() => {\n            /* TODO */\n          }}\n        />\n      </>\n    );\n  }\n\n  return <DedicatedKafkaInstancesWithEntitlementRoute {...props} />;\n};\n\nexport const DedicatedKafkaInstancesWithEntitlementRoute: FunctionComponent<\n  KafkaInstancesRoute\n> = ({\n  activeSection,\n  instancesHref,\n  instanceDeletionHref,\n  instanceSelectedHref,\n  instanceCreationHref,\n  instanceChangeOwnerHref,\n  getUrlForInstance,\n}) => {\n  const {\n    selectedInstance,\n    page,\n    perPage,\n    setPagination,\n    namesChips,\n    ownersChips,\n    statusesChips,\n    isColumnSortable,\n    sort,\n    sortDirection,\n    onClearAllFilters,\n    onDetailsClick,\n    onConnectionsClick,\n    onCreate,\n    onDelete,\n    onChangeOwner,\n    onQuickstartGuide,\n  } = useKafkaInstancesTable({\n    instancesHref,\n    instanceDeletionHref,\n    instanceSelectedHref,\n    instanceCreationHref,\n    instanceChangeOwnerHref,\n  });\n  const dedicatedClusters = useDedicatedClusters();\n  const { data } = useKafkas({\n    page,\n    perPage,\n    name: namesChips.chips,\n    owner: ownersChips.chips,\n    status: statusesChips.chips,\n    sort: sort || \"createdAt\",\n    direction: sortDirection,\n    deployment: \"clusters\",\n  });\n\n  const hasReadyClusters = dedicatedClusters.isLoading\n    ? true // let's use the table default loading logic until we know if we have ready clusters\n    : (dedicatedClusters.data?.clusters || []).filter(\n        (c) => c.status === \"ready\"\n      ).length > 0;\n\n  return (\n    <>\n      <ConnectedControlPlaneHeader activeSection={activeSection} />\n      {hasReadyClusters ? (\n        <KafkaInstances\n          columns={\"dedicated\"}\n          instances={data?.instances}\n          itemCount={data?.count}\n          page={page}\n          perPage={perPage}\n          names={namesChips.chips}\n          owners={ownersChips.chips}\n          statuses={statusesChips.chips}\n          isColumnSortable={isColumnSortable}\n          onPageChange={setPagination}\n          onSearchName={namesChips.add}\n          onRemoveNameChip={namesChips.remove}\n          onRemoveNameChips={namesChips.clear}\n          onSearchOwner={ownersChips.add}\n          onRemoveOwnerChip={ownersChips.remove}\n          onRemoveOwnerChips={ownersChips.clear}\n          onSearchStatus={statusesChips.toggle}\n          onRemoveStatusChip={statusesChips.remove}\n          onRemoveStatusChips={statusesChips.clear}\n          onClearAllFilters={onClearAllFilters}\n          onChangeOwner={onChangeOwner}\n          onDelete={onDelete}\n          onCreate={onCreate}\n          isRowSelected={({ row }) => row.id === selectedInstance}\n          getUrlForInstance={getUrlForInstance}\n          onDetails={onDetailsClick}\n          onConnection={onConnectionsClick}\n          onClickConnectionTabLink={() => {\n            /* TODO */\n          }}\n          onClickSupportLink={() => {\n            /* TODO */\n          }}\n          onInstanceLinkClick={() => {\n            /* TODO */\n          }}\n          onQuickstartGuide={onQuickstartGuide}\n          canHaveInstanceLink={({ status }) => ReadyStatuses.includes(status)}\n          canOpenConnection={({ status }) => ReadyStatuses.includes(status)}\n          canChangeOwner={() => true}\n          canDelete={() => true}\n        />\n      ) : (\n        <EmptyStateNoDedicatedClusters onQuickstartGuide={onQuickstartGuide} />\n      )}\n    </>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  CreateDedicatedKafkaInstanceRoute,\n  DeleteKafkaInstanceRoute,\n} from \"./routes\";\nimport { ChangeOwnerRoute } from \"./routes/ChangeOwnerRoute\";\nimport { DedicatedClustersRoute } from \"./routes/DedicatedClustersRoute\";\nimport { DedicatedKafkaInstancesRoute } from \"./routes/DedicatedKafkaInstancesRoute\";\nimport {\n  DedicatedControlPlaneChangeOwnerPath,\n  DedicatedControlPlaneClustersPath,\n  DedicatedControlPlaneDeleteInstancePath,\n  DedicatedControlPlaneNewInstancePath,\n  DedicatedControlPlaneRoutePath,\n  DedicatedControlPlaneRouteRoot,\n} from \"./routesConsts\";\n\nexport const DedicatedControlPlaneRoutes: VoidFunctionComponent = () => {\n  return (\n    <Route path={DedicatedControlPlaneRoutePath}>\n      <Route path={DedicatedControlPlaneNewInstancePath}>\n        <CreateDedicatedKafkaInstanceRoute\n          instancesHref={DedicatedControlPlaneRouteRoot}\n        />\n      </Route>\n      <RedirectOnGateError redirectUrl={DedicatedControlPlaneRoutePath}>\n        <Route path={DedicatedControlPlaneDeleteInstancePath}>\n          <DeleteKafkaInstanceRoute\n            instancesHref={DedicatedControlPlaneRouteRoot}\n          />\n        </Route>\n        <Route path={DedicatedControlPlaneChangeOwnerPath}>\n          <ChangeOwnerRoute instancesHref={DedicatedControlPlaneRouteRoot} />\n        </Route>\n      </RedirectOnGateError>\n\n      <Switch>\n        <Route path={DedicatedControlPlaneClustersPath}>\n          <DedicatedClustersRoute />\n        </Route>\n\n        <Route path={DedicatedControlPlaneRoutePath} exact>\n          <DedicatedKafkaInstancesRoute\n            activeSection={\"dedicated\"}\n            instancesHref={DedicatedControlPlaneRouteRoot}\n            instanceSelectedHref={(id) =>\n              `${DedicatedControlPlaneRouteRoot}/${id}`\n            }\n            instanceCreationHref={`${DedicatedControlPlaneRouteRoot}/create`}\n            instanceDeletionHref={(id) =>\n              `${DedicatedControlPlaneRouteRoot}/${id}/delete`\n            }\n            instanceChangeOwnerHref={(id) =>\n              `${DedicatedControlPlaneRouteRoot}/${id}/change-owner`\n            }\n            getUrlForInstance={(instance) =>\n              `${DedicatedControlPlaneRouteRoot}/${instance.id}/details`\n            }\n          />\n        </Route>\n      </Switch>\n    </Route>\n  );\n};\n","import type { ControlPlaneNavigationProps } from \"../control-plane/routesConsts\";\n\nexport const DataPlaneRoutePath = (root: string) =>\n  `${root}/:id/details` as const;\n\nexport const DataPlaneTopicRoutePath = (root: string) =>\n  `${root}/:id/details/topics/:topicName` as const;\n\nexport const DataPlaneConsumerGroupRoutePath = (root: string) =>\n  `${root}/:id/details/consumer-groups/:consumerGroupId` as const;\n\nexport const DataPlaneTopicConsumerGroupRoutePath = (root: string) =>\n  `${root}/:id/details/topics/:topicName/consumer-groups/:consumerGroupId` as const;\n\nexport const DataPlanePermissionsRoutePath = (root: string) =>\n  `${root}/:id/details/acls/select-account/:selectedAccount` as const;\n\nexport const DataPlaneSelectAccountsRoutePath = (root: string) =>\n  `${root}/:id/details/acls/select-account` as const;\n\nexport const DataPlanePermissionsTableRoutePath = (root: string) =>\n  `${root}/:id/details/acls` as const;\n\nexport type DataPlaneRouteParams = { id: string };\nexport type DataPlaneTopicRouteParams = { id: string; topicName: string };\nexport type DataPlaneConsumerGroupRouteParams = {\n  id: string;\n  consumerGroupId: string;\n};\n\nexport type DataPlaneTopicConsumerRouteParams = {\n  id: string;\n  topicName: string;\n  consumerGroupId: string;\n};\n\nexport type DataPlanePermissionsRouteParams = {\n  selectedAccount: string;\n};\n\nexport type DataPlaneNavigationProps = {\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneTopicNavigationProps = {\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n  topicHref: (instanceId: string, topicName: string) => string;\n  deleteTopicHref: (instanceId: string, topicName: string) => string;\n  updateTopicHref: (instanceId: string, topicName: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneConsumerGroupNavigationsProps = {\n  instanceTopicsHref: (instanceId: string) => string;\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n  viewPartitionConsumerGroupHref: (\n    instanceId: string,\n    consumerGroupId: string\n  ) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneTopicConsumerGroupNavigationsProps = {\n  instanceTopicConsumerGroupsHref: (\n    instanceId: string,\n    topicName: string\n  ) => string;\n  viewTopicPartitionConsumerGroupHref: (\n    instanceId: string,\n    consumerGroupId: string,\n    topicName: string\n  ) => string;\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlanePermissionsNavigationProps = {\n  managePermissionsHref: (instanceId: string) => string;\n  editPermissionsHref: (instanceId: string, selectedAccount: string) => string;\n} & ControlPlaneNavigationProps;\n","import { useKafka } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../control-plane/routesConsts\";\nimport type { DataPlaneRouteParams } from \"./routesConsts\";\nimport { DataPlaneRoutePath } from \"./routesConsts\";\n\nexport function useDataPlaneGate() {\n  const standardMatch = useRouteMatch<DataPlaneRouteParams>(\n    DataPlaneRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlaneRouteParams>(\n    DataPlaneRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"useDataPlaneGate used outside the expected route\");\n  }\n  const { data: instance } = useKafka(match.params.id, true);\n  return { instance: instance as NonNullable<typeof instance>, match };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlaneHeaderProps } from \"ui\";\nimport { DataPlaneHeader } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport { useDrawer } from \"../../control-plane\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\n\nexport const DataPlaneHeaderConnected: VoidFunctionComponent<\n  ControlPlaneNavigationProps & Pick<DataPlaneHeaderProps, \"activeSection\">\n> = ({ instancesHref, activeSection }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveTab, toggleExpanded } = useDrawer();\n\n  const {\n    instance,\n    match: { url },\n  } = useDataPlaneGate();\n\n  const sectionsHref = {\n    dashboard: `${url}/dashboard`,\n    topics: `${url}/topics`,\n    consumer: `${url}/consumer-groups`,\n    permissions: `${url}/acls`,\n    settings: `${url}/settings`,\n  };\n\n  const onDelete = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/delete`);\n  }, [history, instance, instancesHref]);\n\n  return (\n    <DataPlaneHeader\n      instancesHref={instancesHref}\n      instanceName={instance?.name || \"\"}\n      activeSection={activeSection}\n      sectionsHref={sectionsHref}\n      onDetails={() => {\n        setActiveTab(\"details\");\n        toggleExpanded(true);\n      }}\n      onConnection={() => {\n        setActiveTab(\"connections\");\n        toggleExpanded(true);\n      }}\n      canOpenConnection={\n        instance ? ReadyStatuses.includes(instance?.status) : false\n      }\n      canChangeOwner={true /* TODO */}\n      onChangeOwner={() => false /* TODO */}\n      canDelete={true /* TODO */}\n      onDelete={onDelete}\n    />\n  );\n};\n","import { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { usePaginationSearchParams } from \"@rhoas/app-services-ui-components\";\nimport {\n  useAcls,\n  useDeletePermissionsMutation,\n  useServiceAccounts,\n  useUserAccounts,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport type { Account } from \"ui\";\nimport { PermissionsTable, PrincipalType } from \"ui\";\nimport type { DataPlanePermissionsNavigationProps } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const AclsRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ instancesHref, managePermissionsHref, editPermissionsHref }) => {\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const { instance } = useDataPlaneGate();\n  const { mutateAsync } = useDeletePermissionsMutation();\n  const dispatch = useDispatch();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { data: acls } = useAcls({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    page,\n    perPage,\n  });\n\n  const { data: accounts } = useUserAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: serviceAccounts } = useServiceAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const userAccounts: Account[] | undefined = accounts?.accounts.map(\n    (userAccount) => {\n      return {\n        id: userAccount.username,\n        displayName: userAccount.displayName,\n        email: userAccount.email,\n        principalType: PrincipalType.UserAccount,\n      };\n    }\n  );\n\n  const serviceAccountList: Account[] | undefined =\n    serviceAccounts?.serviceAccounts.map((serviceAccount) => {\n      return {\n        id: serviceAccount.id,\n        displayName: serviceAccount.displayName,\n        principalType: PrincipalType.ServiceAccount,\n      };\n    });\n\n  const allAccounts =\n    serviceAccountList != undefined && userAccounts != undefined\n      ? [...serviceAccountList, ...userAccounts]\n      : undefined;\n\n  const onDeleteSelected = useCallback(\n    (rowIndex: number[]) => {\n      rowIndex.map((value) => {\n        const rowToDelete = acls?.groups[value];\n        void mutateAsync({\n          instanceId: instance.id,\n          adminUrl: instance.adminUrl || \"\",\n          acl: {\n            patternType: rowToDelete?.resource.patternType,\n            permissionType: rowToDelete?.permission.permission,\n            principal: rowToDelete?.account,\n            resourceName: rowToDelete?.resource.resourceName,\n            operation: rowToDelete?.permission.operation,\n            resourceType: rowToDelete?.resource.resourceType,\n          },\n          onError: (_, message) => {\n            dispatch(\n              addNotification({\n                variant: \"danger\",\n                title: message,\n                dismissable: true,\n                id: \"delete-error\",\n              })\n            );\n          },\n          onSuccess: () => {\n            //We have no action yet to confirm if delete was successfull.\n          },\n        });\n      });\n    },\n    [acls?.groups, mutateAsync, instance.id, instance.adminUrl, dispatch]\n  );\n\n  const onDelete = useCallback(\n    (rowIndex: number) => {\n      const rowToDelete = acls?.groups[rowIndex];\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl || \"\",\n        acl: {\n          patternType: rowToDelete?.resource.patternType,\n          permissionType: rowToDelete?.permission.permission,\n          principal: rowToDelete?.account,\n          resourceName: rowToDelete?.resource.resourceName,\n          operation: rowToDelete?.permission.operation,\n          resourceType: rowToDelete?.resource.resourceType,\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"delete-error\",\n            })\n          );\n        },\n        onSuccess: () => {\n          // No action\n        },\n      });\n    },\n    [acls?.groups, mutateAsync, instance.id, instance.adminUrl, dispatch]\n  );\n\n  const onManagePermissionsActionItem = useCallback(\n    (account: string) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(editPermissionsHref(instance.id, account));\n    },\n    [editPermissionsHref, history, instance.id]\n  );\n  const onManagePermission = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"permissions\"}\n      />\n\n      <PermissionsTable\n        allAccounts={allAccounts}\n        permissions={acls?.groups}\n        onDelete={onDelete}\n        onDeleteSelected={onDeleteSelected}\n        onManagePermissions={onManagePermission}\n        onPerPageChange={setPaginationQuery}\n        itemCount={acls?.count}\n        page={page}\n        perPage={perPage}\n        onPageChange={setPagination}\n        onManagePermissionsActionItem={onManagePermissionsActionItem}\n      />\n    </>\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport { KafkaTopicsSortableColumns, useTopics } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { KafkaTopics, useTopicLabels } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const TopicsRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const labels = useTopicLabels();\n\n  const { instance } = useDataPlaneGate();\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const topicChips = useURLSearchParamsChips(\"topic\", resetPaginationQuery);\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaTopicsSortableColumns,\n    labels.fields\n  );\n  const { data } = useTopics({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    filter: topicChips.chips[0],\n    plan: instance.plan,\n  });\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"topics\"}\n      />\n      <KafkaTopics\n        topics={data?.topics}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        topicName={topicChips.chips}\n        getUrlFortopic={(row) => `./topics/${row.name}`}\n        isColumnSortable={isColumnSortable}\n        onDelete={() => {\n          /* TODO */\n        }}\n        onEdit={() => {\n          /* TODO */\n        }}\n        onSearchTopic={(value) => {\n          topicChips.clear();\n          topicChips.toggle(value);\n        }}\n        onClearAllFilters={topicChips.clear}\n        onCreateTopic={() => {\n          /* TODO */\n        }}\n        onPageChange={setPagination}\n        onRemoveTopicChip={topicChips.clear}\n        onRemoveTopicChips={topicChips.clear}\n        onTopicLinkClick={() => {\n          /* TODO */\n        }}\n      />\n    </>\n  );\n};\n","import { useUpdateKafkaMutation } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { SettingsProps } from \"ui\";\nimport { Settings as SettingsComp } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const SettingsRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const { instance } = useDataPlaneGate();\n  const updateInstance = useUpdateKafkaMutation();\n\n  const onSubmitReAuthentication = useCallback<\n    SettingsProps[\"onSubmitReAuthentication\"]\n  >(\n    async (reauthenticationEnabled) => {\n      try {\n        await updateInstance.mutateAsync({\n          id: instance.id,\n          updates: { reauthentication_enabled: reauthenticationEnabled },\n        });\n        return reauthenticationEnabled;\n      } catch {\n        return instance.request.reauthentication_enabled;\n      }\n    },\n    [instance, updateInstance]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"settings\"}\n      />\n      <SettingsComp\n        onSubmitReAuthentication={onSubmitReAuthentication}\n        reauthenticationEnabled={instance.request.reauthentication_enabled}\n      />\n    </>\n  );\n};\n","import {\n  useKafkaFetchQuery,\n  useKafkaKpisFetchQuery,\n  useKafkaMetricsFetchQuery,\n  useTopicsFetchQuery,\n  useTopicsMetricsFetchQuery,\n} from \"consoledot-api\";\nimport {\n  metricsDismissLagAlerts,\n  metricsIsLagAlertsDismissed,\n} from \"local-storage-helpers\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport type { MetricsProps } from \"ui\";\nimport { Metrics } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const DashboardRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const {\n    instance,\n    match: { params },\n  } = useDataPlaneGate();\n  const [hasUserAlreadyClosedAlert, setHasUserAlreadyClosedAlert] = useState(\n    metricsIsLagAlertsDismissed()\n  );\n\n  const onAlertClose = useCallback(() => {\n    setHasUserAlreadyClosedAlert(true);\n    metricsDismissLagAlerts();\n  }, []);\n\n  const queryInstance = useKafkaFetchQuery();\n  const queryKpisMetrics = useKafkaKpisFetchQuery();\n  const queryInstanceMetrics = useKafkaMetricsFetchQuery();\n  const queryTopicMetrics = useTopicsMetricsFetchQuery();\n  const queryTopics = useTopicsFetchQuery();\n\n  const getMetricsKpi: MetricsProps[\"getMetricsKpi\"] = useCallback(async () => {\n    const kpis = await queryKpisMetrics(params.id);\n    return {\n      ...kpis,\n      topicPartitionsLimit: instance.maxPartitions || 0,\n    };\n  }, [instance, params.id, queryKpisMetrics]);\n\n  const getKafkaInstanceMetrics: MetricsProps[\"getKafkaInstanceMetrics\"] =\n    useCallback(\n      async ({ interval, duration }) => {\n        const [instance, metrics] = await Promise.all([\n          queryInstance(params.id),\n          queryInstanceMetrics({ id: params.id, duration, interval }),\n        ]);\n        if (!instance) {\n          return Promise.reject(\"Can't retrieve instance\");\n        }\n        return {\n          ...metrics,\n          diskSpaceLimit:\n            (instance.request.max_data_retention_size?.bytes || 0) / 1073741824,\n          connectionsLimit: instance.connections || 0,\n          connectionRateLimit: instance.connectionRate || 0,\n        };\n      },\n      [params.id, queryInstance, queryInstanceMetrics]\n    );\n\n  const getTopicsMetrics: MetricsProps[\"getTopicsMetrics\"] = useCallback(\n    async ({ interval, duration, selectedTopic }) => {\n      const [instance, metrics] = await Promise.all([\n        queryInstance(params.id),\n        queryTopicMetrics({ id: params.id, duration, interval, selectedTopic }),\n      ]);\n      if (!instance || !instance.adminUrl) {\n        return Promise.reject(\"Can't retrieve instance\");\n      }\n      const kafkaTopics = (\n        await queryTopics({\n          id: instance.id,\n          adminUrl: instance.adminUrl,\n          page: 1,\n          perPage: 1000,\n          plan: instance.plan,\n        })\n      ).topics.map((t) => t.name);\n      return {\n        ...metrics,\n        kafkaTopics,\n      };\n    },\n    [params.id, queryInstance, queryTopicMetrics, queryTopics]\n  );\n\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"dashboard\"}\n      />\n      <Metrics\n        onCreateTopic={() => {\n          /* TODO */\n        }}\n        onAlertClose={onAlertClose}\n        hasUserAlreadyClosedAlert={hasUserAlreadyClosedAlert}\n        getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n        getTopicsMetrics={getTopicsMetrics}\n        getMetricsKpi={getMetricsKpi}\n      />\n    </>\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaConsumerGroupSortableColumns,\n  useConsumerGroups,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroups, useConsumerGroupLabels } from \"ui\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const ConsumerGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instancesHref, instanceConsumerGroupsHref }) => {\n  const { instance } = useDataPlaneGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const labels = useConsumerGroupLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const name = labels.fields.groupId;\n\n  const consumerName = useURLSearchParamsChips(\n    \"consumer\",\n    resetPaginationQuery\n  );\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaConsumerGroupSortableColumns,\n    { name }\n  );\n  const { data } = useConsumerGroups({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    groupId: consumerName.chips[0],\n  });\n\n  const onDeletConsumerGroup = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/delete`\n      );\n    },\n    [history, instance.id, instanceConsumerGroupsHref]\n  );\n\n  const onViewPartition = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/view-partition`\n      );\n    },\n    [history, instance.id, instanceConsumerGroupsHref]\n  );\n\n  const onClickResetOffset = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/reset-offset`\n      );\n    },\n    [history, instance.id, instanceConsumerGroupsHref]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"consumer\"}\n      />\n      <ConsumerGroups\n        consumers={data?.groups}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        consumerName={consumerName.chips}\n        isRowSelected={() => false}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeletConsumerGroup(row.groupId)}\n        onSearchConsumer={(value) => {\n          consumerName.clear();\n          consumerName.toggle(value);\n        }}\n        onClearAllFilters={consumerName.clear}\n        onPageChange={setPagination}\n        onRemoveConsumerChip={consumerName.clear}\n        onRemoveConsumerChips={consumerName.clear}\n        onViewPartition={(row) => onViewPartition(row.groupId)}\n        onViewResetOffset={(row) => onClickResetOffset(row.groupId)}\n      />\n    </>\n  );\n};\n","import { useTopic } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../control-plane/routesConsts\";\nimport type { DataPlaneTopicRouteParams } from \"./routesConsts\";\nimport { DataPlaneTopicRoutePath } from \"./routesConsts\";\nimport { useDataPlaneGate } from \"./useDataPlaneGate\";\n\nexport function useTopicGate() {\n  const { instance } = useDataPlaneGate();\n  const standardMatch = useRouteMatch<DataPlaneTopicRouteParams>(\n    DataPlaneTopicRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlaneTopicRouteParams>(\n    DataPlaneTopicRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"useDataPlaneGate used outside the expected route\");\n  }\n  const { data: topic } = useTopic(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      topicName: match.params.topicName,\n      plan: instance.plan,\n    },\n    true\n  );\n\n  return {\n    instance,\n    topic: topic as NonNullable<typeof topic>,\n    match,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlaneTopicHeaderProps } from \"ui\";\nimport { DataPlaneTopicHeader } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport { useDrawer } from \"../../control-plane\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\n\nexport const DataPlaneTopicHeaderConnected: VoidFunctionComponent<\n  DataPlaneNavigationProps & Pick<DataPlaneTopicHeaderProps, \"activeSection\">\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  activeSection,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveTab, toggleExpanded } = useDrawer();\n  const {\n    instance,\n    topic,\n    match: { url },\n  } = useTopicGate();\n\n  const tabsHref = {\n    consumer: `${url}/consumer-groups`,\n    messages: `${url}/messages`,\n    properties: `${url}/properties`,\n    schemas: `${url}/schemas`,\n  };\n\n  const onDelete = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/delete`);\n  }, [history, instance, instancesHref]);\n\n  return (\n    <DataPlaneTopicHeader\n      instancesHref={instancesHref}\n      instanceName={instance.name}\n      instanceDetailHref={instanceDetailsHref(instance.id)}\n      instanceTopicsHref={instanceTopicsHref(instance.id)}\n      activeSection={activeSection}\n      topicName={topic.name}\n      tabsHref={tabsHref}\n      onDetails={() => {\n        setActiveTab(\"details\");\n        toggleExpanded(true);\n      }}\n      onConnection={() => {\n        setActiveTab(\"connections\");\n        toggleExpanded(true);\n      }}\n      canOpenConnection={\n        instance ? ReadyStatuses.includes(instance?.status) : false\n      }\n      canChangeOwner={true /* TODO */}\n      onChangeOwner={() => false /* TODO */}\n      canDelete={true /* TODO */}\n      onDelete={onDelete}\n    />\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaConsumerGroupSortableColumns,\n  useConsumerGroups,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroups, useConsumerGroupLabels } from \"ui\";\nimport { ControlPlaneRouteRoot } from \"../../control-plane/routesConsts\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicConsumerGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const { instance, topic } = useTopicGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const labels = useConsumerGroupLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const name = labels.fields.groupId;\n\n  const consumerName = useURLSearchParamsChips(\n    \"consumer\",\n    resetPaginationQuery\n  );\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaConsumerGroupSortableColumns,\n    { name }\n  );\n\n  const { data } = useConsumerGroups({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    groupId: consumerName.chips[0],\n    topic: topic.name,\n  });\n\n  const onDeletConsumerGroup = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/delete`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  const onViewPartition = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/view-partition`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  const onClickResetOffset = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/reset-offset`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"consumer\"}\n      />\n      <ConsumerGroups\n        consumers={data?.groups}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        consumerName={consumerName.chips}\n        isRowSelected={() => false}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeletConsumerGroup(row.groupId)}\n        onSearchConsumer={(value) => {\n          consumerName.clear();\n          consumerName.toggle(value);\n        }}\n        onClearAllFilters={consumerName.clear}\n        onPageChange={setPagination}\n        onRemoveConsumerChip={consumerName.clear}\n        onRemoveConsumerChips={consumerName.clear}\n        onViewPartition={(row) => onViewPartition(row.groupId)}\n        onViewResetOffset={(row) => onClickResetOffset(row.groupId)}\n      />\n    </>\n  );\n};\n","import { useMessagesFetchQuery } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { KafkaMessageBrowserProps } from \"ui\";\nimport { KafkaMessageBrowser } from \"ui\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicMessagesGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const { instance, topic } = useTopicGate();\n  const kafkaTopicMessagesFetchQuery = useMessagesFetchQuery();\n\n  const getMessages = useCallback<KafkaMessageBrowserProps[\"getMessages\"]>(\n    async (params) => {\n      if (!instance.adminUrl) {\n        throw Error(\"Invalid instance adminUrl\");\n      }\n      const messages = await kafkaTopicMessagesFetchQuery({\n        ...params,\n        id: instance.id,\n        adminUrl: instance.adminUrl,\n        topicName: topic.name,\n      });\n      return {\n        messages,\n        partitions: topic.partitions.length,\n      };\n    },\n    [\n      instance.adminUrl,\n      instance.id,\n      kafkaTopicMessagesFetchQuery,\n      topic.name,\n      topic.partitions.length,\n    ]\n  );\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"messages\"}\n      />\n      <KafkaMessageBrowser getMessages={getMessages} />\n    </>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { TopicProperties } from \"ui\";\nimport type { DataPlaneTopicNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicPropertiesRoute: VoidFunctionComponent<\n  DataPlaneTopicNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instanceConsumerGroupsHref,\n  instancesHref,\n  deleteTopicHref,\n  updateTopicHref,\n}) => {\n  const { instance, topic } = useTopicGate();\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"properties\"}\n      />\n      <TopicProperties\n        topic={topic}\n        deleteTopicHref={deleteTopicHref(instance.id, topic.name)}\n        updateTopicHref={updateTopicHref(instance.id, topic.name)}\n      />\n    </>\n  );\n};\n","/* eslint-disable */\n// @ts-nocheck\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { I18nProvider } from \"@rhoas/app-services-ui-components\";\nimport type { Auth, Config } from \"@rhoas/app-services-ui-shared\";\nimport { AuthContext, ConfigContext } from \"@rhoas/app-services-ui-shared\";\n/* tslint:disable */\nimport type { Registry } from \"@rhoas/registry-management-sdk\";\nimport type { ScalprumComponentProps } from \"@scalprum/react-core\";\nimport { ScalprumComponent } from \"@scalprum/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicSchemasRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const chrome = useChrome();\n  const { topic } = useTopicGate();\n  const processor = (([_, m]: [string, { entry: string[] }]) =>\n    m.entry.map(\n      (e) => `/beta/apps/srs-ui-build${e}`\n    )) as unknown as ScalprumComponentProps[\"processor\"];\n  const processor2 = (([_, m]: [string, { entry: string[] }]) =>\n    m.entry.map(\n      (e) => `/beta/apps/sr-ui-build${e}`\n    )) as unknown as ScalprumComponentProps[\"processor\"];\n  const basename = \"/service-registry\";\n  const auth: Auth = {\n    srs: { getToken: chrome.auth.getToken },\n  };\n  const config: Config = {\n    srs: { apiBasePath: process.env.API_URL },\n  };\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"schemas\"}\n      />\n      <AuthContext.Provider value={auth}>\n        <ConfigContext.Provider value={config}>\n          <I18nProvider\n            lng={\"en\"}\n            resources={{\n              en: {\n                common: () =>\n                  import(\n                    \"@rhoas/app-services-ui-components/locales/en/common.json\"\n                  ),\n                \"service-registry\": () =>\n                  import(\n                    \"@rhoas/app-services-ui-components/locales/en/service-registry.json\"\n                  ),\n                srsTemporaryFixMe: () => import(\"./srs-locales.json\"),\n              },\n            }}\n            debug={true}\n          >\n            <ScalprumComponent\n              appName=\"srs\"\n              module=\"./ServiceRegistryMapping\"\n              scope=\"srs\"\n              ErrorComponent={<div>opsie</div>}\n              processor={processor}\n              basename={basename}\n              topicName={topic.name}\n              renderSchema={(registry: Registry) => {\n                return (\n                  <ScalprumComponent\n                    appName=\"ar\"\n                    scope=\"ar\"\n                    ErrorComponent={<div>opsie</div>}\n                    processor={processor2}\n                    module=\"./FederatedSchemaMapping\"\n                    registry={registry}\n                    topicName={topic.name}\n                    groupId={null}\n                    version={\"latest\"}\n                    registryId={registry?.id}\n                    basename={basename}\n                  />\n                );\n              }}\n            />\n          </I18nProvider>\n        </ConfigContext.Provider>\n      </AuthContext.Provider>\n    </>\n  );\n};\n","import { useConsumerGroup } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../control-plane/routesConsts\";\nimport type { DataPlaneConsumerGroupRouteParams } from \"./routesConsts\";\nimport { DataPlaneConsumerGroupRoutePath } from \"./routesConsts\";\nimport { useDataPlaneGate } from \"./useDataPlaneGate\";\n\nexport function useConsumerGroupGate() {\n  const { instance } = useDataPlaneGate();\n  const standardMatch = useRouteMatch<DataPlaneConsumerGroupRouteParams>(\n    DataPlaneConsumerGroupRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlaneConsumerGroupRouteParams>(\n    DataPlaneConsumerGroupRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"useConsumerGroupGate used outside the expected route\");\n  }\n  const { data: consumerGroup } = useConsumerGroup(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      consumerGroupId: match.params.consumerGroupId,\n    },\n    true\n  );\n\n  return {\n    instance,\n    consumerGroup: consumerGroup as NonNullable<typeof consumerGroup>,\n    match,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteConsumerGroup } from \"ui\";\nimport { useDeleteConsumerGroupMutation } from \"consoledot-api\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\n\nexport const ConsumerGroupDeleteRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({ instanceConsumerGroupsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  const { mutateAsync } = useDeleteConsumerGroupMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl!,\n      consumerGroupId: consumerGroup.groupId,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceConsumerGroupsHref(instance.id));\n      },\n    });\n  }, [\n    mutateAsync,\n    history,\n    instance?.id,\n    instanceConsumerGroupsHref,\n    consumerGroup.groupId,\n    instance.adminUrl,\n  ]);\n\n  return (\n    <DeleteConsumerGroup\n      isModalOpen={true}\n      onClose={onCancel}\n      onDeleteConsumer={onDelete}\n      state={consumerGroup.state}\n      consumerName={consumerGroup.groupId}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupResetOffset } from \"ui\";\nimport type { OffsetValue } from \"ui\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useResetConsumerGroupMutation } from \"consoledot-api\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\n\nexport const ConsumerGroupResetOffsetRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({ instanceConsumerGroupsHref }) => {\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  const { mutateAsync } = useResetConsumerGroupMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const getTopics = () => {\n    const topics = (consumerGroup.consumers || []).map(\n      (consumer) => consumer.topic\n    );\n    const distinctTopics = Array.from(new Set(topics));\n    return distinctTopics;\n  };\n\n  const onConfirmResetOffset = useCallback(\n    (\n      topic: string,\n      offset: OffsetValue,\n      partitions: number[],\n      customOffsetValue: string\n    ) => {\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl!,\n        consumerGroupId: consumerGroup.groupId,\n        topic: topic,\n        offset: offset,\n        partitions: partitions,\n        value: customOffsetValue,\n        onError: () => {\n          // TODO: alert\n        },\n        onSuccess: () => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.replace(instanceConsumerGroupsHref(instance.id));\n        },\n      });\n    },\n    [\n      mutateAsync,\n      history,\n      instance?.id,\n      instanceConsumerGroupsHref,\n      instance.adminUrl,\n      consumerGroup.groupId,\n    ]\n  );\n\n  return (\n    <ConsumerGroupResetOffset\n      isModalOpen={true}\n      state={consumerGroup.state}\n      groupId={consumerGroup.groupId}\n      topics={getTopics()}\n      consumers={consumerGroup.consumers}\n      onClickClose={onCancel}\n      onClickResetOffset={onConfirmResetOffset}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroupDrawer } from \"ui\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\nimport { ConsumerGroupsRoute } from \"./ConsumerGroupsRoute\";\n\nexport const ConsumerGroupViewPartitionRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({\n  instanceConsumerGroupsHref,\n  viewPartitionConsumerGroupHref,\n  instancesHref,\n  instanceDetailsHref,\n  instanceTopicsHref,\n}) => {\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewPartitionConsumerGroupHref(\n        instance.id,\n        consumerGroup.groupId\n      )}/delete`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.groupId,\n    viewPartitionConsumerGroupHref,\n  ]);\n\n  const onClickResetOffset = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewPartitionConsumerGroupHref(\n        instance.id,\n        consumerGroup.groupId\n      )}/reset-offset`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.groupId,\n    viewPartitionConsumerGroupHref,\n  ]);\n\n  return (\n    <ConsumerGroupDrawer\n      consumerGroupByTopic={false}\n      state={consumerGroup.state}\n      activeMembers={consumerGroup.activeConsumers!}\n      partitionsWithLag={consumerGroup.laggingPartitions!}\n      consumers={consumerGroup.consumers}\n      groupId={consumerGroup.groupId}\n      onSelectDeleteConsumerGroup={onDelete}\n      onSelectResetOffsetConsumerGroup={onClickResetOffset}\n      isExpanded={true}\n      onClickClose={onCancel}\n    >\n      <ConsumerGroupsRoute\n        instancesHref={instancesHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n      />\n    </ConsumerGroupDrawer>\n  );\n};\n","import { useConsumerGroup } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../control-plane/routesConsts\";\nimport type { DataPlaneTopicConsumerRouteParams } from \"./routesConsts\";\nimport { DataPlaneTopicConsumerGroupRoutePath } from \"./routesConsts\";\nimport { useTopicGate } from \"./useTopicGate\";\n\nexport function useTopicConsumerGroupGate() {\n  const { instance, topic } = useTopicGate();\n  const standardMatch = useRouteMatch<DataPlaneTopicConsumerRouteParams>(\n    DataPlaneTopicConsumerGroupRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlaneTopicConsumerRouteParams>(\n    DataPlaneTopicConsumerGroupRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"useTopicConsumerGroupGate used outside the expected route\");\n  }\n  const { data: consumerGroup } = useConsumerGroup(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      consumerGroupId: match.params.consumerGroupId,\n    },\n    true\n  );\n\n  return {\n    instance,\n    consumerGroup: consumerGroup as NonNullable<typeof consumerGroup>,\n    match,\n    topic,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteConsumerGroup } from \"ui\";\nimport { useDeleteConsumerGroupMutation } from \"consoledot-api\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\n\nexport const TopicConsumerGroupDeleteRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({ instanceTopicConsumerGroupsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance, consumerGroup, topic } = useTopicConsumerGroupGate();\n\n  const { mutateAsync } = useDeleteConsumerGroupMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl!,\n      consumerGroupId: consumerGroup.groupId,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(\n          instanceTopicConsumerGroupsHref(instance.id, topic.name)\n        );\n      },\n    });\n  }, [\n    mutateAsync,\n    history,\n    instance?.id,\n    instanceTopicConsumerGroupsHref,\n    topic.name,\n    consumerGroup.groupId,\n    instance?.adminUrl,\n  ]);\n\n  return (\n    <DeleteConsumerGroup\n      isModalOpen={true}\n      onClose={onCancel}\n      onDeleteConsumer={onDelete}\n      state={consumerGroup.state}\n      consumerName={consumerGroup.groupId}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupResetOffset } from \"ui\";\nimport type { OffsetValue } from \"ui\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useResetConsumerGroupMutation } from \"consoledot-api\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\n\nexport const TopicConsumerGroupResetOffsetRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({ instanceTopicConsumerGroupsHref }) => {\n  const { instance, topic, consumerGroup } = useTopicConsumerGroupGate();\n\n  const { mutateAsync } = useResetConsumerGroupMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const getTopics = () => {\n    const topics = (consumerGroup.consumers || []).map(\n      (consumer) => consumer.topic\n    );\n    const distinctTopics = Array.from(new Set(topics));\n    return distinctTopics;\n  };\n\n  const onConfirmResetOffset = useCallback(\n    (\n      topicName: string,\n      offset: OffsetValue,\n      partitions: number[],\n      customOffsetValue: string\n    ) => {\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl!,\n        consumerGroupId: consumerGroup.groupId,\n        topic: topicName,\n        offset: offset,\n        partitions: partitions,\n        value: customOffsetValue,\n        onError: () => {\n          // TODO: alert\n        },\n        onSuccess: () => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.replace(\n            instanceTopicConsumerGroupsHref(instance.id, topic.name)\n          );\n        },\n      });\n    },\n    [\n      mutateAsync,\n      history,\n      instance?.id,\n      topic.name,\n      instanceTopicConsumerGroupsHref,\n      instance.adminUrl,\n      consumerGroup.groupId,\n    ]\n  );\n\n  return (\n    <ConsumerGroupResetOffset\n      isModalOpen={true}\n      state={consumerGroup.state}\n      groupId={consumerGroup.groupId}\n      topics={getTopics()}\n      consumers={consumerGroup.consumers}\n      onClickClose={onCancel}\n      onClickResetOffset={onConfirmResetOffset}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroupDrawer } from \"ui\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\nimport { TopicConsumerGroupsRoute } from \"./TopicConsumerGroupsRoute\";\n\nexport const TopicConsumerGroupViewPartitionRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({\n  instanceTopicConsumerGroupsHref,\n  instancesHref,\n  viewTopicPartitionConsumerGroupHref,\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const { instance, topic, consumerGroup } = useTopicConsumerGroupGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewTopicPartitionConsumerGroupHref(\n        instance.id,\n        topic.name,\n        consumerGroup.groupId\n      )}/delete`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.groupId,\n    topic.name,\n    viewTopicPartitionConsumerGroupHref,\n  ]);\n\n  const onClickResetOffset = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewTopicPartitionConsumerGroupHref(\n        instance.id,\n        topic.name,\n        consumerGroup.groupId\n      )}/reset-offset`\n    );\n  }, [\n    history,\n    instance.id,\n    topic.name,\n    consumerGroup.groupId,\n    viewTopicPartitionConsumerGroupHref,\n  ]);\n\n  return (\n    <ConsumerGroupDrawer\n      consumerGroupByTopic={false}\n      state={consumerGroup.state}\n      activeMembers={consumerGroup.activeConsumers!}\n      partitionsWithLag={consumerGroup.laggingPartitions!}\n      consumers={consumerGroup.consumers}\n      groupId={consumerGroup.groupId}\n      onSelectDeleteConsumerGroup={onDelete}\n      onSelectResetOffsetConsumerGroup={onClickResetOffset}\n      isExpanded={true}\n      onClickClose={onCancel}\n    >\n      <TopicConsumerGroupsRoute\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n      />\n    </ConsumerGroupDrawer>\n  );\n};\n","import type { DeleteModalProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  DeleteModal,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type DeleteKafkaTopicProps = {\n  topicName: string;\n} & Omit<\n  DeleteModalProps,\n  \"title\" | \"variant\" | \"confirmationValue\" | \"children\"\n>;\n\nexport const DeleteKafkaTopic: VoidFunctionComponent<DeleteKafkaTopicProps> = ({\n  topicName,\n  ...props\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <DeleteModal\n      {...props}\n      variant={\"destructive\"}\n      title={t(\"delete_topic_title\")}\n      confirmationValue={topicName}\n    >\n      <Trans\n        ns={\"kafka\"}\n        i18nKey={\"delete_topic_message\"}\n        components={[<strong />]}\n        values={{\n          topicName,\n        }}\n      />\n    </DeleteModal>\n  );\n};\n","import { useDeleteTopicMutation } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteKafkaTopic } from \"ui/src/components/DeleteKafkaTopic\";\nimport type { DataPlaneTopicNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\n\nexport const TopicDeleteRoute: VoidFunctionComponent<\n  DataPlaneTopicNavigationProps\n> = ({ topicHref, instanceTopicsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance, topic } = useTopicGate();\n  const { mutateAsync, isLoading: isDeleting } = useDeleteTopicMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(topicHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, topicHref]);\n\n  const onDelete = useCallback(() => {\n    if (!instance.adminUrl) {\n      throw Error(\"Invalid instance adminUrl\");\n    }\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl,\n      name: topic.name,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceTopicsHref(instance.id));\n      },\n    });\n  }, [\n    instance.adminUrl,\n    instance.id,\n    mutateAsync,\n    topic.name,\n    history,\n    instanceTopicsHref,\n  ]);\n\n  return (\n    <DeleteKafkaTopic\n      topicName={topic.name}\n      isModalOpen={true}\n      isDeleting={isDeleting}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n      onDelete={onDelete}\n      onCancel={onCancel}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { EditTopicProperties } from \"ui\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicEditPropertiesRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  instanceConsumerGroupsHref,\n}) => {\n  const { topic } = useTopicGate();\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n        activeSection={\"properties\"}\n      />\n      <EditTopicProperties\n        topic={topic}\n        onCancel={() => {\n          /* TODO */\n        }}\n      />\n    </>\n  );\n};\n","import { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport {\n  useAcls,\n  useConsumerGroups,\n  useDeletePermissionsMutation,\n  useTopics,\n  useUpdatePermissionsMutation,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { EditPermissions } from \"ui\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"../../control-plane/routesConsts\";\nimport type {\n  DataPlanePermissionsNavigationProps,\n  DataPlanePermissionsRouteParams,\n} from \"../routesConsts\";\nimport { DataPlanePermissionsRoutePath } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\n\nexport const EditPermissionsRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ managePermissionsHref }) => {\n  const { instance } = useDataPlaneGate();\n  const standardMatch = useRouteMatch<DataPlanePermissionsRouteParams>(\n    DataPlanePermissionsRoutePath(ControlPlaneRouteRoot)\n  );\n  const dedicatedMatch = useRouteMatch<DataPlanePermissionsRouteParams>(\n    DataPlanePermissionsRoutePath(DedicatedControlPlaneRouteRoot)\n  );\n  const match = standardMatch || dedicatedMatch;\n  if (!match) {\n    throw Error(\"EditPermissions used outside the expected route\");\n  }\n\n  const { data: acls } = useAcls({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: topics } = useTopics({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    plan: instance.plan,\n  });\n\n  const { data: consumerGroups } = useConsumerGroups({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const dispatch = useDispatch();\n\n  const consumerGroupsList = consumerGroups?.groups.map(\n    (consumer) => consumer.groupId\n  );\n  const topicsList = topics?.topics.map((topic) => topic.name);\n  const { mutateAsync } = useDeletePermissionsMutation();\n  const updatePermissions = useUpdatePermissionsMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onSaveAcls = useCallback(\n    (\n      aclPermission: AclBinding[] | undefined,\n      deletedPermissions: AclBinding[] | undefined\n    ) => {\n      if (aclPermission != undefined && aclPermission.length > 0) {\n        aclPermission.map(\n          (aclData) =>\n            void updatePermissions.mutateAsync({\n              instanceId: instance.id,\n              adminUrl: instance?.adminUrl || \"\",\n              acl: {\n                patternType: aclData.patternType,\n                permission: aclData.permission,\n                principal: aclData.principal,\n                operation: aclData.operation,\n                resourceName: aclData.resourceName,\n                resourceType: aclData.resourceType,\n              },\n\n              onSuccess: () => {\n                //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n                history.push(managePermissionsHref(instance.id));\n              },\n              onError: (_, message) => {\n                dispatch(\n                  addNotification({\n                    variant: \"danger\",\n                    title: message,\n                    dismissable: true,\n                    id: \"save-error\",\n                  })\n                );\n              },\n            })\n        );\n      }\n\n      if (deletedPermissions != undefined && deletedPermissions.length > 0) {\n        deletedPermissions.map((aclToDelete) => {\n          void mutateAsync({\n            instanceId: instance.id,\n            adminUrl: instance.adminUrl || \"\",\n            acl: {\n              patternType: aclToDelete.patternType,\n              permissionType: aclToDelete.permission,\n              principal: aclToDelete.principal,\n              resourceName: aclToDelete.resourceName,\n              operation: aclToDelete.operation,\n              resourceType: aclToDelete.resourceType,\n            },\n            onError: (_, message) => {\n              dispatch(\n                addNotification({\n                  variant: \"danger\",\n                  title: message,\n                  dismissable: true,\n                  id: \"delete-error\",\n                })\n              );\n            },\n            onSuccess: () => {\n              //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n              history.push(managePermissionsHref(instance.id));\n            },\n          });\n        });\n      }\n    },\n    [\n      dispatch,\n      history,\n      instance.adminUrl,\n      instance.id,\n      managePermissionsHref,\n      mutateAsync,\n      updatePermissions,\n    ]\n  );\n\n  const existingAcls: AclBinding[] | undefined = acls?.groups.map((acl) => {\n    return {\n      resourceName: acl.resource.resourceName,\n      patternType: acl.resource.patternType,\n      permission: acl.permission.permission,\n      operation: acl.permission.operation,\n      principal: acl.account,\n      resourceType: acl.resource.resourceType,\n    };\n  });\n\n  const aclsForSelectedAccount = existingAcls?.filter(\n    (value) =>\n      value.principal == `User:${match.params.selectedAccount}` ||\n      value.principal == \"User:*\"\n  );\n\n  const onClose = useCallback(() => {\n    //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <EditPermissions\n      onCancel={onClose}\n      kafkaName={instance.name}\n      onSave={onSaveAcls}\n      topicsList={topicsList || []}\n      consumerGroupsList={consumerGroupsList || []}\n      selectedAccount={\n        match.params.selectedAccount == \"all-accounts\"\n          ? \"All accounts\"\n          : match.params.selectedAccount\n      }\n      acls={aclsForSelectedAccount || []}\n    />\n  );\n};\n","import { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { useServiceAccounts, useUserAccounts } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { Account } from \"ui\";\nimport { PrincipalType, SelectAccount } from \"ui\";\nimport type { DataPlanePermissionsNavigationProps } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\n\nexport const ManagePermissionsRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ managePermissionsHref, editPermissionsHref }) => {\n  const [loggedInUser, setCurrentlyLoggedInUser] = useState<\n    string | undefined\n  >();\n  const { auth } = useChrome();\n  const { instance } = useDataPlaneGate();\n  const { data: accounts } = useUserAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: serviceAccounts } = useServiceAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  useEffect(() => {\n    const getUsername = async () => {\n      const username = (await auth.getUser())?.identity.user?.username;\n      setCurrentlyLoggedInUser(username);\n    };\n    void getUsername();\n  }, [auth]);\n\n  const userAccounts: Account[] | undefined = accounts?.accounts.map(\n    (userAccount) => {\n      return {\n        displayName: userAccount.displayName,\n        id: userAccount.username,\n        principalType: PrincipalType.UserAccount,\n      };\n    }\n  );\n\n  const serviceAccountList: Account[] | undefined =\n    serviceAccounts?.serviceAccounts.map((userAccount) => {\n      return {\n        displayName: userAccount.displayName,\n        id: userAccount.id,\n        principalType: PrincipalType.ServiceAccount,\n      };\n    });\n\n  const allAccounts =\n    userAccounts != undefined && serviceAccountList != undefined\n      ? [...serviceAccountList, ...userAccounts]\n      : undefined;\n  const filteredAccounts = allAccounts?.filter(\n    (value) => value.id !== instance.owner && value.id !== loggedInUser\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onNext = useCallback(\n    (selectedAccount: string | undefined) => {\n      //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        editPermissionsHref(\n          instance.id,\n          selectedAccount === \"All accounts\"\n            ? \"all-accounts\"\n            : selectedAccount || \"\"\n        )\n      );\n    },\n    [editPermissionsHref, history, instance.id]\n  );\n\n  const onClose = useCallback(() => {\n    //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <SelectAccount\n      accounts={filteredAccounts}\n      kafkaName={instance.name}\n      onNext={onNext}\n      onClose={onClose}\n    />\n  );\n};\n","import { InvalidObject } from \"@redhat-cloud-services/frontend-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ControlPlaneRouteRoot } from \"../control-plane/routesConsts\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  AclsRoute,\n  ConsumerGroupDeleteRoute,\n  ConsumerGroupResetOffsetRoute,\n  ConsumerGroupsRoute,\n  ConsumerGroupViewPartitionRoute,\n  DashboardRoute,\n  EditPermissionsRoute,\n  ManagePermissionsRoute,\n  SettingsRoute,\n  TopicConsumerGroupDeleteRoute,\n  TopicConsumerGroupResetOffsetRoute,\n  TopicConsumerGroupsRoute,\n  TopicConsumerGroupViewPartitionRoute,\n  TopicDeleteRoute,\n  TopicEditPropertiesRoute,\n  TopicMessagesGroupsRoute,\n  TopicPropertiesRoute,\n  TopicSchemasRoute,\n  TopicsRoute,\n} from \"./routes\";\n\nimport { DataPlaneTopicRoutePath } from \"./routesConsts\";\n\nconst instanceDetailsHref = (id: string) =>\n  `${ControlPlaneRouteRoot}/${id}/details`;\n\nconst instanceTopicsHref = (id: string) =>\n  `${ControlPlaneRouteRoot}/${id}/details/topics`;\n\nconst topicHref = (id: string, topic: string) =>\n  `${instanceDetailsHref(id)}/topics/${topic}/properties`;\n\nconst updateTopicHref = (id: string, topic: string) =>\n  `${topicHref(id, topic)}/edit`;\n\nconst deleteTopicHref = (id: string, topic: string) =>\n  `${topicHref(id, topic)}/delete`;\n\nconst instanceConsumerGroupsHref = (id: string) =>\n  `${instanceDetailsHref(id)}/consumer-groups`;\n\nconst viewPartitionConsumerGroupHref = (id: string, consumerGroupId: string) =>\n  `${instanceDetailsHref(\n    id\n  )}/consumer-groups/${consumerGroupId}/view-partition`;\n\nconst instanceTopicConsumerGroupHref = (id: string, topic: string) =>\n  `${instanceDetailsHref(id)}/topics/${topic}/consumer-groups`;\n\nconst viewTopicPartitionConsumerGroupHref = (\n  id: string,\n  topic: string,\n  consumerGroupId: string\n) =>\n  `${instanceDetailsHref(\n    id\n  )}/topics/${topic}/consumer-groups/${consumerGroupId}/view-partition`;\n\nconst managePermissionsHref = (id: string) =>\n  `${instanceDetailsHref(id)}/acls/select-account`;\n\nconst editPermissionsHref = (id: string, selectedAccount: string) =>\n  `${instanceDetailsHref(\n    id\n  )}/acls/select-account/${selectedAccount}/edit-permissions`;\n\nexport const permissionsModalHref = (id: string) =>\n  `${instanceDetailsHref(id)}/acls`;\n\nexport type DataPlaneRoutesProps = {\n  root: string;\n  instanceId: string;\n};\n\nexport const DataPlaneRoutes: VoidFunctionComponent<DataPlaneRoutesProps> = ({\n  root,\n  instanceId,\n}) => {\n  return (\n    <Route path={root}>\n      <RedirectOnGateError redirectUrl={ControlPlaneRouteRoot}>\n        <Switch>\n          <Route path={`${root}/dashboard`} exact>\n            <DashboardRoute instancesHref={ControlPlaneRouteRoot} />\n          </Route>\n\n          <Route path={`${root}/topics`} exact>\n            <TopicsRoute instancesHref={ControlPlaneRouteRoot} />\n          </Route>\n\n          <Route path={`${root}/consumer-groups`} exact>\n            <ConsumerGroupsRoute\n              instancesHref={ControlPlaneRouteRoot}\n              instanceDetailsHref={instanceDetailsHref}\n              instanceTopicsHref={instanceTopicsHref}\n              instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n            />\n          </Route>\n\n          <Route path={`${root}/acls`}>\n            <Route path={`${root}/acls/select-account`}>\n              <ManagePermissionsRoute\n                instancesHref={ControlPlaneRouteRoot}\n                managePermissionsHref={permissionsModalHref}\n                editPermissionsHref={editPermissionsHref}\n              />\n            </Route>\n            <Route\n              path={`${root}/acls/select-account/:selectedAccount/edit-permissions`}\n            >\n              <EditPermissionsRoute\n                instancesHref={ControlPlaneRouteRoot}\n                managePermissionsHref={permissionsModalHref}\n                editPermissionsHref={editPermissionsHref}\n              />\n            </Route>\n            <AclsRoute\n              instancesHref={ControlPlaneRouteRoot}\n              managePermissionsHref={managePermissionsHref}\n              editPermissionsHref={editPermissionsHref}\n            />\n          </Route>\n\n          <Route path={`${root}/settings`} exact>\n            <SettingsRoute instancesHref={ControlPlaneRouteRoot} />\n          </Route>\n          <Route path={`${root}/topics`}>\n            <RedirectOnGateError redirectUrl={instanceTopicsHref(instanceId)}>\n              <Switch>\n                <Route path={`${root}/topics/:topicName/consumer-groups`}>\n                  <RedirectOnGateError\n                    redirectUrl={instanceTopicsHref(instanceId)}\n                  >\n                    <Switch>\n                      <Route\n                        path={`${DataPlaneTopicRoutePath(\n                          root\n                        )}/consumer-groups/:consumerGroupId/view-partition`}\n                      >\n                        <Route\n                          path={`${DataPlaneTopicRoutePath(\n                            root\n                          )}/consumer-groups/:consumerGroupId/view-partition/delete`}\n                        >\n                          <TopicConsumerGroupDeleteRoute\n                            instancesHref={ControlPlaneRouteRoot}\n                            instanceTopicConsumerGroupsHref={\n                              instanceTopicConsumerGroupHref\n                            }\n                            viewTopicPartitionConsumerGroupHref={\n                              viewTopicPartitionConsumerGroupHref\n                            }\n                            instanceDetailsHref={instanceDetailsHref}\n                            instanceTopicsHref={instanceTopicsHref}\n                            instanceConsumerGroupsHref={\n                              instanceConsumerGroupsHref\n                            }\n                          />\n                        </Route>\n                        <Route\n                          path={`${DataPlaneTopicRoutePath(\n                            root\n                          )}/consumer-groups/:consumerGroupId/view-partition/reset-offset`}\n                        >\n                          <TopicConsumerGroupResetOffsetRoute\n                            instancesHref={ControlPlaneRouteRoot}\n                            instanceTopicConsumerGroupsHref={\n                              instanceTopicConsumerGroupHref\n                            }\n                            viewTopicPartitionConsumerGroupHref={\n                              viewTopicPartitionConsumerGroupHref\n                            }\n                            instanceDetailsHref={instanceDetailsHref}\n                            instanceTopicsHref={instanceTopicsHref}\n                            instanceConsumerGroupsHref={\n                              instanceConsumerGroupsHref\n                            }\n                          />\n                        </Route>\n                        <TopicConsumerGroupViewPartitionRoute\n                          instancesHref={ControlPlaneRouteRoot}\n                          instanceTopicConsumerGroupsHref={\n                            instanceTopicConsumerGroupHref\n                          }\n                          viewTopicPartitionConsumerGroupHref={\n                            viewTopicPartitionConsumerGroupHref\n                          }\n                          instanceDetailsHref={instanceDetailsHref}\n                          instanceTopicsHref={instanceTopicsHref}\n                          instanceConsumerGroupsHref={\n                            instanceConsumerGroupsHref\n                          }\n                        />\n                      </Route>\n                      <Route\n                        path={`${DataPlaneTopicRoutePath(\n                          root\n                        )}/consumer-groups/:consumerGroupId/reset-offset`}\n                      >\n                        <TopicConsumerGroupResetOffsetRoute\n                          instancesHref={ControlPlaneRouteRoot}\n                          instanceTopicConsumerGroupsHref={\n                            instanceTopicConsumerGroupHref\n                          }\n                          viewTopicPartitionConsumerGroupHref={\n                            viewTopicPartitionConsumerGroupHref\n                          }\n                          instanceDetailsHref={instanceDetailsHref}\n                          instanceTopicsHref={instanceTopicsHref}\n                          instanceConsumerGroupsHref={\n                            instanceConsumerGroupsHref\n                          }\n                        />\n                      </Route>\n                      <Route\n                        path={`${DataPlaneTopicRoutePath(\n                          root\n                        )}/consumer-groups/:consumerGroupId/delete`}\n                      >\n                        <TopicConsumerGroupDeleteRoute\n                          instancesHref={ControlPlaneRouteRoot}\n                          instanceTopicConsumerGroupsHref={\n                            instanceTopicConsumerGroupHref\n                          }\n                          viewTopicPartitionConsumerGroupHref={\n                            viewTopicPartitionConsumerGroupHref\n                          }\n                          instanceDetailsHref={instanceDetailsHref}\n                          instanceTopicsHref={instanceTopicsHref}\n                          instanceConsumerGroupsHref={\n                            instanceConsumerGroupsHref\n                          }\n                        />\n                      </Route>\n                    </Switch>\n                  </RedirectOnGateError>\n                  <TopicConsumerGroupsRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/messages`} exact>\n                  <TopicMessagesGroupsRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n\n                <Route path={`${root}/topics/:topicName/properties/edit`} exact>\n                  <TopicEditPropertiesRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/properties`}>\n                  <Route path={`${root}/topics/:topicName/properties/delete`}>\n                    <TopicDeleteRoute\n                      instancesHref={ControlPlaneRouteRoot}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      topicHref={topicHref}\n                      updateTopicHref={updateTopicHref}\n                      deleteTopicHref={deleteTopicHref}\n                    />\n                  </Route>\n                  <TopicPropertiesRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    topicHref={topicHref}\n                    updateTopicHref={updateTopicHref}\n                    deleteTopicHref={deleteTopicHref}\n                  />\n                </Route>\n                <Route path={`${root}/topics/:topicName/schemas`} exact>\n                  <TopicSchemasRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                  />\n                </Route>\n                <Redirect\n                  from={`${root}/topics/:topicName/`}\n                  to={`${root}/topics/:topicName/consumer-groups`}\n                  exact\n                />\n              </Switch>\n            </RedirectOnGateError>\n          </Route>\n          <Route path={`${root}/consumer-groups`}>\n            <RedirectOnGateError\n              redirectUrl={instanceConsumerGroupsHref(instanceId)}\n            >\n              <Switch>\n                <Route\n                  path={`${root}/consumer-groups/:consumerGroupId/view-partition`}\n                >\n                  <Route\n                    path={`${root}/consumer-groups/:consumerGroupId/view-partition/delete`}\n                  >\n                    <ConsumerGroupDeleteRoute\n                      instancesHref={ControlPlaneRouteRoot}\n                      instanceTopicsHref={instanceTopicsHref}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      viewPartitionConsumerGroupHref={\n                        viewPartitionConsumerGroupHref\n                      }\n                    />\n                  </Route>\n                  <Route\n                    path={`${root}/consumer-groups/:consumerGroupId/view-partition/reset-offset`}\n                  >\n                    <ConsumerGroupResetOffsetRoute\n                      instancesHref={ControlPlaneRouteRoot}\n                      instanceTopicsHref={instanceTopicsHref}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      viewPartitionConsumerGroupHref={\n                        viewPartitionConsumerGroupHref\n                      }\n                    />\n                  </Route>\n                  <ConsumerGroupViewPartitionRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    viewPartitionConsumerGroupHref={\n                      viewPartitionConsumerGroupHref\n                    }\n                  />\n                </Route>\n                <Route\n                  path={`${root}/consumer-groups/:consumerGroupId/reset-offset`}\n                >\n                  <ConsumerGroupResetOffsetRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    viewPartitionConsumerGroupHref={\n                      viewPartitionConsumerGroupHref\n                    }\n                  />\n                </Route>\n                <Route path={`${root}/consumer-groups/:consumerGroupId/delete`}>\n                  <ConsumerGroupDeleteRoute\n                    instancesHref={ControlPlaneRouteRoot}\n                    instanceTopicsHref={instanceTopicsHref}\n                    instanceDetailsHref={instanceDetailsHref}\n                    instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                    viewPartitionConsumerGroupHref={\n                      viewPartitionConsumerGroupHref\n                    }\n                  />\n                </Route>\n              </Switch>\n            </RedirectOnGateError>\n          </Route>\n          <Redirect from={`${root}`} to={`${root}/dashboard`} exact />\n\n          <Route>\n            <InvalidObject />\n          </Route>\n        </Switch>\n      </RedirectOnGateError>\n    </Route>\n  );\n};\n","import { Loading } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"./control-plane/routesConsts\";\nimport { useDedicatedGate } from \"./useDedicatedGate\";\n\nexport const DefaultServiceRedirect: VoidFunctionComponent = () => {\n  const gate = useDedicatedGate();\n\n  if (gate === \"loading\") {\n    return <Loading />;\n  }\n\n  if (gate === \"dedicated-only\") {\n    return <Redirect to={DedicatedControlPlaneRouteRoot} />;\n  }\n\n  return <Redirect to={ControlPlaneRouteRoot} />;\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { KafkaPageV3 } from \"ui\";\n\nexport const OverviewRoute: VoidFunctionComponent = () => {\n  return <KafkaPageV3 />;\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport {\n  ControlPlaneRoutes,\n  DedicatedControlPlaneRoutes,\n  DrawerProvider,\n} from \"./control-plane\";\nimport {\n  ControlPlaneRouteRoot,\n  DedicatedControlPlaneRouteRoot,\n} from \"./control-plane/routesConsts\";\nimport { DataPlaneRoutes } from \"./data-plane\";\nimport { DataPlaneRoutePath } from \"./data-plane/routesConsts\";\nimport { DefaultServiceRedirect } from \"./DefaultServiceRedirect\";\nimport { OverviewRoute } from \"./overview\";\n\nexport const Routes: VoidFunctionComponent = () => {\n  return (\n    <Switch>\n      <Route path={\"/overview\"} exact>\n        <OverviewRoute />\n      </Route>\n      <Route path={\"/\"} exact>\n        <DefaultServiceRedirect />\n      </Route>\n      <Route path={ControlPlaneRouteRoot}>\n        <DrawerProvider>\n          {/* don't move these routes around! the order is important */}\n          <ControlPlaneRoutes />\n          <Route\n            path={DataPlaneRoutePath(ControlPlaneRouteRoot)}\n            render={({ match }) => (\n              <DataPlaneRoutes\n                root={DataPlaneRoutePath(ControlPlaneRouteRoot)}\n                instanceId={match.params.id}\n              />\n            )}\n          />\n        </DrawerProvider>\n      </Route>\n      <Route path={DedicatedControlPlaneRouteRoot}>\n        <DrawerProvider>\n          {/* don't move these routes around! the order is important */}\n          <DedicatedControlPlaneRoutes />\n          <Route\n            path={DataPlaneRoutePath(DedicatedControlPlaneRouteRoot)}\n            render={({ match }) => (\n              <DataPlaneRoutes\n                root={DataPlaneRoutePath(DedicatedControlPlaneRouteRoot)}\n                instanceId={match.params.id}\n              />\n            )}\n          />\n        </DrawerProvider>\n      </Route>\n      <Route path={\"\"} exact></Route>\n    </Switch>\n  );\n};\n","import NotificationsPortal from \"@redhat-cloud-services/frontend-components-notifications/NotificationPortal\";\nimport { notificationsReducer } from \"@redhat-cloud-services/frontend-components-notifications/redux\";\nimport { getRegistry } from \"@redhat-cloud-services/frontend-components-utilities/Registry\";\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { memo, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { Reducer } from \"redux\";\n\nimport \"./App.scss\";\n\nimport { Routes } from \"./routes\";\n\nconst App = memo(() => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { updateDocumentTitle, on } = useChrome();\n\n  const { t } = useTranslation();\n  const title = t(\"kafka:rhosakTitle\");\n\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer as Reducer });\n\n    updateDocumentTitle(title);\n\n    const unregister = on(\"APP_NAVIGATION\", (event) => {\n      console.dir(event);\n      if (event.navId) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.push(\"/\" + event.navId === \"/\" ? \"\" : event.navId);\n      }\n    });\n    return () => {\n      if (unregister) {\n        unregister();\n      }\n    };\n  }, [history, on, title, updateDocumentTitle]);\n\n  return (\n    <>\n      <NotificationsPortal />\n      <Routes />\n    </>\n  );\n});\n\nexport default App;\n","/* eslint-disable */\n// @ts-nocheck\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { AssetsContext } from \"@rhoas/app-services-ui-shared\";\nimport type { ScalprumComponentProps } from \"@scalprum/react-core\";\nimport { ScalprumComponent } from \"@scalprum/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nexport const appIdentifier = \"applicationServices\";\n\nconst basePath = \"/apps/rhoas-guides-build\";\nconst getPath = () => {\n  return basePath;\n};\n\nexport const QuickstartLoader: VoidFunctionComponent = () => {\n  const [loaded, setLoaded] = useState(false);\n  const chrome = useChrome();\n  const { quickStarts } = chrome;\n\n  const onLoad = (qs: unknown) => {\n    if (quickStarts) {\n      setLoaded(true); // unload federated module\n      quickStarts.set(appIdentifier, qs);\n    }\n  };\n\n  const processor = (([_, m]: [string, { entry: string[] }]) =>\n    m.entry.map(\n      (e) => `${basePath}${e}`\n    )) as unknown as ScalprumComponentProps[\"processor\"];\n\n  return (\n    <ErrorBoundary fallbackRender={() => null}>\n      <AssetsContext.Provider value={{ getPath }}>\n        {!loaded ? (\n          <ScalprumComponent\n            appName=\"guides\"\n            scope=\"guides\"\n            module=\"./QuickStartLoader\"\n            ErrorComponent={<div>opsie</div>}\n            processor={processor}\n            showDrafts={false}\n            onLoad={onLoad}\n          />\n        ) : null}\n      </AssetsContext.Provider>\n    </ErrorBoundary>\n  );\n};\n","import notificationsMiddleware from \"@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware\";\nimport type ReducerRegistry from \"@redhat-cloud-services/frontend-components-utilities/ReducerRegistry\";\nimport { getRegistry } from \"@redhat-cloud-services/frontend-components-utilities/Registry\";\nimport type { Middleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise-middleware\";\n\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nexport let registry: ReducerRegistry<any>;\n\nexport function init(...middleware: Middleware[]) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: [\"detail\", \"stack\"] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchDedicatedClusterSizesParams } from \"../fetchers\";\nimport { fetchDedicatedClusterSizes } from \"../fetchers\";\nimport { dedicatedQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDedicatedClusterSizesFetchQuery() {\n  const queryClient = useQueryClient();\n  const { dedicatedClusters } = useApi();\n  return async ({\n    clusterId,\n  }: Omit<FetchDedicatedClusterSizesParams, \"getEnterpriseClusterById\">) => {\n    const api = dedicatedClusters();\n    return queryClient.fetchQuery({\n      queryKey: dedicatedQueries.clusterSizes({ clusterId }),\n      queryFn: async () => {\n        return fetchDedicatedClusterSizes({\n          clusterId,\n          getEnterpriseClusterById: (...args) =>\n            api.getEnterpriseClusterById(...args),\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchDedicatedClusters } from \"../fetchers\";\nimport { dedicatedQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDedicatedClustersFetchQuery() {\n  const queryClient = useQueryClient();\n  const { dedicatedClusters } = useApi();\n  return async () => {\n    const api = dedicatedClusters();\n    return queryClient.fetchQuery({\n      queryKey: dedicatedQueries.clusters(),\n      queryFn: async () => {\n        return fetchDedicatedClusters({\n          getEnterpriseOsdClusters: (...args) =>\n            api.getEnterpriseOsdClusters(...args),\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchDedicatedQuota, fetchOrganization } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDedicatedQuotaFetchQuery(skipCache = false) {\n  const queryClient = useQueryClient();\n  const { account } = useApi();\n  const ams = account();\n\n  return async () => {\n    const organization = await queryClient.fetchQuery({\n      queryKey: masQueries.organization(),\n      queryFn: () =>\n        fetchOrganization((...args) =>\n          ams.apiAccountsMgmtV1CurrentAccountGet(...args)\n        ),\n      staleTime: Infinity,\n    });\n    if (!organization) {\n      return Promise.reject(\"Missing organization id\");\n    }\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.dedicatedAvailable(),\n      queryFn: () =>\n        fetchDedicatedQuota(\n          (...args) =>\n            ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(...args),\n          organization\n        ),\n      staleTime: skipCache ? undefined : Infinity,\n    });\n  };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { FetchConsumerGroupParams } from \"../fetchers\";\nimport { fetchConsumerGroup } from \"../fetchers\";\n\nexport function useConsumerGroup(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchConsumerGroupParams,\n    \"getConsumerGroupById\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { consumerGroups } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.consumerGroup(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      if (!params.consumerGroupId) {\n        return Promise.reject(\"Invalid consumerGroupId\");\n      }\n      const api = consumerGroups(params.adminUrl);\n\n      return fetchConsumerGroup({\n        getConsumerGroupById: (...args) => api.getConsumerGroupById(...args),\n        ...params,\n      });\n    },\n    enabled:\n      Boolean(params.adminUrl) &&\n      Boolean(params.id) &&\n      Boolean(params.consumerGroupId),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchConsumerGroupsParams } from \"../fetchers\";\nimport { fetchConsumerGroups } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useConsumerGroups(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchConsumerGroupsParams,\n    \"getConsumerGroups\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { consumerGroups } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.consumerGroups(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = consumerGroups(params.adminUrl);\n\n      return fetchConsumerGroups({\n        getConsumerGroups: (...args) => api.getConsumerGroups(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl) && Boolean(params.id),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { fetchDedicatedClusters } from \"../fetchers\";\nimport { dedicatedQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDedicatedClusters(\n  { refetch }: { refetch: boolean } = { refetch: true }\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { dedicatedClusters } = useApi();\n\n  return useQuery({\n    queryKey: dedicatedQueries.clusters(),\n    queryFn: () => {\n      const api = dedicatedClusters();\n\n      return fetchDedicatedClusters({\n        getEnterpriseOsdClusters: (...args) =>\n          api.getEnterpriseOsdClusters(...args),\n      });\n    },\n    refetchInterval: refetch ? refetchInterval : false,\n    refetchOnWindowFocus: !refetch ? false : undefined,\n    refetchOnReconnect: !refetch ? false : undefined,\n    refetchOnMount: !refetch ? false : undefined,\n    retry: false,\n  });\n}\n","import type { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  CloudProvider,\n  Kafka,\n  MarketPlaceSubscriptions,\n  Plan,\n  Status,\n} from \"ui-models/src/models/kafka\";\nimport type { DateIsoString } from \"ui-models/src/types\";\n\nimport type { SizeWithLimits } from \"../fetchers\";\n\nexport type KafkaInstanceEnhanced = Required<Kafka> & {\n  request: KafkaRequest;\n};\n\nexport function kafkaRequestToKafkaInstanceEnhanched(\n  instance: KafkaRequest,\n  marketplaceSubscriptions: MarketPlaceSubscriptions[],\n  developerPlanInstanceLimits: SizeWithLimits[],\n  standardPlanInstanceLimits: SizeWithLimits[]\n): KafkaInstanceEnhanced {\n  const enhancedInstance: KafkaInstanceEnhanced = {\n    billing: undefined,\n    connectionRate: 0,\n    connections: 0,\n    createdAt: (instance.created_at ||\n      new Date().toISOString()) as DateIsoString,\n    egress: 0,\n    expiryDate: instance.expires_at as DateIsoString | undefined,\n    id: instance.id,\n    ingress: 0,\n    maxPartitions: 0,\n    messageSize: { type: \"bytes\", value: BigInt(0) },\n    name: instance.name || \"\",\n    owner: instance.owner || \"\",\n    plan: instance.billing_model as Plan,\n    provider: instance.cloud_provider as CloudProvider,\n    region: instance.region || \"\",\n    size: \"1\",\n    status: apiStatusToUIStatus(instance.status || \"\"),\n    storage: { type: \"bytes\", value: BigInt(0) },\n    updatedAt: (instance.updated_at ||\n      new Date().toISOString()) as DateIsoString,\n    request: instance,\n    clusterId: instance.cluster_id ? instance.cluster_id : undefined,\n    version: instance.version || \"\",\n    bootstrapUrl: instance.bootstrap_server_host,\n    adminUrl: instance.admin_api_server_url,\n  };\n\n  // update the billing info\n  try {\n    const marketplaceForBilling = marketplaceSubscriptions.find((ms) =>\n      ms.subscriptions.find((s) => s === instance.billing_cloud_account_id)\n    )?.marketplace;\n\n    const billing: KafkaInstanceEnhanced[\"billing\"] =\n      instance.billing_model === \"enterprise\"\n        ? \"dedicated\"\n        : instance.billing_model === \"standard\"\n        ? \"prepaid\"\n        : marketplaceForBilling && instance.billing_cloud_account_id\n        ? {\n            marketplace: marketplaceForBilling,\n            subscription: instance.billing_cloud_account_id,\n          }\n        : undefined;\n    enhancedInstance.billing = billing;\n  } catch (e) {\n    console.warn(\n      \"kafkaRequestToKafkaInstance\",\n      `couldn't retrieve the billing info for`,\n      instance\n    );\n  }\n\n  // update the limits\n  try {\n    const limits =\n      instance.instance_type === \"developer\"\n        ? developerPlanInstanceLimits\n        : standardPlanInstanceLimits;\n    const thisInstanceLimits = limits.find((l) => l.id === instance.size_id);\n    if (thisInstanceLimits) {\n      enhancedInstance.size = thisInstanceLimits.displayName;\n      enhancedInstance.ingress = thisInstanceLimits.ingress;\n      enhancedInstance.egress = thisInstanceLimits.egress;\n      enhancedInstance.storage = {\n        type: \"bytes\",\n        value: BigInt(instance.max_data_retention_size?.bytes || 0),\n      };\n      enhancedInstance.connections = thisInstanceLimits.connections;\n      enhancedInstance.connectionRate = thisInstanceLimits.connectionRate;\n      enhancedInstance.maxPartitions = thisInstanceLimits.maxPartitions;\n      enhancedInstance.messageSize = {\n        type: \"bytes\",\n        value: BigInt(thisInstanceLimits.messageSize),\n      };\n    }\n  } catch (e) {\n    console.warn(\n      \"kafkaRequestToKafkaInstance\",\n      `couldn't retrieve the limits info for`,\n      instance\n    );\n  }\n\n  return enhancedInstance;\n}\n\nfunction apiStatusToUIStatus(status: string): Status {\n  const mapping: { [key: string]: Status } = {\n    accepted: \"accepted\",\n    preparing: \"preparing\",\n    provisioning: \"provisioning\",\n    ready: \"ready\",\n    failed: \"degraded\",\n    deprovision: \"deprovision\",\n    deleting: \"deleting\",\n  };\n  return mapping[status] || \"degraded\";\n}\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport type { CreateKafkaInstanceServices } from \"ui\";\nimport { useApi } from \"../useApi\";\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n};\n\n/**\n * Create Kafka instance hook that creates kafka instance\n */\nexport const useCreateInstance =\n  (): CreateKafkaInstanceServices[\"onCreate\"] => {\n    const { kafkasFleet } = useApi();\n\n    return (data, onSuccess, onError) => {\n      const runner = async () => {\n        const apisService = kafkasFleet();\n\n        try {\n          const kafkaRequest = {} as KafkaRequestPayload;\n          kafkaRequest.name = data.name;\n          kafkaRequest.cloud_provider = data.provider;\n          kafkaRequest.region = data.region;\n          kafkaRequest.plan = data.plan + \".\" + data.sizeId;\n          kafkaRequest.billing_model =\n            data.billing === \"prepaid\"\n              ? \"standard\"\n              : data.billing !== undefined\n              ? \"marketplace\"\n              : null;\n          kafkaRequest.billing_cloud_account_id =\n            data.billing && data.billing !== \"prepaid\"\n              ? data.billing.subscription\n              : null;\n          await apisService.createKafka(true, kafkaRequest);\n          onSuccess();\n        } catch (error) {\n          if (isServiceApiError(error)) {\n            const { code } = error?.response?.data || {};\n\n            switch (data.plan) {\n              case \"developer\":\n                switch (code) {\n                  case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                    onError(\"name-taken\");\n                    break;\n\n                  // regardless of the error, let's not give too many details to trial users\n                  default:\n                    onError(\"developer-unavailable\");\n                    break;\n                }\n                break;\n\n              case \"standard\":\n                switch (code) {\n                  case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                    onError(\"name-taken\");\n                    break;\n\n                  case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                    onError(\"region-unavailable\");\n                    break;\n\n                  case ErrorCodes.INSUFFICIENT_QUOTA:\n                    onError(\"insufficient-quota\");\n                    break;\n\n                  default:\n                    console.error(\n                      \"useAvailableProvidersAndDefault\",\n                      \"createKafka unknown error\",\n                      error\n                    );\n                    onError(\"unknown\");\n                }\n                break;\n            }\n          } else {\n            console.error(\n              \"useAvailableProvidersAndDefault\",\n              \"createKafka unexpected error\",\n              error\n            );\n          }\n        }\n      };\n      void runner();\n    };\n  };\n","import type { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport {\n  useProviderRegionSizesFetchQuery,\n  useProvidersWithRegionsFetchQuery,\n  useStandardQuotaFetchQuery,\n} from \"../fetchQueries\";\nimport { kafkaRequestToKafkaInstanceEnhanched } from \"../transformers/kafkaRequestToKafkaInstanceEnhanched\";\n\nexport function useKafkaInstanceTransformer() {\n  const getStandardQuotaQuery = useStandardQuotaFetchQuery();\n  const getProvidersInfo = useProvidersWithRegionsFetchQuery();\n  const getProviderRegionsSizes = useProviderRegionSizesFetchQuery();\n\n  return async function kafkaInstanceTransformer(instance: KafkaRequest) {\n    if (!instance.region) {\n      throw new Error(\n        `Invalid KafkaRequest, empty region: ${JSON.stringify(instance)}`\n      );\n    }\n    const standardQuota = await getStandardQuotaQuery();\n\n    const providersInfo = await getProvidersInfo(\n      instance.billing_model !== \"standard\" ? \"developer\" : \"standard\"\n    );\n    const providerInfo = providersInfo.providers.find(\n      (p) => p.id === instance.cloud_provider\n    );\n    if (!providerInfo) {\n      return Promise.reject(\"Invalid cloud provider\");\n    }\n    const standardPlanLimitsQuery = getProviderRegionsSizes(\n      providerInfo,\n      instance.region,\n      \"standard\"\n    );\n    const developerPlanLimitsQuery = getProviderRegionsSizes(\n      providerInfo,\n      instance.region,\n      \"developer\"\n    );\n    const [standardPlanLimits, developerPlanLimits] = await Promise.all([\n      standardPlanLimitsQuery,\n      developerPlanLimitsQuery,\n    ]);\n    return kafkaRequestToKafkaInstanceEnhanched(\n      instance,\n      standardQuota.marketplaceSubscriptions,\n      developerPlanLimits,\n      standardPlanLimits\n    );\n  };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport { useKafkaInstanceTransformer } from \"./useKafkaInstanceTransformer\";\n\nexport function useKafka(id: string | undefined, suspense = false) {\n  const { refetchInterval } = useApiConfiguration();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  const api = kafkasFleet();\n\n  return useQuery({\n    enabled: Boolean(id),\n    queryKey: kafkaQueries.instance.details({ id }),\n    queryFn: async () => {\n      if (!id) {\n        return Promise.reject(\"Invalid Kafka instance id\");\n      }\n      const instance = await api.getKafkaById(id);\n      return dataMapper(instance.data);\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchKafkasParams } from \"../fetchers\";\nimport { fetchKafkas } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport { useDedicatedClusters } from \"./useDedicatedClusters\";\nimport { useKafkaInstanceTransformer } from \"./useKafkaInstanceTransformer\";\n\nexport function useKafkas(\n  params: Omit<FetchKafkasParams, \"dataMapper\" | \"getKafkas\" | \"clusterIds\">\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { data, isError } = useDedicatedClusters();\n  const queryClient = useQueryClient();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  const api = kafkasFleet();\n  const clusterIds = data?.clusters.map((c) => c.id);\n\n  return useQuery({\n    queryKey: kafkaQueries.list({ ...params, clusterIds }),\n    queryFn: async () => {\n      const res = await fetchKafkas({\n        getKafkas: (...args) => api.getKafkas(...args),\n        dataMapper,\n        ...params,\n        clusterIds,\n      });\n      res.instances.forEach((i) =>\n        queryClient.setQueryData(kafkaQueries.instance.details({ id: i.id }), i)\n      );\n      return res;\n    },\n    enabled: Boolean(clusterIds) || isError,\n    refetchInterval,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchTopicParams } from \"../fetchers\";\nimport { fetchTopic } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopic(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchTopicParams,\n    \"getTopic\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { topics } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.topic(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = topics(params.adminUrl);\n\n      return fetchTopic({\n        getTopic: (...args) => api.getTopic(...args),\n        ...params,\n      });\n    },\n    enabled:\n      Boolean(params.adminUrl) &&\n      Boolean(params.id) &&\n      Boolean(params.topicName),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchTopicsParams } from \"../fetchers\";\nimport { fetchTopics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopics(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchTopicsParams,\n    \"getTopics\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { topics } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.topics(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = topics(params.adminUrl);\n\n      return fetchTopics({\n        getTopics: (...args) => api.getTopics(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl) && Boolean(params.id),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchUserAccountsParams } from \"../fetchers\";\nimport { fetchUserAccounts } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useUserAccounts(\n  params: Omit<FetchUserAccountsParams, \"getUserAccounts\">,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { userAccounts } = useApi();\n\n  return useQuery({\n    queryKey: masQueries.userAccounts(params),\n    queryFn: async () => {\n      const api = await userAccounts();\n\n      return fetchUserAccounts({\n        getUserAccounts: (...args) => api.listPrincipals(...args),\n        ...params,\n      });\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchPermissionsParams } from \"../fetchers\";\nimport { fetchPermissions } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useAcls(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchPermissionsParams,\n    \"getAcls\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { acls } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.permissions(params),\n    queryFn: () => {\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      const api = acls(params.adminUrl);\n\n      return fetchPermissions({\n        getAcls: (...args) => api.getAcls(...args),\n      });\n    },\n    enabled: Boolean(params.adminUrl),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchServiceAccountsParams } from \"../fetchers\";\nimport { fetchServiceAccounts } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useServiceAccounts(\n  params: Omit<FetchServiceAccountsParams, \"getServiceAccounts\">,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { serviceAccount } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.serviceAccounts(params),\n    queryFn: () => {\n      const api = serviceAccount();\n\n      return fetchServiceAccounts({\n        getServiceAccounts: (...args) => api.getServiceAccounts(...args),\n        ...params,\n      });\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchDedicatedClusters, fetchKafkas } from \"../fetchers\";\nimport { useKafkaInstanceTransformer } from \"../queries\";\nimport { dedicatedQueries, kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport const useDeveloperInstanceAvailabilityFetchQuery = () => {\n  const queryClient = useQueryClient();\n  const { kafkasFleet, dedicatedClusters } = useApi();\n  const dataMapper = useKafkaInstanceTransformer();\n\n  return (getUsername: () => Promise<string>) => {\n    const fleetApi = kafkasFleet();\n    const clustersApi = dedicatedClusters();\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.developerAvailability(),\n      queryFn: async () => {\n        const username = await getUsername();\n        if (!username) {\n          return Promise.reject(new Error(\"Invalid username\"));\n        }\n        let clusterIds: string[] = [];\n\n        try {\n          const clusterResponse = await queryClient.fetchQuery({\n            queryKey: dedicatedQueries.clusters(),\n            queryFn: () =>\n              fetchDedicatedClusters({\n                getEnterpriseOsdClusters: (...args) =>\n                  clustersApi.getEnterpriseOsdClusters(...args),\n              }),\n          });\n          clusterIds = clusterResponse.clusters.map((c) => c.id);\n        } catch {\n          // noop\n        }\n\n        const { instances } = await queryClient.fetchQuery({\n          queryKey: kafkaQueries.list({\n            direction: \"desc\",\n            sort: \"createdAt\",\n            name: [],\n            status: [],\n            owner: [username],\n            perPage: 1000,\n            page: 1,\n            clusterIds,\n            deployment: \"standard\",\n          }),\n          queryFn: () =>\n            fetchKafkas({\n              getKafkas: (...args) => fleetApi.getKafkas(...args),\n              dataMapper,\n              direction: \"desc\",\n              sort: \"createdAt\",\n              name: [],\n              status: [],\n              owner: [username],\n              perPage: 1000,\n              page: 1,\n              clusterIds,\n              deployment: \"standard\",\n            }),\n          staleTime: Infinity,\n        });\n\n        return instances.some((k) => k?.plan !== \"standard\") !== true;\n      },\n    });\n  };\n};\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { useKafkaInstanceTransformer } from \"../queries\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaFetchQuery() {\n  const queryClient = useQueryClient();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  return async (id: string) => {\n    const api = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.details({ id }),\n      queryFn: async () => {\n        const instance = await api.getKafkaById(id);\n        return dataMapper(instance.data);\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchKafkaKpis } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaKpisFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (id: string) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.kpi({ id }),\n      queryFn: async () => {\n        return fetchKafkaKpis(\n          (...args) => api.getMetricsByInstantQuery(...args),\n          id\n        );\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchKafkaMetricsProps } from \"../fetchers\";\nimport { fetchKafkaMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (params: Omit<FetchKafkaMetricsProps, \"getMetricsByRangeQuery\">) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.instance(params),\n      queryFn: async () => {\n        return fetchKafkaMetrics({\n          getMetricsByRangeQuery: (...args) =>\n            api.getMetricsByRangeQuery(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchMessagesParams } from \"../fetchers\";\nimport { fetchMessages } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useMessagesFetchQuery() {\n  const { records } = useApi();\n  const queryClient = useQueryClient();\n\n  return (\n    params: { id: string; adminUrl: string } & Omit<\n      FetchMessagesParams,\n      \"consumeRecords\"\n    >\n  ) => {\n    const api = records(params.adminUrl);\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.topicMessages(params),\n      queryFn: () => {\n        if (!params.id) {\n          return Promise.reject(\"Invalid id\");\n        }\n        if (!params.adminUrl) {\n          return Promise.reject(\"Invalid adminUrl\");\n        }\n\n        return fetchMessages({\n          consumeRecords: (...args) => api.consumeRecords(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfoWithRegionsCapacity } from \"../fetchers\";\nimport { fetchProviderRegionSizes } from \"../fetchers\";\nimport { providerQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useProviderRegionSizesFetchQuery() {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n\n  return (\n    provider: CloudProviderInfoWithRegionsCapacity,\n    region: string,\n    plan: Plan\n  ) => {\n    const kms = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: providerQueries.limits[\n        plan === \"standard\" ? \"standard\" : \"developer\"\n      ]({ provider: provider.id, region }),\n      queryFn: () =>\n        fetchProviderRegionSizes(\n          (...args) => kms.getInstanceTypesByCloudProviderAndRegion(...args),\n          provider,\n          region,\n          plan\n        ),\n      staleTime: Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport { fetchProvidersWithRegions } from \"../fetchers\";\nimport { providerQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useProvidersWithRegionsFetchQuery() {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n\n  return (plan: Plan) => {\n    const kms = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: providerQueries.list({ plan }),\n      queryFn: () =>\n        fetchProvidersWithRegions(\n          (...args) => kms.getCloudProviders(...args),\n          (...args) => kms.getCloudProviderRegions(...args),\n          plan\n        ),\n      staleTime: Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchOrganization, fetchStandardQuota } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useStandardQuotaFetchQuery(skipCache = false) {\n  const queryClient = useQueryClient();\n  const { account } = useApi();\n  const ams = account();\n\n  return async () => {\n    const organization = await queryClient.fetchQuery({\n      queryKey: masQueries.organization(),\n      queryFn: () =>\n        fetchOrganization((...args) =>\n          ams.apiAccountsMgmtV1CurrentAccountGet(...args)\n        ),\n      staleTime: Infinity,\n    });\n    if (!organization) {\n      return Promise.reject(\"Missing organization id\");\n    }\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.standardAvailable(),\n      queryFn: () =>\n        fetchStandardQuota(\n          (...args) =>\n            ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(...args),\n          organization\n        ),\n      staleTime: skipCache ? undefined : Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchTopicsParams } from \"../fetchers\";\nimport { fetchTopics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopicsFetchQuery() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return (\n    params: Omit<FetchTopicsParams, \"getTopics\"> & {\n      id: string;\n      adminUrl: string;\n    }\n  ) => {\n    const api = topics(params.adminUrl);\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.topics(params),\n      queryFn: async () => {\n        return fetchTopics({\n          getTopics: (...args) => api.getTopics(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchTopicsMetricsProps } from \"../fetchers\";\nimport { fetchTopicsMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopicsMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (params: Omit<FetchTopicsMetricsProps, \"getMetricsByRangeQuery\">) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.topic(params),\n      queryFn: async () => {\n        return fetchTopicsMetrics({\n          getMetricsByRangeQuery: (...args) =>\n            api.getMetricsByRangeQuery(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type {\n  CreateDedicatedKafkaFormData,\n  CreateDedicatedKafkaInstanceError,\n} from \"ui\";\nimport { dedicatedQueries, kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useCreateDedicatedKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      instance: CreateDedicatedKafkaFormData;\n      onSuccess: () => void;\n      onError: (error: CreateDedicatedKafkaInstanceError) => void;\n    }) {\n      const { instance, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      const kafkaRequest: KafkaRequestPayload = {\n        name: instance.name,\n        cluster_id: instance.cluster.id,\n      };\n      kafkaRequest.plan = \"standard.\" + instance.sizeId;\n      kafkaRequest.billing_model = \"enterprise\";\n      try {\n        await api.createKafka(true, kafkaRequest);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const { code } = error?.response?.data || {};\n\n          switch (code) {\n            case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n              onError(\"name-taken\");\n              break;\n\n            case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n              onError(\"cluster-unavailable\");\n              break;\n\n            case ErrorCodes.INSUFFICIENT_QUOTA:\n              onError(\"insufficient-quota\");\n              break;\n\n            default:\n              console.error(\n                \"useCreateDedicatedKafkaMutation\",\n                \"createKafka unknown error\",\n                error\n              );\n              onError(\"unknown\");\n          }\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n        void queryClient.invalidateQueries([dedicatedQueries._root()]);\n      },\n    }\n  );\n}\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n} as const;\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type { CreateKafkaFormData, CreateKafkaInstanceError } from \"ui\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useCreateKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      instance: CreateKafkaFormData;\n      onSuccess: () => void;\n      onError: (error: CreateKafkaInstanceError) => void;\n    }) {\n      const { instance, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      const kafkaRequest: KafkaRequestPayload = {\n        name: instance.name,\n        cloud_provider: instance.provider,\n        region: instance.region,\n      };\n      kafkaRequest.plan = instance.plan + \".\" + instance.sizeId;\n      kafkaRequest.billing_model =\n        instance.billing === \"prepaid\"\n          ? \"standard\"\n          : instance.billing !== undefined\n          ? \"marketplace\"\n          : null;\n      kafkaRequest.billing_cloud_account_id =\n        instance.billing && instance.billing !== \"prepaid\"\n          ? instance.billing.subscription\n          : null;\n      try {\n        await api.createKafka(true, kafkaRequest);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const { code } = error?.response?.data || {};\n\n          switch (instance.plan) {\n            case \"developer\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                // regardless of the error, let's not give too many details to trial users\n                default:\n                  onError(\"developer-unavailable\");\n                  break;\n              }\n              break;\n\n            case \"standard\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                  onError(\"region-unavailable\");\n                  break;\n\n                case ErrorCodes.INSUFFICIENT_QUOTA:\n                  onError(\"insufficient-quota\");\n                  break;\n\n                default:\n                  console.error(\n                    \"useKafkaCreateInstanceMutation\",\n                    \"createKafka unknown error\",\n                    error\n                  );\n                  onError(\"unknown\");\n              }\n              break;\n          }\n        } else {\n          console.error(\n            \"useKafkaCreateInstanceMutation\",\n            \"createKafka unexpected error\",\n            error\n          );\n          onError(\"unknown\");\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n      },\n    }\n  );\n}\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n} as const;\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      id: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { id, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      try {\n        await api.deleteKafkaById(id, true);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance({\n      adminUrl,\n      name,\n      onSuccess,\n      onError,\n    }: {\n      instanceId: string;\n      adminUrl: string;\n      name: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const api = topics(adminUrl);\n      try {\n        await api.deleteTopic(name);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type {\n  KafkaRequest,\n  KafkaUpdateRequest,\n} from \"@rhoas/kafka-management-sdk\";\nimport { getErrorCode, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type { AxiosResponse } from \"axios\";\nimport { AxiosError } from \"axios\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\ntype Errors = \"invalid-user\" | \"other\" | \"unknown\";\n\nexport function useUpdateKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation<\n    AxiosResponse<KafkaRequest>,\n    { type: Errors; message?: string },\n    { id: string; updates: KafkaUpdateRequest },\n    unknown\n  >(\n    async function kafkaCreateInstance({ id, updates }) {\n      const api = kafkasFleet();\n      try {\n        return await api.updateKafkaById(id, updates);\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const code = getErrorCode(error);\n\n          switch (code) {\n            case \"KAFKAS-MGMT-21\": {\n              return Promise.reject({\n                type: \"invalid-user\",\n                message: error.response?.data.reason,\n              });\n            }\n            default: {\n              return Promise.reject({\n                type: \"other\",\n                message: error.response?.data.reason,\n              });\n            }\n          }\n        } else if (error instanceof AxiosError) {\n          return Promise.reject({ type: \"unknown\", message: error.message });\n        } else {\n          return Promise.reject({ type: \"unknown\", message: \"unknown\" });\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteConsumerGroupMutation() {\n  const { consumerGroups } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function deleteConsumerGroup(props: {\n      instanceId: string;\n      adminUrl: string;\n      consumerGroupId: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { instanceId, adminUrl, consumerGroupId, onSuccess, onError } =\n        props;\n      const api = consumerGroups(adminUrl);\n      try {\n        await api.deleteConsumerGroupById(consumerGroupId);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useApi } from \"../useApi\";\nimport type { OffsetValue } from \"ui\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\n\nexport function useResetConsumerGroupMutation() {\n  const { consumerGroups } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function consumerGroupResetOffset(props: {\n      instanceId: string;\n      adminUrl: string;\n      consumerGroupId: string;\n      offset: OffsetValue;\n      topic: string;\n      partitions: number[];\n      value?: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const {\n        instanceId,\n        adminUrl,\n        consumerGroupId,\n        offset,\n        topic,\n        partitions,\n        value,\n        onSuccess,\n        onError,\n      } = props;\n      const api = consumerGroups(adminUrl);\n      try {\n        await api.resetConsumerGroupOffset(consumerGroupId, {\n          value,\n          offset,\n          topics: [{ topic, partitions }],\n        });\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport type { AclFilter } from \"../types\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeletePermissionsMutation() {\n  const { acls } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function deletePermissions(props: {\n      instanceId: string;\n      adminUrl: string;\n      acl: AclFilter;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, acl, onSuccess, onError } = props;\n      const api = acls(adminUrl);\n      try {\n        await api.deleteAcls(\n          acl.resourceType,\n          acl.resourceName,\n          acl.patternType,\n          acl.principal,\n          acl.operation,\n          acl.permissionType\n        );\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason || \"\";\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance.permissions({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useUpdatePermissionsMutation() {\n  const { acls } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function updatePermissionsPermissions(props: {\n      instanceId: string;\n      adminUrl: string;\n      acl: AclBinding;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, acl, onSuccess, onError } = props;\n      const api = acls(adminUrl);\n      try {\n        await api.createAcl({\n          resourceName: acl.resourceName,\n          resourceType: acl.resourceType,\n          patternType: acl.patternType,\n          permission: acl.permission,\n          principal: acl.principal,\n          operation: acl.operation,\n        });\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type {\n  AclOperationFilter,\n  AclPatternTypeFilter,\n  AclPermissionTypeFilter,\n  AclResourceTypeFilter,\n} from \"@rhoas/kafka-instance-sdk\";\nimport {\n  ConsumerGroupOrderKey,\n  TopicOrderKey,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { RangeQuery } from \"@rhoas/kafka-management-sdk\";\n\nexport type NoUndefinedField<T> = {\n  [P in keyof T]-?: NoUndefinedField<NonNullable<T[P]>>;\n};\n\nexport type SafeRangeQuery = NoUndefinedField<RangeQuery>;\n\nexport const KafkaInstancesSortableColumns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"provider\",\n  \"region\",\n] as const;\n\nexport type KafkaInstancesSortableColumn =\n  (typeof KafkaInstancesSortableColumns)[number];\n\nexport const KafkaTopicsSortableColumns = [\n  ...Object.values(TopicOrderKey),\n] as const;\n\nexport type KafkaTopicsSortableColumn =\n  (typeof KafkaTopicsSortableColumns)[number];\n\nexport const KafkaConsumerGroupSortableColumns = [\n  ...Object.values(ConsumerGroupOrderKey),\n] as const;\n\nexport type KafkaConsumerGroupSortableColumn =\n  (typeof KafkaConsumerGroupSortableColumns)[number];\n\nexport type AclFilter = {\n  resourceType?: AclResourceTypeFilter;\n  resourceName?: string;\n  patternType?: AclPatternTypeFilter;\n  principal?: string;\n  operation?: AclOperationFilter;\n  permissionType?: AclPermissionTypeFilter;\n};\n","import { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { isReactQueryDevToolsEanbled } from \"local-storage-helpers\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext, lazy, Suspense, useContext } from \"react\";\n\nconst ReactQueryDevtoolsProduction = lazy(() =>\n  import(\"@tanstack/react-query-devtools/build/lib/index.prod.js\").then(\n    (d) => ({\n      default: d.ReactQueryDevtools,\n    })\n  )\n);\n\ntype ApiContextProps = {\n  accessToken: () => Promise<string>;\n  basePath: string;\n  refetchInterval: number;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst ApiContext = createContext<ApiContextProps>(null!);\n\nconst queryClient = new QueryClient();\n\nexport const ApiProvider: FunctionComponent<ApiContextProps> = ({\n  children,\n  ...context\n}) => {\n  const showDevTools = isReactQueryDevToolsEanbled();\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ApiContext.Provider value={context}>\n        {children}\n        {showDevTools && (\n          <Suspense fallback={null}>\n            <ReactQueryDevtoolsProduction />\n          </Suspense>\n        )}\n      </ApiContext.Provider>\n    </QueryClientProvider>\n  );\n};\n\nexport function useApiConfiguration() {\n  return useContext(ApiContext);\n}\n\nexport { useQueryErrorResetBoundary } from \"@tanstack/react-query\";\n","import type {\n  ConsumerGroup as ConsumerGroupApi,\n  ConsumerGroupState,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type {\n  Consumer,\n  ConsumerGroup,\n} from \"ui-models/src/models/consumer-group\";\n\nexport function consumerGroupTransformer(t: ConsumerGroupApi): ConsumerGroup {\n  const state = stateMapping[t.state as ConsumerGroupState];\n  return {\n    groupId: t.groupId,\n    state: state,\n    consumers: t.consumers.map<Consumer>((consumer) => ({\n      groupId: consumer.groupId,\n      topic: consumer.topic,\n      lag: consumer.lag,\n      memberId: consumer.memberId,\n      partition: consumer.partition,\n      offset: consumer.offset,\n      logEndOffset: consumer.logEndOffset,\n    })),\n    activeConsumers: t.metrics?.activeConsumers,\n    laggingPartitions: t.metrics?.laggingPartitions,\n    unassignedPartitions: t.metrics?.unassignedPartitions,\n  };\n}\n\nexport const stateMapping: {\n  [state in ConsumerGroupState]: ConsumerGroup[\"state\"];\n} = {\n  DEAD: \"Dead\",\n  EMPTY: \"Empty\",\n  STABLE: \"Stable\",\n  UNKNOWN: \"Unknown\",\n  COMPLETING_REBALANCE: \"CompletingRebalance\",\n  PREPARING_REBALANCE: \"PreparingRebalance\",\n};\n","import type { GroupsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { ConsumerGroup } from \"ui-models/src/models/consumer-group\";\nimport { consumerGroupTransformer } from \"../transformers/consumerGroupTransformer\";\n\nexport type FetchConsumerGroupParams = {\n  getConsumerGroupById: GroupsApi[\"getConsumerGroupById\"];\n  consumerGroupId: string;\n};\n\nexport async function fetchConsumerGroup({\n  getConsumerGroupById,\n  consumerGroupId,\n}: FetchConsumerGroupParams): Promise<ConsumerGroup> {\n  const response = await getConsumerGroupById(consumerGroupId);\n  return consumerGroupTransformer(response.data);\n}\n","import type {\n  ConsumerGroupState,\n  GroupsApi,\n  SortDirection,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { ConsumerGroup } from \"ui-models/src/models/consumer-group\";\nimport { stateMapping } from \"../transformers/consumerGroupTransformer\";\nimport type { KafkaConsumerGroupSortableColumn } from \"../types\";\n\nexport type FetchConsumerGroupsParams = {\n  getConsumerGroups: GroupsApi[\"getConsumerGroups\"];\n  page?: number;\n  perPage?: number;\n  sort?: KafkaConsumerGroupSortableColumn;\n  direction?: SortDirection;\n  topic?: string;\n  groupId?: string;\n};\n\nexport async function fetchConsumerGroups({\n  getConsumerGroups,\n  page,\n  perPage,\n  topic,\n  groupId,\n  sort,\n  direction,\n}: FetchConsumerGroupsParams): Promise<{\n  groups: ConsumerGroup[];\n  count: number;\n}> {\n  const response = await getConsumerGroups(\n    undefined,\n    undefined,\n    perPage,\n    page,\n    topic,\n    groupId,\n    direction,\n    sort\n  );\n  const groups = (response.data.items || []).map<ConsumerGroup>((t) => ({\n    groupId: t.groupId || \"\",\n    state: stateMapping[t.state as ConsumerGroupState],\n    consumers: t.consumers,\n    activeConsumers: t.metrics?.activeConsumers,\n    laggingPartitions: t.metrics?.laggingPartitions,\n    unassignedPartitions: t.metrics?.unassignedPartitions,\n  }));\n  const count = response.data.total;\n\n  return { count, groups };\n}\n","import type { EnterpriseCluster } from \"@rhoas/kafka-management-sdk\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\n\nexport function dedicatedClusterTransformer(\n  c: EnterpriseCluster & { [key: string]: any } // TODO: remove this hack with the latest SDK\n): DedicatedCluster {\n  if (c.cluster_id === undefined || c.status === undefined) {\n    throw new Error(\"Invalid EnterpriseCluster data\");\n  }\n  return {\n    id: c.cluster_id,\n    status:\n      c.status === \"ready\"\n        ? \"ready\"\n        : c.status === \"failed\"\n        ? \"failed\"\n        : \"provisioning\",\n    requiresPrivateNetwork: c.access_kafkas_via_private_network,\n    az: c.multi_az ? \"multi\" : \"single\",\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    cloudProvider: c.cloud_provider,\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    cloudRegion: c.region,\n  };\n}\n","import type { EnterpriseDataplaneClustersApi } from \"@rhoas/kafka-management-sdk\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport { dedicatedClusterTransformer } from \"../transformers/dedicatedClusterTransformer\";\n\nexport type FetchDedicatedClustersParams = {\n  getEnterpriseOsdClusters: EnterpriseDataplaneClustersApi[\"getEnterpriseOsdClusters\"];\n};\n\nexport async function fetchDedicatedClusters({\n  getEnterpriseOsdClusters,\n}: FetchDedicatedClustersParams): Promise<{\n  clusters: DedicatedCluster[];\n  count: number;\n}> {\n  const response = await getEnterpriseOsdClusters();\n  if (response.status === 403) {\n    throw new MissingDedicatedEntitlement();\n  }\n  return {\n    clusters: (response.data.items || []).map(dedicatedClusterTransformer),\n    count: response.data.total,\n  };\n}\n\nexport class MissingDedicatedEntitlement extends Error {}\n","import type { QuotaCost } from \"@rhoas/account-management-sdk\";\n\nexport const standardId = \"RHOSAK\" as const;\nexport const developerId = \"RHOSAKTrial\" as const;\nexport const dedicatedId = \"RHOSAKCC\" as const;\nexport const resourceName = \"rhosak\" as const;\n\nexport function isStandardQuota(q: QuotaCost) {\n  return q.related_resources?.find((r) => r.billing_model === \"standard\");\n}\n\nexport function isMarketplaceQuota(q: QuotaCost) {\n  return q.related_resources?.find((r) => r.billing_model === \"marketplace\");\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport type { MarketPlaceSubscriptions } from \"ui-models/src/models/kafka\";\nimport {\n  dedicatedId,\n  isStandardQuota,\n  resourceName,\n} from \"../utilsAndConstants\";\n\nexport type DedicatedQuota = {\n  hasTrialQuota: boolean;\n  remainingDedicatedQuota: number | undefined;\n  remainingMarketplaceQuota: number | undefined;\n  marketplaceSubscriptions: MarketPlaceSubscriptions[];\n};\nexport const fetchDedicatedQuota = async (\n  api: AppServicesApi[\"apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet\"],\n  organizationId: string\n) => {\n  const quotaResponse = await api(\n    organizationId,\n    undefined,\n    true,\n    undefined,\n    true\n  );\n  if (quotaResponse.status !== 200) {\n    throw new Error(quotaResponse.statusText);\n  }\n  const dedicatedQuotas = quotaResponse.data.items?.filter((q) =>\n    q.related_resources?.find(\n      (r) => r.resource_name === resourceName && r.product === dedicatedId\n    )\n  );\n\n  const dedicatedQuota = dedicatedQuotas?.find(isStandardQuota);\n  const hasDedicatedQuota = dedicatedQuota !== undefined;\n\n  const remainingDedicatedQuota = dedicatedQuota\n    ? dedicatedQuota.allowed - dedicatedQuota.consumed\n    : undefined;\n\n  return {\n    hasDedicatedQuota,\n    remainingDedicatedQuota,\n  };\n};\n","import type { SupportedKafkaSize } from \"@rhoas/kafka-management-sdk\";\nimport type { SizeWithLimits } from \"../fetchers\";\n\nexport function apiSizeToComponentSize(\n  isDisabled: (id: string) => boolean,\n  apiSize: SupportedKafkaSize\n): SizeWithLimits {\n  const s = apiSize as Required<SupportedKafkaSize>;\n  return {\n    id: s.id,\n    displayName: s.display_name,\n    quota: s.quota_consumed,\n    ingress: (s.ingress_throughput_per_sec.bytes || 0) / 1048576,\n    egress: (s.egress_throughput_per_sec.bytes || 0) / 1048576,\n    storage: Math.round((s.max_data_retention_size.bytes || 0) / 1073741824),\n    connections: s.total_max_connections,\n    connectionRate: s.max_connection_attempts_per_sec,\n    maxPartitions: s.max_partitions,\n    messageSize: (s.max_message_size.bytes || 0) / 1048576,\n    status: s.maturity_status === \"stable\" ? \"stable\" : \"preview\",\n    trialDurationHours: s.lifespan_seconds ? s.lifespan_seconds / 60 / 60 : 0,\n    isDisabled: isDisabled(s.id),\n  };\n}\n","import type {\n  EnterpriseDataplaneClustersApi,\n  SupportedKafkaSize,\n} from \"@rhoas/kafka-management-sdk\";\nimport type { DedicatedSizes } from \"ui\";\nimport { apiSizeToComponentSize } from \"../transformer/apiSizeToComponentSize\";\n\nexport type FetchDedicatedClusterSizesParams = {\n  getEnterpriseClusterById: EnterpriseDataplaneClustersApi[\"getEnterpriseClusterById\"];\n  clusterId: string;\n};\n\nexport async function fetchDedicatedClusterSizes({\n  getEnterpriseClusterById,\n  clusterId,\n}: FetchDedicatedClusterSizesParams): Promise<DedicatedSizes> {\n  const response = await getEnterpriseClusterById(clusterId);\n  const data = response.data as typeof response.data & { [key: string]: any }; // TODO: fix this with the latest SDK version\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n  const supportedInstanceTypes = data.supported_instance_types.instance_types;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n  const sizes: DedicatedSizes = supportedInstanceTypes\n    .flatMap((i: { sizes: SupportedKafkaSize[] }) => i.sizes)\n    .map((s: SupportedKafkaSize) => apiSizeToComponentSize(() => false, s));\n  return sizes;\n}\n","import type { DefaultApi, InstantQuery } from \"@rhoas/kafka-management-sdk\";\nimport type { NoUndefinedField } from \"../types\";\n\nexport async function fetchKafkaKpis(\n  getMetricsByInstantQuery: DefaultApi[\"getMetricsByInstantQuery\"],\n  id: string\n) {\n  let topics = 0,\n    topicPartitions = 0,\n    consumerGroups = 0;\n\n  const response = await getMetricsByInstantQuery(id, [\n    \"kafka_topic:kafka_topic_partitions:sum\", // (Number of topic partitions)\n    \"kafka_topic:kafka_topic_partitions:count\", // (Number of topics)\n    \"consumergroup:kafka_consumergroup_members:count\", // (number of consumer groups - note that this metric will appear after a consumer group is created. There should be handled by the UI in a way that the metric isn't visible if no consumer groups are created)\n  ]);\n\n  const safeMetrics: NoUndefinedField<InstantQuery[]> = (response.data.items ||\n    []) as NoUndefinedField<InstantQuery[]>;\n\n  safeMetrics.forEach(({ metric, value }) => {\n    const { __name__: name } = metric;\n\n    switch (name) {\n      case \"kafka_topic:kafka_topic_partitions:sum\":\n        topicPartitions = value;\n        break;\n      case \"kafka_topic:kafka_topic_partitions:count\":\n        topics = value;\n        break;\n      case \"consumergroup:kafka_consumergroup_members:count\":\n        consumerGroups = value;\n        break;\n    }\n  });\n  return {\n    consumerGroups,\n    topicPartitions,\n    topics,\n  };\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { GetKafkaInstanceMetricsResponse, TimeSeriesMetrics } from \"ui\";\nimport type { SafeRangeQuery } from \"../types\";\n\nexport type FetchKafkaMetricsProps = {\n  getMetricsByRangeQuery: DefaultApi[\"getMetricsByRangeQuery\"];\n  id: string;\n  duration: number;\n  interval: number;\n};\n\nexport async function fetchKafkaMetrics({\n  getMetricsByRangeQuery,\n  id,\n  duration,\n  interval,\n}: FetchKafkaMetricsProps): Promise<GetKafkaInstanceMetricsResponse> {\n  const response = await getMetricsByRangeQuery(id, duration, interval, [\n    \"kubelet_volume_stats_used_bytes\",\n    \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\",\n    \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\",\n  ]);\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(\n        m.values &&\n        m.metric &&\n        m.metric.topic &&\n        m.metric.name &&\n        m.metric.persistentvolumeclaim &&\n        m.metric.persistentvolumeclaim.includes(\"zookeeper\")\n      )\n  ) as SafeRangeQuery[];\n\n  const usedDiskSpaceMetrics: TimeSeriesMetrics = {};\n  const connectionAttemptRateMetrics: TimeSeriesMetrics = {};\n  const clientConnectionsMetrics: TimeSeriesMetrics = {};\n\n  const connectionRateLimit = 0,\n    connectionsLimit = 0,\n    diskSpaceLimit = 0;\n\n  safeMetrics.forEach((m) => {\n    const { __name__: name } = m.metric;\n\n    function addAggregatedValuesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    switch (name) {\n      case \"kubelet_volume_stats_used_bytes\":\n        addAggregatedValuesTo(usedDiskSpaceMetrics);\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\":\n        addAggregatedValuesTo(connectionAttemptRateMetrics);\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\":\n        addAggregatedValuesTo(clientConnectionsMetrics);\n        break;\n    }\n  });\n\n  return {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionRateLimit,\n    connectionsLimit,\n  };\n}\n","export function valuesToQuery(\n  field: string,\n  values: string[],\n  comparison: \"%\" | \"=\" | \"<>\",\n  join: \"and\" | \"or\"\n): string | undefined {\n  return values\n    .map((v) =>\n      comparison === \"%\"\n        ? `${field} like %${v.trim()}%`\n        : `${field} ${comparison} ${v.trim()}`\n    )\n    .join(` ${join} `);\n}\n","import type { DefaultApi, KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport type { SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { SimplifiedStatuses } from \"ui-models/src/models/kafka\";\nimport type { KafkaInstanceEnhanced } from \"../transformers/kafkaRequestToKafkaInstanceEnhanched\";\nimport type { KafkaInstancesSortableColumn } from \"../types\";\nimport { valuesToQuery } from \"./valuesToQuery\";\n\nconst uiColumnMapping: {\n  [key in KafkaInstancesSortableColumn]: keyof KafkaRequest;\n} = {\n  name: \"name\",\n  owner: \"owner\",\n  provider: \"cloud_provider\",\n  region: \"region\",\n  createdAt: \"created_at\",\n};\nexport type FetchKafkasParams = {\n  getKafkas: DefaultApi[\"getKafkas\"];\n  dataMapper: (data: KafkaRequest) => Promise<KafkaInstanceEnhanced>;\n  page: number;\n  perPage: number;\n  name: string[];\n  owner: string[];\n  status: SimplifiedStatus[];\n  sort: KafkaInstancesSortableColumn;\n  direction: \"asc\" | \"desc\";\n  clusterIds: string[] | undefined;\n  deployment: \"standard\" | \"clusters\";\n};\n\nexport async function fetchKafkas(params: FetchKafkasParams): Promise<{\n  instances: KafkaInstanceEnhanced[];\n  count: number;\n}> {\n  const {\n    name,\n    status,\n    owner,\n    sort,\n    direction,\n    page,\n    perPage,\n    clusterIds,\n    deployment,\n    dataMapper,\n    getKafkas,\n  } = params;\n  const search = filtersToSearch(name, owner, status, clusterIds, deployment);\n\n  const res = await getKafkas(\n    page.toString(10),\n    perPage.toString(10),\n    sort ? `${uiColumnMapping[sort]} ${direction}` : undefined,\n    search\n  );\n  const rawInstances = res.data.items;\n  const count = res.data.total;\n  const instances = await Promise.all(rawInstances.map(dataMapper));\n  return {\n    instances,\n    count,\n  };\n}\n\nexport function filtersToSearch(\n  name: string[],\n  owner: string[],\n  status: SimplifiedStatus[],\n  clusters: string[] | undefined,\n  deployment: \"standard\" | \"clusters\"\n): string {\n  const querystring = [\n    valuesToQuery(\"name\", name, \"%\", \"or\"),\n    valuesToQuery(\"owner\", owner, \"%\", \"or\"),\n    valuesToQuery(\n      \"status\",\n      status.flatMap((s) => SimplifiedStatuses[s]),\n      \"=\",\n      \"or\"\n    ),\n    clusters\n      ? valuesToQuery(\n          \"cluster_id\",\n          clusters,\n          deployment === \"standard\" ? \"<>\" : \"=\",\n          deployment === \"standard\" ? \"and\" : \"or\"\n        )\n      : null,\n  ]\n    .filter(Boolean)\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    .map((q) => `(${q!})`)\n    .join(\" and \");\n  return querystring;\n}\n","import type { Record, RecordsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport type { DateIsoString } from \"../../../ui-models/src/types\";\n\nexport type FetchMessagesParams = {\n  consumeRecords: RecordsApi[\"consumeRecords\"];\n  topicName: string;\n  partition?: number;\n  offset?: number;\n  timestamp?: DateIsoString;\n  limit: number;\n};\n\nexport async function fetchMessages({\n  topicName,\n  consumeRecords,\n  partition,\n  offset,\n  timestamp,\n  limit,\n}: FetchMessagesParams): Promise<Message[]> {\n  const response = await consumeRecords(\n    topicName,\n    undefined,\n    limit,\n    undefined,\n    offset,\n    partition,\n    timestamp\n  );\n  return response.data.items.map((m: Record) => ({\n    partition: m.partition,\n    offset: m.offset,\n    timestamp: m.timestamp as DateIsoString,\n    key: m.key,\n    value: m.value,\n    headers: m.headers || {},\n  }));\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\n\nexport async function fetchOrganization(\n  api: AppServicesApi[\"apiAccountsMgmtV1CurrentAccountGet\"]\n) {\n  const account = await api();\n  const orgId = account?.data?.organization?.id;\n  return orgId;\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { Plan, Size } from \"ui-models/src/models/kafka\";\nimport { apiSizeToComponentSize } from \"../transformer/apiSizeToComponentSize\";\nimport type { CloudProviderInfoWithRegionsCapacity } from \"./fetchProvidersWithRegions\";\n\nexport type SizeWithLimits = Size & { trialDurationHours: number };\n\nexport async function fetchProviderRegionSizes(\n  api: DefaultApi[\"getInstanceTypesByCloudProviderAndRegion\"],\n  providerInfo: CloudProviderInfoWithRegionsCapacity,\n  region: string,\n  instanceType: Plan\n) {\n  const regions = providerInfo.regions;\n  const regionInfo = regions.find((r) => r.id === region);\n  const availableSizes =\n    regionInfo?.capacity.flatMap((c) =>\n      c.available_sizes.map((s) => `${c.instance_type}.${s}`)\n    ) || [];\n  const sizes = await api(providerInfo.id, region);\n  if (!sizes?.data?.instance_types) {\n    throw new Error(`No instance_types from backend`);\n  }\n\n  const standardSizes =\n    sizes?.data?.instance_types.find((i) => i.id === instanceType)?.sizes || [];\n\n  return standardSizes.map(\n    apiSizeToComponentSize.bind(\n      undefined,\n      (id) => !availableSizes.includes(`${instanceType}.${id}`)\n    )\n  );\n}\n\n//\n// export async function fetchProviderRegionSizesForPlanStandard (\n//   api: DefaultApi['getInstanceTypesByCloudProviderAndRegion'], providerInfo: CloudProviderInfoWithRegionsCapacity, region: string\n// )  {\n//   return fetchProviderRegionSizes(api, providerInfo, region, \"standard\");\n// };\n//\n// export const fetchProviderRegionSizesForPlanDeveloper = (\n//   api: DefaultApi['getInstanceTypesByCloudProviderAndRegion'], providerInfo: CloudProviderInfoWithRegionsCapacity, region: string\n//\n// ) => {\n//   const { data: standardSizes, isError } = await fetchProviderRegionSizes(\n//     provider,\n//     region,\n//     \"standard\"\n//   );\n//   const { data: developerSizes } = fetchProviderRegionSizes(\n//     provider,\n//     region,\n//     \"developer\"\n//   );\n//   return useQuery({\n//     queryKey: [],\n//     queryFn: () => {\n//       return {\n//         standard:\n//           standardSizes ||\n//           ([\n//             { id: \"1\", displayName: \"1\" },\n//             { id: \"2\", displayName: \"2\" },\n//           ] as StandardSizes),\n//         trial: developerSizes![0],\n//       };\n//     },\n//     enabled: (!!standardSizes || isError) && !!developerSizes,\n//   });\n// };\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { CloudProviderInfo } from \"ui\";\nimport type { CloudProvider, Plan } from \"ui-models/src/models/kafka\";\n\nexport type CloudProviderInfoWithRegionsCapacity = Omit<\n  CloudProviderInfo,\n  \"regions\"\n> & {\n  regions: Awaited<ReturnType<typeof fetchProviderRegions>>;\n};\n\nexport async function fetchProvidersWithRegions(\n  getCloudProviders: DefaultApi[\"getCloudProviders\"],\n  getCloudProviderRegions: DefaultApi[\"getCloudProviderRegions\"],\n  plan: Plan\n) {\n  const res = await getCloudProviders();\n  const allProviders = res?.data?.items || [];\n\n  const providers = (\n    await Promise.all(\n      allProviders\n        .filter((p) => p.enabled)\n        .map(async (provider) => {\n          const regions = await fetchProviderRegions(\n            getCloudProviderRegions,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            provider.id!,\n            plan\n          );\n          const providerInfo: CloudProviderInfoWithRegionsCapacity = {\n            id: provider.id as CloudProvider,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            displayName: provider.display_name!,\n            regions,\n          };\n          return regions.length > 0 ? providerInfo : null;\n        })\n    )\n  ).filter((p) => Boolean(p)) as CloudProviderInfoWithRegionsCapacity[];\n  if (providers.length === 0) {\n    throw new Error(\"No cloud providers with capacity found\");\n  }\n  const firstProvider = providers[0];\n  return { providers, defaultProvider: firstProvider?.id };\n}\n\nexport async function fetchProviderRegions(\n  getCloudProviderRegions: DefaultApi[\"getCloudProviderRegions\"],\n  provider: string,\n  instanceType: Plan\n) {\n  const res = await getCloudProviderRegions(provider);\n\n  if (!res?.data?.items) {\n    return Promise.reject(\"Invalid provider\");\n  }\n\n  const regionsForInstance = res.data.items.filter(\n    (region) =>\n      region.enabled &&\n      region.capacity.some((c) => c.instance_type === instanceType)\n  );\n\n  return regionsForInstance.map((r) => {\n    const max_capacity_reached = r.capacity?.some(\n      (c) => c.instance_type === instanceType && c.available_sizes?.length === 0\n    );\n\n    return {\n      id: r.id as CloudProvider,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      displayName: r.display_name!,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      isDisabled: max_capacity_reached,\n      capacity: r.capacity,\n    };\n  });\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport type {\n  MarketPlace,\n  MarketPlaceSubscriptions,\n} from \"ui-models/src/models/kafka\";\nimport {\n  developerId,\n  isMarketplaceQuota,\n  isStandardQuota,\n  resourceName,\n  standardId,\n} from \"../utilsAndConstants\";\n\nexport type StandardQuota = {\n  hasTrialQuota: boolean;\n  remainingPrepaidQuota: number | undefined;\n  remainingMarketplaceQuota: number | undefined;\n  marketplaceSubscriptions: MarketPlaceSubscriptions[];\n};\nexport const fetchStandardQuota = async (\n  api: AppServicesApi[\"apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet\"],\n  organizationId: string\n) => {\n  const quotaResponse = await api(\n    organizationId,\n    undefined,\n    true,\n    undefined,\n    true\n  );\n  if (quotaResponse.status !== 200) {\n    throw new Error(quotaResponse.statusText);\n  }\n  const standardQuotas = quotaResponse.data.items?.filter((q) =>\n    q.related_resources?.find(\n      (r) => r.resource_name === resourceName && r.product === standardId\n    )\n  );\n\n  const prepaidQuota = standardQuotas?.find(isStandardQuota);\n  const hasStandardQuota = prepaidQuota !== undefined;\n\n  const marketplaceQuotas = standardQuotas?.some(isMarketplaceQuota)\n    ? standardQuotas?.filter(isMarketplaceQuota)\n    : undefined;\n\n  const hasTrialQuota =\n    (prepaidQuota === undefined &&\n      marketplaceQuotas === undefined &&\n      quotaResponse.data.items?.some((q) =>\n        q.related_resources?.find(\n          (r) => r.resource_name === resourceName && r.product === developerId\n        )\n      )) ||\n    false;\n\n  const remainingPrepaidQuota = prepaidQuota\n    ? prepaidQuota.allowed - prepaidQuota.consumed\n    : undefined;\n  const remainingMarketplaceQuota = marketplaceQuotas\n    ? marketplaceQuotas.reduce((agg, q) => q.allowed - q.consumed + agg, 0)\n    : undefined;\n  const unaggregatedSubscriptions = marketplaceQuotas\n    ?.filter((q) => q.cloud_accounts !== undefined)\n    .flatMap((q) => q.cloud_accounts || []);\n  const subscriptionMarketplaces = Array.from(\n    new Set(\n      unaggregatedSubscriptions?.map((s) => s.cloud_provider_id as MarketPlace)\n    )\n  );\n  const marketplaceSubscriptions: MarketPlaceSubscriptions[] =\n    unaggregatedSubscriptions\n      ? subscriptionMarketplaces.map((marketplace) => ({\n          marketplace,\n          subscriptions: unaggregatedSubscriptions\n            .filter((s) => s.cloud_provider_id === marketplace)\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            .map((s) => s.cloud_account_id!),\n        }))\n      : [];\n\n  return {\n    hasStandardQuota,\n    hasTrialQuota,\n    remainingPrepaidQuota,\n    remainingMarketplaceQuota,\n    marketplaceSubscriptions,\n  };\n};\n","import type { Topic as ApiTopic } from \"@rhoas/kafka-instance-sdk/dist/generated/model/topic\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type {\n  TopicConfig,\n  TopicConfigField,\n} from \"ui-models/src/models/topic-config\";\nimport type { Bytes, Milliseconds } from \"ui-models/src/types\";\n\nexport const developerDefaults: TopicConfig = {\n  \"cleanup.policy\": \"delete\",\n  \"delete.retention.ms\": { type: \"ms\", value: BigInt(\"86400000\") },\n  \"max.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"max.message.bytes\": { type: \"bytes\", value: BigInt(\"1048588\") },\n  \"message.downconversion.enable\": true,\n  \"message.timestamp.difference.max.ms\": {\n    type: \"ms\",\n    value: BigInt(\"9223372036854775807\"),\n  },\n  \"message.timestamp.type\": \"CreateTime\",\n  \"min.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"retention.bytes\": { type: \"bytes\", value: BigInt(\"-1\") },\n  \"retention.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"segment.bytes\": { type: \"bytes\", value: BigInt(\"1073741824\") },\n  \"segment.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"compression.type\": \"producer\",\n  \"file.delete.delay.ms\": { type: \"ms\", value: BigInt(\"60000\") },\n  \"flush.messages\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"flush.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"index.interval.bytes\": { type: \"bytes\", value: BigInt(\"4096\") },\n  \"message.format.version\": \"3.0-IV1\",\n  \"min.cleanable.dirty.ratio\": 0.5,\n  \"min.insync.replicas\": 1,\n  \"segment.index.bytes\": { type: \"bytes\", value: BigInt(\"10485760\") },\n  \"segment.jitter.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"unclean.leader.election.enable\": false,\n  preallocate: false,\n} as const;\n\nexport const standardDefaults: TopicConfig = {\n  \"cleanup.policy\": \"delete\",\n  \"delete.retention.ms\": { type: \"ms\", value: BigInt(\"86400000\") },\n  \"max.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"max.message.bytes\": { type: \"bytes\", value: BigInt(\"1048588\") },\n  \"message.downconversion.enable\": true,\n  \"message.timestamp.difference.max.ms\": {\n    type: \"ms\",\n    value: BigInt(\"9223372036854775807\"),\n  },\n  \"message.timestamp.type\": \"CreateTime\",\n  \"min.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"retention.bytes\": { type: \"bytes\", value: BigInt(\"-1\") },\n  \"retention.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"segment.bytes\": { type: \"bytes\", value: BigInt(\"1073741824\") },\n  \"segment.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"compression.type\": \"producer\",\n  \"file.delete.delay.ms\": { type: \"ms\", value: BigInt(\"60000\") },\n  \"flush.messages\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"flush.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"index.interval.bytes\": { type: \"bytes\", value: BigInt(\"4096\") },\n  \"message.format.version\": \"3.0-IV1\",\n  \"min.cleanable.dirty.ratio\": 0.5,\n  \"min.insync.replicas\": 2,\n  \"segment.index.bytes\": { type: \"bytes\", value: BigInt(\"10485760\") },\n  \"segment.jitter.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"unclean.leader.election.enable\": false,\n  preallocate: false,\n} as const;\n\nexport function topicTransformerFactory(plan: Plan) {\n  const d = plan === \"developer\" ? developerDefaults : standardDefaults;\n\n  return function topicTransformer(t: ApiTopic): Topic {\n    if (!t.name) {\n      throw new Error(`Invalid topic, name is empty: ${JSON.stringify(t)}`);\n    }\n    const cm = Object.fromEntries<string>(\n      t.config?.map((c) => [c.key as TopicConfigField, c.value]) || []\n    );\n    const config: TopicConfig = {\n      \"cleanup.policy\": cm[\"cleanup.policy\"] as TopicConfig[\"cleanup.policy\"],\n      \"delete.retention.ms\": configValueToMilliseconds(\n        cm[\"delete.retention.ms\"],\n        d[\"delete.retention.ms\"]\n      ),\n      \"max.compaction.lag.ms\": configValueToMilliseconds(\n        cm[\"max.compaction.lag.ms\"],\n        d[\"max.compaction.lag.ms\"]\n      ),\n      \"max.message.bytes\": configValueToBytes(\n        cm[\"max.message.bytes\"],\n        d[\"max.message.bytes\"]\n      ),\n      \"message.downconversion.enable\": configValueToBoolean(\n        cm[\"message.downconversion.enable\"],\n        d[\"message.downconversion.enable\"]\n      ),\n      \"message.timestamp.difference.max.ms\": configValueToMilliseconds(\n        cm[\"message.timestamp.difference.max.ms\"],\n        d[\"message.timestamp.difference.max.ms\"]\n      ),\n      \"message.timestamp.type\": cm[\n        \"message.timestamp.type\"\n      ] as TopicConfig[\"message.timestamp.type\"],\n      \"min.compaction.lag.ms\": configValueToMilliseconds(\n        cm[\"min.compaction.lag.ms\"],\n        d[\"min.compaction.lag.ms\"]\n      ),\n      \"retention.bytes\": configValueToBytes(\n        cm[\"retention.bytes\"],\n        d[\"retention.bytes\"]\n      ),\n      \"retention.ms\": configValueToMilliseconds(\n        cm[\"retention.ms\"],\n        d[\"retention.ms\"]\n      ),\n      \"segment.bytes\": configValueToBytes(\n        cm[\"segment.bytes\"],\n        d[\"segment.bytes\"]\n      ),\n      \"segment.ms\": configValueToMilliseconds(\n        cm[\"segment.ms\"],\n        d[\"segment.ms\"]\n      ),\n      \"compression.type\": cm[\n        \"compression.type\"\n      ] as TopicConfig[\"compression.type\"],\n      \"file.delete.delay.ms\": configValueToMilliseconds(\n        cm[\"file.delete.delay.ms\"],\n        d[\"file.delete.delay.ms\"]\n      ),\n      \"flush.messages\": configValueToMilliseconds(\n        cm[\"flush.messages\"],\n        d[\"flush.messages\"]\n      ),\n      \"flush.ms\": configValueToMilliseconds(cm[\"flush.ms\"], d[\"flush.ms\"]),\n      \"follower.replication.throttled.replicas\":\n        cm[\"follower.replication.throttled.replicas\"],\n      \"index.interval.bytes\": configValueToBytes(\n        cm[\"index.interval.bytes\"],\n        d[\"index.interval.bytes\"]\n      ),\n      \"leader.replication.throttled.replicas\":\n        cm[\"leader.replication.throttled.replicas\"],\n      \"message.format.version\": cm[\"message.format.version\"],\n      \"min.cleanable.dirty.ratio\": configValueToNumber(\n        cm[\"min.cleanable.dirty.ratio\"],\n        d[\"min.cleanable.dirty.ratio\"]\n      ),\n      \"min.insync.replicas\": configValueToNumber(\n        cm[\"min.insync.replicas\"],\n        d[\"min.insync.replicas\"]\n      ),\n      \"segment.index.bytes\": configValueToBytes(\n        cm[\"segment.index.bytes\"],\n        d[\"segment.index.bytes\"]\n      ),\n      \"segment.jitter.ms\": configValueToMilliseconds(\n        cm[\"segment.jitter.ms\"],\n        d[\"segment.jitter.ms\"]\n      ),\n      \"unclean.leader.election.enable\": configValueToBoolean(\n        cm[\"unclean.leader.election.enable\"],\n        d[\"unclean.leader.election.enable\"]\n      ),\n      preallocate: configValueToBoolean(cm[\"preallocate\"], d[\"preallocate\"]),\n    };\n    return {\n      name: t.name,\n      partitions: t.partitions || [],\n      ...config,\n    };\n  };\n}\n\nfunction configValueToMilliseconds(\n  value: string,\n  defaultIfEmpty: Milliseconds\n): Milliseconds {\n  return value && value.trim().length > 0\n    ? { type: \"ms\", value: BigInt(value.trim()) }\n    : defaultIfEmpty;\n}\n\nfunction configValueToBytes(value: string, defaultIfEmpty: Bytes): Bytes {\n  return value && value.trim().length > 0\n    ? { type: \"bytes\", value: BigInt(value.trim()) }\n    : defaultIfEmpty;\n}\n\nfunction configValueToNumber(value: string, defaultIfError: number): number {\n  return parseInt(value, 10) || defaultIfError;\n}\n\nfunction configValueToBoolean(value: string, defaultIfError: boolean): boolean {\n  try {\n    const v: unknown = JSON.parse(value);\n    if (typeof v === \"boolean\") {\n      return v;\n    }\n  } catch {\n    // not a boolean, fallback to the default\n  }\n  return defaultIfError;\n}\n","import type { TopicsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { topicTransformerFactory } from \"../transformers/topicTransformer\";\n\nexport type FetchTopicParams = {\n  getTopic: TopicsApi[\"getTopic\"];\n  topicName: string;\n  plan: Plan;\n};\n\nexport async function fetchTopic({\n  getTopic,\n  topicName,\n  plan,\n}: FetchTopicParams): Promise<Topic> {\n  const response = await getTopic(topicName);\n  return topicTransformerFactory(plan)(response.data);\n}\n","import type { SortDirection, TopicsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { topicTransformerFactory } from \"../transformers/topicTransformer\";\nimport type { KafkaTopicsSortableColumn } from \"../types\";\n\nexport type FetchTopicsParams = {\n  getTopics: TopicsApi[\"getTopics\"];\n  page?: number;\n  perPage?: number;\n  sort?: KafkaTopicsSortableColumn;\n  direction?: SortDirection;\n  filter?: string;\n  plan: Plan;\n};\n\nexport async function fetchTopics({\n  getTopics,\n  page,\n  perPage,\n  filter,\n  sort,\n  direction,\n  plan,\n}: FetchTopicsParams): Promise<{ topics: Topic[]; count: number }> {\n  const response = await getTopics(\n    undefined,\n    undefined,\n    perPage,\n    filter,\n    page,\n    direction,\n    sort\n  );\n  const topics = (response.data.items || []).map<Topic>(\n    topicTransformerFactory(plan)\n  );\n  const count = response.data.total;\n  return { count, topics };\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"ui\";\nimport type { SafeRangeQuery } from \"../types\";\n\nexport type FetchTopicsMetricsProps = {\n  getMetricsByRangeQuery: DefaultApi[\"getMetricsByRangeQuery\"];\n  id: string;\n  duration: number;\n  interval: number;\n  selectedTopic: string | undefined;\n};\n\nexport async function fetchTopicsMetrics({\n  getMetricsByRangeQuery,\n  id,\n  duration,\n  interval,\n  selectedTopic,\n}: FetchTopicsMetricsProps): Promise<\n  Omit<GetTopicsMetricsResponse, \"kafkaTopics\">\n> {\n  const response = await getMetricsByRangeQuery(id, duration, interval, [\n    \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\",\n    \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\",\n    \"kafka_topic:kafka_log_log_size:sum\",\n    \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\",\n  ]);\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(m.values && m.metric && m.metric.topic && m.metric.name)\n  ) as SafeRangeQuery[];\n\n  // Also filter for metrics about the selectedTopic, if specified\n  const filteredMetrics = safeMetrics.filter((m) =>\n    // filter for metrics for the selectedTopic, if needed\n    selectedTopic !== undefined ? m.metric?.topic === selectedTopic : true\n  );\n\n  // get the unique topics we have metrics for in the selected time range\n  const topics = Array.from(new Set(safeMetrics.map((m) => m.metric.topic)));\n\n  const bytesIncoming: TimeSeriesMetrics = {};\n  const bytesOutgoing: TimeSeriesMetrics = {};\n  const bytesPerPartition: PartitionBytesMetric = {};\n  const incomingMessageRate: TimeSeriesMetrics = {};\n\n  filteredMetrics.forEach((m) => {\n    const { __name__: name, topic } = m.metric;\n\n    function addAggregatedTotalBytesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    function addAggregatePartitionBytes() {\n      const partition = bytesPerPartition[topic] || {};\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (partition[timestamp] = value + (partition[timestamp] || 0))\n      );\n      bytesPerPartition[topic] = partition;\n    }\n\n    switch (name) {\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesIncoming);\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesOutgoing);\n        break;\n      case \"kafka_topic:kafka_log_log_size:sum\":\n        addAggregatePartitionBytes();\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\":\n        addAggregatedTotalBytesTo(incomingMessageRate);\n        break;\n    }\n  });\n\n  return {\n    metricsTopics: topics,\n    bytesOutgoing,\n    bytesIncoming,\n    bytesPerPartition,\n    incomingMessageRate,\n  };\n}\n","import type {\n  Principal,\n  PrincipalApi,\n} from \"@redhat-cloud-services/rbac-client\";\nimport type { UserAccount } from \"ui-models/src/models/user-account\";\n\nexport type FetchUserAccountsParams = {\n  getUserAccounts: PrincipalApi[\"listPrincipals\"];\n};\n\nexport async function fetchUserAccounts({\n  getUserAccounts,\n}: FetchUserAccountsParams): Promise<{\n  accounts: UserAccount[];\n  count: number;\n}> {\n  const response = await getUserAccounts(-1);\n  const accounts = response.data.data.map<UserAccount>((p) => {\n    const fullObject = p as Principal;\n    return {\n      username: fullObject.username,\n      displayName: `${fullObject.first_name || \"\"} ${\n        fullObject.last_name || \"\"\n      }`.trim(),\n      email: fullObject.email,\n      isOrgAdmin: fullObject.is_org_admin || false,\n    };\n  });\n  const count = accounts.length;\n  return { count, accounts };\n}\n","import type { AclsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Permissions } from \"../../../ui\";\n\nexport type FetchPermissionsParams = {\n  getAcls: AclsApi[\"getAcls\"];\n  page?: number;\n  perPage?: number;\n};\n\nexport async function fetchPermissions({\n  getAcls,\n  page,\n  perPage,\n}: FetchPermissionsParams): Promise<{\n  groups: Permissions[];\n  count: number;\n}> {\n  const response = await getAcls(\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    page,\n    perPage\n  );\n  const groups = (response.data.items || []).map<Permissions>((t) => ({\n    account: t.principal || \"\",\n    permission: { permission: t.permission, operation: t.operation },\n    resource: {\n      resourceName: t.resourceName,\n      patternType: t.patternType,\n      resourceType: t.resourceType,\n    },\n  }));\n  const count = response.data.total;\n  return { count, groups };\n}\n","import type { SecurityApi } from \"@rhoas/kafka-management-sdk\";\nimport type { Account } from \"ui\";\nimport { PrincipalType } from \"ui\";\n\nexport type FetchServiceAccountsParams = {\n  getServiceAccounts: SecurityApi[\"getServiceAccounts\"];\n};\n\nexport async function fetchServiceAccounts({\n  getServiceAccounts,\n}: FetchServiceAccountsParams): Promise<{\n  serviceAccounts: Account[];\n}> {\n  const response = await getServiceAccounts();\n  const data = response.data.items;\n  const serviceAccounts: Account[] = data.map((t) => {\n    return {\n      principalType: PrincipalType.ServiceAccount,\n      id: t.id || \"\",\n      displayName: t.name || \"\",\n    };\n  });\n  return { serviceAccounts };\n}\n","import type {\n  FetchConsumerGroupParams,\n  FetchConsumerGroupsParams,\n  FetchDedicatedClusterSizesParams,\n  FetchKafkaMetricsProps,\n  FetchKafkasParams,\n  FetchMessagesParams,\n  FetchPermissionsParams,\n  FetchServiceAccountsParams,\n  FetchTopicParams,\n  FetchTopicsMetricsProps,\n  FetchTopicsParams,\n  FetchUserAccountsParams,\n} from \"./fetchers\";\n\nexport const masQueries = {\n  _root: () => ({ scope: \"mas\" } as const),\n  organization: () =>\n    [{ ...masQueries._root(), entity: \"organization\" }] as const,\n  userAccounts: (params: Omit<FetchUserAccountsParams, \"getUserAccounts\">) =>\n    [{ ...masQueries._root(), entity: \"userAccounts\" }, params] as const,\n\n  quota: {\n    _root: () => ({ ...masQueries._root(), entity: \"quota\" } as const),\n    standardAvailable: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"standardAvailable\" },\n      ] as const,\n    dedicatedAvailable: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"dedicatedAvailable\" },\n      ] as const,\n    developerAvailability: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"developerAvailability\" },\n      ] as const,\n    standardAvailability: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"standardAvailability\" },\n      ] as const,\n  },\n} as const;\n\nexport const dedicatedQueries = {\n  _root: () => ({ ...masQueries._root(), entity: \"dedicated\" } as const),\n  clusters: () =>\n    [{ ...dedicatedQueries._root(), subentity: \"clusters\" }] as const,\n  clusterSizes: (\n    params: Omit<FetchDedicatedClusterSizesParams, \"getEnterpriseClusterById\">\n  ) =>\n    [\n      { ...dedicatedQueries._root(), subentity: \"clusterSize\" },\n      params,\n    ] as const,\n};\n\nexport const kafkaQueries = {\n  _root: () => ({ scope: \"kafka\" } as const),\n  list: (params: Omit<FetchKafkasParams, \"dataMapper\" | \"getKafkas\">) =>\n    [\n      {\n        ...kafkaQueries._root(),\n        entity: \"list\",\n      },\n      params,\n    ] as const,\n  instance: {\n    _root: ({ id, adminUrl }: { id?: string; adminUrl?: string }) =>\n      ({ ...kafkaQueries._root(), entity: \"instance\", id, adminUrl } as const),\n    details: (params: { id?: string }) =>\n      [\n        { ...kafkaQueries.instance._root(params), subentity: \"details\" },\n      ] as const,\n    topics: ({\n      id,\n      adminUrl,\n      ...params\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchTopicsParams,\n      \"getTopics\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topics\",\n        },\n        params,\n      ] as const,\n    topic: ({\n      id,\n      adminUrl,\n      topicName,\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchTopicParams,\n      \"getTopic\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topic\",\n        },\n        { topicName },\n      ] as const,\n    topicMessages: ({\n      id,\n      adminUrl,\n      topicName,\n      ...params\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchMessagesParams,\n      \"consumeRecords\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topicMessages\",\n        },\n        { topicName, ...params },\n      ] as const,\n    consumerGroups: (\n      params: { id?: string; adminUrl?: string } & Omit<\n        FetchConsumerGroupsParams,\n        \"getConsumerGroups\"\n      >\n    ) =>\n      [\n        {\n          ...kafkaQueries.instance._root(params),\n          subentity: \"consumer-groups\",\n        },\n        params,\n      ] as const,\n    consumerGroup: ({\n      id,\n      adminUrl,\n      consumerGroupId,\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchConsumerGroupParams,\n      \"getConsumerGroupById\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"consumerGroup\",\n        },\n        { consumerGroupId },] as const,\n    serviceAccounts: (\n      params: Omit<FetchServiceAccountsParams, \"getServiceAccounts\">\n    ) =>\n      [{ ...masQueries._root(), entity: \"serviceAccounts\" }, params] as const,\n    permissions: (\n      params: { id?: string; adminUrl?: string } & Omit<\n        FetchPermissionsParams,\n        \"getAcls\"\n      >\n    ) =>\n      [\n        {\n          ...kafkaQueries.instance._root(params),\n          subentity: \"acls\",\n        },\n        params,\n      ] as const,\n    metrics: {\n      _root: ({ id }: { id: string }) =>\n        ({\n          ...kafkaQueries.instance._root({ id }),\n          subentity: \"metrics\",\n          id,\n        } as const),\n      kpi: (params: { id: string }) =>\n        [{ ...kafkaQueries.instance._root(params), type: \"kpi\" }] as const,\n      instance: ({\n        id,\n        ...params\n      }: Omit<FetchKafkaMetricsProps, \"getMetricsByRangeQuery\">) =>\n        [\n          {\n            ...kafkaQueries.instance._root({ id }),\n            type: \"instance\",\n          },\n          params,\n        ] as const,\n      topic: ({\n        id,\n        ...params\n      }: Omit<FetchTopicsMetricsProps, \"getMetricsByRangeQuery\">) =>\n        [\n          {\n            ...kafkaQueries.instance._root({ id }),\n            type: \"topic\",\n          },\n          params,\n        ] as const,\n    },\n  },\n} as const;\n\nexport const providerQueries = {\n  _root: () => ({ scope: \"providers\" }),\n  list: (params: { plan?: string }) =>\n    [{ ...providerQueries._root(), entity: \"list\", ...params }] as const,\n  limits: {\n    _root: ({ provider }: { provider?: string }) =>\n      ({\n        ...providerQueries._root(),\n        entity: \"limits\",\n        provider,\n      } as const),\n    standard: ({ provider, region }: { provider?: string; region: string }) => [\n      {\n        ...providerQueries.limits._root({ provider }),\n        plan: \"standard\",\n        region,\n      },\n    ],\n    developer: ({\n      provider,\n      region,\n    }: {\n      provider?: string;\n      region: string;\n    }) => [\n      {\n        ...providerQueries.limits._root({ provider }),\n        plan: \"developer\",\n        region,\n      },\n    ],\n  },\n} as const;\n","import { PrincipalApi } from \"@redhat-cloud-services/rbac-client\";\nimport { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport {\n  Configuration,\n  DefaultApi,\n  SecurityApi,\n  EnterpriseDataplaneClustersApi\n} from \"@rhoas/kafka-management-sdk\";\nimport {\n  GroupsApi,\n  RecordsApi,\n  TopicsApi,\n  AclsApi,\n} from \"@rhoas/kafka-instance-sdk\";\nimport { useCallback } from \"react\";\nimport { useApiConfiguration } from \"./ApiProvider\";\n\nexport const useApi = () => {\n  const { basePath, accessToken } = useApiConfiguration();\n\n  const kafkasFleet = useCallback(\n    () =>\n      new DefaultApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const userAccounts = useCallback(async () => {\n    const token = await accessToken();\n    return new PrincipalApi({\n      accessToken: token,\n      basePath: `/api/rbac/v1`,\n    });\n  }, [accessToken]);\n\n  const serviceAccount = useCallback(\n    () =>\n      new SecurityApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const account = useCallback(\n    () =>\n      new AppServicesApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const topics = useCallback(\n    (adminUrl: string) =>\n      new TopicsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const consumerGroups = useCallback(\n    (adminUrl: string) =>\n      new GroupsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const acls = useCallback(\n    (adminUrl: string) =>\n      new AclsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const records = useCallback(\n    (adminUrl: string) =>\n      new RecordsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const dedicatedClusters = useCallback(\n    () =>\n      new EnterpriseDataplaneClustersApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  return {\n    kafkasFleet,\n    account,\n    topics,\n    consumerGroups,\n    records,\n    userAccounts,\n    acls,\n    serviceAccount,\n    dedicatedClusters,\n  };\n};\n","const REACT_QUERY_DEVTOOLS = \"mas.devtools\";\nconst METRICS_LAG_ALERT = \"mas.rhosak.metrics.lag-alert-closed\";\n\nexport function isReactQueryDevToolsEanbled() {\n  return localStorage.getItem(REACT_QUERY_DEVTOOLS) === \"true\";\n}\n\nexport function metricsIsLagAlertsDismissed() {\n  return localStorage.getItem(METRICS_LAG_ALERT) === \"true\";\n}\n\nexport function metricsDismissLagAlerts() {\n  return localStorage.setItem(METRICS_LAG_ALERT, \"true\");\n}\n","import type { Bytes, DateIsoString } from \"../types\";\n\n/**\n * All the details abut a Kafka instance.\n *\n * Unless differently specified, the values marked as accepting `undefined`\n * will come from extra API calls.\n */\nexport type Kafka = {\n  id: string;\n  name: string;\n  createdAt: DateIsoString;\n  updatedAt: DateIsoString;\n  expiryDate: DateIsoString | undefined;\n  owner: string;\n  provider: CloudProvider;\n  region: CloudRegion;\n  status: Status;\n  plan: Plan;\n  size: string | undefined;\n  ingress: number | undefined;\n  egress: number | undefined;\n  storage: Bytes | undefined;\n  maxPartitions: number | undefined;\n  connections: number | undefined;\n  connectionRate: number | undefined;\n  messageSize: Bytes | undefined;\n  billing: \"prepaid\" | MarketplaceSubscription | \"dedicated\" | undefined;\n  clusterId: string | undefined;\n  version: string;\n  bootstrapUrl: string | undefined;\n  adminUrl: string | undefined;\n};\nexport type KafkaField = keyof Kafka;\n\n/**\n * Supported Cloud Providers. Extend this to add a new provider, then follow\n * Typescript errors to find where extra information need to be added (images,\n * translations).\n */\nexport type CloudProvider = \"aws\" | \"gcp\" | \"azure\";\n\n/**\n * A Cloud Region. Since this varies between Cloud Providers and has no extra\n * visual attached, we take its name from the API and do no further\n * transformation.\n */\nexport type CloudRegion = string;\n/**\n * Cloud provider multi availability zone\n */\nexport type AZ = \"single\" | \"multi\";\n/**\n * A number that describes how much does an instance cost to create\n */\nexport type Quota = number;\n/**\n * The capabilities of an instance, and its quota cost. Some sizes might not be\n * enabled, eg. because temporarily out of capacity\n */\nexport type Size = {\n  id: string;\n  displayName: string;\n  status: \"stable\" | \"preview\";\n  quota: Quota;\n  ingress: number;\n  egress: number;\n  storage: number;\n  connections: number;\n  connectionRate: number;\n  maxPartitions: number;\n  messageSize: number;\n  isDisabled: boolean;\n};\n/**\n * Paid for instances are `standard`, evaluation instances are `developer`.\n * `standard` instances have a `Quota` associated, and bigger sizes.\n * `developer` instances are free to be created (up to 1 per user), have a\n * single, smaller size option than `standard` ones, and they expire after a\n * few hours.\n *\n * Plan `enterprise` is the equivalent of `standard` instances but for dedicated\n * clusters.\n *\n * Note: a new kind of evaluation instance is being studied. They will have a\n * long expiration period and bigger sizes.\n */\nexport type Plan = \"standard\" | \"developer\" | \"dedicated\";\n/**\n * All the statuses an instance can be. If new statuses are added, ensure to\n * add them to the relevant status group (`ReadyStatuses` etc.).\n */\nexport const Statuses = [\n  \"ready\",\n  \"degraded\",\n  \"accepted\",\n  \"provisioning\",\n  \"preparing\",\n  \"deprovision\",\n  \"deleting\",\n  \"suspended\",\n  \"suspending\",\n  \"resuming\",\n] as const;\n\nexport type Status = (typeof Statuses)[number];\n\nexport const CreatingStatuses: readonly Status[] = [\n  \"accepted\",\n  \"provisioning\",\n  \"preparing\",\n];\nexport const ReadyStatuses: readonly Status[] = [\"ready\"];\nexport const DegradedStatuses: readonly Status[] = [\"degraded\"];\nexport const SuspendingStatuses: readonly Status[] = [\"suspending\"];\nexport const SuspendedStatuses: readonly Status[] = [\"suspended\"];\nexport const DeletingStatuses: readonly Status[] = [\"deleting\", \"deprovision\"];\nexport const ResumingStatuses: readonly Status[] = [\"resuming\"];\n\nexport const SimplifiedStatuses = {\n  creating: CreatingStatuses,\n  ready: ReadyStatuses,\n  degraded: DegradedStatuses,\n  suspended: SuspendedStatuses,\n  deleting: DeletingStatuses,\n  resuming: ResumingStatuses,\n  suspending: SuspendingStatuses,\n} as const;\nexport type SimplifiedStatus = keyof typeof SimplifiedStatuses;\n\n/**\n * A list of marketplaces where an instance can be billed to\n */\nexport type MarketPlace = CloudProvider | \"rhm\";\n/**\n * List of marketplaces where a user has some subscription\n */\nexport type MarketPlaceSubscriptions = {\n  marketplace: MarketPlace;\n  subscriptions: string[];\n};\n/**\n * A specific marketplace's subscription, assigned as billing option to an\n * instance.\n *\n * Note: the API will provide only the `subscription`; the `MarketPlace` will\n * have to be fetched querying for the `subscription`.\n */\nexport type MarketplaceSubscription = {\n  marketplace: MarketPlace;\n  subscription: string;\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { FC } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { OwnerAccount } from \"./types\";\n\nexport type SelectOwnerProps = {\n  isDisabled: boolean;\n  accounts: OwnerAccount[];\n  owner: string | undefined;\n  onChangeOwner: (owner: string | undefined) => void;\n};\n\nexport const SelectOwner: FC<SelectOwnerProps> = ({\n  isDisabled,\n  accounts,\n  owner,\n  onChangeOwner,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isExpanded: boolean) => {\n    setIsOpen(isExpanded);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, owner) => {\n    onChangeOwner(owner as string);\n    setIsOpen(false);\n  };\n\n  function selectOptions(filter = \"\") {\n    const filterRegExp = new RegExp(filter, \"i\");\n    const filteredAccounts =\n      filter !== \"\"\n        ? accounts.filter(\n            (account) =>\n              filterRegExp.test(account.displayName) ||\n              filterRegExp.test(account.id)\n          )\n        : accounts;\n    return filteredAccounts.map((account) => (\n      <SelectOption\n        key={account.id}\n        value={account.id}\n        description={account.displayName}\n      >\n        {account.id}\n      </SelectOption>\n    ));\n  }\n\n  return (\n    <Select\n      id=\"change-permission-owner-select\"\n      variant={SelectVariant.typeahead}\n      onToggle={onToggle}\n      isDisabled={isDisabled}\n      isOpen={isOpen}\n      placeholderText={t(\"select_user_account\")}\n      isCreatable={true}\n      createText={t(\"change_owner_create_text\")}\n      menuAppendTo=\"parent\"\n      maxHeight={400}\n      selections={owner}\n      onSelect={onSelect}\n      onFilter={(_, value) => selectOptions(value)}\n    >\n      {selectOptions()}\n    </Select>\n  );\n};\n","import {\n  Alert,\n  AlertVariant,\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  Skeleton,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { SelectOwner } from \"./SelectOwner\";\nimport type { ChangeOwnerErrorMessage, OwnerAccount } from \"./types\";\n\nexport type ChangeKafkaOwnerProps = {\n  currentOwner: string;\n  accounts: OwnerAccount[] | undefined;\n  savingState: \"idle\" | \"saving\" | ChangeOwnerErrorMessage;\n  onConfirm: (newOwner: string) => void;\n  onCancel: () => void;\n};\n\nexport const ChangeKafkaOwner: FunctionComponent<ChangeKafkaOwnerProps> = ({\n  currentOwner,\n  accounts,\n  savingState,\n  onConfirm,\n  onCancel,\n}) => {\n  const { t } = useTranslation([\"kafka\", \"common\"]);\n  const [account, setAccount] = useState<string | undefined>();\n  const submittedAccount = useRef<string>();\n\n  const isSaving = savingState === \"saving\";\n\n  const onConfirmOwner = useCallback(() => {\n    if (account) {\n      submittedAccount.current = account;\n      onConfirm(account);\n    }\n  }, [onConfirm, account]);\n\n  const renderAlert = () => {\n    switch (savingState) {\n      case \"invalid-user\":\n        return (\n          <Alert\n            variant={AlertVariant.danger}\n            aria-live=\"polite\"\n            isInline\n            title={t(\"new_owner_does_not_exist_title\")}\n          >\n            {t(\"new_owner_does_not_exist_message\", {\n              newOwner: submittedAccount.current,\n            })}\n          </Alert>\n        );\n      case \"unknown-error\":\n        return (\n          <Alert\n            variant={AlertVariant.danger}\n            aria-live=\"polite\"\n            isInline\n            title={t(\"can_not_change_owner_title\")}\n          >\n            {t(\"owner_transfer_failed_message\", {\n              name: currentOwner,\n            })}\n          </Alert>\n        );\n    }\n  };\n  return (\n    <Modal\n      id=\"change-owner-modal\"\n      title={t(\"change-owner-title\")}\n      isOpen={true}\n      onClose={onCancel}\n      variant={\"medium\"}\n      position=\"top\"\n      actions={[\n        <Button\n          id=\"confirm-button\"\n          key=\"changeowner\"\n          variant=\"primary\"\n          isDisabled={isSaving}\n          onClick={onConfirmOwner}\n        >\n          {t(\"change-owner-button\")}\n        </Button>,\n        <Button\n          id=\"cancel-button\"\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={onCancel}\n          isDisabled={isSaving}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={(e) => e?.preventDefault()}>\n        {renderAlert()}\n        <FormGroup fieldId=\"Current-owner-name\" label={t(\"current_owner\")}>\n          {currentOwner}\n        </FormGroup>\n        <FormGroup fieldId=\"New-owner-name\" label={t(\"new_owner\")}>\n          {accounts ? (\n            <SelectOwner\n              isDisabled={isSaving}\n              accounts={accounts}\n              owner={account}\n              onChangeOwner={setAccount}\n            />\n          ) : (\n            <Skeleton width={\"100%\"} />\n          )}\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\n\ntype ConsumerGroupPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ConsumerGroupPopover: FunctionComponent<\n  ConsumerGroupPopoverProps\n> = ({ title, description }) => {\n  return (\n    <Popover\n      aria-label=\"Consumer groups popover\"\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon />\n    </Popover>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type ConsumerGroupStateLabelProps = {\n  state: State;\n};\n\nexport const ConsumerGroupStateLabel: FunctionComponent<\n  ConsumerGroupStateLabelProps\n> = ({ state }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  switch (state) {\n    case \"Stable\":\n      return t(\"consumerGroup.state.stable\");\n    case \"Empty\":\n      return t(\"consumerGroup.state.empty\");\n    case \"Dead\":\n      return t(\"consumerGroup.state.dead\");\n    case \"CompletingRebalance\":\n      return t(\"consumerGroup.state.completing_rebalance\");\n    case \"PreparingRebalance\":\n      return t(\"consumerGroup.state.preparing_rebalance\");\n    case \"Unknown\":\n      return t(\"consumerGroup.state.unknown\");\n    default:\n      return null;\n  }\n};\n","import {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Stack,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupPopover } from \"./ConsumerGroupPopover\";\nimport { ConsumerGroupStateLabel } from \"./ConsumerGroupState\";\n\nexport type ConsumerGroupByKafkaProps = {\n  state: State;\n  consumers: Consumer[];\n  activeMembers: number;\n  partitionsWithLag: number;\n};\n\nexport const ConsumerGroupByKafka: FunctionComponent<\n  ConsumerGroupByKafkaProps\n> = ({ state, consumers, activeMembers, partitionsWithLag }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const columnNames = {\n    topic: t(\"topic.topic\"),\n    partition: t(\"consumerGroup.partition\"),\n    consumer_id: t(\"consumerGroup.consumer_id\"),\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n  };\n\n  return (\n    <Stack hasGutter>\n      <DescriptionList\n        columnModifier={{ lg: \"3Col\" }}\n        className={\"pf-m-display-2xl\"}\n      >\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.active_members\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {activeMembers}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.partitions_with_lag\")}{\" \"}\n            <ConsumerGroupPopover\n              title={t(\"consumerGroup.partitions_with_lag_name\")}\n              description={t(\"consumerGroup.partitions_with_lag_description\")}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {partitionsWithLag}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.state_header\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <ConsumerGroupStateLabel state={state} />\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TableComposable\n        aria-label={t(\"consumerGroup.consumer_group_info_table_aria\")}\n        variant={TableVariant.compact}\n      >\n        <Thead noWrap>\n          <Tr>\n            <Th width={20}>{columnNames.topic}</Th>\n            <Th width={20}>{columnNames.partition}</Th>\n            <Th width={20}>{columnNames.consumer_id}</Th>\n            <Th width={20}>{columnNames.current_offset}</Th>\n            <Th width={20}>{columnNames.log_end_offset}</Th>\n            <Th width={20}>{columnNames.offset_lag}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {consumers.map(\n            ({\n              groupId,\n              partition,\n              topic,\n              memberId,\n              offset,\n              logEndOffset,\n              lag,\n            }) => {\n              return (\n                <Tr key={groupId}>\n                  <Td dataLabel={columnNames.topic}>{topic}</Td>\n                  <Td dataLabel={columnNames.partition}>{partition}</Td>\n                  <Td dataLabel={columnNames.consumer_id}>\n                    {memberId ? (\n                      `${groupId}\\n${memberId}`\n                    ) : (\n                      <i>{t(\"consumerGroup.unassigned\")}</i>\n                    )}\n                  </Td>\n                  <Td dataLabel={columnNames.current_offset}>{offset}</Td>\n                  <Td dataLabel={columnNames.log_end_offset}>{logEndOffset}</Td>\n                  <Td dataLabel={columnNames.offset_lag}>{lag}</Td>\n                </Tr>\n              );\n            }\n          )}\n        </Tbody>\n      </TableComposable>\n    </Stack>\n  );\n};\n","import {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Stack,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupPopover } from \"./ConsumerGroupPopover\";\nimport { ConsumerGroupStateLabel } from \"./ConsumerGroupState\";\n\nexport type ConsumerGroupByTopicProps = {\n  state: State;\n  consumers: Consumer[];\n  activeMembers: number;\n  partitionsWithLag: number;\n};\n\nexport const ConsumerGroupByTopic: FunctionComponent<\n  ConsumerGroupByTopicProps\n> = ({ state, consumers, activeMembers, partitionsWithLag }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const columnNames = {\n    partition: t(\"consumerGroup.partition\"),\n    consumer_id: t(\"consumerGroup.consumer_id\"),\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n  };\n\n  return (\n    <Stack hasGutter>\n      <DescriptionList\n        columnModifier={{ lg: \"3Col\" }}\n        className={\"pf-m-display-2xl\"}\n      >\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.active_members_for_topic\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {activeMembers}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.partitions_with_lag_for_topic\")}{\" \"}\n            <ConsumerGroupPopover\n              title={t(\"consumerGroup.partitions_with_lag_name\")}\n              description={t(\"consumerGroup.partitions_with_lag_description\")}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {partitionsWithLag}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.state_header\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {<ConsumerGroupStateLabel state={state} />}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TableComposable\n        aria-label={t(\"consumerGroup.consumer_group_info_table_aria\")}\n        variant={TableVariant.compact}\n      >\n        <Thead noWrap>\n          <Tr>\n            <Th key={columnNames.partition} width={20}>\n              {columnNames.partition}\n            </Th>\n            <Th key={columnNames.consumer_id} width={20}>\n              {columnNames.consumer_id}\n            </Th>\n            <Th key={columnNames.current_offset} width={20}>\n              {columnNames.current_offset}\n            </Th>\n            <Th key={columnNames.log_end_offset} width={20}>\n              {columnNames.log_end_offset}\n            </Th>\n            <Th key={columnNames.offset_lag} width={20}>\n              {columnNames.offset_lag}\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {consumers.map(\n            ({ groupId, partition, memberId, offset, logEndOffset, lag }) => {\n              return (\n                <Tr key={groupId}>\n                  <Td dataLabel={columnNames.partition}>{partition}</Td>\n                  <Td dataLabel={columnNames.consumer_id}>\n                    {memberId ? (\n                      `${groupId}\\n${memberId}`\n                    ) : (\n                      <i>{t(\"consumerGroup.unassigned\")}</i>\n                    )}{\" \"}\n                  </Td>\n                  <Td dataLabel={columnNames.current_offset}>{offset}</Td>\n                  <Td dataLabel={columnNames.log_end_offset}>{logEndOffset}</Td>\n                  <Td dataLabel={columnNames.offset_lag}>{lag}</Td>\n                </Tr>\n              );\n            }\n          )}\n        </Tbody>\n      </TableComposable>\n    </Stack>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupByKafka } from \"./ConsumerGroupByKafka\";\nimport { ConsumerGroupByTopic } from \"./ConsumerGroupByTopic\";\n\nexport type ConsumerGroupDetailsProps = {\n  consumerGroupByTopic: boolean;\n  state: State;\n  activeMembers: number;\n  partitionsWithLag: number;\n  consumers: Consumer[];\n};\n\nexport const ConsumerGroupDetails: FunctionComponent<\n  ConsumerGroupDetailsProps\n> = ({\n  consumerGroupByTopic,\n  state,\n  consumers,\n  activeMembers,\n  partitionsWithLag,\n}) => {\n  return (\n    <div>\n      {consumerGroupByTopic ? (\n        <ConsumerGroupByTopic\n          state={state}\n          consumers={consumers}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n        />\n      ) : (\n        <ConsumerGroupByKafka\n          state={state}\n          consumers={consumers}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n        />\n      )}\n    </div>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ConsumerGroupEmptyState: FunctionComponent = () => {\n  const { t } = useTranslation([\"kafka\"]);\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel={\"h1\"} size={TitleSizes.lg}>\n        {t(\"consumerGroup.empty_consumer_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"consumerGroup.empty_consumer_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { OffsetValue } from \"../types\";\n\nexport type OffsetSelectProps = {\n  value: OffsetValue;\n  onChange: (value: OffsetValue) => void;\n};\n\nexport const OffsetSelect: FunctionComponent<OffsetSelectProps> = ({\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const offsetValueOption: { [key in OffsetValue]: string } = {\n    absolute: t(\"consumerGroup.offset.absolute\"),\n    latest: t(\"consumerGroup.offset.latest\"),\n    earliest: t(\"consumerGroup.offset.earliest\"),\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChange(selection as OffsetValue);\n    setIsOpen(false);\n  };\n\n  const makeOptions = () => {\n    return Object.entries(offsetValueOption).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <Select\n      aira-label={t(\"consumerGroup.reset_offset_new_offset_label\")}\n      toggleAriaLabel={t(\"consumerGroup.reset_offset_new_offset_label\")}\n      id={\"offset-select\"}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      variant={SelectVariant.single}\n      isOpen={isOpen}\n      placeholderText={t(\"consumerGroup.select_offset\")}\n      selections={value}\n      menuAppendTo={\"parent\"}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type TopicSelectProps = {\n  value: string;\n  topics: string[];\n  onChange: (topic: string) => void;\n};\n\nexport const TopicSelect: FunctionComponent<TopicSelectProps> = ({\n  topics,\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, topic) => {\n    onChange(topic as string);\n    setIsOpen(false);\n  };\n\n  return (\n    <Select\n      aira-label={t(\"consumerGroup.reset_offset_topic_label\")}\n      toggleAriaLabel={t(\"consumerGroup.reset_offset_topic_label\")}\n      id={\"topic-select\"}\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      selections={value}\n      placeholderText={t(\"consumerGroup.select_topic\")}\n      menuAppendTo={\"parent\"}\n      isDisabled={topics.length <= 0}\n    >\n      {topics.map((topic, index) => (\n        <SelectOption key={index} value={topic}>\n          {topic}\n        </SelectOption>\n      ))}\n    </Select>\n  );\n};\n","import {\n  Alert,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n  TextInput,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport { useCallback, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer } from \"ui-models/src/models/consumer-group\";\nimport \"../ConsumerGroup.css\";\nimport type { OffsetValue } from \"../types\";\nimport { OffsetSelect } from \"./OffsetSelect\";\nimport { TopicSelect } from \"./TopicSelect\";\nimport type { FunctionComponent } from \"react\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type ConsumerGroupResetOffsetProps = {\n  isModalOpen: boolean;\n  state: State;\n  groupId: string;\n  topics: string[];\n  consumers: Consumer[];\n  onClickClose: () => void;\n  onClickResetOffset: (\n    topic: string,\n    offset: OffsetValue,\n    partitions: number[],\n    customOffset: string\n  ) => void;\n  disableFocusTrap?: boolean;\n  appendTo?: () => HTMLElement;\n};\n\nexport const ConsumerGroupResetOffset: FunctionComponent<\n  ConsumerGroupResetOffsetProps\n> = ({\n  groupId,\n  topics,\n  onClickClose,\n  isModalOpen,\n  onClickResetOffset,\n  disableFocusTrap,\n  appendTo,\n  consumers,\n  state,\n}) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const [selectedTopic, setSelectedTopic] = useState<string>(\"\");\n  const [selectedOffset, setSelectedOffset] = useState<OffsetValue>(\"absolute\");\n  const [customOffsetValue, setcustomOffsetValue] = useState<string>();\n\n  const [isResetAccepted, setIsResetAccepted] = useState<boolean>(false);\n\n  const [selectedConsumer, setSelectedConsumer] = useState<Consumer[]>([]);\n\n  const isDisconnected = state !== \"Stable\";\n\n  const consumerList =\n    consumers.filter((consumer) => consumer.topic === selectedTopic) || [];\n\n  const isResetOffsetDisabled =\n    !selectedTopic ||\n    !selectedOffset ||\n    !isResetAccepted ||\n    !isDisconnected ||\n    selectedConsumer.length === 0;\n\n  const tableColumns = {\n    partition: t(\"consumerGroup.partition\"),\n    clientId: `${t(\"consumerGroup.client_id\")} + ${t(\n      \"consumerGroup.member_id\"\n    )}`,\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n    new_offset: t(\"consumerGroup.new_offset\"),\n  };\n\n  const areAllConsumerSelected =\n    selectedConsumer.length === consumerList.length;\n\n  const onSelectAllConsumer = (isSelecting = true) => {\n    setSelectedConsumer(isSelecting ? consumerList : []);\n  };\n\n  const isConsumerSelected = (consumer: Consumer) => {\n    return selectedConsumer.includes(consumer);\n  };\n  const onSelect = (consumer: Consumer, isSelecting = true) => {\n    setSelectedConsumer(\n      isSelecting\n        ? [...selectedConsumer, consumer]\n        : selectedConsumer.filter((r) => r !== consumer)\n    );\n  };\n\n  const onResetOffset = useCallback(() => {\n    const partitions = selectedConsumer.map(({ partition }) => partition);\n    onClickResetOffset(\n      selectedTopic,\n      selectedOffset,\n      partitions,\n      customOffsetValue || \"0\"\n    );\n  }, [\n    onClickResetOffset,\n    selectedTopic,\n    selectedOffset,\n    selectedConsumer,\n    customOffsetValue,\n  ]);\n\n  return (\n    <Modal\n      variant={ModalVariant.large}\n      isOpen={isModalOpen}\n      aria-label={t(\"consumerGroup.reset_offset_modal_label\")}\n      title={t(\"consumerGroup.reset_offset\")}\n      showClose={true}\n      onClose={onClickClose}\n      aria-describedby=\"modal-message\"\n      disableFocusTrap={disableFocusTrap}\n      appendTo={appendTo}\n      position=\"top\"\n      actions={[\n        <Button\n          variant=\"danger\"\n          key={1}\n          isDisabled={isResetOffsetDisabled}\n          onClick={onResetOffset}\n        >\n          {t(\"consumerGroup.reset_offset\")}\n        </Button>,\n        <Button variant=\"link\" key={2} onClick={onClickClose}>\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <Form isHorizontal>\n            <FormGroup\n              className=\"mas--ConsumerGroupResetOffset-form-group--readonly\"\n              label={t(\"consumerGroup.reset_offset_consumer_group_label\")}\n              fieldId=\"consumer-group-input\"\n            >\n              <TextInput\n                readOnlyVariant={\"default\"}\n                type=\"text\"\n                name={t(\"consumerGroup.reset_offset_consumer_group_label\")}\n                id={\"consumer-group-input\"}\n                value={groupId}\n              />\n            </FormGroup>\n            {isDisconnected && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_topic_label\")}\n                fieldId=\"topic-select\"\n              >\n                <TopicSelect\n                  value={selectedTopic}\n                  topics={topics}\n                  onChange={setSelectedTopic}\n                />\n              </FormGroup>\n            )}\n            {isDisconnected && selectedTopic && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_new_offset_label\")}\n                fieldId=\"offset-select\"\n              >\n                <OffsetSelect\n                  value={selectedOffset}\n                  onChange={setSelectedOffset}\n                />\n              </FormGroup>\n            )}\n            {isDisconnected &&\n              selectedTopic &&\n              selectedOffset === \"absolute\" && (\n                <FormGroup\n                  label={t(\"consumerGroup.reset_offset_custom_offset_label\")}\n                  fieldId=\"custom-offset-input\"\n                >\n                  <TextInput\n                    id=\"custom-offset-input\"\n                    name={t(\"consumerGroup.reset_offset_custom_offset_label\")}\n                    value={customOffsetValue}\n                    onChange={setcustomOffsetValue}\n                    type=\"number\"\n                  />\n                </FormGroup>\n              )}\n          </Form>\n        </StackItem>\n        <StackItem>\n          {!isDisconnected && (\n            <Alert\n              className=\"modal-alert\"\n              variant=\"danger\"\n              isInline\n              title={t(\"consumerGroup.reset_offset_connected_alert_title\")}\n            >\n              <p>{t(\"consumerGroup.reset_offset_connected_alert_body\")}</p>\n            </Alert>\n          )}\n        </StackItem>\n        <StackItem>\n          {isDisconnected && consumerList.length > 0 && selectedTopic && (\n            <Stack hasGutter>\n              <StackItem>\n                <TableComposable\n                  aria-label={t(\"consumerGroup.reset_offset_selectable table\")}\n                  className=\"consumer-table\"\n                >\n                  <Thead>\n                    <Tr>\n                      <Th\n                        select={{\n                          onSelect: (_event, isSelecting) =>\n                            onSelectAllConsumer(isSelecting),\n                          isSelected: areAllConsumerSelected,\n                        }}\n                      />\n                      <Th>{tableColumns.partition}</Th>\n                      <Th>{tableColumns.clientId}</Th>\n                      <Th>{tableColumns.current_offset}</Th>\n                      <Th>{tableColumns.log_end_offset}</Th>\n                      <Th>{tableColumns.offset_lag}</Th>\n                      <Th>{tableColumns.new_offset}</Th>\n                    </Tr>\n                  </Thead>\n                  <Tbody>\n                    {consumerList.map((consumer, index) => {\n                      return (\n                        <Tr key={index}>\n                          <Td\n                            select={{\n                              rowIndex: index,\n                              isSelected: isConsumerSelected(consumer),\n                              onSelect: (_event, isSelecting) =>\n                                onSelect(consumer, isSelecting),\n                            }}\n                          />\n                          <Td dataLabel={tableColumns.partition}>\n                            {consumer.partition}\n                          </Td>\n                          <Td dataLabel={tableColumns.clientId}>\n                            {String(consumer.groupId)}\n                            {String(consumer.memberId)}\n                          </Td>\n                          <Td dataLabel={tableColumns.current_offset}>\n                            {consumer.offset}\n                          </Td>\n                          <Td dataLabel={tableColumns.log_end_offset}>\n                            {consumer.logEndOffset}\n                          </Td>\n                          <Td dataLabel={tableColumns.offset_lag}>\n                            {consumer.lag}\n                          </Td>\n                          <Td dataLabel={tableColumns.offset_lag}>\n                            {isConsumerSelected(consumer) && selectedOffset\n                              ? selectedOffset === \"absolute\"\n                                ? customOffsetValue || 0\n                                : selectedOffset\n                              : \"-\"}\n                          </Td>\n                        </Tr>\n                      );\n                    })}\n                  </Tbody>\n                </TableComposable>\n              </StackItem>\n              <StackItem>\n                <Checkbox\n                  label={t(\"consumerGroup.reset_offset_accept\")}\n                  id=\"resetoffset-checkbox\"\n                  isChecked={isResetAccepted}\n                  onChange={setIsResetAccepted}\n                />\n              </StackItem>\n            </Stack>\n          )}\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n","import { Alert, Text } from \"@patternfly/react-core\";\nimport { DeleteModal } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type DeleteConsumerGroupProps = {\n  isModalOpen: boolean;\n  onClose: () => void;\n  onDeleteConsumer: () => void;\n  state: State;\n  consumerName: string;\n  appendTo: () => HTMLElement;\n  disableFocusTrap?: boolean;\n};\n\nexport const DeleteConsumerGroup: FunctionComponent<\n  DeleteConsumerGroupProps\n> = ({\n  isModalOpen,\n  onClose,\n  onDeleteConsumer,\n  state,\n  consumerName,\n  appendTo,\n  disableFocusTrap,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const isConsumerConnected = state === \"Stable\";\n\n  return (\n    <div>\n      <DeleteModal\n        isDeleting={false}\n        isModalOpen={isModalOpen}\n        title={t(\"consumerGroup.delete\")}\n        onCancel={onClose}\n        onDelete={onDeleteConsumer}\n        variant={\"non-destructive\"}\n        appendTo={appendTo}\n        disableFocusTrap={disableFocusTrap}\n        isDisabled={isConsumerConnected}\n      >\n        {isConsumerConnected ? (\n          <Alert\n            className=\"modal-alert\"\n            variant=\"danger\"\n            isInline\n            title={t(\"consumerGroup.delete_consumer_connected_alert_title\", {\n              name: consumerName,\n            })}\n          >\n            {t(\"consumerGroup.delete_consumer_connected_alert_body\")}\n          </Alert>\n        ) : (\n          <Text id=\"modal-message\">\n            <Trans\n              ns={\"kafka\"}\n              i18nKey={\"consumerGroup.consumer_group_delete_message\"}\n              values={{\n                name: consumerName,\n              }}\n            />\n          </Text>\n        )}\n      </DeleteModal>\n    </div>\n  );\n};\n","import {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent, ReactNode } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport \"./ConsumerGroup.css\";\nimport { ConsumerGroupDetails } from \"./ConsumerGroupDetails\";\n\nexport type ConsumerGroupDrawerProps = {\n  children: ReactNode;\n  consumerGroupByTopic: boolean;\n  state: State;\n  activeMembers: number;\n  partitionsWithLag: number;\n  consumers: Consumer[];\n  groupId: string;\n  onSelectDeleteConsumerGroup: () => void;\n  onSelectResetOffsetConsumerGroup: () => void;\n  isExpanded: boolean;\n  onClickClose: () => void;\n};\n\nexport const ConsumerGroupDrawer: FunctionComponent<\n  ConsumerGroupDrawerProps\n> = ({\n  children,\n  consumerGroupByTopic,\n  state,\n  activeMembers,\n  partitionsWithLag,\n  consumers,\n  groupId,\n  onSelectDeleteConsumerGroup,\n  onSelectResetOffsetConsumerGroup,\n  isExpanded,\n  onClickClose,\n}) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n  const onSelect = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const dropdownItems = [\n    <DropdownItem key=\"reset offset\" onClick={onSelectResetOffsetConsumerGroup}>\n      {t(\"consumerGroup.reset_offset\")}\n    </DropdownItem>,\n    <DropdownItem key=\"delete\" onClick={onSelectDeleteConsumerGroup}>\n      {t(\"common:delete\")}\n    </DropdownItem>,\n  ];\n\n  const panelContent = (\n    <DrawerPanelContent widths={{ default: \"width_50\" }}>\n      <DrawerHead>\n        <TextContent>\n          <Text\n            component={TextVariants.small}\n            className={\"consumer-group-drawer__top-label\"}\n          >\n            {t(\"consumerGroup.consumer_group_id\")}\n          </Text>\n          <Title headingLevel={\"h1\"} className={\"consumer-group-drawer__title\"}>\n            {groupId}\n          </Title>\n        </TextContent>\n        <DrawerActions>\n          <Dropdown\n            onSelect={onSelect}\n            toggle={<KebabToggle onToggle={onToggle} id=\"toggle-data-plane\" />}\n            dropdownItems={dropdownItems}\n            isOpen={isOpen}\n            isPlain\n            position={DropdownPosition.right}\n          />\n          <DrawerCloseButton onClick={onClickClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <ConsumerGroupDetails\n          consumerGroupByTopic={consumerGroupByTopic}\n          state={state}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n          consumers={consumers}\n        />\n      </DrawerPanelBody>\n    </DrawerPanelContent>\n  );\n\n  return (\n    <Drawer\n      isExpanded={isExpanded}\n      data-ouia-app-id={\"dataPlane-consumerGroupDetails\"}\n      isInline={true}\n    >\n      <DrawerContent panelContent={panelContent}>\n        <DrawerContentBody className=\"consumer-group-drawer__drawer-content-body\">\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type {\n  CloudProvider,\n  KafkaField,\n  SimplifiedStatus,\n  Status,\n} from \"ui-models/src/models/kafka\";\n\nexport function useKafkaLabels() {\n  const { t } = useTranslation(\"kafka\");\n\n  const statuses: { [status in Status]: string } = {\n    ready: t(\"statuses.ready\"),\n    degraded: t(\"statuses.degraded\"),\n    accepted: t(\"statuses.accepted\"),\n    provisioning: t(\"statuses.provisioning\"),\n    preparing: t(\"statuses.preparing\"),\n    deprovision: t(\"statuses.deprovision\"),\n    deleting: t(\"statuses.deleting\"),\n    suspended: t(\"statuses.suspended\"),\n    suspending: t(\"statuses.suspending\"),\n    resuming: t(\"statuses.resuming\"),\n  };\n  const statusesSimplified: { [status in SimplifiedStatus]: string } = {\n    creating: t(\"statusesSimplified.creating\"),\n    ready: t(\"statusesSimplified.ready\"),\n    degraded: t(\"statusesSimplified.degraded\"),\n    deleting: t(\"statusesSimplified.deleting\"),\n    suspended: t(\"statusesSimplified.suspended\"),\n    suspending: t(\"statusesSimplified.suspending\"),\n    resuming: t(\"statusesSimplified.resuming\"),\n  };\n  const providers: { [provider in CloudProvider]: string } = {\n    aws: t(\"common:cloudProviders.aws\"),\n    gcp: t(\"common:cloudProviders.gcp\"),\n    azure: t(\"common:cloudProviders.azure\"),\n  };\n  const providerRegions: {\n    [provider in CloudProvider]: { [region: string]: string };\n  } = {\n    aws: {},\n    gcp: {},\n    azure: {},\n  };\n  const fields: {\n    [field in KafkaField]: string;\n  } = {\n    id: t(\"fields.id\"),\n    name: t(\"fields.name\"),\n    createdAt: t(\"fields.createdAt\"),\n    updatedAt: t(\"fields.updatedAt\"),\n    expiryDate: t(\"fields.expiryDate\"),\n    owner: t(\"fields.owner\"),\n    provider: t(\"fields.provider\"),\n    region: t(\"fields.region\"),\n    status: t(\"fields.status\"),\n    plan: t(\"fields.plan\"),\n    size: t(\"fields.size\"),\n    ingress: t(\"fields.ingress\"),\n    egress: t(\"fields.egress\"),\n    storage: t(\"fields.storage\"),\n    maxPartitions: t(\"fields.maxPartitions\"),\n    connections: t(\"fields.connections\"),\n    connectionRate: t(\"fields.connectionRate\"),\n    messageSize: t(\"fields.messageSize\"),\n    billing: t(\"fields.billing\"),\n    clusterId: t(\"fields.clusterId\"),\n    adminUrl: t(\"fields.adminUrl\"),\n    bootstrapUrl: t(\"fields.bootstrapUrl\"),\n    version: t(\"fields.version\"),\n  };\n  return {\n    fields,\n    statuses,\n    statusesSimplified,\n    providers,\n    providerRegions,\n  };\n}\n","import { useTranslation } from \"react-i18next\";\nimport type { TopicField } from \"ui-models/src/models/topic\";\n\nexport function useTopicLabels() {\n  const { t } = useTranslation(\"topic\");\n\n  const fields: {\n    [field in TopicField]: string;\n  } = {\n    name: t(\"fields.name\"),\n    partitions: t(\"fields.partitions\"),\n    \"cleanup.policy\": t(\"fields.cleanup_policy\"),\n    \"delete.retention.ms\": t(\"fields.delete_retention_ms\"),\n    \"max.compaction.lag.ms\": t(\"fields.max_compaction_lag_ms\"),\n    \"max.message.bytes\": t(\"fields.max_message_bytes\"),\n    \"message.downconversion.enable\": t(\"fields.message_downconversion_enable\"),\n    \"message.timestamp.difference.max.ms\": t(\n      \"fields.message_timestamp_difference_max_ms\"\n    ),\n    \"message.timestamp.type\": t(\"fields.message_timestamp_type\"),\n    \"min.compaction.lag.ms\": t(\"fields.min_compaction_lag_ms\"),\n    \"retention.bytes\": t(\"fields.retention_bytes\"),\n    \"retention.ms\": t(\"fields.retention_ms\"),\n    \"segment.bytes\": t(\"fields.segment_bytes\"),\n    \"segment.ms\": t(\"fields.segment_ms\"),\n    \"compression.type\": t(\"fields.compression_type\"),\n    \"file.delete.delay.ms\": t(\"fields.file_delete_delay_ms\"),\n    \"flush.messages\": t(\"fields.flush_messages\"),\n    \"flush.ms\": t(\"fields.flush_ms\"),\n    \"follower.replication.throttled.replicas\": t(\n      \"fields.follower_replication_throttled_replicas\"\n    ),\n    \"index.interval.bytes\": t(\"fields.index_interval_bytes\"),\n    \"leader.replication.throttled.replicas\": t(\n      \"fields.leader_replication_throttled_replicas\"\n    ),\n    \"message.format.version\": t(\"fields.message_format_version\"),\n    \"min.cleanable.dirty.ratio\": t(\"fields.min_cleanable_dirty_ratio\"),\n    \"min.insync.replicas\": t(\"fields.min_insync_replicas\"),\n    \"segment.index.bytes\": t(\"fields.segment_index_bytes\"),\n    \"segment.jitter.ms\": t(\"fields.segment_jitter_ms\"),\n    \"unclean.leader.election.enable\": t(\n      \"fields.unclean_leader_election_enable\"\n    ),\n    preallocate: t(\"fields.preallocate\"),\n  };\n  return {\n    fields,\n  };\n}\n","import { useTranslation } from \"react-i18next\";\nimport type { ConsumerGroupField } from \"ui-models/src/models/consumer-group\";\n\nexport function useConsumerGroupLabels() {\n  const { t } = useTranslation(\"kafka\");\n\n  const fields: {\n    [field in ConsumerGroupField]: string;\n  } = {\n    groupId: t(\"consumerGroup.consumer_group_id\"),\n    activeConsumers: t(\"consumerGroup.active_members\"),\n    laggingPartitions: t(\"consumerGroup.partitions_with_lag\"),\n    state: t(\"consumerGroup.state_header\"),\n  };\n  return {\n    fields,\n  };\n}\n","import { PageSection } from \"@patternfly/react-core\";\nimport { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  EmptyStateNoResults,\n  TableView,\n} from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport type {\n  ConsumerGroup,\n  ConsumerGroupField,\n} from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupEmptyState, ConsumerGroupStateLabel } from \"./components\";\nimport { useConsumerGroupLabels } from \"../../hooks\";\n\ntype SubUnion<T, U extends T> = U;\n\nconst Columns: SubUnion<\n  ConsumerGroupField,\n  \"groupId\" | \"activeConsumers\" | \"laggingPartitions\" | \"state\"\n>[] = [\"groupId\", \"activeConsumers\", \"laggingPartitions\", \"state\"];\n\nexport type ConsumerGroupsProps<T extends ConsumerGroup> = {\n  consumers: Array<T> | undefined;\n  onDelete: (row: T) => void;\n  onViewPartition: (row: T) => void;\n  onViewResetOffset: (row: T) => void;\n  consumerName: string[];\n  onSearchConsumer: (value: string) => void;\n  onRemoveConsumerChip: (value: string) => void;\n  onRemoveConsumerChips: () => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n>;\n\nexport const ConsumerGroups = <T extends ConsumerGroup>({\n  consumers,\n  onDelete,\n  onViewPartition,\n  isColumnSortable,\n  itemCount,\n  onViewResetOffset,\n  onClearAllFilters,\n  page,\n  perPage,\n  onPageChange,\n  consumerName,\n  onSearchConsumer,\n  onRemoveConsumerChip,\n  onRemoveConsumerChips,\n}: ConsumerGroupsProps<T>) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const labels = useConsumerGroupLabels();\n\n  const isFiltered = consumerName.length > 0;\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"consumerGroup.consumer_group_list\")}\n        data={consumers}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th\n            key={key}\n            info={\n              column === \"laggingPartitions\"\n                ? {\n                    popover: (\n                      <div>\n                        {t(\"consumerGroup.partitions_with_lag_description\")}\n                      </div>\n                    ),\n                    ariaLabel: \"partitions with lag\",\n                    popoverProps: {\n                      headerContent: t(\n                        \"consumerGroup.partitions_with_lag_name\"\n                      ),\n                    },\n                  }\n                : undefined\n            }\n          >\n            {labels.fields[column]}\n          </Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"groupId\":\n                    return row.groupId;\n                  case \"activeConsumers\":\n                    return row.activeConsumers;\n                  case \"laggingPartitions\":\n                    return row.laggingPartitions;\n                  case \"state\":\n                    return <ConsumerGroupStateLabel state={row.state} />;\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row, ActionsColumn }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"consumerGroup.view_partitions_offsets\"),\n                onClick: () => onViewPartition(row),\n              },\n              {\n                title: t(\"consumerGroup.reset_offset\"),\n                onClick: () => onViewResetOffset(row),\n              },\n              {\n                title: t(\"common:delete\"),\n                onClick: () => onDelete(row),\n              },\n            ]}\n          />\n        )}\n        isColumnSortable={isColumnSortable}\n        filters={{\n          [labels.fields.groupId]: {\n            type: \"search\",\n            chips: consumerName,\n            onSearch: onSearchConsumer,\n            onRemoveChip: onRemoveConsumerChip,\n            onRemoveGroup: onRemoveConsumerChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"input_field_invalid_message\"),\n          },\n        }}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        isFiltered={isFiltered}\n        onClearAllFilters={onClearAllFilters}\n        emptyStateNoData={<ConsumerGroupEmptyState />}\n        emptyStateNoResults={<EmptyStateNoResults />}\n      />\n    </PageSection>\n  );\n};\n","import {\n  Divider,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport {\n  ExternalLink,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Sections = \"standard\" | \"dedicated\" | \"clusters\";\n\nexport type ControlPlaneHeaderProps = {\n  activeSection: Sections;\n  sectionsHref: { [key in Sections]: string };\n};\n\nexport const ControlPlaneHeader: VoidFunctionComponent<\n  ControlPlaneHeaderProps\n> = ({ activeSection, sectionsHref }) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        hasShadowBottom={true}\n        type={\"tabs\"}\n      >\n        <Level>\n          <LevelItem>\n            <TextContent className={\"pf-u-p-md pf-u-p-lg-on-xl\"}>\n              <Text component=\"h1\">{t(\"kafka:title\")}</Text>\n              <p>{t(\"kafka:description\")}</p>\n            </TextContent>\n          </LevelItem>\n        </Level>\n        <Nav variant=\"tertiary\" className=\"pf-u-px-sm-on-xl\">\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabstandard\"\n              id=\"dashboard-tab-section\"\n              aria-label={t(\"controlPlaneNavigation.standard\")}\n              ouiaId={\"tab-standard\"}\n              isActive={activeSection === \"standard\"}\n            >\n              <Link to={sectionsHref[\"standard\"]}>\n                {t(\"controlPlaneNavigation.standard\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabdedicated\"\n              id=\"dashboard-tab-section\"\n              aria-label={t(\"controlPlaneNavigation.dedicated\")}\n              ouiaId={\"tab-dedicated\"}\n              isActive={\n                activeSection === \"dedicated\" || activeSection === \"clusters\"\n              }\n            >\n              <Link to={sectionsHref[\"dedicated\"]}>\n                {t(\"controlPlaneNavigation.dedicated\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n        {(activeSection === \"dedicated\" || activeSection === \"clusters\") && (\n          <>\n            <Divider />\n            <Nav variant=\"tertiary\" className=\"pf-u-px-sm-on-xl\">\n              <NavList>\n                <NavItem\n                  style={{ borderTop: 0 }}\n                  data-testid=\"pageKafka-tabdedicated\"\n                  id=\"dashboard-tab-section\"\n                  aria-label={t(\"controlPlaneNavigation.dedicated\")}\n                  ouiaId={\"tab-dedicated\"}\n                  isActive={activeSection === \"dedicated\"}\n                >\n                  <Link to={sectionsHref[\"dedicated\"]}>\n                    {t(\"controlPlaneNavigation.dedicated-instances\")}\n                  </Link>\n                </NavItem>\n                <NavItem\n                  style={{ borderTop: 0 }}\n                  data-testid=\"pageKafka-tabclusters\"\n                  id=\"dashboard-tab-section\"\n                  aria-label={t(\"controlPlaneNavigation.clusters\")}\n                  ouiaId={\"tab-clusters\"}\n                  isActive={activeSection === \"clusters\"}\n                >\n                  <Link to={sectionsHref[\"clusters\"]}>\n                    {t(\"controlPlaneNavigation.clusters\")}\n                  </Link>\n                </NavItem>\n              </NavList>\n            </Nav>\n          </>\n        )}\n        <Divider />\n        <div className=\"pf-u-p-md pf-u-p-lg-on-xl\">\n          {(() => {\n            switch (activeSection) {\n              case \"standard\":\n                return t(\"standard_description\");\n              case \"dedicated\":\n                return (\n                  <Trans\n                    ns={\"kafka\"}\n                    i18nKey={\"dedicated_description\"}\n                    components={[\n                      <ExternalLink\n                        href={\"https://access.redhat.com/articles/TODO\"}\n                        testId={\"dedicated-instances-support-link\"}\n                        className={\"pf-u-ml-xs\"}\n                      />,\n                    ]}\n                  />\n                );\n              case \"clusters\":\n                return (\n                  <Trans\n                    ns={\"kafka\"}\n                    i18nKey={\"clusters_description\"}\n                    components={[\n                      <ExternalLink\n                        href={\"https://access.redhat.com/articles/TODO\"}\n                        testId={\"clusters-support-link\"}\n                        className={\"pf-u-ml-xs\"}\n                      />,\n                    ]}\n                  />\n                );\n            }\n          })()}\n        </div>\n      </PageSection>\n    </>\n  );\n};\n","import type { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfo } from \"../types\";\n\nexport function onProviderChange(\n  providers: CloudProviderInfo[],\n  provider: CloudProvider\n): { provider: CloudProvider; region: CloudRegion | undefined } {\n  const selectedProvider = providers.find((p) => p.id === provider);\n  const region =\n    selectedProvider?.defaultRegion ||\n    selectedProvider?.regions.filter((r) => !!r.isDisabled === false)[0]?.id;\n  return { provider, region };\n}\n","import {\n  CloudProvider,\n  CloudRegion,\n  MarketplaceSubscription,\n  Size,\n} from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateKafkaFormData,\n  CreateKafkaInstanceError,\n  StandardPlanInitializationData,\n  StandardSizes,\n} from \"../types\";\nimport { onProviderChange } from \"./shared\";\n\nexport type StandardPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: StandardPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    provider?: CloudProvider;\n    region?: CloudRegion;\n    size?: Size;\n    billing?: MarketplaceSubscription | \"prepaid\";\n  };\n\n  // based on the form.provider selection\n\n  // based on the form.provider and form.region selection\n  sizes: StandardSizes | undefined;\n\n  creationError: CreateKafkaInstanceError | undefined;\n};\n\nexport const StandardPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5SwC4EMB2E0CcIAUAbTAWTQGMALASwzADoA3MHagMwE8BBRta4gEb9qKDgGJEoAA4B7WCOoyMkkAA9EAZgAcARnoBOfQAYdOrQHYArABYNAJnMAaEB0Q6j++reuXL5k3bWWpY65gC+Yc6omNh4RKQUNHT05Eps1FAArqwYUPTRKJmwYuQ4YGgoYCqy8iiKykhqmjp29OYW5hpGQYG+zq4Ilvoa9KZGlh4a5joAbPqBEVHoWLgExBhkVLQMqRjpWTl5bDI4ALZMaITUEGLpYIQQAJIYvFcQ1XIKSirqCKGG9Ds+ksU1m5n0M2s1n0-UQdgmllGdjsOj8QJm7ihixA0RWcXWmySOzSGWytCOJ3Or2uYlgmQEpxEH1q9R+bmMnnMnRR9n8di0RjssIQ-MFo2sgQ81lCGjm2NxsTWCS2yV2+zJuXoxzO+TQjHJJTKFTAAGVMuRyHB4I0al8GqBfoEZlp6FpISYdBp7PprFZhaK9JDAuDproQfLlor4htEtsUiSDuStZTdfrcobypUAKI4HAnZl2tkinn0WVTFFQrS+mb+jEzehzMz84btazjCMxVbRwlxtWkw7Js63aj3J4vS7XAt1b6NR0+etaWXzPmQmsuOGmRGWfmWRchbctGYdvFKmMq4l7ftJu4PWD0DBoU4ManYSoSG2faf2poIIL15GmDo+iLkBdhGOYa4DLMUKjKCljOkYbrDFox5RgSsaqgmGpHCOt73o+YAZsaU6srObj2F45gSn4UIaDY7QaMKMouohVgzNuHhgRoOioV26HnvGl6JpqN4QHeD5PmIElgAAwpQmAwCRM4OuRrS+tRVG2PRi5MexrSojM9iIW2VgSrx+LKkSgnqgOol3lIeb6hALAXG8xrvtIn6kSpgxAm00IosiEEzDMTjriKHj1hMEIoqE1iGeYdjmaePaYUJ2FarhYn0A5MhOSwRGVEp36-J6alUfCml0b6Onhci8UGJxnoSuBGj6Ml3YYReNnXll9mOdcBW5flOByQpVQfiyyk-mVlEabR2mMXVUr0EYgo+qGQHtJYHX8VZfbCTho53mUUD1K51zucVRYHl4hg6EEPisdYTHwkYgLDNKRjsSF0I7ZEOKRnxlm9lhtl9fQp31IVE2eVNJWqXNlULTVS1QXR5iAqidgzCYApui0u0g2lPUiRDUNKGIw2DaN8m5LDIC2l+RazepyNaajTFdJ4OM8hBnRejxAMKsDZ77WDvXHZDYBnZTFMYGN9PXWRfwUWzNEcwxTEGaWvgWA9Gg+P41hE2LoPpeDUvyAAXs+E6voRys+b6gbcW7czQu4tUDA44KrZCsogfyXqm6l3VXmTVvULb9CEDIaAQAaEBKAwtCMDIADWDAixZZskxHR14TbDBxwn5IIGnMjkBU9QANpGAAuk7P6gvQNi6HY2gPVCwr2HRbS6PoVG7lYQyh111kF5lUcx6XifpiweY4DlxAoNq5w5ylE8HRldn5NHJfx-PUAVy8Vc10o9dN5NhYq9uLqBMiwEWBKneWL3vKrSEiHDOBILDOPASO9LZFwPjDZujpQq6wAuxYwoEpj+n-qMT0254KG3ig9QB4sLaS1AbbKmA1nK03GhAtwi4sYeisPMQw9hay4wML6RKhhvrgiFksTsucw6T0OtPPBhF5aK0UjfZmKtcYuh9GBQwGIUS1kNgYT6Ewfqd26Fg82pNC7ZWLrSA+giGZM28j+KiLopjbkhPrcCuhaweGgT4Ux-hZj-XYSeTqQCJaRz4WIIQhAri5F0aQ388E26NnYuCZcEEXp1VxpjAmVYqKsOBEeYWQNOHbzcRou8XifF5BfFdYRBjfjbhGFoAUZjZjLj8L3YpmM1pWHCZVGYONVH5x4XvTJSYlCEA4GaAQsBSjUCkF+YosB7hgHICgbpvTWADIMfo6apU1rWDaO6EKa0goNMqfoPQ-gbC4x9MBQUGgmnhxaRDNpmoHJgCkHwCAXAsATL6dMpQQyRljPuVMkRcNb4+UPIiYpQI9y7ngsBYU3hFlrU9GYjwIRwhJI4VvVxOD3HZTOXkC5Vzri3IgG8-pgzaQvJQPgMo6L3h5LmW4IwUxXS7i9L4KwswtAgr7m3FEQxEq6EhEc7hu9Tn8CyQQvKNM-GkoRqres3FURxPsMiIEvdAUD0XIhHG8VEKOMBnClx2D1G8LEmIZOyQCjZ2SfCzVU87L+NmOMNo7hxjlgaYbd+kT+6aWCG-XcSrOXAKTinfI6BKg+vVXtNRBd-H8hxq6aUxtfQmCkf6WU9YWhgUqiETEEQAYYBkM5a0yAjUarjMwVgnAeB8EEMIUQ-iQjhtCm1WUEofTjGFFYAw3oQj2p9NRTleUWAAEVMgyHQP4gUIxOLQh8FoX2DLwoJtLI9cFWg63TESU4tCxNU4YFxJaAAqg+Xg-A0ACEIHoryZKEBcnep0NtwQuTSIdT7ClrpQoonmC0XQa1F1qucYG5I8tYBbr1MWvdB7-FckWdCYpD1+RujHTCOqVZSwB3GMiRcwxZgerSf6wod5MhrvpIyFAlQSWfI+TNRCpY2pVhCI+jmwohg8zilRA2Y7fSocRXkAoRR8g4ZEPh-x84DBmGlPjLko8IkDAXatLoi54Sd3hPBZjWq2NZsZkekVsGvTAR8C0ICVHwoTBdKYUKLbkSsQhHJ01KY0723NeCRZnpNkmFCqEMdsaUSrWYd0LkgcTOwo-SurltkUwvis8BUY4EMQ-3cA9G9cJcYjFCmtYIQRhhzEOd55dedjm7xTLAPU5IQ0oIbBYDw4x5wojCj7Kw+lZScV8PCT0pmWlZb1JAENCUDDhOs8CYI-pwSIgabFHGHtMGpdFlwz1IlKRWf8LBOzYJHNCmWl0Nura51uu+vV7lUtpL0DAKcAZAxCP5MQEw0YhS2xoJqhOqCiUh3OmleMCEKWl0jdSSx7V4kCL0As28c1asKoa2qlrSd4J6zdG+h0MEXoTbDZSQirVe8tuBeFSzKiDYfT0UMqYkETFNkg4Mu0aY4xFxQ6ezDk1JzNsfZyUVJHKtDYjDavMKTc6vSdyYtd-2Y6jNDEMutkB2VpLmpI+rKqi0mK+E8AbX0QJWXGCStD41Qbyd4WpkQi6Dt-HaHrMubiHmTJukghuaEXhdzPo8BCFbvPcHZRVy5L7k4affJsICbQSrDBAiHlFkUXRFluk7nReYY7nQwpJwr5pG3leEJcojg7x6Kv+yCBYEEtWuT+gep4UdpupEW-l7msPfP+oCqIYLl0wuUaA9vdYta8xDJei6EYy3SKToy3OlTw98MixTBdKFAWLQbBlTK+RO9gR+NfW4vFFCOfP0Zfz9LWWGBPvjm+w7maExkG8lCCCQUtimLSkRPSl3zokNDZD7n6fVum9z7V0BxbDnBQNOdEBSEXMh8CahO4MfzoG-pNnzM5TLMhd-Yi6cyTrgR6CygoiJ7BAhQhRf5vb7wxyt4a7tANidD6bDwPrzY+wOYNiBCc4hTNiPbvppajZoZ7zFyfYQCAbL6lQUQgiGygFuztDwjdYQjiZQiigZ5vqbyn5+bn7wEMCJzZb7rNbUGIAdBeC6DcRVheiSGYFwjAh6DAgmCKJWDaA+CwFkEHz0AADufAdQuQAAYicD2n2mgD9q0HQVMLyNMDjAguFDSnoOMF7L-KoQApPr5mNt-uQZ2jgCYf2qIarBYZDgwZ6EwZ7l0HeozoqkEBYhPiflPrwY3vwVfgEZspyPZohuxN6HIQgBJmAdIdtA5tCMHkQc9rDqahDOQYvPmAEbNJYdyFyIeHYQMM2qtG2GVDaozhoZUVoXPLlgERBLFtoPfAKFCEMCJs0MMG0IlNuCGIuJ-u4elokV4QfMXktl6A0TYQlP6D4DZkBH3uBMPKqtwQkZ4XASimrsRLUdoI1J0IZBSn4HAuEZIf5C1O4EMJ3GwqUaToruHsirykmOmiaPivUAAEpgAACOmQ1AZQBGSm7eKs+WEw6+OuVe4RChro1mI6iE0a3RUsFxHSXS9IkyOK9Qd4ducJsyKmKOFiEq0wPQNglSwQowwQ0EYE-GcR3xoeZ+SRBJGAnS2Kjya6KRMeIqkWmMf4-IwOdqD0vcGJ0IkObq7Q4wXBOapxpBPK3i7S-JRJPSDygyA6q+tJfg9JY6jJ9hFUWMkIoQDEDSnJJxHhGp+JAJ5yRK1ymKgpgy22u2ZaARFgIw8IxgGmFKDgoQjKoQq0AQ9qjmwIeJeEFxaK7pdyxJ+pZJHGep7yv+CJ3yfIXgtmfeW0Y6l2iAb+Yq7QAo2y7g8IcZ-xWprplySZWKKZmZTyOUbp9uopRYzCroHgi4i4dKesIKtg6egoxSJSbU0wNZGSLpqK7ZNyyZGZpJTyA6RugZ3Q386+A+v4qIQ6r8hsVZvIU59AKK5qpgbcIZ0wqJUKsqa0bQPo7EFiEoKGixJBr2ZqfpIGgBZe3siAhgxizoY+-Ib+xSX+-i9Cam5GmmPo1UjKe+iGypYEVYJgnK2WzAlJf+Ks-yUUmyJp9Bl5saQwDYJgTCa0Y+boRyIa0S8U56NaQIZ2ORrQwwaR3oNewEz5EQQAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as StandardPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./StandardPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as StandardPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"providerChange\"; provider: CloudProvider }\n          | { type: \"regionChange\"; region: CloudRegion }\n          | { type: \"sizeChange\"; size: Size }\n          | {\n              type: \"selectSubscription\";\n              subscription: MarketplaceSubscription;\n            }\n          | { type: \"selectPrepaid\" }\n          | { type: \"billingChange\" }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: StandardSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"standardPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isOverQuota\",\n              target: \"overQuota\",\n            },\n            {\n              cond: \"isInstanceUnavailable\",\n              target: \"instanceUnavailable\",\n            },\n            {\n              cond: \"isRegionsUnavailable\",\n              target: \"regionsUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        overQuota: {\n          tags: \"blocked\",\n        },\n        instanceUnavailable: {\n          tags: \"blocked\",\n        },\n        regionsUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitted: {\n                  entry: \"triggerSubmit\",\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitted\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  tags: \"creatable\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                provider: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"providerIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"providerInvalid\",\n                    },\n                    valid: {\n                      tags: \"providerValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      actions: \"setProvider\",\n                      cond: \"didProviderChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                region: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"regionIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"regionInvalid\",\n                    },\n                    valid: {\n                      tags: \"regionValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      actions: \"setRegion\",\n                      cond: \"didRegionChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noProviderOrRegion\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          cond: \"sizeIsDisabled\",\n                          target: \"disabled\",\n                        },\n                        {\n                          cond: \"billingRequiredButNotSelected\",\n                          target: \"waitingForQuota\",\n                        },\n                        {\n                          cond: \"sizeIsOverQuota\",\n                          target: \"overQuota\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    disabled: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeDisabled\",\n                    },\n                    waitingForQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeWaitingForQuota\",\n                    },\n                    overQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeOverQuota\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      target: \".validate\",\n                    },\n                    sizeChange: {\n                      actions: \"setSize\",\n                      cond: \"didSizeChange\",\n                      target: \".validate\",\n                    },\n                    billingChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n                billing: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"onlyPrepaid\",\n                          target: \"prepaidOnly\",\n                        },\n                        {\n                          cond: \"singleSubscription\",\n                          target: \"singleSubscription\",\n                        },\n                        {\n                          cond: \"onlySubscriptions\",\n                          target: \"onlySubscriptions\",\n                        },\n                        {\n                          description:\n                            \"user has both prepaid and marketplace subscriptions\",\n                          target: \"prepaidAndSubscriptions\",\n                        },\n                      ],\n                    },\n                    prepaidOnly: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\"],\n                      entry: \"setBillingToPrepaid\",\n                      type: \"final\",\n                    },\n                    singleSubscription: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\", \"singleSubscription\"],\n                      entry: \"setBillingToSubscription\",\n                      type: \"final\",\n                    },\n                    onlySubscriptions: {\n                      description:\n                        \"More than one subscription exist. The user needs to select one to procede.\",\n                      initial: \"invalid\",\n                      type: \"final\",\n                      states: {\n                        invalid: {},\n                        valid: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                      },\n                      on: {\n                        selectSubscription: [\n                          {\n                            actions: \"setBillingToSubscription\",\n                            cond: \"matchesSelectedProviderOrRHMarketplaceAndHasQuota\",\n                            target: \".valid\",\n                          },\n                          {\n                            cond: \"noSelectedProvider\",\n                            target: \".valid\",\n                          },\n                        ],\n                      },\n                    },\n                    prepaidAndSubscriptions: {\n                      description:\n                        \"The user has both prepaid quota and one or more subscription to a marketplace. The user needs to select one to procede.\",\n                      initial: \"empty\",\n                      type: \"final\",\n                      states: {\n                        empty: {},\n                        subscription: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                        prepaid: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                      },\n                      on: {\n                        selectSubscription: [\n                          {\n                            actions: \"setBillingToSubscription\",\n                            cond: \"matchesSelectedProviderOrRHMarketplaceAndHasQuota\",\n                            target: \".subscription\",\n                          },\n                          {\n                            cond: \"noSelectedProvider\",\n                            target: \".subscription\",\n                          },\n                        ],\n                        selectPrepaid: {\n                          actions: \"setBillingToPrepaid\",\n                          cond: \"hasPrepaidQuota\",\n                          target: \".prepaid\",\n                        },\n                      },\n                    },\n                  },\n                  on: {\n                    providerChange: {\n                      actions: \"unsetSubscription\",\n                      description:\n                        \"If a new provider is selected, deselect any previously selected billing option.\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#standardPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              ...(context.capabilities.defaultProvider\n                ? onProviderChange(\n                    context.capabilities.availableProviders,\n                    context.capabilities.defaultProvider\n                  )\n                : {}),\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setProvider: assign((context, { provider }) => {\n          return {\n            form: {\n              ...context.form,\n              ...onProviderChange(\n                context.capabilities.availableProviders,\n                provider\n              ),\n            },\n            sizes: undefined,\n          };\n        }),\n        setRegion: assign((context, { region }) => {\n          if (context.creationError === \"region-unavailable\") {\n            return {\n              form: { ...context.form, region },\n              sizes: undefined,\n              creationError: undefined,\n            };\n          }\n          return {\n            form: {\n              ...context.form,\n              region,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSize: assign((context, { size }) => ({\n          form: {\n            ...context.form,\n            size,\n          },\n        })),\n        setSizes: assign((context, event) => {\n          const sizes = event.data;\n          const smallestSize = sizes.sort((a, b) => a.quota - b.quota)[0];\n          return {\n            sizes,\n            form: {\n              ...context.form,\n              size: smallestSize,\n            },\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => {\n          return {\n            creationError: error,\n          };\n        }),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form> &\n            Pick<typeof context.form, \"billing\">;\n          const data: CreateKafkaFormData = {\n            plan: \"standard\",\n            name: form.name,\n            provider: form.provider,\n            region: form.region,\n            sizeId: form.size.id,\n            billing: form.billing,\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n        triggerBillingChange: send(\"billingChange\"),\n        setBillingToPrepaid: assign((context) => {\n          const form = { ...context.form };\n          form.billing = \"prepaid\";\n          return { form };\n        }),\n        setBillingToSubscription: assign((context, event) => {\n          const form = { ...context.form };\n          if (event.type === \"selectSubscription\") {\n            form.billing = event.subscription;\n          } else {\n            // single subscription, take it from the context\n            const ms = context.capabilities.marketplaceSubscriptions[0];\n            form.billing = {\n              marketplace: ms.marketplace,\n              subscription: ms.subscriptions[0],\n            };\n          }\n          return { form };\n        }),\n        unsetSubscription: assign((context) => {\n          const form = { ...context.form };\n          form.billing = undefined;\n          return { form };\n        }),\n      },\n      guards: {\n        isOverQuota: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"out-of-quota\",\n        isInstanceUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"instance-unavailable\",\n        isRegionsUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"regions-unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        providerIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableProviders || []).length > 0 &&\n            // must have selected a provider\n            selectedProviderInfo !== undefined\n          );\n        },\n        regionIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have selected a region\n            form.region !== undefined &&\n            // the region must be included in the capabilities for the provider\n            selectedProviderInfo?.regions.find((r) => r.id === form.region) !==\n              undefined\n          );\n        },\n        noProviderOrRegion: ({ form }) =>\n          form.provider === undefined || form.region === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) => sizes !== undefined && sizes.length === 0,\n        sizeIsDisabled: ({ form, capabilities }) => {\n          if (capabilities === undefined) return true;\n          return form.size?.isDisabled === true;\n        },\n        billingRequiredButNotSelected: ({ form }, _, meta) => {\n          if (meta.state.hasTag(\"noBilling\")) {\n            return false;\n          }\n          return form.billing === undefined;\n        },\n        sizeIsOverQuota: ({ form, capabilities }) => {\n          if (capabilities === undefined || !form.size) return true;\n          const availableQuota =\n            form.billing === \"prepaid\" || form.billing === undefined\n              ? capabilities.remainingPrepaidQuota\n              : capabilities.remainingMarketplaceQuota;\n          if (!availableQuota) return true;\n          return form.size.quota > availableQuota;\n        },\n        didProviderChange: (context, event) =>\n          context.form.provider !== event.provider,\n        didRegionChange: (context, event) =>\n          context.form.region !== event.region,\n        didSizeChange: (context, event) =>\n          context.form.size?.id !== event.size.id,\n        onlyPrepaid: (context) =>\n          context.capabilities.marketplaceSubscriptions.length === 0,\n        singleSubscription: (context) =>\n          context.capabilities.remainingPrepaidQuota === undefined &&\n          context.capabilities.marketplaceSubscriptions.flatMap(\n            (m) => m.subscriptions\n          ).length === 1,\n        onlySubscriptions: (context) =>\n          context.capabilities.remainingPrepaidQuota === undefined &&\n          context.capabilities.marketplaceSubscriptions.length > 0,\n        matchesSelectedProviderOrRHMarketplaceAndHasQuota: (\n          { form, capabilities },\n          { subscription }\n        ) =>\n          capabilities.remainingMarketplaceQuota !== undefined &&\n          capabilities.remainingMarketplaceQuota > 0 &&\n          (subscription.marketplace === \"rhm\" ||\n            form.provider === subscription.marketplace),\n        hasPrepaidQuota: (context) =>\n          context.capabilities.remainingPrepaidQuota !== undefined &&\n          context.capabilities.remainingPrepaidQuota > 0,\n        noSelectedProvider: ({ form }) => form.provider === undefined,\n      },\n    }\n  );\n","import { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateKafkaFormData,\n  CreateKafkaInstanceError,\n  TrialPlanInitializationData,\n  TrialSizes,\n} from \"../types\";\nimport { onProviderChange } from \"./shared\";\n\nexport type TrialPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: TrialPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    provider?: CloudProvider;\n    region?: CloudRegion;\n  };\n\n  // based on the form.provider and form.region selection\n  sizes: TrialSizes | undefined;\n\n  creationError: CreateKafkaInstanceError | undefined;\n};\n\nexport const TrialPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QBUBOBLAhgGwArcwDsBZTAYwAt1CwA6ANzAwDMBPAQXs3QICMf0AF1YBiRKAAOAe1hD0UwuJAAPRACYAbAA4AnLQ0AGNQBYArBo0BmHQHYNNywBoQrRDoO1bARjWmv54y8DY18AX1DnNCw8AhJyKhpaMgVmdCgAVwxCKFpYQUxBdNgRMlQwArAlaVlBeUUkFUQgtWdXBFNLY1o7LRDTG1NTLVNjG3DIjBx8IlJKajpkwlSMrJzmKVQAWwYcdAgRVLBsCABJQi5sPaqZOQUlVQQvLRs9NR1TI1Mdey0tNS1Wk1nqZaJodIEbEYTAZ7OMQFEprFZgkFik0plqGsNtsLnsSmUKtcanV7kCXqD3p9vjZfv9AQg1AYhrQDF4fH9jJ0aVo4QiYjN4vMkmiVpjaOstrlMPRMfjyoIwABldJkMhweANaq3eqgB5qSxqGwsgwmgzPHRBGxeemMrQeCwfAY6NT6s2mXmTflxOaJRbLDHZcXYqUy7JyioAUVQqA2RO1pIZBqNppN5st1pcTR04O6gX+9hMefdEXhnum3pRwqW6NWQa2B3QR1O512EDjtTuDQe-i+tD+Jpdxm0NhdpnpXlGXTNnIt-RCnOLE2i5eRQr9NbFh2OsFohEwmzouIgFTEmpuHZ1jQQxmG3VHfjUE7Zb3HGlGoK8Vo0-ksli0Vh0D1lyRQVfRFAM1kbbdd33MADmxZVeE2IR2xJLsmgNccbECWgvAsGwBkhBwb0sIDEQFH1UWrUVAy3CAdz3A8REYsAAGEKCIGBUM7XUMJaTNHg0QZQU5Axf0MYxRmwsivVXMDqIg8UoPo2gJBjGUICYHZLmPBVT0kc80N49o3lBQxgnBLkmQBATH20Wghy8WxnS0IJLA0GSV1Aqj-VrOidzUqQNKYeCtkQ5DBG4y9u0w2zLCePs33cxkmW0IdPJAyiq18zdlIC9S9hCwLgtQdjOMqM9iR4q8vFito7JBd4XhpGF-FGDKKMrdcaMgpsdzKKA6m0vYTyihNTEfY0TH-aFzGCccni6G8DGzf9WSE9KSz5Lysu6xT-NoAa6lCzZwpQyr43Qx46qaN4vFoawR1HT8Jv6DqKzXcC-Lyw6wEGhQRGKwrSo47IKoMqror48cTEsByOhItlLD8P93rknyN1on6joBnHCDKsGxqu2r+LaIJ3FoEYRytYYkZCNHvOyzHeug2QAC9D1bUaLovBNnjh2xnn-A1hgmmz6rtLRugMZrhhvJzF1LYDOs+hTvr63J0A52hsCkTAIFlCAFDoah6CkABrOhtsyrqvtyjX2boXX9cxBBTakMgCjqABtAwAF0ieM4x3k8O0jCc2qNDum0Bg0bpKXihxvmsYwGd2u2sYdrWnb1g2wyYGNUFUghBAlbZrZV+Scsz1ns513PXfdz2L19gOeaMq9g8asPHwtZKLRjs0+xRv5DHJzQ09ttX7drjmTrOyL2+qmLSfUC0uhMDRsysbRNH8SfVerlmVMdwGCs0kHysDmqboQSxgnuvD9THq1szCLayxtw-maUrO57xgmXEl5Q2uqvO+Zo9BBCsJCSwI5rA8g-srD6Vcf7+REEbRIeQKi0ArsgjGPVf7bmvt2QI90-BCx0PFWBXcbQPweoMLeidHyfAPignq6Dja5HyAqHBn9K74IgsQ9Q2g9CGBMOYACdgHBYU5KHay2FkbOhdOEEshApCaQ1CgPheCGBMHQGwTg3A+ACGEEI68YC8J6AtBHew35-wWDUKwugghPQAFVYCQDMW8ewuE+hsjZIMXwr4rFsgtLYp4Fgo5ONoC46Iri9xcB4JgXg2BwYgC1LzK6IQbR-j7FoJMYkhIRxpNEvGsB4nSiMck1JZjskCSCB4cEMtOQiNGDLLw0S9q1iwYUHc6RCCwHSEhIQCo2zAITM0ekQ4QTNSfhCbM9NEHkR0V0sUPSii5CGRFUZXj8mUwaayP4eFkb9HpNoOGkIVodBePYMSitcHoyZgQ9Zmj0mGWXogGk9I-weD+EMbMZpWTiVTks2SjNVm0WDKbVsXjg5xxlv+Zyj4CIWMRaCBhgwmQjD+KRUFO0p5HzrDiGF4ziaDD0P2KEQ5nijloStRKMIvjDmGMjTpGcsSSlgNKTEXiTRGleiaCaFprF0qlhNBWLomTHI8nir+bD9rBi5YwMZENLrGRMN8FkNIt4vGRSOWh2F9Ao1qu8Do+SZVLmWY8iFHLNhmJ-CCSlg5hy0vqX+SBtV2TPz-G8Nl08a4qRYrQfpggpAqgoJ40lxl-BqFBLoWBFhYEwn1E4epLwPVYr+K5dN9ztHWvZYQwNsFaBgE2BIUxUarwjilkJAYmh7DIxTVhTQuF+gcjsJQ38YxZX8KeftH6QboU6XtbfJysCWQdGnE1CaMs-WEoOkGo89rDUumZdmfof48Ljn-FLM0Tw7JOQsHO1BA7i1HkJJWh4nRY0WgGHhXQxhpzGGbXHfwNITAdt-LA49BCF2wXtWacc5hY3iPBEK5ovQf39o1kDC+wbCChvDZG1VmTo2Gusj4OcDghh2ByXYPse6wl3u-N2y1YL07+uPvlIKwNhq6TSRkjuV7-zww+P4NkQ4CKpvqi6e6IRmm6EZOu0jSsrXgoLQdWDWkh1XEvU0Do3RhzBzZEYb4ZgbSSRmS8MwbH77KJ7SsiTP0pNFyXXJhAd7KYOA5OSnQdowEukmvx7CgmVpNSg+raCJmAPi3UIC0O2gLK6HYx5meKk8bwcQ5QZDbzIYTK3p4N4nRAgfHzDCccQ5XjYW0AreKPxQsBv6n9Ia56FRmNgVLJy2E-DOiZPFHQMNx0zhHBxoSD6CtUd+v9QgtAZMqti2qmqwd9DWGpCjF0sCxxuuG50Fa35nQ-mkgZ-NlHC1Fe63RsxDgPB4Q+H+ecjIXz1P1EaGctigXDBEw88Tq2Dp4x8+OQVVnzK0yTO5Dra3Nba1Kwx95ID7CiPyXYL4wdDTfBtH3EbFlvxfsZLisj+Lv6-p+o7XrEAanmY4yCMehoTCHqEjaX4lXQeb38NvD7B1UdmZQ0x9QCnfCuXih8QYQQOgQ5HLhC0JohLaHwrmpBK350o7rgXWM5mLC7u-GCTkkltBTfqvYI0yMALzmnVdvNN2hd-xzi7bII6HP2C6GlTk+S-k+Ap8LjmD3bL-O6J6gYwRpn72W5rk9fUzG9HpJQ2NElqsvUCPD0T5GCXMzMSMb5Mth5Dn1N8Wm2holKpi4xj5DJ7OeEKbobT2ExJYXHd8XeIwRG2HVwL7y9rfOPAQeEIAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as TrialPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./TrialPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as TrialPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"providerChange\"; provider: CloudProvider }\n          | { type: \"regionChange\"; region: CloudRegion }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: TrialSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"TrialPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isTrialUsed\",\n              target: \"trialUsed\",\n            },\n            {\n              cond: \"isTrialUnavailable\",\n              target: \"trialUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        trialUsed: {\n          tags: \"blocked\",\n        },\n        trialUnavailable: {\n          tags: \"blocked\",\n        },\n        regionsUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitted: {\n                  entry: \"triggerSubmit\",\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitted\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                provider: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"providerIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"providerInvalid\",\n                    },\n                    valid: {\n                      tags: \"providerValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      actions: \"setProvider\",\n                      cond: \"didProviderChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                region: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"regionIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"regionInvalid\",\n                    },\n                    valid: {\n                      tags: \"regionValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      actions: \"setRegion\",\n                      cond: \"didRegionChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noProviderAndRegion\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#TrialPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              ...(context.capabilities.defaultProvider\n                ? onProviderChange(\n                    context.capabilities.availableProviders,\n                    context.capabilities.defaultProvider\n                  )\n                : {}),\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setProvider: assign((context, { provider }) => {\n          return {\n            form: {\n              ...context.form,\n              ...onProviderChange(\n                context.capabilities.availableProviders,\n                provider\n              ),\n            },\n            sizes: undefined,\n          };\n        }),\n        setRegion: assign((context, { region }) => {\n          if (context.creationError === \"region-unavailable\") {\n            return {\n              form: { ...context.form, region },\n              sizes: undefined,\n              creationError: undefined,\n            };\n          }\n          return {\n            form: {\n              ...context.form,\n              region,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSizes: assign((_context, event) => {\n          const sizes = event.data;\n          return {\n            sizes,\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => ({\n          creationError: error,\n        })),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form>;\n          const data: CreateKafkaFormData = {\n            plan: \"developer\",\n            name: form.name,\n            provider: form.provider,\n            region: form.region,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            sizeId: context.sizes!.trial.id,\n            billing: undefined,\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n      },\n      guards: {\n        isTrialUsed: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"used\",\n        isTrialUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        providerIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableProviders || []).length > 0 &&\n            // must have selected a provider\n            selectedProviderInfo !== undefined\n          );\n        },\n        regionIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have selected a region\n            form.region !== undefined &&\n            // the region must be included in the capabilities for the provider\n            selectedProviderInfo?.regions.find((r) => r.id === form.region) !==\n              undefined\n          );\n        },\n        noProviderAndRegion: ({ form }) =>\n          form.provider === undefined || form.region === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) =>\n          sizes !== undefined && sizes.standard.length === 0,\n        didProviderChange: (context, event) =>\n          context.form.provider !== event.provider,\n        didRegionChange: (context, event) =>\n          context.form.region !== event.region,\n      },\n    }\n  );\n","import type { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, EventFrom, forwardTo, send } from \"xstate\";\nimport type {\n  CloudProvidersInfo,\n  CreateKafkaFormData,\n  CreateKafkaInitializationData,\n  CreateKafkaInstanceError,\n  StandardPlanInitializationData,\n  StandardSizes,\n  TrialPlanInitializationData,\n  TrialSizes,\n} from \"../types\";\nimport {\n  StandardPlanMachine,\n  StandardPlanMachineContext,\n} from \"./StandardPlanMachine\";\nimport { TrialPlanMachine, TrialPlanMachineContext } from \"./TrialPlanMachine\";\n\ntype Quota =\n  | Pick<\n      StandardPlanInitializationData,\n      | \"plan\"\n      | \"remainingPrepaidQuota\"\n      | \"marketplaceSubscriptions\"\n      | \"remainingMarketplaceQuota\"\n      | \"instanceAvailability\"\n    >\n  | Pick<TrialPlanInitializationData, \"plan\" | \"instanceAvailability\">;\n\nexport type CreateKafkaInstanceMachineContext = {\n  quota: Quota | undefined;\n  providers: CloudProvidersInfo | undefined;\n  defaultProvider: CloudProvider | undefined;\n  capabilities: CreateKafkaInitializationData | undefined;\n};\n\nconst CreateKafkaInstanceMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMBOYCGAXMBpDAZgNYYCSAdrFhucmAHQA2A9hhAJblT0COArs2r1kACzDIinKAAIqNCBlQRp-QRgDEYVKmap6AB0bYCugLbD02PIRIU5tBizZTeAoaPGSus6uQVKVNwwETgA3ZmRsdmZyAG0ABgBdRFB9Zlh2LGjyFJAAD0QAFniAJnp4gGYAdkKATgAOeqr4qvrCgFYAGhAAT0QANir++n769tqq2sKARhKKjsKAX0XutEwcfGIySl86JlYOLlc1YTEJKR95RWVVanV7fxug6QxQjHYjACNGMFy0jKyMVyBQQxTKlRqDSaLTaXV6iHG8XoVXahX6UyqJVqJX6-WWq0sGxs23seych24twwp08Fwe10CanUzD4WGkzAIlz8DKpf3SmWywKKpXK1TqjWarQ63T6CHa8UK9Hqcw6JUK6palXxIDWVk2th2NDJBxcVJp5289ICVPU5GYXMejOoLzeHww31+SBA-wFQK9ILBoshEph0vhoPaw2hFRKasKbQa0yWKx1hOsWzsu0cJqOZqtEHUfIBgv9iCTU2RkZj03RYsjMoGyvo0yG40KJSq0wq02m9W1uqJGcNDn2zlzQXoEDAoTALH0WkLXp9gJypYQ5cVKP61drNXr4faFSRJVmdUmasjvf7af1JKzo4px3cZy8MinM7nWhd7y+H0yPU0bRdAMIwsBMVBzAHdMDVJbMx0pCcPAtN9p1nZh51Qb83U+P8sB6EJyHCSIVwSZIl35FchQQWpanaeh4y7JN5gqbFZgbOU1WRE96m3Bp+lRKoKmvdZoLvI04MfM0kNfaR3zQjCsN-Rh-3UOTP0wvhYEgItfVXUAQRouiGO7QpmNYkp2NMqolXqWZcSPCpRn6NFhL1YlM3Eh9TUQl8LjU9Cv1eH93VwgD-IUoLsJ+HTKLXQz6NskyzJPCzwwqdppnoWj4niaZ2kPepaiTaZXMHGD73JFwCDALBRAufQdFCdgp1QWB1Aa5gmpa2AXj8aR0CgbIesir5ovI4s-X0staNqegjzGcZ+hKHjeyqdj2jGcplu4moFSqKpStEjyR0qo5qtqkR6sa5qtDarQdD0QxjDMCwRNvY7jXg+hzrq7wOq626CKIqIYlImKSym9cMRsiY0RmaYFXiOFZUKfa5rqRy5mmWp4kGdpDve4dPsfH7Lr+67uvainbvZTCBqG6Q+HIEb3TG1IKIh-Jpsjeh2k7XHOw7QqWnY0Z6mbapakGNVqgR-GUygwnYK8rhVJiBg5BwV63KHZXTqgcHJq5hASlROj+lKCp6kqdUVvYq3Mr3ds0UaPLZgJ9yiY13xHSe8h6Gan57leT12YmvTjaxbd6NM+NDIVdLCkskUFmxyZt2cwYPd1+982kP36FgV4pHUKCAGU+GQOhYHgcbdKoxOjKR0p6nmYXlvt1Fyn6Lt1W7E9Jkc7Pys8vOC6LprVaggBRIDUENiOQSjioY7b+PTNRe2a152NbLy03M7y4exJHcKvwLwOwGDmcF6orFWl5i2Nt7toEYqUWpayrt5SW+z4ls4+H0GBn0wuPYuU80wVyrnAWuYd65rkbvRBUtQ6x9zaKLeMO8WhDB7PEKEtRAFe0nKhdS+cjD+wniXGec9b5rnvuLSMSNErxhmJUUWCMsrKmWngsEuJ5YpjtFOWBqY3qez1jmBCJxpJ0h9jyIItDIYI1SrKSM4tW6dmVB0TsaISoKxvGIiqEinzUnzAo42zRxYojmD3FEtk+bTFFkMZskYcS9mfiwwh4ivpmhAWYkEswGg2RwSxJosxSjrU4tjAePcEY8SKp4wx3ifK0m8CAxSIVlJ4T8QMfic1lrFVaMqeYDjwztjojxHhsYOxW1ssmAkoic6eX1sY7JCBWjsQ7LNKWjRKiLRxmieW9SdYjxOkY0mV1Oo3Vaq0msCoY7FCGOlWMsxkYIkxMiHh7RYyMPjEJPRDSRnExcJYCAso4GxUhrGQY5QMpjCSpedaExkRND5jorEFQ9lDLKifI5XBWmb3DC2TKlRGLVCxBeDoCTR49CoGAUwjNmaulGqHb0HMjYgkciiLK+UUFWRxt2VZbT1mt1GK0Fo-EOx4n2cMn53srgBAvhANmqLw53yaIqfi4xsQdnyu2d+aVqjONbmna2OJuxQpHGPchhdwEGzrhc42MZBXYwmD3CE-F+j21jCMZy8Ytxdlom0CVewpU0FacteUIwcXcpRKiOY7FsYrzBdbeMhUWJt2NcAkhAVQHSsvuaxos19rzUxelFsyiBjdhGC2UYLY4k9l0V8o6RC0lgMnnK85nMMVVPKJo2GbiirsOsrMd1uU1SWzqSImlQDiEfh9WQs18qs2IGWrk4N-9Q0ZUxJZJoSolWVBylYwqnrhDMFMIYGqKLlzNoQNUf+SomFoP2p2Ht1lcZ5Roj2IW4rqXfKAa0o87EaI3JyhtQS2Ntyo2WMsIAA */\n  createMachine(\n    {\n      context: {\n        providers: undefined,\n        defaultProvider: undefined,\n        quota: undefined,\n        capabilities: undefined,\n      },\n      predictableActionArguments: true,\n      tsTypes: {} as import(\"./CreateKafkaInstanceMachine.typegen\").Typegen0,\n      schema: {\n        context: {} as CreateKafkaInstanceMachineContext,\n        events: {} as\n          | {\n              type: \"standard quota available\";\n              quota: Pick<\n                StandardPlanInitializationData,\n                | \"remainingPrepaidQuota\"\n                | \"remainingMarketplaceQuota\"\n                | \"marketplaceSubscriptions\"\n              >;\n            }\n          | {\n              type: \"out of standard quota\";\n              quota: Pick<\n                StandardPlanInitializationData,\n                \"marketplaceSubscriptions\"\n              >;\n            }\n          | {\n              type: \"no standard quota available\";\n              hasTrialQuota: boolean;\n            }\n          | {\n              type: \"trial available\";\n              capabilities: TrialPlanInitializationData;\n            }\n          | { type: \"trial used\" }\n          | { type: \"developer available\" }\n          | { type: \"developer used\" }\n          | { type: \"developer unavailable\" }\n          | {\n              type: \"providers and regions available\";\n              providers: CloudProvidersInfo;\n              defaultProvider: CloudProvider | undefined;\n            }\n          | { type: \"providers or regions unavailable\" }\n          | { type: \"save\"; data: CreateKafkaFormData }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          checkStandardQuota: {\n            data: never;\n          };\n          checkDeveloperAvailability: {\n            data: never;\n          };\n          fetchProvidersWithRegions: {\n            data: never;\n          };\n          standardPlan: {\n            data: StandardPlanMachineContext;\n          };\n          trialPlan: {\n            data: TrialPlanMachineContext;\n          };\n        },\n      },\n      id: \"createKafkaInstance\",\n      initial: \"loading\",\n      states: {\n        loading: {\n          description: \"Fetch the data required to drive the creation flow\",\n          tags: \"loading\",\n          initial: \"quota\",\n          states: {\n            quota: {\n              initial: \"checking standard quota\",\n              states: {\n                \"checking standard quota\": {\n                  invoke: {\n                    src: \"checkStandardQuota\",\n                    onError: [\n                      {\n                        actions: \"setStandardUnavailable\",\n                        target: \"standard\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"standard quota available\": {\n                      actions: \"setStandardAvailable\",\n                      target: \"standard\",\n                    },\n                    \"out of standard quota\": {\n                      actions: \"setStandardOutOfQuota\",\n                      target: \"standard\",\n                    },\n                    \"no standard quota available\": {\n                      target: \"checking developer availability\",\n                    },\n                  },\n                },\n                standard: {\n                  type: \"final\",\n                  always: {\n                    target: \"#createKafkaInstance.loading.fetching providers\",\n                  },\n                },\n                developer: {\n                  type: \"final\",\n                  always: {\n                    target: \"#createKafkaInstance.loading.fetching providers\",\n                  },\n                },\n                \"checking developer availability\": {\n                  invoke: {\n                    src: \"checkDeveloperAvailability\",\n                    onError: [\n                      {\n                        actions: \"setDeveloperUnavailable\",\n                        target: \"developer\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"developer used\": {\n                      actions: \"setDeveloperUsed\",\n                      target: \"developer\",\n                    },\n                    \"developer available\": {\n                      actions: \"setDeveloperAvailable\",\n                      target: \"developer\",\n                    },\n                    \"developer unavailable\": {\n                      actions: \"setDeveloperUnavailable\",\n                      target: \"developer\",\n                    },\n                  },\n                },\n              },\n            },\n            \"fetching providers\": {\n              invoke: {\n                src: \"fetchProvidersWithRegions\",\n                onError: [\n                  {\n                    actions: \"setProvidersOrRegionsUnavailable\",\n                    target: \"ready\",\n                  },\n                ],\n              },\n              on: {\n                \"providers and regions available\": {\n                  actions: \"setProviders\",\n                  target: \"ready\",\n                },\n                \"providers or regions unavailable\": {\n                  actions: \"setProvidersOrRegionsUnavailable\",\n                  target: \"ready\",\n                },\n              },\n            },\n            ready: {\n              type: \"final\",\n              entry: \"setCapabilities\",\n            },\n          },\n          onDone: [\n            {\n              cond: \"standard plan\",\n              target: \"standard plan\",\n            },\n            {\n              cond: \"developer plan\",\n              target: \"developer plan\",\n            },\n            {\n              target: \"system unavailable\",\n            },\n          ],\n        },\n        \"system unavailable\": {\n          tags: \"systemUnavailable\",\n          type: \"final\",\n        },\n        \"standard plan\": {\n          invoke: {\n            src: \"standardPlan\",\n            id: \"standardPlanService\",\n          },\n          tags: \"standardPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToStandardPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        \"developer plan\": {\n          invoke: {\n            src: \"trialPlan\",\n            id: \"trialPlanService\",\n          },\n          tags: \"trialPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToTrialPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        complete: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        setDeveloperAvailable: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"available\" as const,\n          },\n        })),\n        setDeveloperUnavailable: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"unavailable\" as const,\n          },\n        })),\n        setDeveloperUsed: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"used\" as const,\n          },\n        })),\n        setStandardAvailable: assign((_, event) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"available\" as const,\n            remainingPrepaidQuota: event.quota.remainingPrepaidQuota,\n            marketplaceSubscriptions: event.quota.marketplaceSubscriptions,\n            remainingMarketplaceQuota: event.quota.remainingMarketplaceQuota,\n          },\n        })),\n        setStandardOutOfQuota: assign((_, event) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"out-of-quota\" as const,\n            marketplaceSubscriptions: event.quota.marketplaceSubscriptions,\n            remainingMarketplaceQuota: 0,\n            remainingPrepaidQuota: 0,\n          },\n        })),\n        setStandardUnavailable: assign((_) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"instance-unavailable\" as const,\n            marketplaceSubscriptions: [],\n            remainingMarketplaceQuota: 0,\n            remainingPrepaidQuota: 0,\n          },\n        })),\n        setProviders: assign((_, event) => {\n          return {\n            providers: event.providers,\n            defaultProvider: event.defaultProvider,\n          };\n        }),\n        setProvidersOrRegionsUnavailable: assign((context) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const quota = context.quota!;\n          if (quota.plan === \"standard\") {\n            quota.instanceAvailability = \"regions-unavailable\";\n          } else {\n            quota.instanceAvailability = \"unavailable\";\n          }\n          return {\n            providers: [],\n            quota,\n          };\n        }),\n        setCapabilities: assign((context) => {\n          const { providers, defaultProvider, quota } = context;\n          if (!providers || !quota) {\n            throw new Error(\"unexpected condition, no providers or quota\");\n          }\n          if (quota.plan === \"standard\") {\n            const capabilities: StandardPlanInitializationData = {\n              plan: \"standard\",\n              availableProviders: providers,\n              defaultProvider,\n              instanceAvailability: quota.instanceAvailability,\n              marketplaceSubscriptions: quota.marketplaceSubscriptions,\n              remainingMarketplaceQuota: quota.remainingMarketplaceQuota,\n              remainingPrepaidQuota: quota.remainingPrepaidQuota,\n            };\n            return { capabilities };\n          } else {\n            const capabilities: TrialPlanInitializationData = {\n              plan: \"developer\",\n              availableProviders: providers,\n              defaultProvider,\n              instanceAvailability: quota.instanceAvailability,\n            };\n            return { capabilities };\n          }\n        }),\n        notifyCreateErrorToStandardPlan: forwardTo(\"standardPlanService\"),\n        notifyCreateErrorToTrialPlan: send(\n          (_, event) => {\n            return { type: \"createError\", error: event.error };\n          },\n          { to: \"trialPlanService\" }\n        ),\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n      },\n      guards: {\n        \"standard plan\": (context) => context.quota?.plan === \"standard\",\n        \"developer plan\": (context) => context.quota?.plan === \"developer\",\n      },\n    }\n  );\n\ntype EventTypes = Pick<\n  EventFrom<typeof CreateKafkaInstanceMachine>,\n  \"type\"\n>[\"type\"];\n\ntype EventOptions<E extends EventTypes> = Omit<\n  EventFrom<typeof CreateKafkaInstanceMachine, E>,\n  \"type\"\n>;\n\nexport type CreateKafkaInstanceServices = {\n  checkStandardQuota: (events: {\n    onOutOfQuota: (p: EventOptions<\"out of standard quota\">) => void;\n    onQuotaAvailable: (p: EventOptions<\"standard quota available\">) => void;\n    onNoQuotaAvailable: (\n      p: EventOptions<\"no standard quota available\">\n    ) => void;\n  }) => void;\n  checkDeveloperAvailability: (events: {\n    onUsed: () => void;\n    onAvailable: () => void;\n    onUnavailable: () => void;\n  }) => void;\n  fetchProvidersWithRegions: (\n    plan: \"standard\" | \"developer\",\n    events: {\n      onAvailable: (p: EventOptions<\"providers and regions available\">) => void;\n      onUnavailable: () => void;\n    }\n  ) => void;\n  getStandardSizes: (\n    provider: CloudProvider,\n    region: CloudRegion\n  ) => Promise<StandardSizes>;\n  getTrialSizes: (\n    provider: CloudProvider,\n    region: CloudRegion\n  ) => Promise<TrialSizes>;\n  onCreate: (\n    data: CreateKafkaFormData,\n    onSuccess: () => void,\n    onError: (error: CreateKafkaInstanceError) => void\n  ) => void;\n};\n\nexport function makeCreateKafkaInstanceMachine({\n  checkStandardQuota: checkStandardQuotaCb,\n  checkDeveloperAvailability: checkDeveloperAvailabilityCb,\n  fetchProvidersWithRegions: fetchProvidersWithRegionsCb,\n  getStandardSizes: getStandardSizesCb,\n  getTrialSizes: getTrialSizesCb,\n  onCreate,\n}: CreateKafkaInstanceServices) {\n  return CreateKafkaInstanceMachine.withConfig({\n    services: {\n      checkStandardQuota: () => {\n        return (send) =>\n          checkStandardQuotaCb({\n            onNoQuotaAvailable: ({ hasTrialQuota }) => {\n              send({ type: \"no standard quota available\", hasTrialQuota });\n            },\n            onOutOfQuota: ({ quota }) => {\n              send({ type: \"out of standard quota\", quota });\n            },\n            onQuotaAvailable: ({ quota }) => {\n              send({ type: \"standard quota available\", quota });\n            },\n          });\n      },\n      checkDeveloperAvailability: () => {\n        return (send) => {\n          checkDeveloperAvailabilityCb({\n            onAvailable: () => send(\"developer available\"),\n            onUsed: () => send(\"developer used\"),\n            onUnavailable: () => send(\"developer unavailable\"),\n          });\n        };\n      },\n      fetchProvidersWithRegions: (context) => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const instanceType = context.quota!.plan;\n        return (send) => {\n          fetchProvidersWithRegionsCb(instanceType, {\n            onAvailable: ({ providers, defaultProvider }) =>\n              send({\n                type: \"providers and regions available\",\n                providers,\n                defaultProvider,\n              }),\n            onUnavailable: () => send(\"providers or regions unavailable\"),\n          });\n        };\n      },\n      createInstance: (_context, event) => {\n        const form = event.data;\n\n        return (send) => {\n          function onSuccess() {\n            send(\"createSuccess\");\n          }\n\n          function onError(error: CreateKafkaInstanceError) {\n            send({ type: \"createError\", error });\n          }\n\n          onCreate(\n            {\n              plan: form.plan,\n              name: form.name,\n              provider: form.provider,\n              region: form.region,\n              sizeId: form.sizeId,\n              billing: form.billing,\n            },\n            onSuccess,\n            onError\n          );\n        };\n      },\n      standardPlan: (context) => {\n        return StandardPlanMachine.withContext({\n          capabilities: context.capabilities as StandardPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getStandardSizesCb(form.provider, form.region);\n            },\n          },\n        });\n      },\n      trialPlan: (context) => {\n        return TrialPlanMachine.withContext({\n          capabilities: context.capabilities as TrialPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getTrialSizesCb(form.provider, form.region);\n            },\n          },\n        });\n      },\n    },\n  });\n}\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { CreateKafkaInstanceServices } from \"./CreateKafkaInstanceMachine\";\nimport { makeCreateKafkaInstanceMachine } from \"./CreateKafkaInstanceMachine\";\n\nexport const CreateKafkaInstanceContext = createContext<{\n  service: ActorRefFrom<ReturnType<typeof makeCreateKafkaInstanceMachine>>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport const CreateKafkaInstanceProvider: FunctionComponent<\n  CreateKafkaInstanceServices\n> = ({\n  onCreate,\n  checkStandardQuota,\n  checkDeveloperAvailability,\n  fetchProvidersWithRegions,\n  getStandardSizes,\n  getTrialSizes,\n  children,\n}) => {\n  const service = useInterpret(\n    () =>\n      makeCreateKafkaInstanceMachine({\n        checkStandardQuota,\n        checkDeveloperAvailability,\n        fetchProvidersWithRegions,\n        getStandardSizes,\n        getTrialSizes,\n        onCreate,\n      }),\n    { devTools: true }\n  );\n  return (\n    <CreateKafkaInstanceContext.Provider value={{ service }}>\n      {children}\n    </CreateKafkaInstanceContext.Provider>\n  );\n};\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { Link } from \"react-router-dom\";\n\nexport type BillingHelpProps = {\n  type: \"rh-only\" | \"external-marketplaces\";\n  subscriptionOptionsHref: string;\n};\n\nexport const BillingHelp: VoidFunctionComponent<BillingHelpProps> = ({\n  type,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <Popover\n      aria-label={t(\"billing.field_label\")}\n      headerContent={t(\"billing.field_label\")}\n      bodyContent={\n        <Trans\n          i18nKey={\n            type === \"rh-only\"\n              ? \"billing.field_popover_rh_only\"\n              : \"billing.field_popover_external_marketplace\"\n          }\n          ns={\"create-kafka-instance\"}\n          components={[<Link to={subscriptionOptionsHref} />]}\n        />\n      }\n    >\n      <OutlinedQuestionCircleIcon />\n    </Popover>\n  );\n};\n","export const LogoAWS = new URL(\"./Logo-AWS.svg\", import.meta.url)\n  .href;\nexport const LogoAzure = new URL(\n  \"./Logo-Azure.svg\",\n  import.meta.url\n).href;\nexport const LogoGCP = new URL(\"./Logo-GCP.svg\", import.meta.url)\n  .href;\nexport const LogoRedhat = new URL(\n  \"./Logo-Redhat.svg\",\n  import.meta.url\n).href;","import type { FunctionComponent } from \"react\";\nimport { LogoAWS } from \"./images\";\n\nexport const AWSLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoAWS} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoAzure } from \"./images\";\n\nexport const AzureLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoAzure} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoGCP } from \"./images\";\n\nexport const GCPLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoGCP} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Gallery,\n  GalleryItem,\n  HelperText,\n  HelperTextItem,\n  Tile,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { MarketPlace } from \"ui-models/src/models/kafka\";\nimport { AWSLogo, AzureLogo, GCPLogo, RedhatLogo } from \"../../Logos\";\n\nexport type BillingTilesProps = {\n  value: \"prepaid\" | string | undefined;\n  hasPrepaid: boolean;\n  subscriptions: {\n    marketplace: MarketPlace;\n    subscription: string;\n    isDisabled: boolean;\n  }[];\n  isPrepaidOverQuota: boolean;\n  prepaidQuota: number;\n  isMarketplaceOverQuota: boolean;\n  marketplaceQuota: number;\n  onPrepaid: () => void;\n  onSubscription: (marketplace: MarketPlace, subscription: string) => void;\n  validated?: SelectProps[\"validated\"];\n};\nexport const BillingTiles: VoidFunctionComponent<BillingTilesProps> = ({\n  value,\n  hasPrepaid,\n  subscriptions,\n  isPrepaidOverQuota,\n  prepaidQuota,\n  isMarketplaceOverQuota,\n  marketplaceQuota,\n  onPrepaid,\n  onSubscription,\n  validated,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const marketplaces: { [key in MarketPlace]: string } = {\n    aws: t(\"billing.marketplace_aws\"),\n    azure: t(\"billing.marketplace_azure\"),\n    gcp: t(\"billing.marketplace_gcp\"),\n    rhm: t(\"billing.marketplace_rh\"),\n  };\n  return (\n    <>\n      <Flex\n        role=\"listbox\"\n        aria-label={t(\"select_billing\")}\n        direction={{ default: \"column\", md: \"row\" }}\n      >\n        {hasPrepaid && (\n          <Flex\n            flex={{ default: \"flex_1\" }}\n            direction={{ default: \"column\" }}\n            spaceItems={{ default: \"spaceItemsSm\" }}\n          >\n            <span className=\"pf-c-form__label\">\n              <span className=\"pf-c-form__label-text\">\n                {t(\"billing.prepaid\")}\n              </span>\n            </span>\n            <FlexItem flex={{ default: \"flex_1\" }}>\n              <Tile\n                className={\"pf-u-w-100\"}\n                title={t(\"billing.prepaid_option\")}\n                icon={tiles[\"rhm\"]}\n                isDisabled={isPrepaidOverQuota}\n                isStacked={true}\n                isSelected={value === \"prepaid\"}\n                onClick={onPrepaid}\n              >\n                &nbsp;\n              </Tile>\n            </FlexItem>\n            {isPrepaidOverQuota && prepaidQuota > 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.prepaid_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {isPrepaidOverQuota && prepaidQuota === 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.prepaid_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </Flex>\n        )}\n        {subscriptions.length > 0 && (\n          <Flex\n            flex={{ default: \"flex_1\" }}\n            direction={{ default: \"column\" }}\n            spaceItems={{ default: \"spaceItemsSm\" }}\n          >\n            {hasPrepaid && (\n              <span className=\"pf-c-form__label\">\n                <span className=\"pf-c-form__label-text\">\n                  {t(\"billing.marketplace\")}\n                </span>\n              </span>\n            )}\n            <Gallery hasGutter={true}>\n              {subscriptions.map(\n                ({ marketplace, subscription, isDisabled }) => (\n                  <GalleryItem key={`tile-${subscription}`}>\n                    <Tile\n                      className={\"pf-u-w-100\"}\n                      title={marketplaces[marketplace]}\n                      icon={tiles[marketplace]}\n                      isStacked={true}\n                      isSelected={value === subscription}\n                      isDisabled={isDisabled || isMarketplaceOverQuota}\n                      onClick={() => onSubscription(marketplace, subscription)}\n                    >\n                      {subscription}\n                    </Tile>\n                  </GalleryItem>\n                )\n              )}\n            </Gallery>\n            {isMarketplaceOverQuota && marketplaceQuota > 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.marketplace_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {isMarketplaceOverQuota && marketplaceQuota === 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.marketplace_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </Flex>\n        )}\n      </Flex>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-billing-option\"\n        name=\"billing\"\n        validated={validated}\n        onChange={(value) => {\n          if (value === \"prepaid\") {\n            onPrepaid();\n          } else {\n            const s = subscriptions.find((s) => s.marketplace === value);\n            if (s) {\n              onSubscription(s.marketplace, s.subscription);\n            }\n          }\n        }}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_billing\")}\n          />,\n          hasPrepaid ? (\n            <FormSelectOption\n              key={\"prepaid\"}\n              value={\"prepaid\"}\n              label={`prepaid`}\n            />\n          ) : null,\n          subscriptions.map(({ marketplace, subscription, isDisabled }) => {\n            return (\n              <FormSelectOption\n                key={`select-option-${subscription}`}\n                value={subscription}\n                label={`${marketplace} - ${subscription}`}\n                isDisabled={isDisabled}\n              />\n            );\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n\nconst tiles: { [id in MarketPlace]: JSX.Element } = {\n  aws: <AWSLogo />,\n  gcp: <GCPLogo />,\n  azure: <AzureLogo />,\n  rhm: <RedhatLogo />,\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoRedhat } from \"./images\";\n\nexport const RedhatLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoRedhat} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Skeleton,\n  Tile,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { CloudProvider } from \"ui-models/src/models/kafka\";\nimport { AWSLogo, AzureLogo, GCPLogo } from \"../../Logos\";\nimport type { CloudProviderInfo } from \"../types\";\n\nexport type CloudProvidersTilesProps = {\n  providers: (CloudProviderInfo & { isDisabled?: boolean })[];\n  value: CloudProvider | undefined;\n  onChange: (provider: CloudProvider) => void;\n  isDisabled: boolean;\n  validated?: SelectProps[\"validated\"];\n};\nexport const CloudProvidersTiles: VoidFunctionComponent<\n  CloudProvidersTilesProps\n> = ({ providers, value, onChange, isDisabled, validated }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      {providers.length === 0 && (\n        <Skeleton\n          className=\"pf-m-text-4xl\"\n          screenreaderText=\"Loading contents\"\n        />\n      )}\n      <div role=\"listbox\" aria-label={t(\"select_cloud_provider\")}>\n        <Flex\n          justifyContent={{ default: \"justifyContentSpaceBetween\" }}\n          spacer={{ default: \"spacerNone\" }}\n          spaceItems={{ default: \"spaceItemsXs\" }}\n        >\n          {providers.map(\n            ({ id, displayName, isDisabled: providerDisabled }) => (\n              <FlexItem grow={{ default: \"grow\" }} key={id}>\n                <Tile\n                  className={\"pf-u-w-100\"}\n                  title={displayName}\n                  icon={tiles[id]}\n                  isStacked={true}\n                  isSelected={value === id}\n                  isDisabled={providerDisabled || isDisabled}\n                  onClick={() => onChange(id)}\n                >\n                  {providerDisabled &&\n                    t(\"billing.provider_incompatible_with_current_billing\")}\n                  &nbsp;\n                </Tile>\n              </FlexItem>\n            )\n          )}\n        </Flex>\n      </div>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-cloud-provider-option\"\n        name=\"cloud-provider\"\n        isDisabled={isDisabled}\n        validated={validated}\n        onChange={(value) => onChange(value as CloudProvider)}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_cloud_provider\")}\n          />,\n          providers.map(({ id, displayName }, index) => {\n            return (\n              <FormSelectOption key={index} value={id} label={displayName} />\n            );\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n\nconst tiles: { [id in CloudProvider]: JSX.Element } = {\n  aws: <AWSLogo />,\n  gcp: <GCPLogo />,\n  azure: <AzureLogo />,\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { CloudRegion } from \"ui-models/src/models/kafka\";\nimport type { RegionInfo } from \"../types\";\n\nexport type CloudRegionProps = {\n  value: CloudRegion | undefined;\n  regions: RegionInfo[] | undefined;\n  isDisabled: boolean;\n  isSizeUnavailable: boolean;\n  onChange: (region: string) => void;\n  validated?: SelectProps[\"validated\"];\n  placeholderText: SelectProps[\"placeholderText\"];\n};\n\nexport const CloudRegionSelect: FunctionComponent<CloudRegionProps> = ({\n  value,\n  regions,\n  isDisabled,\n  isSizeUnavailable,\n  validated,\n  onChange,\n  placeholderText,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, value) => {\n    setIsOpen((prevState) => !prevState);\n    onChange(value as string);\n  };\n\n  const makeRegionOptions = regions?.map(\n    ({ id, displayName, isDisabled }, index) => (\n      <SelectOption\n        isDisabled={isDisabled}\n        disabled={isDisabled}\n        key={index}\n        value={id}\n        description={\n          isDisabled\n            ? t(\"create-kafka-instance:temporarily_unavailable\")\n            : undefined\n        }\n      >\n        {displayName}\n      </SelectOption>\n    )\n  );\n\n  return (\n    <Select\n      id=\"form-cloud-region-option\"\n      toggleId=\"form-cloud-region-option\"\n      name=\"form-cloud-region-option\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      validated={validated}\n      selections={value}\n      isOpen={isOpen}\n      isDisabled={isDisabled}\n      aria-describedby={\n        isSizeUnavailable\n          ? \"instance-size-unavailable\"\n          : \"form-cloud-region-option\"\n      }\n      placeholderText={placeholderText}\n    >\n      {makeRegionOptions}\n    </Select>\n  );\n};\n","import {\n  FormGroup,\n  ToggleGroup,\n  ToggleGroupItem,\n  Tooltip,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\n\nexport type FieldAZProps = {\n  value: AZ | undefined;\n  validity: \"valid\" | \"required\";\n  options: AZ | \"all\";\n  isDisabled: boolean;\n  onChange: (value: AZ) => void;\n};\nexport const FieldAZ: VoidFunctionComponent<FieldAZProps> = ({\n  value,\n  options,\n  validity,\n  isDisabled,\n  onChange,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const validated = validity !== \"valid\" ? \"error\" : \"default\";\n  const disableAZTooltip = options === \"all\" || isDisabled;\n  const enabledZone = options === \"multi\" ? \"multi\" : \"single\";\n  const trigger = disableAZTooltip ? \"manual\" : undefined;\n  return (\n    <FormGroup\n      label={t(\"availability_zones\")}\n      fieldId=\"availability-zones\"\n      validated={validated}\n      helperTextInvalid={t(\"common:required\")}\n      data-testid={\"az\"}\n    >\n      <ToggleGroup aria-label={t(\"availability_zone_selection\")}>\n        <Tooltip\n          content={t(\"availability_zones_tooltip_message\", {\n            enabledZone,\n          })}\n          trigger={trigger}\n        >\n          <ToggleGroupItem\n            text={t(\"az.single\")}\n            value={\"single\"}\n            isDisabled={isDisabled || options === \"multi\"}\n            buttonId=\"single\"\n            isSelected={value === \"single\"}\n            onChange={() => onChange(\"single\")}\n          />\n        </Tooltip>\n\n        <Tooltip\n          trigger={trigger}\n          content={t(\"availability_zones_tooltip_message\", {\n            enabledZone,\n          })}\n        >\n          <ToggleGroupItem\n            text={t(\"az.multi\")}\n            value=\"multi\"\n            buttonId=\"multi\"\n            isDisabled={isDisabled || options === \"single\"}\n            isSelected={value === \"multi\"}\n            onChange={() => onChange(\"multi\")}\n          />\n        </Tooltip>\n      </ToggleGroup>\n    </FormGroup>\n  );\n};\n","import { FormGroup } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { BillingHelpProps } from \"./BillingHelp\";\nimport { BillingHelp } from \"./BillingHelp\";\nimport type { BillingTilesProps } from \"./BillingTiles\";\nimport { BillingTiles } from \"./BillingTiles\";\n\nexport type FieldBillingTilesProps = {\n  isValid: boolean;\n  billingType: BillingHelpProps[\"type\"];\n  subscriptionOptionsHref: BillingHelpProps[\"subscriptionOptionsHref\"];\n} & Omit<BillingTilesProps, \"validated\">;\nexport const FieldBillingTiles: VoidFunctionComponent<\n  FieldBillingTilesProps\n> = ({\n  value,\n  hasPrepaid,\n  subscriptions,\n  isPrepaidOverQuota,\n  prepaidQuota,\n  isMarketplaceOverQuota,\n  marketplaceQuota,\n  onPrepaid,\n  onSubscription,\n  isValid,\n  billingType,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const validated = !isValid ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={\n        <>\n          {t(\"billing.field_label\")}{\" \"}\n          <BillingHelp\n            type={billingType}\n            subscriptionOptionsHref={subscriptionOptionsHref}\n          />\n        </>\n      }\n      fieldId=\"form-billing-option\"\n      validated={validated}\n      helperTextInvalid={\n        isPrepaidOverQuota || isMarketplaceOverQuota\n          ? \" \"\n          : t(\"common:required\")\n      }\n      isRequired\n    >\n      <BillingTiles\n        value={value}\n        hasPrepaid={hasPrepaid}\n        subscriptions={subscriptions}\n        isPrepaidOverQuota={isPrepaidOverQuota}\n        prepaidQuota={prepaidQuota}\n        isMarketplaceOverQuota={isMarketplaceOverQuota}\n        marketplaceQuota={marketplaceQuota}\n        onPrepaid={onPrepaid}\n        onSubscription={onSubscription}\n        validated={validated}\n      />\n    </FormGroup>\n  );\n};\n","import { FormGroup } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { CloudProvidersTilesProps } from \"./CloudProviderTiles\";\nimport { CloudProvidersTiles } from \"./CloudProviderTiles\";\n\nexport type FieldCloudProviderProps = {\n  isValid: boolean;\n} & Omit<CloudProvidersTilesProps, \"validated\">;\nexport const FieldCloudProvider: VoidFunctionComponent<\n  FieldCloudProviderProps\n> = ({ value, providers, onChange, isDisabled, isValid }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const validated = !isValid ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={t(\"cloud_provider\")}\n      fieldId=\"form-cloud-provider-option\"\n      validated={validated}\n      helperTextInvalid={t(\"common:required\")}\n      isRequired\n    >\n      <CloudProvidersTiles\n        providers={providers}\n        value={value}\n        onChange={onChange}\n        isDisabled={isDisabled}\n        validated={validated}\n      />\n    </FormGroup>\n  );\n};\n","import { FormGroup, HelperText, HelperTextItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { CloudRegionProps } from \"./CloudRegionsSelect\";\nimport { CloudRegionSelect } from \"./CloudRegionsSelect\";\n\nexport type FieldCloudRegionProps = {\n  validity: \"valid\" | \"region-unavailable\" | \"required\";\n} & Omit<CloudRegionProps, \"validated\" | \"placeholderText\">;\nexport const FieldCloudRegion: VoidFunctionComponent<FieldCloudRegionProps> = ({\n  value,\n  regions,\n  onChange,\n  isDisabled,\n  isSizeUnavailable,\n  validity,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const allRegionsUnavailable = regions\n    ? regions.every(({ isDisabled }) => isDisabled === true) ||\n      regions.length === 0\n    : true;\n\n  const disableControl =\n    isDisabled || allRegionsUnavailable || regions?.length === 0;\n\n  const someRegionsUnavailable =\n    !allRegionsUnavailable &&\n    regions?.some(({ isDisabled }) => isDisabled === true);\n\n  const validation =\n    validity !== \"valid\"\n      ? value !== undefined\n        ? \"error\"\n        : \"default\"\n      : \"default\";\n\n  const placeholder =\n    allRegionsUnavailable && regions\n      ? t(\"regions_temporarily_unavailable\")\n      : t(\"select_region\");\n\n  const helperTextInvalid = isDisabled ? undefined : validity ===\n    \"region-unavailable\" ? (\n    <HelperText className={\"pf-c-form__helper-text\"}>\n      <HelperTextItem variant=\"error\" hasIcon>\n        {t(\"form_errors.region_unavailable_message\")}\n      </HelperTextItem>\n    </HelperText>\n  ) : allRegionsUnavailable ? (\n    t(\"all_region_unavailable_helper_text\")\n  ) : (\n    t(\"common:required\")\n  );\n\n  return (\n    <FormGroup\n      data-testid=\"cloudRegion\"\n      label={t(\"cloud_region\")}\n      fieldId=\"form-cloud-region-option\"\n      isRequired\n      validated={validation}\n      helperText={\n        regions && (allRegionsUnavailable || someRegionsUnavailable) ? (\n          <HelperText className={\"pf-c-form__helper-text\"}>\n            <HelperTextItem\n              variant={someRegionsUnavailable ? \"warning\" : \"error\"}\n              hasIcon\n            >\n              {someRegionsUnavailable\n                ? t(\"some_region_unavailable_helper_text\")\n                : t(\"all_region_unavailable_helper_text\")}\n            </HelperTextItem>\n          </HelperText>\n        ) : undefined\n      }\n      helperTextInvalid={helperTextInvalid}\n    >\n      <CloudRegionSelect\n        value={value}\n        regions={regions}\n        onChange={onChange}\n        isDisabled={disableControl}\n        isSizeUnavailable={isSizeUnavailable}\n        validated={validation}\n        placeholderText={placeholder}\n      />\n    </FormGroup>\n  );\n};\n","import { FormGroup, TextInput } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type FieldInstanceNameProps = {\n  value: string;\n  validity: \"valid\" | \"required\" | \"taken\" | \"invalid\";\n  isDisabled: boolean;\n  onChange: (value: string) => void;\n};\nexport const FieldInstanceName: VoidFunctionComponent<\n  FieldInstanceNameProps\n> = ({ value, validity, isDisabled, onChange }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const validation = validity !== \"valid\" ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={t(\"instance_name\")}\n      helperText={t(\"create_instance_name_helper_text\")}\n      helperTextInvalid={\n        validity === \"taken\"\n          ? t(\"create_instance_name_helper_text_name_taken\", { name: value })\n          : validity === \"invalid\"\n          ? t(\"create_instance_name_helper_text\")\n          : t(\"common:required\")\n      }\n      isRequired\n      validated={validation}\n      fieldId=\"form-instance-name\"\n    >\n      <TextInput\n        id=\"form-instance-name\"\n        isRequired\n        validated={validation}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        autoFocus={true}\n        isDisabled={isDisabled}\n      />\n    </FormGroup>\n  );\n};\n","import {\n  Alert,\n  AlertVariant,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { ExternalLink } from \"@rhoas/app-services-ui-components\";\n\nexport const FieldSizeHelperText: VoidFunctionComponent<{\n  remainingQuota: number | undefined;\n  isPreview: boolean;\n  isUnavailable: boolean;\n  isError: boolean;\n}> = ({ remainingQuota, isPreview, isUnavailable, isError }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <HelperText className={\"pf-c-form__helper-text\"}>\n      {remainingQuota && (\n        <HelperTextItem>\n          {t(\"standard_kafka_streaming_unit\", {\n            count: remainingQuota,\n          })}\n        </HelperTextItem>\n      )}\n\n      {isUnavailable && (\n        <Alert\n          id=\"instance-size-unavailable\"\n          aria-live=\"polite\"\n          role={\"alert\"}\n          className=\"pf-u-mb-md pf-u-mt-lg\"\n          variant={isError ? \"danger\" : \"warning\"}\n          title={t(\"size_unavailable_title\")}\n          isInline\n        >\n          {t(\"size_unavailable_message\")}\n        </Alert>\n      )}\n      {isPreview && (\n        <Alert\n          aria-live=\"polite\"\n          role={\"alert\"}\n          className={`pf-u-mb-md ${isUnavailable ? \"\" : \"pf-u-mt-lg\"}`}\n          variant={AlertVariant.info}\n          title={t(\"size_preview_title\")}\n          isInline\n        >\n          <Trans\n            ns={\"create-kafka-instance\"}\n            i18nKey={\"size_preview_message\"}\n            components={[\n              <ExternalLink\n                href={\"https://access.redhat.com/articles/6473891\"}\n                testId={\"size-preview-support-link\"}\n                className={\"pf-u-ml-xs\"}\n              />,\n            ]}\n          />\n        </Alert>\n      )}\n    </HelperText>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const FieldSizeHelperTextOverQuota: VoidFunctionComponent<{\n  remainingQuota: number;\n  onClick: () => void;\n}> = ({ remainingQuota, onClick }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      <HelperText className={\"pf-c-form__helper-text\"}>\n        <HelperTextItem variant=\"error\" hasIcon>\n          {t(\"standard_kafka_streaming_unit\", {\n            count: remainingQuota,\n          })}\n        </HelperTextItem>\n      </HelperText>\n      <HelperText>\n        <HelperTextItem>\n          <Button\n            className=\"pf-c-form__helper-text\"\n            variant={ButtonVariant.link}\n            isInline\n            onClick={onClick}\n          >\n            {t(\"standard_kafka_size_description\")}\n          </Button>\n        </HelperTextItem>\n      </HelperText>\n    </>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const FieldSizeHelperTextTrial: VoidFunctionComponent<{\n  onClick: () => void;\n}> = ({ onClick }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      <HelperText className={\"pf-c-form__helper-text\"}>\n        <HelperTextItem>{t(\"trial_kafka_size_description\")}</HelperTextItem>\n      </HelperText>\n      <HelperText>\n        <HelperTextItem>\n          <Button\n            className=\"pf-c-form__helper-text\"\n            variant={ButtonVariant.link}\n            isInline\n            onClick={onClick}\n          >\n            {t(\"learn_about_sizes\")}\n          </Button>\n        </HelperTextItem>\n      </HelperText>\n    </>\n  );\n};\n","import type { SliderProps } from \"@patternfly/react-core\";\nimport { Grid, GridItem, Skeleton, Slider } from \"@patternfly/react-core\";\nimport {\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { Size } from \"ui-models/src/models/kafka\";\nimport { FieldSizeHelperText } from \"./FieldSizeHelperText\";\nimport { FieldSizeHelperTextOverQuota } from \"./FieldSizeHelperTextOverQuota\";\nimport { FieldSizeHelperTextTrial } from \"./FieldSizeHelperTextTrial\";\n\nexport type FieldSizeProps = {\n  value: number | undefined;\n  sizes: Size[] | undefined;\n  remainingQuota: number | undefined;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isError: boolean;\n  isLoadingError: boolean;\n  validity: \"valid\" | \"required\" | \"out-of-quota\" | \"developer\" | \"disabled\";\n  onChange: (size: Size) => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n};\nexport const FieldSize: VoidFunctionComponent<FieldSizeProps> = ({\n  value,\n  sizes,\n  remainingQuota,\n  isDisabled,\n  isLoading,\n  isError,\n  isLoadingError,\n  validity,\n  onChange,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const isRequired = validity !== \"developer\";\n\n  const helperTextTrial = (\n    <FieldSizeHelperTextTrial onClick={onLearnMoreAboutSizes} />\n  );\n\n  if (isLoading || isLoadingError) {\n    return (\n      <FormGroupWithPopover\n        labelHead={t(\"common:size\")}\n        fieldId=\"streaming-size\"\n        fieldLabel={t(\"common:size\")}\n        labelBody={t(\"size_help_content\")}\n        buttonAriaLabel={t(\"size_field_aria\")}\n        isRequired={isRequired}\n        helperText={\n          <Grid sm={6} lg={12} hasGutter data-testid={\"size-loading\"}>\n            <GridItem>\n              <Skeleton width={\"50%\"} fontSize={\"3xl\"} />\n            </GridItem>\n            <GridItem>\n              <Skeleton width={\"40%\"} fontSize={\"sm\"} />\n            </GridItem>\n          </Grid>\n        }\n        validated={isLoadingError ? \"error\" : \"default\"}\n        helperTextInvalid={t(\"sizes_error\")}\n      />\n    );\n  }\n\n  if (sizes === undefined) {\n    return (\n      <FormGroupWithPopover\n        labelHead={t(\"common:size\")}\n        fieldId=\"streaming-size\"\n        fieldLabel={t(\"common:size\")}\n        labelBody={t(\"size_help_content\")}\n        buttonAriaLabel={t(\"size_field_aria\")}\n        isRequired={isRequired}\n        helperText={\n          validity === \"developer\" ? helperTextTrial : t(\"sizes_missing\")\n        }\n      >\n        <div data-testid={\"size-slider\"} />\n      </FormGroupWithPopover>\n    );\n  }\n\n  const valueIndex =\n    validity !== \"developer\"\n      ? sizes.findIndex((size) => size.quota === value)\n      : -1;\n\n  const steps: SliderProps[\"customSteps\"] = sizes.map((s, index) => ({\n    value: index,\n    label: `${s.quota}`,\n  }));\n\n  const isUnavailable = sizes[valueIndex]?.isDisabled;\n\n  const helperText = (\n    <FieldSizeHelperText\n      remainingQuota={remainingQuota}\n      isPreview={sizes[valueIndex]?.status === \"preview\"}\n      isUnavailable={isUnavailable}\n      isError={isError}\n    />\n  );\n  const helperTextOverQuota = remainingQuota && (\n    <FieldSizeHelperTextOverQuota\n      remainingQuota={remainingQuota}\n      onClick={onLearnHowToAddStreamingUnits}\n    />\n  );\n\n  const handleChange = (index: number) => {\n    onChange(sizes[index]);\n  };\n\n  const validation =\n    remainingQuota &&\n    value &&\n    (validity !== \"valid\" || remainingQuota < value) &&\n    validity !== \"developer\" &&\n    isError\n      ? \"error\"\n      : \"default\";\n\n  return (\n    <FormGroupWithPopover\n      labelHead={t(\"common:size\")}\n      fieldId=\"streaming-size\"\n      fieldLabel={t(\"common:size\")}\n      labelBody={t(\"size_help_content\")}\n      buttonAriaLabel={t(\"size_field_aria\")}\n      isRequired={isRequired}\n      validated={validation}\n      helperText={validity !== \"developer\" ? helperText : helperTextTrial}\n      helperTextInvalid={\n        validity === \"out-of-quota\" ? helperTextOverQuota : helperText\n      }\n    >\n      <div className=\"pf-c-input-group pf-u-w-50\">\n        <Slider\n          id=\"streaming-size\"\n          data-testid={\"size-slider\"}\n          max={steps.length - 1}\n          value={valueIndex}\n          showTicks={true}\n          customSteps={steps}\n          className=\"pf-u-w-100\"\n          isDisabled={isDisabled || validity === \"developer\"}\n          onChange={handleChange}\n          aria-describedby={\n            isUnavailable ? \"instance-size-unavailable\" : \"streaming-size\"\n          }\n        />\n        <span className=\"pf-c-input-group__text pf-m-plain pf-u-text-nowrap\">\n          {t(\"streaming_unit\")}\n        </span>\n      </div>\n    </FormGroupWithPopover>\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type {\n  CreateDedicatedKafkaInstanceError,\n  CreateKafkaInstanceError,\n} from \"../types\";\n\nexport type FormAlertsProps = {\n  error:\n    | CreateKafkaInstanceError\n    | CreateDedicatedKafkaInstanceError\n    | \"form-invalid\"\n    | undefined;\n  onClickContactUS: () => void;\n};\n\nexport const FormAlerts: VoidFunctionComponent<FormAlertsProps> = ({\n  error,\n  onClickContactUS,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup aria-live=\"assertive\">\n      {(() => {\n        switch (error) {\n          case \"form-invalid\":\n          case \"name-taken\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.form_invalid\")}\n                isInline\n              />\n            );\n\n          case \"insufficient-quota\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.out_of_quota_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"form_errors.out_of_quota_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-contact-us\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickContactUS}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"developer-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.trial_unavailable_title\")}\n                isInline\n              >\n                {t(\"form_errors.trial_unavailable_message\")}\n              </Alert>\n            );\n          case \"region-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.region_unavailable_title\")}\n                isInline\n              >\n                {t(\"form_errors.region_unavailable_message\")}\n              </Alert>\n            );\n          case \"unknown\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.danger}\n                title={t(\"form_errors.unknown_error_title\")}\n                isInline\n              >\n                {t(\"form_errors.unknown_error_message\")}\n              </Alert>\n            );\n        }\n        return null;\n      })()}\n    </AlertGroup>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\n\nimport { ClockIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { MarketplaceSubscription } from \"ui-models/src/models/kafka\";\nimport type { BillingHelpProps } from \"./BillingHelp\";\nimport { BillingHelp } from \"./BillingHelp\";\n\nexport type InstanceInfoProps = {\n  isTrial: boolean;\n  onClickQuickStart: () => void;\n\n  trialDurationInHours: number | undefined;\n  ingress: number;\n  egress: number;\n  /**\n   * Max storage in GiB\n   */\n  storage: number;\n  maxPartitions: number;\n  connections: number;\n  /**\n   * Max connections/second\n   */\n  connectionRate: number;\n  /**\n   * Message size in MiB\n   */\n  messageSize: number;\n  streamingUnits: string | undefined;\n\n  billing:\n    | ({\n        value: \"prepaid\" | \"dedicated\" | MarketplaceSubscription;\n      } & BillingHelpProps)\n    | undefined;\n};\n\nexport const InstanceInfo: VoidFunctionComponent<InstanceInfoProps> = ({\n  isTrial,\n  trialDurationInHours,\n  ingress,\n  egress,\n  storage,\n  maxPartitions,\n  connections,\n  connectionRate,\n  messageSize,\n  onClickQuickStart,\n  streamingUnits,\n  billing,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <Stack hasGutter data-testid={\"instance-info\"}>\n      <StackItem>\n        <Card isFlat>\n          <CardTitle component=\"h2\">{t(\"instance_information\")}</CardTitle>\n          <CardBody>\n            <DescriptionList isCompact>\n              <DescriptionListGroup>\n                <Grid sm={6} lg={12} hasGutter>\n                  {!isTrial && (\n                    <GridItem data-testid={\"instance-size\"}>\n                      <DescriptionListTerm>\n                        {t(\"common:size\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"stream_unit_value\", { size: streamingUnits })}\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  {isTrial && (\n                    <GridItem>\n                      <DescriptionListTerm>\n                        {t(\"kafka:duration\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        <ClockIcon color=\"var(--pf-global--info-color--100)\" />{\" \"}\n                        {t(\"duration_value\", {\n                          value: trialDurationInHours,\n                        })}\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:ingress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"ingress_value\", {\n                        value: ingress,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:egress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"egress_value\", {\n                        value: egress,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:storage\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"storage_value\", {\n                        value: storage,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:partitions\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"partitions_value\", {\n                        value: maxPartitions,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:client_connections\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"client_connections_value\", {\n                        value: connections,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:connection_rate\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"connection_rate_value\", {\n                        value: connectionRate,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:message_size\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {t(\"message_size_value\", {\n                        value: messageSize,\n                      })}\n                    </DescriptionListDescription>\n                  </GridItem>\n                  {billing && (\n                    <GridItem>\n                      <DescriptionListTerm>\n                        {t(\"billing.field_label\")}&nbsp;\n                        <BillingHelp\n                          type={billing.type}\n                          subscriptionOptionsHref={\n                            billing.subscriptionOptionsHref\n                          }\n                        />\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {(() => {\n                          if (billing.value === \"prepaid\") {\n                            return t(\"billing.prepaid_option\");\n                          } else if (billing.value === \"dedicated\") {\n                            return t(\"billing.dedicated_option\");\n                          }\n                          switch (billing.value.marketplace) {\n                            case \"aws\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_aws\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                            case \"gcp\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_gcp\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                            case \"azure\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_azure\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                            case \"rhm\":\n                              return (\n                                <>\n                                  {t(\"billing.marketplace_rh\")}\n                                  <br />\n                                  {billing.value.subscription}\n                                </>\n                              );\n                          }\n                        })()}\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                </Grid>\n              </DescriptionListGroup>\n            </DescriptionList>\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem>\n        <Card isFlat isCompact>\n          <CardTitle component=\"h2\">{t(\"quick_start_guide_title\")}</CardTitle>\n          <CardBody>\n            <Button\n              isSmall\n              isInline\n              variant={ButtonVariant.link}\n              onClick={onClickQuickStart}\n            >\n              {t(\"quick_start_guide_message_exp\")}\n            </Button>\n          </CardBody>\n        </Card>\n      </StackItem>\n    </Stack>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Grid,\n  GridItem,\n  Skeleton,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\nimport { ClockIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type InstanceInfoSkeletonProps = {\n  isTrial: boolean;\n  onClickQuickStart: () => void;\n};\n\nexport const InstanceInfoSkeleton: VoidFunctionComponent<\n  InstanceInfoSkeletonProps\n> = ({ isTrial, onClickQuickStart }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <Stack hasGutter data-testid={\"instance-info\"}>\n      <StackItem>\n        <Card isFlat>\n          <CardTitle component=\"h2\">{t(\"instance_information\")}</CardTitle>\n          <CardBody>\n            <DescriptionList isCompact>\n              <DescriptionListGroup>\n                <Grid sm={6} lg={12} hasGutter>\n                  {!isTrial && (\n                    <GridItem data-testid={\"instance-size\"}>\n                      <DescriptionListTerm>\n                        {t(\"common:size\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        <Skeleton\n                          width=\"35%\"\n                          screenreaderText=\"Loading contents\"\n                        />\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  {isTrial && (\n                    <GridItem>\n                      <DescriptionListTerm>\n                        {t(\"kafka:duration\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        <ClockIcon color=\"var(--pf-global--info-color--100)\" />{\" \"}\n                        <Skeleton\n                          width=\"35%\"\n                          screenreaderText=\"Loading contents\"\n                        />\n                      </DescriptionListDescription>\n                    </GridItem>\n                  )}\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:ingress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"75%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:egress\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"66%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:storage\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"66%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:partitions\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"50%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:client_connections\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"33%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:connection_rate\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"25%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                  <GridItem>\n                    <DescriptionListTerm>\n                      {t(\"kafka:message_size\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <Skeleton width=\"55%\" />\n                    </DescriptionListDescription>\n                  </GridItem>\n                </Grid>\n              </DescriptionListGroup>\n            </DescriptionList>\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem>\n        <Card isFlat isCompact>\n          <CardTitle component=\"h2\">{t(\"quick_start_guide_title\")}</CardTitle>\n          <CardBody>\n            <Button\n              isSmall\n              isInline\n              variant={ButtonVariant.link}\n              onClick={onClickQuickStart}\n            >\n              {t(\"quick_start_guide_message_exp\")}\n            </Button>\n          </CardBody>\n        </Card>\n      </StackItem>\n    </Stack>\n  );\n};\n","import { Alert, AlertVariant, Spinner } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ModalAlertsLoading: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <Alert\n      role={\"alert\"}\n      className=\"pf-u-mb-md\"\n      variant={AlertVariant.info}\n      title={t(\"checking_instance_title\")}\n      isInline\n      customIcon={\n        <Spinner size=\"md\" aria-valuetext={t(\"checking_instance_message\")} />\n      }\n    />\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { StandardPlanAvailability } from \"../types\";\n\nexport type ModalAlertsStandardPlanProps = {\n  instanceAvailability: StandardPlanAvailability;\n  onClickContactUs: () => void;\n};\n\nexport const ModalAlertsStandardPlan: VoidFunctionComponent<\n  ModalAlertsStandardPlanProps\n> = ({ instanceAvailability, onClickContactUs }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup>\n      {(() => {\n        switch (instanceAvailability) {\n          case \"out-of-quota\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.out_of_quota_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"modal_alerts.out_of_quota_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-contact-us\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickContactUs}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"regions-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.instance_unavailable_title\")}\n                isInline\n              >\n                {t(\"modal_alerts.regions_unavailable_message\")}\n              </Alert>\n            );\n          case \"instance-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.instance_unavailable_title\")}\n                isInline\n              >\n                {t(\"modal_alerts.instance_unavailable_message\")}\n              </Alert>\n            );\n          case \"available\":\n            return null;\n        }\n      })()}\n    </AlertGroup>\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DedicatedPlanAvailability } from \"../types\";\n\nexport type ModalAlertsDedicatedPlanProps = {\n  instanceAvailability: DedicatedPlanAvailability;\n  onClickContactUs: () => void;\n};\n\nexport const ModalAlertsDedicatedPlan: VoidFunctionComponent<\n  ModalAlertsDedicatedPlanProps\n> = ({ instanceAvailability, onClickContactUs }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup>\n      {(() => {\n        switch (instanceAvailability) {\n          case \"out-of-quota\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.out_of_quota_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"modal_alerts.out_of_quota_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-contact-us\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickContactUs}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"clusters-unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.cluster_unavailable_title\")}\n                isInline\n              >\n                {t(\"modal_alerts.cluster_unavailable_message\")}\n              </Alert>\n            );\n          case \"available\":\n            return null;\n        }\n      })()}\n    </AlertGroup>\n  );\n};\n","import { Alert, AlertVariant } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ModalAlertsSystemUnavailable: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <Alert\n      role={\"alert\"}\n      className=\"pf-u-mb-md\"\n      variant={AlertVariant.warning}\n      title={t(\"modal_alerts.system_unavailable_title\")}\n      isInline\n    >\n      {t(\"modal_alerts.system_unavailable_message\")}\n    </Alert>\n  );\n};\n","import {\n  Alert,\n  AlertGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  Spinner,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { TrialPlanAvailability } from \"../types\";\n\nexport type ModalAlertsTrialPlanProps = {\n  instanceAvailability: TrialPlanAvailability;\n  trialDurationInHours: number | undefined;\n  onClickKafkaOverview: () => void;\n};\n\nexport const ModalAlertsTrialPlan: VoidFunctionComponent<\n  ModalAlertsTrialPlanProps\n> = ({ instanceAvailability, trialDurationInHours, onClickKafkaOverview }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  return (\n    <AlertGroup>\n      {(() => {\n        switch (instanceAvailability) {\n          case \"unavailable\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.trial_unavailable_title\")}\n                isInline\n              >\n                {t(\"modal_alerts.trial_unavailable_message\")}\n              </Alert>\n            );\n          case \"used\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.warning}\n                title={t(\"modal_alerts.trial_used_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey={t(\"modal_alerts.trial_used_message\")}\n                  components={[\n                    <Button\n                      key=\"btn-overview\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickKafkaOverview}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Alert>\n            );\n          case \"available\":\n            return (\n              <Alert\n                role={\"alert\"}\n                className=\"pf-u-mb-md\"\n                variant={AlertVariant.info}\n                title={t(\"modal_alerts.trial_available_title\")}\n                isInline\n              >\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey=\"modal_alerts.trial_available_message\"\n                  components={[\n                    <Button\n                      key=\"btn-pricing-purchasing\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickKafkaOverview}\n                      isInline\n                    />,\n                    trialDurationInHours ? <></> : <Spinner size={\"sm\"} />,\n                  ]}\n                  values={{\n                    time: trialDurationInHours,\n                  }}\n                />\n              </Alert>\n            );\n        }\n      })()}\n    </AlertGroup>\n  );\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { FieldSizeProps } from \"./components\";\nimport {\n  FieldAZ,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldInstanceName,\n  FieldSize,\n  InstanceInfoSkeleton,\n} from \"./components\";\n\nexport type LoadingFormProps = {\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n};\n\nexport const LoadingForm: VoidFunctionComponent<LoadingFormProps> = ({\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n}) => {\n  return (\n    <>\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <Form onSubmit={() => false}>\n            <DisabledFieldInstanceName />\n            <DisabledFieldCloudProvider />\n            <DisabledFieldCloudRegion />\n            <DisabledFieldAZ />\n            <DisabledFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          <InstanceInfoSkeleton\n            isTrial={false}\n            onClickQuickStart={onClickQuickStart}\n          />\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const DisabledFieldInstanceName: VoidFunctionComponent = () => {\n  return (\n    <FieldInstanceName\n      value={\"\"}\n      validity={\"valid\"}\n      isDisabled={true}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldCloudProvider: VoidFunctionComponent = () => {\n  return (\n    <FieldCloudProvider\n      isValid={true}\n      providers={[]}\n      value={undefined}\n      isDisabled={true}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldCloudRegion: VoidFunctionComponent = () => {\n  return (\n    <FieldCloudRegion\n      validity={\"valid\"}\n      regions={undefined}\n      value={undefined}\n      isDisabled={true}\n      isSizeUnavailable={false}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldAZ: VoidFunctionComponent = () => {\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={true}\n      onChange={() => false}\n    />\n  );\n};\n\nexport const DisabledFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  return (\n    <FieldSize\n      value={1}\n      sizes={undefined}\n      //TODO remainingQuota={capabilities.remainingQuota || 0}\n      remainingQuota={0}\n      isDisabled={true}\n      isLoading={true}\n      isError={false}\n      isLoadingError={false}\n      validity={\"disabled\"}\n      onChange={() => false}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n","import { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport { MarketplaceSubscription, Size } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateDedicatedKafkaFormData,\n  CreateDedicatedKafkaInstanceError,\n  DedicatedPlanInitializationData,\n  StandardSizes,\n} from \"../types\";\n\nexport type DedicatedPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: DedicatedPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    cluster?: DedicatedCluster;\n    size?: Size;\n    billing?: \"prepaid\";\n  };\n\n  sizes: StandardSizes | undefined;\n\n  creationError: CreateDedicatedKafkaInstanceError | undefined;\n};\n\nexport const DedicatedPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5SwC4EMB2E0CcIAUAbTAWTQGMALASwzADoA3MHagMwE8BBRta4gEb9qKDgGJEoAA4B7WCOoyMkkAA9EAZgAcARnoBOfQAYdOrQHYArABYNAJnMAaEB0Q6j++reuXL5k3bWWpY65gC+Yc6omNh4RKQUNHT05Eps1FAArqwYUPTRKJmwYuQ4YGgoYCqy8iiKykhqmjp29OYW5hpGQYG+zq4Ilvoa9KZGlh4a5joAbPqBEVHoWLgExBhkVLQMqRjpWTl5bDI4ALZMaITUEGLpYIQQAJIYvFcQ1XIKSirqCKGG9Ds+ksU1m5n0M2s1n0-UQdgmllGdjsOj8QJm7ihixA0RWcXWmySOzSGWytCOJ3Or2uYlgmQEpxEH1q9R+bmMnnMnRR9n8di0RjssIQ-MFo2sgQ81lCGjm2NxsTWCS2yV2+zJuXoxzO+TQjHJJTKFTAAGVMuRyHB4I0al8GqBfoEZlp6FpISYdBp7PprFZhaK9JDAuDproQfLlor4htEtsUiSDuStZTdfrcobypUAKI4HAnZl2tkinn0WVTFFQrS+mb+jEzehzMz84btazjCMxVbRwlxtWkw7Js63aj3J4vS7XAt1b6NR0+etaWXzPmQmsuOGmRGWfmWRchbctGYdvFKmMq4l7ftJu4PWD0DBoU4ManYSoSG2faf2poIIL15GmDo+iLkBdhGOYa4DLMUKjKCljOkYbrDFox5RgSsaqgmGpHCOt73o+YAZsaU6srObj2F45gSn4UIaDY7QaMKMouohVgzNuHhgRoOioV26HnvGl6JpqN4QHeD5PmIElgAAwpQmAwCRM4OuRrS+tRVG2PRi5MexrSojM9iIW2VgSrx+LKkSgnqgOol3lIeb6hALAXG8xrvtIn6kSpgxAm00IosiEEzDMTjriKHj1hMEIoqE1iGeYdjmaePaYUJ2FarhYn0A5MhOSwRGVEp36-J6alUfCml0b6Onhci8UGJxnoSuBGj6Ml3YYReNnXll9mOdcBW5flOByQpVQfiyyk-mVlEabR2mMXVUr0EYgo+qGQHtJYHX8VZfbCTho53mUUD1K51zucVRYHl4hg6EEPisdYTHwkYgLDNKRjsSF0I7ZEOKRnxlm9lhtl9fQp31IVE2eVNJWqXNlULTVS1QXR5iAqidgzCYApui0u0g2lPUiRDUNKGIw2DaN8m5LDIC2l+RazepyNaajTFdJ4OM8hBnRejxAMKsDZ77WDvXHZDYBnZTFMYGN9PXWRfwUWzNEcwxTEGaWvgWA9Gg+P41hE2LoPpeDUvyAAXs+E6voRys+b6gbcW7czQu4tUDA44KrZCsogfyXqm6l3VXmTVvULb9CEDIaAQAaEBKAwtCMDIADWDAixZZskxHR14TbDBxwn5IIGnMjkBU9QANpGAAuk7P6gvQNi6HY2gPVCwr2HRbS6PoVG7lYQyh111kF5lUcx6XifpiweY4DlxAoNq5w5ylE8HRldn5NHJfx-PUAVy8Vc10o9dN5NhYq9uLqBMiwEWBKneWL3vKrSEiHDOBILDOPASO9LZFwPjDZujpQq6wAuxYwoEpj+n-qMT0254KG3ig9QB4sLaS1AbbKmA1nK03GhAtwi4sYeisPMQw9hay4wML6RKhhvrgiFksTsucw6T0OtPPBhF5aK0UjfZmKtcYuh9GBQwGIUS1kNgYT6Ewfqd26Fg82pNC7ZWLrSA+giGZM28j+KiLopjbkhPrcCuhaweGgT4Ux-hZj-XYSeTqQCJaRz4WIIQhAri5F0aQ388E26NnYuCZcEEXp1VxpjAmVYqKsOBEeYWQNOHbzcRou8XifF5BfFdYRBjfjbhGFoAUZjZjLj8L3YpmM1pWHCZVGYONVH5x4XvTJSYlCEA4GaAQsBSjUCkF+YosB7hgHICgbpvTWADIMfo6apU1rWDaO6EKa0goNMqfoPQ-gbC4x9MBQUGgmnhxaRDNpmoHJgCkHwCAXAsATL6dMpQQyRljPuVMkRcNb4+UPIiYpQI9y7ngsBYU3hFlrU9GYjwIRwhJI4VvVxOD3HZTOXkC5Vzri3IgG8-pgzaQvJQPgMo6L3h5LmW4IwUxXS7i9L4KwswtAgr7m3FEQxEq6EhEc7hu9Tn8CyQQvKNM-GkoRqres3FURxPsMiIEvdAUD0XIhHG8VEKOMBnClx2D1G8LEmIZOyQCjZ2SfCzVU87L+NmOMNo7hxjlgaYbd+kT+6aWCG-XcSrOXAKTinfI6BKg+vVXtNRBd-H8hxq6aUxtfQmCkf6WU9YWhgUqiETEEQAYYBkM5a0yAjUarjMwVgnAeB8EEMIUQ-iQjhtCm1WUEofTjGFFYAw3oQj2p9NRTleUWAAEVMgyHQP4gUIxOLQh8FoX2DLwoJtLI9cFWg63TESU4tCxNU4YFxJaAAqg+Xg-A0ACEIHoryZKEBcnep0NtwQuTSIdT7ClrpQoonmC0XQa1F1qucYG5I8tYBbr1MWvdB7-FckWdCYpD1+RujHTCOqVZSwB3GMiRcwxZgerSf6wod5MhrvpIyFAlQSWfI+TNRCpY2pVhCI+jmwohg8zilRA2Y7fSocRXkAoRR8g4ZEPh-x84DBmGlPjLko8IkDAXatLoi54Sd3hPBZjWq2NZsZkekVsGvTAR8C0ICVHwoTBdKYUKLbkSsQhHJ01KY0723NeCRZnpNkmFCqEMdsaUSrWYd0LkgcTOwo-SurltkUwvis8BUY4EMQ-3cA9G9cJcYjFCmtYIQRhhzEOd55dedjm7xTLAPU5IQ0oIbBYDw4x5wojCj7Kw+lZScV8PCT0pmWlZb1JAENCUDDhOs8CYI-pwSIgabFHGHtMGpdFlwz1IlKRWf8LBOzYJHNCmWl0Nura51uu+vV7lUtpL0DAKcAZAxCP5MQEw0YhS2xoJqhOqCiUh3OmleMCEKWl0jdSSx7V4kCL0As28c1asKoa2qlrSd4J6zdG+h0MEXoTbDZSQirVe8tuBeFSzKiDYfT0UMqYkETFNkg4Mu0aY4xFxQ6ezDk1JzNsfZyUVJHKtDYjDavMKTc6vSdyYtd-2Y6jNDEMutkB2VpLmpI+rKqi0mK+E8AbX0QJWXGCStD41Qbyd4WpkQi6Dt-HaHrMubiHmTJukghuaEXhdzPo8BCFbvPcHZRVy5L7k4affJsICbQSrDBAiHlFkUXRFluk7nReYY7nQwpJwr5pG3leEJcojg7x6Kv+yCBYEEtWuT+gep4UdpupEW-l7msPfP+oCqIYLl0wuUaA9vdYta8xDJei6EYy3SKToy3OlTw98MixTBdKFAWLQbBlTK+RO9gR+NfW4vFFCOfP0Zfz9LWWGBPvjm+w7maExkG8lCCCQUtimLSkRPSl3zokNDZD7n6fVum9z7V0BxbDnBQNOdEBSEXMh8CahO4MfzoG-pNnzM5TLMhd-Yi6cyTrgR6CygoiJ7BAhQhRf5vb7wxyt4a7tANidD6bDwPrzY+wOYNiBCc4hTNiPbvppajZoZ7zFyfYQCAbL6lQUQgiGygFuztDwjdYQjiZQiigZ5vqbyn5+bn7wEMCJzZb7rNbUGIAdBeC6DcRVheiSGYFwjAh6DAgmCKJWDaA+CwFkEHz0AADufAdQuQAAYicD2n2mgD9q0HQVMLyNMDjAguFDSnoOMF7L-KoQApPr5mNt-uQZ2jgCYf2qIarBYZDgwZ6EwZ7l0HeozoqkEBYhPiflPrwY3vwVfgEZspyPZohuxN6HIQgBJmAdIdtA5tCMHkQc9rDqahDOQYvPmAEbNJYdyFyIeHYQMM2qtG2GVDaozhoZUVoXPLlgERBLFtoPfAKFCEMCJs0MMG0IlNuCGIuJ-u4elokV4QfMXktl6A0TYQlP6D4DZkBH3uBMPKqtwQkZ4XASimrsRLUdoI1J0IZBSn4HAuEZIf5C1O4EMJ3GwqUaToruHsirykmOmiaPivUAAEpgAACOmQ1AZQBGSm7eKs+WEw6+OuVe4RChro1mI6iE0a3RUsFxHSXS9IkyOK9Qd4ducJsyKmKOFiEq0wPQNglSwQowwQ0EYE-GcR3xoeZ+SRBJGAnS2Kjya6KRMeIqkWmMf4-IwOdqD0vcGJ0IkObq7Q4wXBOapxpBPK3i7S-JRJPSDygyA6q+tJfg9JY6jJ9hFUWMkIoQDEDSnJJxHhGp+JAJ5yRK1ymKgpgy22u2ZaARFgIw8IxgGmFKDgoQjKoQq0AQ9qjmwIeJeEFxaK7pdyxJ+pZJHGep7yv+CJ3yfIXgtmfeW0Y6l2iAb+Yq7QAo2y7g8IcZ-xWprplySZWKKZmZTyOUbp9uopRYzCroHgi4i4dKesIKtg6egoxSJSbU0wNZGSLpqK7ZNyyZGZpJTyA6RugZ3Q386+A+v4qIQ6r8hsVZvIU59AKK5qpgbcIZ0wqJUKsqa0bQPo7EFiEoKGixJBr2ZqfpIGgBZe3siAhgxizoY+-Ib+xSX+-i9Cam5GmmPo1UjKe+iGypYEVYJgnK2WzAlJf+Ks-yUUmyJp9Bl5saQwDYJgTCa0Y+boRyIa0S8U56NaQIZ2ORrQwwaR3oNewEz5EQQAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as DedicatedPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./DedicatedPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as DedicatedPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"clusterChange\"; cluster: DedicatedCluster }\n          | { type: \"sizeChange\"; size: Size }\n          | {\n              type: \"selectSubscription\";\n              subscription: MarketplaceSubscription;\n            }\n          | { type: \"selectPrepaid\" }\n          | { type: \"billingChange\" }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateDedicatedKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: StandardSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"dedicatedPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isOverQuota\",\n              target: \"overQuota\",\n            },\n            {\n              cond: \"isClusterUnavailable\",\n              target: \"clusterUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        overQuota: {\n          tags: \"blocked\",\n        },\n        clusterUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitted: {\n                  entry: \"triggerSubmit\",\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitted\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  tags: \"creatable\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                cluster: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"clusterIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"clusterInvalid\",\n                    },\n                    valid: {\n                      tags: \"clusterValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    clusterChange: {\n                      actions: \"setCluster\",\n                      cond: \"didClusterChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noCluster\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          cond: \"sizeIsDisabled\",\n                          target: \"disabled\",\n                        },\n                        {\n                          cond: \"billingRequiredButNotSelected\",\n                          target: \"waitingForQuota\",\n                        },\n                        {\n                          cond: \"sizeIsOverQuota\",\n                          target: \"overQuota\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    disabled: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeDisabled\",\n                    },\n                    waitingForQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeWaitingForQuota\",\n                    },\n                    overQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeOverQuota\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    clusterChange: {\n                      target: \".validate\",\n                    },\n                    sizeChange: {\n                      actions: \"setSize\",\n                      cond: \"didSizeChange\",\n                      target: \".validate\",\n                    },\n                    billingChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n                billing: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          target: \"prepaidOnly\",\n                        },\n                      ],\n                    },\n                    prepaidOnly: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\"],\n                      entry: \"setBillingToPrepaid\",\n                      type: \"final\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#dedicatedPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              cluster: context.capabilities.defaultCluster,\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setCluster: assign((context, { cluster }) => {\n          return {\n            form: {\n              cluster,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSize: assign((context, { size }) => ({\n          form: {\n            ...context.form,\n            size,\n          },\n        })),\n        setSizes: assign((context, event) => {\n          const sizes = event.data;\n          const smallestSize = sizes.sort((a, b) => a.quota - b.quota)[0];\n          return {\n            sizes,\n            form: {\n              ...context.form,\n              size: smallestSize,\n            },\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => {\n          return {\n            creationError: error,\n          };\n        }),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form>;\n          const data: CreateDedicatedKafkaFormData = {\n            plan: \"dedicated\",\n            name: form.name,\n            cluster: form.cluster,\n            sizeId: form.size.id,\n            billing: \"dedicated\",\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n        setBillingToPrepaid: assign((context) => {\n          const form = { ...context.form };\n          form.billing = \"prepaid\";\n          return { form };\n        }),\n      },\n      guards: {\n        isOverQuota: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"out-of-quota\",\n        isClusterUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"clusters-unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        clusterIsValid: ({ form, capabilities }) => {\n          const selectedCluster = capabilities?.availableClusters.find(\n            (p) => p.id === form.cluster?.id\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableClusters || []).length > 0 &&\n            // must have selected a provider\n            selectedCluster !== undefined\n          );\n        },\n        noCluster: ({ form }) => form.cluster === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) => sizes !== undefined && sizes.length === 0,\n        sizeIsDisabled: ({ form, capabilities }) => {\n          if (capabilities === undefined) return true;\n          return form.size?.isDisabled === true;\n        },\n        billingRequiredButNotSelected: ({ form }, _, meta) => {\n          if (meta.state.hasTag(\"noBilling\")) {\n            return false;\n          }\n          return form.billing === undefined;\n        },\n        sizeIsOverQuota: ({ form, capabilities }) => {\n          if (capabilities === undefined || !form.size) return true;\n          const availableQuota = capabilities.remainingDedicatedQuota;\n          if (!availableQuota) return true;\n          return form.size.quota > availableQuota;\n        },\n        didClusterChange: (context, event) =>\n          context.form.cluster !== event.cluster,\n        didSizeChange: (context, event) =>\n          context.form.size?.id !== event.size.id,\n      },\n    }\n  );\n","import { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport { assign, createMachine, EventFrom, forwardTo } from \"xstate\";\nimport type {\n  CreateDedicatedKafkaFormData,\n  CreateDedicatedKafkaInstanceError,\n  DedicatedPlanInitializationData,\n  DedicatedSizes,\n} from \"../types\";\nimport { DedicatedClustersInfo } from \"../types\";\nimport {\n  DedicatedPlanMachine,\n  DedicatedPlanMachineContext,\n} from \"./DedicatedPlanMachine\";\n\ntype Quota = Pick<\n  DedicatedPlanInitializationData,\n  \"plan\" | \"remainingDedicatedQuota\" | \"instanceAvailability\"\n>;\n\nexport type CreateDedicatedKafkaInstanceMachineContext = {\n  quota: Quota | undefined;\n  clusters: DedicatedClustersInfo | undefined;\n  defaultCluster: DedicatedCluster | undefined;\n  capabilities: DedicatedPlanInitializationData | undefined;\n};\n\nconst CreateDedicatedKafkaInstanceMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMBOYCGAXMBpDAZgNYYCSAdrFhucmAHQA2A9hhAJblT0COArs2r1kACzDIinKAAIqNCBlQRp-QRgDEYVKmap6AB0bYCugLbD02PIRIU5tBizZTeAoaPGSus6uQVKVNwwETgA3ZmRsdmZyAG0ABgBdRFB9Zlh2LGjyFJAAD0QAFniAJnp4gGYAdkKATgAOeqr4qvrCgFYAGhAAT0QANir++n769tqq2sKARhKKjsKAX0XutEwcfGIySl86JlYOLlc1YTEJKR95RWVVanV7fxug6QxQjHYjACNGMFy0jKyMVyBQQxTKlRqDSaLTaXV6iHG8XoVXahX6UyqJVqJX6-WWq0sGxs23seych24twwp08Fwe10CanUzD4WGkzAIlz8DKpf3SmWywKKpXK1TqjWarQ63T6CHa8UK9Hqcw6JUK6palXxIDWVk2th2NDJBxcVJp5289ICVPU5GYXMejOoLzeHww31+SBA-wFQK9ILBoshEph0vhoPaw2hFRKasKbQa0yWKx1hOsWzsu0cJqOZqtEHUfIBgv9iCTU2RkZj03RYsjMoGyvo0yG40KJSq0wq02m9W1uqJGcNDn2zlzQXoEDAoTALH0WkLXp9gJypYQ5cVKP61drNXr4faFSRJVmdUmasjvf7af1JKzo4px3cZy8MinM7nWhd7y+H0yPU0bRdAMIwsBMVBzAHdMDVJbMx0pCcPAtN9p1nZh51Qb83U+P8sB6EJyHCSIVwSZIl35FchQQWpanaeh4y7JN5gqbFZgbOU1WRE96m3Bp+lRKoKmvdZoLvI04MfM0kNfaR3zQjCsN-Rh-3UOTP0wvhYEgItfVXUAQRouiGO7QpmNYkp2NMqolXqWZcSPCpRn6NFhL1YlM3Eh9TUQl8LjU9Cv1eH93VwgD-IUoLsJ+HTKLXQz6NskyzJPCzwwqdppnoWj4niaZ2kPepaiTaZXMHGD73JFwCDALBRAufQdFCdgp1QWB1Aa5gmpa2AXj8aR0CgbIesir5ovI4s-X0staNqegjzGcZ+hKHjeyqdj2jGcplu4moFSqKpStEjyR0qo5qtqkR6sa5qtDarQdD0QxjDMCwRNvY7jXg+hzrq7wOq626CKIqIYlImKSym9cMRsiY0RmaYFXiOFZUKfa5rqRy5mmWp4kGdpDve4dPsfH7Lr+67uvainbvZTCBqG6Q+HIEb3TG1IKIh-Jpsjeh2k7XHOw7QqWnY0Z6mbapakGNVqgR-GUygwnYK8rhVJiBg5BwV63KHZXTqgcHJq5hASlROj+lKCp6kqdUVvYq3Mr3ds0UaPLZgJ9yiY13xHSe8h6Gan57leT12YmvTjaxbd6NM+NDIVdLCkskUFmxyZt2cwYPd1+982kP36FgV4pHUKCAGU+GQOhYHgcbdKoxOjKR0p6nmYXlvt1Fyn6Lt1W7E9Jkc7Pys8vOC6LprVaggBRIDUENiOQSjioY7b+PTNRe2a152NbLy03M7y4exJHcKvwLwOwGDmcF6orFWl5i2Nt7toEYqUWpayrt5SW+z4ls4+H0GBn0wuPYuU80wVyrnAWuYd65rkbvRBUtQ6x9zaKLeMO8WhDB7PEKEtRAFe0nKhdS+cjD+wniXGec9b5rnvuLSMSNErxhmJUUWCMsrKmWngsEuJ5YpjtFOWBqY3qez1jmBCJxpJ0h9jyIItDIYI1SrKSM4tW6dmVB0TsaISoKxvGIiqEinzUnzAo42zRxYojmD3FEtk+bTFFkMZskYcS9mfiwwh4ivpmhAWYkEswGg2RwSxJosxSjrU4tjAePcEY8SKp4wx3ifK0m8CAxSIVlJ4T8QMfic1lrFVaMqeYDjwztjojxHhsYOxW1ssmAkoic6eX1sY7JCBWjsQ7LNKWjRKiLRxmieW9SdYjxOkY0mV1Oo3Vaq0msCoY7FCGOlWMsxkYIkxMiHh7RYyMPjEJPRDSRnExcJYCAso4GxUhrGQY5QMpjCSpedaExkRND5jorEFQ9lDLKifI5XBWmb3DC2TKlRGLVCxBeDoCTR49CoGAUwjNmaulGqHb0HMjYgkciiLK+UUFWRxt2VZbT1mt1GK0Fo-EOx4n2cMn53srgBAvhANmqLw53yaIqfi4xsQdnyu2d+aVqjONbmna2OJuxQpHGPchhdwEGzrhc42MZBXYwmD3CE-F+j21jCMZy8Ytxdlom0CVewpU0FacteUIwcXcpRKiOY7FsYrzBdbeMhUWJt2NcAkhAVQHSsvuaxos19rzUxelFsyiBjdhGC2UYLY4k9l0V8o6RC0lgMnnK85nMMVVPKJo2GbiirsOsrMd1uU1SWzqSImlQDiEfh9WQs18qs2IGWrk4N-9Q0ZUxJZJoSolWVBylYwqnrhDMFMIYGqKLlzNoQNUf+SomFoP2p2Ht1lcZ5Roj2IW4rqXfKAa0o87EaI3JyhtQS2Ntyo2WMsIAA */\n  createMachine(\n    {\n      context: {\n        clusters: undefined,\n        defaultCluster: undefined,\n        quota: undefined,\n        capabilities: undefined,\n      },\n      predictableActionArguments: true,\n      tsTypes:\n        {} as import(\"./CreateDedicatedKafkaInstanceMachine.typegen\").Typegen0,\n      schema: {\n        context: {} as CreateDedicatedKafkaInstanceMachineContext,\n        events: {} as\n          | {\n              type: \"dedicated quota available\";\n              quota: Pick<\n                DedicatedPlanInitializationData,\n                \"remainingDedicatedQuota\"\n              >;\n            }\n          | {\n              type: \"out of dedicated quota\";\n            }\n          | {\n              type: \"no dedicated quota available\";\n            }\n          | {\n              type: \"clusters available\";\n              clusters: DedicatedClustersInfo;\n              defaultCluster: DedicatedCluster | undefined;\n            }\n          | { type: \"clusters unavailable\" }\n          | { type: \"save\"; data: CreateDedicatedKafkaFormData }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateDedicatedKafkaInstanceError },\n        services: {} as {\n          checkDedicatedQuota: {\n            data: never;\n          };\n          fetchClusters: {\n            data: never;\n          };\n          dedicatedPlan: {\n            data: DedicatedPlanMachineContext;\n          };\n        },\n      },\n      id: \"createDedicatedKafkaInstance\",\n      initial: \"loading\",\n      states: {\n        loading: {\n          description: \"Fetch the data required to drive the creation flow\",\n          tags: \"loading\",\n          initial: \"quota\",\n          states: {\n            quota: {\n              initial: \"checking dedicated quota\",\n              states: {\n                \"checking dedicated quota\": {\n                  invoke: {\n                    src: \"checkDedicatedQuota\",\n                    onError: [\n                      {\n                        actions: \"setDedicatedUnavailable\",\n                        target:\n                          \"#createDedicatedKafkaInstance.system unavailable\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"dedicated quota available\": {\n                      actions: \"setDedicatedAvailable\",\n                      target: \"dedicated\",\n                    },\n                    \"out of dedicated quota\": {\n                      actions: \"setDedicatedOutOfQuota\",\n                      target: \"dedicated\",\n                    },\n                    \"no dedicated quota available\": {\n                      actions: \"setDedicatedUnavailable\",\n                      target:\n                        \"#createDedicatedKafkaInstance.system unavailable\",\n                    },\n                  },\n                },\n                dedicated: {\n                  type: \"final\",\n                  always: {\n                    target:\n                      \"#createDedicatedKafkaInstance.loading.fetching clusters\",\n                  },\n                },\n              },\n            },\n            \"fetching clusters\": {\n              invoke: {\n                src: \"fetchClusters\",\n                onError: [\n                  {\n                    actions: \"setClustersUnavailable\",\n                    target: \"ready\",\n                  },\n                ],\n              },\n              on: {\n                \"clusters available\": {\n                  actions: \"setClusters\",\n                  target: \"ready\",\n                },\n                \"clusters unavailable\": {\n                  actions: \"setClustersUnavailable\",\n                  target: \"ready\",\n                },\n              },\n            },\n            ready: {\n              type: \"final\",\n              entry: \"setCapabilities\",\n            },\n          },\n          onDone: [\n            {\n              cond: \"dedicated plan\",\n              target: \"dedicated plan\",\n            },\n            {\n              target: \"system unavailable\",\n            },\n          ],\n        },\n        \"system unavailable\": {\n          tags: \"systemUnavailable\",\n          type: \"final\",\n        },\n        \"dedicated plan\": {\n          invoke: {\n            src: \"dedicatedPlan\",\n            id: \"dedicatedPlanService\",\n          },\n          tags: \"dedicatedPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createDedicatedKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToDedicatedPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        complete: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setDedicatedAvailable: assign((_, event) => ({\n          quota: {\n            plan: \"dedicated\" as const,\n            instanceAvailability: \"available\" as const,\n            remainingDedicatedQuota: event.quota.remainingDedicatedQuota,\n          },\n        })),\n        setDedicatedOutOfQuota: assign((_, event) => ({\n          quota: {\n            plan: \"dedicated\" as const,\n            instanceAvailability: \"out-of-quota\" as const,\n            remainingDedicatedQuota: 0,\n          },\n        })),\n        setDedicatedUnavailable: assign((_) => ({\n          quota: {\n            plan: \"dedicated\" as const,\n            instanceAvailability: \"clusters-unavailable\" as const,\n            remainingDedicatedQuota: 0,\n          },\n        })),\n        setClusters: assign((_, event) => {\n          return {\n            clusters: event.clusters,\n            defaultCluster: event.defaultCluster,\n          };\n        }),\n        setClustersUnavailable: assign((context) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const quota = context.quota!;\n          quota.instanceAvailability = \"clusters-unavailable\";\n          return {\n            providers: [],\n            quota,\n          };\n        }),\n        setCapabilities: assign((context) => {\n          const { clusters, defaultCluster, quota } = context;\n          if (!clusters || !quota || quota.plan !== \"dedicated\") {\n            throw new Error(\"unexpected condition, invalid quota\");\n          }\n          const capabilities: DedicatedPlanInitializationData = {\n            plan: \"dedicated\",\n            availableClusters: clusters,\n            defaultCluster,\n            instanceAvailability: quota.instanceAvailability,\n            remainingDedicatedQuota: quota.remainingDedicatedQuota,\n          };\n          return { capabilities };\n        }),\n        notifyCreateErrorToDedicatedPlan: forwardTo(\"dedicatedPlanService\"),\n      },\n      guards: {\n        \"dedicated plan\": (context) => context.quota?.plan === \"dedicated\",\n      },\n    }\n  );\n\ntype EventTypes = Pick<\n  EventFrom<typeof CreateDedicatedKafkaInstanceMachine>,\n  \"type\"\n>[\"type\"];\n\ntype EventOptions<E extends EventTypes> = Omit<\n  EventFrom<typeof CreateDedicatedKafkaInstanceMachine, E>,\n  \"type\"\n>;\n\nexport type CreateDedicatedKafkaInstanceServices = {\n  checkDedicatedQuota: (events: {\n    onOutOfQuota: (p: EventOptions<\"out of dedicated quota\">) => void;\n    onQuotaAvailable: (p: EventOptions<\"dedicated quota available\">) => void;\n    onNoQuotaAvailable: (\n      p: EventOptions<\"no dedicated quota available\">\n    ) => void;\n  }) => void;\n  fetchClusters: (\n    plan: \"dedicated\",\n    events: {\n      onAvailable: (p: EventOptions<\"clusters available\">) => void;\n      onUnavailable: () => void;\n    }\n  ) => void;\n  getDedicatedSizes: (cluster: DedicatedCluster) => Promise<DedicatedSizes>;\n  onCreate: (\n    data: CreateDedicatedKafkaFormData,\n    onSuccess: () => void,\n    onError: (error: CreateDedicatedKafkaInstanceError) => void\n  ) => void;\n};\n\nexport function makeCreateDedicatedKafkaInstanceMachine({\n  checkDedicatedQuota: checkDedicatedQuotaCb,\n  fetchClusters: fetchClustersCb,\n  getDedicatedSizes: getDedicatedSizesCb,\n  onCreate,\n}: CreateDedicatedKafkaInstanceServices) {\n  return CreateDedicatedKafkaInstanceMachine.withConfig({\n    services: {\n      checkDedicatedQuota: () => {\n        return (send) =>\n          checkDedicatedQuotaCb({\n            onNoQuotaAvailable: () => {\n              send({ type: \"no dedicated quota available\" });\n            },\n            onOutOfQuota: () => {\n              send({ type: \"out of dedicated quota\" });\n            },\n            onQuotaAvailable: ({ quota }) => {\n              send({ type: \"dedicated quota available\", quota });\n            },\n          });\n      },\n      fetchClusters: (context) => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const instanceType = context.quota!.plan;\n        return (send) => {\n          fetchClustersCb(instanceType, {\n            onAvailable: ({ clusters, defaultCluster }) =>\n              send({\n                type: \"clusters available\",\n                clusters,\n                defaultCluster,\n              }),\n            onUnavailable: () => send(\"clusters unavailable\"),\n          });\n        };\n      },\n      createInstance: (_context, event) => {\n        const form = event.data;\n\n        return (send) => {\n          function onSuccess() {\n            send(\"createSuccess\");\n          }\n\n          function onError(error: CreateDedicatedKafkaInstanceError) {\n            send({ type: \"createError\", error });\n          }\n\n          onCreate(\n            {\n              plan: form.plan,\n              name: form.name,\n              cluster: form.cluster,\n              sizeId: form.sizeId,\n              billing: form.billing,\n            },\n            onSuccess,\n            onError\n          );\n        };\n      },\n      dedicatedPlan: (context) => {\n        return DedicatedPlanMachine.withContext({\n          capabilities: context.capabilities as DedicatedPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getDedicatedSizesCb(form.cluster);\n            },\n          },\n        });\n      },\n    },\n  });\n}\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { CreateDedicatedKafkaInstanceServices } from \"./CreateDedicatedKafkaInstanceMachine\";\nimport { makeCreateDedicatedKafkaInstanceMachine } from \"./CreateDedicatedKafkaInstanceMachine\";\n\nexport const CreateDedicatedKafkaInstanceContext = createContext<{\n  service: ActorRefFrom<\n    ReturnType<typeof makeCreateDedicatedKafkaInstanceMachine>\n  >;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport const CreateDedicatedKafkaInstanceProvider: FunctionComponent<\n  CreateDedicatedKafkaInstanceServices\n> = ({\n  onCreate,\n  checkDedicatedQuota,\n  fetchClusters,\n  getDedicatedSizes,\n  children,\n}) => {\n  const service = useInterpret(\n    () =>\n      makeCreateDedicatedKafkaInstanceMachine({\n        checkDedicatedQuota,\n        fetchClusters,\n        getDedicatedSizes,\n        onCreate,\n      }),\n    { devTools: true }\n  );\n\n  return (\n    <CreateDedicatedKafkaInstanceContext.Provider value={{ service }}>\n      {children}\n    </CreateDedicatedKafkaInstanceContext.Provider>\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { CreateKafkaInstanceContext } from \"./CreateKafkaInstanceProvider\";\nimport type { StandardPlanMachine } from \"./StandardPlanMachine\";\nimport type { TrialPlanMachine } from \"./TrialPlanMachine\";\n\nexport type UseCreateKafkaInstanceSelectorReturn = {\n  standardPlanMachine: ActorRefFrom<typeof StandardPlanMachine> | undefined;\n  trialPlanMachine: ActorRefFrom<typeof TrialPlanMachine> | undefined;\n  isLoading: boolean;\n  isSystemUnavailable: boolean;\n  isStandardPlan: boolean;\n  isTrialPlan: boolean;\n  isSaving: boolean;\n  isSaved: boolean;\n};\n\nexport function useCreateKafkaInstance() {\n  const { service } = useContext(CreateKafkaInstanceContext);\n  return useSelector<typeof service, UseCreateKafkaInstanceSelectorReturn>(\n    service,\n    useCallback((state) => {\n      const standardPlanMachine = state.children[\"standardPlanService\"] as\n        | ActorRefFrom<typeof StandardPlanMachine>\n        | undefined;\n      const trialPlanMachine = state.children[\"trialPlanService\"] as\n        | ActorRefFrom<typeof TrialPlanMachine>\n        | undefined;\n\n      const isLoading = state.hasTag(\"loading\");\n      const isSystemUnavailable = state.hasTag(\"systemUnavailable\");\n      const isStandardPlan = state.hasTag(\"standardPlan\");\n      const isTrialPlan = state.hasTag(\"trialPlan\");\n      const isSaving = state.hasTag(\"saving\");\n      const isSaved = state.done === true;\n\n      return {\n        standardPlanMachine,\n        trialPlanMachine,\n        isLoading,\n        isSystemUnavailable,\n        isStandardPlan,\n        isTrialPlan,\n        isSaving,\n        isSaved,\n      };\n    }, [])\n  );\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { CreateDedicatedKafkaInstanceContext } from \"./CreateDedicatedKafkaInstanceProvider\";\nimport type { DedicatedPlanMachine } from \"./DedicatedPlanMachine\";\n\nexport type UseCreateDedicatedKafkaInstanceSelectorReturn = {\n  dedicatedPlanMachine: ActorRefFrom<typeof DedicatedPlanMachine> | undefined;\n  isLoading: boolean;\n  isSystemUnavailable: boolean;\n  isAvailable: boolean;\n  isSaving: boolean;\n  isSaved: boolean;\n};\n\nexport function useCreateDedicatedKafkaInstance() {\n  const { service } = useContext(CreateDedicatedKafkaInstanceContext);\n  return useSelector<\n    typeof service,\n    UseCreateDedicatedKafkaInstanceSelectorReturn\n  >(\n    service,\n    useCallback((state) => {\n      const dedicatedPlanMachine = state.children[\"dedicatedPlanService\"] as\n        | ActorRefFrom<typeof DedicatedPlanMachine>\n        | undefined;\n\n      const isLoading = state.hasTag(\"loading\");\n      const isSystemUnavailable = state.hasTag(\"systemUnavailable\");\n      const isAvailable = state.hasTag(\"dedicatedPlan\");\n      const isSaving = state.hasTag(\"saving\");\n      const isSaved = state.done === true;\n\n      return {\n        dedicatedPlanMachine,\n        isLoading,\n        isSystemUnavailable,\n        isAvailable,\n        isSaving,\n        isSaved,\n      };\n    }, [])\n  );\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback } from \"react\";\nimport type {\n  CloudProvider,\n  CloudRegion,\n  MarketPlace,\n  MarketplaceSubscription,\n  Size,\n} from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfo, CreateKafkaInstanceError } from \"../types\";\nimport type { StandardPlanMachineContext } from \"./StandardPlanMachine\";\nimport { useCreateKafkaInstance } from \"./useCreateKafkaInstance\";\n\ntype SelectorReturn = {\n  form: StandardPlanMachineContext[\"form\"];\n  capabilities: StandardPlanMachineContext[\"capabilities\"];\n  selectedProvider: CloudProviderInfo | undefined;\n  selectedSize: Size | undefined;\n  sizes: StandardPlanMachineContext[\"sizes\"];\n  selectedBilling: \"prepaid\" | MarketplaceSubscription | undefined;\n  billingType: \"rh-only\" | \"external-marketplaces\";\n  remainingQuota: number | undefined;\n\n  isFormEnabled: boolean;\n\n  isNameInvalid: boolean;\n  isNameEmpty: boolean;\n  isNameError: boolean;\n  isNameTaken: boolean;\n  isSizeDisabled: boolean;\n  isSizeOverQuota: boolean;\n  isSizeLoadingError: boolean;\n  isSizeAvailable: boolean;\n  isSizeError: boolean;\n  isBillingError: boolean;\n  isBillingSingleSubscription: boolean;\n  isBillingSelectionRequired: boolean;\n  isBillingPrepaidAvailable: boolean;\n  isBillingPrepaidOverQuota: boolean;\n  isBillingMarketplaceOverQuota: boolean;\n  isBillingSingleMarketplace: MarketplaceSubscription | false;\n\n  isProviderError: boolean;\n  isRegionError: boolean;\n\n  isLoading: boolean;\n  isLoadingSizes: boolean;\n  isSaving: boolean;\n\n  error: CreateKafkaInstanceError | \"form-invalid\" | undefined;\n\n  setName: (name: string) => void;\n  setProvider: (name: CloudProvider) => void;\n  setRegion: (name: CloudRegion) => void;\n  onCreate: () => void;\n  setSize: (size: Size) => void;\n  setBillingSubscription: (\n    marketplace: MarketPlace,\n    subscription: string\n  ) => void;\n  setBillingPrepaid: () => void;\n};\n\nexport function useStandardPlanMachine(): SelectorReturn {\n  const {\n    standardPlanMachine: service,\n    isLoading,\n    isSaving,\n  } = useCreateKafkaInstance();\n\n  if (!service) {\n    throw new Error(\n      \"useStandardPlanMachine should be called only when the parent CreateKafkaInstanceMachine is in the right state\"\n    );\n  }\n\n  const setName = useCallback(\n    (name: string) => service.send({ type: \"nameChange\", name }),\n    [service]\n  );\n  const setProvider = useCallback(\n    (provider: CloudProvider) =>\n      service.send({ type: \"providerChange\", provider }),\n    [service]\n  );\n  const setRegion = useCallback(\n    (region: CloudRegion) => service.send({ type: \"regionChange\", region }),\n    [service]\n  );\n  const onCreate = useCallback(() => service.send(\"create\"), [service]);\n  const setSize = useCallback(\n    (size: Size) => service.send({ type: \"sizeChange\", size }),\n    [service]\n  );\n\n  const setBillingSubscription = useCallback(\n    (marketplace: MarketPlace, subscription: string) =>\n      service.send({\n        type: \"selectSubscription\",\n        subscription: { marketplace, subscription },\n      }),\n    [service]\n  );\n\n  const setBillingPrepaid = useCallback(\n    () =>\n      service.send({\n        type: \"selectPrepaid\",\n      }),\n    [service]\n  );\n\n  return useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => {\n        const { creationError, capabilities, form, sizes } = state.context;\n        const isBlocked = state.hasTag(\"blocked\");\n        const isFormInvalid =\n          state.hasTag(\"formInvalid\") && state.hasTag(\"submitted\");\n        const isNameTaken = creationError === \"name-taken\";\n        const isConfigurable = state.hasTag(\"configurable\");\n        const isLoadingSizes = state.hasTag(\"sizeLoading\");\n        const isBillingSelectionRequired =\n          !state.hasTag(\"noBilling\") && !isBlocked;\n\n        const marketplaces = Array.from(\n          new Set(\n            capabilities.marketplaceSubscriptions.flatMap<MarketplaceSubscription>(\n              (m) =>\n                m.subscriptions.map((s) => ({\n                  marketplace: m.marketplace,\n                  subscription: s,\n                }))\n            )\n          )\n        );\n        const isBillingSingleSubscription = state.hasTag(\"singleSubscription\");\n        const isBillingSingleMarketplace =\n          isBillingSingleSubscription ||\n          (marketplaces.length === 1 &&\n            capabilities.remainingPrepaidQuota === undefined)\n            ? marketplaces[0]\n            : false;\n\n        const isBillingPrepaidAvailable =\n          capabilities.remainingPrepaidQuota !== undefined;\n\n        const selectedProvider = isBlocked\n          ? undefined\n          : capabilities.availableProviders.find((p) => p.id === form.provider);\n\n        const selectedSize = isBlocked\n          ? undefined\n          : sizes?.find((s) => form.size?.id === s.id);\n\n        const billingType = capabilities.marketplaceSubscriptions.some(\n          (m) => m.marketplace !== \"rhm\"\n        )\n          ? \"external-marketplaces\"\n          : \"rh-only\";\n\n        const selectedBilling =\n          form.billing === \"prepaid\" ? \"prepaid\" : form.billing;\n\n        const error: SelectorReturn[\"error\"] = creationError\n          ? creationError\n          : isFormInvalid\n          ? \"form-invalid\"\n          : undefined;\n\n        const remainingQuota =\n          form.billing === \"prepaid\" || form.billing === undefined\n            ? capabilities.remainingPrepaidQuota\n            : capabilities.remainingMarketplaceQuota;\n\n        const isBillingPrepaidOverQuota: boolean = (() => {\n          if (\n            capabilities.remainingPrepaidQuota !== undefined &&\n            capabilities.remainingPrepaidQuota === 0\n          ) {\n            return true;\n          } else if (\n            selectedSize?.quota &&\n            capabilities.remainingPrepaidQuota\n          ) {\n            return selectedSize.quota > capabilities.remainingPrepaidQuota;\n          }\n          return false;\n        })();\n\n        const isBillingMarketplaceOverQuota: boolean = (() => {\n          if (\n            capabilities.remainingMarketplaceQuota !== undefined &&\n            capabilities.remainingMarketplaceQuota === 0\n          ) {\n            return true;\n          } else if (\n            selectedSize?.quota &&\n            capabilities.remainingMarketplaceQuota\n          ) {\n            return selectedSize.quota > capabilities.remainingMarketplaceQuota;\n          }\n          return false;\n        })();\n\n        return {\n          form: form,\n          capabilities,\n          selectedProvider,\n          selectedSize,\n          sizes: sizes,\n          billingType,\n          selectedBilling,\n          remainingQuota,\n\n          isFormEnabled: !isLoading && !isSaving && !isBlocked,\n          isNameInvalid: state.hasTag(\"nameInvalid\"),\n          isNameEmpty: state.hasTag(\"nameEmpty\"),\n          isNameError:\n            state.hasTag(\"nameInvalid\") ||\n            isNameTaken ||\n            (!state.hasTag(\"nameValid\") && isFormInvalid),\n          isNameTaken,\n          isSizeDisabled: state.hasTag(\"sizeDisabled\"),\n          isSizeOverQuota: state.hasTag(\"sizeOverQuota\"),\n          isSizeLoadingError: state.hasTag(\"sizeError\"),\n          isSizeAvailable: !state.hasTag(\"sizeIdle\"),\n          isSizeError: !state.hasTag(\"sizeValid\") && isFormInvalid,\n          isProviderError: !state.hasTag(\"providerValid\") && isFormInvalid,\n          isRegionError: !state.hasTag(\"regionValid\") && isFormInvalid,\n          isBillingError: !state.hasTag(\"billingValid\") && isFormInvalid,\n          isBillingSingleSubscription,\n          isBillingSelectionRequired,\n          isBillingPrepaidAvailable,\n          isBillingPrepaidOverQuota,\n          isBillingMarketplaceOverQuota,\n          isBillingSingleMarketplace,\n          isLoading,\n          isLoadingSizes,\n          isConfigurable,\n          isSaving,\n\n          error,\n\n          setName,\n          setProvider,\n          setRegion,\n          onCreate,\n          setSize,\n          setBillingSubscription,\n          setBillingPrepaid,\n        };\n      },\n      [\n        isLoading,\n        isSaving,\n        onCreate,\n        setBillingPrepaid,\n        setBillingSubscription,\n        setName,\n        setProvider,\n        setRegion,\n        setSize,\n      ]\n    )\n  );\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback } from \"react\";\nimport type { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfo, CreateKafkaInstanceError } from \"../types\";\nimport type { TrialPlanMachineContext } from \"./TrialPlanMachine\";\nimport { useCreateKafkaInstance } from \"./useCreateKafkaInstance\";\n\ntype SelectorReturn = {\n  form: TrialPlanMachineContext[\"form\"];\n  capabilities: TrialPlanMachineContext[\"capabilities\"];\n  selectedProvider: CloudProviderInfo | undefined;\n  sizes: TrialPlanMachineContext[\"sizes\"];\n\n  isFormEnabled: boolean;\n\n  isNameInvalid: boolean;\n  isNameEmpty: boolean;\n  isNameError: boolean;\n  isNameTaken: boolean;\n  isSizeLoadingError: boolean;\n  isSizeAvailable: boolean;\n  isSizeError: boolean;\n\n  isProviderError: boolean;\n  isRegionError: boolean;\n\n  isLoading: boolean;\n  isLoadingSizes: boolean;\n  isSaving: boolean;\n\n  error: CreateKafkaInstanceError | \"form-invalid\" | undefined;\n\n  setName: (name: string) => void;\n  setProvider: (name: CloudProvider) => void;\n  setRegion: (name: CloudRegion) => void;\n  onCreate: () => void;\n};\n\nexport function useTrialPlanMachine(): SelectorReturn {\n  const {\n    trialPlanMachine: service,\n    isLoading,\n    isSaving,\n  } = useCreateKafkaInstance();\n\n  if (!service) {\n    throw new Error(\n      \"useTrialPlanMachine should be called only when the parent CreateKafkaInstanceMachine is in the right state\"\n    );\n  }\n\n  const setName = useCallback(\n    (name: string) => service.send({ type: \"nameChange\", name }),\n    [service]\n  );\n  const setProvider = useCallback(\n    (provider: CloudProvider) =>\n      service.send({ type: \"providerChange\", provider }),\n    [service]\n  );\n  const setRegion = useCallback(\n    (region: CloudRegion) => service.send({ type: \"regionChange\", region }),\n    [service]\n  );\n  const onCreate = useCallback(() => service.send(\"create\"), [service]);\n\n  return useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => {\n        const isBlocked = state.hasTag(\"blocked\");\n        const isFormInvalid =\n          state.hasTag(\"formInvalid\") && state.hasTag(\"submitted\");\n        const isNameTaken = state.context.creationError === \"name-taken\";\n        const isConfigurable = state.hasTag(\"configurable\");\n        const isLoadingSizes = state.hasTag(\"sizeLoading\");\n\n        const selectedProvider = isBlocked\n          ? undefined\n          : state.context.capabilities.availableProviders.find(\n              (p) => p.id === state.context.form.provider\n            );\n\n        const error: SelectorReturn[\"error\"] = state.context.creationError\n          ? state.context.creationError\n          : isFormInvalid\n          ? \"form-invalid\"\n          : undefined;\n\n        return {\n          form: state.context.form,\n          capabilities: state.context.capabilities,\n          selectedProvider,\n          sizes: state.context.sizes,\n\n          isFormEnabled: !isLoading && !isSaving && !isBlocked,\n\n          isNameInvalid: state.hasTag(\"nameInvalid\"),\n          isNameEmpty: state.hasTag(\"nameEmpty\"),\n          isNameError:\n            state.hasTag(\"nameInvalid\") ||\n            isNameTaken ||\n            (!state.hasTag(\"nameValid\") && isFormInvalid),\n          isNameTaken,\n          isSizeLoadingError: state.hasTag(\"sizeError\"),\n          isSizeAvailable: !state.hasTag(\"sizeIdle\"),\n          isSizeError: !state.hasTag(\"sizeValid\") && isFormInvalid,\n\n          isProviderError: !state.hasTag(\"providerValid\") && isFormInvalid,\n          isRegionError: !state.hasTag(\"regionValid\") && isFormInvalid,\n\n          isLoading,\n          isLoadingSizes,\n          isConfigurable,\n          isSaving,\n\n          error,\n\n          setName,\n          setProvider,\n          setRegion,\n          onCreate,\n        };\n      },\n      [isLoading, isSaving, onCreate, setName, setProvider, setRegion]\n    )\n  );\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback } from \"react\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport type { Size } from \"ui-models/src/models/kafka\";\nimport type { CreateDedicatedKafkaInstanceError } from \"../types\";\nimport type { DedicatedPlanMachineContext } from \"./DedicatedPlanMachine\";\nimport { useCreateDedicatedKafkaInstance } from \"./useCreateDedicatedKafkaInstance\";\n\ntype SelectorReturn = {\n  form: DedicatedPlanMachineContext[\"form\"];\n  capabilities: DedicatedPlanMachineContext[\"capabilities\"];\n  selectedCluster: DedicatedCluster | undefined;\n  selectedSize: Size | undefined;\n  sizes: DedicatedPlanMachineContext[\"sizes\"];\n  remainingQuota: number | undefined;\n\n  isFormEnabled: boolean;\n\n  isNameInvalid: boolean;\n  isNameEmpty: boolean;\n  isNameError: boolean;\n  isNameTaken: boolean;\n  isSizeDisabled: boolean;\n  isSizeOverQuota: boolean;\n  isSizeLoadingError: boolean;\n  isSizeAvailable: boolean;\n  isSizeError: boolean;\n  isBillingError: boolean;\n  isBillingPrepaidAvailable: boolean;\n  isBillingPrepaidOverQuota: boolean;\n\n  isClusterError: boolean;\n\n  isLoading: boolean;\n  isLoadingSizes: boolean;\n  isSaving: boolean;\n\n  error: CreateDedicatedKafkaInstanceError | \"form-invalid\" | undefined;\n\n  setName: (name: string) => void;\n  setCluster: (name: DedicatedCluster) => void;\n  onCreate: () => void;\n  setSize: (size: Size) => void;\n  setBillingPrepaid: () => void;\n};\n\nexport function useDedicatedPlanMachine(): SelectorReturn {\n  const {\n    dedicatedPlanMachine: service,\n    isLoading,\n    isSaving,\n  } = useCreateDedicatedKafkaInstance();\n\n  if (!service) {\n    throw new Error(\n      \"useDedicatedPlanMachine should be called only when the parent CreateDedicatedKafkaInstanceMachine is in the right state\"\n    );\n  }\n\n  const setName = useCallback(\n    (name: string) => service.send({ type: \"nameChange\", name }),\n    [service]\n  );\n  const setCluster = useCallback(\n    (cluster: DedicatedCluster) =>\n      service.send({ type: \"clusterChange\", cluster }),\n    [service]\n  );\n  const onCreate = useCallback(() => service.send(\"create\"), [service]);\n  const setSize = useCallback(\n    (size: Size) => service.send({ type: \"sizeChange\", size }),\n    [service]\n  );\n\n  const setBillingPrepaid = useCallback(\n    () =>\n      service.send({\n        type: \"selectPrepaid\",\n      }),\n    [service]\n  );\n\n  return useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => {\n        const { creationError, capabilities, form, sizes } = state.context;\n        const isBlocked = state.hasTag(\"blocked\");\n        const isFormInvalid =\n          state.hasTag(\"formInvalid\") && state.hasTag(\"submitted\");\n        const isNameTaken = creationError === \"name-taken\";\n        const isConfigurable = state.hasTag(\"configurable\");\n        const isLoadingSizes = state.hasTag(\"sizeLoading\");\n\n        const isBillingPrepaidAvailable =\n          capabilities.remainingDedicatedQuota !== undefined;\n\n        const selectedCluster = isBlocked\n          ? undefined\n          : capabilities.availableClusters.find(\n              (p) => p.id === form.cluster?.id\n            );\n\n        const selectedSize = isBlocked\n          ? undefined\n          : sizes?.find((s) => form.size?.id === s.id);\n\n        const error: SelectorReturn[\"error\"] = creationError\n          ? creationError\n          : isFormInvalid\n          ? \"form-invalid\"\n          : undefined;\n\n        const remainingQuota = capabilities.remainingDedicatedQuota;\n\n        const isBillingPrepaidOverQuota: boolean = (() => {\n          if (\n            capabilities.remainingDedicatedQuota !== undefined &&\n            capabilities.remainingDedicatedQuota === 0\n          ) {\n            return true;\n          } else if (\n            selectedSize?.quota &&\n            capabilities.remainingDedicatedQuota\n          ) {\n            return selectedSize.quota > capabilities.remainingDedicatedQuota;\n          }\n          return false;\n        })();\n\n        return {\n          form: form,\n          capabilities,\n          selectedCluster,\n          selectedSize,\n          sizes: sizes,\n          remainingQuota,\n\n          isFormEnabled: !isLoading && !isSaving && !isBlocked,\n          isNameInvalid: state.hasTag(\"nameInvalid\"),\n          isNameEmpty: state.hasTag(\"nameEmpty\"),\n          isNameError:\n            state.hasTag(\"nameInvalid\") ||\n            isNameTaken ||\n            (!state.hasTag(\"nameValid\") && isFormInvalid),\n          isNameTaken,\n          isSizeDisabled: state.hasTag(\"sizeDisabled\"),\n          isSizeOverQuota: state.hasTag(\"sizeOverQuota\"),\n          isSizeLoadingError: state.hasTag(\"sizeError\"),\n          isSizeAvailable: !state.hasTag(\"sizeIdle\"),\n          isSizeError: !state.hasTag(\"sizeValid\") && isFormInvalid,\n          isClusterError: !state.hasTag(\"clusterValid\") && isFormInvalid,\n          isBillingError: !state.hasTag(\"billingValid\") && isFormInvalid,\n          isBillingPrepaidAvailable,\n          isBillingPrepaidOverQuota,\n          isLoading,\n          isLoadingSizes,\n          isConfigurable,\n          isSaving,\n\n          error,\n\n          setName,\n          setCluster,\n          onCreate,\n          setSize,\n          setBillingPrepaid,\n        };\n      },\n      [\n        isLoading,\n        isSaving,\n        onCreate,\n        setBillingPrepaid,\n        setName,\n        setCluster,\n        setSize,\n      ]\n    )\n  );\n}\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { FormEvent, VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { CloudProvider, MarketPlace } from \"ui-models/src/models/kafka\";\nimport type {\n  FieldInstanceNameProps,\n  FieldSizeProps,\n  InstanceInfoProps,\n} from \"./components\";\nimport {\n  FieldAZ,\n  FieldBillingTiles,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldInstanceName,\n  FieldSize,\n  FormAlerts,\n  InstanceInfo,\n  InstanceInfoSkeleton,\n  ModalAlertsStandardPlan,\n} from \"./components\";\nimport { useStandardPlanMachine } from \"./machines\";\n\nexport type StandardInstanceFormProps = {\n  formId: string;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n  subscriptionOptionsHref: string;\n};\n\nexport const StandardInstanceForm: VoidFunctionComponent<\n  StandardInstanceFormProps\n> = ({\n  formId,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n  subscriptionOptionsHref,\n}) => {\n  const {\n    isBillingSelectionRequired,\n    isBillingSingleMarketplace,\n    capabilities,\n    selectedSize,\n    billingType,\n    error,\n    onCreate,\n  } = useStandardPlanMachine();\n\n  const onSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      onCreate();\n    },\n    [onCreate]\n  );\n\n  const instanceInfoBilling: InstanceInfoProps[\"billing\"] = (() => {\n    if (!isBillingSelectionRequired) {\n      if (isBillingSingleMarketplace === false) {\n        return {\n          value: \"prepaid\",\n          subscriptionOptionsHref,\n          type: billingType,\n        };\n      } else {\n        return {\n          value: isBillingSingleMarketplace,\n          subscriptionOptionsHref,\n          type: billingType,\n        };\n      }\n    }\n    return undefined;\n  })();\n\n  return (\n    <>\n      <ModalAlertsStandardPlan\n        instanceAvailability={capabilities.instanceAvailability}\n        onClickContactUs={onClickContactUs}\n      />\n\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <FormAlerts error={error} onClickContactUS={onClickContactUs} />\n          <Form onSubmit={onSubmit} id={formId}>\n            <ConnectedFieldInstanceName />\n            <ConnectedFieldCloudProvider />\n            <ConnectedFieldCloudRegion />\n            <ConnectedFieldAZ />\n            <ConnectedFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n            {isBillingSelectionRequired && (\n              <ConnectedBillingTiles\n                subscriptionOptionsHref={subscriptionOptionsHref}\n              />\n            )}\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          {selectedSize === undefined ? (\n            <InstanceInfoSkeleton\n              isTrial={false}\n              onClickQuickStart={onClickQuickStart}\n            />\n          ) : (\n            <InstanceInfo\n              isTrial={false}\n              trialDurationInHours={undefined}\n              ingress={selectedSize.ingress}\n              egress={selectedSize.egress}\n              storage={selectedSize.storage}\n              maxPartitions={selectedSize.maxPartitions}\n              connections={selectedSize.connections}\n              connectionRate={selectedSize.connectionRate}\n              messageSize={selectedSize.messageSize}\n              onClickQuickStart={onClickQuickStart}\n              streamingUnits={selectedSize.displayName}\n              billing={instanceInfoBilling}\n            />\n          )}\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const ConnectedFieldInstanceName: VoidFunctionComponent = () => {\n  const {\n    form,\n    isNameTaken,\n    isNameInvalid,\n    isNameEmpty,\n    isNameError,\n    isFormEnabled,\n    setName,\n  } = useStandardPlanMachine();\n\n  const validity: FieldInstanceNameProps[\"validity\"] = (() => {\n    if (isNameTaken) {\n      return \"taken\";\n    } else if (isNameInvalid) {\n      return \"invalid\";\n    } else if (isNameEmpty && isNameError) {\n      return \"required\";\n    }\n    return \"valid\";\n  })();\n\n  return (\n    <FieldInstanceName\n      value={form.name || \"\"}\n      validity={validity}\n      isDisabled={!isFormEnabled}\n      onChange={setName}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudProvider: VoidFunctionComponent = () => {\n  const {\n    form,\n    capabilities,\n    isProviderError,\n    isFormEnabled,\n    isBillingSingleMarketplace,\n    setProvider,\n  } = useStandardPlanMachine();\n\n  const providers =\n    isBillingSingleMarketplace &&\n    isBillingSingleMarketplace.marketplace !== \"rhm\"\n      ? capabilities.availableProviders.map((p) => ({\n          ...p,\n          isDisabled: p.id !== isBillingSingleMarketplace.marketplace,\n        }))\n      : capabilities.availableProviders;\n\n  return (\n    <FieldCloudProvider\n      isValid={!isProviderError}\n      providers={providers}\n      value={form.provider}\n      isDisabled={!isFormEnabled}\n      onChange={setProvider}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudRegion: VoidFunctionComponent = () => {\n  const {\n    form,\n    selectedProvider,\n    selectedSize,\n    isRegionError,\n    isFormEnabled,\n    capabilities,\n    error,\n    setRegion,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldCloudRegion\n      validity={\n        isRegionError\n          ? \"required\"\n          : error === \"region-unavailable\" ||\n            capabilities.instanceAvailability === \"regions-unavailable\"\n          ? \"region-unavailable\"\n          : \"valid\"\n      }\n      regions={selectedProvider?.regions}\n      value={form.region}\n      isDisabled={!isFormEnabled}\n      isSizeUnavailable={selectedSize?.isDisabled || false}\n      onChange={setRegion}\n    />\n  );\n};\n\nexport const ConnectedFieldAZ: VoidFunctionComponent = () => {\n  const { isFormEnabled } = useStandardPlanMachine();\n\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={!isFormEnabled}\n      onChange={() => false} // AZ is defined by the backend, we just visualize the value here\n    />\n  );\n};\n\nexport const ConnectedFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  const {\n    form,\n    sizes,\n    isSizeOverQuota,\n    isSizeDisabled,\n    isSizeError,\n    isSizeLoadingError,\n    isBillingSelectionRequired,\n    isFormEnabled,\n    isLoadingSizes,\n    isLoading,\n    setSize,\n    remainingQuota,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldSize\n      value={form.size?.quota}\n      sizes={sizes}\n      remainingQuota={isBillingSelectionRequired ? undefined : remainingQuota}\n      isDisabled={!isFormEnabled || sizes === undefined}\n      isLoading={isLoading || isLoadingSizes}\n      isError={isSizeError}\n      isLoadingError={isSizeLoadingError}\n      validity={\n        isSizeOverQuota ? \"out-of-quota\" : isSizeDisabled ? \"required\" : \"valid\"\n      }\n      onChange={setSize}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n\nfunction isMarketplaceDisabled(\n  marketplace: MarketPlace,\n  selectedProvider: CloudProvider | undefined\n) {\n  if (marketplace === \"rhm\") {\n    return false;\n  } else if (selectedProvider) {\n    return marketplace !== selectedProvider;\n  }\n  return false;\n}\n\nexport const ConnectedBillingTiles: VoidFunctionComponent<{\n  subscriptionOptionsHref: string;\n}> = ({ subscriptionOptionsHref }) => {\n  const {\n    form,\n    capabilities,\n    selectedBilling,\n    billingType,\n    isBillingPrepaidAvailable,\n    isSizeOverQuota,\n    isBillingError,\n    isBillingPrepaidOverQuota,\n    isBillingMarketplaceOverQuota,\n    setBillingPrepaid,\n    setBillingSubscription,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldBillingTiles\n      value={\n        selectedBilling === \"prepaid\"\n          ? \"prepaid\"\n          : selectedBilling?.subscription\n      }\n      hasPrepaid={isBillingPrepaidAvailable}\n      subscriptions={capabilities.marketplaceSubscriptions.flatMap((mq) =>\n        mq.subscriptions.map((subscription) => ({\n          marketplace: mq.marketplace,\n          subscription,\n          isDisabled: isMarketplaceDisabled(mq.marketplace, form.provider),\n        }))\n      )}\n      isPrepaidOverQuota={isBillingPrepaidOverQuota}\n      prepaidQuota={capabilities.remainingPrepaidQuota || 0} // we can default to 0 here just to make TS happy, we will have the info here\n      isMarketplaceOverQuota={isBillingMarketplaceOverQuota}\n      marketplaceQuota={capabilities.remainingMarketplaceQuota || 0} // we can default to 0 here just to make TS happy, we will have the info here\n      onPrepaid={setBillingPrepaid}\n      onSubscription={setBillingSubscription}\n      isValid={!isSizeOverQuota && !isBillingError}\n      billingType={billingType}\n      subscriptionOptionsHref={subscriptionOptionsHref}\n    />\n  );\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { FormEvent, VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { FieldSizeProps } from \"./components\";\nimport {\n  ModalAlertsTrialPlan,\n  FormAlerts,\n  InstanceInfoSkeleton,\n  InstanceInfo,\n  FieldInstanceName,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldAZ,\n  FieldSize,\n} from \"./components\";\nimport { useTrialPlanMachine } from \"./machines\";\n\nexport type TrialInstanceFormProps = {\n  formId: string;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n  onClickKafkaOverview: () => void;\n};\n\nexport const TrialInstanceForm: VoidFunctionComponent<\n  TrialInstanceFormProps\n> = ({\n  formId,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n  onClickKafkaOverview,\n}) => {\n  const { capabilities, error, isLoadingSizes, sizes, onCreate } =\n    useTrialPlanMachine();\n\n  const onSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      onCreate();\n    },\n    [onCreate]\n  );\n\n  return (\n    <>\n      <ModalAlertsTrialPlan\n        instanceAvailability={capabilities.instanceAvailability}\n        trialDurationInHours={sizes?.trial.trialDurationHours}\n        onClickKafkaOverview={onClickKafkaOverview}\n      />\n\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <FormAlerts error={error} onClickContactUS={onClickContactUs} />\n          <Form onSubmit={onSubmit} id={formId}>\n            <ConnectedFieldInstanceName />\n            <ConnectedFieldCloudProvider />\n            <ConnectedFieldCloudRegion />\n            <ConnectedFieldAZ />\n            <ConnectedFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          {isLoadingSizes || !sizes ? (\n            <InstanceInfoSkeleton\n              isTrial={false}\n              onClickQuickStart={onClickQuickStart}\n            />\n          ) : (\n            <InstanceInfo\n              isTrial={true}\n              trialDurationInHours={sizes.trial.trialDurationHours}\n              ingress={sizes.trial.ingress}\n              egress={sizes.trial.egress}\n              storage={sizes.trial.storage}\n              maxPartitions={sizes.trial.maxPartitions}\n              connections={sizes.trial.connections}\n              connectionRate={sizes.trial.connectionRate}\n              messageSize={sizes.trial.messageSize}\n              onClickQuickStart={onClickQuickStart}\n              streamingUnits={sizes.trial.displayName}\n              billing={undefined}\n            />\n          )}\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const ConnectedFieldInstanceName: VoidFunctionComponent = () => {\n  const {\n    form,\n    isNameTaken,\n    isNameInvalid,\n    isNameEmpty,\n    isNameError,\n    isFormEnabled,\n    setName,\n  } = useTrialPlanMachine();\n\n  return (\n    <FieldInstanceName\n      value={form.name || \"\"}\n      validity={\n        isNameTaken\n          ? \"taken\"\n          : isNameInvalid\n          ? \"invalid\"\n          : isNameEmpty && isNameError\n          ? \"required\"\n          : \"valid\"\n      }\n      isDisabled={!isFormEnabled}\n      onChange={setName}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudProvider: VoidFunctionComponent = () => {\n  const { form, capabilities, isProviderError, isFormEnabled, setProvider } =\n    useTrialPlanMachine();\n\n  return (\n    <FieldCloudProvider\n      isValid={!isProviderError}\n      providers={capabilities.availableProviders || []}\n      value={form.provider}\n      isDisabled={!isFormEnabled}\n      onChange={setProvider}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudRegion: VoidFunctionComponent = () => {\n  const {\n    form,\n    selectedProvider,\n    isRegionError,\n    isFormEnabled,\n    error,\n    setRegion,\n  } = useTrialPlanMachine();\n\n  return (\n    <FieldCloudRegion\n      validity={\n        isRegionError\n          ? \"required\"\n          : error === \"region-unavailable\"\n          ? \"region-unavailable\"\n          : \"valid\"\n      }\n      regions={selectedProvider?.regions}\n      value={form.region}\n      isDisabled={!isFormEnabled}\n      isSizeUnavailable={false}\n      onChange={setRegion}\n    />\n  );\n};\n\nexport const ConnectedFieldAZ: VoidFunctionComponent = () => {\n  const { isFormEnabled } = useTrialPlanMachine();\n\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"single\"}\n      value={\"single\"}\n      isDisabled={!isFormEnabled}\n      onChange={() => false} // AZ is defined by the backend, we just visualize the value here\n    />\n  );\n};\n\nexport const ConnectedFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  const { sizes, isSizeError, isSizeLoadingError, isLoadingSizes, isLoading } =\n    useTrialPlanMachine();\n\n  return (\n    <FieldSize\n      value={1}\n      sizes={sizes?.standard}\n      remainingQuota={undefined}\n      isDisabled={true}\n      isLoading={isLoading || isLoadingSizes}\n      isError={isSizeError}\n      isLoadingError={isSizeLoadingError}\n      validity={\"developer\"}\n      onChange={() => false} // for trial instances users can't change the size. This will never get fired\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n","import {\n  Alert,\n  Button,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\nimport { OutlinedClockIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nimport { CreateKafkaInstanceProvider } from \"./machines/CreateKafkaInstanceProvider\";\n\nimport \"./CreateKafkaInstance.css\";\nimport { LoadingForm } from \"./LoadingForm\";\nimport { useCreateKafkaInstance } from \"./machines\";\nimport { StandardInstanceForm } from \"./StandardInstanceForm\";\nimport { TrialInstanceForm } from \"./TrialInstanceForm\";\nimport type { CreateKafkaInstanceServices } from \"./machines\";\nimport { ModalAlertsLoading, ModalAlertsSystemUnavailable } from \"./components\";\n\nexport type CreateKafkaInstanceProps = ConnectedCreateKafkaInstanceProps &\n  CreateKafkaInstanceServices;\nexport const CreateKafkaInstance: FunctionComponent<\n  CreateKafkaInstanceProps\n> = ({\n  checkStandardQuota,\n  checkDeveloperAvailability,\n  fetchProvidersWithRegions,\n  getStandardSizes,\n  getTrialSizes,\n  onCreate,\n  ...props\n}) =>\n  props.isModalOpen ? (\n    <CreateKafkaInstanceProvider\n      checkStandardQuota={checkStandardQuota}\n      checkDeveloperAvailability={checkDeveloperAvailability}\n      fetchProvidersWithRegions={fetchProvidersWithRegions}\n      getStandardSizes={getStandardSizes}\n      getTrialSizes={getTrialSizes}\n      onCreate={onCreate}\n    >\n      <ConnectedCreateKafkaInstance {...props} />\n    </CreateKafkaInstanceProvider>\n  ) : null;\n\nexport type ConnectedCreateKafkaInstanceProps = {\n  /**\n   *\n   * Flag to show the modal\n   */\n  isModalOpen: boolean;\n\n  /**\n   * Set this to `true` on Storybook when there are multiple modals open at a time.\n   */\n  disableFocusTrap?: boolean;\n  /**\n   * The parent container to append the modal to. Defaults to document.body\n   */\n  appendTo?: () => HTMLElement;\n\n  /**\n   * A callback for when the cancel or close button are clicked.\n   */\n  onCancel: () => void;\n  onClickQuickStart: () => void;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickKafkaOverview: () => void;\n  subscriptionOptionsHref: string;\n};\nexport const ConnectedCreateKafkaInstance: VoidFunctionComponent<\n  ConnectedCreateKafkaInstanceProps\n> = ({\n  isModalOpen,\n  appendTo,\n  onClickQuickStart,\n  onCancel,\n  disableFocusTrap,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickKafkaOverview,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const { isLoading, isStandardPlan, isTrialPlan, isSaving } =\n    useCreateKafkaInstance();\n\n  const FORM_ID = \"create_kafka_instance_form\";\n\n  return (\n    <Modal\n      id=\"modalCreateKafka\"\n      variant={ModalVariant.large}\n      title={t(\"create_instance_title\")}\n      disableFocusTrap={disableFocusTrap}\n      isOpen={isModalOpen}\n      ouiaId=\"modal-create-kafka\"\n      onClose={onCancel}\n      appendTo={appendTo}\n      position=\"top\"\n      footer={\n        <Stack hasGutter={true}>\n          <StackItem>\n            <Alert\n              className=\"mas--CreateKafkaInstance__creationTimeAlert\"\n              customIcon={<OutlinedClockIcon />}\n              variant=\"info\"\n              isInline\n              isPlain\n              title={t(\"instance_creation_time_alert\")}\n            />\n          </StackItem>\n          <StackItem>\n            <Button\n              key=\"submit\"\n              variant=\"primary\"\n              type=\"submit\"\n              form={FORM_ID}\n              spinnerAriaValueText={t(\"common:submitting_request\")}\n              isDisabled={isLoading || isSaving}\n              isLoading={isSaving}\n              data-testid=\"modalCreateKafka-buttonSubmit\"\n              ouiaId=\"button-create\"\n            >\n              {t(\"create_instance\")}\n            </Button>\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              onClick={onCancel}\n              data-testid=\"modalCreateKafka-buttonCancel\"\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      {(() => {\n        switch (true) {\n          case isLoading:\n            return (\n              <>\n                <ModalAlertsLoading />\n                <LoadingForm\n                  onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                  onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                  onClickQuickStart={onClickQuickStart}\n                />\n              </>\n            );\n          case isStandardPlan:\n            return (\n              <StandardInstanceForm\n                formId={FORM_ID}\n                onClickContactUs={onClickContactUs}\n                onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                onClickQuickStart={onClickQuickStart}\n                subscriptionOptionsHref={subscriptionOptionsHref}\n              />\n            );\n          case isTrialPlan:\n            return (\n              <TrialInstanceForm\n                formId={FORM_ID}\n                onClickContactUs={onClickContactUs}\n                onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                onClickQuickStart={onClickQuickStart}\n                onClickKafkaOverview={onClickKafkaOverview}\n              />\n            );\n          default:\n            return (\n              <>\n                <ModalAlertsSystemUnavailable />\n                <LoadingForm\n                  onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                  onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                  onClickQuickStart={onClickQuickStart}\n                />\n              </>\n            );\n        }\n      })()}\n    </Modal>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Skeleton,\n  Spinner,\n} from \"@patternfly/react-core\";\nimport { ErrorCircleOIcon, OkIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\n\nexport type DedicatedClusterTilesProps = {\n  clusters: (DedicatedCluster & { isDisabled?: boolean })[];\n  value: DedicatedCluster | undefined;\n  onChange: (provider: DedicatedCluster) => void;\n  isDisabled: boolean;\n  validated?: SelectProps[\"validated\"];\n};\nexport const DedicatedClusterTiles: VoidFunctionComponent<\n  DedicatedClusterTilesProps\n> = ({ clusters, value, onChange, isDisabled, validated }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      {clusters.length === 0 && (\n        <Skeleton\n          className=\"pf-m-text-4xl\"\n          screenreaderText=\"Loading contents\"\n        />\n      )}\n      <div role=\"listbox\" aria-label={t(\"select_cloud_provider\")}>\n        <Flex\n          justifyContent={{ default: \"justifyContentSpaceBetween\" }}\n          spacer={{ default: \"spacerNone\" }}\n          spaceItems={{ default: \"spaceItemsXs\" }}\n        >\n          {clusters.map((c) => (\n            <FlexItem grow={{ default: \"grow\" }} key={c.id}>\n              <Card\n                className={\"pf-u-w-100\"}\n                hasSelectableInput={true}\n                isSelected={value === c}\n                isSelectableRaised={true}\n                isDisabledRaised={isDisabled || c.status !== \"ready\"}\n                onSelectableInputChange={() => onChange(c)}\n              >\n                <CardTitle>{t(\"openshift_cluster\")}</CardTitle>\n                <CardBody>{c.id}</CardBody>\n                <CardFooter>\n                  {(() => {\n                    switch (c.status) {\n                      case \"ready\":\n                        return <OkIcon />;\n                      case \"provisioning\":\n                        return <Spinner size={\"sm\"} />;\n                      case \"failed\":\n                        return <ErrorCircleOIcon />;\n                    }\n                  })()}\n                  &nbsp;\n                  {c.status}\n                </CardFooter>\n              </Card>\n            </FlexItem>\n          ))}\n        </Flex>\n      </div>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-cloud-provider-option\"\n        name=\"cloud-provider\"\n        isDisabled={isDisabled}\n        validated={validated}\n        onChange={(value) => onChange(value as unknown as DedicatedCluster)}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_dedicated_cluster\")}\n          />,\n          clusters.map((c, index) => {\n            return <FormSelectOption key={index} value={c} label={c.id} />;\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n","import { FormGroup } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DedicatedClusterTilesProps } from \"./DedicatedClusterTiles\";\nimport { DedicatedClusterTiles } from \"./DedicatedClusterTiles\";\n\nexport type FieldDedicatedClusterProps = {\n  isValid: boolean;\n} & Omit<DedicatedClusterTilesProps, \"validated\">;\nexport const FieldDedicatedCluster: VoidFunctionComponent<\n  FieldDedicatedClusterProps\n> = ({ value, clusters, onChange, isDisabled, isValid }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const validated = !isValid ? \"error\" : \"default\";\n\n  return (\n    <FormGroup\n      label={t(\"cloud_provider\")}\n      fieldId=\"form-cloud-provider-option\"\n      validated={validated}\n      helperTextInvalid={t(\"common:required\")}\n      isRequired\n    >\n      <DedicatedClusterTiles\n        clusters={clusters}\n        value={value}\n        onChange={onChange}\n        isDisabled={isDisabled}\n        validated={validated}\n      />\n    </FormGroup>\n  );\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { FormEvent, VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { FieldInstanceNameProps, FieldSizeProps } from \"./components\";\nimport {\n  FieldAZ,\n  FieldInstanceName,\n  FieldSize,\n  FormAlerts,\n  InstanceInfo,\n  InstanceInfoSkeleton,\n  ModalAlertsDedicatedPlan,\n} from \"./components\";\nimport { FieldDedicatedCluster } from \"./components/FieldDedicatedCluster\";\nimport { useDedicatedPlanMachine } from \"./machines\";\n\nexport type DedicatedInstanceFormProps = {\n  formId: string;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n  subscriptionOptionsHref: string;\n};\n\nexport const DedicatedInstanceForm: VoidFunctionComponent<\n  DedicatedInstanceFormProps\n> = ({\n  formId,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n  subscriptionOptionsHref,\n}) => {\n  const { capabilities, selectedSize, error, onCreate } =\n    useDedicatedPlanMachine();\n\n  const onSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      onCreate();\n    },\n    [onCreate]\n  );\n\n  return (\n    <>\n      <ModalAlertsDedicatedPlan\n        instanceAvailability={capabilities.instanceAvailability}\n        onClickContactUs={onClickContactUs}\n      />\n\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <FormAlerts error={error} onClickContactUS={onClickContactUs} />\n          <Form onSubmit={onSubmit} id={formId}>\n            <ConnectedFieldInstanceName />\n            <ConnectedFieldCloudProvider />\n            <ConnectedFieldAZ />\n            <ConnectedFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          {selectedSize === undefined ? (\n            <InstanceInfoSkeleton\n              isTrial={false}\n              onClickQuickStart={onClickQuickStart}\n            />\n          ) : (\n            <InstanceInfo\n              isTrial={false}\n              trialDurationInHours={undefined}\n              ingress={selectedSize.ingress}\n              egress={selectedSize.egress}\n              storage={selectedSize.storage}\n              maxPartitions={selectedSize.maxPartitions}\n              connections={selectedSize.connections}\n              connectionRate={selectedSize.connectionRate}\n              messageSize={selectedSize.messageSize}\n              onClickQuickStart={onClickQuickStart}\n              streamingUnits={selectedSize.displayName}\n              billing={{\n                value: \"dedicated\",\n                subscriptionOptionsHref,\n                type: \"rh-only\",\n              }}\n            />\n          )}\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const ConnectedFieldInstanceName: VoidFunctionComponent = () => {\n  const {\n    form,\n    isNameTaken,\n    isNameInvalid,\n    isNameEmpty,\n    isNameError,\n    isFormEnabled,\n    setName,\n  } = useDedicatedPlanMachine();\n\n  const validity: FieldInstanceNameProps[\"validity\"] = (() => {\n    if (isNameTaken) {\n      return \"taken\";\n    } else if (isNameInvalid) {\n      return \"invalid\";\n    } else if (isNameEmpty && isNameError) {\n      return \"required\";\n    }\n    return \"valid\";\n  })();\n\n  return (\n    <FieldInstanceName\n      value={form.name || \"\"}\n      validity={validity}\n      isDisabled={!isFormEnabled}\n      onChange={setName}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudProvider: VoidFunctionComponent = () => {\n  const { form, capabilities, isClusterError, isFormEnabled, setCluster } =\n    useDedicatedPlanMachine();\n\n  const clusters = capabilities.availableClusters;\n\n  return (\n    <FieldDedicatedCluster\n      isValid={!isClusterError}\n      clusters={clusters}\n      value={form.cluster}\n      isDisabled={!isFormEnabled}\n      onChange={setCluster}\n    />\n  );\n};\n\nexport const ConnectedFieldAZ: VoidFunctionComponent = () => {\n  const { isFormEnabled } = useDedicatedPlanMachine();\n\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={!isFormEnabled}\n      onChange={() => false} // AZ is defined by the backend, we just visualize the value here\n    />\n  );\n};\n\nexport const ConnectedFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  const {\n    form,\n    sizes,\n    isSizeOverQuota,\n    isSizeDisabled,\n    isSizeError,\n    isSizeLoadingError,\n    isFormEnabled,\n    isLoadingSizes,\n    isLoading,\n    setSize,\n    remainingQuota,\n  } = useDedicatedPlanMachine();\n\n  return (\n    <FieldSize\n      value={form.size?.quota}\n      sizes={sizes}\n      remainingQuota={remainingQuota}\n      isDisabled={!isFormEnabled || sizes === undefined}\n      isLoading={isLoading || isLoadingSizes}\n      isError={isSizeError}\n      isLoadingError={isSizeLoadingError}\n      validity={\n        isSizeOverQuota ? \"out-of-quota\" : isSizeDisabled ? \"required\" : \"valid\"\n      }\n      onChange={setSize}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n","import {\n  Alert,\n  Button,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n} from \"@patternfly/react-core\";\nimport { OutlinedClockIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { ModalAlertsLoading, ModalAlertsSystemUnavailable } from \"./components\";\n\nimport \"./CreateKafkaInstance.css\";\nimport { DedicatedInstanceForm } from \"./DedicatedInstanceForm\";\nimport { LoadingForm } from \"./LoadingForm\";\nimport type { CreateDedicatedKafkaInstanceServices } from \"./machines\";\nimport {\n  CreateDedicatedKafkaInstanceProvider,\n  useCreateDedicatedKafkaInstance,\n} from \"./machines\";\n\nexport type CreateDedicatedKafkaInstanceProps =\n  ConnectedCreateDedicatedKafkaInstanceProps &\n    CreateDedicatedKafkaInstanceServices;\nexport const CreateDedicatedKafkaInstance: FunctionComponent<\n  CreateDedicatedKafkaInstanceProps\n> = ({\n  checkDedicatedQuota,\n  getDedicatedSizes,\n  fetchClusters,\n  onCreate,\n  ...props\n}) =>\n  props.isModalOpen ? (\n    <CreateDedicatedKafkaInstanceProvider\n      checkDedicatedQuota={checkDedicatedQuota}\n      getDedicatedSizes={getDedicatedSizes}\n      fetchClusters={fetchClusters}\n      onCreate={onCreate}\n    >\n      <ConnectedCreateDedicatedKafkaInstance {...props} />\n    </CreateDedicatedKafkaInstanceProvider>\n  ) : null;\n\nexport type ConnectedCreateDedicatedKafkaInstanceProps = {\n  /**\n   *\n   * Flag to show the modal\n   */\n  isModalOpen: boolean;\n\n  /**\n   * Set this to `true` on Storybook when there are multiple modals open at a time.\n   */\n  disableFocusTrap?: boolean;\n  /**\n   * The parent container to append the modal to. Defaults to document.body\n   */\n  appendTo?: () => HTMLElement;\n\n  /**\n   * A callback for when the cancel or close button are clicked.\n   */\n  onCancel: () => void;\n  onClickQuickStart: () => void;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickKafkaOverview: () => void;\n  subscriptionOptionsHref: string;\n};\nexport const ConnectedCreateDedicatedKafkaInstance: VoidFunctionComponent<\n  ConnectedCreateDedicatedKafkaInstanceProps\n> = ({\n  isModalOpen,\n  appendTo,\n  onClickQuickStart,\n  onCancel,\n  disableFocusTrap,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickKafkaOverview,\n  subscriptionOptionsHref,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const { isLoading, isAvailable, isSaving } =\n    useCreateDedicatedKafkaInstance();\n\n  const FORM_ID = \"create_kafka_instance_form\";\n\n  return (\n    <Modal\n      id=\"modalCreateKafka\"\n      variant={ModalVariant.large}\n      title={t(\"create_instance_title\")}\n      disableFocusTrap={disableFocusTrap}\n      isOpen={isModalOpen}\n      ouiaId=\"modal-create-kafka\"\n      onClose={onCancel}\n      appendTo={appendTo}\n      position=\"top\"\n      footer={\n        <Stack hasGutter={true}>\n          <StackItem>\n            <Alert\n              className=\"mas--CreateDedicatedKafkaInstance__creationTimeAlert\"\n              customIcon={<OutlinedClockIcon />}\n              variant=\"info\"\n              isInline\n              isPlain\n              title={t(\"instance_creation_time_alert\")}\n            />\n          </StackItem>\n          <StackItem>\n            <Button\n              key=\"submit\"\n              variant=\"primary\"\n              type=\"submit\"\n              form={FORM_ID}\n              spinnerAriaValueText={t(\"common:submitting_request\")}\n              isDisabled={isLoading || isSaving}\n              isLoading={isSaving}\n              data-testid=\"modalCreateKafka-buttonSubmit\"\n              ouiaId=\"button-create\"\n            >\n              {t(\"create_instance\")}\n            </Button>\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              onClick={onCancel}\n              data-testid=\"modalCreateKafka-buttonCancel\"\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      {(() => {\n        switch (true) {\n          case isLoading:\n            return (\n              <>\n                <ModalAlertsLoading />\n                <LoadingForm\n                  onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                  onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                  onClickQuickStart={onClickQuickStart}\n                />\n              </>\n            );\n          case isAvailable:\n            return (\n              <DedicatedInstanceForm\n                formId={FORM_ID}\n                onClickContactUs={onClickContactUs}\n                onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                onClickQuickStart={onClickQuickStart}\n                subscriptionOptionsHref={subscriptionOptionsHref}\n              />\n            );\n          default:\n            return (\n              <>\n                <ModalAlertsSystemUnavailable />\n                <LoadingForm\n                  onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n                  onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n                  onClickQuickStart={onClickQuickStart}\n                />\n              </>\n            );\n        }\n      })()}\n    </Modal>\n  );\n};\n","import { DropdownGroup } from \"@patternfly/react-core\";\nimport { ActionsColumn } from \"@patternfly/react-table\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type KafkaInstanceActionsProps = {\n  onDetails: () => void;\n  onConnection: () => void;\n  canOpenConnection: boolean;\n  canChangeOwner: boolean;\n  onChangeOwner: () => void;\n  canDelete: boolean;\n  onDelete: () => void;\n};\n\nexport const KafkaInstanceActions: VoidFunctionComponent<\n  KafkaInstanceActionsProps\n> = ({\n  onDetails,\n  onConnection,\n  canOpenConnection,\n  canChangeOwner,\n  onChangeOwner,\n  canDelete,\n  onDelete,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <ActionsColumn\n      rowData={hackZIndex}\n      items={[\n        {\n          customChild: (\n            <DropdownGroup\n              label={t(\"table.actions.view-instance-information\")}\n            />\n          ),\n        },\n        {\n          title: t(\"table.actions.details\"),\n          onClick: onDetails,\n        },\n        {\n          title: t(\"table.actions.connection\"),\n          ...(!canOpenConnection\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_see_connections\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onConnection,\n              }),\n        },\n        {\n          isSeparator: true,\n        },\n        {\n          title: t(\"table.actions.change-owner\"),\n          ...(!canChangeOwner\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_change_owner\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onChangeOwner,\n              }),\n        },\n        {\n          title: t(\"table.actions.delete\"),\n          ...(!canDelete\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_delete_kafka\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onDelete,\n              }),\n        },\n      ]}\n    />\n  );\n};\n\nconst hackZIndex = {\n  actionProps: {\n    style: { zIndex: 9999 },\n  },\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { KafkaInstanceActionsProps } from \"./KafkaInstanceActions\";\nimport { KafkaInstanceActions } from \"./KafkaInstanceActions\";\n\ntype Sections =\n  | \"dashboard\"\n  | \"topics\"\n  | \"consumer\"\n  | \"permissions\"\n  | \"settings\";\n\nexport type DataPlaneHeaderProps = {\n  instancesHref: string;\n  instanceName: string;\n  activeSection: Sections;\n  sectionsHref: { [key in Sections]: string };\n} & KafkaInstanceActionsProps;\n\nexport const DataPlaneHeader: VoidFunctionComponent<DataPlaneHeaderProps> = ({\n  instancesHref,\n  instanceName,\n  activeSection,\n  sectionsHref,\n  ...actionsProps\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        hasShadowBottom={true}\n      >\n        <Breadcrumb\n          ouiaId={\"breadcrumb\"}\n          className=\"pf-c-page__main-breadcrumb\"\n        >\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instancesHref}>{t(\"common:kafka_instance\")}</Link>\n            )}\n          />\n          <BreadcrumbItem isActive={true}>{instanceName}</BreadcrumbItem>\n        </Breadcrumb>\n        <Level>\n          <LevelItem>\n            <TextContent className={\"pf-u-p-md pf-u-p-lg-on-xl\"}>\n              <Text component=\"h1\">{instanceName}</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <KafkaInstanceActions {...actionsProps} />\n          </LevelItem>\n        </Level>\n        <Nav\n          variant=\"tertiary\"\n          data-testid=\"pageKafka-tabProperties\"\n          className=\"pf-u-px-sm-on-xl\"\n        >\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabDashboard\"\n              id=\"dashboard-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.dashboard\")}\n              ouiaId={\"tab-Dashboard\"}\n              isActive={activeSection === \"dashboard\"}\n            >\n              <Link to={sectionsHref[\"dashboard\"]}>\n                {t(\"dataPlaneNavigation.dashboard\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabTopics\"\n              id=\"topics-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.topics\")}\n              ouiaId={\"tab-Topics\"}\n              isActive={activeSection === \"topics\"}\n            >\n              <Link to={sectionsHref[\"topics\"]}>\n                {t(\"dataPlaneNavigation.topics\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabConsumers\"\n              id=\"consumer-groups-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.consumer_groups\")}\n              ouiaId={\"tab-Consumers\"}\n              isActive={activeSection === \"consumer\"}\n            >\n              <Link to={sectionsHref[\"consumer\"]}>\n                {t(\"dataPlaneNavigation.consumer_groups\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabPermissions\"\n              id=\"permissions-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.permissions\")}\n              ouiaId={\"tab-Permissions\"}\n              isActive={activeSection === \"permissions\"}\n            >\n              <Link to={sectionsHref[\"permissions\"]}>\n                {t(\"dataPlaneNavigation.permissions\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabSettings\"\n              id=\"settings-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.settings\")}\n              ouiaId={\"tab-Settings\"}\n              isActive={activeSection === \"settings\"}\n            >\n              <Link to={sectionsHref[\"settings\"]}>\n                {t(\"dataPlaneNavigation.settings\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n      </PageSection>\n    </>\n  );\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { KafkaInstanceActionsProps } from \"./KafkaInstanceActions\";\nimport { KafkaInstanceActions } from \"./KafkaInstanceActions\";\n\ntype Sections = \"consumer\" | \"messages\" | \"properties\" | \"schemas\";\n\nexport type DataPlaneTopicHeaderProps = {\n  instancesHref: string;\n  instanceName: string;\n  instanceDetailHref: string;\n  instanceTopicsHref: string;\n  topicName: string;\n  activeSection: Sections;\n  tabsHref: { [key in Sections]: string };\n} & KafkaInstanceActionsProps;\n\nexport const DataPlaneTopicHeader: VoidFunctionComponent<\n  DataPlaneTopicHeaderProps\n> = ({\n  instancesHref,\n  instanceName,\n  instanceDetailHref,\n  instanceTopicsHref,\n  topicName,\n  activeSection,\n  tabsHref,\n  ...actionsProps\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <Breadcrumb ouiaId={\"breadcrumb\"}>\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instancesHref}>{t(\"common:kafka_instance\")}</Link>\n            )}\n          />\n          <BreadcrumbItem\n            render={() => <Link to={instanceDetailHref}>{instanceName}</Link>}\n          />\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instanceTopicsHref}>\n                {t(\"dataPlaneNavigation.topics\")}\n              </Link>\n            )}\n          />\n          <BreadcrumbItem isActive={true}>{topicName}</BreadcrumbItem>\n        </Breadcrumb>\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <LevelItem>\n            <TextContent>\n              <Text component=\"h1\">{topicName}</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <KafkaInstanceActions {...actionsProps} />\n          </LevelItem>\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        className=\"pf-c-page__main-tabs\"\n        hasShadowBottom={true}\n      >\n        <Nav variant=\"tertiary\" className=\"pf-u-px-sm-on-xl\">\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.consumer_groups\")}\n              ouiaId={\"tab-Dashboard\"}\n              isActive={activeSection === \"consumer\"}\n            >\n              <Link to={tabsHref[\"consumer\"]}>\n                {t(\"dataPlaneTopicNavigation.consumer_groups\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.messages\")}\n              ouiaId={\"tab-Topics\"}\n              isActive={activeSection === \"messages\"}\n            >\n              <Link to={tabsHref[\"messages\"]}>\n                {t(\"dataPlaneTopicNavigation.messages\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.properties\")}\n              ouiaId={\"tab-Permissions\"}\n              isActive={activeSection === \"properties\"}\n            >\n              <Link to={tabsHref[\"properties\"]}>\n                {t(\"dataPlaneTopicNavigation.properties\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.schemas\")}\n              ouiaId={\"tab-Settings\"}\n              isActive={activeSection === \"schemas\"}\n            >\n              <Link to={tabsHref[\"schemas\"]}>\n                {t(\"dataPlaneTopicNavigation.schemas\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n      </PageSection>\n    </>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoDedicatedClustersProps = {\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoDedicatedClusters: VoidFunctionComponent<\n  EmptyStateNoDedicatedClustersProps\n> = ({ onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_dedicated_clusters_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_dedicated_clusters_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={onQuickstartGuide}\n      >\n        {t(\"empty_state_no_dedicated_clusters_prerequisite_button\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport { TableView } from \"@rhoas/app-services-ui-components\";\nimport type { DedicatedCluster } from \"ui-models/src/models/dedicated-cluster\";\nimport { useDedicatedClusterLabels } from \"../../hooks\";\nimport type { EmptyStateNoDedicatedClustersProps } from \"./components\";\nimport { EmptyStateNoDedicatedClusters } from \"./components\";\n\nconst Columns = [\"id\", \"status\"] as const;\n\nexport type DedicatedClustersProps<\n  T extends DedicatedCluster = DedicatedCluster\n> = {\n  clusters: Array<T> | undefined | null;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  \"itemCount\" | \"page\" | \"onPageChange\"\n> &\n  EmptyStateNoDedicatedClustersProps;\n\nexport const DedicatedClusters = <T extends DedicatedCluster>({\n  clusters,\n  itemCount,\n  page,\n  onPageChange,\n  onQuickstartGuide,\n}: DedicatedClustersProps<T>) => {\n  const labels = useDedicatedClusterLabels();\n  const breakpoint = \"lg\";\n\n  return (\n    <PageSection isFilled={true}>\n      <TableView\n        ariaLabel={\"TODO\"}\n        data={clusters}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"id\":\n                    return row.id;\n                  case \"status\":\n                    return row.status;\n                }\n              })()}\n            </Td>\n          );\n        }}\n        toolbarBreakpoint={breakpoint}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        emptyStateNoData={\n          <EmptyStateNoDedicatedClusters\n            onQuickstartGuide={onQuickstartGuide}\n          />\n        }\n        emptyStateNoResults={\n          <div>&bsp; {/* as users can't filter this is not needed */}</div>\n        }\n      />\n    </PageSection>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type { DedicatedClusterField } from \"ui-models/src/models/dedicated-cluster\";\n\nexport function useDedicatedClusterLabels() {\n  const { t } = useTranslation(\"cluster\");\n\n  const fields: {\n    [field in DedicatedClusterField]: string;\n  } = {\n    id: t(\"fields.id\"),\n    status: t(\"fields.status\"),\n    cloudProvider: t(\"fields.cloudProvider\"),\n    az: t(\"fields.az\"),\n    cloudRegion: t(\"fields.cloudRegion\"),\n    requiresPrivateNetwork: t(\"fields.requiresPrivateNetwork\"),\n  };\n  return {\n    fields,\n  };\n}\n","import type { DeleteModalProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  DeleteModal,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type DeleteKafkaInstanceProps = {\n  instanceName: string | undefined;\n} & Omit<\n  DeleteModalProps,\n  \"title\" | \"variant\" | \"confirmationValue\" | \"children\"\n>;\n\nexport const DeleteKafkaInstance: VoidFunctionComponent<\n  DeleteKafkaInstanceProps\n> = ({ instanceName, ...props }) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <DeleteModal\n      {...props}\n      variant={\"destructive\"}\n      title={t(\"delete_instance_title\")}\n      confirmationValue={instanceName}\n    >\n      <Trans\n        ns={\"kafka\"}\n        i18nKey={\"delete_instance_message\"}\n        components={[<strong />]}\n        values={{\n          instanceName,\n        }}\n      />\n    </DeleteModal>\n  );\n};\n","import type { I18nProviderProps } from \"@rhoas/app-services-ui-components\";\nimport { I18nProvider as UiComponentsI18nProvider } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\n\nexport const I18nProvider: FunctionComponent<\n  Omit<I18nProviderProps, \"resources\">\n> = ({ lng, debug, children }) => {\n  return (\n    <UiComponentsI18nProvider\n      lng={lng}\n      resources={{\n        en: {\n          common: () =>\n            import(\"@rhoas/app-services-ui-components/locales/en/common.json\"),\n          \"create-kafka-instance\": () =>\n            import(\"locales/en/create-kafka-instance.json\"),\n          kafka: () => import(\"locales/en/kafka.json\"),\n          \"kafkaoverview-v3\": () => import(\"locales/en/kafkaoverview-v3.json\"),\n          metrics: () => import(\"locales/en/metrics.json\"),\n          topic: () => import(\"locales/en/topic.json\"),\n          \"manage-kafka-permissions\": () =>\n            import(\"locales/en/manage-kafka-permissions.json\"),\n          \"create-topic\": () => import(\"locales/en/create-topic.json\"),\n          \"message-browser\": () => import(\"locales/en/message-browser.json\"),\n          \"connection-tab\": () => import(\"locales/en/connection-tab.json\"),\n          \"connection-tab-p1\": () =>\n            import(\"locales/en/connection-tab-p1.json\"),\n          cluster: () => import(\"locales/en/cluster.json\"),\n        },\n        it: {\n          common: () => Promise.resolve({ delete: \"Elimina\" }),\n        },\n      }}\n      debug={debug}\n    >\n      {children}\n    </UiComponentsI18nProvider>\n  );\n};\n","import { Alert } from \"@patternfly/react-core\";\nimport { differenceInHours } from \"date-fns\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate } from \"@rhoas/app-services-ui-components\";\n\ntype DetailsTabAlertProps = {\n  expiryDate: Date;\n};\n\nexport const DetailsTabAlert: FunctionComponent<DetailsTabAlertProps> = ({\n  expiryDate,\n}) => {\n  const hoursLeft = expiryDate ? differenceInHours(expiryDate, Date.now()) : 0;\n  return (\n    <Alert\n      variant={\n        hoursLeft > 24\n          ? \"info\"\n          : hoursLeft < 24 && hoursLeft > 5\n          ? \"warning\"\n          : \"danger\"\n      }\n      title={\n        <Trans\n          i18nKey=\"kafka:will_expire\"\n          components={{\n            time: <FormatDate date={expiryDate} format=\"expiration\" />,\n          }}\n        />\n      }\n      aria-live=\"polite\"\n      isInline\n      className=\"pf-u-mb-lg\"\n    />\n  );\n};\n","import {\n  Skeleton,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from \"@patternfly/react-core\";\nimport { FormatDate, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { ReactChild, VoidFunctionComponent } from \"react\";\nimport type { MarketplaceSubscription, Plan } from \"ui-models/src/models/kafka\";\nimport type { Bytes } from \"../../../../../ui-models/src/types\";\nimport { DetailsTabAlert } from \"./DetailsTabAlert\";\n\n/**\n * All fields marked as accepting undefined will show a skeleton loader until the value is available.\n * This is to support fetching the data from different APIs.\n */\nexport type KafkaDetailsTabProps = {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n  expiryDate: Date | undefined;\n  owner: string;\n  provider: string;\n  region: string;\n  instanceType: Plan;\n  size: string | undefined;\n  ingress: number | undefined;\n  egress: number | undefined;\n  storage: Bytes | undefined;\n  maxPartitions: number | undefined;\n  connections: number | undefined;\n  connectionRate: number | undefined;\n  messageSize: Bytes | undefined;\n  billing: \"prepaid\" | MarketplaceSubscription | \"dedicated\" | undefined;\n  kafkaVersion: string;\n};\n\nexport const KafkaDetailsTab: VoidFunctionComponent<KafkaDetailsTabProps> = ({\n  id,\n  createdAt,\n  updatedAt,\n  owner,\n  provider,\n  region,\n  expiryDate,\n  instanceType,\n  size,\n  ingress,\n  egress,\n  storage,\n  maxPartitions,\n  connections,\n  connectionRate,\n  messageSize,\n  billing,\n  kafkaVersion,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const renderTextListItem = (title: string, value: ReactChild | undefined) => (\n    <>\n      <TextListItem component={TextListItemVariants.dt}>{title}</TextListItem>\n      {value ? (\n        <TextListItem component={TextListItemVariants.dd}>{value}</TextListItem>\n      ) : (\n        <Skeleton\n          width=\"50%\"\n          screenreaderText={t(\"common:skeleton_loader_screenreader_text\", {\n            contentName: title,\n          })}\n        />\n      )}\n    </>\n  );\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      {instanceType !== \"standard\" && expiryDate && (\n        <DetailsTabAlert expiryDate={expiryDate} />\n      )}\n      <TextContent>\n        <TextList component={TextListVariants.dl}>\n          {instanceType === \"standard\" &&\n            renderTextListItem(\n              t(\"common:size\"),\n              size\n                ? t(\"create-kafka-instance:streaming_size_value\", {\n                    value: size,\n                  })\n                : undefined\n            )}\n          {renderTextListItem(\n            t(\"ingress\"),\n            ingress\n              ? t(\"create-kafka-instance:ingress_value\", {\n                  value: ingress,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"egress\"),\n            egress\n              ? t(\"create-kafka-instance:egress_value\", {\n                  value: egress,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"storage\"),\n            storage?.value\n              ? t(\"create-kafka-instance:storage_value\", {\n                  value: storage.value,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"partitions\"),\n            maxPartitions\n              ? t(\"create-kafka-instance:partitions_value\", {\n                  value: maxPartitions,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"client_connections\"),\n            connections\n              ? t(\"create-kafka-instance:client_connections_value\", {\n                  value: connections,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"connection_rate\"),\n            connectionRate\n              ? t(\"create-kafka-instance:connection_rate_value\", {\n                  value: connectionRate,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"message_size\"),\n            messageSize?.value\n              ? t(\"create-kafka-instance:message_size_value\", {\n                  value: messageSize.value,\n                })\n              : undefined\n          )}\n\n          {renderTextListItem(t(\"common:id\"), id)}\n          {renderTextListItem(t(\"common:kafka_version\"), kafkaVersion)}\n          {renderTextListItem(t(\"common:owner\"), owner)}\n          {renderTextListItem(\n            t(\"common:time_created\"),\n            <FormatDate date={createdAt} format={\"long\"} />\n          )}\n          {renderTextListItem(\n            t(\"common:time_updated\"),\n            <FormatDate date={updatedAt} format={\"long\"} />\n          )}\n          {renderTextListItem(t(\"common:cloud_provider\"), provider)}\n          {renderTextListItem(t(\"common:region\"), region)}\n          {renderTextListItem(\n            t(\"create-kafka-instance:billing.field_label\"),\n            (() => {\n              if (billing === undefined) {\n                return undefined;\n              } else if (billing === \"prepaid\") {\n                return t(\"create-kafka-instance:billing.prepaid_option\");\n              } else if (billing === \"dedicated\") {\n                return t(\"create-kafka-instance:billing.dedicated_option\");\n              } else {\n                switch (billing.marketplace) {\n                  case \"aws\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_aws\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"azure\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_azure\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"gcp\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_gcp\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"rhm\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_rh\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                }\n              }\n            })()\n          )}\n        </TextList>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const SuspendedConnection: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.small}>\n      <EmptyStateIcon icon={ExclamationTriangleIcon} color={\"#f0ab00\"} />\n      <Title headingLevel={\"h1\"} size={TitleSizes.lg}>\n        {t(\"suspend_empty_state_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"suspend_empty_state_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  ClipboardCopy,\n  ExpandableSection,\n  Label,\n  Popover,\n  Skeleton,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport {\n  ExternalLink,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SuspendedConnection } from \"./SuspendedConnection\";\n\nexport type KafkaConnectionTabP2Props = {\n  isKafkaSuspended?: boolean;\n  isKafkaPending?: boolean;\n  externalServer?: string;\n  tokenEndPointUrl: string;\n  linkToServiceAccount: string;\n  linkToAccessTab: string;\n  adminAPIUrl: string | undefined;\n  showCreateServiceAccountModal: () => void;\n  kafkaFleetManagerUrl: string;\n};\n\nexport const KafkaConnectionTabP2: FunctionComponent<\n  KafkaConnectionTabP2Props\n> = ({\n  isKafkaSuspended,\n  isKafkaPending,\n  externalServer,\n  tokenEndPointUrl,\n  linkToServiceAccount,\n  linkToAccessTab,\n  adminAPIUrl,\n  kafkaFleetManagerUrl,\n  showCreateServiceAccountModal,\n}) => {\n  const { t } = useTranslation();\n\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n\n  const onChangeExpandedSection = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return isKafkaSuspended ? (\n    <SuspendedConnection />\n  ) : (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:drawer_resource_tab_body_description_1\")}\n        </Text>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:bootstrap_server\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:bootstrap_server_description\")}\n        </Text>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            data-testid=\"drawerStreams-copyBootstrapURL\"\n            textAriaLabel={t(\"connection-tab:bootstrap_server\")}\n            isReadOnly\n          >\n            {externalServer}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:service_accounts_small\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\n                \"connection-tab:create_service_account_to_generate_credentials\"\n              }\n              components={{\n                value: (\n                  <Link\n                    to={linkToServiceAccount}\n                    data-testid=\"tableStreams-linkKafka\"\n                  ></Link>\n                ),\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <Button\n        variant={ButtonVariant.secondary}\n        isInline\n        onClick={showCreateServiceAccountModal}\n        data-testid=\"drawerStreams-buttonCreateServiceAccount\"\n      >\n        {t(\"connection-tab:create_service_account\")}\n      </Button>\n      <TextContent className=\"pf-u-pt-sm\">\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\"connection-tab:current_instance\"}\n              components={{\n                value: <Link to={linkToAccessTab}></Link>,\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <ExpandableSection\n          toggleContent={\n            <div className=\"pf-c-content\">\n              <Text component={TextVariants.h3} className={\"pf-c-content\"}>\n                {t(\"connection-tab:rest_api_header\")}\n              </Text>\n            </div>\n          }\n          isExpanded={isExpanded}\n          onToggle={onChangeExpandedSection}\n          className=\"pf-u-mt-lg\"\n        >\n          <TextContent className=\"pf-u-pb-sm\">\n            <Text component={TextVariants.small}>\n              {t(\"connection-tab:rest_api_description\")}\n            </Text>\n          </TextContent>\n          <TextContent>\n            <strong>\n              {t(\"connection-tab:kafka_instance_url_label\")}\n              <Popover\n                headerContent={\n                  <div>\n                    {t(\"connection-tab:kafka_instance_url_popover_label\")}\n                  </div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"connection-tab:kafka_instance_url_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkainstance?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kafka-admin-rest.yaml%3Fref%3Ddoc-portal&readonly=true\"\n                          />,\n                          <ExternalLink\n                            testId={\"customerPortal-link\"}\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_openshift_application_services/1/guide/2409253a-45ee-470e-bdc9-5db4bfcf9d0f\"\n                            className={\"pf-u-ml-xs\"}\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\n                    \"connection-tab:kafka_instance_url_button_aria_label\"\n                  )}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {adminAPIUrl ? (\n              <ClipboardCopy\n                textAriaLabel={t(\"connection-tab:kafka_instance_url_label\")}\n                isReadOnly\n              >\n                {adminAPIUrl}\n              </ClipboardCopy>\n            ) : (\n              <Skeleton fontSize=\"2xl\" />\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"connection-tab:kafka_instance_url_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n          <TextContent className=\"pf-u-mt-md\">\n            <strong>\n              {t(\"connection-tab:kafka_management_url\")}\n              <Popover\n                headerContent={\n                  <div>\n                    {t(\"connection-tab:kafka_management_popover_header\")}\n                  </div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"connection-tab:kafka_management_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkamgmt?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kas-fleet-manager.yaml%3Fref%3Ddoc-portal\"\n                          />,\n                          <ExternalLink\n                            testId={\"customerPortal-link\"}\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_openshift_application_services/1/guide/2409253a-45ee-470e-bdc9-5db4bfcf9d0f\"\n                            className={\"pf-u-ml-xs\"}\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\n                    \"connection-tab:kafka_management_button_aria_label\"\n                  )}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {isKafkaPending ? (\n              <Skeleton fontSize=\"2xl\" />\n            ) : (\n              <ClipboardCopy\n                textAriaLabel={t(\"connection-tab:kafka_management_url\")}\n                isReadOnly\n              >\n                {kafkaFleetManagerUrl}\n              </ClipboardCopy>\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"connection-tab:kafka_management_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n        </ExpandableSection>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:authentication_method\")}\n        </Text>\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"connection-tab:sasl_oauthbearer\")}{\" \"}\n          <Label color=\"green\">{t(\"connection-tab:recommended\")}</Label>\n          <Popover\n            aria-label={t(\"connection-tab:sasl_oauthbearer\")}\n            bodyContent={\n              <div>{t(\"connection-tab:sasl_oauthbearer_popover_content\")}</div>\n            }\n          >\n            <Button\n              variant={ButtonVariant.plain}\n              aria-label={t(\"connection-tab:more_info_about_sasl_oauthbearer\")}\n            >\n              <HelpIcon />\n            </Button>\n          </Popover>\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:sasl_oauthbearer_description\")}\n        </Text>\n        <strong>{t(\"connection-tab:token_endpoint_url\")}</strong>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            textAriaLabel={t(\"connection-tab:token_endpoint_url\")}\n            isReadOnly\n          >\n            {tokenEndPointUrl}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"connection-tab:sasl_plain\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:sasl_plain_description\")}\n        </Text>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  ClipboardCopyButton,\n  CodeBlock,\n  CodeBlockAction,\n  CodeBlockCode,\n  ExpandableSection,\n  ExpandableSectionToggle,\n} from \"@patternfly/react-core\";\nimport { useEffect, useState } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type ClientType = \"java\" | \"python\" | \"quarkus\" | \"springboot\";\n\nexport type SampleCodeSnippetProps = {\n  expandableCode?: string;\n  codeBlockCode: string;\n  codeSnippet?: ClientType;\n};\n\nexport const SampleCodeSnippet: VoidFunctionComponent<\n  SampleCodeSnippetProps\n> = ({ expandableCode, codeBlockCode, codeSnippet }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const [copied, setCopied] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsExpanded(false);\n  }, [codeSnippet]);\n\n  const clipboardCopyFunc = (_event: any, text: string) => {\n    navigator.clipboard\n      .writeText(text.toString())\n      .then(() => {\n        setCopied(true);\n      })\n      .catch(() => {\n        setCopied(false);\n      });\n  };\n\n  const onToggle = (isExpanded: boolean) => {\n    setIsExpanded(isExpanded);\n  };\n\n  const copyCode = expandableCode\n    ? codeBlockCode + \"\\n\" + expandableCode\n    : codeBlockCode;\n\n  const actions = (\n    <CodeBlockAction>\n      <ClipboardCopyButton\n        id=\"basic-copy-button\"\n        textId=\"code-content\"\n        aria-label=\"Copy to clipboard\"\n        exitDelay={600}\n        maxWidth=\"110px\"\n        variant=\"plain\"\n        onClick={(e) => clipboardCopyFunc(e, copyCode)}\n      >\n        {copied ? \"Successfully copied to clipboard!\" : \"Copy to clipboard\"}\n      </ClipboardCopyButton>\n    </CodeBlockAction>\n  );\n\n  return (\n    <CodeBlock actions={actions}>\n      <CodeBlockCode id=\"code-content\">\n        {codeBlockCode}\n\n        <ExpandableSection\n          isExpanded={isExpanded}\n          isDetached\n          contentId=\"code-block-expand\"\n        >\n          {expandableCode}\n        </ExpandableSection>\n      </CodeBlockCode>\n      {expandableCode ? (\n        <ExpandableSectionToggle\n          isExpanded={isExpanded}\n          onToggle={onToggle}\n          contentId=\"code-block-expand\"\n          direction=\"up\"\n        >\n          {isExpanded ? \"Show Less\" : \"Show More\"}\n        </ExpandableSectionToggle>\n      ) : null}\n    </CodeBlock>\n  );\n};\n","export const javaConfigCodeBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `package org.example;\nimport org.apache.kafka.clients.producer.ProducerConfig;  \nimport java.util.Properties;\n    \npublic class KafkaConfig {\n    \n    static Properties properties() {\n    \n        String kafkaHost = \"${kafkaBootstrapUrl}\";\n        String rhoasClientID = \"<client_id>\";\n        String rhoasClientSecret = \"<client_secret>\";\n        String rhoasOauthTokenUrl = \"${tokenEndpointUrl}\";`;\n};\n\nexport const javaConfigExpandabledBlock = `\n        var properties= new Properties();\n\n        properties.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, kafkaHost);\n        properties.setProperty(\"security.protocol\", \"SASL_SSL\");\n        properties.setProperty(\"sasl.mechanism\", \"OAUTHBEARER\");\n\n        properties.setProperty(\"sasl.jaas.config\", \"org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId=\\\\\"\" + rhoasClientID + \"\\\\\" clientSecret=\\\\\"\" + rhoasClientSecret + \"\\\\\" oauth.token.endpoint.uri=\\\\\"\" + rhoasOauthTokenUrl + \"\\\\\";\");\n\n        properties.setProperty(\"sasl.login.callback.handler.class\", \"org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler\");\n        properties.setProperty(\"sasl.oauthbearer.token.endpoint.url\", rhoasOauthTokenUrl);\n        properties.setProperty(\"sasl.oauthbearer.scope.claim.name\", \"api.iam.service_accounts\");\n\n        return properties;\n    }\n}`;\n\nexport const javaProducerCodeBlock = `package org.example;\n \nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.clients.producer.ProducerRecord;\nimport org.apache.kafka.clients.producer.KafkaProducer;\nimport org.apache.kafka.common.serialization.StringSerializer;\n \npublic class ProducerExample {\n \n   public static void main(String[] args) {`;\n\nexport const javaProducerExpandableBlock = `\n   //Creating producer properties\n   var properties= KafkaConfig.properties();\n   properties.setProperty(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n   properties.setProperty(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n\n   KafkaProducer<String,String> producer= new KafkaProducer<String,String>(properties);\n\n   producer.send(new ProducerRecord<>(<\"topic\">, \"Test Message\"));\n   producer.flush();\n   producer.close();\n  }\n}`;\n\nexport const javaConsumerCodeBlock = `package org.example;\n \nimport java.util.Arrays;\n\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.clients.consumer.KafkaConsumer;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.apache.kafka.clients.consumer.ConsumerRecord;\nimport org.apache.kafka.clients.consumer.ConsumerRecords;\nimport java.time.Duration;`;\n\nexport const javaConsumerExpandableBlock = `\npublic class ConsumerExample {\n\n    public static void main(String[] args) {\n\n        var properties= KafkaConfig.properties();\n\n        properties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n        properties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n        properties.setProperty(ConsumerConfig.GROUP_ID_CONFIG,\"test_group_2\");\n        properties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n\n        KafkaConsumer<String,String> consumer = new KafkaConsumer<String,String>(properties);\n\n        //Subscribing\n        consumer.subscribe(Arrays.asList(\"<topic>\"));\n\n        //polling\n        while(true){\n            ConsumerRecords<String,String> records=consumer.poll(Duration.ofMillis(100));\n            for(ConsumerRecord<String,String> record: records) {\n                System.out.println(\"Key: \"+ record.key() + \", Value:\" +record.value());\n                System.out.println(\"Partition:\" + record.partition()+\",Offset:\"+record.offset());\n            }\n        }\n    }\n}`;\n\nexport const pythonConfigCodeBlock = (tokenEndpointUrl: string) => {\n  return `import time\nimport requests\n    \ndef _get_token(config):\n    payload = {\"grant_type\": \"client_credentials\", \"scope\": \"api.iam.service_accounts\"}\n    resp = requests.post(\n        \"${tokenEndpointUrl}\",\n        auth=(\n            <client_id>,\n            <client_secret>,\n        ),\n        data=payload,\n    )`;\n};\n\nexport const pythonConfigExpandabledBlock = (kafkaBootstrapUrl: string) => {\n  return `\n    token = resp.json()\n    return token[\"access_token\"], time.time() + float(token[\"expires_in\"])\n    \n    common_config = {\n    'bootstrap.servers': \"${kafkaBootstrapUrl}\",\n    'security.protocol': 'SASL_SSL',\n    'sasl.mechanisms': 'OAUTHBEARER',\n    'oauth_cb': _get_token,\n    }\n    \n    topic=<topic>`;\n};\n\nexport const pythonProducer = `from confluent_kafka import Producer\n \nproducer = Producer(common_config)\n \nproducer.produce(topic=<topic>, value=b\"Sample Message\")\nproducer.flush()`;\n\nexport const pythonConsumerCodeBlock = `from confluent_kafka import Consumer\n \nconsumer_config = {\n    \"group.id\": \"test-group\",\n    'session.timeout.ms': 6000,\n    'auto.offset.reset': 'earliest',\n}\n\nconsumer = Consumer({ **consumer_config, **common_config })\n\nconsumer.subscribe([<topic>])`;\n\nexport const pythonConsumerExpandableBlock = `while True:\ntry:\n    msg = consumer.poll(1.0)\n    if msg is None:\n        continue\n\n    print(msg.value())\nexcept KeyboardInterrupt:\n    break\n\nconsumer.close()`;\n\nexport const quarkusConfigCodeBlock = `# Quarkus config\nquarkus.ssl.native=true\n\n# Configure the Kafka sink (we write to it)\nmp.messaging.outgoing.generated-price.connector=smallrye-kafka\nmp.messaging.outgoing.generated-price.topic=<topic>\nmp.messaging.outgoing.generated-price.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer\n\n# Configure the Kafka source (we read from it)\nmp.messaging.incoming.prices.connector=smallrye-kafka\nmp.messaging.incoming.prices.topic=<topic>\nmp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer`;\n\nexport const quarkusConfigExpandableBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `\n# Configure docker config\nquarkus.container-image.builder=jib\nquarkus.kubernetes.deployment-target=kubernetes\nquarkus.container-image.build=false\nquarkus.container-image.push=false\n    \n## dev profile using user defined environment variables that uses SASL/OAUTHBEARER\n## ./mvnw quarkus:dev\n## ./mvnw package -Dquarkus.profile=dev\n    \n%dev.kafka.bootstrap.servers=\\${\"${kafkaBootstrapUrl}\"}\n%dev.kafka.security.protocol=SASL_SSL\n    \n%dev.kafka.sasl.mechanism=OAUTHBEARER\n%dev.kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \\\\\n    oauth.client.id=\"\\${<client_id>}\" \\\\\n    oauth.client.secret=\"\\${<client_secret>}\" \\\\\n    oauth.token.endpoint.uri=\"\\${\"${tokenEndpointUrl}\"}\" ;\n%dev.kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler`;\n};\n\nexport const quarkusProducerCodeBlock = `package org.acme.kafka;\nimport java.time.Duration;\nimport java.util.Random;\n\nimport javax.enterprise.context.ApplicationScoped;\n\nimport io.smallrye.mutiny.Multi;\nimport org.eclipse.microprofile.reactive.messaging.Outgoing;`;\n\nexport const quarkusProducerExpandableBlock = `\n/**\n* A bean producing random prices every 5 seconds.\n* The prices are written to a Kafka topic (prices). The Kafka configuration is specified in the application configuration.\n*/\n@ApplicationScoped\npublic class PriceGenerator {\n\n   private Random random = new Random();\n\n   @Outgoing(\"generated-price\")\n   public Multi<Integer> generate() {\n       return Multi.createFrom().ticks().every(Duration.ofSeconds(5))\n               .onOverflow().drop()\n               .map(tick -> random.nextInt(100));\n   }\n\n}`;\n\nexport const quarkusConsumerCodeBlock = `package org.acme.kafka;\nimport javax.enterprise.context.ApplicationScoped;\n\nimport org.eclipse.microprofile.reactive.messaging.Acknowledgment;\nimport org.eclipse.microprofile.reactive.messaging.Incoming;\nimport org.eclipse.microprofile.reactive.messaging.Outgoing;\n\nimport io.smallrye.reactive.messaging.annotations.Broadcast;\n\n/**\n * A bean consuming data from the \"prices\" Kafka topic and applying some conversion.\n * The result is pushed to the \"my-data-stream\" stream which is an in-memory stream.\n */\n@ApplicationScoped`;\n\nexport const quarkusConsumerExpandableBlock = `public class PriceConverter {\n\n    private static final double CONVERSION_RATE = 0.88;\n\n    // Consume from the \\`prices\\` channel and produce to the \\`my-data-stream\\` channel\n    @Incoming(\"prices\")\n    @Outgoing(\"my-data-stream\")\n    // Send to all subscribers\n    @Broadcast\n    // Acknowledge the messages before calling this method.\n    @Acknowledgment(Acknowledgment.Strategy.PRE_PROCESSING)\n    public double process(int priceInUsd) {\n        return priceInUsd * CONVERSION_RATE;\n    }\n\n}`;\n\nexport const springBootConfigCodeBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `package com.example.kafkaconfig;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class KafkaConfig {\n\n   public static Map<String, Object> Config() {\n\n       Map<String, Object> config = new HashMap<>();\n\n       String kafkaHost = \"${kafkaBootstrapUrl}\";\n       String rhoasClientID = \"<client_id>\";\n       String rhoasClientSecret = \"<client_secret>\";\n       String rhoasOauthTokenUrl = \"${tokenEndpointUrl}\";`;\n};\n\nexport const springBootConfigExpandableBlock = `\n    config.put(\"bootstrap.servers\", kafkaHost);\n\n    config.put(\"security.protocol\", \"SASL_SSL\");\n    config.put(\"sasl.mechanism\", \"OAUTHBEARER\");\n\n    config.put(\"sasl.jaas.config\", \"org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId=\\\\\"\" + rhoasClientID + \"\\\\\" clientSecret=\\\\\"\" + rhoasClientSecret + \"\\\\\" oauth.token.endpoint.uri=\\\\\"\" + rhoasOauthTokenUrl + \"\\\\\";\");\n    config.put(\"sasl.login.callback.handler.class\", \"org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler\");\n    config.put(\"sasl.oauthbearer.token.endpoint.url\", rhoasOauthTokenUrl);\n    config.put(\"sasl.oauthbearer.scope.claim.name\", \"api.iam.service_accounts\");\n\n    return config;\n   }\n}`;\n\nexport const springBootProducerCodeBlock = `package com.example.kafkademo;\nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.common.serialization.StringSerializer;\nimport org.springframework.boot.ApplicationRunner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.kafka.core.DefaultKafkaProducerFactory;\nimport org.springframework.kafka.core.KafkaTemplate;\nimport org.springframework.kafka.core.ProducerFactory;\nimport com.example.kafkaconfig.KafkaConfig;\n\nimport java.util.Map;`;\n\nexport const springBootProducerExpandableBlock = `\n@SpringBootApplication\npublic class KafkaProducerExample {\n\n  public static void main(String[] args) throws Exception {\n    SpringApplication.run(KafkaProducerExample.class, args);\n  }\n\n  @Bean\n  public ProducerFactory<String, String> producerFactory() {\n    Map<String, Object> config = KafkaConfig.Config();\n\n    config.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n    config.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n\n    return new DefaultKafkaProducerFactory<String, String>(config);\n  }\n\n  @Bean\n  public KafkaTemplate<String, String> kafkaTemplate() {\n    return new KafkaTemplate<>(producerFactory());\n  }\n\n  @Bean\n  public ApplicationRunner runner(KafkaTemplate<String, String> template) {\n    return args -> {\n      template.send(<\"topic\">, \"Test Message\");\n    };\n  }\n\n}`;\n\nexport const springBootListenerCodeBlock = `package com.example.kafkaconsumer.listener;\n\nimport com.example.kafkaconfig.KafkaConfig;\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.kafka.annotation.KafkaListener;\nimport org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;\nimport org.springframework.kafka.core.ConsumerFactory;\nimport org.springframework.kafka.core.DefaultKafkaConsumerFactory;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Map;`;\n\nexport const springBootListenerExpandableBlock = `@Component\npublic class Listener {\n\n    @KafkaListener(topics = <\"topic\">,\n            containerFactory = \"concurrentKafkaListenerContainerFactory\",\n            groupId = \"test_group\")\n\n    // Method\n    public void consume(String message)\n    {\n        // Print statement\n        System.out.println(message);\n    }\n}`;\n\nexport const springBootConsumerConfigCodeBlock = `package com.example.kafkaconsumer.config;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport com.example.kafkaconfig.KafkaConfig;\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.kafka.annotation.EnableKafka;\nimport org.springframework.kafka.core.ConsumerFactory;\nimport org.springframework.kafka.core.DefaultKafkaConsumerFactory;\nimport org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;`;\n\nexport const springBootConsumerConfigExpandableBlock = `// Annotations\n@EnableKafka\n@Configuration\n\npublic class KafkaConsumerConfig {\n\n    @Bean\n    public ConsumerFactory<String, String> consumerFactory() {\n        Map<String, Object> config = KafkaConfig.Config();\n\n        config.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\n        config.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\n\n        return new DefaultKafkaConsumerFactory<>(config);\n    }\n\n    @Bean\n    public ConcurrentKafkaListenerContainerFactory concurrentKafkaListenerContainerFactory() {\n        ConcurrentKafkaListenerContainerFactory<\n                String, String> factory\n                = new ConcurrentKafkaListenerContainerFactory<>();\n        factory.setConsumerFactory(consumerFactory());\n        return factory;\n    }\n}`;\n\nexport const springBootConsumerExampleCodeBlock = `\npackage com.example.kafkaconsumer;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;`;\n\nexport const springBootConsumerExampleExpandableBlock = `\n@SpringBootApplication\npublic class KafkaConsumerExample {\n\n    public static void main(String[] args) {\n        SpringApplication.run(KafkaConsumerExample.class, args);\n    }\n\n}`;\n","import {\n  TextContent,\n  TextVariants,\n  Text,\n  ToggleGroup,\n  ToggleGroupItem,\n} from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { SampleCodeSnippet } from \"./SampleCodeSnippet\";\nimport {\n  javaConfigCodeBlock,\n  javaConfigExpandabledBlock,\n  javaConsumerCodeBlock,\n  javaConsumerExpandableBlock,\n  javaProducerCodeBlock,\n  javaProducerExpandableBlock,\n  pythonConfigCodeBlock,\n  pythonConfigExpandabledBlock,\n  pythonConsumerCodeBlock,\n  pythonConsumerExpandableBlock,\n  pythonProducer,\n  quarkusConfigCodeBlock,\n  quarkusConfigExpandableBlock,\n  quarkusConsumerCodeBlock,\n  quarkusConsumerExpandableBlock,\n  quarkusProducerCodeBlock,\n  quarkusProducerExpandableBlock,\n  springBootConfigCodeBlock,\n  springBootConfigExpandableBlock,\n  springBootConsumerConfigCodeBlock,\n  springBootConsumerConfigExpandableBlock,\n  springBootConsumerExampleCodeBlock,\n  springBootConsumerExampleExpandableBlock,\n  springBootListenerCodeBlock,\n  springBootListenerExpandableBlock,\n  springBootProducerCodeBlock,\n  springBootProducerExpandableBlock,\n} from \"./CodeSnippets\";\n\nexport type ClientType = \"java\" | \"python\" | \"quarkus\" | \"springboot\";\n\nexport type KafkaSampleCodeProps = {\n  kafkaBootstrapUrl: string;\n  tokenEndpointUrl: string;\n};\n\nexport const KafkaSampleCode: VoidFunctionComponent<KafkaSampleCodeProps> = ({\n  kafkaBootstrapUrl,\n  tokenEndpointUrl,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const [clientSelect, setClientSelect] = useState<ClientType>(\"java\");\n\n  const clientProvider: { [provider in ClientType]: string } = {\n    java: t(\"sample_code.clients.java\"),\n    python: t(\"sample_code.clients.python\"),\n    quarkus: t(\"sample_code.clients.quarkus\"),\n    springboot: t(\"sample_code.clients.spring_boot\"),\n  };\n\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.code_snippet_description_1\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.code_snippet_description_2\")}\n        </Text>\n        <ToggleGroup>\n          <ToggleGroupItem\n            text={clientProvider[\"java\"]}\n            value=\"java\"\n            buttonId=\"java\"\n            isSelected={clientSelect === \"java\"}\n            onChange={() => setClientSelect(\"java\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"python\"]}\n            value=\"python\"\n            buttonId=\"python\"\n            isSelected={clientSelect === \"python\"}\n            onChange={() => setClientSelect(\"python\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"quarkus\"]}\n            value=\"quarkus\"\n            buttonId=\"quarkus\"\n            isSelected={clientSelect === \"quarkus\"}\n            onChange={() => setClientSelect(\"quarkus\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"springboot\"]}\n            value=\"springboot\"\n            buttonId=\"springboot\"\n            isSelected={clientSelect === \"springboot\"}\n            onChange={() => setClientSelect(\"springboot\")}\n          />\n        </ToggleGroup>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_configuration_code\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.sample_configuration_code_description\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.bracket_text\")}\n        </Text>\n        {(() => {\n          switch (clientSelect) {\n            case \"java\":\n              return (\n                <SampleCodeSnippet\n                  codeBlockCode={javaConfigCodeBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  expandableCode={javaConfigExpandabledBlock}\n                  codeSnippet={clientSelect}\n                />\n              );\n            case \"python\":\n              return (\n                <SampleCodeSnippet\n                  codeBlockCode={pythonConfigCodeBlock(tokenEndpointUrl)}\n                  expandableCode={pythonConfigExpandabledBlock(\n                    kafkaBootstrapUrl\n                  )}\n                  codeSnippet={clientSelect}\n                />\n              );\n            case \"quarkus\":\n              return (\n                <SampleCodeSnippet\n                  codeBlockCode={quarkusConfigCodeBlock}\n                  expandableCode={quarkusConfigExpandableBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  codeSnippet={clientSelect}\n                />\n              );\n            case \"springboot\":\n              return (\n                <SampleCodeSnippet\n                  codeBlockCode={springBootConfigCodeBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  expandableCode={springBootConfigExpandableBlock}\n                  codeSnippet={clientSelect}\n                />\n              );\n            default:\n              return null;\n          }\n        })()}\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_producer_code\")}\n        </Text>\n        {clientSelect === \"quarkus\" ? (\n          <>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.sample_producer_code_quarkus_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={quarkusProducerCodeBlock}\n              expandableCode={quarkusProducerExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n          </>\n        ) : (\n          <>\n            <Text component={TextVariants.small}>\n              <Trans\n                ns={\"kafka\"}\n                i18nKey={\"sample_code.sample_producer_code_description\"}\n                values={{\n                  client_type: clientProvider[clientSelect],\n                }}\n              />\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.bracket_text\")}\n            </Text>\n            {(() => {\n              switch (clientSelect) {\n                case \"java\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={javaProducerCodeBlock}\n                      expandableCode={javaProducerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"python\":\n                  return <SampleCodeSnippet codeBlockCode={pythonProducer} />;\n                case \"springboot\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={springBootProducerCodeBlock}\n                      expandableCode={springBootProducerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                default:\n                  return null;\n              }\n            })()}\n          </>\n        )}\n\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_consumer_code\")}\n        </Text>\n        {clientSelect === \"springboot\" ? (\n          <>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_sample_consumer_code_description\")}\n            </Text>\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_consumer_configuration\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_consumer_configuration_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootConsumerConfigCodeBlock}\n              expandableCode={springBootConsumerConfigExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_listener\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_listener_description\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.bracket_text\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootListenerCodeBlock}\n              expandableCode={springBootListenerExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_consumer\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_consumer_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootConsumerExampleCodeBlock}\n              expandableCode={springBootConsumerExampleExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n          </>\n        ) : (\n          <>\n            <Text component={TextVariants.small}>\n              <Trans\n                ns={\"kafka\"}\n                i18nKey={\"sample_code.sample_consumer_code_description\"}\n                values={{\n                  client_type: clientProvider[clientSelect],\n                }}\n              />\n            </Text>\n            {clientSelect === \"quarkus\" ? null :\n              <Text component={TextVariants.small}>\n                {t(\"sample_code.bracket_text\")}\n              </Text>}\n            {(() => {\n              switch (clientSelect) {\n                case \"java\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={javaConsumerCodeBlock}\n                      expandableCode={javaConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"python\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={pythonConsumerCodeBlock}\n                      expandableCode={pythonConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"quarkus\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={quarkusConsumerCodeBlock}\n                      expandableCode={quarkusConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                default:\n                  return null;\n              }\n            })()}\n          </>\n        )}\n      </TextContent>\n    </div>\n  );\n};\n","import type { TabsProps } from \"@patternfly/react-core\";\nimport {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport type { Kafka } from \"ui-models/src/models/kafka\";\nimport { CreatingStatuses } from \"ui-models/src/models/kafka\";\nimport { useKafkaLabels } from \"../../hooks\";\nimport {\n  KafkaConnectionTabP2,\n  KafkaDetailsTab,\n  KafkaSampleCode,\n} from \"./components\";\n\nexport type KafkaInstanceDrawerProps = {\n  instance?: Kafka;\n  isExpanded: boolean;\n  activeTab: KafkaInstanceDrawerTab;\n  onTabChange: (tab: KafkaInstanceDrawerTab) => void;\n\n  onClose: () => void;\n};\n\nexport const KafkaInstanceDrawer: FunctionComponent<\n  KafkaInstanceDrawerProps\n> = ({ instance, activeTab, isExpanded, onTabChange, onClose, children }) => {\n  const content = useMemo(() => {\n    return (\n      <DrawerPanelContent>\n        {instance ? (\n          <KafkaInstanceDrawerPanel\n            instance={instance}\n            activeTab={activeTab}\n            onTabChange={onTabChange}\n            onClose={onClose}\n          />\n        ) : null}\n      </DrawerPanelContent>\n    );\n  }, [activeTab, instance, onClose, onTabChange]);\n  return (\n    <Drawer isExpanded={isExpanded} isInline={true}>\n      <DrawerContent panelContent={content}>\n        <DrawerContentBody\n          className={\"pf-u-display-flex pf-u-flex-direction-column\"}\n        >\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nexport type KafkaInstanceDrawerTab = \"details\" | \"connections\";\n\nexport const KafkaInstanceDrawerPanel: VoidFunctionComponent<\n  Required<Omit<KafkaInstanceDrawerProps, \"isExpanded\">> & {\n    activeTab: KafkaInstanceDrawerTab;\n  }\n> = ({ instance, activeTab, onTabChange, onClose }) => {\n  const { t } = useTranslation([\"kafka\"]);\n  const labels = useKafkaLabels();\n\n  const handleSelect: TabsProps[\"onSelect\"] = useCallback(\n    (_, tab) => {\n      const t = tab as KafkaInstanceDrawerTab;\n      onTabChange(t);\n    },\n    [onTabChange]\n  );\n\n  const isKafkaPending = CreatingStatuses.includes(instance.status);\n\n  return (\n    <>\n      <DrawerHead>\n        <TextContent>\n          <Text component={TextVariants.small} className={\"pf-u-mb-0\"}>\n            {t(\"common:name\")}\n          </Text>\n          <Title\n            headingLevel={\"h1\"}\n            size={TitleSizes[\"xl\"]}\n            className={\"pf-u-mt-0\"}\n          >\n            {instance.name}\n          </Title>\n        </TextContent>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <Tabs activeKey={activeTab} onSelect={handleSelect}>\n          <Tab\n            eventKey={\"details\"}\n            title={<TabTitleText>{t(\"drawer-tabs.details\")}</TabTitleText>}\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaDetailsTab\n                id={instance.id}\n                owner={instance.owner}\n                createdAt={parseISO(instance.createdAt)}\n                updatedAt={parseISO(instance.updatedAt)}\n                expiryDate={\n                  instance.expiryDate\n                    ? parseISO(instance.expiryDate)\n                    : undefined\n                }\n                size={instance.size}\n                ingress={instance.ingress}\n                egress={instance.egress}\n                storage={instance.storage}\n                maxPartitions={instance.maxPartitions}\n                connections={instance.connections}\n                connectionRate={instance.connectionRate}\n                messageSize={instance.messageSize}\n                provider={\n                  labels.providers[instance.provider] || instance.provider\n                }\n                region={\n                  labels.providerRegions[instance.provider][instance.region] ||\n                  instance.region\n                }\n                instanceType={instance.plan}\n                billing={instance.billing}\n                kafkaVersion={instance.version}\n              />\n            </div>\n          </Tab>\n          <Tab\n            eventKey={\"connections\"}\n            title={<TabTitleText>{t(\"drawer-tabs.connections\")}</TabTitleText>}\n            data-testid=\"drawerStreams-tabConnect\"\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaConnectionTabP2\n                isKafkaPending={isKafkaPending}\n                externalServer={getExternalServer(instance.bootstrapUrl)}\n                tokenEndPointUrl={\"TODO\"}\n                linkToServiceAccount={\"service-accounts\"}\n                linkToAccessTab={`TODO/acls`}\n                adminAPIUrl={getAdminServerUrl(instance.adminUrl)}\n                showCreateServiceAccountModal={() => {\n                  /* TODO */\n                }}\n                kafkaFleetManagerUrl={\n                  \"https://api.openshift.com/api/kafkas_mgmt/v1/openapi\"\n                }\n              />\n            </div>\n          </Tab>\n          <Tab\n            eventKey={\"samplecode\"}\n            title={<TabTitleText>{t(\"drawer-tabs.sample-code\")}</TabTitleText>}\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaSampleCode\n                kafkaBootstrapUrl={getExternalServer(instance.bootstrapUrl)!}\n                tokenEndpointUrl={\"TODO\"}\n              />\n            </div>\n          </Tab>\n        </Tabs>\n      </DrawerPanelBody>\n    </>\n  );\n};\n\nconst getExternalServer = (bootstrapUrl: string | undefined) => {\n  if (!bootstrapUrl) {\n    return undefined;\n  }\n  return bootstrapUrl?.endsWith(\":443\") ? bootstrapUrl : `${bootstrapUrl}:443`;\n};\n\nconst getAdminServerUrl = (adminUrl: string | undefined) => {\n  return adminUrl ? `${adminUrl}/openapi` : undefined;\n};\n","import {\n  Alert,\n  Button,\n  Flex,\n  FlexItem,\n  HelperText,\n  HelperTextItem,\n  Spinner,\n  Split,\n  SplitItem,\n} from \"@patternfly/react-core\";\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { forwardRef } from \"react\";\nimport type { Status } from \"ui-models/src/models/kafka\";\nimport {\n  CreatingStatuses,\n  DegradedStatuses,\n  DeletingStatuses,\n  ReadyStatuses,\n  ResumingStatuses,\n  SuspendedStatuses,\n  SuspendingStatuses,\n} from \"ui-models/src/models/kafka\";\nimport \"./StatusLabel.css\";\n\ntype StatusLabelProps = {\n  value: Status;\n  showWarning?: boolean;\n  showError?: boolean;\n  withPopover?: boolean;\n};\n\n/**\n *<strong> Introduction </strong>\n *These are the various statuses that can show in the Kafka instances table under the \"Status\" header.\n */\nexport const StatusLabel = forwardRef<HTMLButtonElement, StatusLabelProps>(\n  (\n    { value, showWarning = false, showError = false, withPopover = false },\n    ref\n  ) => {\n    const { t } = useTranslation(\"kafka\");\n\n    const buttonVariant = withPopover ? \"link\" : \"plain\";\n\n    switch (true) {\n      case ReadyStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <CheckCircleIcon className=\"mas-m-ready\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.ready\")}</SplitItem>\n            </Split>\n          </div>\n        );\n\n      case CreatingStatuses.includes(value):\n        switch (true) {\n          case showWarning:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                  </SplitItem>\n                </Split>\n                <Alert\n                  variant=\"warning\"\n                  isInline\n                  isPlain\n                  title=\"This is taking longer than expected.\"\n                />\n              </div>\n            );\n          case showError:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                  </SplitItem>\n                </Split>\n                <Alert\n                  variant=\"danger\"\n                  isInline\n                  isPlain\n                  title={t(\"status_warning_or_error_title\")}\n                />\n              </div>\n            );\n          default:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                    <Flex>\n                      <FlexItem>\n                        <HelperText>\n                          <HelperTextItem variant=\"indeterminate\">\n                            {t(\"status_created_shortly_help\")}\n                          </HelperTextItem>\n                        </HelperText>\n                      </FlexItem>\n                    </Flex>\n                  </SplitItem>\n                </Split>\n              </div>\n            );\n        }\n\n      case DegradedStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <ExclamationTriangleIcon className=\"mas-m-degraded\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.degraded\")}</SplitItem>\n            </Split>\n          </div>\n        );\n\n      case SuspendingStatuses.includes(value):\n        return (\n          <div>\n            <p className=\"mas-m-deleting\"> {t(\"statuses.suspending\")}</p>\n          </div>\n        );\n      case SuspendedStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <ExclamationTriangleIcon className=\"mas-m-degraded\" />\n              </SplitItem>\n              <SplitItem>\n                <Button ref={ref} variant={buttonVariant} isInline>\n                  {t(\"statuses.suspended\")}\n                </Button>\n              </SplitItem>\n            </Split>\n          </div>\n        );\n      case ResumingStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <Spinner size=\"md\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.resuming\")}</SplitItem>\n            </Split>\n          </div>\n        );\n      case DeletingStatuses.includes(value):\n        return (\n          <div>\n            <p className=\"mas-m-deleting\"> {t(\"statuses.deleting\")}</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  }\n);\n","export type KafkaStatus =\n  | \"ready\"\n  | \"degraded\"\n  | \"accepted\"\n  | \"provisioning\"\n  | \"preparing\"\n  | \"deprovision\"\n  | \"deleting\"\n  | \"suspended\"\n  | \"suspending\"\n  | \"resuming\";\n\nexport type PopoverStatus =\n  | \"pending\"\n  | \"provisioning\"\n  | \"preparing\"\n  | \"ready\"\n  | \"suspended\";\n\nexport const PopoverStatusOrder: PopoverStatus[] = [\n  \"pending\",\n  \"preparing\",\n  \"provisioning\",\n];\n\nexport const KafkaToPopoverMapping: {\n  [status in KafkaStatus]: PopoverStatus | null;\n} = {\n  ready: null,\n  degraded: null,\n  accepted: \"pending\",\n  provisioning: \"provisioning\",\n  preparing: \"preparing\",\n  deprovision: null,\n  deleting: null,\n  suspended: \"suspended\",\n  suspending: null,\n  resuming: null,\n};\n","import { ProgressStep, ProgressStepper } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport { PopoverStatusOrder } from \"../types\";\n\ntype StatusProgressStepperProps = {\n  currentStatus: PopoverStatus;\n};\n\nexport const StatusProgressStepper: VoidFunctionComponent<\n  StatusProgressStepperProps\n> = ({ currentStatus }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const currentStep = PopoverStatusOrder.findIndex((s) => s === currentStatus);\n\n  const getVariant = (index: number) =>\n    (currentStep === index && \"info\") ||\n    (currentStep > index && \"success\") ||\n    \"default\";\n\n  return (\n    <ProgressStepper isVertical={true}>\n      <ProgressStep\n        id={\"pending\"}\n        titleId={\"pending\"}\n        isCurrent={currentStatus === \"pending\"}\n        description={t(\"kafka_status_popover.pending.description\")}\n        aria-label={t(\"kafka_status_popover.pending.description\")}\n        variant={getVariant(0)}\n      >\n        {t(\"kafka_status_popover.pending.title\")}\n      </ProgressStep>\n\n      <ProgressStep\n        id={\"provisioning\"}\n        titleId={\"provisioning\"}\n        isCurrent={currentStatus === \"provisioning\"}\n        description={t(\"kafka_status_popover.provisioning.description\")}\n        aria-label={t(\"kafka_status_popover.provisioning.description\")}\n        variant={getVariant(1)}\n      >\n        {t(\"kafka_status_popover.provisioning.title\")}\n      </ProgressStep>\n      <ProgressStep\n        id={\"preparing\"}\n        titleId={\"preparing\"}\n        isCurrent={currentStatus === \"preparing\"}\n        description={t(\"kafka_status_popover.preparing.description\")}\n        aria-label={t(\"kafka_status_popover.preparing.description\")}\n        variant={getVariant(2)}\n      >\n        {t(\"kafka_status_popover.preparing.title\")}\n      </ProgressStep>\n    </ProgressStepper>\n  );\n};\n","import {\n  Alert,\n  Button,\n  ButtonVariant,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport { PopoverStatusOrder } from \"../types\";\nimport { StatusProgressStepper } from \"./StatusProgressStepper\";\n\nexport type StatusPopoverContentProps = {\n  currentStatus: PopoverStatus;\n  showWarning?: boolean;\n  showError?: boolean;\n  onClickConnectionTabLink: () => void;\n  onClickSupportLink: () => void;\n};\n\nexport const StatusPopoverContent: VoidFunctionComponent<\n  StatusPopoverContentProps\n> = ({\n  currentStatus,\n  showWarning = false,\n  showError = false,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const currentStep = PopoverStatusOrder.findIndex((s) => s === currentStatus);\n\n  return (\n    <div>\n      <Stack hasGutter>\n        <StackItem>\n          {showWarning && (\n            <Alert\n              variant=\"warning\"\n              isInline\n              isPlain\n              title={t(\"kafka_status_popover.warning_or_error_title\")}\n            >\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  <Trans\n                    ns={[\"create-kafka-instance\"]}\n                    i18nKey=\"kafka_status_popover.header_content_with_warning\"\n                    components={[\n                      <Button\n                        key=\"btn-connetcion-tab\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickConnectionTabLink}\n                        isInline\n                      />,\n                    ]}\n                  />\n                </Text>\n              </TextContent>\n            </Alert>\n          )}\n          {showError && (\n            <Alert\n              variant=\"danger\"\n              isInline\n              isPlain\n              title={t(\"kafka_status_popover.warning_or_error_title\")}\n            >\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  <Trans\n                    ns={[\"create-kafka-instance\"]}\n                    i18nKey=\"kafka_status_popover.header_content_with_error\"\n                    components={[\n                      <Button\n                        key=\"btn-connetcion-tab\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickConnectionTabLink}\n                        isInline\n                      />,\n                      <Button\n                        key=\"btn-support-case\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickSupportLink}\n                        isInline\n                      />,\n                    ]}\n                  />\n                </Text>\n              </TextContent>\n            </Alert>\n          )}\n          {!showError && !showWarning && (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey=\"kafka_status_popover.header_content\"\n                  components={[\n                    <Button\n                      key=\"btn-connetcion-tab\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickConnectionTabLink}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Text>\n            </TextContent>\n          )}\n        </StackItem>\n        <StackItem>\n          {t(\"common:progress_stepper_current_step\", {\n            currentStep,\n            total: PopoverStatusOrder.length,\n          })}\n        </StackItem>\n        <StackItem>\n          <StatusProgressStepper currentStatus={currentStatus} />\n        </StackItem>\n      </Stack>\n    </div>\n  );\n};\n","import type { PopoverProps } from \"@patternfly/react-core\";\nimport { Popover } from \"@patternfly/react-core\";\nimport type { RefObject, VoidFunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport type { StatusPopoverContentProps } from \"./StatusPopoverContent\";\nimport { StatusPopoverContent } from \"./StatusPopoverContent\";\n\nexport type StatusPopoverProps = {\n  status: PopoverStatus;\n  initialOpen?: boolean;\n  showWarning?: boolean;\n  showError?: boolean;\n  children?: PopoverProps[\"children\"];\n  onClickConnectionTabLink: StatusPopoverContentProps[\"onClickConnectionTabLink\"];\n  onClickSupportLink: StatusPopoverContentProps[\"onClickSupportLink\"];\n  reference?: RefObject<HTMLButtonElement>;\n};\n\n/**\n * ## Introduction\n *\n * This is a popover that can be reached from the Kafka Instance table while the status of the instance in question is “Creating”.\n * A Kafka instance usually takes a few minutes to create. The purpose of this popover is to give the user some insights into\n * the creation process of their instance while they wait for it to be available to use.\n *\n * - The text at the top explains that the instance will be ready shortly & suggests that the user creates a service account while they wait.\n *  (Provides a link to the “Connections tab\" where this is done).\n *\n * - The steps shown in the progress stepper are statuses that show in the api. They have been grouped together under the one overall\n * “Creating status” in the table.There is some descriptive text accompanying each step too. When these steps are complete the instance will be ready for use\n *\n * - The popover is only available while instance creation is in progress.\n * - After creation is complete the table displays the ready status and the popover is no longer available.\n *\n */\nexport const StatusPopover: VoidFunctionComponent<StatusPopoverProps> = ({\n  initialOpen = false,\n  status,\n  showWarning = false,\n  showError = false,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n  reference,\n  children,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const [isVisible, setIsVisible] = useState(initialOpen);\n  const onClose = () => setIsVisible(false);\n\n  const handleClickConnectionTabLink = useCallback(() => {\n    onClose();\n    onClickConnectionTabLink();\n  }, [onClickConnectionTabLink]);\n\n  const handleClickSupportLink = useCallback(() => {\n    onClose();\n    onClickSupportLink();\n  }, [onClickSupportLink]);\n\n  return (\n    <Popover\n      headerContent={t(\"kafka_status_popover.title\")}\n      bodyContent={\n        <StatusPopoverContent\n          currentStatus={status}\n          showWarning={showWarning}\n          showError={showError}\n          onClickConnectionTabLink={handleClickConnectionTabLink}\n          onClickSupportLink={handleClickSupportLink}\n        />\n      }\n      isVisible={isVisible}\n      shouldOpen={() => setIsVisible(true)}\n      shouldClose={() => setIsVisible(false)}\n      position={\"right\"}\n      enableFlip={true}\n      reference={reference}\n    >\n      {children}\n    </Popover>\n  );\n};\n","import type { PopoverProps } from \"@patternfly/react-core\";\nimport { Popover, TextContent } from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { RefObject, VoidFunctionComponent } from \"react\";\n\nexport type SuspendedPopoverProps = {\n  children?: PopoverProps[\"children\"];\n  reference?: RefObject<HTMLButtonElement>;\n};\n\nexport const SuspendedPopover: VoidFunctionComponent<SuspendedPopoverProps> = ({\n  children,\n  reference,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <Popover\n      alertSeverityVariant={\"warning\"}\n      headerIcon={<ExclamationTriangleIcon />}\n      headerContent={t(\"suspend_popover_title\")}\n      bodyContent={\n        <TextContent>\n          <p>{t(\"suspend_popover_body_1\")}</p>\n        </TextContent>\n      }\n      position={\"right\"}\n      reference={reference}\n    >\n      {children}\n    </Popover>\n  );\n};\n","import { useInterval } from \"@rhoas/app-services-ui-components\";\nimport { differenceInMinutes } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport type { Status } from \"ui-models/src/models/kafka\";\nimport type { StatusPopoverProps } from \"./components\";\nimport { StatusLabel, StatusPopover, SuspendedPopover } from \"./components\";\nimport { KafkaToPopoverMapping } from \"./types\";\n\nexport type KafkaInstanceStatusProps = {\n  status: Status;\n  createdAt: Date;\n  warningAfterMinutes?: number;\n  errorAfterMinutes?: number;\n} & Pick<StatusPopoverProps, \"onClickConnectionTabLink\" | \"onClickSupportLink\">;\n\n/**\n * A component to show the status of a Kafka instance combining the\n * `StatusPopover` with the `StatusLabel`, with automatic handling of which\n * statuses should have a companion popover.\n */\nexport const KafkaInstanceStatus: VoidFunctionComponent<\n  KafkaInstanceStatusProps\n> = ({\n  status,\n  createdAt,\n  warningAfterMinutes = 15,\n  errorAfterMinutes = 30,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n}) => {\n  const popoverStatus = KafkaToPopoverMapping[status];\n  const [alert, setAlert] = useState<\"warning\" | \"error\" | false>(false);\n  const labelRef = useRef<HTMLButtonElement>(null);\n\n  const checkCreatedAt = useCallback(() => {\n    const elapsed = differenceInMinutes(new Date(), createdAt);\n    if (elapsed > errorAfterMinutes) {\n      setAlert(\"error\");\n    } else if (elapsed > warningAfterMinutes) {\n      setAlert(\"warning\");\n    } else {\n      setAlert(false);\n    }\n  }, [createdAt, errorAfterMinutes, warningAfterMinutes]);\n\n  useInterval(checkCreatedAt, 5000);\n  const showWarning = alert === \"warning\";\n  const showError = alert === \"error\";\n  return (\n    <>\n      {popoverStatus === \"suspended\" ? (\n        <SuspendedPopover reference={labelRef} />\n      ) : (\n        popoverStatus && (\n          <StatusPopover\n            status={popoverStatus}\n            showWarning={showWarning}\n            showError={showError}\n            onClickConnectionTabLink={onClickConnectionTabLink}\n            onClickSupportLink={onClickSupportLink}\n            reference={labelRef}\n          />\n        )\n      )}\n      <StatusLabel\n        value={status}\n        showWarning={showWarning}\n        showError={showError}\n        withPopover={popoverStatus !== undefined}\n        ref={labelRef}\n      />\n    </>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoDedicatedClustersProps = {\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoDedicatedClusters: VoidFunctionComponent<\n  EmptyStateNoDedicatedClustersProps\n> = ({ onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_instances_no_dedicated_clusters_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_instances_no_dedicated_clusters_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={onQuickstartGuide}\n      >\n        {t(\"empty_state_instances_no_dedicated_clusters_prerequisites_button\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoDedicatedEntitlementProps = {\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoDedicatedEntitlement: VoidFunctionComponent<\n  EmptyStateNoDedicatedEntitlementProps\n> = ({ onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_dedicated_entitlement_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_dedicated_entitlement_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type EmptyStateNoDedicatedInstancesProps = {\n  onCreate: () => void;\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoDedicatedInstances: VoidFunctionComponent<\n  EmptyStateNoDedicatedInstancesProps\n> = ({ onCreate, onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_dedicated_instances_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_dedicated_instances_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button ouiaId=\"button-create\" variant=\"primary\" onClick={onCreate}>\n        {t(\"empty_state_no_dedicated_instances_create_instance\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type EmptyStateNoInstancesProps = {\n  onCreate: () => void;\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoInstances: VoidFunctionComponent<\n  EmptyStateNoInstancesProps\n> = ({ onCreate, onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_instances_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_instances_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button ouiaId=\"button-create\" variant=\"primary\" onClick={onCreate}>\n        {t(\"empty_state_no_instances_create_instance\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type EmptyStateNoResultsProps = {\n  onClearAllFilters: () => void;\n};\n\nexport const EmptyStateNoResults: VoidFunctionComponent<\n  EmptyStateNoResultsProps\n> = ({ onClearAllFilters }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_results_found_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_results_found_body\"}\n          components={[<a onClick={onClearAllFilters} />]}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { Button, PageSection, Stack, StackItem } from \"@patternfly/react-core\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  FormatDate,\n  TableView,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport type { Kafka, SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { DeletingStatuses } from \"ui-models/src/models/kafka\";\nimport { useKafkaLabels } from \"../../hooks\";\nimport { KafkaInstanceActions } from \"../KafkaInstanceActions\";\nimport { KafkaInstanceStatus } from \"../KafkaInstanceStatus\";\nimport type {\n  EmptyStateNoInstancesProps,\n  EmptyStateNoResultsProps,\n} from \"./components\";\nimport { EmptyStateNoInstances, EmptyStateNoResults } from \"./components\";\nimport { EmptyStateNoDedicatedInstances } from \"./components/EmptyStateNoDedicatedInstances\";\n\nconst StandardColumns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"provider\",\n  \"region\",\n  \"status\",\n] as const;\n\nconst DedicatedColumns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"clusterId\",\n  \"status\",\n] as const;\n\nexport type KafkaInstancesProps = {\n  columns: \"standard\" | \"dedicated\";\n  instances: Array<Kafka> | undefined | null;\n  getUrlForInstance: (row: Kafka) => string;\n  names: string[];\n  owners: string[];\n  statuses: string[];\n  onCreate: () => void;\n  onSearchName: (value: string) => void;\n  onRemoveNameChip: (value: string) => void;\n  onRemoveNameChips: () => void;\n  onSearchOwner: (value: string) => void;\n  onRemoveOwnerChip: (value: string) => void;\n  onRemoveOwnerChips: () => void;\n  onSearchStatus: (value: SimplifiedStatus) => void;\n  onRemoveStatusChip: (value: SimplifiedStatus) => void;\n  onRemoveStatusChips: () => void;\n  onDetails: (row: Kafka) => void;\n  onConnection: (row: Kafka) => void;\n  canChangeOwner: (row: Kafka) => boolean;\n  onChangeOwner: (row: Kafka) => void;\n  canDelete: (row: Kafka) => boolean;\n  onDelete: (row: Kafka) => void;\n  onClickConnectionTabLink: (row: Kafka) => void;\n  onClickSupportLink: () => void;\n  onInstanceLinkClick: (row: Kafka) => void;\n  canHaveInstanceLink: (row: Kafka) => boolean;\n  canOpenConnection: (row: Kafka) => boolean;\n} & Pick<\n  TableViewProps<\n    Kafka,\n    (typeof StandardColumns | typeof DedicatedColumns)[number]\n  >,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n> &\n  EmptyStateNoInstancesProps &\n  EmptyStateNoResultsProps;\n\nexport const KafkaInstances = <\n  Columns extends typeof StandardColumns | typeof DedicatedColumns\n>({\n  columns,\n  instances,\n  itemCount,\n  page,\n  perPage,\n  names,\n  owners,\n  statuses,\n  getUrlForInstance,\n  isRowSelected,\n  isColumnSortable,\n  onPageChange,\n  onDetails,\n  onConnection,\n  canChangeOwner,\n  onChangeOwner,\n  canDelete,\n  onDelete,\n  onCreate,\n  onQuickstartGuide,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n  onInstanceLinkClick,\n  onSearchName,\n  onRemoveNameChip,\n  onRemoveNameChips,\n  onSearchOwner,\n  onRemoveOwnerChip,\n  onRemoveOwnerChips,\n  onSearchStatus,\n  onRemoveStatusChip,\n  onRemoveStatusChips,\n  onClearAllFilters,\n\n  canHaveInstanceLink,\n  canOpenConnection,\n}: KafkaInstancesProps) => {\n  const { t } = useTranslation(\"kafka\");\n  const labels = useKafkaLabels();\n  const breakpoint = \"lg\";\n\n  const isFiltered =\n    names.length > 0 || owners.length > 0 || statuses.length > 0;\n\n  return (\n    <PageSection isFilled={true}>\n      <TableView\n        data={instances}\n        columns={columns === \"standard\" ? StandardColumns : DedicatedColumns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          const timeCreatedDate = parseISO(row.createdAt);\n          const instanceLinkEnable = canHaveInstanceLink(row);\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"name\":\n                    return (\n                      <Button\n                        variant=\"link\"\n                        component={(props) => (\n                          <Link to={getUrlForInstance(row)} {...props}>\n                            {row.name}\n                          </Link>\n                        )}\n                        isInline={true}\n                        isAriaDisabled={!instanceLinkEnable}\n                        isDisabled={!instanceLinkEnable}\n                        onClick={() => onInstanceLinkClick(row)}\n                      />\n                    );\n                  case \"provider\":\n                    return labels.providers[row.provider];\n                  case \"createdAt\":\n                    return (\n                      <Stack>\n                        <StackItem>\n                          <FormatDate\n                            date={timeCreatedDate}\n                            format={\"distanceToNowWithAgo\"}\n                          />\n                        </StackItem>\n                        {row.expiryDate && (\n                          <StackItem>\n                            <Trans\n                              i18nKey=\"will_expire_short\"\n                              ns={[\"kafka\"]}\n                              components={{\n                                time: (\n                                  <FormatDate\n                                    date={parseISO(row.expiryDate)}\n                                    format=\"expiration\"\n                                  />\n                                ),\n                              }}\n                            />\n                          </StackItem>\n                        )}\n                      </Stack>\n                    );\n                  case \"status\":\n                    return (\n                      <KafkaInstanceStatus\n                        status={row[\"status\"]}\n                        createdAt={timeCreatedDate}\n                        onClickConnectionTabLink={() =>\n                          onClickConnectionTabLink(row)\n                        }\n                        onClickSupportLink={onClickSupportLink}\n                      />\n                    );\n                  case \"clusterId\":\n                    return row.clusterId;\n                  default:\n                    return row[column];\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row }) => {\n          const changeOwnerEnabled = canChangeOwner(row);\n          const deleteEnabled = canDelete(row);\n          const openConnectionEnabled = canOpenConnection(row);\n          return (\n            <KafkaInstanceActions\n              onDetails={() => onDetails(row)}\n              onConnection={() => onConnection(row)}\n              canOpenConnection={openConnectionEnabled}\n              canChangeOwner={changeOwnerEnabled}\n              onChangeOwner={() => onChangeOwner(row)}\n              canDelete={deleteEnabled}\n              onDelete={() => onDelete(row)}\n            />\n          );\n        }}\n        onRowClick={({ row }) => onDetails(row)}\n        isColumnSortable={isColumnSortable}\n        isRowSelected={isRowSelected}\n        isRowDeleted={({ row }) => DeletingStatuses.includes(row[\"status\"])}\n        toolbarBreakpoint={breakpoint}\n        filters={{\n          [labels.fields.name]: {\n            type: \"search\",\n            chips: names,\n            onSearch: onSearchName,\n            onRemoveChip: onRemoveNameChip,\n            onRemoveGroup: onRemoveNameChips,\n            validate: (value) => /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(value),\n            errorMessage: t(\"kafka:input_field_invalid_message\"),\n          },\n          [labels.fields.owner]: {\n            type: \"search\",\n            chips: owners,\n            onSearch: onSearchOwner,\n            onRemoveChip: onRemoveOwnerChip,\n            onRemoveGroup: onRemoveOwnerChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"kafka:input_field_invalid_message\"),\n          },\n          [labels.fields.status]: {\n            type: \"checkbox\",\n            chips: statuses,\n            options: labels.statusesSimplified,\n            onToggle: onSearchStatus,\n            onRemoveChip: onRemoveStatusChip,\n            onRemoveGroup: onRemoveStatusChips,\n          },\n        }}\n        actions={[\n          {\n            label: t(\"create_instance\"),\n            onClick: onCreate,\n            isPrimary: true,\n          },\n        ]}\n        itemCount={itemCount}\n        page={page}\n        perPage={perPage}\n        onPageChange={onPageChange}\n        onClearAllFilters={onClearAllFilters}\n        ariaLabel={t(\"table.title\")}\n        isFiltered={isFiltered}\n        emptyStateNoData={\n          columns === \"standard\" ? (\n            <EmptyStateNoInstances\n              onCreate={onCreate}\n              onQuickstartGuide={onQuickstartGuide}\n            />\n          ) : (\n            <EmptyStateNoDedicatedInstances\n              onCreate={onCreate}\n              onQuickstartGuide={onQuickstartGuide}\n            />\n          )\n        }\n        emptyStateNoResults={\n          <EmptyStateNoResults onClearAllFilters={onClearAllFilters} />\n        }\n      />\n    </PageSection>\n  );\n};\n","import type { DatePickerProps, TimePickerProps } from \"@patternfly/react-core\";\nimport { DatePicker, InputGroup, TimePicker } from \"@patternfly/react-core\";\nimport { formatISO, parseISO, setHours, setMinutes } from \"date-fns\";\nimport { formatInTimeZone } from \"date-fns-tz\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { DateIsoString } from \"../../../../../ui-models/src/types\";\n\nexport type DateTimePickerProps = {\n  isDisabled: boolean;\n  value: DateIsoString | undefined;\n  onChange: (value: DateIsoString) => void;\n};\nexport const DateTimePicker: VoidFunctionComponent<DateTimePickerProps> = ({\n  isDisabled,\n  value,\n  onChange,\n}) => {\n  const [timeSelected, setIsTimeSelected] = useState(false);\n  const date = value ? parseISO(value) : undefined;\n\n  const onSelectCalendar: DatePickerProps[\"onChange\"] = (_, newDate) => {\n    if (newDate) {\n      onChange(formatISO(newDate) as DateIsoString);\n    }\n  };\n\n  const onSelectTime: TimePickerProps[\"onChange\"] = (\n    time,\n    hour,\n    minute,\n    __,\n    isValid\n  ) => {\n    if (\n      isValid &&\n      date &&\n      hour != undefined &&\n      hour > 0 &&\n      (time.includes(\"AM\") || time.includes(\"PM\"))\n    ) {\n      let newDate = date;\n      if (hour !== undefined) {\n        newDate = setHours(newDate, hour);\n      }\n      if (minute !== undefined) {\n        newDate = setMinutes(newDate, minute);\n      }\n\n      onChange(formatISO(newDate) as DateIsoString);\n      setIsTimeSelected(true);\n    }\n  };\n\n  return (\n    <InputGroup>\n      <DatePicker\n        isDisabled={isDisabled}\n        value={date ? formatInTimeZone(date, \"UTC\", \"yyyy-MM-dd\") : undefined}\n        onChange={onSelectCalendar}\n      />\n      <TimePicker\n        isDisabled={!date || isDisabled}\n        time={timeSelected ? date : undefined}\n        onChange={onSelectTime}\n      />\n    </InputGroup>\n  );\n};\n","import {\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  DropdownSeparator,\n  DropdownToggle,\n  InputGroup,\n  TextInput,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { DateIsoString } from \"../../../../../ui-models/src/types\";\nimport { DateTimePicker } from \"./DateTimePicker\";\n\ntype Category = \"offset\" | \"timestamp\" | \"epoch\" | \"latest\";\nexport type FilterGroupProps = {\n  isDisabled: boolean;\n  offset: number | undefined;\n  epoch: number | undefined;\n  timestamp: DateIsoString | undefined;\n  onOffsetChange: (value: number | undefined) => void;\n  onTimestampChange: (value: DateIsoString | undefined) => void;\n  onEpochChange: (value: number | undefined) => void;\n  onLatest: () => void;\n};\nexport const FilterGroup: VoidFunctionComponent<FilterGroupProps> = ({\n  isDisabled,\n  offset,\n  epoch,\n  timestamp,\n  onOffsetChange,\n  onTimestampChange,\n  onEpochChange,\n  onLatest,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [currentCategory, setCurrentCategory] = useState<Category>(\"latest\");\n  const [isOpen, setIsOpen] = useState(false);\n  const labels: { [key in Category]: string } = {\n    offset: t(\"filter.offset\"),\n    timestamp: t(\"filter.timestamp\"),\n    epoch: t(\"filter.epoch\"),\n    latest: t(\"filter.latest\"),\n  };\n  return (\n    <ToolbarItem>\n      <InputGroup>\n        <Dropdown\n          data-testid={\"filter-group-dropdown\"}\n          toggle={\n            <DropdownToggle\n              onToggle={setIsOpen}\n              isDisabled={isDisabled}\n              data-testid={\"filter-group\"}\n            >\n              {labels[currentCategory]}\n            </DropdownToggle>\n          }\n          position={DropdownPosition.left}\n          isOpen={isOpen}\n          onSelect={() => setIsOpen(false)}\n          dropdownItems={[\n            <DropdownItem\n              key=\"offset\"\n              value=\"offset\"\n              autoFocus={currentCategory === \"offset\"}\n              onClick={() => setCurrentCategory(\"offset\")}\n            >\n              {labels[\"offset\"]}\n            </DropdownItem>,\n            <DropdownItem\n              key=\"timestamp\"\n              value=\"timestamp\"\n              autoFocus={currentCategory === \"timestamp\"}\n              onClick={() => setCurrentCategory(\"timestamp\")}\n            >\n              {labels[\"timestamp\"]}\n            </DropdownItem>,\n            <DropdownItem\n              key=\"epoch\"\n              value=\"epoch\"\n              autoFocus={currentCategory === \"epoch\"}\n              onClick={() => setCurrentCategory(\"epoch\")}\n            >\n              {labels[\"epoch\"]}\n            </DropdownItem>,\n            <DropdownSeparator key={\"divider\"} />,\n            <DropdownItem\n              key=\"latest\"\n              value=\"latest\"\n              autoFocus={currentCategory === \"latest\"}\n              onClick={() => {\n                setCurrentCategory(\"latest\");\n                onLatest();\n              }}\n            >\n              {labels[\"latest\"]}\n            </DropdownItem>,\n          ]}\n        />\n        {currentCategory === \"offset\" && (\n          <TextInput\n            isDisabled={isDisabled}\n            type={\"number\"}\n            aria-label={t(\"filter.offset_aria_label\")}\n            placeholder={t(\"filter.offset_placeholder\")}\n            onChange={(value) => {\n              if (value !== \"\") {\n                const newOffset = parseInt(value, 10);\n                if (Number.isInteger(newOffset)) {\n                  onOffsetChange(newOffset);\n                }\n              } else {\n                onOffsetChange(undefined);\n              }\n            }}\n            value={offset === undefined ? \"\" : offset}\n          />\n        )}\n        {currentCategory === \"timestamp\" && (\n          <DateTimePicker\n            isDisabled={isDisabled}\n            value={timestamp}\n            onChange={onTimestampChange}\n          />\n        )}\n        {currentCategory === \"epoch\" && (\n          <TextInput\n            isDisabled={isDisabled}\n            type={\"number\"}\n            aria-label={t(\"filter.epoch_aria_label\")}\n            placeholder={t(\"filter.epoch_placeholder\")}\n            className=\"pf-u-flex-basis-auto pf-u-flex-grow-0 pf-u-w-initial\"\n            size={t(\"filter.epoch_placeholder\").length}\n            onChange={(value) => {\n              if (value !== \"\" && Number(value) >= 0)\n                onEpochChange(Number(value));\n              else onEpochChange(undefined);\n            }}\n            value={epoch == undefined ? \"\" : epoch}\n          />\n        )}\n      </InputGroup>\n    </ToolbarItem>\n  );\n};\n","import {\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type LimitSelectorProps = {\n  value: number;\n  isDisabled: boolean;\n  onChange: (value: number) => void;\n};\nexport const LimitSelector: VoidFunctionComponent<LimitSelectorProps> = ({\n  value,\n  isDisabled,\n  onChange,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = (isOpen: boolean) => setIsOpen(isOpen);\n  const titleId = \"limit-selector\";\n\n  return (\n    <InputGroup>\n      <InputGroupText className=\"pf-c-content\">\n        {t(\"limit_label\")}\n      </InputGroupText>\n      <div>\n        <span id={titleId} hidden>\n          Select a state\n        </span>\n\n        <Select\n          aria-label={t(\"per_page_aria_label\")}\n          onToggle={toggleOpen}\n          selections={value !== undefined ? [t(\"limit\", { value })] : undefined}\n          isOpen={isOpen}\n          isDisabled={isDisabled}\n          onSelect={() => setIsOpen(false)}\n          data-testid={\"limit-selector\"}\n        >\n          {[10, 20, 50].map((value, idx) => (\n            <SelectOption\n              key={idx}\n              value={t(\"limit\", { value })}\n              onClick={() => onChange(value)}\n            />\n          ))}\n        </Select>\n      </div>\n    </InputGroup>\n  );\n};\n","import type { Message } from \"ui-models/src/models/message\";\n\nexport function isSameMessage(m1: Message, m2: Message) {\n  return JSON.stringify(m1) === JSON.stringify(m2);\n}\n\nexport function beautifyUnknownValue(value: string): string {\n  try {\n    return JSON.stringify(JSON.parse(value), null, 2);\n  } catch (e) {\n    // noop\n  }\n  return value;\n}\n\nexport function truncate(value: string, length: number): [string, boolean] {\n  const shouldTruncate = value.length > length;\n  return [\n    shouldTruncate ? `${value.substring(0, length)}...` : value,\n    shouldTruncate,\n  ];\n}\n","export enum RetentionTimeUnits {\n  MILLISECOND = \"milliseconds\",\n  SECOND = \"seconds\",\n  MINUTE = \"minutes\",\n  HOUR = \"hours\",\n  DAY = \"days\",\n  WEEK = \"weeks\",\n  CUSTOM = \"custom\",\n  UNLIMITED = \"unlimited\",\n}\n\nexport enum RetentionSizeUnits {\n  BYTE = \"bytes\",\n  KIBIBYTE = \"kibibytes\",\n  MEBIBYTE = \"mebibytes\",\n  GIBIBYTE = \"gibibytes\",\n  TEBIBYTE = \"tebibytes\",\n  CUSTOM = \"custom\",\n  UNLIMITED = \"unlimited\",\n}\n\nexport const unitsToBytes = {\n  [RetentionSizeUnits.BYTE]: BigInt(\"1\"),\n  [RetentionSizeUnits.KIBIBYTE]: BigInt(\"1024\"),\n  [RetentionSizeUnits.MEBIBYTE]: BigInt(\"1048576\"),\n  [RetentionSizeUnits.GIBIBYTE]: BigInt(\"1073741824\"),\n  [RetentionSizeUnits.TEBIBYTE]: BigInt(\"1099511600000\"),\n};\n\nexport const unitsToMilliSecond = {\n  [RetentionTimeUnits.MILLISECOND]: BigInt(\"1\"),\n  [RetentionTimeUnits.SECOND]: BigInt(\"1000\"),\n  [RetentionTimeUnits.MINUTE]: BigInt(\"60000\"),\n  [RetentionTimeUnits.HOUR]: BigInt(\"3600000\"),\n  [RetentionTimeUnits.DAY]: BigInt(\"86400000\"),\n};\n\ntype ConversionUnit = {\n  value: bigint;\n  unit: string;\n};\n\nexport const millisecondsToTime = (value: bigint): ConversionUnit => {\n  if (value) {\n    if (value % unitsToMilliSecond.days == BigInt(0))\n      return { value: value / unitsToMilliSecond.days, unit: \"days\" };\n    if (value % unitsToMilliSecond.hours == BigInt(0))\n      return { value: value / unitsToMilliSecond.hours, unit: \"hours\" };\n    if (value % unitsToMilliSecond.minutes == BigInt(0))\n      return { value: value / unitsToMilliSecond.minutes, unit: \"minutes\" };\n    if (value % unitsToMilliSecond.seconds == BigInt(0))\n      return { value: value / unitsToMilliSecond.seconds, unit: \"seconds\" };\n  }\n\n  return { value, unit: \"milliseconds\" };\n};\n\nexport const formattedRetentionTime = (time: bigint): string => {\n  const { unit, value } = millisecondsToTime(time);\n  return Number(value) === -1 ? \"Unlimited\" : `${time} ms (${value} ${unit})`;\n};\n\nexport const formattedRetentionSize = (size: bigint): string => {\n  const { unit, value } = bytesToMemorySize(size);\n  return Number(value) === -1\n    ? \"Unlimited\"\n    : `${size} bytes (${value} ${unit})`;\n};\n\nexport const bytesToMemorySize = (value: bigint): ConversionUnit => {\n  if (value) {\n    if (value % unitsToBytes.tebibytes == BigInt(0))\n      return { value: value / unitsToBytes.tebibytes, unit: \"tebibytes\" };\n    if (value % unitsToBytes.gibibytes == BigInt(0))\n      return { value: value / unitsToBytes.gibibytes, unit: \"gibibytes\" };\n    if (value % unitsToBytes.mebibytes == BigInt(0))\n      return { value: value / unitsToBytes.mebibytes, unit: \"mebibytes\" };\n    if (value % unitsToBytes.kibibytes == BigInt(0))\n      return { value: value / unitsToBytes.kibibytes, unit: \"kibibytes\" };\n  }\n\n  return { value, unit: \"bytes\" };\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type NoDataCellProps = {\n  columnLabel: string;\n};\nexport const NoDataCell: VoidFunctionComponent<NoDataCellProps> = ({\n  columnLabel,\n}) => {\n  const { t } = useTranslation(\"common\");\n  return (\n    <span className=\"pf-u-color-400\">\n      {t(\"table_cell_no_data\", { column: columnLabel })}\n    </span>\n  );\n};\n","import {\n  ClipboardCopy,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelContent,\n  Flex,\n  FlexItem,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { FormatDate, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport { beautifyUnknownValue } from \"../utils\";\nimport { NoDataCell } from \"./NoDataCell\";\n\nexport type MessageDetailsProps = {\n  onClose: () => void;\n  defaultTab: MessageDetailsBodyProps[\"defaultTab\"];\n  message: Message | undefined;\n};\nexport const MessageDetails: VoidFunctionComponent<MessageDetailsProps> = ({\n  onClose,\n  defaultTab,\n  message,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n\n  return (\n    <DrawerPanelContent isResizable={true} minSize={\"400px\"}>\n      <DrawerHead>\n        <TextContent>\n          <Text component={TextVariants.h2}>{t(\"message\")}</Text>\n        </TextContent>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerContentBody>\n        {message && (\n          <MessageDetailsBody\n            defaultTab={defaultTab}\n            messageKey={message.key}\n            {...message}\n          />\n        )}\n      </DrawerContentBody>\n    </DrawerPanelContent>\n  );\n};\n\nexport type MessageDetailsBodyProps = {\n  defaultTab: \"value\" | \"headers\";\n  messageKey: Message[\"key\"];\n} & Omit<Message, \"key\">;\n\nexport const MessageDetailsBody: VoidFunctionComponent<\n  MessageDetailsBodyProps\n> = ({ defaultTab, ...message }) => {\n  const { t } = useTranslation(\"message-browser\");\n\n  return (\n    <Flex direction={{ default: \"column\" }} data-testid={\"message-details\"}>\n      <FlexItem>\n        <DescriptionList isHorizontal isCompact>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.partition\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.partition}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.offset\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.offset}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.timestamp\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.timestamp ? (\n                <FormatDate\n                  date={parseISO(message.timestamp)}\n                  format={\"longWithMilliseconds\"}\n                />\n              ) : (\n                <NoDataCell columnLabel={t(\"field.timestamp\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.epoch\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.timestamp ? (\n                <FormatDate\n                  date={parseISO(message.timestamp)}\n                  format={\"epoch\"}\n                />\n              ) : (\n                <NoDataCell columnLabel={t(\"field.epoch\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.key\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.messageKey ? (\n                message.messageKey\n              ) : (\n                <NoDataCell columnLabel={t(\"field.key\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n        </DescriptionList>\n      </FlexItem>\n      <FlexItem>\n        {/* set key to be a random number to force redraw the tabs in order to change the active tab from the outside */}\n        <Tabs defaultActiveKey={defaultTab} key={Math.random()}>\n          <Tab\n            eventKey={\"value\"}\n            title={<TabTitleText>{t(\"field.value\")}</TabTitleText>}\n          >\n            <ClipboardCopy isCode={true} isExpanded={true} isReadOnly={true}>\n              {beautifyUnknownValue(message.value || \"\")}\n            </ClipboardCopy>\n          </Tab>\n          <Tab\n            eventKey={\"headers\"}\n            title={<TabTitleText>{t(\"field.headers\")}</TabTitleText>}\n          >\n            <ClipboardCopy isCode={true} isExpanded={true} isReadOnly={true}>\n              {beautifyUnknownValue(JSON.stringify(message.headers) || \"\")}\n            </ClipboardCopy>\n          </Tab>\n        </Tabs>\n      </FlexItem>\n    </Flex>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const NoDataEmptyState: VoidFunctionComponent<{\n  onRefresh: () => void;\n}> = ({ onRefresh }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {t(\"no_data_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_data_body\")}</EmptyStateBody>\n      <Button onClick={onRefresh}>{t(\"no_data_refresh\")}</Button>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const NoResultsEmptyState: VoidFunctionComponent<{\n  onReset: () => void;\n}> = ({ onReset }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {t(\"no_results_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_results_body\")}</EmptyStateBody>\n      <Button variant={\"link\"} onClick={onReset}>\n        {t(\"no_results_reset\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { Text, TextContent } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const OffsetRange: VoidFunctionComponent<{\n  min: number;\n  max: number;\n}> = ({ min, max }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <TextContent className=\"pf-u-font-size\">\n      <Text>\n        {t(\"offset\")} <span className=\"custom-text\">{min}</span> -{\" \"}\n        <span className=\"custom-text\">{max}</span>\n      </Text>\n    </TextContent>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  InputGroup,\n  InputGroupText,\n  InputGroupTextVariant,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nconst MAX_OPTIONS = 20;\n\nexport type PartitionSelectorProps = {\n  value: number | undefined;\n  partitions: number | undefined;\n  isDisabled: boolean;\n  onChange: (value: number | undefined) => void;\n};\nexport const PartitionSelector: VoidFunctionComponent<\n  PartitionSelectorProps\n> = ({ value, partitions, isDisabled, onChange }) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = (isOpen: boolean) => setIsOpen(isOpen);\n  const titleId = \"partition-selector\";\n\n  const handleChange = useCallback(\n    (value: string) => {\n      if (value !== \"\") {\n        const valueAsNum = parseInt(value, 10);\n        if (Number.isInteger(valueAsNum)) {\n          onChange(valueAsNum);\n        }\n      }\n      setIsOpen(false);\n    },\n    [onChange]\n  );\n\n  const allPartitions = useMemo(() => {\n    return new Array(partitions).fill(0).map((_, index) => index.toString());\n  }, [partitions]);\n\n  const makeOptions = useCallback(\n    (values: string[]) => {\n      const options = values\n        .slice(0, MAX_OPTIONS)\n        .map((v) => <SelectOption key={v} value={v} />);\n      const hiddenOptionsCount = values.length - options.length;\n      return hiddenOptionsCount\n        ? [\n            ...options,\n            <SelectOption\n              key={\"more-info\"}\n              isDisabled={true}\n              description={t(\"partitions_hidden\", {\n                count: hiddenOptionsCount,\n              })}\n            />,\n          ]\n        : options;\n    },\n    [t]\n  );\n\n  const options = useMemo(() => {\n    return makeOptions(allPartitions);\n  }, [allPartitions, makeOptions]);\n\n  const handleFilter: SelectProps[\"onFilter\"] = useCallback(\n    (_, filter: string) => {\n      if (filter !== \"\") {\n        return makeOptions(\n          allPartitions.filter((partition) => partition.includes(filter))\n        );\n      }\n      return options;\n    },\n    [allPartitions, makeOptions, options]\n  );\n\n  return (\n    <InputGroup>\n      <InputGroupText className=\"pf-c-content\">\n        {t(\"field.partition\")}\n      </InputGroupText>\n      <div>\n        <span id={titleId} hidden>\n          {t(\"select_partition_aria_label\")}\n        </span>\n        <Select\n          variant={SelectVariant.typeahead}\n          typeAheadAriaLabel={t(\"select_partition_typeahead\")}\n          onToggle={toggleOpen}\n          onSelect={(_, value) => handleChange(value as string)}\n          selections={value !== undefined ? [`${value}`] : undefined}\n          isOpen={isOpen}\n          aria-labelledby={titleId}\n          maxHeight={200}\n          width={150}\n          onFilter={handleFilter}\n          isInputValuePersisted={false}\n          isDisabled={isDisabled}\n          placeholderText={t(\"partition_placeholder\")}\n          onClear={() => onChange(undefined)}\n          data-testid={\"partition-selector\"}\n        >\n          {options}\n        </Select>\n      </div>\n      <InputGroupText\n        id={`${titleId}-input`}\n        variant={InputGroupTextVariant.plain}\n        className=\"pf-c-content\"\n      >\n        {t(\"select_partition_of_count\", { partitions })}\n      </InputGroupText>\n    </InputGroup>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { truncate } from \"../utils\";\nimport { Flex, FlexItem } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nconst PREVIEW_LENGTH = 170;\n\nexport type UnknownValuePreviewProps = {\n  value: string;\n  truncateAt?: number;\n  onClick?: () => void;\n};\nexport const UnknownValuePreview: VoidFunctionComponent<\n  UnknownValuePreviewProps\n> = ({ value, truncateAt = PREVIEW_LENGTH, onClick }) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [preview, truncated] = truncate(value, truncateAt);\n  return (\n    <Flex\n      direction={{ default: \"column\" }}\n      spaceItems={{ default: \"spaceItemsXs\" }}\n    >\n      <FlexItem>{preview}</FlexItem>\n      {truncated && (\n        <FlexItem>\n          <a\n            onClick={\n              onClick\n                ? (e) => {\n                    e.stopPropagation();\n                    onClick();\n                  }\n                : undefined\n            }\n          >\n            {t(\"show_more\")}\n          </a>\n        </FlexItem>\n      )}\n    </Flex>\n  );\n};\n","import type { Message } from \"ui-models/src/models/message\";\nimport { assign, createMachine } from \"xstate\";\nimport type { DateIsoString } from \"../../../../ui-models/src/types\";\nimport { isSameMessage } from \"./utils\";\n\nexport type MessageApiResponse = {\n  lastUpdated: Date;\n  messages: Message[];\n  partitions: number;\n  offsetMin: number;\n  offsetMax: number;\n\n  filter: {\n    partition: number | undefined;\n    offset: number | undefined;\n    timestamp: DateIsoString | undefined;\n    limit: number | undefined;\n    epoch: number | undefined;\n  };\n};\n\nexport const MessageBrowserMachine = createMachine(\n  {\n    id: \"message-browser\",\n    predictableActionArguments: true,\n    tsTypes: {} as import(\"./MessageBrowserMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as {\n        // response\n        response: MessageApiResponse | undefined;\n\n        limit: number;\n        // optional input\n        partition: number | undefined;\n        offset: number | undefined;\n        epoch: number | undefined;\n        timestamp: DateIsoString | undefined;\n        selectedMessage: Message | undefined;\n      },\n      events: {} as\n        | {\n            type: \"fetchSuccess\";\n            messages: Message[];\n            partitions: number;\n            offsetMin: number;\n            offsetMax: number;\n          }\n        | { type: \"fetchFail\" }\n        | { type: \"refresh\" }\n        | { type: \"setPartition\"; value: number | undefined }\n        | { type: \"setOffset\"; value: number | undefined }\n        | { type: \"setTimestamp\"; value: DateIsoString | undefined }\n        | { type: \"setEpoch\"; value: number | undefined }\n        | { type: \"setLatest\" }\n        | { type: \"setLimit\"; value: number }\n        | { type: \"selectMessage\"; message: Message }\n        | { type: \"deselectMessage\" },\n    },\n    initial: \"initialLoading\",\n    context: {\n      // response\n      response: undefined,\n\n      limit: 10,\n      // optional input\n      partition: undefined,\n      offset: undefined,\n      timestamp: undefined,\n      selectedMessage: undefined,\n      epoch: undefined,\n    },\n    states: {\n      initialLoading: {\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMessages\",\n            target: \"verifyMessages\",\n          },\n          fetchFail: \"error\",\n        },\n      },\n      verifyMessages: {\n        always: [{ cond: \"noMessages\", target: \"noData\" }, { target: \"ready\" }],\n      },\n      noData: {\n        on: {\n          refresh: \"initialLoading\",\n        },\n      },\n      error: {\n        on: {\n          refresh: \"initialLoading\",\n        },\n      },\n      ready: {\n        initial: \"pristine\",\n        states: {\n          pristine: {},\n          dirty: {\n            tags: \"dirty\",\n          },\n          shouldSearch: {\n            always: [\n              {\n                cond: \"areFiltersChanged\",\n                target: \"dirty\",\n              },\n              { target: \"pristine\" },\n            ],\n          },\n        },\n        always: [\n          {\n            cond: \"selectedMessageNotAvailable\",\n            actions: \"deselectMessage\",\n          },\n        ],\n        on: {\n          refresh: \"refreshing\",\n          setPartition: {\n            target: \".shouldSearch\",\n            actions: \"setPartition\",\n          },\n          setEpoch: {\n            actions: \"setEpoch\",\n            target: \".shouldSearch\",\n          },\n          setTimestamp: {\n            target: \".shouldSearch\",\n            actions: \"setTimestamp\",\n          },\n          setOffset: {\n            target: \".shouldSearch\",\n            actions: \"setOffset\",\n          },\n          setLatest: {\n            target: \".shouldSearch\",\n            actions: \"setLatest\",\n          },\n          setLimit: {\n            target: \".shouldSearch\",\n            actions: \"setLimit\",\n          },\n          selectMessage: {\n            actions: \"selectMessage\",\n          },\n          deselectMessage: {\n            actions: \"deselectMessage\",\n          },\n        },\n      },\n      refreshing: {\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMessages\",\n            target: \"ready\",\n          },\n          fetchFail: {\n            target: \"ready\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setMessages: assign(\n        (context, { messages, partitions, offsetMin, offsetMax }) => ({\n          response: {\n            lastUpdated: new Date(),\n            messages,\n            partitions,\n            offsetMin,\n            offsetMax,\n            filter: {\n              partition: context.partition,\n              timestamp: context.timestamp,\n              offset: context.offset,\n              limit: context.limit,\n              epoch: context.epoch,\n            },\n          },\n        })\n      ),\n      setPartition: assign((_, { value }) => ({ partition: value })),\n      setEpoch: assign((_, { value }) => ({\n        epoch: value,\n      })),\n      setTimestamp: assign((_, { value }) => ({\n        timestamp: value,\n      })),\n      setOffset: assign((_, { value }) => ({\n        offset: value,\n      })),\n      setLimit: assign((_, { value }) => ({\n        limit: value,\n      })),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      setLatest: assign((_) => ({\n        timestamp: undefined,\n        offset: undefined,\n      })),\n      selectMessage: assign((_, { message }) => ({ selectedMessage: message })),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      deselectMessage: assign((_) => ({ selectedMessage: undefined })),\n    },\n    guards: {\n      noMessages: ({ response }) =>\n        response === undefined || response.messages.length === 0,\n      selectedMessageNotAvailable: ({ response, selectedMessage }) =>\n        selectedMessage !== undefined &&\n        response?.messages.find((m) => isSameMessage(m, selectedMessage)) ===\n          undefined,\n      areFiltersChanged: (context) =>\n        context.response?.filter.limit !== context.limit ||\n        context.response?.filter.offset !== context.offset ||\n        context.response?.filter.partition !== context.partition ||\n        context.response?.filter.timestamp !== context.timestamp ||\n        context.response?.filter.epoch !== context.epoch,\n    },\n  }\n);\n","import {\n  Button,\n  Drawer,\n  DrawerContent,\n  PageSection,\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup,\n} from \"@patternfly/react-core\";\nimport { FilterIcon, SearchIcon } from \"@patternfly/react-icons\";\nimport type { BaseCellProps } from \"@patternfly/react-table\";\nimport {\n  InnerScrollContainer,\n  OuterScrollContainer,\n} from \"@patternfly/react-table\";\nimport {\n  FormatDate,\n  Loading,\n  RefreshButton,\n  ResponsiveTable,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport { useMachine } from \"@xstate/react\";\nimport { parseISO } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useMemo, useState } from \"react\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport type { DateIsoString } from \"../../../../ui-models/src/types\";\nimport type { MessageDetailsProps } from \"./components\";\nimport {\n  FilterGroup,\n  LimitSelector,\n  MessageDetails,\n  NoDataCell,\n  NoDataEmptyState,\n  NoResultsEmptyState,\n  OffsetRange,\n  PartitionSelector,\n  UnknownValuePreview,\n} from \"./components\";\nimport \"./KafkaMessageBrowser.css\";\nimport type { MessageApiResponse } from \"./MessageBrowserMachine\";\nimport { MessageBrowserMachine } from \"./MessageBrowserMachine\";\nimport { beautifyUnknownValue, isSameMessage } from \"./utils\";\n\nconst columns = [\n  \"partition\",\n  \"offset\",\n  \"timestamp\",\n  \"key\",\n  \"headers\",\n  \"value\",\n] as const;\n\nconst columnWidths: BaseCellProps[\"width\"][] = [10, 10, 15, 10, undefined, 30];\n\nexport type KafkaMessageBrowserProps = {\n  getMessages: (props: {\n    partition?: number;\n    offset?: number;\n    timestamp?: DateIsoString;\n    limit: number;\n  }) => Promise<{ messages: Message[]; partitions: number }>;\n};\nexport const KafkaMessageBrowser: VoidFunctionComponent<\n  KafkaMessageBrowserProps\n> = ({ getMessages }) => {\n  const [state, send] = useMachine(() => MessageBrowserMachine, {\n    devTools: true,\n    services: {\n      api: (context) => {\n        return (send) => {\n          getMessages({\n            partition: context.partition,\n            offset: context.offset,\n            timestamp: context.timestamp,\n            limit: context.limit,\n          })\n            .then(({ messages, partitions }) =>\n              send({\n                type: \"fetchSuccess\",\n                messages,\n                partitions,\n                offsetMin: context.offset || 0,\n                offsetMax: messages.reduce(\n                  (max, m) => Math.max(max, m.offset || 0),\n                  0\n                ),\n              })\n            )\n            .catch(() => send({ type: \"fetchFail\" }));\n        };\n      },\n    },\n  });\n\n  return (\n    <KafkaMessageBrowserConnected\n      isFirstLoad={state.matches(\"initialLoading\")}\n      isNoData={state.matches(\"noData\") || state.matches(\"error\")}\n      isRefreshing={state.matches(\"refreshing\")}\n      requiresSearch={state.hasTag(\"dirty\")}\n      selectedMessage={state.context.selectedMessage}\n      response={state.context.response}\n      lastUpdated={state.context.response?.lastUpdated}\n      partition={state.context.partition}\n      limit={state.context.limit}\n      filterOffset={state.context.offset}\n      filterEpoch={state.context.epoch}\n      filterTimestamp={state.context.timestamp}\n      setPartition={(value: number | undefined) =>\n        send({ type: \"setPartition\", value })\n      }\n      setOffset={(value: number | undefined) =>\n        send({ type: \"setOffset\", value })\n      }\n      setTimestamp={(value: DateIsoString | undefined) =>\n        send({ type: \"setTimestamp\", value })\n      }\n      setEpoch={(value: number | undefined) =>\n        send({ type: \"setEpoch\", value })\n      }\n      setLatest={() => send({ type: \"setLatest\" })}\n      setLimit={(value: number) => send({ type: \"setLimit\", value })}\n      refresh={() => send({ type: \"refresh\" })}\n      selectMessage={(message: Message) =>\n        send({ type: \"selectMessage\", message })\n      }\n      deselectMessage={() => send({ type: \"deselectMessage\" })}\n    />\n  );\n};\n\nexport type KafkaMessageBrowserConnectedProps = {\n  isFirstLoad: boolean;\n  isNoData: boolean;\n  isRefreshing: boolean;\n  requiresSearch: boolean;\n  selectedMessage: Message | undefined;\n  lastUpdated: Date | undefined;\n  response: MessageApiResponse | undefined;\n  partition: number | undefined;\n  limit: number;\n  filterOffset: number | undefined;\n  filterEpoch: number | undefined;\n  filterTimestamp: DateIsoString | undefined;\n  setPartition: (value: number | undefined) => void;\n  setOffset: (value: number | undefined) => void;\n  setTimestamp: (value: DateIsoString | undefined) => void;\n  setEpoch: (value: number | undefined) => void;\n  setLatest: () => void;\n  setLimit: (value: number) => void;\n  refresh: () => void;\n  selectMessage: (message: Message) => void;\n  deselectMessage: () => void;\n};\nexport const KafkaMessageBrowserConnected: VoidFunctionComponent<\n  KafkaMessageBrowserConnectedProps\n> = ({\n  isFirstLoad,\n  isNoData,\n  isRefreshing,\n  requiresSearch,\n  selectedMessage,\n  response,\n  partition,\n  limit,\n  filterOffset,\n  filterEpoch,\n  filterTimestamp,\n  setPartition,\n  setOffset,\n  setTimestamp,\n  setEpoch,\n  setLatest,\n  setLimit,\n  refresh,\n  selectMessage,\n  deselectMessage,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [defaultTab, setDefaultTab] =\n    useState<MessageDetailsProps[\"defaultTab\"]>(\"value\");\n\n  const columnLabels: { [key in typeof columns[number]]: string } = useMemo(\n    () =>\n      ({\n        partition: t(\"field.partition\"),\n        offset: t(\"field.offset\"),\n        timestamp: t(\"field.timestamp\"),\n        key: t(\"field.key\"),\n        value: t(\"field.value\"),\n        headers: t(\"field.headers\"),\n      } as const),\n    [t]\n  );\n\n  switch (true) {\n    case isFirstLoad:\n      return <Loading />;\n    case isNoData:\n      return <NoDataEmptyState onRefresh={refresh} />;\n    default:\n      return (\n        <PageSection\n          isFilled={true}\n          hasOverflowScroll={true}\n          aria-label={\"TODO\"}\n        >\n          <Drawer isInline={true} isExpanded={selectedMessage !== undefined}>\n            <DrawerContent\n              panelContent={\n                <MessageDetails\n                  message={selectedMessage}\n                  defaultTab={defaultTab}\n                  onClose={deselectMessage}\n                />\n              }\n            >\n              <OuterScrollContainer>\n                <Toolbar\n                  className={\"mas-KafkaMessageBrowser-Toolbar\"}\n                  data-testid={\"message-browser-toolbar\"}\n                >\n                  <ToolbarContent>\n                    <ToolbarToggleGroup\n                      toggleIcon={<FilterIcon />}\n                      breakpoint=\"2xl\"\n                    >\n                      <ToolbarGroup variant=\"filter-group\">\n                        <ToolbarItem>\n                          <PartitionSelector\n                            value={partition}\n                            partitions={response?.partitions || 0}\n                            onChange={setPartition}\n                            isDisabled={isRefreshing}\n                          />\n                        </ToolbarItem>\n                      </ToolbarGroup>\n                      <ToolbarGroup variant=\"filter-group\">\n                        <FilterGroup\n                          isDisabled={isRefreshing}\n                          offset={filterOffset}\n                          epoch={filterEpoch}\n                          timestamp={filterTimestamp}\n                          onOffsetChange={setOffset}\n                          onTimestampChange={setTimestamp}\n                          onEpochChange={setEpoch}\n                          onLatest={setLatest}\n                        />\n                      </ToolbarGroup>\n                      <ToolbarGroup>\n                        <LimitSelector\n                          value={limit}\n                          onChange={setLimit}\n                          isDisabled={isRefreshing}\n                        />\n                      </ToolbarGroup>\n                    </ToolbarToggleGroup>\n                    <ToolbarGroup>\n                      <ToolbarItem>\n                        <Button\n                          variant={\"plain\"}\n                          isDisabled={!requiresSearch || isRefreshing}\n                          aria-label={t(\"common:search_button_label\")}\n                          onClick={refresh}\n                        >\n                          <SearchIcon />\n                        </Button>\n                      </ToolbarItem>\n                      <ToolbarItem>\n                        <RefreshButton\n                          onClick={refresh}\n                          isRefreshing={isRefreshing}\n                          isDisabled={requiresSearch}\n                        />\n                      </ToolbarItem>\n                    </ToolbarGroup>\n                    <ToolbarGroup alignment={{ default: \"alignRight\" }}>\n                      {response?.filter.partition !== undefined &&\n                        response?.messages.length > 0 && (\n                          <OffsetRange\n                            min={response?.offsetMin || 0}\n                            max={response?.offsetMax || 0}\n                          />\n                        )}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n                <InnerScrollContainer>\n                  <ResponsiveTable\n                    ariaLabel={t(\"table_aria_label\")}\n                    columns={columns}\n                    data={response?.messages}\n                    expectedLength={response?.messages?.length}\n                    renderHeader={({ column, Th, key }) => (\n                      <Th key={key}>{columnLabels[column]}</Th>\n                    )}\n                    renderCell={({ column, row, colIndex, Td, key }) => (\n                      <Td\n                        key={key}\n                        dataLabel={columnLabels[column]}\n                        width={columnWidths[colIndex]}\n                      >\n                        {(() => {\n                          const empty = (\n                            <NoDataCell columnLabel={columnLabels[column]} />\n                          );\n                          switch (column) {\n                            case \"partition\":\n                              return row.partition;\n                            case \"offset\":\n                              return row.offset;\n                            case \"timestamp\":\n                              return row.timestamp ? (\n                                <FormatDate\n                                  date={parseISO(row.timestamp)}\n                                  format={\"longWithMilliseconds\"}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"key\":\n                              return row.key ? (\n                                <UnknownValuePreview\n                                  value={row.key}\n                                  truncateAt={40}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"headers\":\n                              return Object.keys(row.headers).length > 0 ? (\n                                <UnknownValuePreview\n                                  value={beautifyUnknownValue(\n                                    JSON.stringify(row.headers)\n                                  )}\n                                  onClick={() => {\n                                    setDefaultTab(\"headers\");\n                                    selectMessage(row);\n                                  }}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"value\":\n                              return row.value ? (\n                                <UnknownValuePreview\n                                  value={beautifyUnknownValue(row.value || \"\")}\n                                  onClick={() => {\n                                    setDefaultTab(\"value\");\n                                    selectMessage(row);\n                                  }}\n                                />\n                              ) : (\n                                empty\n                              );\n                          }\n                        })()}\n                      </Td>\n                    )}\n                    isRowSelected={({ row }) =>\n                      selectedMessage !== undefined &&\n                      isSameMessage(row, selectedMessage)\n                    }\n                    onRowClick={({ row }) => {\n                      setDefaultTab(\"value\");\n                      selectMessage(row);\n                    }}\n                  >\n                    <NoResultsEmptyState\n                      onReset={() => {\n                        setLatest();\n                        setPartition(undefined);\n                        refresh();\n                      }}\n                    />\n                  </ResponsiveTable>\n                </InnerScrollContainer>\n              </OuterScrollContainer>\n            </DrawerContent>\n          </Drawer>\n        </PageSection>\n      );\n  }\n};\n","import {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface CapacityTable {\n  name: string;\n  firstStreamingUnit: string;\n  secondStreamingUnit: string;\n}\n\nexport const KafkaInstanceCapacityTable: FunctionComponent = () => {\n  const { t } = useTranslation(\"kafkaoverview-v2\");\n\n  const capacityTable: CapacityTable[] = [\n    {\n      name: \"Ingress (MB/second)\",\n      firstStreamingUnit: \"up to 50\",\n      secondStreamingUnit: \"up to 100\",\n    },\n    {\n      name: \"Egress (MB/second)\",\n      firstStreamingUnit: \"up to 100\",\n      secondStreamingUnit: \"up to 200\",\n    },\n    {\n      name: \"Storage* (GB)\",\n      firstStreamingUnit: \"up to 1000\",\n      secondStreamingUnit: \"up to 2000\",\n    },\n    {\n      name: \"Topic partitions\",\n      firstStreamingUnit: \"up to 1500\",\n      secondStreamingUnit: \"up to 3000\",\n    },\n    {\n      name: \"Client connections\",\n      firstStreamingUnit: \"up to 3000\",\n      secondStreamingUnit: \"up to 6000\",\n    },\n    {\n      name: \"Connection rate (connections/second)\",\n      firstStreamingUnit: \"up to 100\",\n      secondStreamingUnit: \"up to 200\",\n    },\n    {\n      name: \"Message size (MB)\",\n      firstStreamingUnit: \"up to 1\",\n      secondStreamingUnit: \"up to 1\",\n    },\n  ];\n\n  const columnNames = {\n    name: \"\",\n    firstStreamingUnit: t(\"firstStreamingUnit\"),\n    secondStreamingUnit: t(\"secondStreamingUnit\"),\n  };\n\n  return (\n    <TableComposable>\n      <Thead>\n        <Tr>\n          <Th>{columnNames.name}</Th>\n          <Th>{columnNames.firstStreamingUnit}</Th>\n          <Th>{columnNames.secondStreamingUnit}</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {capacityTable.map((table) => {\n          return (\n            <Tr key={table.name}>\n              <Td dataLabel={columnNames.name}>{table.name}</Td>\n              <Td dataLabel={columnNames.firstStreamingUnit}>\n                {table.firstStreamingUnit}\n              </Td>\n              <Td dataLabel={columnNames.secondStreamingUnit}>\n                {table.secondStreamingUnit}\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </TableComposable>\n  );\n};\n","import {\n  Bullseye,\n  Card,\n  PageSection,\n  PageSectionVariants,\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport classNames from \"classnames\";\nimport type {\n  CSSProperties,\n  FunctionComponent,\n  ReactNode,\n  VoidFunctionComponent,\n} from \"react\";\nimport \"./MarketingPage.css\";\n\nexport type MarketingPageHeroProps = {\n  title: string;\n  tagLine: string;\n  description: string;\n  description2?: string;\n  heroImage: string;\n  heroImageSize: number;\n  heroImageCanRepeat?: boolean;\n  heroImagePositionY?: number;\n  cta?: ReactNode;\n  variant?: \"light\" | \"dark\";\n};\n\nexport const MarketingPageHero: VoidFunctionComponent<\n  MarketingPageHeroProps\n> = ({\n  title,\n  tagLine,\n  description,\n  description2,\n  heroImage,\n  heroImageSize,\n  heroImageCanRepeat = true,\n  heroImagePositionY = 0,\n  cta,\n  variant = \"light\",\n}) => {\n  const style = {\n    \"--appsrv-marketing--banner--before--BackgroundImage\": `url(${heroImage})`,\n    \"--appsrv-marketing--banner--before--BackgroundSize\": `${heroImageSize}px`,\n    \"--appsrv-marketing--banner--before--BackgroundRepeat\": heroImageCanRepeat\n      ? \"repeat\"\n      : \"no-repeat\",\n    \"--appsrv-marketing--banner--before--BackgroundPositionY\": `${heroImagePositionY}px`,\n  } as CSSProperties;\n  return (\n    <PageSection\n      className={classNames(\"appsrv-marketing--banner\", {\n        \"pf-u-background-color-dark-100\": variant === \"dark\",\n        \"pf-u-background-color-100\": variant === \"light\",\n      })}\n      variant={\n        variant === \"dark\"\n          ? PageSectionVariants.dark\n          : PageSectionVariants.light\n      }\n      style={style}\n    >\n      <Stack hasGutter>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          {title}\n        </Title>\n        <Text\n          className={`appsrv-marketing--banner__tagline ${\n            variant === \"dark\" ? \"\" : \"pf-u-color-200\"\n          }`}\n        >\n          {tagLine}\n        </Text>\n        <Text component={TextVariants.p}>{description}</Text>\n        {description2 && (\n          <Text component={TextVariants.p} className=\"pf-u-mt-md\">\n            {description2}\n          </Text>\n        )}\n        {cta && <StackItem>{cta}</StackItem>}\n      </Stack>\n    </PageSection>\n  );\n};\n\nexport const MarketingPageBanner: FunctionComponent = ({ children }) => {\n  return (\n    <PageSection\n      variant={PageSectionVariants.light}\n      className=\"appsrv-marketing--page-section--marketing pf-u-background-color-100\"\n    >\n      <Bullseye>\n        <Text\n          component={TextVariants.p}\n          className=\"appsrv-marketing--banner--text-only\"\n        >\n          {children}\n        </Text>\n      </Bullseye>\n    </PageSection>\n  );\n};\n\nexport type MarketingPageSectionProps = {\n  className?: string;\n};\n\nexport const MarketingPageSection: FunctionComponent<\n  MarketingPageSectionProps & {\n    variant?: \"dark\" | \"light\" | \"default\";\n  }\n> = ({\n  className = \"appsrv-marketing--page-section--marketing\",\n  variant = \"default\",\n  children,\n}) => (\n  <PageSection\n    isWidthLimited\n    className={classNames(className, {\n      \"pf-u-background-color-dark-100\": variant === \"dark\",\n      \"pf-u-background-color-100\": variant === \"light\",\n    })}\n    variant={\n      variant === \"dark\"\n        ? PageSectionVariants.dark\n        : variant === \"light\"\n        ? PageSectionVariants.light\n        : PageSectionVariants.default\n    }\n  >\n    {children}\n  </PageSection>\n);\n\nexport const MarketingPageVideoCard: VoidFunctionComponent<{\n  src: string;\n  title: string;\n}> = ({ src, title }) => (\n  <Card className=\"appsrv-marketing--video\">\n    <div className=\"appsrv-marketing--video__wrapper\">\n      <iframe\n        src={src}\n        title={title}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  </Card>\n);\n","import {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Divider,\n  Flex,\n  FlexItem,\n  Grid,\n  Split,\n  SplitItem,\n  Stack,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport {\n  AppSpeedKeyArt,\n  ExternalLink,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { KafkaInstanceCapacityTable } from \"./KafkaInstanceCapacityTable\";\nimport { LogoAWS, LogoAzure, LogoGCP } from \"./Logos/images\";\nimport { MarketingPageHero, MarketingPageSection } from \"./MarketingPage\";\n\nexport const KafkaPageV3: FunctionComponent = () => {\n  const { t } = useTranslation([\"kafkaoverview-v3\"]);\n  return (\n    <>\n      <MarketingPageHero\n        title={t(\"heroTitle\")}\n        tagLine={t(\"heroTagline\")}\n        description={t(\"heroDescription\")}\n        heroImage={AppSpeedKeyArt}\n        heroImageSize={478}\n        heroImageCanRepeat={false}\n        heroImagePositionY={-99}\n      />\n      <MarketingPageSection>\n        <Grid hasGutter lg={6}>\n          <Card\n            ouiaId=\"card-overview-purchase-now\"\n            aria-label={t(\"kafkaoverview:purchaseCardTitle\")}\n          >\n            <CardHeader>\n              <CardHeaderMain>\n                <CardTitle>\n                  <Title headingLevel=\"h2\">\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardTitle\"}\n                    >\n                      <span className=\"pf-u-color-200 pf-u-font-size-sm\"></span>\n                    </Trans>\n                  </Title>\n                </CardTitle>\n              </CardHeaderMain>\n            </CardHeader>\n            <CardBody>{t(\"purchaseCardMainText\")}</CardBody>\n            <CardFooter>\n              <Flex spaceItems={{ default: \"spaceItems2xl\" }}>\n                <FlexItem>\n                  <ExternalLink\n                    href={\n                      \"https://marketplace.redhat.com/en-us/products/red-hat-openshift-streams-for-apache-kafka\"\n                    }\n                    testId={\"cardPurchase-buttonRH\"}\n                    className={\"pf-u-ml-md \"}\n                  >\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardCallToActionButtonRedHat\"}\n                      components={{\n                        bold: <strong />,\n                        size: <span className=\"pf-u-font-size-lg\" />,\n                      }}\n                    />\n                  </ExternalLink>\n                </FlexItem>\n\n                <FlexItem>\n                  <ExternalLink\n                    href={\n                      \"https://aws.amazon.com/marketplace/pp/prodview-3xohcoyuwkumc\"\n                    }\n                    testId={\"cardPurchase-buttonAWS\"}\n                    className={\"pf-u-ml-md\"}\n                  >\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardCallToActionButtonAWS\"}\n                      components={{\n                        bold: <strong />,\n                        size: <span className=\"pf-u-font-size-lg\" />,\n                      }}\n                    />\n                  </ExternalLink>\n                </FlexItem>\n              </Flex>\n            </CardFooter>\n          </Card>\n          <Card\n            ouiaId=\"card-overview-contact-sales\"\n            aria-label={t(\"kafkaoverview:contactSalesCardTitle\")}\n          >\n            <CardHeader>\n              <CardTitle>\n                <Title headingLevel=\"h2\">\n                  <Trans\n                    ns={\"kafkaoverview-v3\"}\n                    i18nKey={\"contactSalesCardTitle\"}\n                  >\n                    <span className=\"pf-u-color-200 pf-u-font-size-sm\"></span>\n                  </Trans>\n                </Title>\n              </CardTitle>\n            </CardHeader>\n            <CardBody>{t(\"contactSalesCardMainText\")}</CardBody>\n            <CardFooter>\n              <ExternalLink\n                href={\n                  \"https://www.redhat.com/en/technologies/cloud-computing/openshift/openshift-streams-for-apache-kafka#contact-us\"\n                }\n                testId={\"cardContactSales-buttonCTA\"}\n                className={\"pf-u-ml-md\"}\n              >\n                <Trans\n                  ns={\"kafkaoverview-v3\"}\n                  i18nKey={\"contactSalesCardCallToActionButton\"}\n                  components={{\n                    bold: <strong />,\n                    size: <span className=\"pf-u-font-size-lg\" />,\n                  }}\n                />\n              </ExternalLink>\n            </CardFooter>\n          </Card>\n        </Grid>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"pricingModalTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Flex spaceItems={{ default: \"spaceItemsXl\" }}>\n              <Flex\n                alignSelf={{ default: \"alignSelfCenter\" }}\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <DescriptionList isHorizontal>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"steamingUnit\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"streamingUnit_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"dataTransfer\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"dataTransfer_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>{t(\"storage\")}</DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"storage_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                  </DescriptionList>\n                </FlexItem>\n              </Flex>\n              <Divider isVertical />\n              <FlexItem flex={{ default: \"flex_1\" }}>\n                <TextContent>\n                  <Text component={TextVariants.p}>\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"streamingUnitText\"}\n                      components={{ bold: <strong /> }}\n                    />\n                  </Text>\n                </TextContent>\n              </FlexItem>\n            </Flex>\n          </CardBody>\n        </Card>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"kafkaInstanceCapacityTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Stack hasGutter>\n              <Text component={TextVariants.p}>\n                {t(\"kafkaInstanceCapacityDescription\")}\n              </Text>\n              <KafkaInstanceCapacityTable />\n            </Stack>\n          </CardBody>\n          <CardFooter>\n            <TextContent className={\"pf-u-font-size-sm\"}>\n              <Trans\n                ns={\"kafkaoverview-v3\"}\n                i18nKey={\"kafkaInstanceCapacityfooter\"}\n                components={[\n                  <ExternalLink\n                    href={\"https://access.redhat.com/support\"}\n                    testId={\"SupportLink\"}\n                    className={\"pf-u-ml-xs\"}\n                  />,\n                  <ExternalLink\n                    href={\n                      \"https://access.redhat.com/documentation/en-us/red_hat_openshift_streams_for_apache_kafka/1/guide/aced8e5e-8229-4cb2-82f9-87a8caa24bb3\"\n                    }\n                    testId={\"MonitoringDiskSpaceLink\"}\n                    className={\"pf-u-ml-xs\"}\n                  />,\n                ]}\n              />\n            </TextContent>\n          </CardFooter>\n        </Card>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"cloudProvidersTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Flex\n              spaceItems={{ default: \"spaceItemsXl\" }}\n              direction={{ default: \"column\", xl: \"row\" }}\n            >\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img src={LogoAWS} alt={\"\"} style={{ height: \"60px\" }} />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"awsWebServiceTitle\")}\n                      </Title>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n              <Divider\n                orientation={{ default: \"horizontal\", xl: \"vertical\" }}\n              />\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img src={LogoGCP} alt={\"\"} style={{ height: \"60px\" }} />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"googleCloudProviderTitle\")}\n                      </Title>\n                      <Text\n                        component={TextVariants.p}\n                        className={\"pf-u-color-200\"}\n                      >\n                        {t(\"googleCloudProviderDescription\")}\n                      </Text>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n              <Divider\n                orientation={{ default: \"horizontal\", xl: \"vertical\" }}\n              />\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img\n                        src={LogoAzure}\n                        alt={\"\"}\n                        style={{ height: \"60px\" }}\n                      />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"microsoftAzureTitle\")}\n                      </Title>\n                      <Text\n                        component={TextVariants.p}\n                        className={\"pf-u-color-200\"}\n                      >\n                        {t(\"microsoftAzureDescription\")}\n                      </Text>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n            </Flex>\n          </CardBody>\n        </Card>\n      </MarketingPageSection>\n    </>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type EmptyStateNoTopicProps = {\n  onCreateTopic: () => void;\n};\n\nexport const EmptyStateNoTopic: VoidFunctionComponent<\n  EmptyStateNoTopicProps\n> = ({ onCreateTopic }) => {\n  const { t } = useTranslation(\"topic\");\n\n  return (\n    <EmptyState\n      data-ouia-page-id=\"emptyStateTopics\"\n      variant={EmptyStateVariant.large}\n    >\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_topics_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"empty_topics_body\")}</EmptyStateBody>\n      <Button\n        data-testid=\"actionCreateTopic\"\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={onCreateTopic}\n      >\n        {t(\"create_topic\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import type { ResourceOperationValue } from \"./components/ResourceOperation\";\nimport type { ResourcePermissionValue } from \"./components/ResourcePermission\";\nimport type { ResourcePrefixRuleValue } from \"./components/ResourcePrefixRule\";\nimport type { ResourceTypeValue } from \"./components/ResourceType\";\n\nexport type AclOperation =\n  | \"ALL\"\n  | \"READ\"\n  | \"WRITE\"\n  | \"CREATE\"\n  | \"DELETE\"\n  | \"ALTER\"\n  | \"DESCRIBE\"\n  | \"DESCRIBE_CONFIGS\"\n  | \"ALTER_CONFIGS\";\n\nexport type AclResourceType =\n  | \"GROUP\"\n  | \"TOPIC\"\n  | \"CLUSTER\"\n  | \"TRANSACTIONAL_ID\";\n\nexport type AclPatternType = \"LITERAL\" | \"PREFIXED\";\n\nexport type AclPermissionType = \"ALLOW\" | \"DENY\";\n\nexport interface AclBinding {\n  /**\n   *\n   * @type {AclResourceType}\n   * @memberof AclBinding\n   */\n  resourceType: AclResourceType;\n  /**\n   *\n   * @type {string}\n   * @memberof AclBinding\n   */\n  resourceName: string;\n  /**\n   *\n   * @type {AclPatternType}\n   * @memberof AclBinding\n   */\n  patternType: AclPatternType;\n  /**\n   * Identifies the user or service account to which an ACL entry is bound. The literal prefix value of `User:` is required. May be used to specify all users with value `User:*`.\n   * @type {string}\n   * @memberof AclBinding\n   */\n  principal: string;\n  /**\n   *\n   * @type {AclOperation}\n   * @memberof AclBinding\n   */\n  operation: AclOperation;\n  /**\n   *\n   * @type {AclPermissionType}\n   * @memberof AclBinding\n   */\n  permission: AclPermissionType;\n}\nexport type AclTablePermissionsType = {\n  permission: AclPermissionType;\n  operation: AclOperation;\n};\nexport type AclTableResourceType = {\n  resourceType: AclResourceType;\n  resourceName: string;\n  patternType: AclPatternType;\n};\nexport type Permissions = {\n  account: string;\n  permission: AclTablePermissionsType;\n  resource: AclTableResourceType;\n};\nexport enum PrincipalType {\n  UserAccount = \"USER_ACCOUNT\",\n  ServiceAccount = \"SERVICE_ACCOUNT\",\n}\n\nexport type Account = {\n  id: string;\n  principalType: PrincipalType;\n  displayName: string;\n  email?: string;\n};\n\ntype ManualAcl = {\n  resourceType: ResourceTypeValue | undefined;\n  resourcePrefix: ResourcePrefixRuleValue;\n  resourceName: string | undefined;\n  resourcePermission: ResourcePermissionValue;\n  resourceOperation: ResourceOperationValue | undefined;\n};\n\ntype ProduceTopicTemplate = {\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n};\n\ntype ConsumeTopicTemplate = {\n  consumerResourceName: string | undefined;\n  consumerResourcePrefixRule: ResourcePrefixRuleValue;\n  topicResourceName: string | undefined;\n  topicResourcePrefixRule: ResourcePrefixRuleValue;\n};\n\ntype ManageAccessTemplate = {\n  instanceName: string;\n};\nexport type AddAclType =\n  | ({ type: \"manual\" } & ManualAcl)\n  | ({ type: \"consume-topic\" } & ConsumeTopicTemplate)\n  | ({ type: \"produce-topic\" } & ProduceTopicTemplate)\n  | ({ type: \"manage-access\" } & ManageAccessTemplate);\n\nexport const createEmptyManualAcl = (): AddAclType => {\n  return {\n    type: \"manual\",\n    resourceName: undefined,\n    resourceType: undefined,\n    resourceOperation: undefined,\n    resourcePrefix: \"Is\",\n    resourcePermission: \"allow\",\n  };\n};\nexport const createEmptyProduceTopicAcl = (): AddAclType => {\n  return {\n    type: \"produce-topic\",\n    prefixRuleValue: \"Is\",\n    resourceNameValue: undefined,\n  };\n};\nexport const createEmptyConsumeTopicAcl = (): AddAclType => {\n  return {\n    type: \"consume-topic\",\n    consumerResourceName: undefined,\n    consumerResourcePrefixRule: \"Is\",\n    topicResourceName: undefined,\n    topicResourcePrefixRule: \"Is\",\n  };\n};\nexport const createEmptyManageAccessAcl = (kafkaName: string): AddAclType => {\n  return {\n    type: \"manage-access\",\n    instanceName: kafkaName,\n  };\n};\n","import { Button, PageSection } from \"@patternfly/react-core\";\nimport { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  EmptyStateNoResults,\n  TableView,\n} from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport type { Topic, TopicField } from \"ui-models/src/models/topic\";\nimport { useTopicLabels } from \"../../hooks\";\nimport type { EmptyStateNoTopicProps } from \"./components\";\nimport { EmptyStateNoTopic } from \"./components\";\nimport { formattedRetentionSize, formattedRetentionTime } from \"./types\";\n\ntype SubUnion<T, U extends T> = U;\n\nconst Columns: SubUnion<\n  TopicField,\n  \"name\" | \"partitions\" | \"retention.ms\" | \"retention.bytes\"\n>[] = [\"name\", \"partitions\", \"retention.ms\", \"retention.bytes\"];\n\nexport type KafkaTopicsProps<T extends Topic> = {\n  topics: Array<T> | undefined;\n  getUrlFortopic: (row: T) => string;\n  onDelete: (row: T) => void;\n  onEdit: (row: T) => void;\n  topicName: string[];\n  onSearchTopic: (value: string) => void;\n  onRemoveTopicChip: (value: string) => void;\n  onRemoveTopicChips: () => void;\n  onTopicLinkClick: (row: T) => void;\n} & Pick<\n  TableViewProps<T, typeof Columns[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n> &\n  EmptyStateNoTopicProps;\n\nexport const KafkaTopics = <T extends Topic>({\n  topics,\n  onDelete,\n  onEdit,\n  isColumnSortable,\n  itemCount,\n  onSearchTopic,\n  topicName,\n  onClearAllFilters,\n  onCreateTopic,\n  page,\n  perPage,\n  onPageChange,\n  onRemoveTopicChip,\n  onRemoveTopicChips,\n  getUrlFortopic,\n  onTopicLinkClick,\n}: KafkaTopicsProps<T>) => {\n  const { t } = useTranslation(\"topic\");\n\n  const labels = useTopicLabels();\n\n  const isFiltered = topicName.length > 0;\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"topic_list_table\")}\n        data={topics}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"name\":\n                    return (\n                      <Button\n                        variant=\"link\"\n                        component={(props) => (\n                          <Link\n                            to={getUrlFortopic(row)}\n                            {...props}\n                            data-testid=\"tableTopics-linkTopic\"\n                            data-ouia-component-id=\"table-link\"\n                          >\n                            {row.name}\n                          </Link>\n                        )}\n                        onClick={() => onTopicLinkClick(row)}\n                        isInline\n                      />\n                    );\n                  case \"partitions\":\n                    return row.partitions.length;\n                  case \"retention.ms\":\n                    return formattedRetentionTime(row[\"retention.ms\"].value);\n                  case \"retention.bytes\":\n                    return formattedRetentionSize(row[\"retention.bytes\"].value);\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row, ActionsColumn }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"table.actions.edit\"),\n                onClick: () => onEdit(row),\n              },\n              {\n                title: t(\"table.actions.delete\"),\n                onClick: () => onDelete(row),\n              },\n            ]}\n          />\n        )}\n        isColumnSortable={isColumnSortable}\n        filters={{\n          [labels.fields.name]: {\n            type: \"search\",\n            chips: topicName,\n            onSearch: onSearchTopic,\n            onRemoveChip: onRemoveTopicChip,\n            onRemoveGroup: onRemoveTopicChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"input_field_invalid_message\"),\n          },\n        }}\n        actions={[\n          {\n            label: t(\"create_topic\"),\n            onClick: onCreateTopic,\n            isPrimary: true,\n          },\n        ]}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        isFiltered={isFiltered}\n        onClearAllFilters={onClearAllFilters}\n        emptyStateNoData={<EmptyStateNoTopic onCreateTopic={onCreateTopic} />}\n        emptyStateNoResults={<EmptyStateNoResults />}\n      />\n    </PageSection>\n  );\n};\n","import type { CardKafkaInstanceMetricsLimits } from \"./components\";\n\nexport type TimeSeriesMetrics = { [timestamp: string]: number };\nexport type PartitionBytesMetric = { [partition: string]: TimeSeriesMetrics };\n\nexport enum DurationOptions {\n  Last5minutes = 5,\n  Last15minutes = 15,\n  Last30minutes = 30,\n  Last1hour = 60,\n  Last3hours = 3 * 60,\n  Last6hours = 6 * 60,\n  Last12hours = 12 * 60,\n  Last24hours = 24 * 60,\n  Last2days = 2 * 24 * 60,\n  Last7days = 7 * 24 * 60,\n}\n\nexport type GetTopicsMetricsResponse = {\n  kafkaTopics: string[];\n  metricsTopics: string[];\n  bytesOutgoing: TimeSeriesMetrics;\n  bytesIncoming: TimeSeriesMetrics;\n  bytesPerPartition: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n};\n\nexport type GetKafkaInstanceMetricsResponse = {\n  usedDiskSpaceMetrics: TimeSeriesMetrics;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n} & CardKafkaInstanceMetricsLimits;\n\nexport type GetMetricsKpiResponse = {\n  topics: number;\n  topicPartitions: number;\n  consumerGroups: number;\n  topicPartitionsLimit: number;\n};\n","import type { MenuProps } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  Dropdown,\n  DropdownToggle,\n  DropdownToggleAction,\n  Menu,\n  MenuContent,\n  MenuGroup,\n  MenuItem,\n  MenuList,\n  Popper,\n} from \"@patternfly/react-core\";\nimport type {\n  MouseEvent as ReactMouseEvent,\n  VoidFunctionComponent,\n} from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type PermissionsDropdownProps = {\n  onAddPermission: () => void;\n  onShortcutConsumeTopic: () => void;\n  onShortcutProduceTopic: () => void;\n  onShortcutManageAccess: () => void;\n};\n\nexport const PermissionsDropdown: VoidFunctionComponent<\n  PermissionsDropdownProps\n> = ({\n  onAddPermission,\n  onShortcutConsumeTopic,\n  onShortcutProduceTopic,\n  onShortcutManageAccess,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  const [isOpen, setIsOpen] = useState(false);\n  useState<string | number | undefined>(0);\n\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const handleMenuKeys = useCallback(\n    (event: KeyboardEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        event.target &&\n        menuRef.current.contains(event.target as Node)\n      ) {\n        if (event.key === \"Escape\" || event.key === \"Tab\") {\n          setIsOpen(!isOpen);\n        }\n      }\n    },\n    [isOpen]\n  );\n\n  const handleClickOutside = useCallback(\n    (event: MouseEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        !menuRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleMenuKeys);\n    window.addEventListener(\"click\", handleClickOutside);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleMenuKeys);\n      window.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, [handleClickOutside, handleMenuKeys, isOpen, menuRef]);\n\n  const onToggleClick = useCallback((open: boolean, ev: ReactMouseEvent) => {\n    ev.stopPropagation(); // Stop handleClickOutside from handling\n    setTimeout(() => {\n      if (menuRef.current) {\n        const firstElement = menuRef.current.querySelector(\n          \"li > button,input:not(:disabled)\"\n        );\n        firstElement && (firstElement as HTMLElement).focus();\n      }\n    }, 0);\n    setIsOpen(open);\n  }, []);\n\n  const handleSelect: MenuProps[\"onSelect\"] = (_event, itemId) => {\n    setIsOpen(false);\n    switch (itemId) {\n      case \"add_permission\":\n        onAddPermission();\n        break;\n      case \"shortcut_consume_topic\":\n        onShortcutConsumeTopic();\n        break;\n      case \"shortcut_produce_topic\":\n        onShortcutProduceTopic();\n        break;\n      case \"shortcut_manage_access\":\n        onShortcutManageAccess();\n        break;\n    }\n  };\n\n  const onActionClick = (\n    event: ReactMouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    onAddPermission();\n  };\n\n  const menu = (\n    <Menu onSelect={handleSelect} key=\"acls-menu\" ref={menuRef}>\n      <MenuContent>\n        <MenuList>\n          <MenuGroup>\n            <MenuList>\n              <MenuItem itemId={\"add_permission\"}>\n                {t(\"permissions_dropdown.add_permission\")}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n\n          <Divider />\n          <MenuGroup label={t(\"permissions_dropdown.task_based_permission\")}>\n            <MenuList>\n              <MenuItem\n                itemId={\"shortcut_consume_topic\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_consume_topic_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_consume_topic\")}\n              </MenuItem>\n              <MenuItem\n                itemId={\"shortcut_produce_topic\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_produce_topic_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_produce_topic\")}\n              </MenuItem>\n              <MenuItem\n                itemId={\"shortcut_manage_access\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_manage_access_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_manage_access\")}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n        </MenuList>\n      </MenuContent>\n    </Menu>\n  );\n\n  const toggle = (\n    <Dropdown\n      toggle={\n        <DropdownToggle\n          data-testid={\"permissions-dropdown-toggle\"}\n          splitButtonItems={[\n            <DropdownToggleAction\n              key=\"cog-action\"\n              aria-label={t(\"permissions_dropdown.add_permission\")}\n              onClick={onActionClick}\n            >\n              {t(\"permissions_dropdown.add_permission\")}\n            </DropdownToggleAction>,\n          ]}\n          splitButtonVariant=\"action\"\n          onToggle={onToggleClick}\n        />\n      }\n    />\n  );\n\n  return (\n    <Popper\n      trigger={toggle}\n      popper={menu}\n      isVisible={isOpen}\n      popperMatchesTriggerWidth={false}\n    />\n  );\n};\n","import type { VFC } from \"react\";\nimport type { LabelProps } from \"@patternfly/react-core\";\nimport { Label } from \"@patternfly/react-core\";\nimport type { AclResourceType } from \"../types\";\nimport \"./ResourceTypeLabel.css\";\n\nexport type SolidLabelProps = {\n  variant: AclResourceType;\n};\n\ntype Variant = {\n  labelColor: LabelProps[\"color\"];\n  content: string;\n};\n\nexport const ResourceTypeLabel: VFC<SolidLabelProps> = ({ variant }) => {\n  const getVariant = (): Variant => {\n    switch (variant) {\n      case \"GROUP\":\n        return { labelColor: \"green\", content: \"G\" };\n      case \"CLUSTER\":\n        return { labelColor: \"grey\", content: \"KI\" };\n      case \"TOPIC\":\n        return { labelColor: \"blue\", content: \"T\" };\n      case \"TRANSACTIONAL_ID\":\n        return { labelColor: \"orange\", content: \"TI\" };\n    }\n  };\n\n  const { labelColor, content } = getVariant() || {};\n\n  return (\n    <Label isCompact color={labelColor} className={`mas-m-solid`}>\n      {content}\n    </Label>\n  );\n};\n","import type { FunctionComponent, VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Label, LabelGroup, Tooltip } from \"@patternfly/react-core\";\n\nimport type {\n  Account,\n  AclOperation,\n  AclPatternType,\n  AclPermissionType,\n  AclResourceType,\n} from \"../types\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { InfoCircleIcon } from \"@patternfly/react-icons\";\nimport { PrincipalType } from \"..\";\n\nexport const DisplayResourceName: VFC<{ resourceType: AclResourceType }> = ({\n  resourceType,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  switch (resourceType) {\n    case \"GROUP\":\n      return t(\"resourceTypes.consumer_group\");\n    case \"TOPIC\":\n      return t(\"resourceTypes.topic\");\n    case \"CLUSTER\":\n      return t(\"resourceTypes.kafka_instance\");\n    case \"TRANSACTIONAL_ID\":\n      return t(\"resourceTypes.transactional_id\");\n  }\n};\n\nconst PatternType: VFC<{ patternType: AclPatternType }> = ({ patternType }) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  if (patternType === \"PREFIXED\") {\n    return t(\"pattern_type_prefixed\");\n  } else {\n    return t(\"pattern_type_literal\");\n  }\n};\n\nexport type ResourceCellProps = {\n  resourceType: AclResourceType;\n  patternType: AclPatternType;\n  resourceName: string;\n};\n\nexport const ResourceCell: FunctionComponent<ResourceCellProps> = ({\n  resourceType,\n  patternType,\n  resourceName,\n}) => {\n  if (resourceType === \"CLUSTER\") {\n    return (\n      <>\n        <ResourceTypeLabel variant={resourceType} />{\" \"}\n        <DisplayResourceName resourceType={resourceType} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ResourceTypeLabel variant={resourceType} />{\" \"}\n      <DisplayResourceName resourceType={resourceType} />{\" \"}\n      <PatternType patternType={patternType} /> \"{resourceName}\"\n    </>\n  );\n};\n\nexport type PermissionOperationCellProps = {\n  permission: AclPermissionType;\n  operation: AclOperation | AclOperation[];\n};\n\nexport const PermissionOperationCell: FunctionComponent<\n  PermissionOperationCellProps\n> = ({ permission, operation }) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const permissions: { [key in AclPermissionType]: string } = {\n    ALLOW: t(\"permissions.allow\"),\n    DENY: t(\"permissions.deny\"),\n  };\n  const operations: { [key in AclOperation]: string } = {\n    ALL: t(\"operations.all\"),\n    READ: t(\"operations.read\"),\n    WRITE: t(\"operations.write\"),\n    CREATE: t(\"operations.create\"),\n    DELETE: t(\"operations.delete\"),\n    ALTER: t(\"operations.alter\"),\n    DESCRIBE: t(\"operations.describe\"),\n    DESCRIBE_CONFIGS: t(\"operations.describe_configs\"),\n    ALTER_CONFIGS: t(\"operations.alter_configs\"),\n  };\n  return (\n    <LabelGroup numLabels={4}>\n      {permission && (\n        <Label\n          variant=\"outline\"\n          color={permission === \"DENY\" ? \"red\" : undefined}\n        >\n          {permissions[permission]}\n        </Label>\n      )}\n      {Array.isArray(operation) ? (\n        operation.map((value, key) => (\n          <Label key={key} variant=\"outline\">\n            {operations[value]}\n          </Label>\n        ))\n      ) : (\n        <Label variant=\"outline\">{operations[operation]}</Label>\n      )}\n    </LabelGroup>\n  );\n};\n\nexport type PrincipalCellProps = {\n  isDeleteEnabled: boolean;\n  isAllAccounts?: boolean;\n  onRemoveAcl?: () => void;\n  isReviewTable?: boolean;\n  principal?: string;\n  allAccounts?: Account;\n};\n\nexport const PrincipalCell: VFC<PrincipalCellProps> = ({\n  isDeleteEnabled,\n  isAllAccounts,\n  onRemoveAcl,\n  isReviewTable = true,\n  principal,\n  allAccounts,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  const principalWithTooltip = () => {\n    return allAccounts?.principalType == PrincipalType.ServiceAccount &&\n      !isReviewTable ? (\n      <Tooltip\n        content={\n          <div>\n            Type: {allAccounts && allAccounts.principalType} <br />\n          </div>\n        }\n      >\n        <span tabIndex={0}>\n          {\" \"}\n          {principal?.split(\":\")[1]} <InfoCircleIcon color=\"grey\" />\n        </span>\n      </Tooltip>\n    ) : (\n      !isReviewTable && (\n        <Tooltip\n          content={\n            <div>\n              Type: {allAccounts?.principalType} <br />\n              Name: {allAccounts?.displayName} <br />\n              Email: {allAccounts?.email}\n            </div>\n          }\n        >\n          <span tabIndex={0}>\n            {principal?.split(\":\")[1]} <InfoCircleIcon color=\"grey\" />\n          </span>\n        </Tooltip>\n      )\n    );\n  };\n\n  return (\n    <div\n      className={\n        isReviewTable\n          ? \"pf-u-display-flex pf-u-justify-content-space-between pf-u-justify-content-flex-end-on-lg pf-u-align-items-center\"\n          : \"\"\n      }\n    >\n      {isAllAccounts && isReviewTable ? (\n        <Label variant=\"outline\">{t(\"table.all_accounts\")}</Label>\n      ) : !isReviewTable && principal == \"User:*\" ? (\n        <Label variant={\"outline\"}>{t(\"table.all_accounts\")}</Label>\n      ) : (\n        principalWithTooltip()\n      )}\n\n      {isDeleteEnabled && onRemoveAcl != undefined && (\n        <RemoveButton\n          variant=\"link\"\n          tooltip={t(\"remove_permission_tooltip\")}\n          onClick={onRemoveAcl}\n          ariaLabel={t(\"operations.delete\")}\n        />\n      )}\n    </div>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type PermissionsTableEmptyStateProps = {\n  openManagePermissions: () => void;\n};\nexport const PermissionsTableEmptyState: React.FunctionComponent<\n  PermissionsTableEmptyStateProps\n> = ({ openManagePermissions }) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  return (\n    <EmptyState\n      data-ouia-page-id=\"emptyStateTopics\"\n      variant={EmptyStateVariant.large}\n    >\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"no_results_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_results_body\")}</EmptyStateBody>\n      <Button\n        data-testid=\"actionManagePermissions\"\n        ouiaId=\"button-manage-permissions\"\n        variant=\"primary\"\n        onClick={openManagePermissions}\n      >\n        {t(\"dialog_title\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport { TableView } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Account, Permissions } from \"../types\";\nimport { PrincipalCell, PermissionOperationCell, ResourceCell } from \"./Cells\";\nimport { useEffect, useState } from \"react\";\nimport { PageSection } from \"@patternfly/react-core\";\nimport { PermissionsTableEmptyState } from \"./EmptyPermissionsTable\";\n\ntype SubUnion<T, U extends T> = U;\nexport type PermissionsField = keyof Permissions;\nconst Columns: SubUnion<\n  PermissionsField,\n  \"account\" | \"permission\" | \"resource\"\n>[] = [\"account\", \"permission\", \"resource\"];\n\nexport type PermissionsTableProps<T extends Permissions> = {\n  allAccounts: Account[] | undefined;\n  permissions: Array<T> | undefined;\n  onDelete: (rowIndex: number) => void;\n  onDeleteSelected: (rowIndex: number[]) => void;\n  onManagePermissions: () => void;\n  onManagePermissionsActionItem: (account: string) => void;\n  onPerPageChange: (page: number, perPage: number) => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"onClearAllFilters\"\n>;\n\nexport const PermissionsTable = <T extends Permissions>({\n  allAccounts,\n  permissions,\n  onDelete,\n  itemCount,\n  page,\n  perPage,\n  onDeleteSelected,\n  onPageChange,\n  onManagePermissions,\n  onManagePermissionsActionItem,\n}: PermissionsTableProps<T>) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const [checkedRows, setCheckedRows] = useState<number[]>([]);\n\n  useEffect(() => {\n    //Only clear all the checked row when they are deleted\n    setCheckedRows([]);\n  }, [permissions]);\n\n  const labels: { [field in (typeof Columns)[number]]: string } = {\n    account: t(\"account_id_title\"),\n    permission: t(\"table.permissions_column_title\"),\n    resource: t(\"table.resource_column_title\"),\n  };\n  const onCheck = (isSelecting: boolean, rowIndex: number) => {\n    if (rowIndex != undefined) {\n      setCheckedRows(\n        isSelecting\n          ? [...checkedRows, rowIndex]\n          : checkedRows.filter((row) => row !== rowIndex)\n      );\n    }\n  };\n\n  const isRowChecked = (rowIndex: number) => {\n    return checkedRows.includes(rowIndex);\n  };\n\n  const onBulkDelete = () => {\n    onDeleteSelected(checkedRows);\n  };\n\n  return (\n    <PageSection hasOverflowScroll={true}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"consumerGroup.consumer_group_list\")}\n        actions={[\n          {\n            onClick: onManagePermissions,\n            label: t(\"dialog_title\"),\n            isPrimary: true,\n          },\n        ]}\n        kebabActions={[\n          {\n            onClick: onBulkDelete,\n            label: t(\"delete_selected\"),\n            isDisabled: checkedRows.length > 0 ? false : true,\n          },\n        ]}\n        data={permissions}\n        columns={Columns}\n        onCheck={onCheck}\n        isRowChecked={({ rowIndex }) => isRowChecked(rowIndex)}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels[column]}>\n              {(() => {\n                switch (column) {\n                  case \"account\":\n                    return (\n                      <PrincipalCell\n                        isReviewTable={false}\n                        principal={row.account}\n                        isDeleteEnabled={false}\n                        allAccounts={\n                          allAccounts?.filter(\n                            (value) => `User:${value.id}` == row.account\n                          )[0]\n                        }\n                      />\n                    );\n                  case \"permission\":\n                    return (\n                      <PermissionOperationCell\n                        permission={row.permission.permission}\n                        operation={row.permission.operation}\n                      />\n                    );\n                  case \"resource\":\n                    return (\n                      <ResourceCell\n                        patternType={row.resource.patternType}\n                        resourceType={row.resource.resourceType}\n                        resourceName={row.resource.resourceName}\n                      />\n                    );\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ ActionsColumn, rowIndex, row }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"manage\"),\n                onClick: () =>\n                  onManagePermissionsActionItem(\n                    row.account == \"User:*\"\n                      ? \"all-accounts\"\n                      : row.account?.split(\":\")[1]\n                  ),\n              },\n              {\n                title: t(\"common:delete\"),\n                onClick: () => onDelete(rowIndex),\n              },\n            ]}\n          />\n        )}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        emptyStateNoData={\n          <PermissionsTableEmptyState\n            openManagePermissions={onManagePermissions}\n          />\n        }\n        emptyStateNoResults={\n          <PermissionsTableEmptyState\n            openManagePermissions={onManagePermissions}\n          />\n        }\n      />\n    </PageSection>\n  );\n};\n","import type React from \"react\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Account } from \"../types\";\nimport { PrincipalType } from \"../types\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { Button, Form, Modal } from \"@patternfly/react-core\";\nimport { Skeleton } from \"@patternfly/react-core\";\nimport { FormGroup, Popover } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\n\nexport type SelectAccountProps = {\n  accounts: Account[] | undefined;\n  initialOpen?: boolean;\n  kafkaName: string;\n  id?: string;\n  onNext: (selectedAccount: string | undefined) => void;\n  onClose: () => void;\n};\n\nexport const SelectAccount: React.VFC<SelectAccountProps> = ({\n  accounts,\n  initialOpen = false,\n  kafkaName,\n  id,\n  onNext,\n  onClose,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [isDirty, setIsDirty] = useState<boolean>(false);\n  const [selectedAccount, setSelectedAccount] = useState<string>();\n\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const onToggle = (newState: boolean) => {\n    setIsOpen(newState);\n  };\n\n  const clearSelection = () => {\n    setSelectedAccount(undefined);\n    setIsDirty(true);\n    setIsOpen(false);\n  };\n\n  const noServiceAccounts = [\n    <SelectOption\n      isNoResultsOption={true}\n      isDisabled={true}\n      key={t(\"no_results_found\")}\n    >\n      {t(\"no_results_found\")}\n    </SelectOption>,\n  ];\n  const noUserAccounts = [\n    <SelectOption\n      isNoResultsOption={true}\n      isDisabled={true}\n      key={\"no_user_accounts\"}\n    >\n      {t(\"no_results_found\")}\n    </SelectOption>,\n  ];\n\n  function makeOptions(filterValue = \"\") {\n    const filter = filterValue.toLowerCase();\n    const filteredAccounts =\n      filter !== \"\"\n        ? accounts?.filter(\n            (principal) =>\n              principal.displayName.toLowerCase().includes(filter) ||\n              principal.id.includes(filter)\n          )\n        : accounts;\n\n    const serviceAccountOptions = filteredAccounts\n      ?.filter(\n        (principal) => principal.principalType === PrincipalType.ServiceAccount\n      )\n      .sort((a, b) =>\n        a.displayName && b.displayName\n          ? a.displayName.localeCompare(b.displayName)\n          : -1\n      )\n      .map((principal, index) => (\n        <SelectOption\n          key={index}\n          value={principal.id}\n          description={principal.displayName}\n        >\n          {principal.id}\n        </SelectOption>\n      ));\n\n    const userAccountOperations = filteredAccounts\n      ?.filter(\n        (principal) => principal.principalType === PrincipalType.UserAccount\n      )\n      .map((principal, index) => (\n        <SelectOption\n          key={index}\n          value={principal.id}\n          description={principal.displayName}\n        >\n          {principal.id}\n        </SelectOption>\n      ));\n\n    return [\n      <SelectGroup key=\"all_accounts_group\">\n        <SelectOption\n          key={t(\"all_accounts_title\")}\n          value={t(\"all_accounts_title\")}\n          description={t(\"all_accounts_description\")}\n        >\n          {t(\"all_accounts_title\")}\n        </SelectOption>\n      </SelectGroup>,\n\n      <Divider key=\"all_accounts_divider\" />,\n      <SelectGroup\n        label={t(\"all_accounts_service_account_group\")}\n        key=\"service_accounts_group\"\n      >\n        {serviceAccountOptions?.length\n          ? serviceAccountOptions\n          : noServiceAccounts}\n      </SelectGroup>,\n      <Divider key=\"user_account_divider2\" />,\n      <SelectGroup\n        label={t(\"all_accounts_user_account_group\")}\n        key=\"user_accounts_group\"\n      >\n        {userAccountOperations?.length ? userAccountOperations : noUserAccounts}\n      </SelectGroup>,\n    ];\n  }\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, value) => {\n    setSelectedAccount(value as string);\n    setIsDirty(false);\n    setIsOpen(false);\n  };\n\n  const validated: ValidatedOptions = isDirty\n    ? ValidatedOptions.error\n    : ValidatedOptions.default;\n\n  return (\n    <Modal\n      id=\"manage-permissions-modal\"\n      variant={\"large\"}\n      isOpen={true}\n      aria-label={t(\"dialog_aria_label\")}\n      position=\"top\"\n      title={t(\"dialog_title\")}\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={onClose}\n      onEscapePress={onClose}\n      appendTo={() =>\n        id ? document.getElementById(id) || document.body : document.body\n      }\n      actions={[\n        <Button\n          key={1}\n          variant=\"primary\"\n          isDisabled={\n            selectedAccount == \"\" || selectedAccount == undefined ? true : false\n          }\n          onClick={() => onNext(selectedAccount)}\n          aria-label={t(\"step_1_submit_button\")}\n        >\n          {t(\"step_1_submit_button\")}\n        </Button>,\n        <Button\n          onClick={onClose}\n          key={2}\n          variant=\"secondary\"\n          aria-label={t(\"common:cancel\")}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <FormGroup\n          fieldId=\"kafka-instance-name\"\n          label={t(\"kafka_instance\")}\n          id=\"modal-message\"\n        >\n          {kafkaName}\n        </FormGroup>\n\n        <FormGroup\n          fieldId=\"account-name\"\n          validated={validated}\n          helperTextInvalid={t(\"common:required\")}\n          isRequired\n          label={t(\"account_id_title\")}\n          labelIcon={\n            <Popover bodyContent={t(\"account_id_help\")}>\n              <button\n                type=\"button\"\n                onClick={(e) => e.preventDefault()}\n                className=\"pf-c-form__group-label-help\"\n                aria-label={t(\"account_help\")}\n              >\n                <HelpIcon noVerticalAlign />\n              </button>\n            </Popover>\n          }\n        >\n          {accounts ? (\n            <Select\n              id={\"account-id\"}\n              data-testid=\"acls-select-account\"\n              className=\"kafka-ui--select--limit-height\"\n              variant={SelectVariant.typeahead}\n              typeAheadAriaLabel={t(\"account_id_title\")}\n              maxHeight={400}\n              onToggle={onToggle}\n              onSelect={onSelect}\n              onClear={clearSelection}\n              selections={selectedAccount}\n              onFilter={(_, value) => makeOptions(value)}\n              isOpen={isOpen}\n              placeholderText={t(\"account_id_typeahead_placeholder\")}\n              isCreatable\n              menuAppendTo=\"parent\"\n              validated={validated}\n              createText={t(\"resourcePrefix.create_text\")}\n              isGrouped\n              onCreateOption={() => {\n                setIsOpen(false);\n                setIsDirty(false);\n              }}\n            >\n              {makeOptions()}\n            </Select>\n          ) : (\n            <Skeleton width={\"100%\"} />\n          )}\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { AsyncTypeaheadSelect } from \"@rhoas/app-services-ui-components\";\n\ntype ResourceNameProps = {\n  value: string | undefined;\n  onChangeValue: (value: string | undefined) => void;\n  onFetchOptions: (filter: string) => string[];\n  submitted: boolean;\n  resourceType: ResourceTypeValue | undefined;\n  resourcePrefixRule: ResourcePrefixRuleValue;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const ResourceName: React.VFC<ResourceNameProps> = ({\n  value,\n  onChangeValue,\n  submitted,\n  resourceType,\n  resourcePrefixRule,\n  onFetchOptions,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const validationCheck = (\n    resourceType: ResourceTypeValue | undefined,\n    resourcePreixCondition: \"Starts with\" | \"Is\",\n    filter: string | undefined\n  ) => {\n    const regExp = new RegExp(\"^[0-9A-Za-z_.-]+$\");\n\n    if (filter === undefined || filter === \"\" || filter == \"*\")\n      return { isValid: true, message: undefined };\n    if (resourcePreixCondition == \"Is\" && resourceType == \"topic\") {\n      if (filter == \".\" || filter == \"..\")\n        return {\n          isValid: false,\n          message: t(\"resourcePrefix.invalid_topic_name\"),\n        };\n    }\n\n    if (resourceType == \"topic\" && !regExp.test(filter))\n      return {\n        isValid: false,\n        message: t(\"resourcePrefix.invalid_topic\"),\n      };\n\n    if (resourceType == \"consumer-group\" && !regExp.test(filter))\n      return {\n        isValid: false,\n        message: t(\"resourcePrefix.invalid_consumer_group\"),\n      };\n    if (filter.length > 32)\n      return { isValid: false, message: t(\"resourcePrefix.invalid_length\") };\n\n    return { isValid: true, message: undefined };\n  };\n\n  const onValidation = (filter: string | undefined) => {\n    const validationMessage = validationCheck(\n      resourceType,\n      resourcePrefixRule,\n      filter\n    );\n    setIsNameValid(validationMessage.isValid);\n    return validationMessage;\n  };\n\n  return (\n    <AsyncTypeaheadSelect\n      id=\"resource-name\"\n      ariaLabel={\n        resourcePrefixRule === \"Is\"\n          ? t(\"resourcePrefix.aria_label_name_is\", { value: resourceType })\n          : t(\"resourcePrefix.aria_label_name_starts_with\", {\n              value: resourceType,\n            })\n      }\n      value={value}\n      placeholderText={\n        resourcePrefixRule === \"Is\"\n          ? t(\"resourcePrefix.placeholder_name_is\")\n          : t(\"resourcePrefix.placeholder_name_starts_with\")\n      }\n      onChange={onChangeValue}\n      required={true}\n      submitted={submitted}\n      onFetchOptions={onFetchOptions}\n      onValidationCheck={onValidation}\n    />\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\n\nexport type ResourceOperationValue =\n  | \"All\"\n  | \"Read\"\n  | \"Write\"\n  | \"Create\"\n  | \"Delete\"\n  | \"Alter\"\n  | \"Describe\"\n  | \"Describe configs\"\n  | \"Alter configs\";\n\ntype ResourceOperationProps = {\n  value: ResourceOperationValue | undefined;\n  onChangeValue: (value: ResourceOperationValue | undefined) => void;\n  initialOpen?: boolean;\n  invalid: boolean;\n  resourceTypeOptions: string[];\n};\n\nexport const ResourceOperation: React.VFC<ResourceOperationProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n  invalid,\n  resourceTypeOptions,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourceOperationValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return resourceTypeOptions.map((value, index) => (\n      <SelectOption key={index} value={value}>\n        {value}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <FormGroup\n      validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n      helperTextInvalid={t(\"common:required\")}\n      fieldId={\"resource-operation-select\"}\n    >\n      <Select\n        id={\"resource-operation-select\"}\n        aria-label={t(\"operations.aria_label\", value)}\n        data-testid=\"acls-resource-operation-select\"\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        isOpen={isOpen}\n        width={200}\n        placeholderText={t(\"operations.placeholder_text\")}\n        validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n        selections={value}\n        menuAppendTo={document.body}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroup>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\n\nexport type ResourcePermissionValue = \"allow\" | \"deny\";\n\ntype ResourcePermissionProps = {\n  value: ResourcePermissionValue;\n  onChangeValue: (value: ResourcePermissionValue) => void;\n  initialOpen?: boolean;\n};\n\nexport const ResourcePermission: React.VFC<ResourcePermissionProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourcePermissionOptions: {\n    [key in ResourcePermissionValue]: string;\n  } = {\n    allow: t(\"permissions.allow\"),\n    deny: t(\"permissions.deny\"),\n  };\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourcePermissionValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourcePermissionOptions).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <Select\n      id={\"resource-permission-select\"}\n      aria-label={t(\"permissions.aria_label\", { value })}\n      data-testid=\"acls-resource-permission-select\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      width={150}\n      selections={value}\n      menuAppendTo={document.body}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type ResourcePrefixRuleValue = \"Is\" | \"Starts with\";\n\ntype ResourcePrefixRuleProps = {\n  value: ResourcePrefixRuleValue;\n  onChangeValue: (value: ResourcePrefixRuleValue) => void;\n  initialOpen?: boolean;\n};\n\nexport const ResourcePrefixRule: React.VFC<ResourcePrefixRuleProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourcePrefixRuleOptions: {\n    [key in ResourcePrefixRuleValue]: { label: string; description: string };\n  } = {\n    \"Starts with\": {\n      label: t(\"resource_prefix_rule.starts_with\"),\n      description: t(\"resource_prefix_rule.starts_with_description\"),\n    },\n    Is: {\n      label: t(\"resource_prefix_rule.is\"),\n      description: t(\"resource_prefix_rule.is_description\"),\n    },\n  };\n\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourcePrefixRuleValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourcePrefixRuleOptions).map(\n      ([key, { label, description }]) => (\n        <SelectOption key={key} value={key} description={description}>\n          {label}\n        </SelectOption>\n      )\n    );\n  };\n\n  return (\n    <Select\n      id={\"resource-prefix-rule-select\"}\n      aria-label={t(\"resource_prefix_rule.aria_label\", { value })}\n      data-testid=\"acls-resource-prefix-rule-select\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      width={150}\n      selections={value}\n      menuAppendTo={document.body}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\n\nexport type ResourceTypeValue =\n  | \"topic\"\n  | \"consumer-group\"\n  | \"kafka-instance\"\n  | \"transactional-id\";\n\ntype ResourceTypeProps = {\n  value: ResourceTypeValue | undefined;\n  onChangeValue: (value: ResourceTypeValue | undefined) => void;\n  initialOpen?: boolean;\n  invalid: boolean;\n};\n\nexport const ResourceType: React.VFC<ResourceTypeProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n  invalid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourceTypeOptions: { [key in ResourceTypeValue]: string } = {\n    \"consumer-group\": t(\"resourceTypes.consumer_group\"),\n    topic: t(\"resourceTypes.topic\"),\n    \"kafka-instance\": t(\"resourceTypes.kafka_instance\"),\n    \"transactional-id\": t(\"resourceTypes.transactional_id\"),\n  };\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourceTypeValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourceTypeOptions).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <FormGroup\n      validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n      helperTextInvalid={t(\"common:required\")}\n      fieldId={\"resource-type-select\"}\n    >\n      <Select\n        id={\"resource-type-select\"}\n        aria-label={\n          value != undefined\n            ? t(\"resourceTypes.resource_type_selected\", { value: value })\n            : t(\"resourceTypes.resource_type\")\n        }\n        data-testid=\"acls-resource-type-select\"\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        isOpen={isOpen}\n        width={200}\n        placeholderText={t(\"resourceTypes.placeholder_text\")}\n        validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n        selections={value}\n        menuAppendTo={document.body}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroup>\n  );\n};\n","import { Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ShortcutsTableHead: React.FC = () => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Thead>\n      <Tr>\n        <Th>{t(\"table.resource_column_title\")}</Th>\n        <Th />\n\n        <Th />\n\n        <Th>{t(\"table.permissions_column_title\")}</Th>\n        <Th />\n        <Th />\n      </Tr>\n    </Thead>\n  );\n};\n","import { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { ResourceType } from \"./ResourceType\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport { ResourcePermission } from \"./ResourcePermission\";\nimport type { ResourcePermissionValue } from \"./ResourcePermission\";\nimport { ResourceOperation } from \"./ResourceOperation\";\nimport type { ResourceOperationValue } from \"./ResourceOperation\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nexport type KafkaInstanceManualPermissions = {\n  resourceType: ResourceTypeValue | undefined;\n  onChangeResourceType: (value: ResourceTypeValue | undefined) => void;\n  submitted: boolean;\n  resourcePermission: ResourcePermissionValue;\n  onChangeResourcePermission: (value: ResourcePermissionValue) => void;\n  resourceOperation: ResourceOperationValue | undefined;\n  onChangeResourceOperation: (\n    value: ResourceOperationValue | undefined\n  ) => void;\n  row: number;\n  onDelete: (row: number) => void;\n};\n\nexport const KafkaInstanceManualPermissions: React.FC<\n  KafkaInstanceManualPermissions\n> = ({\n  resourceType,\n  resourceOperation,\n  resourcePermission,\n  submitted,\n  onChangeResourceOperation,\n  onChangeResourcePermission,\n  onChangeResourceType,\n  row,\n  onDelete,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Tbody>\n      <Tr>\n        <Td width={60}>\n          <ResourceType\n            value={resourceType}\n            onChangeValue={onChangeResourceType}\n            invalid={submitted && resourceType === undefined}\n          />\n        </Td>\n\n        <Td />\n        <Td />\n\n        <Td>\n          <ResourcePermission\n            value={resourcePermission}\n            onChangeValue={onChangeResourcePermission}\n          />\n        </Td>\n        <Td>\n          <ResourceOperation\n            value={resourceOperation}\n            onChangeValue={onChangeResourceOperation}\n            resourceTypeOptions={[\n              t(\"operations.alter\"),\n              t(\"operations.describe\"),\n            ]}\n            invalid={submitted && resourceOperation === undefined}\n          />\n        </Td>\n        <Td>\n          <RemoveButton\n            variant=\"link\"\n            onClick={() => onDelete(row)}\n            tooltip={t(\"operations.delete\")}\n          />\n        </Td>\n      </Tr>\n    </Tbody>\n  );\n};\n","import { Tbody, Tr, Td } from \"@patternfly/react-table\";\nimport { ResourceName } from \"./ResourceName\";\nimport { ResourceOperation } from \"./ResourceOperation\";\nimport type { ResourceOperationValue } from \"./ResourceOperation\";\nimport { ResourcePermission } from \"./ResourcePermission\";\nimport type { ResourcePermissionValue } from \"./ResourcePermission\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { ResourceType } from \"./ResourceType\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\nimport { useTranslation } from \"react-i18next\";\nimport { KafkaInstanceManualPermissions } from \"./KafkaInstanceManualPermissions\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\n\nexport type AssignPermissionsManualProps = {\n  resourceType: ResourceTypeValue | undefined;\n  onChangeResourceType: (value: ResourceTypeValue | undefined) => void;\n  submitted: boolean;\n  resourcePrefix: ResourcePrefixRuleValue;\n  onChangeResourcePrefix: (value: ResourcePrefixRuleValue) => void;\n  resourceName: string | undefined;\n  onChangeResource: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  resourcePermission: ResourcePermissionValue;\n  onChangeResourcePermission: (value: ResourcePermissionValue) => void;\n  resourceOperation: ResourceOperationValue | undefined;\n  onChangeResourceOperation: (\n    value: ResourceOperationValue | undefined\n  ) => void;\n  multipleShorctutPermissions?: boolean;\n  row: number;\n  onDelete: (row: number) => void;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const AssignPermissionsManual: React.FC<\n  AssignPermissionsManualProps\n> = ({\n  resourceType,\n  onChangeResourceType,\n  submitted,\n  resourcePrefix,\n  onChangeResourcePrefix,\n  resourceName,\n  onChangeResource,\n  onFetchResourceNameOptions,\n  resourcePermission,\n  resourceOperation,\n  onChangeResourceOperation,\n  onChangeResourcePermission,\n  multipleShorctutPermissions = true,\n  row,\n  onDelete,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const resourceTypeOptions = () => {\n    switch (resourceType) {\n      case \"consumer-group\":\n        return [\n          t(\"operations.all\"),\n          t(\"operations.read\"),\n          t(\"operations.delete\"),\n          t(\"operations.describe\"),\n        ];\n      case \"kafka-instance\":\n        return [t(\"operations.alter\"), t(\"operations.describe\")];\n      case \"transactional-id\":\n        return [\n          t(\"operations.all\"),\n          t(\"operations.write\"),\n          t(\"operations.describe\"),\n        ];\n      default:\n        return [\n          t(\"operations.all\"),\n          t(\"operations.read\"),\n          t(\"operations.write\"),\n          t(\"operations.create\"),\n          t(\"operations.delete\"),\n          t(\"operations.alter\"),\n          t(\"operations.describe\"),\n          t(\"operations.describe_configs\"),\n          t(\"operations.alter_configs\"),\n        ];\n    }\n  };\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n      {resourceType === \"kafka-instance\" ? (\n        <KafkaInstanceManualPermissions\n          resourceOperation={resourceOperation}\n          resourcePermission={resourcePermission}\n          resourceType={resourceType}\n          submitted={submitted}\n          onChangeResourceOperation={onChangeResourceOperation}\n          onChangeResourcePermission={onChangeResourcePermission}\n          onChangeResourceType={onChangeResourceType}\n          onDelete={onDelete}\n          row={row}\n        />\n      ) : (\n        <Tbody>\n          <Tr>\n            <Td>\n              <ResourceType\n                value={resourceType}\n                onChangeValue={onChangeResourceType}\n                invalid={submitted && resourceType === undefined}\n              />\n            </Td>\n            <Td>\n              <ResourcePrefixRule\n                value={resourcePrefix}\n                onChangeValue={onChangeResourcePrefix}\n              />\n            </Td>\n            <Td>\n              <ResourceName\n                value={resourceName}\n                onChangeValue={onChangeResource}\n                onFetchOptions={onFetchResourceNameOptions}\n                submitted={submitted}\n                resourceType={resourceType}\n                resourcePrefixRule={resourcePrefix}\n                setIsNameValid={setIsNameValid}\n              />\n            </Td>\n            <Td>\n              <ResourcePermission\n                value={resourcePermission}\n                onChangeValue={onChangeResourcePermission}\n              />\n            </Td>\n            <Td>\n              <ResourceOperation\n                resourceTypeOptions={resourceTypeOptions()}\n                value={resourceOperation}\n                onChangeValue={onChangeResourceOperation}\n                invalid={\n                  submitted && resourceOperation === undefined ? true : false\n                }\n              />\n            </Td>\n            <Td>\n              <RemoveButton\n                variant=\"link\"\n                onClick={() => onDelete(row)}\n                tooltip={t(\"remove_permission_tooltip\")}\n                ariaLabel={t(\"manual_delete\")}\n              />\n            </Td>\n          </Tr>\n        </Tbody>\n      )}\n    </>\n  );\n};\n","import { Tr, Td } from \"@patternfly/react-table\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ResourceName } from \"./ResourceName\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\n\nexport type ProduceTopicRowProps = {\n  onChange: (value: ResourcePrefixRuleValue) => void;\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n  onChangeResourceName: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  isConsumeTopicShortcut?: boolean;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ProduceTopicRow: React.FC<ProduceTopicRowProps> = ({\n  onChange,\n  prefixRuleValue,\n  resourceNameValue,\n  onChangeResourceName,\n  onFetchResourceNameOptions,\n  submitted,\n  isConsumeTopicShortcut,\n  setIsNameValid,\n}) => {\n  return (\n    <Tr style={{ borderBottom: isConsumeTopicShortcut ? \"none\" : \"\" }}>\n      <Td>\n        {\" \"}\n        <ResourceTypeLabel variant={\"TOPIC\"} />{\" \"}\n        <DisplayResourceName resourceType={\"TOPIC\"} />{\" \"}\n      </Td>\n      <Td>\n        {\n          <ResourcePrefixRule\n            value={prefixRuleValue}\n            onChangeValue={onChange}\n          />\n        }\n      </Td>\n      <Td>\n        <ResourceName\n          value={resourceNameValue}\n          onChangeValue={onChangeResourceName}\n          onFetchOptions={onFetchResourceNameOptions}\n          submitted={submitted}\n          resourceType={\"topic\"}\n          resourcePrefixRule={prefixRuleValue}\n          setIsNameValid={setIsNameValid}\n        />\n      </Td>\n      <Td colSpan={2}>\n        <PermissionOperationCell\n          permission={\"ALLOW\"}\n          operation={\n            isConsumeTopicShortcut\n              ? [\"READ\", \"DESCRIBE\"]\n              : [\"WRITE\", \"CREATE\", \"DESCRIBE\"]\n          }\n        />\n      </Td>\n    </Tr>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\n\nimport { ResourceName } from \"./ResourceName\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ProduceTopicRow } from \"./ProduceTopicRow\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\n\nexport type ConsumeTopicShortcutProps = {\n  onChangeConsumerResourcePrefixRule: (value: ResourcePrefixRuleValue) => void;\n  onChangeTopicResourcePrefixRule: (value: ResourcePrefixRuleValue) => void;\n  consumerPrefixRuleValue: ResourcePrefixRuleValue;\n  topicPrefixRuleValue: ResourcePrefixRuleValue;\n  consumerResourceNameValue: string | undefined;\n  topicResourceNameValue: string | undefined;\n  onChangeConsumerResourceName: (value: string | undefined) => void;\n  onChangeTopicResourceName: (value: string | undefined) => void;\n  onFetchConsumerResourceNameOptions: (filter: string) => string[];\n  onFetchTopicResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  multipleShorctutPermissions?: boolean;\n  onDelete: (row: number) => void;\n  row: number;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ConsumeTopicShortcut: React.FC<ConsumeTopicShortcutProps> = ({\n  onChangeConsumerResourceName,\n  topicPrefixRuleValue,\n  topicResourceNameValue,\n  consumerPrefixRuleValue,\n  consumerResourceNameValue,\n  submitted,\n  onChangeConsumerResourcePrefixRule,\n  onChangeTopicResourceName,\n  onChangeTopicResourcePrefixRule,\n  onFetchConsumerResourceNameOptions,\n  onFetchTopicResourceNameOptions,\n  onDelete,\n  multipleShorctutPermissions = true,\n  row,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_consume_topic\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_consume_topic\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_consume_topic_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_consumer\")}\n            />\n          </Td>\n        </Tr>\n        <ProduceTopicRow\n          setIsNameValid={setIsNameValid}\n          isConsumeTopicShortcut={true}\n          onChange={onChangeTopicResourcePrefixRule}\n          prefixRuleValue={topicPrefixRuleValue}\n          resourceNameValue={topicResourceNameValue}\n          onChangeResourceName={onChangeTopicResourceName}\n          onFetchResourceNameOptions={onFetchTopicResourceNameOptions}\n          submitted={submitted}\n        />\n        <Tr>\n          <Td>\n            {\" \"}\n            <ResourceTypeLabel variant={\"GROUP\"} />{\" \"}\n            <DisplayResourceName resourceType={\"GROUP\"} />{\" \"}\n          </Td>\n          <Td>\n            <ResourcePrefixRule\n              value={consumerPrefixRuleValue}\n              onChangeValue={onChangeConsumerResourcePrefixRule}\n            />\n          </Td>\n          <Td>\n            {\n              <ResourceName\n                value={consumerResourceNameValue}\n                onChangeValue={onChangeConsumerResourceName}\n                onFetchOptions={onFetchConsumerResourceNameOptions}\n                submitted={submitted}\n                resourceType={\"topic\"}\n                resourcePrefixRule={consumerPrefixRuleValue}\n                setIsNameValid={setIsNameValid}\n              />\n            }\n          </Td>\n          <Td>\n            <PermissionOperationCell\n              permission={\"ALLOW\"}\n              operation={[\"READ\"]}\n            />\n          </Td>\n        </Tr>\n      </Tbody>\n    </>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type ManageAccessShortcutProps = {\n  onDelete: (row: number) => void;\n  multipleShorctutPermissions?: boolean;\n  instanceName: string;\n  row: number;\n};\nexport const ManageAccessShortcut: React.FC<ManageAccessShortcutProps> = ({\n  onDelete,\n  multipleShorctutPermissions = true,\n  instanceName,\n  row,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_manage_access\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_manage_access\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_manage_access_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_access\")}\n            />\n          </Td>\n        </Tr>\n\n        <Tr>\n          <Td colSpan={2}>\n            <ResourceTypeLabel variant={\"CLUSTER\"} />{\" \"}\n            <DisplayResourceName resourceType={\"CLUSTER\"} />{\" \"}\n            {t(\"is_kafka_instance\", { value: instanceName })}\n          </Td>\n\n          <Td />\n\n          <Td>\n            <PermissionOperationCell\n              permission={\"ALLOW\"}\n              operation={[\"ALTER\"]}\n            />\n          </Td>\n        </Tr>\n      </Tbody>\n    </>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nimport { ProduceTopicRow } from \"./ProduceTopicRow\";\n\nexport type ProduceTopicShortcutProps = {\n  onChange: (value: ResourcePrefixRuleValue) => void;\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n  onChangeResourceName: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  onDelete: (row: number) => void;\n  multipleShorctutPermissions?: boolean;\n  row: number;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ProduceTopicShortcut: React.FC<ProduceTopicShortcutProps> = ({\n  onChange,\n  onDelete,\n  prefixRuleValue,\n  onChangeResourceName,\n  resourceNameValue,\n  submitted,\n  onFetchResourceNameOptions,\n  multipleShorctutPermissions = true,\n  row,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_produce_topic\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_produce_topic\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_produce_topic_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_producer\")}\n            />\n          </Td>\n        </Tr>\n\n        <ProduceTopicRow\n          onChange={onChange}\n          prefixRuleValue={prefixRuleValue}\n          resourceNameValue={resourceNameValue}\n          onChangeResourceName={onChangeResourceName}\n          onFetchResourceNameOptions={onFetchResourceNameOptions}\n          submitted={submitted}\n          setIsNameValid={setIsNameValid}\n        />\n      </Tbody>\n    </>\n  );\n};\n","import { ActionList, ActionListItem } from \"@patternfly/react-core\";\nimport { TableComposable } from \"@patternfly/react-table\";\nimport { PermissionsDropdown } from \"./PermissionsDropdown\";\nimport type { AddAclType } from \"../types\";\nimport { AssignPermissionsManual } from \"./AssignPermissionsManual\";\nimport { ConsumeTopicShortcut } from \"./ConsumeTopicShortcut\";\nimport { ManageAccessShortcut } from \"./ManageAccessShortcut\";\nimport { ProduceTopicShortcut } from \"./ProduceTopicShortcut\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type AssignPermissionsProps = {\n  submitted: boolean;\n  onDelete: (index: number) => void;\n  topicNameOptions: (filter: string) => string[];\n  consumerGroupNameOptions: (filter: string) => string[];\n  addedAcls?: AddAclType[];\n  onAddManualPermissions: () => void;\n  onAddProduceTopicShortcut: () => void;\n  onConsumeTopicShortcut: () => void;\n  onManageAccessShortcut: () => void;\n  kafkaName: string;\n  setAddedAcls: (value: AddAclType[]) => void;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const AssignPermissions: React.VFC<AssignPermissionsProps> = ({\n  submitted,\n  onDelete,\n  topicNameOptions,\n  consumerGroupNameOptions,\n  onAddManualPermissions,\n  onAddProduceTopicShortcut,\n  onConsumeTopicShortcut,\n  onManageAccessShortcut,\n  addedAcls,\n  kafkaName,\n  setAddedAcls,\n  setIsNameValid,\n}) => {\n  return (\n    <>\n      <TableComposable variant=\"compact\">\n        {addedAcls && addedAcls.length > 0 && <ShortcutsTableHead />}\n        {addedAcls &&\n          addedAcls.map((aclTemplate, idx) => {\n            switch (aclTemplate.type) {\n              case \"manual\":\n                return (\n                  <AssignPermissionsManual\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    resourceType={aclTemplate.resourceType}\n                    onChangeResourceType={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourceType: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    submitted={submitted}\n                    resourcePrefix={aclTemplate.resourcePrefix}\n                    onChangeResourcePrefix={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourcePrefix: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    resourceName={aclTemplate.resourceName}\n                    onChangeResource={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourceName: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchResourceNameOptions={topicNameOptions}\n                    resourcePermission={aclTemplate.resourcePermission}\n                    onChangeResourcePermission={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourcePermission: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    resourceOperation={aclTemplate.resourceOperation}\n                    onChangeResourceOperation={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourceOperation: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    row={idx}\n                    onDelete={onDelete}\n                  />\n                );\n\n              case \"consume-topic\":\n                return (\n                  <ConsumeTopicShortcut\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    onChangeConsumerResourcePrefixRule={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                consumerResourcePrefixRule: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onChangeTopicResourcePrefixRule={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                topicResourcePrefixRule: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    consumerPrefixRuleValue={\n                      aclTemplate.consumerResourcePrefixRule\n                    }\n                    topicPrefixRuleValue={aclTemplate.topicResourcePrefixRule}\n                    consumerResourceNameValue={aclTemplate.consumerResourceName}\n                    topicResourceNameValue={aclTemplate.topicResourceName}\n                    onChangeConsumerResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                consumerResourceName: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onChangeTopicResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                topicResourceName: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchConsumerResourceNameOptions={\n                      consumerGroupNameOptions\n                    }\n                    onFetchTopicResourceNameOptions={topicNameOptions}\n                    submitted={submitted}\n                    onDelete={onDelete}\n                    row={idx}\n                  />\n                );\n\n              case \"produce-topic\":\n                return (\n                  <ProduceTopicShortcut\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    onChange={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, prefixRuleValue: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    prefixRuleValue={aclTemplate.prefixRuleValue}\n                    resourceNameValue={aclTemplate.resourceNameValue}\n                    onChangeResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourceNameValue: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchResourceNameOptions={topicNameOptions}\n                    submitted={submitted}\n                    onDelete={onDelete}\n                    row={idx}\n                  />\n                );\n\n              case \"manage-access\":\n                return (\n                  <ManageAccessShortcut\n                    key={idx}\n                    row={idx}\n                    instanceName={kafkaName}\n                    onDelete={onDelete}\n                  />\n                );\n            }\n          })}\n      </TableComposable>\n      <ActionList>\n        <ActionListItem style={{ paddingTop: \"20px\" }}>\n          <PermissionsDropdown\n            onAddPermission={onAddManualPermissions}\n            onShortcutConsumeTopic={onConsumeTopicShortcut}\n            onShortcutProduceTopic={onAddProduceTopicShortcut}\n            onShortcutManageAccess={onManageAccessShortcut}\n          />\n        </ActionListItem>\n      </ActionList>\n    </>\n  );\n};\n","import type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Modal,\n  ModalVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\n\nexport type PreCancelModalProps = {\n  isOpen: boolean;\n  closeModal: () => void;\n  resumeEditing: () => void;\n};\n\nconst PreCancelModal: React.FC<PreCancelModalProps> = ({\n  isOpen,\n  closeModal,\n  resumeEditing,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Modal\n      id=\"manage-permissions-precancel-modal\"\n      variant={ModalVariant.small}\n      isOpen={isOpen}\n      aria-label={t(\"pre_cancel_label\")}\n      title={t(\"pre_cancel_title\")}\n      titleIconVariant=\"warning\"\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={resumeEditing}\n      onEscapePress={closeModal}\n      actions={[\n        <Button onClick={closeModal} key={1} variant={ButtonVariant.primary}>\n          {t(\"discard_changes\")}\n        </Button>,\n        <Button\n          onClick={resumeEditing}\n          key={2}\n          variant={ButtonVariant.secondary}\n        >\n          {t(\"resume_editing\")}\n        </Button>,\n      ]}\n    >\n      {t(\"cancel_description\")}\n    </Modal>\n  );\n};\n\nexport { PreCancelModal };\n","import type { VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\n\nimport type { AclBinding } from \"../types\";\nimport { PermissionOperationCell, PrincipalCell, ResourceCell } from \"./Cells\";\n\nexport type ReviewPermissionsTableProps = {\n  acls: AclBinding[];\n  selectedAccountId: string;\n  onRemoveAcl: (idx: number) => void;\n};\n\nexport const ReviewPermissionsTable: VFC<ReviewPermissionsTableProps> = ({\n  selectedAccountId,\n  acls = [],\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <TableComposable\n      variant={TableVariant.compact}\n      aria-label={t(\"review_permissions_table\")}\n    >\n      <Thead noWrap>\n        <Tr>\n          <Th width={60}>{t(\"table.resource_column_title\")}</Th>\n          <Th width={20}>{t(\"table.permissions_column_title\")}</Th>\n          <Th width={20} />\n        </Tr>\n      </Thead>\n      <Tbody>\n        {acls.map((acl, idx) => {\n          const {\n            patternType,\n            resourceType,\n            resourceName,\n            operation,\n            permission,\n            principal,\n          } = acl;\n          const isDeleteEnabled =\n            selectedAccountId === \"All accounts\" ||\n            principal === `User:${selectedAccountId}` ||\n            principal != `User:*`;\n          const isAllAccounts = principal === \"User:*\";\n\n          return (\n            <Tr key={idx}>\n              <Td>\n                <ResourceCell\n                  patternType={patternType}\n                  resourceType={resourceType}\n                  resourceName={resourceName}\n                />\n              </Td>\n              <Td>\n                <PermissionOperationCell\n                  permission={permission}\n                  operation={operation}\n                />\n              </Td>\n              <Td>\n                <PrincipalCell\n                  isDeleteEnabled={isDeleteEnabled}\n                  isAllAccounts={isAllAccounts}\n                  onRemoveAcl={() => onRemoveAcl(idx)}\n                />\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </TableComposable>\n  );\n};\n","import { Text, TextContent, TextVariants } from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { AclBinding } from \"../types\";\nimport { ReviewPermissionsTable } from \"./ReviewPermissionsTable\";\n\nexport type ViewAccountDetailsProps = {\n  accountId: string | undefined;\n  existingAcls: AclBinding[];\n  onRemoveAcl: (index: number) => void;\n};\n\nexport const ViewAccountDetails: React.VFC<ViewAccountDetailsProps> = ({\n  accountId,\n  existingAcls,\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const HelperText: React.FunctionComponent = () => {\n    if (accountId === \"All accounts\") {\n      return t(\"all_accounts_help\");\n    }\n    return (\n      <Trans ns={[\"manage-kafka-permissions\"]} i18nKey=\"selected_account_help\">\n        Review the list of existing permissions for the selected account. The\n        list includes account-specific permissions and permissions applied to\n        all accounts within this Kafka instance. Permissions labeled\n        <strong>All accounts</strong> cannot be removed when an individual\n        account ID is selected.\n      </Trans>\n    );\n  };\n  return (\n    <>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          <HelperText />\n        </Text>\n      </TextContent>\n      <ReviewPermissionsTable\n        acls={existingAcls}\n        selectedAccountId={accountId ? accountId : \"\"}\n        onRemoveAcl={onRemoveAcl}\n      />\n    </>\n  );\n};\n","import type { ResourceOperationValue } from \"./components/ResourceOperation\";\nimport type { ResourceTypeValue } from \"./components/ResourceType\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport { AclResourceType } from \"@rhoas/kafka-instance-sdk\";\nimport type { AddAclType } from \"./types\";\n\nexport const transformPermissions = (\n  transformAclData: AclBinding[],\n  newAcls?: AddAclType[],\n  selectedAccount?: string\n) => {\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  const selectedAccountName = `User:${selectedAccount}`;\n  newAcls?.map((value) => {\n    switch (value.type) {\n      case \"manual\": {\n        transformAclData.push({\n          resourceName:\n            value.resourceType == \"kafka-instance\"\n              ? \"kafka-cluster\"\n              : value.resourceName\n              ? value.resourceName\n              : \"\",\n          resourceType: transformResourceType(value.resourceType),\n          patternType: value.resourcePrefix == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n          operation: transformResourceOperation(value.resourceOperation),\n          permission: value.resourcePermission == \"allow\" ? \"ALLOW\" : \"DENY\",\n          principal:\n            selectedAccount == \"All accounts\" ? `User:*` : selectedAccountName,\n        });\n        break;\n      }\n      case \"manage-access\":\n        {\n          transformAclData.push({\n            resourceName: \"kafka-cluster\",\n            resourceType: \"CLUSTER\",\n            patternType: \"LITERAL\",\n            operation: \"ALTER\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          });\n        }\n        break;\n      case \"consume-topic\":\n        {\n          transformAclData.push(\n            {\n              resourceName: value.topicResourceName || \"\",\n              resourceType: \"TOPIC\",\n              patternType:\n                value.topicResourcePrefixRule == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n              operation: \"READ\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            },\n            {\n              resourceName: value.topicResourceName || \"\",\n              resourceType: \"TOPIC\",\n              patternType:\n                value.topicResourcePrefixRule == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n              operation: \"DESCRIBE\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            },\n            {\n              resourceName: value.consumerResourceName || \"\",\n              resourceType: \"GROUP\",\n              patternType:\n                value.consumerResourcePrefixRule == \"Is\"\n                  ? \"LITERAL\"\n                  : \"PREFIXED\",\n              operation: \"READ\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            }\n          );\n        }\n        break;\n      case \"produce-topic\": {\n        transformAclData.push(\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"WRITE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          },\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"CREATE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          },\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"DESCRIBE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          }\n        );\n      }\n    }\n  });\n};\n\nexport const transformResourceType = (value: ResourceTypeValue | undefined) => {\n  switch (value) {\n    case \"consumer-group\":\n      return AclResourceType.Group;\n    case \"kafka-instance\":\n      return AclResourceType.Cluster;\n    case \"topic\":\n      return AclResourceType.Topic;\n    default:\n      return AclResourceType.TransactionalId;\n  }\n};\nexport const transformResourceOperation = (\n  value: ResourceOperationValue | undefined\n) => {\n  switch (value) {\n    case \"All\":\n      return \"ALL\";\n    case \"Alter\":\n      return \"ALTER\";\n    case \"Alter configs\":\n      return \"ALTER_CONFIGS\";\n    case \"Create\":\n      return \"CREATE\";\n    case \"Delete\":\n      return \"DELETE\";\n    case \"Describe\":\n      return \"DESCRIBE\";\n    case \"Describe configs\":\n      return \"DESCRIBE_CONFIGS\";\n    case \"Read\":\n      return \"READ\";\n    default:\n      return \"WRITE\";\n  }\n};\n","import {\n  Button,\n  ExpandableSection,\n  Form,\n  FormGroup,\n  Modal,\n  TextContent,\n  TextVariants,\n  Text,\n  Badge,\n  Alert,\n  Popover,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AssignPermissions } from \"./AssignPermissions\";\nimport { PreCancelModal } from \"./PreCancelModal\";\nimport { ViewAccountDetails } from \"./ViewAccountDetails\";\nimport type { AddAclType } from \"../types\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport type { Permissions } from \"ui\";\nimport {\n  createEmptyConsumeTopicAcl,\n  createEmptyManageAccessAcl,\n  createEmptyManualAcl,\n  createEmptyProduceTopicAcl,\n} from \"../types\";\nimport { transformPermissions } from \"../utils\";\n\nexport type AclType = {\n  groups: Permissions[];\n  count: number;\n};\n\nexport type EditPermissionsProps = {\n  onCancel: () => void;\n  kafkaName: string;\n  onSave: (\n    acls: AclBinding[] | undefined,\n    deletedAcls: AclBinding[] | undefined\n  ) => void;\n  acls: AclBinding[];\n  topicsList: string[];\n  consumerGroupsList: string[];\n  id?: string;\n  selectedAccount: string | undefined;\n};\n\nexport const EditPermissions: React.FC<EditPermissionsProps> = ({\n  onCancel,\n  kafkaName,\n  acls,\n  onSave,\n  topicsList,\n  consumerGroupsList,\n  selectedAccount,\n  id,\n}) => {\n  const { t } = useTranslation([\n    \"manage-kafka-permissions\",\n    \"create-kafka-instance\",\n  ]);\n\n  const escapeClosesModal = useRef<boolean>(true);\n  const [\n    isExpandedExistingPermissionSection,\n    setIsExpandedExistingPermissionSection,\n  ] = useState<boolean>(false);\n  const [isAclDeleted, setIsAclDeleted] = useState<boolean>(false);\n  const [\n    isExpandedAssignPermissionsSection,\n    setIsExpandedAssignPermissionsSection,\n  ] = useState<boolean>(true);\n  const [isNameValid, setIsNameValid] = useState<boolean>(true);\n  const [canSave, setCanSave] = useState<boolean>(false);\n  const [submitted, setSubmitted] = useState<boolean>(false);\n  const [isOpenPreCancelModal, setIsOpenPreCancelModal] =\n    useState<boolean>(false);\n  const [existingAcls, setExistingAcls] = useState<AclBinding[]>(acls);\n  const [newAcls, setNewAcls] = useState<AddAclType[]>();\n  const [deletedAcls, setDeletedAcls] = useState<AclBinding[] | undefined>(\n    undefined\n  );\n\n  const checkValidation = useCallback(() => {\n    if (newAcls) {\n      const isRowInvalid = newAcls?.map((value) =>\n        value.type == \"manual\" &&\n        value.resourceType == \"kafka-instance\" &&\n        value.resourceOperation != undefined\n          ? false\n          : Object.values(value).includes(undefined)\n      );\n      isRowInvalid.includes(true) ? setCanSave(false) : setCanSave(true);\n      if (canSave == true && isNameValid) return true;\n      else return false;\n    }\n    if (deletedAcls && deletedAcls.length > 0) {\n      setCanSave(true);\n      return true;\n    } else return false;\n  }, [canSave, deletedAcls, isNameValid, newAcls]);\n\n  useEffect(() => {\n    checkValidation();\n  }, [checkValidation, newAcls]);\n\n  useEffect(() => {\n    //Fetch the latest table for exiting acls, only when no row is scheduled for deletion\n    if (deletedAcls == undefined) setExistingAcls(acls);\n  }, [acls, deletedAcls]);\n\n  const onEscapePress = () => {\n    if (escapeClosesModal.current) {\n      onCancel();\n    }\n  };\n  const topicFilter = (filter: string) => {\n    if (filter == \"\" || filter == undefined) return topicsList;\n    else return topicsList.filter((v) => v.includes(filter));\n  };\n\n  const consumerGroupsFilter = (filter: string) => {\n    if (filter == \"\" || filter == undefined) return consumerGroupsList;\n    else return consumerGroupsList.filter((v) => v.includes(filter));\n  };\n\n  const aclsToSave: AclBinding[] = [];\n\n  const onClickSubmit = () => {\n    if (\n      (newAcls && newAcls.length > 0) ||\n      (deletedAcls && deletedAcls.length > 0)\n    ) {\n      setSubmitted(true);\n      const isAclValid = checkValidation();\n      transformPermissions(aclsToSave, newAcls, selectedAccount);\n      isAclValid && onSave(aclsToSave, deletedAcls);\n    }\n  };\n\n  const onAddManualPermissions = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyManualAcl()]\n        : [createEmptyManualAcl()]\n    );\n  };\n  const onAddProduceTopicShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyProduceTopicAcl()]\n        : [createEmptyProduceTopicAcl()]\n    );\n  };\n  const onConsumeTopicShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyConsumeTopicAcl()]\n        : [createEmptyConsumeTopicAcl()]\n    );\n  };\n  const onManageAccessShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyManageAccessAcl(kafkaName)]\n        : [createEmptyManageAccessAcl(kafkaName)]\n    );\n  };\n\n  const onDeleteNewAcl = (row: number) => {\n    setNewAcls(\n      (prevState) => prevState && prevState.filter((_, index) => index !== row)\n    );\n  };\n\n  const onChangeExpandedExistingPermissionsSection = (value: boolean) => {\n    setIsExpandedExistingPermissionSection(value);\n  };\n  const onChangeExpandedAssignPermissionsSection = (value: boolean) => {\n    setIsExpandedAssignPermissionsSection(value);\n  };\n\n  const isDisabled =\n    (submitted && !canSave) ||\n    ((newAcls == undefined || newAcls.length < 1) && !isAclDeleted) ||\n    !isNameValid\n      ? true\n      : false;\n  const onClose = () => {\n    !isDisabled || (newAcls && newAcls?.length > 0)\n      ? setIsOpenPreCancelModal(true)\n      : onCancel();\n  };\n\n  const closePreCancelModal = () => {\n    setIsOpenPreCancelModal(false);\n    onCancel();\n  };\n\n  const resumeEditingPermissions = () => {\n    setIsOpenPreCancelModal(false);\n  };\n\n  const updateExistingAcls = (row: number) => {\n    setExistingAcls((existingAcls || []).filter((_, index) => index != row));\n  };\n\n  const onRemoveAcls = (row: number) => {\n    setDeletedAcls((prevState) =>\n      existingAcls && prevState != undefined\n        ? [...prevState, existingAcls[row]]\n        : existingAcls && [existingAcls[row]]\n    );\n    setIsAclDeleted(true);\n    updateExistingAcls(row);\n  };\n  //The value received will have a prefix 'User:'.Remove the prefix when displaying value\n  const accountDisplayName =\n    selectedAccount === \"All accounts\"\n      ? t(\"all_accounts_title\")\n      : selectedAccount?.includes(\"User:\")\n      ? selectedAccount?.split(\":\")[1]\n      : selectedAccount;\n  return (\n    <Modal\n      id=\"manage-permissions-modal\"\n      variant={\"large\"}\n      isOpen={true}\n      aria-label={t(\"dialog_aria_label\")}\n      position=\"top\"\n      title={t(\"dialog_title\")}\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={onClose}\n      onEscapePress={onEscapePress}\n      appendTo={() =>\n        id ? document.getElementById(id) || document.body : document.body\n      }\n      actions={[\n        <Button\n          key={1}\n          variant=\"primary\"\n          isDisabled={isDisabled}\n          onClick={onClickSubmit}\n          aria-label={t(\"step_2_submit_button\")}\n        >\n          {t(\"step_2_submit_button\")}\n        </Button>,\n        <Button\n          onClick={onClose}\n          key={2}\n          variant=\"secondary\"\n          aria-label={t(\"common:cancel\")}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <PreCancelModal\n        isOpen={isOpenPreCancelModal}\n        closeModal={closePreCancelModal}\n        resumeEditing={resumeEditingPermissions}\n      />\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <FormGroup\n          fieldId=\"kafka-instance-name\"\n          label={t(\"kafka_instance\")}\n          id=\"modal-message\"\n        >\n          {kafkaName}\n        </FormGroup>\n\n        <FormGroup\n          fieldId=\"account-name\"\n          label={t(\"account_id_title\")}\n          labelIcon={\n            <Popover bodyContent={t(\"account_id_help\")}>\n              <button\n                type=\"button\"\n                onClick={(e) => e.preventDefault()}\n                className=\"pf-c-form__group-label-help\"\n                aria-label={t(\"account_help\")}\n              >\n                <HelpIcon noVerticalAlign />\n              </button>\n            </Popover>\n          }\n        >\n          {accountDisplayName}\n        </FormGroup>\n        {(!canSave || !isNameValid) && submitted && (\n          <Alert\n            isInline\n            title={t(\"create-kafka-instance:form_errors.form_invalid\")}\n            variant={\"danger\"}\n          />\n        )}\n        <ExpandableSection\n          isIndented={true}\n          isExpanded={isExpandedExistingPermissionSection}\n          onToggle={onChangeExpandedExistingPermissionsSection}\n          toggleContent={\n            <div>\n              <span>{t(\"review_existing_title\")}</span>{\" \"}\n              <Badge isRead={existingAcls.length == 0 ? true : false}>\n                {existingAcls.length}\n              </Badge>\n            </div>\n          }\n        >\n          <ViewAccountDetails\n            accountId={selectedAccount}\n            existingAcls={existingAcls}\n            onRemoveAcl={onRemoveAcls}\n          />\n        </ExpandableSection>\n        <FormGroup>\n          <ExpandableSection\n            toggleText={t(\"assign_permissions_title\")}\n            isIndented={true}\n            isExpanded={isExpandedAssignPermissionsSection}\n            onToggle={onChangeExpandedAssignPermissionsSection}\n          >\n            <FormGroup>\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  {selectedAccount === \"All accounts\"\n                    ? t(\"assign_permissions_all_description\")\n                    : t(\"assign_permissions_description\", {\n                        value: accountDisplayName,\n                      })}\n                </Text>\n                {newAcls && newAcls?.length > 0 && (\n                  <Text component={TextVariants.small}>\n                    {t(\"all_fields_required\")}\n                  </Text>\n                )}\n              </TextContent>\n            </FormGroup>\n            <AssignPermissions\n              setIsNameValid={setIsNameValid}\n              submitted={submitted}\n              onAddManualPermissions={onAddManualPermissions}\n              onAddProduceTopicShortcut={onAddProduceTopicShortcut}\n              onConsumeTopicShortcut={onConsumeTopicShortcut}\n              onManageAccessShortcut={onManageAccessShortcut}\n              onDelete={onDeleteNewAcl}\n              topicNameOptions={topicFilter}\n              consumerGroupNameOptions={consumerGroupsFilter}\n              addedAcls={newAcls}\n              kafkaName={kafkaName}\n              setAddedAcls={setNewAcls}\n            />\n          </ExpandableSection>\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const EmptyStateInitialLoading: VoidFunctionComponent = () => {\n  return (\n    <PageSection isFilled={true}>\n      <EmptyState variant={EmptyStateVariant.xs}>\n        <EmptyStateBody data-chromatic=\"ignore\">\n          <AppServicesLoading />\n        </EmptyStateBody>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  PageSection,\n  Title,\n} from \"@patternfly/react-core\";\nimport { TachometerAltIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\n\nexport const EmptyStateMetricsUnavailable: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <PageSection isFilled={true}>\n      <EmptyState variant={EmptyStateVariant.xs}>\n        <EmptyStateIcon icon={TachometerAltIcon} />\n        <Title headingLevel=\"h3\" size=\"lg\">\n          {t(\"metrics:empty_state_no_data_title\")}\n        </Title>\n        <EmptyStateBody>{t(\"metrics:empty_state_no_data_body\")}</EmptyStateBody>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import { Grid, GridItem, PageSection } from \"@patternfly/react-core\";\nimport type { FunctionComponent, ReactElement } from \"react\";\n\ntype MetricsLayoutProps = {\n  metricsLagAlert: ReactElement;\n  topicsKpi: ReactElement;\n  topicPartitionsKpi: ReactElement;\n  consumerGroupKpi: ReactElement;\n  diskSpaceMetrics: ReactElement;\n  topicMetrics: ReactElement;\n};\nexport const MetricsLayout: FunctionComponent<MetricsLayoutProps> = ({\n  metricsLagAlert,\n  topicsKpi,\n  topicPartitionsKpi,\n  consumerGroupKpi,\n  diskSpaceMetrics,\n  topicMetrics,\n}) => {\n  return (\n    <PageSection\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n      padding={{ default: \"noPadding\" }}\n      className={\n        \"pf-u-px-lg-on-xl pf-u-pt-sm-on-xl pf-u-pb-lg-on-xl pf-u-px-md pf-u-pb-md\"\n      }\n    >\n      <Grid hasGutter>\n        <GridItem>{metricsLagAlert}</GridItem>\n        <GridItem sm={4}>{topicsKpi}</GridItem>\n        <GridItem sm={4}>{topicPartitionsKpi}</GridItem>\n        <GridItem sm={4}>{consumerGroupKpi}</GridItem>\n        <GridItem lg={6}>{diskSpaceMetrics}</GridItem>\n        <GridItem lg={6}>{topicMetrics}</GridItem>\n      </Grid>\n    </PageSection>\n  );\n};\n","import { CardBody, Bullseye, Spinner } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\n\nexport const CardBodyLoading: FunctionComponent = () => (\n  <CardBody>\n    <Bullseye>\n      <Spinner isSVG data-chromatic=\"ignore\" />\n    </Bullseye>\n  </CardBody>\n);\n","import { DurationOptions } from \"./types\";\n\nexport const timeIntervalsMapping = {\n  [DurationOptions.Last5minutes]: {\n    interval: 1 * 60,\n    ticks: 6,\n    showDate: false,\n  },\n  [DurationOptions.Last15minutes]: {\n    interval: 3 * 60,\n    ticks: 6,\n    showDate: false,\n  },\n  [DurationOptions.Last30minutes]: {\n    interval: 5 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last1hour]: { interval: 10 * 60, ticks: 6, showDate: false },\n  [DurationOptions.Last3hours]: {\n    interval: 30 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last6hours]: {\n    interval: 1 * 60 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last12hours]: {\n    interval: 2 * 60 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last24hours]: {\n    interval: 4 * 60 * 60,\n    ticks: 7,\n    showDate: true,\n  },\n  [DurationOptions.Last2days]: {\n    interval: 8 * 60 * 60,\n    ticks: 7,\n    showDate: true,\n  },\n  [DurationOptions.Last7days]: {\n    interval: 24 * 60 * 60,\n    ticks: 8,\n    showDate: true,\n  },\n} as const;\n\nexport const chartHeight = 350;\nexport const chartPadding = {\n  bottom: 110, // Adjusted to accomodate legend\n  left: 120,\n  right: 40,\n  top: 10,\n};\n","import { Flex, FlexItem, Skeleton } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ChartSkeletonLoader: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <Flex direction={{ default: \"column\" }} data-chromatic=\"ignore\">\n      <FlexItem>\n        <Skeleton\n          height={`${chartHeight - chartPadding.bottom}px`}\n          screenreaderText={t(\"common:skeleton_loader_screenreader_text\")}\n        />\n      </FlexItem>\n      <FlexItem>\n        <Skeleton height={`${chartPadding.bottom / 2 - 12.5}px`} width=\"20%\" />\n      </FlexItem>\n      <FlexItem>\n        <Skeleton height={`${chartPadding.bottom / 2 - 12.5}px`} width=\"40%\" />\n      </FlexItem>\n    </Flex>\n  );\n};\n","import type { RefObject } from \"react\";\nimport { useEffect, useLayoutEffect, useRef, useState } from \"react\";\n\nexport function useChartWidth(): [RefObject<HTMLDivElement>, number] {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number>(0);\n\n  const handleResize = () =>\n    containerRef.current && setWidth(containerRef.current.clientWidth);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return [containerRef, width];\n}\n","import byteSize from \"byte-size\";\nimport { fromUnixTime, sub } from \"date-fns\";\nimport { formatInTimeZone } from \"date-fns-tz\";\nimport { timeIntervalsMapping } from \"../consts\";\nimport type { DurationOptions } from \"../types\";\n\nexport function formatBytes(bytes: number): string {\n  return byteSize(bytes, { units: \"iec\" }).toString();\n}\n\nexport const shouldShowDate = (timeDuration: DurationOptions): boolean => {\n  return timeIntervalsMapping[timeDuration].showDate;\n};\n\nexport const dateToChartValue = (\n  timestamp: number,\n  { showDate }: { showDate: boolean } = { showDate: false }\n): string => {\n  const date = fromUnixTime(timestamp / 1000);\n  return formatInTimeZone(date, \"utc\", showDate ? \"HH:mm'\\n'MMM dd\" : \"HH:mm\");\n};\n\nexport function timestampsToTicks(\n  timestamps: string[],\n  duration: DurationOptions\n): number[] {\n  const allTimestamps = [...timestamps];\n  allTimestamps.sort();\n  const mostRecentTs =\n    parseInt(allTimestamps[allTimestamps.length - 1]) || Date.now();\n  return new Array(\n    Math.max(timeIntervalsMapping[duration].ticks, allTimestamps.length)\n  )\n    .fill(mostRecentTs)\n    .map((d: number, index) =>\n      sub(new Date(d), {\n        seconds: timeIntervalsMapping[duration].interval * index,\n      }).getTime()\n    );\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartArea,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartThreshold,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_black_500,\n  chart_color_blue_300,\n} from \"@patternfly/react-tokens\";\nimport type { ReactElement, VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { DurationOptions, TimeSeriesMetrics } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport { dateToChartValue, shouldShowDate, timestampsToTicks } from \"./utils\";\n\ntype ChartData = {\n  areaColor: string;\n  softLimitColor: string;\n  area: BrokerChartData[];\n  softLimit: BrokerChartData[];\n};\n\ntype BrokerChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol?: {\n    fill?: string;\n    type?: string;\n  };\n};\n\ntype ChartLinearWithOptionalLimitProps = {\n  metrics: TimeSeriesMetrics;\n  duration: DurationOptions;\n  chartName: string;\n  xLabel?: string;\n  yLabel?: string;\n  usageLimit?: number;\n  formatValue?: (d: number) => string;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\n\nexport const ChartLinearWithOptionalLimit: VoidFunctionComponent<\n  ChartLinearWithOptionalLimitProps\n> = ({\n  metrics,\n  duration,\n  chartName,\n  xLabel,\n  yLabel,\n  usageLimit,\n  formatValue = (d) => `${d}`,\n  isLoading,\n  emptyState,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getChartData(\n    metrics,\n    duration,\n    chartName,\n    t(\"metrics:limit\"),\n    usageLimit\n  );\n\n  const hasMetrics = Object.keys(metrics).length > 0;\n  const showDate = shouldShowDate(duration);\n\n  switch (true) {\n    case isLoading:\n      return <ChartSkeletonLoader />;\n    case !hasMetrics:\n      return emptyState;\n    default: {\n      const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n        `${datum.name}: ${formatValue(datum.y)}`;\n      return (\n        <div ref={containerRef}>\n          <Chart\n            ariaTitle={chartName}\n            containerComponent={\n              <ChartVoronoiContainer labels={labels} constrainToVisibleArea />\n            }\n            legendPosition=\"bottom-left\"\n            legendComponent={\n              <ChartLegend\n                orientation={\"horizontal\"}\n                data={legendData}\n                itemsPerRow={itemsPerRow}\n              />\n            }\n            height={chartHeight}\n            padding={chartPadding}\n            themeColor={ChartThemeColor.multiUnordered}\n            width={width}\n            legendAllowWrap={true}\n          >\n            <ChartAxis\n              label={\"\\n\" + (xLabel || t(\"metrics:axis-label-time\") || \"\")}\n              tickValues={tickValues}\n              tickFormat={(d: number) =>\n                dateToChartValue(d, {\n                  showDate,\n                })\n              }\n            />\n            <ChartAxis\n              label={\"\\n\\n\\n\\n\\n\" + (yLabel || chartName)}\n              dependentAxis\n              tickFormat={formatValue}\n            />\n            <ChartGroup>\n              {chartData.map((value, index) => (\n                <ChartArea\n                  key={`chart-area-${index}`}\n                  data={value.area}\n                  style={{\n                    data: {\n                      // TODO: check if this is needed\n                      // stroke: value.color,\n                    },\n                  }}\n                />\n              ))}\n            </ChartGroup>\n            <ChartThreshold\n              key={`chart-softlimit`}\n              data={chartData[0].softLimit}\n              style={{\n                data: {\n                  stroke: chartData[0].softLimitColor,\n                },\n              }}\n            />\n          </Chart>\n        </div>\n      );\n    }\n  }\n};\n\nfunction getChartData(\n  metrics: TimeSeriesMetrics,\n  duration: number,\n  lineLabel: string,\n  limitLabel: string,\n  usageLimit?: number\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData = [\n    usageLimit\n      ? {\n          name: limitLabel,\n          symbol: { fill: chart_color_black_500.value, type: \"threshold\" },\n        }\n      : undefined,\n    { name: lineLabel, symbol: { fill: chart_color_blue_300.value } },\n  ].filter((d) => !!d) as Array<LegendData>;\n\n  const areaColor = chart_color_blue_300.value;\n  const softLimitColor = chart_color_black_500.value;\n  const chartData: Array<ChartData> = [];\n  const area: Array<BrokerChartData> = [];\n  const softLimit: Array<BrokerChartData> = [];\n\n  Object.entries(metrics).map(([timestamp, bytes]) => {\n    area.push({ name: lineLabel, x: parseInt(timestamp, 10), y: bytes });\n  });\n  chartData.push({ areaColor, softLimitColor, area, softLimit });\n\n  const tickValues = timestampsToTicks(Object.keys(metrics), duration);\n\n  if (usageLimit) {\n    tickValues.forEach((timestamp) =>\n      softLimit.push({\n        name: limitLabel,\n        x: timestamp,\n        y: usageLimit,\n      })\n    );\n  }\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartArea,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_cyan_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { PartitionBytesMetric } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\nconst colors = [chart_color_cyan_300.value, chart_color_blue_300.value];\n\ntype ChartData = {\n  color: string;\n  area: PartitionChartData[];\n};\n\ntype PartitionChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n};\n\nexport type ChartLogSizePerPartitionProps = {\n  partitions: PartitionBytesMetric;\n  topic: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\nexport const ChartLogSizePerPartition: FunctionComponent<\n  ChartLogSizePerPartitionProps\n> = ({ partitions, topic, duration, isLoading, emptyState }) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getChartData(\n    partitions,\n    topic,\n    duration\n  );\n\n  const hasMetrics = Object.keys(partitions).length > 0;\n\n  const showDate = shouldShowDate(duration);\n\n  return (\n    <div ref={containerRef}>\n      {(() => {\n        switch (true) {\n          case isLoading:\n            return <ChartSkeletonLoader />;\n          case !hasMetrics:\n            return emptyState;\n          default: {\n            const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n              `${datum.name}: ${formatBytes(datum.y)}`;\n\n            return (\n              <Chart\n                ariaTitle={t(\"metrics:log_size_per_partition\")}\n                containerComponent={\n                  <ChartVoronoiContainer\n                    labels={labels}\n                    constrainToVisibleArea\n                  />\n                }\n                legendPosition=\"bottom-left\"\n                legendComponent={\n                  <ChartLegend data={legendData} itemsPerRow={itemsPerRow} />\n                }\n                height={chartHeight}\n                padding={chartPadding}\n                themeColor={ChartThemeColor.multiOrdered}\n                width={width}\n                legendAllowWrap={true}\n              >\n                <ChartAxis\n                  label={\"\\n\" + t(\"metrics:axis-label-time\")}\n                  tickValues={tickValues}\n                  tickFormat={(d: number) =>\n                    dateToChartValue(d, {\n                      showDate,\n                    })\n                  }\n                />\n                <ChartAxis\n                  label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n                  dependentAxis\n                  tickFormat={formatBytes}\n                />\n                <ChartGroup>\n                  {chartData.map((value, index) => (\n                    <ChartArea key={`chart-area-${index}`} data={value.area} />\n                  ))}\n                </ChartGroup>\n              </Chart>\n            );\n          }\n        }\n      })()}\n    </div>\n  );\n};\n\nexport function getChartData(\n  partitions: PartitionBytesMetric,\n  topic: string | undefined,\n  duration: number\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n  Object.entries(partitions).map(([partition, dataMap], index) => {\n    const name = topic ? `${topic}: ${partition}` : partition;\n    const color = colors[index];\n    legendData.push({\n      name,\n    });\n    const area: Array<PartitionChartData> = [];\n\n    Object.entries(dataMap).map(([timestamp, value]) => {\n      area.push({ name, x: parseInt(timestamp, 10), y: value });\n    });\n    chartData.push({ color, area });\n  });\n\n  const allTimestamps = Array.from(\n    new Set(Object.values(partitions).flatMap((m) => Object.keys(m)))\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\ntype ChartPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ChartPopover: VoidFunctionComponent<ChartPopoverProps> = ({\n  title,\n  description,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Popover\n      aria-label={title}\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon\n        aria-label={t(\"metrics:chart-popover-icon-screenreader-text\", {\n          title,\n        })}\n      />\n    </Popover>\n  );\n};\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartLine,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_green_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding, timeIntervalsMapping } from \"../consts\";\nimport type { TimeSeriesMetrics } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\ntype ChartData = {\n  color: string;\n  line: TopicChartData[];\n};\n\ntype TopicChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol: {\n    fill: string;\n    type?: string;\n  };\n};\n\ntype ChartTotalBytesProps = {\n  incomingTopicsData: TimeSeriesMetrics;\n  outgoingTopicsData: TimeSeriesMetrics;\n  selectedTopic: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\nexport const ChartTotalBytes: FunctionComponent<ChartTotalBytesProps> = ({\n  incomingTopicsData,\n  outgoingTopicsData,\n  selectedTopic,\n  duration,\n  isLoading,\n  emptyState,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getBytesChartData(\n    incomingTopicsData,\n    outgoingTopicsData,\n    duration,\n    selectedTopic\n      ? t(\"metrics:incoming_bytes\", {\n          topic: selectedTopic,\n        })\n      : t(\"metrics:incoming_bytes_all_topics\"),\n    selectedTopic\n      ? t(\"metrics:outgoing_bytes\", {\n          topic: selectedTopic,\n        })\n      : t(\"metrics:outgoing_bytes_all_topics\")\n  );\n\n  const hasMetrics =\n    Object.keys(incomingTopicsData).length > 0 ||\n    Object.keys(outgoingTopicsData).length > 0;\n\n  const showDate = shouldShowDate(duration);\n\n  switch (true) {\n    case isLoading:\n      return <ChartSkeletonLoader />;\n    case !hasMetrics:\n      return emptyState;\n    default: {\n      const labels: ChartVoronoiContainerProps[\"labels\"] =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n        ({ datum }) => `${datum.name}: ${formatBytes(datum.y)}`;\n      return (\n        <div ref={containerRef}>\n          <Chart\n            ariaTitle={t(\"metrics:total_bytes\")}\n            containerComponent={\n              <ChartVoronoiContainer labels={labels} constrainToVisibleArea />\n            }\n            legendAllowWrap={true}\n            legendPosition=\"bottom-left\"\n            legendComponent={\n              <ChartLegend data={legendData} itemsPerRow={itemsPerRow} />\n            }\n            height={chartHeight}\n            padding={chartPadding}\n            themeColor={ChartThemeColor.multiUnordered}\n            width={width}\n          >\n            <ChartAxis\n              label={\"\\n\" + t(\"metrics:axis-label-time\")}\n              tickValues={tickValues}\n              tickCount={timeIntervalsMapping[duration].ticks}\n              tickFormat={(d: number) =>\n                dateToChartValue(d, {\n                  showDate,\n                })\n              }\n            />\n            <ChartAxis\n              label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n              dependentAxis\n              tickFormat={formatBytes}\n            />\n            <ChartGroup>\n              {chartData.map((value, index) => (\n                <ChartLine\n                  key={`chart-line-${index}`}\n                  data={value.line}\n                  style={{\n                    data: {\n                      stroke: value.color,\n                    },\n                  }}\n                />\n              ))}\n            </ChartGroup>\n          </Chart>\n        </div>\n      );\n    }\n  }\n};\n\nexport function getBytesChartData(\n  incomingTopic: TimeSeriesMetrics,\n  outgoingTopic: TimeSeriesMetrics,\n  duration: number,\n  incomingTopicName: string,\n  outgoingTopicName: string\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n\n  const incomingLine = metricsToLine(incomingTopic, incomingTopicName);\n  if (incomingLine.length > 0) {\n    const color = chart_color_blue_300.value;\n    chartData.push({ color, line: incomingLine });\n    legendData.push({\n      name: incomingTopicName,\n      symbol: {\n        fill: color,\n      },\n    });\n  }\n\n  const outgoingLine = metricsToLine(outgoingTopic, outgoingTopicName);\n  if (outgoingLine.length > 0) {\n    const color = chart_color_green_300.value;\n    chartData.push({ color, line: outgoingLine });\n    legendData.push({\n      name: outgoingTopicName,\n      symbol: {\n        fill: color,\n      },\n    });\n  }\n  const allTimestamps = Array.from(\n    new Set([...Object.keys(incomingTopic), ...Object.keys(outgoingTopic)])\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n\nexport function metricsToLine(\n  metrics: TimeSeriesMetrics,\n  name: string\n): Array<TopicChartData> {\n  const line: Array<TopicChartData> = [];\n\n  Object.entries(metrics).map(([timestamp, bytes]) => {\n    line.push({ name, x: parseInt(timestamp, 10), y: bytes });\n  });\n  return line;\n}\n","import {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateNoMetricsData: FunctionComponent = () => {\n  const { t } = useTranslation([\"metrics\"]);\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon\n        icon={ExclamationTriangleIcon}\n        color=\"var(--pf-global--warning-color--100)\"\n      />\n      <Title headingLevel=\"h3\" size=\"md\">\n        {t(\"metric_not_available\")}\n      </Title>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateNoMetricsDataForSelection: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_metrics_data_title\")}\n      </Title>\n      <EmptyStateBody>\n        {t(\"metrics:empty_state_no_metrics_data_body\")}\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { WrenchIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\ntype EmptyStateNoTopicsProps = {\n  onCreateTopic?: () => void;\n};\nexport const EmptyStateNoTopics: FunctionComponent<EmptyStateNoTopicsProps> = ({\n  onCreateTopic,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={WrenchIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_topics_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"metrics:empty_state_no_topics_body\")}</EmptyStateBody>\n      {onCreateTopic && (\n        <Button\n          ouiaId=\"button-create\"\n          variant=\"primary\"\n          onClick={onCreateTopic}\n        >\n          {t(\"metrics:empty_state_no_topics_create_topic\")}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const EmptyStateNoTopicSelected: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={FilterIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_filter_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"metrics\"}\n          i18nKey={\"empty_state_no_filter_body\"}\n          components={{ bold: <strong /> }}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  ToolbarItem,\n  Select,\n  SelectVariant,\n  SelectGroup,\n  SelectOption,\n} from \"@patternfly/react-core\";\nimport { DurationOptions } from \"../types\";\n\nexport const DurationOptionsMap = {\n  [DurationOptions.Last5minutes]: \"Last 5 minutes\",\n  [DurationOptions.Last15minutes]: \"Last 15 minutes\",\n  [DurationOptions.Last30minutes]: \"Last 30 minutes\",\n  [DurationOptions.Last1hour]: \"Last 1 hour\",\n  [DurationOptions.Last3hours]: \"Last 3 hours\",\n  [DurationOptions.Last6hours]: \"Last 6 hours\",\n  [DurationOptions.Last12hours]: \"Last 12 hours\",\n  [DurationOptions.Last24hours]: \"Last 24 hours\",\n  [DurationOptions.Last2days]: \"Last 2 days\",\n  [DurationOptions.Last7days]: \"Last 7 days\",\n} as const;\n\ntype FilterByTimeProps = {\n  duration: DurationOptions;\n  onDurationChange: (value: DurationOptions) => void;\n  keyText: string;\n  ariaLabel: string;\n  disableToolbar: boolean;\n};\n\nexport const FilterByTime: VoidFunctionComponent<FilterByTimeProps> = ({\n  duration,\n  keyText,\n  ariaLabel,\n  disableToolbar,\n  onDurationChange,\n}) => {\n  const [isTimeSelectOpen, setIsTimeSelectOpen] = useState<boolean>(false);\n\n  const onTimeToggle = (isTimeSelectOpen: boolean) => {\n    setIsTimeSelectOpen(isTimeSelectOpen);\n  };\n\n  const onTimeSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    const mapping = Object.entries(DurationOptionsMap).find(\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ([_, value]) => value === selection\n    );\n    if (mapping) {\n      onDurationChange(parseInt(mapping[0], 10) as DurationOptions);\n    }\n    setIsTimeSelectOpen(false);\n  };\n\n  const timeOptions = (keyText: string) => [\n    <SelectGroup label=\"Relative time ranges\" key={`${keyText}-group`}>\n      {Object.values(DurationOptionsMap).map((label, idx) => (\n        <SelectOption key={`${keyText}-${idx}`} value={label} />\n      ))}\n    </SelectGroup>,\n  ];\n  const ariaId = `filter-by-time-${Date.now()}`;\n  return (\n    <ToolbarItem>\n      <label hidden id={ariaId}>\n        {ariaLabel}\n      </label>\n      <Select\n        variant={SelectVariant.single}\n        aria-labelledby={ariaId}\n        onToggle={onTimeToggle}\n        onSelect={onTimeSelect}\n        selections={DurationOptionsMap[duration]}\n        isOpen={isTimeSelectOpen}\n        isDisabled={disableToolbar}\n      >\n        {timeOptions(keyText)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport \"./FilterByTopic.css\";\n\nconst widths = {\n  default: \"150px\",\n  sm: \"150px\",\n  md: \"150px\",\n  lg: \"200px\",\n  xl: \"200px\",\n  \"2xl\": \"200px\",\n};\n\ntype FilterByTopicProps = {\n  selectedTopic: string | undefined;\n  topicList: string[];\n  disableToolbar: boolean;\n  ariaLabel: string;\n  onSetSelectedTopic: (value: string | undefined) => void;\n};\n\nexport const FilterByTopic: VoidFunctionComponent<FilterByTopicProps> = ({\n  selectedTopic,\n  topicList = [],\n  disableToolbar,\n  ariaLabel,\n  onSetSelectedTopic,\n}) => {\n  const { t } = useTranslation();\n  const [isTopicSelectOpen, setIsTopicSelectOpen] = useState<boolean>(false);\n  const [selectKey, setSelectKey] = useState(Math.random());\n\n  useEffect(() => setSelectKey(Math.random()), [topicList]);\n\n  const allTopicsLabel = t(\"metrics:all_topics\");\n\n  const onTopicToggle = (isTopicSelectOpen: boolean) => {\n    setIsTopicSelectOpen(isTopicSelectOpen);\n  };\n\n  const onTopicSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    selection !== allTopicsLabel\n      ? onSetSelectedTopic(selection as string)\n      : onSetSelectedTopic(undefined);\n    setIsTopicSelectOpen(false);\n  };\n\n  const onTopicFilter = (_: unknown, textInput: string) => {\n    const filteredTopics =\n      topicList.filter((topic) => topic.indexOf(textInput) != -1) || [];\n    return topicOptions(filteredTopics);\n  };\n\n  const topicOptions = (topicList: string[]) => [\n    <SelectOption key={\"topic-filter-0\"} value={allTopicsLabel} />,\n    <SelectGroup label=\"Filter by topic\" key=\"topic-filter-group\">\n      {topicList.map((topic, index) => (\n        <SelectOption\n          key={`topic-filter-${index + 1}`}\n          value={topic}\n          title={topic}\n        />\n      ))}\n    </SelectGroup>,\n  ];\n\n  const isDisabled = disableToolbar || topicList.length === 0;\n  const ariaId = `filter-by-topic-${Date.now()}`;\n\n  return (\n    <ToolbarItem widths={widths}>\n      <label hidden id={ariaId}>\n        {ariaLabel}\n      </label>\n      <Select\n        key={selectKey}\n        variant={SelectVariant.single}\n        onToggle={onTopicToggle}\n        onSelect={onTopicSelect}\n        selections={selectedTopic || allTopicsLabel}\n        isOpen={isTopicSelectOpen}\n        placeholderText={\n          <>\n            <FilterIcon /> {allTopicsLabel}\n          </>\n        }\n        aria-labelledby={ariaId}\n        onFilter={onTopicFilter}\n        isGrouped\n        hasInlineFilter\n        isDisabled={isDisabled}\n        position=\"left\"\n        className={\"appserv-metrics-filterbytopic\"}\n      >\n        {topicOptions(topicList)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import { ToolbarItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate, RefreshButton } from \"@rhoas/app-services-ui-components\";\n\nexport type ToolbarRefreshProps = {\n  isRefreshing: boolean;\n  lastUpdated: Date | undefined;\n  ariaLabel: string;\n  onRefresh: () => void;\n};\n\nexport const ToolbarRefresh: VoidFunctionComponent<ToolbarRefreshProps> = ({\n  isRefreshing,\n  lastUpdated = new Date(),\n  ariaLabel,\n  onRefresh,\n}) => {\n  const { t } = useTranslation([\"metrics\"]);\n\n  return (\n    <>\n      <ToolbarItem>\n        <RefreshButton\n          ariaLabel={ariaLabel}\n          onClick={onRefresh}\n          isRefreshing={isRefreshing}\n        />\n      </ToolbarItem>\n      <ToolbarItem\n        alignment={{ default: \"alignRight\" }}\n        style={{ color: \"var(--pf-global--Color--200)\" }}\n      >\n        <div className=\"pf-u-font-size-xs\">\n          {isRefreshing ? (\n            t(\"metrics:refreshing\")\n          ) : (\n            <>\n              {t(\"metrics:last-refresh\")}\n              <br />\n              <FormatDate date={lastUpdated} format=\"distanceToNow\" />\n              {t(\"metrics:last-refresh-distance\")}\n            </>\n          )}\n        </div>\n      </ToolbarItem>\n    </>\n  );\n};\n","import {\n  CardHeader,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { DurationOptions } from \"../types\";\nimport { FilterByTime } from \"./FilterByTime\";\nimport { FilterByTopic } from \"./FilterByTopic\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarRefresh } from \"./ToolbarRefresh\";\n\ntype ToolbarTopicsMetricsProps = {\n  title: string;\n  selectedTopic: string | undefined;\n  topicList: string[];\n  duration: DurationOptions;\n  isDisabled: boolean;\n  onSetTimeDuration: (value: DurationOptions) => void;\n  onSetSelectedTopic: (value: string | undefined) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\nexport const ToolbarTopicsMetrics: FunctionComponent<\n  ToolbarTopicsMetricsProps\n> = ({\n  title,\n  selectedTopic,\n  topicList,\n  duration,\n  isDisabled,\n  isRefreshing,\n  lastUpdated,\n  onSetTimeDuration,\n  onRefresh,\n  onSetSelectedTopic,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <CardHeader>\n        <CardTitle component=\"h2\">{title}</CardTitle>\n      </CardHeader>\n      <Divider />\n      <Toolbar>\n        <ToolbarContent>\n          <FilterByTopic\n            ariaLabel={t(\"metrics:topics_filter_by_topic\")}\n            selectedTopic={selectedTopic}\n            onSetSelectedTopic={onSetSelectedTopic}\n            topicList={topicList}\n            disableToolbar={isDisabled}\n          />\n          <FilterByTime\n            ariaLabel={t(\"metrics:topics_filter_by_time\")}\n            duration={duration}\n            onDurationChange={onSetTimeDuration}\n            disableToolbar={isDisabled}\n            keyText={\"topic-metrics-time-filter\"}\n          />\n          <ToolbarRefresh\n            isRefreshing={isRefreshing}\n            lastUpdated={lastUpdated}\n            onRefresh={onRefresh}\n            ariaLabel={t(\"metrics:topics_refresh\")}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <Divider />\n    </>\n  );\n};\n","import { Card, CardBody, CardTitle, Divider } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type {\n  DurationOptions,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { CardBodyLoading } from \"./CardBodyLoading\";\nimport { ChartLinearWithOptionalLimit } from \"./ChartLinearWithOptionalLimit\";\nimport { ChartLogSizePerPartition } from \"./ChartLogSizePerPartition\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { ChartTotalBytes } from \"./ChartTotalBytes\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\nimport { EmptyStateNoMetricsDataForSelection } from \"./EmptyStateNoMetricsDataForSelection\";\nimport { EmptyStateNoTopics } from \"./EmptyStateNoTopics\";\nimport { EmptyStateNoTopicSelected } from \"./EmptyStateNoTopicSelected\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarTopicsMetrics } from \"./ToolbarTopicsMetrics\";\n\ntype CardTopicsMetricsProps = {\n  topics: string[];\n  incomingTopicsData: TimeSeriesMetrics;\n  outgoingTopicsData: TimeSeriesMetrics;\n  partitions: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n  duration: DurationOptions;\n  backendUnavailable: boolean;\n  isInitialLoading: boolean;\n  isLoading: boolean;\n  isJustCreated: boolean;\n  selectedTopic: string | undefined;\n  onCreateTopic: () => void;\n  onSelectedTopic: (topic: string | undefined) => void;\n  onDurationChange: (duration: DurationOptions) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\n\nexport const CardTopicsMetrics: FunctionComponent<CardTopicsMetricsProps> = ({\n  topics,\n  incomingTopicsData,\n  outgoingTopicsData,\n  incomingMessageRate,\n  selectedTopic,\n  duration,\n  partitions,\n  backendUnavailable,\n  isInitialLoading,\n  isLoading,\n  isRefreshing,\n  isJustCreated,\n  lastUpdated,\n  onCreateTopic,\n  onRefresh,\n  onSelectedTopic,\n  onDurationChange,\n}) => {\n  const { t } = useTranslation();\n  const noTopics = topics.length === 0;\n  const selectedTopicNotInList =\n    selectedTopic !== undefined &&\n    topics.find((t) => t === selectedTopic) === undefined;\n  const chartEmptyState = selectedTopicNotInList ? (\n    <EmptyStateNoMetricsDataForSelection />\n  ) : (\n    <EmptyStateNoMetricsData />\n  );\n  return (\n    <Card data-testid={\"metrics-topics\"}>\n      <ToolbarTopicsMetrics\n        title={t(\"metrics:topic_metrics\")}\n        duration={duration}\n        onSetTimeDuration={onDurationChange}\n        isDisabled={\n          backendUnavailable || isJustCreated || noTopics || isLoading\n        }\n        isRefreshing={isRefreshing}\n        selectedTopic={selectedTopic}\n        onSetSelectedTopic={onSelectedTopic}\n        onRefresh={onRefresh}\n        topicList={topics}\n        lastUpdated={lastUpdated}\n      />\n      {(() => {\n        switch (true) {\n          case isInitialLoading:\n            return <CardBodyLoading />;\n\n          case backendUnavailable:\n            return (\n              <CardBody>\n                <EmptyStateNoMetricsData />\n              </CardBody>\n            );\n\n          case isJustCreated && !noTopics:\n            return (\n              <CardBody>\n                <EmptyStateNoTopics />\n              </CardBody>\n            );\n\n          case isJustCreated && noTopics:\n            return (\n              <CardBody>\n                <EmptyStateNoTopics onCreateTopic={onCreateTopic} />\n              </CardBody>\n            );\n\n          case selectedTopic !== undefined:\n            return (\n              <>\n                <TotalBytesTitle />\n                <CardBody>\n                  <ChartTotalBytes\n                    incomingTopicsData={incomingTopicsData}\n                    outgoingTopicsData={outgoingTopicsData}\n                    selectedTopic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <IncomingMessageRate />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"metrics:topic_incoming_message_rate\")}\n                    yLabel={t(\"metrics:topic_incoming_message_rate_y_axis\")}\n                    metrics={incomingMessageRate}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <PartitionSizeTitle />\n                <CardBody>\n                  <ChartLogSizePerPartition\n                    partitions={partitions}\n                    topic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n              </>\n            );\n\n          default:\n            return (\n              <>\n                <TotalBytesTitle />\n                <CardBody>\n                  <ChartTotalBytes\n                    incomingTopicsData={incomingTopicsData}\n                    outgoingTopicsData={outgoingTopicsData}\n                    selectedTopic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <IncomingMessageRate />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"metrics:topic_incoming_message_rate\")}\n                    yLabel={t(\"metrics:topic_incoming_message_rate_y_axis\")}\n                    metrics={incomingMessageRate}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <PartitionSizeTitle />\n                <CardBody>\n                  <EmptyStateNoTopicSelected />\n                </CardBody>\n              </>\n            );\n        }\n      })()}\n    </Card>\n  );\n};\n\nconst TotalBytesTitle: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:total_bytes\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:total_bytes_popover_header\")}\n        description={t(\"metrics:topic_metrics_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n\nconst PartitionSizeTitle: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:topic_partition_size\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:topic_partition_size_popover_header\")}\n        description={t(\"metrics:topic_partition_size_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n\nconst IncomingMessageRate: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:topic_incoming_message_rate\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:topic_incoming_message_rate_popover_header\")}\n        description={t(\"metrics:topic_incoming_message_rate_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport {\n  CardHeader,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport { FilterByTime } from \"./FilterByTime\";\nimport type { DurationOptions } from \"../types\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarRefresh } from \"./ToolbarRefresh\";\n\ntype ToolbarKafkaInstanceMetricProps = {\n  title: string;\n  isDisabled: boolean;\n  duration: DurationOptions;\n  onSetTimeDuration: (value: DurationOptions) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\nexport const ToolbarKafkaInstanceMetric: FunctionComponent<\n  ToolbarKafkaInstanceMetricProps\n> = ({\n  title,\n  isDisabled,\n  isRefreshing,\n  lastUpdated,\n  duration,\n  onSetTimeDuration,\n  onRefresh,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <CardHeader>\n        <CardTitle component=\"h2\">{title}</CardTitle>\n      </CardHeader>\n      <Divider />\n      <Toolbar>\n        <ToolbarContent>\n          <FilterByTime\n            ariaLabel={t(\"metrics:kafka_instance_filter_by_time\")}\n            duration={duration}\n            onDurationChange={onSetTimeDuration}\n            keyText={\"kafka-metrics-time-filter\"}\n            disableToolbar={isDisabled}\n          />\n          <ToolbarRefresh\n            isRefreshing={isRefreshing}\n            lastUpdated={lastUpdated}\n            onRefresh={onRefresh}\n            ariaLabel={t(\"metrics:kafka_instance_refresh\")}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <Divider />\n    </>\n  );\n};\n","import { Card, CardBody, CardTitle, Divider } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { DurationOptions, TimeSeriesMetrics } from \"../types\";\nimport { CardBodyLoading } from \"./CardBodyLoading\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { ChartLinearWithOptionalLimit } from \"./ChartLinearWithOptionalLimit\";\nimport { EmptyStateMetricsUnavailable } from \"./EmptyStateMetricsUnavailable\";\nimport { ToolbarKafkaInstanceMetric } from \"./ToolbarKafkaInstanceMetric\";\nimport { formatBytes } from \"./utils\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\n\nexport type CardKafkaInstanceMetricsLimits = {\n  diskSpaceLimit: number;\n  connectionsLimit: number;\n  connectionRateLimit: number;\n};\n\nexport type CardKafkaInstanceMetricsProps = {\n  usedDiskMetrics: TimeSeriesMetrics;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n  duration: DurationOptions;\n  lastUpdated: Date | undefined;\n  backendUnavailable: boolean;\n  isInitialLoading: boolean;\n  isLoading: boolean;\n  isJustCreated: boolean;\n  onDurationChange: (duration: DurationOptions) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\"> &\n  CardKafkaInstanceMetricsLimits;\n\ntype ChartTitleProps = {\n  title: string;\n  helperText: string;\n};\n\nexport const CardKafkaInstanceMetrics: FunctionComponent<\n  CardKafkaInstanceMetricsProps\n> = ({\n  usedDiskMetrics,\n  clientConnectionsMetrics,\n  connectionAttemptRateMetrics,\n  duration,\n  lastUpdated,\n  backendUnavailable,\n  isInitialLoading,\n  isLoading,\n  isRefreshing,\n  isJustCreated,\n  diskSpaceLimit,\n  connectionsLimit,\n  connectionRateLimit,\n  onRefresh,\n  onDurationChange,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  return (\n    <Card data-testid={\"metrics-kafka-instance\"}>\n      <ToolbarKafkaInstanceMetric\n        title={t(\"kafka_instance_metrics\")}\n        duration={duration}\n        lastUpdated={lastUpdated}\n        onSetTimeDuration={onDurationChange}\n        isDisabled={backendUnavailable || isJustCreated || isLoading}\n        isRefreshing={isRefreshing}\n        onRefresh={onRefresh}\n      />\n      {(() => {\n        switch (true) {\n          case isInitialLoading:\n            return <CardBodyLoading />;\n\n          case backendUnavailable:\n            return (\n              <CardBody>\n                <EmptyStateNoMetricsData />\n              </CardBody>\n            );\n\n          case isJustCreated:\n            return (\n              <CardBody>\n                <EmptyStateMetricsUnavailable />\n              </CardBody>\n            );\n\n          default:\n            return (\n              <>\n                <ChartTitle\n                  title={t(\"used_disk_space\")}\n                  helperText={t(\"used_disk_space_help_text\")}\n                />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"used_disk_space\")}\n                    yLabel={t(\"axis-label-bytes\")}\n                    metrics={usedDiskMetrics}\n                    duration={duration}\n                    formatValue={formatBytes}\n                    usageLimit={diskSpaceLimit}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                  />\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"client_connections\")}\n                  helperText={t(\"client_connections_helper_text\")}\n                />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"client_connections\")}\n                    yLabel={t(\"client_connections_y_axis\")}\n                    metrics={clientConnectionsMetrics}\n                    duration={duration}\n                    usageLimit={connectionsLimit}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                  />\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"connection_attempt_rate\")}\n                  helperText={t(\"connection_attempt_rate_help_text\")}\n                />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"connection_attempt_rate\")}\n                    yLabel={t(\"connection_attempt_rate_yaxis\")}\n                    metrics={connectionAttemptRateMetrics}\n                    duration={duration}\n                    usageLimit={connectionRateLimit}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                  />\n                </CardBody>\n              </>\n            );\n        }\n      })()}\n    </Card>\n  );\n};\n\nexport const ChartTitle: FunctionComponent<ChartTitleProps> = ({\n  title,\n  helperText,\n}) => {\n  return (\n    <CardTitle component=\"h3\">\n      {title} <ChartPopover title={title} description={helperText} />\n    </CardTitle>\n  );\n};\n","import {\n  Bullseye,\n  Card,\n  CardBody,\n  CardTitle,\n  Skeleton,\n  Title,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\n\ntype CardKpiProps = {\n  metric: string | number | undefined;\n  name: string;\n  popover: string;\n  isLoading: boolean;\n};\n\nexport const CardKpi: VoidFunctionComponent<CardKpiProps> = ({\n  metric,\n  name,\n  popover,\n  isLoading,\n}) => {\n  return (\n    <Card isFullHeight data-testid={name}>\n      <CardTitle component=\"h3\">\n        {name} <ChartPopover title={name} description={popover} />\n      </CardTitle>\n      <CardBody>\n        {!isLoading &&\n          (metric === undefined ? (\n            <Bullseye>\n              <EmptyStateNoMetricsData />\n            </Bullseye>\n          ) : (\n            <Title\n              headingLevel=\"h3\"\n              size=\"4xl\"\n              aria-valuetext={`${metric} ${name}`}\n            >\n              {metric}\n            </Title>\n          ))}\n        {isLoading && <Skeleton width=\"50px\" shape=\"square\" />}\n      </CardBody>\n    </Card>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Alert, AlertActionCloseButton } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type MetricsLagAlertProps = {\n  isClosed: boolean;\n  onClickClose: () => void;\n};\n\nexport const MetricsLagAlert: VoidFunctionComponent<MetricsLagAlertProps> = ({\n  isClosed,\n  onClickClose,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  if (!isClosed) {\n    return (\n      <Alert\n        isInline\n        variant=\"info\"\n        title={t(\"metrics_lag_title\")}\n        actionClose={<AlertActionCloseButton onClose={onClickClose} />}\n      >\n        <p>{t(\"metrics_lag_description\")}</p>\n      </Alert>\n    );\n  } else {\n    return <> </>;\n  }\n};\n","import {\n  Alert,\n  AlertVariant,\n  Bullseye,\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Skeleton,\n  Text,\n  TextContent,\n  Title,\n} from \"@patternfly/react-core\";\nimport {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\n\ntype PartitionCardProps = {\n  metric: number | undefined;\n  isLoading: boolean;\n  topicPartitionsLimit: number | undefined;\n};\n\nexport const PartitionCard: VoidFunctionComponent<PartitionCardProps> = ({\n  metric,\n  isLoading,\n  topicPartitionsLimit = 0,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Card\n      isFullHeight\n      data-testid={t(\"metrics:metric_kpi_topicPartitions_name\")}\n    >\n      <CardTitle component=\"h3\">\n        {t(\"metrics:metric_kpi_topicPartitions_name\")}{\" \"}\n        <ChartPopover\n          title={t(\"metrics:metric_kpi_topicPartitions_name\")}\n          description={t(\"metrics:metric_kpi_topicPartitions_description\")}\n        />\n      </CardTitle>\n      <CardBody>\n        {!isLoading &&\n          (metric === undefined ? (\n            <Bullseye>\n              <EmptyStateNoMetricsData />\n            </Bullseye>\n          ) : (\n            <>\n              <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                aria-valuetext={`${metric} ${t(\n                  \"metrics:metric_kpi_topicPartitions_name\"\n                )}`}\n              >\n                {metric}{\" \"}\n                {(() => {\n                  if (metric >= topicPartitionsLimit) {\n                    return (\n                      <ExclamationCircleIcon color=\"var(--pf-global--danger-color--100)\" />\n                    );\n                  } else if (metric >= topicPartitionsLimit * 0.95) {\n                    return (\n                      <ExclamationTriangleIcon color=\"var(--pf-global--warning-color--100)\" />\n                    );\n                  } else {\n                    return \"\";\n                  }\n                })()}\n              </Title>\n              <TextContent>\n                <Text>\n                  {t(\"metrics:partition_limit\", {\n                    topic: topicPartitionsLimit,\n                  })}\n                </Text>\n              </TextContent>\n            </>\n          ))}\n        {isLoading && <Skeleton width=\"50px\" shape=\"square\" />}\n      </CardBody>\n      {(() => {\n        if (metric && metric >= topicPartitionsLimit) {\n          return (\n            <CardFooter>\n              <Alert\n                isExpandable\n                isInline\n                variant={AlertVariant.danger}\n                title={t(\"metrics:partition_limit_reached_title\")}\n              >\n                <p>{t(\"metrics:partition_limit_reached_description_1\")}</p>\n                <p>{t(\"metrics:partition_limit_reached_description_2\")}</p>\n              </Alert>\n            </CardFooter>\n          );\n        } else if (metric && metric >= topicPartitionsLimit * 0.95) {\n          return (\n            <CardFooter>\n              <Alert\n                role={\"alert\"}\n                isExpandable\n                isInline\n                variant={AlertVariant.warning}\n                title={t(\"metrics:partition_limit_approaching_title\")}\n              >\n                <p>\n                  {t(\"metrics:partition_limit_approaching_description_1\", {\n                    limit: topicPartitionsLimit,\n                  })}\n                </p>\n                <p>{t(\"metrics:partition_limit_approaching_description_2\")}</p>\n              </Alert>\n            </CardFooter>\n          );\n        } else {\n          return \" \";\n        }\n      })()}\n    </Card>\n  );\n};\n","import { assign, createMachine } from \"xstate\";\nimport type {\n  GetKafkaInstanceMetricsResponse,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { DurationOptions } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#kafkaInstanceMetrics.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type KafkaInstanceMetricsMachineContext = {\n  lastUpdated: Date | undefined;\n\n  // from the UI elements\n  duration: DurationOptions;\n\n  // from the api\n  usedDiskSpaceMetrics: TimeSeriesMetrics;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n  diskSpaceLimit: number | undefined;\n  connectionsLimit: number | undefined;\n  connectionRateLimit: number | undefined;\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const KafkaInstanceMetricsMachine = createMachine(\n  {\n    predictableActionArguments: true,\n    tsTypes: {} as import(\"./KafkaInstanceMetricsMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as KafkaInstanceMetricsMachineContext,\n      events: {} as\n        | ({ type: \"fetchSuccess\" } & GetKafkaInstanceMetricsResponse)\n        | { type: \"fetchFail\" }\n        // to refresh the data\n        | { type: \"refresh\" }\n        // from the UI elements\n        | { type: \"selectTopic\"; topic: string | undefined }\n        | { type: \"selectDuration\"; duration: DurationOptions },\n    },\n    id: \"kafkaInstanceMetrics\",\n    context: {\n      lastUpdated: undefined,\n      duration: DurationOptions.Last1hour,\n      usedDiskSpaceMetrics: {},\n      clientConnectionsMetrics: {},\n      connectionAttemptRateMetrics: {},\n      diskSpaceLimit: undefined,\n      connectionsLimit: undefined,\n      connectionRateLimit: undefined,\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#kafkaInstanceMetrics.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#kafkaInstanceMetrics.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        on: {\n          refresh: {\n            target: \"refreshing\",\n          },\n          selectDuration: {\n            actions: \"setDuration\",\n            target: \"callApi\",\n          },\n        },\n      },\n      refreshing: {\n        tags: \"refreshing\",\n        entry: \"setFetchTimestamp\",\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"withResponse\",\n          },\n          fetchFail: {\n            // 👀 we silently ignore this happened and go back to the right\n            // state depending on the previous data\n            target: \"withResponse\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setFetchTimestamp: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        lastUpdated: (_context) => new Date(),\n      }),\n      setMetrics: assign((_, event) => {\n        const {\n          usedDiskSpaceMetrics,\n          clientConnectionsMetrics,\n          connectionAttemptRateMetrics,\n          diskSpaceLimit,\n          connectionsLimit,\n          connectionRateLimit,\n        } = event;\n        return {\n          usedDiskSpaceMetrics,\n          clientConnectionsMetrics,\n          connectionAttemptRateMetrics,\n          diskSpaceLimit: diskSpaceLimit * 1024 ** 3, // convert it to GiB\n          connectionsLimit,\n          connectionRateLimit,\n        };\n      }),\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n      setDuration: assign((_context, event) => ({\n        duration: event.duration,\n        usedDiskSpaceMetrics: {},\n        clientConnectionsMetrics: {},\n        connectionAttemptRateMetrics: {},\n      })),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            Object.keys(event.clientConnectionsMetrics).length > 0 ||\n            Object.keys(event.connectionAttemptRateMetrics).length > 0 ||\n            Object.keys(event.usedDiskSpaceMetrics).length > 0\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type KafkaInstanceMetricsMachineType =\n  typeof KafkaInstanceMetricsMachine;\n","import { assign, createMachine } from \"xstate\";\nimport type {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { DurationOptions } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#topicsMetrics.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type TopicsMetricsMachineContext = {\n  lastUpdated: Date | undefined;\n\n  // from the UI elements\n  selectedTopic: string | undefined;\n  duration: DurationOptions;\n\n  // from the api\n  kafkaTopics: string[];\n  metricsTopics: string[];\n  bytesOutgoing: TimeSeriesMetrics;\n  bytesIncoming: TimeSeriesMetrics;\n  bytesPerPartition: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const TopicsMetricsMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./TopicsMetricsMachine.typegen\").Typegen0,\n    predictableActionArguments: true,\n    schema: {\n      context: {} as TopicsMetricsMachineContext,\n      events: {} as  // called when a new kafka id has been specified\n        | ({ type: \"fetchSuccess\" } & GetTopicsMetricsResponse)\n        | { type: \"fetchFail\" }\n\n        // to refresh the data\n        | { type: \"refresh\" }\n\n        // from the UI elements\n        | { type: \"selectTopic\"; topic: string | undefined }\n        | { type: \"selectDuration\"; duration: DurationOptions },\n    },\n    id: \"topicsMetrics\",\n    context: {\n      lastUpdated: undefined,\n\n      // from the UI elements\n      selectedTopic: undefined,\n      duration: DurationOptions.Last1hour,\n\n      // from the api\n      kafkaTopics: [],\n      metricsTopics: [],\n      bytesOutgoing: {},\n      bytesIncoming: {},\n      bytesPerPartition: {},\n      incomingMessageRate: {},\n\n      // how many time did we try a fetch (that combines more api)\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#topicsMetrics.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#topicsMetrics.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        initial: \"idle\",\n        states: {\n          idle: {},\n          refreshing: {\n            tags: \"refreshing\",\n            entry: \"setFetchTimestamp\",\n            invoke: {\n              src: \"api\",\n            },\n            on: {\n              fetchSuccess: {\n                actions: \"setMetrics\",\n                target: \"#topicsMetrics.withResponse\",\n              },\n              fetchFail: {\n                // 👀 we silently ignore this happened\n                target: \"#topicsMetrics.withResponse\",\n              },\n            },\n          },\n        },\n        on: {\n          refresh: {\n            target: \"#topicsMetrics.withResponse.refreshing\",\n          },\n          selectTopic: {\n            actions: \"setTopic\",\n            target: \"callApi\",\n          },\n          selectDuration: {\n            actions: \"setDuration\",\n            target: \"callApi\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setFetchTimestamp: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        lastUpdated: (_context) => new Date(),\n      }),\n      setMetrics: assign((_context, event) => {\n        const {\n          kafkaTopics,\n          metricsTopics,\n          bytesPerPartition,\n          bytesIncoming,\n          bytesOutgoing,\n          incomingMessageRate,\n        } = event;\n        return {\n          kafkaTopics,\n          metricsTopics,\n          bytesPerPartition,\n          bytesIncoming,\n          bytesOutgoing,\n          incomingMessageRate,\n        };\n      }),\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n      setTopic: assign({\n        selectedTopic: (_context, event) => event.topic,\n      }),\n      setDuration: assign({\n        duration: (_, event) => event.duration,\n      }),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            Object.keys(event.bytesIncoming).length > 0 ||\n            Object.keys(event.bytesOutgoing).length > 0 ||\n            Object.keys(event.bytesPerPartition).length > 0 ||\n            Object.keys(event.incomingMessageRate).length > 0\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type TopicsMetricsMachineType = typeof TopicsMetricsMachine;\n","import { assign, createMachine } from \"xstate\";\nimport type { GetMetricsKpiResponse } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#kpis.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type MetricsKpiMachineContext = {\n  // from the api\n  topics: number | undefined;\n  topicPartitions: number | undefined;\n  consumerGroups: number | undefined;\n  topicPartitionsLimit: number | undefined;\n\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const MetricsKpiMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./MetricsKpiMachine.typegen\").Typegen0,\n    predictableActionArguments: true,\n    schema: {\n      context: {} as MetricsKpiMachineContext,\n      events: {} as\n        | { type: \"fetch\" }\n        | ({ type: \"fetchSuccess\" } & GetMetricsKpiResponse)\n        | { type: \"fetchFail\" }\n        | { type: \"refresh\" },\n    },\n    id: \"kpis\",\n    context: {\n      topics: undefined,\n      topicPartitions: undefined,\n      consumerGroups: undefined,\n      topicPartitionsLimit: undefined,\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#kpis.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#kpis.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        initial: \"idle\",\n        states: {\n          idle: {},\n          refreshing: {\n            tags: \"refreshing\",\n            invoke: {\n              src: \"api\",\n            },\n            on: {\n              fetchSuccess: {\n                actions: \"setMetrics\",\n                target: \"#kpis.withResponse\",\n              },\n              fetchFail: {\n                // 👀 we silently ignore this happened\n                target: \"#kpis.withResponse\",\n              },\n            },\n          },\n        },\n        on: {\n          refresh: {\n            target: \"#kpis.withResponse.refreshing\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setMetrics: assign((_, event) => {\n        const {\n          topics,\n          topicPartitions,\n          consumerGroups,\n          topicPartitionsLimit,\n        } = event;\n        return {\n          topics,\n          topicPartitions,\n          consumerGroups,\n          topicPartitionsLimit,\n        };\n      }),\n\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            event.topics !== undefined ||\n            event.topicPartitions !== undefined ||\n            event.consumerGroups !== undefined ||\n            event.topicPartitionsLimit !== undefined\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type MetricsKpiMachineType = typeof MetricsKpiMachine;\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { timeIntervalsMapping } from \"./consts\";\nimport type { KafkaInstanceMetricsMachineType } from \"./machines\";\nimport { KafkaInstanceMetricsMachine } from \"./machines\";\nimport type { DurationOptions, GetKafkaInstanceMetricsResponse } from \"./types\";\n\nexport const KafkaInstanceMetricsContext = createContext<{\n  service: ActorRefFrom<KafkaInstanceMetricsMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type KafkaInstanceMetricsProviderProps = {\n  getKafkaInstanceMetrics: (options: {\n    duration: DurationOptions;\n    interval: number;\n  }) => Promise<GetKafkaInstanceMetricsResponse>;\n};\nexport const KafkaInstanceMetricsProvider: FunctionComponent<\n  KafkaInstanceMetricsProviderProps\n> = ({ children, getKafkaInstanceMetrics }) => {\n  const service = useInterpret(\n    () =>\n      KafkaInstanceMetricsMachine.withConfig({\n        services: {\n          api: (context) => {\n            return (callback) => {\n              getKafkaInstanceMetrics({\n                duration: context.duration,\n                interval: timeIntervalsMapping[context.duration].interval,\n              })\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <KafkaInstanceMetricsContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </KafkaInstanceMetricsContext.Provider>\n  );\n};\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { MetricsKpiMachineType } from \"./machines\";\nimport { MetricsKpiMachine } from \"./machines\";\nimport type { GetMetricsKpiResponse } from \"./types\";\n\nexport const MetricsKpiContext = createContext<{\n  service: ActorRefFrom<MetricsKpiMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type MetricsKpiProviderProps = {\n  getMetricsKpi: () => Promise<GetMetricsKpiResponse>;\n};\nexport const MetricsKpiProvider: FunctionComponent<MetricsKpiProviderProps> = ({\n  children,\n  getMetricsKpi,\n}) => {\n  const service = useInterpret(\n    () =>\n      MetricsKpiMachine.withConfig({\n        services: {\n          api: () => {\n            return (callback) => {\n              getMetricsKpi()\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <MetricsKpiContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </MetricsKpiContext.Provider>\n  );\n};\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { timeIntervalsMapping } from \"./consts\";\nimport type { TopicsMetricsMachineType } from \"./machines\";\nimport { TopicsMetricsMachine } from \"./machines\";\nimport type { DurationOptions, GetTopicsMetricsResponse } from \"./types\";\n\nexport const TopicsMetricsContext = createContext<{\n  service: ActorRefFrom<TopicsMetricsMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type TopicsMetricsProviderProps = {\n  getTopicsMetrics: (options: {\n    duration: DurationOptions;\n    interval: number;\n    selectedTopic: string | undefined;\n  }) => Promise<GetTopicsMetricsResponse>;\n};\nexport const TopicsMetricsProvider: FunctionComponent<\n  TopicsMetricsProviderProps\n> = ({ children, getTopicsMetrics }) => {\n  const service = useInterpret(\n    () =>\n      TopicsMetricsMachine.withConfig({\n        services: {\n          api: (context) => {\n            return (callback) => {\n              getTopicsMetrics({\n                selectedTopic: context.selectedTopic,\n                duration: context.duration,\n                interval: timeIntervalsMapping[context.duration].interval,\n              })\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <TopicsMetricsContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </TopicsMetricsContext.Provider>\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport { KafkaInstanceMetricsContext } from \"./KafkaInstanceMetricsProvider\";\nimport type { KafkaInstanceMetricsMachineContext } from \"./machines\";\nimport type { DurationOptions } from \"./types\";\n\ntype SeletorReturn = KafkaInstanceMetricsMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useKafkaInstanceMetrics() {\n  const { service } = useContext(KafkaInstanceMetricsContext);\n\n  const {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    duration,\n    lastUpdated,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n  } = useSelector<typeof service, SeletorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onDurationChange = useCallback(\n    (duration: DurationOptions) =>\n      service.send({ type: \"selectDuration\", duration }),\n    [service]\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  return {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    lastUpdated,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    duration,\n    onDurationChange,\n    onRefresh,\n  };\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport type { TopicsMetricsMachineContext } from \"./machines\";\nimport { TopicsMetricsContext } from \"./TopicsMetricsProvider\";\nimport type { DurationOptions } from \"./types\";\n\ntype SelectorReturn = TopicsMetricsMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useTopicsMetrics() {\n  const { service } = useContext(TopicsMetricsContext);\n\n  const {\n    selectedTopic,\n    duration,\n    kafkaTopics,\n    metricsTopics,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n  } = useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onTopicChange = useCallback(\n    (topic: string | undefined) => service.send({ type: \"selectTopic\", topic }),\n    [service]\n  );\n\n  const onDurationChange = useCallback(\n    (duration: DurationOptions) =>\n      service.send({ type: \"selectDuration\", duration }),\n    [service]\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  const mergedTopics = useMemo((): string[] => {\n    const topics = Array.from(\n      new Set<string>([...kafkaTopics, ...metricsTopics])\n    );\n    topics.sort((a, b) => a.localeCompare(b));\n    return topics;\n  }, [kafkaTopics, metricsTopics]);\n\n  return {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    topics: mergedTopics,\n    selectedTopic,\n    duration,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    onTopicChange,\n    onDurationChange,\n    onRefresh,\n  };\n}\n","import { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport {\n  CardKafkaInstanceMetrics,\n  CardTopicsMetrics,\n  EmptyStateInitialLoading,\n  EmptyStateMetricsUnavailable,\n  MetricsLayout,\n} from \"./components\";\nimport { CardKpi } from \"./components/CardKpi\";\nimport { MetricsLagAlert } from \"./components/MetricsLagAlert\";\nimport { PartitionCard } from \"./components/PartitionCard\";\nimport type { KafkaInstanceMetricsProviderProps } from \"./KafkaInstanceMetricsProvider\";\nimport { KafkaInstanceMetricsProvider } from \"./KafkaInstanceMetricsProvider\";\nimport type { MetricsKpiProviderProps } from \"./MetricsKpiProvider\";\nimport { MetricsKpiProvider } from \"./MetricsKpiProvider\";\nimport type { TopicsMetricsProviderProps } from \"./TopicsMetricsProvider\";\nimport { TopicsMetricsProvider } from \"./TopicsMetricsProvider\";\nimport { useKafkaInstanceMetrics } from \"./useKafkaInstanceMetrics\";\nimport { useMetricsKpi } from \"./useMetricsKpi\";\nimport { useTopicsMetrics } from \"./useTopicsMetrics\";\n\nexport type MetricsProps = {\n  onCreateTopic: () => void;\n  onAlertClose: () => void;\n  hasUserAlreadyClosedAlert: boolean;\n} & KafkaInstanceMetricsProviderProps &\n  TopicsMetricsProviderProps &\n  MetricsKpiProviderProps;\n\nexport const Metrics: VoidFunctionComponent<MetricsProps> = ({\n  getKafkaInstanceMetrics,\n  getTopicsMetrics,\n  getMetricsKpi,\n  onCreateTopic,\n  onAlertClose,\n  hasUserAlreadyClosedAlert,\n}) => {\n  return (\n    <TopicsMetricsProvider getTopicsMetrics={getTopicsMetrics}>\n      <KafkaInstanceMetricsProvider\n        getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n      >\n        <MetricsKpiProvider getMetricsKpi={getMetricsKpi}>\n          <ConnectedMetrics\n            onCreateTopic={onCreateTopic}\n            onClickClose={onAlertClose}\n            isClosed={hasUserAlreadyClosedAlert}\n          />\n        </MetricsKpiProvider>\n      </KafkaInstanceMetricsProvider>\n    </TopicsMetricsProvider>\n  );\n};\n\ntype ConnectedMetricsProps = {\n  onCreateTopic: () => void;\n  onClickClose: () => void;\n  isClosed: boolean;\n};\nconst ConnectedMetrics: VoidFunctionComponent<ConnectedMetricsProps> = ({\n  onCreateTopic,\n  onClickClose,\n  isClosed,\n}) => {\n  const { t } = useTranslation();\n  const kafkaInstanceMetrics = useKafkaInstanceMetrics();\n  const topicsMetrics = useTopicsMetrics();\n  const metricsKpi = useMetricsKpi();\n\n  switch (true) {\n    case kafkaInstanceMetrics.isInitialLoading ||\n      topicsMetrics.isInitialLoading ||\n      metricsKpi.isInitialLoading:\n      return <EmptyStateInitialLoading />;\n    case kafkaInstanceMetrics.isFailed &&\n      topicsMetrics.isFailed &&\n      topicsMetrics.isFailed:\n    case kafkaInstanceMetrics.isJustCreated &&\n      topicsMetrics.isJustCreated &&\n      metricsKpi.isJustCreated:\n      return <EmptyStateMetricsUnavailable />;\n    default:\n      return (\n        <MetricsLayout\n          metricsLagAlert={\n            <MetricsLagAlert onClickClose={onClickClose} isClosed={isClosed} />\n          }\n          topicsKpi={\n            <CardKpi\n              metric={metricsKpi.topics}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              name={t(\"metrics:metric_kpi_topics_name\")}\n              popover={t(\"metrics:metric_kpi_topics_description\")}\n            />\n          }\n          topicPartitionsKpi={\n            <PartitionCard\n              metric={metricsKpi.topicPartitions}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              topicPartitionsLimit={metricsKpi.topicPartitionsLimit}\n            />\n          }\n          consumerGroupKpi={\n            <CardKpi\n              metric={metricsKpi.consumerGroups}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              name={t(\"metrics:metric_kpi_consumerGroup_name\")}\n              popover={t(\"metrics:metric_kpi_consumerGroup_description\")}\n            />\n          }\n          diskSpaceMetrics={<ConnectedKafkaInstanceMetrics />}\n          topicMetrics={\n            <ConnectedTopicsMetrics onCreateTopic={onCreateTopic} />\n          }\n        />\n      );\n  }\n};\n\nconst ConnectedKafkaInstanceMetrics: VoidFunctionComponent = () => {\n  const {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    duration,\n    lastUpdated,\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    onDurationChange,\n    onRefresh,\n  } = useKafkaInstanceMetrics();\n\n  return (\n    <CardKafkaInstanceMetrics\n      usedDiskMetrics={usedDiskSpaceMetrics}\n      clientConnectionsMetrics={clientConnectionsMetrics}\n      connectionAttemptRateMetrics={connectionAttemptRateMetrics}\n      duration={duration}\n      backendUnavailable={isFailed}\n      isInitialLoading={isInitialLoading}\n      isLoading={isLoading}\n      isRefreshing={isRefreshing}\n      isJustCreated={isJustCreated}\n      lastUpdated={lastUpdated}\n      onRefresh={onRefresh}\n      onDurationChange={onDurationChange}\n      diskSpaceLimit={diskSpaceLimit || 0}\n      connectionsLimit={connectionsLimit || 0}\n      connectionRateLimit={connectionRateLimit || 0}\n    />\n  );\n};\n\ntype ConnectedTopicsMetricsProps = {\n  onCreateTopic: () => void;\n};\nconst ConnectedTopicsMetrics: VoidFunctionComponent<\n  ConnectedTopicsMetricsProps\n> = ({ onCreateTopic }) => {\n  const {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    selectedTopic,\n    duration,\n    topics,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    onDurationChange,\n    onTopicChange,\n    onRefresh,\n  } = useTopicsMetrics();\n\n  return (\n    <CardTopicsMetrics\n      backendUnavailable={isFailed}\n      topics={topics}\n      incomingTopicsData={bytesIncoming}\n      outgoingTopicsData={bytesOutgoing}\n      partitions={bytesPerPartition}\n      incomingMessageRate={incomingMessageRate}\n      duration={duration}\n      isInitialLoading={isInitialLoading}\n      isLoading={isLoading}\n      isRefreshing={isRefreshing}\n      isJustCreated={isJustCreated}\n      lastUpdated={lastUpdated}\n      selectedTopic={selectedTopic}\n      onRefresh={onRefresh}\n      onSelectedTopic={onTopicChange}\n      onDurationChange={onDurationChange}\n      onCreateTopic={onCreateTopic}\n    />\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport type { MetricsKpiMachineContext } from \"./machines\";\nimport { MetricsKpiContext } from \"./MetricsKpiProvider\";\n\ntype SelectorReturn = MetricsKpiMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useMetricsKpi() {\n  const { service } = useContext(MetricsKpiContext);\n\n  const {\n    topics,\n    topicPartitions,\n    topicPartitionsLimit,\n    consumerGroups,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n  } = useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  return {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    topics,\n    topicPartitions,\n    consumerGroups,\n    topicPartitionsLimit,\n    onRefresh,\n  };\n}\n","import {\n  Button,\n  Card,\n  CardBody,\n  Flex,\n  FlexItem,\n  Modal,\n  ModalVariant,\n  PageSection,\n  Spinner,\n  Stack,\n  StackItem,\n  Switch,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport \"./Settings.css\";\nimport type { SettingsStatus } from \"./types\";\n\nexport type SettingsProps = {\n  onSubmitReAuthentication: (\n    reauthenticationEnabled: boolean\n  ) => Promise<boolean>;\n  reauthenticationEnabled: boolean;\n};\n\nexport const Settings: FunctionComponent<SettingsProps> = ({\n  onSubmitReAuthentication,\n  reauthenticationEnabled,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  //states\n  const [connectionStatus, setConnectionStatus] = useState<SettingsStatus>(\n    reauthenticationEnabled ? \"On\" : \"Off\"\n  );\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  const onClose = () => {\n    setIsModalOpen(false);\n  };\n\n  const onChangeSwitch = (checked: boolean) => {\n    if (connectionStatus === \"On\") {\n      setIsModalOpen(true);\n    } else {\n      handleReAuthentication(checked);\n    }\n  };\n\n  const handleReAuthentication = (reAuthValue: boolean) => {\n    setConnectionStatus(reAuthValue ? \"TurningOn\" : \"TurningOff\");\n\n    onSubmitReAuthentication(reAuthValue)\n      .then((reauthentication) => {\n        setConnectionStatus(reauthentication ? \"On\" : \"Off\");\n\n        // TODO: send notification\n        // addAlert({\n        //   variant: \"success\",\n        //   title: t(\"settings.success_alert\", {\n        //     status: reauthentication ? \"on\" : \"off\",\n        //   }),\n        // });\n      })\n      .catch(() => {\n        setConnectionStatus(!reAuthValue ? \"On\" : \"Off\");\n\n        // TODO: send notification\n        // addAlert({\n        //   variant: \"danger\",\n        //   title: t(\"settings.error_alert_title\"),\n        //   description: t(\"settings.error_alert_title_description\"),\n        // });\n      });\n  };\n\n  const onTurnOff = () => {\n    setIsModalOpen(false);\n    handleReAuthentication(false);\n  };\n\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <Stack hasGutter>\n        <StackItem>\n          <Card>\n            <CardBody>{t(\"settings.kafka_instance_settings_label\")}</CardBody>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <Card className={\"mas--settings__card\"}>\n            <CardBody>\n              <Flex flexWrap={{ default: \"nowrap\" }}>\n                <FlexItem grow={{ default: \"grow\" }}>\n                  <Flex>\n                    <FlexItem\n                      component={\"span\"}\n                      spacer={{ default: \"spacerSm\" }}\n                    >\n                      <strong>\n                        {t(\"settings.connection_re_authentication_label\")}\n                        {\":\"}\n                      </strong>\n                    </FlexItem>\n                    <FlexItem>\n                      {(() => {\n                        switch (connectionStatus) {\n                          case \"On\":\n                            return t(\n                              \"settings.Connection_re_authentication_states.on\"\n                            );\n                          case \"TurningOff\":\n                            return (\n                              <>\n                                <Spinner\n                                  size=\"md\"\n                                  aria-valuetext={t(\n                                    \"settings.Connection_re_authentication_states.turning_off\"\n                                  )}\n                                  aria-label={t(\n                                    \"settings.connection_re_authentication_label\"\n                                  )}\n                                />{\" \"}\n                                {t(\n                                  \"settings.Connection_re_authentication_states.turning_off\"\n                                )}\n                              </>\n                            );\n                          case \"Off\":\n                            return t(\n                              \"settings.Connection_re_authentication_states.off\"\n                            );\n                          case \"TurningOn\":\n                            return (\n                              <>\n                                <Spinner\n                                  size=\"md\"\n                                  aria-valuetext={\n                                    \"settings.Connection_re_authentication_states.turning_on\"\n                                  }\n                                  aria-label={t(\n                                    \"settings.connection_re_authentication_label\"\n                                  )}\n                                />{\" \"}\n                                {t(\n                                  \"settings.Connection_re_authentication_states.turning_on\"\n                                )}\n                              </>\n                            );\n                          default:\n                            return null;\n                        }\n                      })()}\n                    </FlexItem>\n                  </Flex>\n                </FlexItem>\n                <FlexItem>\n                  <Switch\n                    id=\"Connection-re-authentication-switch\"\n                    aria-label={t(\n                      \"settings.connection_re_authentication_label\"\n                    )}\n                    isChecked={\n                      connectionStatus === \"On\" ||\n                      connectionStatus === \"TurningOff\"\n                    }\n                    isDisabled={\n                      connectionStatus === \"TurningOff\" ||\n                      connectionStatus === \"TurningOn\"\n                    }\n                    onChange={onChangeSwitch}\n                  />\n                </FlexItem>\n                <Modal\n                  variant={ModalVariant.small}\n                  isOpen={isModalOpen}\n                  title={t(\"settings.warning_title\")}\n                  titleIconVariant={\"warning\"}\n                  actions={[\n                    <Button\n                      key={\"confirm\"}\n                      variant=\"primary\"\n                      onClick={onTurnOff}\n                    >\n                      {t(\"settings.turn_off_button_label\")}\n                    </Button>,\n                    <Button key={\"cancel\"} variant=\"link\" onClick={onClose}>\n                      {t(\"common:cancel\")}\n                    </Button>,\n                  ]}\n                  onClose={onClose}\n                >\n                  {t(\"settings.warning_description\")}\n                </Modal>\n              </Flex>\n            </CardBody>\n          </Card>\n        </StackItem>\n      </Stack>\n    </PageSection>\n  );\n};\n","export type SelectOptions = {\n  key: string;\n  value: string;\n  isPlaceholder?: boolean;\n  isDisabled?: boolean;\n};\n\nexport const retentionTimeSelectOptions: SelectOptions[] = [\n  { key: \"days\", value: \"days\", isPlaceholder: true },\n  { key: \"hours\", value: \"hours\" },\n  { key: \"minutes\", value: \"minutes\" },\n  { key: \"seconds\", value: \"seconds\" },\n  { key: \"milliseconds\", value: \"milliseconds\" },\n];\n\nexport const retentionSizeSelectOptions: SelectOptions[] = [\n  { key: \"bytes\", value: \"bytes\", isPlaceholder: true },\n  { key: \"kibibytes\", value: \"kibibytes\" },\n  { key: \"mebibytes\", value: \"mebibytes\" },\n  { key: \"gibibytes\", value: \"gibibytes\" },\n  { key: \"tebibytes\", value: \"tebibytes\" },\n];\n\nexport type IDropdownOption = {\n  value?: string;\n  label?: string;\n  key?: string;\n  isDisabled?: boolean;\n};\n","import { FormGroup, Popover, TextInput } from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\n\nexport interface TextWithLabelPopoverProps {\n  fieldId: string;\n  fieldLabel: string;\n  fieldValue?: string;\n  popoverHeader: string;\n  popoverBody: string;\n  btnAriaLabel: string;\n  showUnlimited?: boolean;\n}\n\nexport const TextWithLabelPopover: FunctionComponent<\n  TextWithLabelPopoverProps\n> = ({\n  fieldId,\n  fieldLabel,\n  btnAriaLabel,\n  fieldValue,\n  popoverBody,\n  popoverHeader,\n  showUnlimited,\n}) => {\n  let displayText = \"-\";\n\n  if (\n    showUnlimited === true &&\n    fieldValue !== undefined &&\n    parseInt(fieldValue) < 0\n  ) {\n    displayText = \"Unlimited\"; // TODO i18n\n  } else if (fieldValue) {\n    displayText = fieldValue;\n  }\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={fieldLabel}\n      className=\"kafka-ui-form-group--readonly\"\n      labelIcon={\n        <Popover\n          headerContent={<div>{popoverHeader}</div>}\n          bodyContent={<div>{popoverBody}</div>}\n        >\n          <button\n            aria-label={btnAriaLabel}\n            onClick={(event) => event.preventDefault()}\n            className=\"pf-c-form__group-label-help\"\n          >\n            <HelpIcon noVerticalAlign />\n          </button>\n        </Popover>\n      }\n    >\n      <TextInput\n        readOnlyVariant={\"plain\"}\n        type=\"text\"\n        id={fieldId}\n        name={fieldId}\n        value={displayText}\n      />\n    </FormGroup>\n  );\n};\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype CleanupProps = {\n  defaultLogSegmentSize: bigint;\n  defaultSegmentTime: bigint;\n  defaultSegmentJitterTime: bigint;\n  defaultFileDeleteDelay: bigint;\n};\n\nconst Cleanup: React.FC<CleanupProps> = ({\n  defaultFileDeleteDelay,\n  defaultLogSegmentSize,\n  defaultSegmentJitterTime,\n  defaultSegmentTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <FormSection title={t(\"cleanup\")} id=\"cleanup\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"cleanup_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"log-segment-size\"\n        btnAriaLabel={t(\"log_segment_size\")}\n        fieldLabel={t(\"log_segment_size\")}\n        fieldValue={t(\"bytes_to_gibibyte\", {\n          bytes: defaultLogSegmentSize,\n          gibibyte: convert(Number(defaultLogSegmentSize), \"bytes\").to(\n            \"gibibytes\"\n          ),\n        })}\n        popoverBody={t(\"log_segment_size\")}\n        popoverHeader={t(\"log_segment_size_description\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segement-time\"\n        btnAriaLabel={t(\"segement_time\")}\n        fieldLabel={t(\"segement_time\")}\n        fieldValue={t(\"milliseconds_to_days\", {\n          milliseconds: defaultSegmentTime,\n          days: convert(Number(defaultSegmentTime), \"milliseconds\").to(\"days\"),\n        })}\n        popoverBody={t(\"segement_time_description\")}\n        popoverHeader={t(\"segement_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segment-jitter-time\"\n        btnAriaLabel={t(\"segment_jitter_time\")}\n        fieldLabel={t(\"segment_jitter_time\")}\n        fieldValue={t(\"milliseconds_time\", { value: defaultSegmentJitterTime })}\n        popoverBody={t(\"segment_jitter_time_description\")}\n        popoverHeader={t(\"segment_jitter_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"file-delete-delay\"\n        btnAriaLabel={t(\"file_delete_delay\")}\n        fieldLabel={t(\"file_delete_delay\")}\n        fieldValue={t(\"milliseconds_to_minute\", {\n          milliseconds: defaultFileDeleteDelay,\n          minute: convert(Number(defaultFileDeleteDelay), \"milliseconds\").to(\n            \"minutes\"\n          ),\n        })}\n        popoverBody={t(\"file_delete_delay_description\")}\n        popoverHeader={t(\"file_delete_delay\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"preallocate-log-segment-files\"\n        btnAriaLabel={t(\"preallocate_log_segment_files\")}\n        fieldLabel={t(\"preallocate_log_segment_files\")}\n        fieldValue={t(\"common:disabled\")}\n        popoverBody={t(\"preallocate_log_segment_files_description\")}\n        popoverHeader={t(\"preallocate_log_segment_files\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Cleanup };\n","import type { NumberInputProps, SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  NumberInput,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { RetentionTimeUnits } from \"../../KafkaTopics/types\";\nimport type { SelectOptions } from \"./types\";\n\nexport type CustomRetentionMessageProps = NumberInputProps &\n  SelectProps & {\n    id?: string;\n    selectOptions: SelectOptions[];\n    topicData: Topic;\n    setTopicData: (data: Topic) => void;\n  };\n\nconst CustomRetentionMessage: React.FC<CustomRetentionMessageProps> = ({\n  onToggle,\n  isOpen,\n  selectOptions,\n  topicData,\n  setTopicData,\n}) => {\n  const onSelect: SelectProps[\"onSelect\"] = (event, value) => {\n    // setTopicData({\n    //   ...topicData,\n    //   customRetentionTimeUnit: value as RetentionTimeUnits,\n    // });\n\n    //}\n\n    onToggle(false, event);\n  };\n\n  const handleTouchSpin = (operator: string) => {\n    if (operator === \"+\") {\n      // setTopicData({\n      //   ...topicData,\n      //   retentionTime: topicData.retentionTime + 1,\n      // });\n    } else if (operator === \"-\") {\n      // setTopicData({\n      //   ...topicData,\n      //   retentionTime: topicData.retentionTime - 1,\n      // });\n    }\n  };\n\n  const onChangeTouchSpin = (event: React.FormEvent<HTMLInputElement>) => {\n    // setTopicData({\n    //   ...topicData,\n    //   retentionTime: Number(event.currentTarget.value),\n    // });\n  };\n\n  return (\n    <div className=\"kafka-ui--radio__parameters\">\n      <Flex>\n        <FlexItem>\n          <NumberInput\n            onMinus={() => handleTouchSpin(\"-\")}\n            onPlus={() => handleTouchSpin(\"+\")}\n            value={\n              Number(\n                topicData[\"retention.ms\"].value\n              ) /* TODO precision loss from BigInt to Number, handle this as a string */\n            }\n            onChange={(event) => onChangeTouchSpin(event)}\n            min={0}\n          />\n        </FlexItem>\n        <FlexItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={onToggle}\n            onSelect={onSelect}\n            selections={RetentionTimeUnits.MILLISECOND /* TODO */}\n            isOpen={isOpen}\n          >\n            {selectOptions?.map((s) => (\n              <SelectOption\n                key={s.key}\n                value={s.value}\n                isPlaceholder={s.isPlaceholder}\n              />\n            ))}\n          </Select>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n\nexport { CustomRetentionMessage };\n","import type { NumberInputProps, SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  NumberInput,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { RetentionSizeUnits } from \"../../KafkaTopics/types\";\nimport type { SelectOptions } from \"./types\";\n\nexport type CustomRetentionSizeProps = NumberInputProps &\n  SelectProps & {\n    id?: string;\n    selectOptions: SelectOptions[];\n    topicData: Topic;\n    setTopicData: (data: Topic) => void;\n  };\n\nconst CustomRetentionSize: React.FC<CustomRetentionSizeProps> = ({\n  onToggle,\n  isOpen,\n  selectOptions,\n  topicData,\n  setTopicData,\n}) => {\n  const onSelect: SelectProps[\"onSelect\"] = (event, value) => {\n    // setTopicData({\n    //   ...topicData,\n    //   customRetentionSizeUnit: value as RetentionSizeUnits,\n    // });\n\n    //}\n\n    onToggle(false, event);\n  };\n\n  const handleTouchSpin = (operator: string) => {\n    if (operator === \"+\") {\n      // setTopicData({\n      //   ...topicData,\n      //   retentionBytes: topicData.retentionBytes + 1,\n      // });\n    } else if (operator === \"-\") {\n      // setTopicData({\n      //   ...topicData,\n      //   retentionBytes: topicData.retentionBytes - 1,\n      // });\n    }\n  };\n\n  const onChangeTouchSpin = (event: React.FormEvent<HTMLInputElement>) => {\n    // setTopicData({\n    //   ...topicData,\n    //   retentionBytes: Number(event.currentTarget.value),\n    // });\n  };\n\n  return (\n    <div className=\"kafka-ui--radio__parameters\">\n      <Flex>\n        <FlexItem>\n          <NumberInput\n            onMinus={() => handleTouchSpin(\"-\")}\n            onPlus={() => handleTouchSpin(\"+\")}\n            value={\n              Number(\n                topicData[\"retention.bytes\"].value\n              ) /* TODO precision loss from BigInt to Number */\n            }\n            onChange={(event) => onChangeTouchSpin(event)}\n            min={0}\n          />\n        </FlexItem>\n        <FlexItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={onToggle}\n            onSelect={onSelect}\n            selections={RetentionSizeUnits.BYTE /* TODO */}\n            isOpen={isOpen}\n          >\n            {selectOptions?.map((s) => (\n              <SelectOption\n                key={s.key}\n                value={s.value}\n                isPlaceholder={s.isPlaceholder}\n              />\n            ))}\n          </Select>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n\nexport { CustomRetentionSize };\n","import type { NumberInputProps } from \"@patternfly/react-core\";\nimport {\n  FormSection,\n  NumberInput,\n  Radio,\n  Stack,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport {\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport {\n  RetentionSizeUnits,\n  RetentionTimeUnits,\n} from \"../../KafkaTopics/types\";\nimport { CustomRetentionMessage } from \"./CustomRetentionMessage\";\nimport { CustomRetentionSize } from \"./CustomRetentionSize\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\nimport {\n  retentionSizeSelectOptions,\n  retentionTimeSelectOptions,\n} from \"./types\";\nimport { useValidateTopic } from \"./useValidateTopic\";\n\nexport type CoreConfigurationProps = {\n  isCreate?: boolean;\n  topicData: Topic;\n  setTopicData: (data: Topic) => void;\n  checkTopicName: (value: string) => Promise<boolean>;\n  //initialPartition: number | undefined;\n  invalidText: string;\n  setInvalidText: (message: string) => void;\n  setTopicValidated: (error: ValidatedOptions) => void;\n  topicValidated: ValidatedOptions;\n  setWarning: (isWarning: boolean) => void;\n  warning: boolean;\n  availablePartitionLimit: number;\n};\n\nconst CoreConfiguration: FunctionComponent<CoreConfigurationProps> = ({\n  isCreate,\n  topicData,\n  setTopicData,\n  invalidText,\n  setInvalidText,\n  setTopicValidated,\n  topicValidated,\n  availablePartitionLimit,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  const { validateName } = useValidateTopic();\n  const [retentionSizeUnit, setRetentionSizeUnit] =\n    useState<RetentionSizeUnits>(RetentionSizeUnits.BYTE);\n  const [retentionTimeUnit, setRetentionTimeUnit] =\n    useState<RetentionTimeUnits>(RetentionTimeUnits.MILLISECOND);\n  const [isRetentionTimeSelectOpen, setIsRetentionTimeSelectOpen] =\n    useState<boolean>();\n  const [isRetentionSizeSelectOpen, setIsRetentionSizeSelectOpen] =\n    useState<boolean>();\n\n  const validationCheck = useCallback(\n    (value: string) => {\n      const errorMessage = validateName(value);\n      if (errorMessage) {\n        setInvalidText(errorMessage);\n        setTopicValidated(ValidatedOptions.error);\n      } else {\n        setTopicValidated(ValidatedOptions.default);\n      }\n    },\n    [setInvalidText, setTopicValidated, validateName]\n  );\n\n  const handleRetentionMessageSize = (value: string) => {\n    switch (value) {\n      case RetentionSizeUnits.CUSTOM:\n        setRetentionSizeUnit(RetentionSizeUnits.CUSTOM);\n        break;\n      case RetentionTimeUnits.UNLIMITED:\n        setRetentionSizeUnit(RetentionSizeUnits.UNLIMITED);\n    }\n  };\n\n  const onRetentionTimeToggle = (isOpen: boolean) => {\n    setIsRetentionTimeSelectOpen(isOpen);\n  };\n\n  const onRetentionSizeToggle = (isOpen: boolean) => {\n    setIsRetentionSizeSelectOpen(isOpen);\n  };\n\n  const handleRetentionMessageTime = (value: string) => {\n    switch (value) {\n      case RetentionTimeUnits.CUSTOM:\n        setRetentionTimeUnit(RetentionTimeUnits.CUSTOM);\n        break;\n      case RetentionTimeUnits.UNLIMITED:\n        setRetentionTimeUnit(RetentionTimeUnits.UNLIMITED);\n    }\n  };\n\n  const handleTextInputChange = (value: string) => {\n    validationCheck(value);\n    setTopicData({ ...topicData, name: value });\n  };\n\n  const onPartitionsChange: NumberInputProps[\"onChange\"] = (event) => {\n    // setTopicData({\n    //   ...topicData,\n    //   partitions.length: Number((event.target as HTMLInputElement).value),\n    // });\n  };\n  const handleOnPlus = () => {\n    // setTopicData({\n    //   ...topicData,\n    //   partitions.length: topicData.partitions.length + 1,\n    // });\n  };\n\n  const handleOnMinus = () => {\n    // setTopicData({\n    //   ...topicData,\n    //   partitions.length: topicData.partitions.length - 1,\n    // });\n  };\n\n  const retentionTimeInput = (\n    <CustomRetentionMessage\n      toggleId=\"core-config-retention-dropdowntoggle\"\n      name=\"retention-ms\"\n      topicData={topicData}\n      setTopicData={setTopicData}\n      onToggle={onRetentionTimeToggle}\n      isOpen={isRetentionTimeSelectOpen}\n      selectOptions={retentionTimeSelectOptions}\n    />\n  );\n\n  const retentionSizeInput = (\n    <CustomRetentionSize\n      toggleId=\"core-config-retention-size-dropdowntoggle\"\n      name=\"retention-bytes\"\n      topicData={topicData}\n      setTopicData={setTopicData}\n      onToggle={onRetentionSizeToggle}\n      isOpen={isRetentionSizeSelectOpen}\n      selectOptions={retentionSizeSelectOptions}\n    />\n  );\n\n  return (\n    <FormSection\n      title={t(\"core_configuration\")}\n      id=\"core-configuration\"\n      titleElement={\"h2\"}\n    >\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"core_config_info\")}\n        </Text>\n      </TextContent>\n      {isCreate ? (\n        <FormGroupWithPopover\n          labelHead={t(\"topic_name\")}\n          fieldId=\"create-topic-name\"\n          fieldLabel={t(\"topic_name\")}\n          labelBody={t(\"topic_name_description\")}\n          buttonAriaLabel=\"More info for topic name field\"\n          helperTextInvalid={invalidText}\n          validated={topicValidated}\n          isRequired={true}\n          helperText={t(\"topic_name_helper_text\")}\n        >\n          <TextInput\n            isRequired\n            type=\"text\"\n            id=\"create-topic-name\"\n            name=\"name\"\n            value={topicData.name}\n            onChange={handleTextInputChange}\n            label={t(\"topic_name\")}\n            placeholder={t(\"enter_name\")}\n            validated={topicValidated}\n          />\n        </FormGroupWithPopover>\n      ) : (\n        <TextWithLabelPopover\n          fieldId=\"topic-name\"\n          btnAriaLabel=\"topic detail name\"\n          fieldLabel=\"Name\"\n          fieldValue={topicData.name}\n          popoverBody={t(\"topic_name_description\")}\n          popoverHeader={t(\"topic_name\")}\n        />\n      )}\n\n      <FormGroupWithPopover\n        fieldId=\"create-topic-partitions\"\n        fieldLabel=\"Partitions\"\n        labelHead={t(\"partitions\")}\n        labelBody={t(\"partitions_description\")}\n        buttonAriaLabel=\"More info for partitions field\"\n        helperText={\n          topicData.partitions.length >= availablePartitionLimit\n            ? t(\"partitions_warning\")\n            : t(\"partition_helper_text\")\n        }\n        validated={\n          topicData.partitions.length >= availablePartitionLimit\n            ? \"warning\"\n            : \"default\"\n        }\n      >\n        <NumberInput\n          id=\"create-topic-partitions\"\n          inputName=\"num-partitions\"\n          onChange={onPartitionsChange}\n          data-testid={t(\"partitions\")}\n          onPlus={handleOnPlus}\n          onMinus={handleOnMinus}\n          value={topicData.partitions.length}\n          plusBtnProps={{ name: \"num-partitions\" }}\n          minusBtnProps={{ name: \"num-partitions\" }}\n          min={0}\n        />\n      </FormGroupWithPopover>\n\n      <TextWithLabelPopover\n        fieldId=\"replicas\"\n        btnAriaLabel={t(\"replicas\")}\n        fieldLabel={t(\"replicas\")}\n        fieldValue={\"3\" /* TODO */}\n        popoverBody={t(\"replicas_description\")}\n        popoverHeader={t(\"replicas\")}\n      />\n      <TextWithLabelPopover\n        fieldId=\"min-insync-replicas\"\n        btnAriaLabel=\"topic detail min-in-sync replica\"\n        fieldLabel=\"Minimum in-sync replicas\"\n        fieldValue={topicData[\"min.insync.replicas\"].toString()}\n        popoverBody={t(\"min_insync_replicas_description\")}\n        popoverHeader={t(\"min_insync_replicas\")}\n      />\n      <FormGroupWithPopover\n        fieldId=\"retention\"\n        fieldLabel=\"Retention time\"\n        labelHead={t(\"retention_time\")}\n        labelBody={t(\"retention_time_description\")}\n        buttonAriaLabel=\"More info for retention time field\"\n      >\n        <Stack hasGutter>\n          <Radio\n            isChecked={\n              retentionTimeUnit === RetentionTimeUnits.DAY ||\n              retentionTimeUnit === RetentionTimeUnits.WEEK ||\n              retentionTimeUnit === RetentionTimeUnits.CUSTOM\n            }\n            name=\"custom-retention-time\"\n            onChange={() =>\n              handleRetentionMessageTime(RetentionTimeUnits.CUSTOM)\n            }\n            label={retentionTimeInput}\n            className=\"kafka-ui--radio-label__number-input\"\n            aria-label=\"custom duration\"\n            id=\"custom-retention-time\"\n            value={RetentionTimeUnits.CUSTOM}\n          />\n          <Radio\n            isChecked={retentionTimeUnit === RetentionTimeUnits.UNLIMITED}\n            name=\"unlimited-retention-time\"\n            onChange={() =>\n              handleRetentionMessageTime(RetentionTimeUnits.UNLIMITED)\n            }\n            label=\"Unlimited time\"\n            aria-label=\"Unlimited\"\n            id=\"unlimited-retention-time\"\n            value={RetentionTimeUnits.UNLIMITED}\n          />\n        </Stack>\n      </FormGroupWithPopover>\n      <FormGroupWithPopover\n        fieldId=\"retention-size\"\n        fieldLabel=\"Retention size\"\n        labelHead={t(\"retention_size\")}\n        labelBody={t(\"retention_size_description\")}\n        buttonAriaLabel=\"More info for retention size field\"\n      >\n        <Stack hasGutter>\n          <Radio\n            isChecked={retentionSizeUnit === RetentionSizeUnits.CUSTOM}\n            name=\"custom-retention-size\"\n            onChange={() =>\n              handleRetentionMessageSize(RetentionSizeUnits.CUSTOM)\n            }\n            label={retentionSizeInput}\n            className=\"kafka-ui--radio-label__number-input\"\n            aria-label=\"custom size\"\n            id=\"custom-retention-size\"\n            value={RetentionSizeUnits.CUSTOM}\n          />\n          <Radio\n            isChecked={retentionSizeUnit === RetentionSizeUnits.UNLIMITED}\n            name=\"unlimited-retention-size\"\n            onChange={() =>\n              handleRetentionMessageSize(RetentionSizeUnits.UNLIMITED)\n            }\n            label=\"Unlimited size\"\n            aria-label=\"Unlimited\"\n            id=\"unlimited-retention-size\"\n            value={RetentionSizeUnits.UNLIMITED}\n          />\n        </Stack>\n      </FormGroupWithPopover>\n    </FormSection>\n  );\n};\n\nexport { CoreConfiguration };\n","import { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { useCallback } from \"react\";\n\nexport const useValidateTopic = (): {\n  validateName: (name: string) => string | undefined;\n} => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return {\n    validateName: useCallback(\n      (name) => {\n        const legalNameChars = new RegExp(\"^[a-zA-Z0-9._-]+$\");\n        if (name.length && !legalNameChars.test(name)) {\n          return t(\"topic_name_helper_text\");\n        } else if (name.length > 249) {\n          return t(\"cannot_exceed_characters\");\n        } else if (name === \".\" || name === \"..\") {\n          return t(\"invalid_name_with_dot\");\n        }\n        return undefined;\n      },\n      [t]\n    ),\n  };\n};\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype FlushProps = {\n  defaultFlushIntervalMessages: bigint;\n  defaultFlushIntervalTime: bigint;\n};\n\nconst Flush: React.FC<FlushProps> = ({\n  defaultFlushIntervalMessages,\n  defaultFlushIntervalTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"flush\")} id=\"flush\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"flush_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"flush-interval-messages\"\n        btnAriaLabel={t(\"flush_interval_messages\")}\n        fieldLabel={t(\"flush_interval_messages\")}\n        fieldValue={t(\"messages_time\", {\n          value: defaultFlushIntervalMessages,\n        })}\n        popoverBody={t(\"flush_interval_messages_description\")}\n        popoverHeader={t(\"flush_interval_messages\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"flush-interval-time\"\n        btnAriaLabel={t(\"flush_interval_time\")}\n        fieldLabel={t(\"flush_interval_time\")}\n        fieldValue={t(\"milliseconds_time\", { value: defaultFlushIntervalTime })}\n        popoverBody={t(\"flush_interval_time_description\")}\n        popoverHeader={t(\"flush_interval_time\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Flush };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport {\n  DropdownWithToggle,\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\nimport type { IDropdownOption } from \"./types\";\n\nexport type LogProps = {\n  topicData: Topic;\n  setTopicData: (data: Topic) => void;\n  defaultDeleteRetentionTime: bigint;\n  defaultMinCleanbleRatio: number;\n  defaultMinimumCompactionLagTime: bigint;\n};\n\nconst Log: React.FC<LogProps> = ({\n  topicData,\n  setTopicData,\n  defaultDeleteRetentionTime,\n  defaultMinCleanbleRatio,\n  defaultMinimumCompactionLagTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  const cleanupPolicyOptions: IDropdownOption[] = [\n    {\n      key: \"compact\",\n      value: \"compact\",\n      label: t(\"compact\"),\n      isDisabled: false,\n    },\n    {\n      key: \"delete\",\n      value: \"delete\",\n      label: t(\"common:delete\"),\n      isDisabled: false,\n    },\n    {\n      key: \"compact-delete\",\n      value: \"compact,delete\",\n      label: `${t(\"compact\")},${t(\"common:delete\")}`,\n      isDisabled: false,\n    },\n  ];\n\n  const onSelectOption = (value: string) => {\n    // setTopicData({ ...topicData, cleanupPolicy: value });\n  };\n\n  return (\n    <FormSection title={t(\"log\")} id=\"log\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p}>{t(\"log_section_info\")}</Text>\n        <Text component={TextVariants.small}>{t(\"log_section_info_note\")}</Text>\n      </TextContent>\n\n      <FormGroupWithPopover\n        fieldId=\"cleanup-policy\"\n        fieldLabel={t(\"cleanup_policy\")}\n        labelHead={t(\"cleanup_policy\")}\n        labelBody={t(\"cleanup_policy_description\")}\n        buttonAriaLabel={t(\"cleanup_policy\")}\n      >\n        <DropdownWithToggle\n          id=\"log-section-policy-type-dropdown\"\n          toggleId=\"log-section-policy-type-dropdowntoggle\"\n          ariaLabel={t(\"select_policy\")}\n          onSelectOption={onSelectOption}\n          items={cleanupPolicyOptions}\n          name=\"cleanup-policy\"\n          value={topicData[\"cleanup.policy\"]}\n          isLabelAndValueNotSame={true}\n        />\n      </FormGroupWithPopover>\n\n      <TextWithLabelPopover\n        fieldId=\"delete-retention-time\"\n        btnAriaLabel={t(\"delete_retention_time\")}\n        fieldLabel={t(\"delete_retention_time\")}\n        fieldValue={t(\"milliseconds_time_to_day\", {\n          value: defaultDeleteRetentionTime,\n          days: convert(Number(defaultDeleteRetentionTime), \"milliseconds\").to(\n            \"days\"\n          ),\n        })}\n        popoverBody={t(\"delete_retention_time_description\")}\n        popoverHeader={t(\"delete_retention_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"min-cleanable-ratio\"\n        btnAriaLabel={t(\"min_cleanable_ratio\")}\n        fieldLabel={t(\"min_cleanable_ratio\")}\n        fieldValue={String(defaultMinCleanbleRatio)}\n        popoverBody={t(\"min_cleanable_ratio_description\")}\n        popoverHeader={t(\"min_cleanable_ratio\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"min-compaction-lag-time-description\"\n        btnAriaLabel={t(\"min_compaction_lag_time\")}\n        fieldLabel={t(\"min_compaction_lag_time\")}\n        fieldValue={t(\"milliseconds_time\", {\n          value: defaultMinimumCompactionLagTime,\n        })}\n        popoverBody={t(\"min_compaction_lag_time_description\")}\n        popoverHeader={t(\"min_compaction_lag_time\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Log };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype MessageProps = {\n  defaultMaximumMessageBytes: bigint;\n  defaultMessageTimestampType: string;\n  defaultMaxMessageTimestampDiff: bigint;\n};\n\nconst Message: React.FC<MessageProps> = ({\n  defaultMaximumMessageBytes,\n  defaultMessageTimestampType,\n  defaultMaxMessageTimestampDiff,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"messages\")} id=\"messages\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"message_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"max-message-size\"\n        btnAriaLabel={t(\"max_message_size\")}\n        fieldLabel={t(\"max_message_size\")}\n        fieldValue={t(\"bytes_size\", { value: defaultMaximumMessageBytes })}\n        popoverBody={t(\"max_message_size_description\")}\n        popoverHeader={t(\"max_message_size\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"message-timestamp-type\"\n        btnAriaLabel={t(\"message_timestamp_type\")}\n        fieldLabel={t(\"message_timestamp_type\")}\n        fieldValue={String(defaultMessageTimestampType)}\n        popoverBody={t(\"message_timestamp_type_description\")}\n        popoverHeader={t(\"message_timestamp_type\")}\n      />\n      <TextWithLabelPopover\n        fieldId=\"max-message-timestamp-diff\"\n        btnAriaLabel={t(\"max_message_timestamp_diff\")}\n        fieldLabel={t(\"max_message_timestamp_diff\")}\n        fieldValue={t(\"milliseconds_time\", {\n          value: defaultMaxMessageTimestampDiff,\n        })}\n        popoverBody={t(\"max_message_timestamp_diff_description\")}\n        popoverHeader={t(\"max_message_timestamp_diff\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"compression-type\"\n        btnAriaLabel={t(\"compression_type\")}\n        fieldLabel={t(\"compression_type\")}\n        fieldValue={\"Producer\"}\n        popoverBody={t(\"compression_type_description\")}\n        popoverHeader={t(\"compression_type\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"message-format\"\n        btnAriaLabel={t(\"message_format\")}\n        fieldLabel={t(\"message_format\")}\n        fieldValue={\"2.7-IV2\"}\n        popoverBody={t(\"message_format_description\")}\n        popoverHeader={t(\"message_format\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Message };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\nconst Replication: React.FC = () => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <FormSection title={t(\"replication\")} id=\"replication\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {t(\"replication_section_info\")}\n          <Text component={TextVariants.small}>\n            {t(\"replication_section_info_note\")}\n          </Text>\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"unclean-leader-election\"\n        btnAriaLabel={t(\"unclean_leader_election\")}\n        fieldLabel={t(\"unclean_leader_election\")}\n        fieldValue={t(\"common:disabled\")}\n        popoverBody={t(\"unclean_leader_election_description\")}\n        popoverHeader={t(\"unclean_leader_election\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Replication };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype TopicAdavanceIndexProps = {\n  defaultIndexIntervalSize: bigint;\n  defaultSegmentIndexSize: bigint;\n};\n\nconst TopicAdvanceIndex: React.FC<TopicAdavanceIndexProps> = ({\n  defaultIndexIntervalSize,\n  defaultSegmentIndexSize,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"index\")} id=\"index\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"index_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"index-interval-size\"\n        btnAriaLabel={t(\"index_interval_size\")}\n        fieldLabel={t(\"index_interval_size\")}\n        fieldValue={t(\"bytes_to_kibibytes\", {\n          bytes: defaultIndexIntervalSize,\n          kibibytes: convert(Number(defaultIndexIntervalSize), \"bytes\").to(\n            \"kibibytes\"\n          ),\n        })}\n        popoverBody={t(\"index_interval_size_description\")}\n        popoverHeader={t(\"index_interval_size\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segment-index-size\"\n        btnAriaLabel={t(\"segment_index_size\")}\n        fieldLabel={t(\"segment_index_size\")}\n        fieldValue={t(\"bytes_to_mebibytes\", {\n          bytes: defaultSegmentIndexSize,\n          mebibytes: convert(Number(defaultIndexIntervalSize), \"bytes\").to(\n            \"mebibytes\"\n          ),\n        })}\n        popoverBody={t(\"segment_index_size_description\")}\n        popoverHeader={t(\"segment_index_size\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { TopicAdvanceIndex };\n","import { JumpLinks, JumpLinksItem, SidebarPanel } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\n\nexport type TopicAdvanceJumpLinksProps = {\n  canHaveDelete?: boolean;\n};\nconst TopicAdvanceJumpLinks: React.FC<TopicAdvanceJumpLinksProps> = ({\n  canHaveDelete,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <SidebarPanel variant=\"sticky\">\n      <JumpLinks\n        isVertical\n        label={t(\"jump_to_section\")}\n        scrollableSelector=\".topic-properties\"\n        style={{ position: \"sticky\" }}\n        // offset={-164} // for header\n      >\n        <JumpLinksItem key={0} href=\"#core-configuration\">\n          {t(\"core_configuration\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={1} href=\"#messages\">\n          {t(\"messages\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={2} href=\"#log\">\n          {t(\"log\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={3} href=\"#replication\">\n          {t(\"replication\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={4} href=\"#cleanup\">\n          {t(\"cleanup\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={5} href=\"#index\">\n          {t(\"index\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={6} href=\"#flush\">\n          {t(\"flush\")}\n        </JumpLinksItem>\n        {canHaveDelete ? (\n          <JumpLinksItem key={7} href=\"#delete\">\n            {t(\"delete\")}\n          </JumpLinksItem>\n        ) : (\n          <></>\n        )}\n      </JumpLinks>\n    </SidebarPanel>\n  );\n};\n\nexport { TopicAdvanceJumpLinks };\n","import {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  PageGroup,\n  PageSection,\n  Sidebar,\n  SidebarContent,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { Cleanup } from \"./Cleanup\";\nimport { CoreConfiguration } from \"./CoreConfiguration\";\nimport { Flush } from \"./Flush\";\nimport { Log } from \"./Log\";\nimport { Message } from \"./Message\";\nimport { Replication } from \"./Replication\";\nimport { TopicAdvanceIndex } from \"./TopicAdvanceIndex\";\nimport { TopicAdvanceJumpLinks } from \"./TopicAdvanceJumpLinks\";\n\nexport type TopicAdvancePageProps = {\n  isCreate: boolean;\n  onConfirm: () => void;\n  handleCancel?: () => void;\n  topicData: Topic;\n  setTopicData: (val: Topic) => void;\n  checkTopicName: (value: string) => Promise<boolean>;\n  availablePartitionLimit: number;\n};\n\nexport const TopicAdvancePage: React.FunctionComponent<\n  TopicAdvancePageProps\n> = ({\n  isCreate,\n  onConfirm,\n  handleCancel,\n  topicData,\n  setTopicData,\n  checkTopicName,\n  availablePartitionLimit,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n  const actionText = isCreate ? t(\"create_topic\") : t(\"common:save\");\n\n  //states\n\n  const [topicValidated, setTopicValidated] = useState<ValidatedOptions>(\n    ValidatedOptions.default\n  );\n  const [invalidText, setInvalidText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [warning, setWarning] = useState<boolean>(false);\n  const onValidateTopic = () => {\n    if (topicData?.name.length < 1) {\n      setInvalidText(t(\"common:required\"));\n      setTopicValidated(ValidatedOptions.error);\n    } else {\n      setIsLoading(true);\n\n      checkTopicName(topicData?.name)\n        .then((value) =>\n          value == false\n            ? (setInvalidText(t(\"already_exists\", { name: topicData?.name })),\n              setTopicValidated(ValidatedOptions.error))\n            : onConfirm()\n        )\n        .finally(() => setIsLoading(false));\n    }\n  };\n\n  return (\n    <PageSection padding={{ default: \"noPadding\" }}>\n      <Sidebar hasGutter>\n        <TopicAdvanceJumpLinks />\n        <SidebarContent>\n          <PageGroup\n            hasOverflowScroll={true}\n            id=\"topic-detail-view\"\n            aria-label={\"TODO\"}\n          >\n            <PageSection padding={{ default: \"noPadding\" }}>\n              <Form>\n                <CoreConfiguration\n                  isCreate={isCreate}\n                  topicData={topicData}\n                  setTopicData={setTopicData}\n                  checkTopicName={checkTopicName}\n                  availablePartitionLimit={availablePartitionLimit}\n                  invalidText={invalidText}\n                  setInvalidText={setInvalidText}\n                  setTopicValidated={setTopicValidated}\n                  topicValidated={topicValidated}\n                  setWarning={setWarning}\n                  warning={warning}\n                />\n                <Message\n                  defaultMaximumMessageBytes={\n                    topicData[\"max.message.bytes\"].value\n                  }\n                  defaultMessageTimestampType={\n                    topicData[\"message.timestamp.type\"]\n                  }\n                  defaultMaxMessageTimestampDiff={\n                    topicData[\"message.timestamp.difference.max.ms\"].value\n                  }\n                />\n                <Log\n                  topicData={topicData}\n                  setTopicData={setTopicData}\n                  defaultDeleteRetentionTime={topicData[\"retention.ms\"].value}\n                  defaultMinCleanbleRatio={\n                    topicData[\"min.cleanable.dirty.ratio\"]\n                  }\n                  defaultMinimumCompactionLagTime={\n                    topicData[\"min.compaction.lag.ms\"].value\n                  }\n                />\n                <Replication />\n                <Cleanup\n                  defaultLogSegmentSize={topicData[\"segment.bytes\"].value}\n                  defaultSegmentTime={topicData[\"segment.ms\"].value}\n                  defaultSegmentJitterTime={\n                    topicData[\"segment.jitter.ms\"].value\n                  }\n                  defaultFileDeleteDelay={\n                    topicData[\"file.delete.delay.ms\"].value\n                  }\n                />\n                <TopicAdvanceIndex\n                  defaultIndexIntervalSize={\n                    topicData[\"index.interval.bytes\"].value\n                  }\n                  defaultSegmentIndexSize={\n                    topicData[\"segment.index.bytes\"].value\n                  }\n                />\n                <Flush\n                  defaultFlushIntervalMessages={\n                    topicData[\"flush.messages\"].value\n                  }\n                  defaultFlushIntervalTime={topicData[\"flush.ms\"].value}\n                />\n              </Form>\n\n              <ActionGroup className=\"kafka-ui--sticky-footer\">\n                <Divider className=\"kafka-ui--divider--FlexShrink\" />\n                <Button\n                  isLoading={isLoading}\n                  onClick={onValidateTopic}\n                  variant=\"primary\"\n                  data-testid={\n                    isCreate\n                      ? \"topicAdvanceCreate-actionCreate\"\n                      : \"tabProperties-actionSave\"\n                  }\n                  isDisabled={topicValidated !== \"default\"}\n                >\n                  {actionText}\n                </Button>\n                <Button\n                  onClick={handleCancel}\n                  variant=\"link\"\n                  data-testid={\n                    isCreate\n                      ? \"topicAdvanceCreate-actionCancel\"\n                      : \"tabProperties-actionCancel\"\n                  }\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </ActionGroup>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { TopicAdvancePage } from \"../components/TopicAdvancePage\";\n\nexport type EditTopicPropertiesProps = {\n  topic: Topic;\n  onCancel: () => void;\n};\n\nexport const EditTopicProperties: FunctionComponent<\n  EditTopicPropertiesProps\n> = ({ topic }) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  return (\n    <PageSection\n      variant={\"light\"}\n      className={\"topic-properties\"}\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n    >\n      <TopicAdvancePage\n        isCreate={false}\n        onConfirm={() => {}}\n        handleCancel={() => {}}\n        topicData={topic}\n        setTopicData={() => {}}\n        checkTopicName={() => Promise.resolve(true)}\n        availablePartitionLimit={3}\n      />\n    </PageSection>\n  );\n};\n","import {\n  Button,\n  Divider,\n  Form,\n  FormSection,\n  PageGroup,\n  PageSection,\n  Sidebar,\n  SidebarContent,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport {\n  formattedRetentionSize,\n  formattedRetentionTime,\n} from \"../../KafkaTopics/types\";\nimport { TextWithLabelPopover } from \"../components\";\nimport { Cleanup } from \"../components/Cleanup\";\nimport { Flush } from \"../components/Flush\";\nimport { Message } from \"../components/Message\";\nimport { Replication } from \"../components/Replication\";\nimport { TopicAdvanceIndex } from \"../components/TopicAdvanceIndex\";\nimport { TopicAdvanceJumpLinks } from \"../components/TopicAdvanceJumpLinks\";\n\nexport type TopicViewDetailProps = {\n  topic: Topic;\n  deleteTopicHref: string;\n  updateTopicHref: string;\n};\n\nexport const TopicProperties: React.FunctionComponent<TopicViewDetailProps> = ({\n  topic,\n  deleteTopicHref,\n  updateTopicHref,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  return (\n    <PageSection\n      variant={\"light\"}\n      className={\"topic-properties\"}\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n    >\n      <Sidebar hasGutter>\n        <TopicAdvanceJumpLinks canHaveDelete={true} />\n        <SidebarContent>\n          <PageGroup\n            hasOverflowScroll={true}\n            aria-label={\"TODO\"}\n            id=\"topic-detail-view\"\n            className={\"pf-u-mb-4xl\"}\n          >\n            <PageSection padding={{ default: \"noPadding\" }}>\n              <Split>\n                <SplitItem isFilled>\n                  <Form id=\"topic-form\">\n                    <FormSection\n                      title={t(\"core_configuration\")}\n                      id=\"core-configuration\"\n                      titleElement={\"h2\"}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className=\"section-info\"\n                        >\n                          {t(\"core_config_info\")}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"topic-name\"\n                        btnAriaLabel={t(\"name\")}\n                        fieldLabel={t(\"topic_name\")}\n                        fieldValue={topic.name}\n                        popoverBody={t(\"topic_name_description\")}\n                        popoverHeader={t(\"topic_name\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"partitions\"\n                        btnAriaLabel={t(\"partitions\")}\n                        fieldLabel={t(\"partitions\")}\n                        fieldValue={topic.partitions.length.toString()}\n                        popoverBody={t(\"partitions_description\")}\n                        popoverHeader={t(\"partitions\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"replicas\"\n                        btnAriaLabel={t(\"replicas\")}\n                        fieldLabel={t(\"replicas\")}\n                        fieldValue={\n                          \"TODO\" /* TODO this is a config from the Kafka instance itself, should we be showing it? */\n                        }\n                        popoverBody={t(\"replicas_description\")}\n                        popoverHeader={t(\"replicas\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-insync-replicas\"\n                        btnAriaLabel={t(\"min_insync_replicas\")}\n                        fieldLabel={t(\"min_insync_replicas\")}\n                        fieldValue={topic[\"min.insync.replicas\"].toString()}\n                        popoverBody={t(\"min_insync_replicas_description\")}\n                        popoverHeader={t(\"min_insync_replicas\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"retention-time\"\n                        btnAriaLabel={t(\"retention_time\")}\n                        fieldLabel={t(\"retention_time\")}\n                        fieldValue={formattedRetentionTime(\n                          topic[\"retention.ms\"].value\n                        )}\n                        popoverBody={t(\"retention_time_description\")}\n                        popoverHeader={t(\"retention_time\")}\n                        showUnlimited={true}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"retention-size\"\n                        btnAriaLabel={t(\"retention_size\")}\n                        fieldLabel={t(\"retention_size\")}\n                        fieldValue={formattedRetentionSize(\n                          topic[\"retention.bytes\"].value\n                        )}\n                        popoverHeader={t(\"retention_size\")}\n                        popoverBody={t(\"retention_size_description\")}\n                        showUnlimited={true}\n                      />\n                    </FormSection>\n                    <Message\n                      defaultMaximumMessageBytes={\n                        topic[\"max.message.bytes\"].value\n                      }\n                      defaultMessageTimestampType={\n                        topic[\"message.timestamp.type\"]\n                      }\n                      defaultMaxMessageTimestampDiff={\n                        topic[\"message.timestamp.difference.max.ms\"].value\n                      }\n                    />\n                    <FormSection title={t(\"log\")} id=\"log\" titleElement={\"h2\"}>\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t(\"log_section_info\")}\n                          <Text\n                            component={TextVariants.small}\n                            className=\"section-info-note\"\n                          >\n                            {t(\"log_section_info_note\")}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"cleanup-policy\"\n                        btnAriaLabel={t(\"cleanup_policy\")}\n                        fieldLabel={t(\"cleanup_policy\")}\n                        fieldValue={topic[\"cleanup.policy\"]}\n                        popoverBody={t(\"cleanup_policy_description\")}\n                        popoverHeader={t(\"cleanup_policy\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"delete-retention-time\"\n                        btnAriaLabel={t(\"delete_retention_time\")}\n                        fieldLabel={t(\"delete_retention_time\")}\n                        fieldValue={topic[\n                          \"delete.retention.ms\"\n                        ].value.toString()}\n                        popoverBody={t(\"delete_retention_time_description\")}\n                        popoverHeader={t(\"delete_retention_time\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-cleanable-ratio\"\n                        btnAriaLabel={t(\"min_cleanable_ratio\")}\n                        fieldLabel={t(\"min_cleanable_ratio\")}\n                        fieldValue={topic[\n                          \"min.cleanable.dirty.ratio\"\n                        ].toString()}\n                        popoverBody={t(\"min_cleanable_ratio_description\")}\n                        popoverHeader={t(\"min_cleanable_ratio\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-compaction-lag-time\"\n                        btnAriaLabel={t(\"min_compaction_lag_time\")}\n                        fieldLabel={t(\"min_compaction_lag_time\")}\n                        fieldValue={topic[\n                          \"min.compaction.lag.ms\"\n                        ].value.toString()}\n                        popoverBody={t(\"min_compaction_lag_time_description\")}\n                        popoverHeader={t(\"min_compaction_lag_time\")}\n                      />\n                    </FormSection>\n                    <Replication />\n                    <Cleanup\n                      defaultLogSegmentSize={topic[\"segment.bytes\"].value}\n                      defaultSegmentTime={topic[\"segment.ms\"].value}\n                      defaultSegmentJitterTime={\n                        topic[\"segment.jitter.ms\"].value\n                      }\n                      defaultFileDeleteDelay={\n                        topic[\"file.delete.delay.ms\"].value\n                      }\n                    />\n                    <TopicAdvanceIndex\n                      defaultIndexIntervalSize={\n                        topic[\"index.interval.bytes\"].value\n                      }\n                      defaultSegmentIndexSize={\n                        topic[\"segment.index.bytes\"].value\n                      }\n                    />\n                    <Flush\n                      defaultFlushIntervalMessages={\n                        topic[\"flush.messages\"].value\n                      }\n                      defaultFlushIntervalTime={topic[\"flush.ms\"].value}\n                    />\n                  </Form>\n\n                  <Divider className=\"pf-u-mt-2xl pf-u-mb-2xl\" />\n\n                  <TextContent>\n                    <Text component={TextVariants.h2} id=\"delete\">\n                      {t(\"delete_topic_irreversible\")}\n                    </Text>\n                    <Text component={TextVariants.p} className=\"section-info\">\n                      {t(\"delete_topic_info\")}\n                    </Text>\n                    <Button\n                      variant=\"danger\"\n                      data-testid=\"tabProperties-actionDelete\"\n                      component={(props) => (\n                        <Link {...props} to={deleteTopicHref}>\n                          {t(\"delete_topic\")}\n                        </Link>\n                      )}\n                    />\n                  </TextContent>\n                </SplitItem>\n                <SplitItem>\n                  <Button\n                    variant=\"primary\"\n                    data-testid=\"tabProperties-actionEdit\"\n                    component={(props) => (\n                      <Link {...props} to={updateTopicHref}>\n                        {t(\"edit_props\")}\n                      </Link>\n                    )}\n                  />\n                </SplitItem>\n              </Split>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n"],"names":["NewInstanceSegment","ClusterSegment","ControlPlaneSpecialSegments","ControlPlaneRouteRoot","ControlPlaneRoutePath","ControlPlaneNewInstancePath","ControlPlaneDeleteInstancePath","ControlPlaneChangeOwnerPath","DedicatedControlPlaneRouteRoot","DedicatedControlPlaneRoutePath","DedicatedControlPlaneClustersPath","DedicatedControlPlaneNewInstancePath","DedicatedControlPlaneDeleteInstancePath","DedicatedControlPlaneChangeOwnerPath","DrawerContext","createContext","DrawerProvider","children","standardMatch","useRouteMatch","dedicatedMatch","match","Error","selectedInstance","params","id","includes","undefined","section","instance","useState","isExact","isExpanded","setIsExpanded","activeTab","setActiveTab","onClose","useRef","toggleExpanded","useCallback","newValue","prev","current","useEffect","value","useMemo","Provider","onTabChange","useDrawer","context","useContext","RedirectOnGateError","redirectUrl","key","useLocation","ErrorBoundary","resetKeys","fallbackRender","RedirectAndResetError","reset","Redirect","to","ConnectedControlPlaneHeader","activeSection","sectionsHref","standard","dedicated","clusters","useKafkaInstancesTable","instancesHref","instanceSelectedHref","instanceCreationHref","instanceDeletionHref","instanceChangeOwnerHref","history","useHistory","setActiveQuickStart","QuickStartContext","replace","labels","usePaginationSearchParams","page","perPage","setPagination","setPaginationQuery","resetPaginationQuery","namesChips","useURLSearchParamsChips","ownersChips","statusesChips","useSortableSearchParams","fields","isColumnSortable","sort","sortDirection","onClearAllFilters","clearChained","openDrawer","tab","onDetailsClick","onConnectionsClick","onCreate","push","onDelete","onChangeOwner","onQuickstartGuide","KafkaInstancesRoute","getUrlForInstance","data","name","chips","owner","status","direction","deployment","columns","instances","itemCount","count","names","owners","statuses","onPageChange","onSearchName","add","onRemoveNameChip","remove","onRemoveNameChips","clear","onSearchOwner","onRemoveOwnerChip","onRemoveOwnerChips","onSearchStatus","toggle","onRemoveStatusChip","onRemoveStatusChips","isRowSelected","onDetails","onConnection","onClickConnectionTabLink","onClickSupportLink","onInstanceLinkClick","canHaveInstanceLink","canOpenConnection","canChangeOwner","canDelete","CreateKafkaInstanceRoute","callbacks","auth","useChrome","getUsername","getUser","username","identity","user","Promise","reject","checkDeveloperAvailabilityQuery","standardQuotaQuery","providersWithRegionsQuery","getProvidersInfo","getProviderRegionsSizes","checkDeveloperAvailability","onAvailable","onUsed","onUnavailable","checkStandardQuota","onQuotaAvailable","onNoQuotaAvailable","onOutOfQuota","hasTrialQuota","remainingPrepaidQuota","remainingMarketplaceQuota","marketplaceSubscriptions","quota","fetchProvidersWithRegions","plan","providers","getStandardSizes","provider","region","providersInfo","providerInfo","find","p","getTrialSizes","standardSizes","length","displayName","trialSizes","trial","useCreateKafkaCallbacks","createKafkaInstance","qsContext","onClickKafkaOverview","onClickQuickStart","onSuccess","onError","mutateAsync","onCancel","isModalOpen","onClickContactUs","onLearnHowToAddStreamingUnits","onLearnMoreAboutSizes","subscriptionOptionsHref","document","location","href","appendTo","getElementById","body","CreateDedicatedKafkaInstanceRoute","dedicatedQuotaQuery","dedicatedClustersQuery","dedicatedClusterSizesQuery","checkDedicatedQuota","remainingDedicatedQuota","fetchClusters","defaultCluster","getDedicatedSizes","cluster","clusterId","useCreateDedicatedKafkaCallbacks","createDedicatedKafkaInstance","useControlPlaneGate","enterpriseMatch","DeleteKafkaInstanceRoute","isDeleting","instanceName","ChangeOwnerRoute","accounts","updateInstance","onConfirm","newOwner","mutate","updates","savingState","isLoading","isError","error","type","currentOwner","map","a","ControlPlaneRoutes","Route","path","exact","useDedicatedGate","refetchInterval","ams","account","useApi","useQuery","queryKey","queryFn","apiAccountsMgmtV1CurrentAccountGet","args","organization","apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet","useStandardQuota","refetch","isSuccess","hasStandardQuota","isFetched","DedicatedClustersRoute","DedicatedClustersWithEntitlementRoute","DedicatedKafkaInstancesRoute","props","DedicatedKafkaInstancesWithEntitlementRoute","dedicatedClusters","hasReadyClusters","filter","c","DedicatedControlPlaneRoutes","Switch","DataPlaneRoutePath","root","DataPlaneTopicRoutePath","DataPlaneConsumerGroupRoutePath","DataPlaneTopicConsumerGroupRoutePath","DataPlanePermissionsRoutePath","useDataPlaneGate","DataPlaneHeaderConnected","url","dashboard","topics","consumer","permissions","settings","AclsRoute","managePermissionsHref","editPermissionsHref","dispatch","useDispatch","acls","adminUrl","serviceAccounts","userAccounts","userAccount","email","principalType","serviceAccountList","serviceAccount","allAccounts","onDeleteSelected","rowIndex","rowToDelete","groups","instanceId","acl","patternType","resource","permissionType","permission","principal","resourceName","operation","resourceType","_","message","addNotification","variant","title","dismissable","onManagePermissionsActionItem","onManagePermission","onManagePermissions","onPerPageChange","TopicsRoute","topicChips","topicName","getUrlFortopic","row","onEdit","onSearchTopic","onCreateTopic","onRemoveTopicChip","onRemoveTopicChips","onTopicLinkClick","SettingsRoute","onSubmitReAuthentication","reauthenticationEnabled","reauthentication_enabled","request","DashboardRoute","hasUserAlreadyClosedAlert","setHasUserAlreadyClosedAlert","onAlertClose","queryInstance","queryKpisMetrics","queryInstanceMetrics","queryTopicMetrics","queryTopics","getMetricsKpi","kpis","topicPartitionsLimit","maxPartitions","getKafkaInstanceMetrics","interval","duration","all","metrics","diskSpaceLimit","max_data_retention_size","bytes","connectionsLimit","connections","connectionRateLimit","connectionRate","getTopicsMetrics","selectedTopic","kafkaTopics","t","ConsumerGroupsRoute","instanceConsumerGroupsHref","groupId","consumerName","onDeletConsumerGroup","onViewPartition","onClickResetOffset","consumers","onSearchConsumer","onRemoveConsumerChip","onRemoveConsumerChips","onViewResetOffset","useTopicGate","topic","DataPlaneTopicHeaderConnected","instanceDetailsHref","instanceTopicsHref","tabsHref","messages","properties","schemas","instanceDetailHref","TopicConsumerGroupsRoute","TopicMessagesGroupsRoute","kafkaTopicMessagesFetchQuery","getMessages","partitions","TopicPropertiesRoute","deleteTopicHref","updateTopicHref","TopicSchemasRoute","chrome","processor2","entry","e","basename","srs","getToken","AuthContext","ConfigContext","apiBasePath","I18nProvider","lng","resources","en","common","srsTemporaryFixMe","debug","ScalprumComponent","appName","module","scope","ErrorComponent","processor","renderSchema","registry","version","registryId","useConsumerGroupGate","consumerGroup","consumerGroupId","ConsumerGroupDeleteRoute","onDeleteConsumer","state","ConsumerGroupResetOffsetRoute","onConfirmResetOffset","offset","customOffsetValue","Array","from","Set","onClickClose","ConsumerGroupViewPartitionRoute","viewPartitionConsumerGroupHref","consumerGroupByTopic","activeMembers","activeConsumers","partitionsWithLag","laggingPartitions","onSelectDeleteConsumerGroup","onSelectResetOffsetConsumerGroup","useTopicConsumerGroupGate","TopicConsumerGroupDeleteRoute","instanceTopicConsumerGroupsHref","TopicConsumerGroupResetOffsetRoute","TopicConsumerGroupViewPartitionRoute","viewTopicPartitionConsumerGroupHref","DeleteKafkaTopic","useTranslation","DeleteModal","confirmationValue","Trans","ns","i18nKey","components","values","TopicDeleteRoute","topicHref","TopicEditPropertiesRoute","EditPermissionsRoute","consumerGroups","consumerGroupsList","topicsList","updatePermissions","onSaveAcls","aclPermission","deletedPermissions","aclData","aclToDelete","existingAcls","aclsForSelectedAccount","selectedAccount","kafkaName","onSave","ManagePermissionsRoute","loggedInUser","setCurrentlyLoggedInUser","filteredAccounts","onNext","instanceTopicConsumerGroupHref","permissionsModalHref","DataPlaneRoutes","InvalidObject","DefaultServiceRedirect","gate","Loading","OverviewRoute","Routes","render","memo","updateDocumentTitle","on","register","notifications","unregister","event","console","dir","navId","basePath","getPath","QuickstartLoader","loaded","setLoaded","quickStarts","AssetsContext","showDrafts","onLoad","qs","set","init","errorDescriptionKey","middleware","useDedicatedClusterSizesFetchQuery","queryClient","api","fetchQuery","getEnterpriseClusterById","useDedicatedClustersFetchQuery","getEnterpriseOsdClusters","useDedicatedQuotaFetchQuery","skipCache","staleTime","Infinity","useConsumerGroup","suspense","getConsumerGroupById","enabled","Boolean","useConsumerGroups","getConsumerGroups","useDedicatedClusters","refetchOnWindowFocus","refetchOnReconnect","refetchOnMount","retry","kafkaRequestToKafkaInstanceEnhanched","developerPlanInstanceLimits","standardPlanInstanceLimits","enhancedInstance","billing","createdAt","created_at","Date","toISOString","egress","expiryDate","expires_at","ingress","messageSize","BigInt","billing_model","cloud_provider","size","accepted","preparing","provisioning","ready","failed","deprovision","deleting","storage","updatedAt","updated_at","cluster_id","bootstrapUrl","bootstrap_server_host","admin_api_server_url","marketplaceForBilling","ms","subscriptions","s","billing_cloud_account_id","marketplace","subscription","warn","thisInstanceLimits","instance_type","l","size_id","APIErrorCodes","useKafkaInstanceTransformer","getStandardQuotaQuery","useStandardQuotaFetchQuery","useProvidersWithRegionsFetchQuery","useProviderRegionSizesFetchQuery","JSON","stringify","standardQuota","standardPlanLimitsQuery","developerPlanLimitsQuery","standardPlanLimits","developerPlanLimits","useKafka","dataMapper","kafkasFleet","getKafkaById","useKafkas","clusterIds","getKafkas","res","forEach","i","setQueryData","useTopic","getTopic","useTopics","getTopics","useUserAccounts","getUserAccounts","listPrincipals","useAcls","getAcls","useServiceAccounts","getServiceAccounts","useDeveloperInstanceAvailabilityFetchQuery","fleetApi","clustersApi","clusterResponse","some","k","useKafkaFetchQuery","useKafkaKpisFetchQuery","getMetricsByInstantQuery","useKafkaMetricsFetchQuery","getMetricsByRangeQuery","useMessagesFetchQuery","records","consumeRecords","kms","getInstanceTypesByCloudProviderAndRegion","getCloudProviders","getCloudProviderRegions","useTopicsFetchQuery","useTopicsMetricsFetchQuery","useCreateDedicatedKafkaMutation","useMutation","kafkaRequest","sizeId","createKafka","isServiceApiError","response","DUPLICATE_INSTANCE_NAME","INTERNAL_CAPACITY_ERROR","INSUFFICIENT_QUOTA","invalidateQueries","UNAUTHORIZED_USER","TRIAL_USED","FAILED_TO_CHECK_QUOTA","OWNER_DOES_NOT_EXIST","useCreateKafkaMutation","code","useDeleteKafkaMutation","deleteKafkaById","useDeleteTopicMutation","deleteTopic","useUpdateKafkaMutation","updateKafkaById","getErrorCode","reason","AxiosError","useDeleteConsumerGroupMutation","deleteConsumerGroupById","useResetConsumerGroupMutation","resetConsumerGroupOffset","useDeletePermissionsMutation","deleteAcls","useUpdatePermissionsMutation","createAcl","KafkaInstancesSortableColumns","KafkaTopicsSortableColumns","Object","TopicOrderKey","KafkaConsumerGroupSortableColumns","ConsumerGroupOrderKey","ReactQueryDevtoolsProduction","lazy","then","d","default","ReactQueryDevtools","ApiContext","ApiProvider","showDevTools","client","Suspense","fallback","useApiConfiguration","consumerGroupTransformer","stateMapping","lag","memberId","partition","logEndOffset","unassignedPartitions","DEAD","EMPTY","STABLE","UNKNOWN","COMPLETING_REBALANCE","PREPARING_REBALANCE","fetchConsumerGroup","fetchConsumerGroups","items","total","dedicatedClusterTransformer","requiresPrivateNetwork","access_kafkas_via_private_network","az","multi_az","cloudProvider","cloudRegion","fetchDedicatedClusters","MissingDedicatedEntitlement","isStandardQuota","q","related_resources","r","isMarketplaceQuota","fetchDedicatedQuota","organizationId","quotaResponse","statusText","dedicatedQuotas","resource_name","product","dedicatedQuota","hasDedicatedQuota","allowed","consumed","apiSizeToComponentSize","isDisabled","apiSize","display_name","quota_consumed","ingress_throughput_per_sec","egress_throughput_per_sec","Math","round","total_max_connections","max_connection_attempts_per_sec","max_partitions","max_message_size","maturity_status","trialDurationHours","lifespan_seconds","fetchDedicatedClusterSizes","supported_instance_types","instance_types","flatMap","sizes","fetchKafkaKpis","topicPartitions","metric","fetchKafkaMetrics","safeMetrics","m","persistentvolumeclaim","usedDiskSpaceMetrics","connectionAttemptRateMetrics","clientConnectionsMetrics","addAggregatedValuesTo","timestamp","valuesToQuery","field","comparison","join","v","trim","uiColumnMapping","fetchKafkas","search","filtersToSearch","toString","rawInstances","fetchMessages","limit","headers","fetchOrganization","fetchProviderRegionSizes","instanceType","regions","regionInfo","availableSizes","capacity","available_sizes","bind","allProviders","fetchProviderRegions","firstProvider","defaultProvider","max_capacity_reached","fetchStandardQuota","standardQuotas","prepaidQuota","marketplaceQuotas","reduce","agg","unaggregatedSubscriptions","cloud_accounts","subscriptionMarketplaces","cloud_provider_id","cloud_account_id","developerDefaults","preallocate","standardDefaults","topicTransformerFactory","cm","fromEntries","config","configValueToMilliseconds","configValueToBytes","configValueToBoolean","configValueToNumber","defaultIfEmpty","defaultIfError","parseInt","parse","fetchTopic","fetchTopics","fetchTopicsMetrics","filteredMetrics","bytesIncoming","bytesOutgoing","bytesPerPartition","incomingMessageRate","addAggregatedTotalBytesTo","metricsTopics","fetchUserAccounts","fullObject","first_name","last_name","isOrgAdmin","is_org_admin","fetchPermissions","fetchServiceAccounts","masQueries","_root","entity","standardAvailable","subentity","dedicatedAvailable","developerAvailability","standardAvailability","dedicatedQueries","clusterSizes","kafkaQueries","list","details","topicMessages","kpi","providerQueries","limits","developer","accessToken","DefaultApi","Configuration","token","PrincipalApi","SecurityApi","AppServicesApi","TopicsApi","GroupsApi","AclsApi","RecordsApi","EnterpriseDataplaneClustersApi","REACT_QUERY_DEVTOOLS","METRICS_LAG_ALERT","isReactQueryDevToolsEanbled","localStorage","getItem","metricsIsLagAlertsDismissed","metricsDismissLagAlerts","setItem","CreatingStatuses","ReadyStatuses","DegradedStatuses","SuspendingStatuses","SuspendedStatuses","DeletingStatuses","ResumingStatuses","SimplifiedStatuses","creating","degraded","suspended","resuming","suspending","SelectOwner","isOpen","setIsOpen","selectOptions","filterRegExp","RegExp","test","SelectOption","description","Select","SelectVariant","onToggle","placeholderText","isCreatable","createText","menuAppendTo","maxHeight","selections","onSelect","onFilter","ChangeKafkaOwner","setAccount","submittedAccount","isSaving","onConfirmOwner","Modal","position","actions","Button","onClick","Form","onSubmit","preventDefault","Alert","AlertVariant","isInline","renderAlert","FormGroup","fieldId","label","Skeleton","width","ConsumerGroupPopover","Popover","headerContent","bodyContent","OutlinedQuestionCircleIcon","ConsumerGroupStateLabel","ConsumerGroupByKafka","columnNames","consumer_id","current_offset","log_end_offset","offset_lag","Stack","hasGutter","DescriptionList","columnModifier","lg","className","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","TableComposable","TableVariant","Thead","noWrap","Tr","Th","Tbody","Td","dataLabel","ConsumerGroupByTopic","ConsumerGroupDetails","ConsumerGroupEmptyState","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","CubesIcon","Title","headingLevel","TitleSizes","EmptyStateBody","OffsetSelect","onChange","offsetValueOption","absolute","latest","earliest","toggleAriaLabel","selection","entries","TopicSelect","index","ConsumerGroupResetOffset","disableFocusTrap","setSelectedTopic","selectedOffset","setSelectedOffset","setcustomOffsetValue","isResetAccepted","setIsResetAccepted","selectedConsumer","setSelectedConsumer","isDisconnected","consumerList","isResetOffsetDisabled","tableColumns","clientId","new_offset","areAllConsumerSelected","isConsumerSelected","onResetOffset","ModalVariant","showClose","StackItem","isHorizontal","TextInput","readOnlyVariant","select","_event","isSelecting","onSelectAllConsumer","isSelected","String","Checkbox","isChecked","DeleteConsumerGroup","isConsumerConnected","Text","ConsumerGroupDrawer","dropdownItems","DropdownItem","panelContent","DrawerPanelContent","widths","DrawerHead","TextContent","component","TextVariants","DrawerActions","Dropdown","KebabToggle","isPlain","DropdownPosition","DrawerCloseButton","DrawerPanelBody","Drawer","DrawerContent","DrawerContentBody","useKafkaLabels","statusesSimplified","aws","gcp","azure","providerRegions","useTopicLabels","useConsumerGroupLabels","Columns","ConsumerGroups","isFiltered","PageSection","isFilled","hasOverflowScroll","TableView","tableOuiaId","ariaLabel","renderHeader","column","info","popover","popoverProps","renderCell","renderActions","ActionsColumn","filters","onSearch","onRemoveChip","onRemoveGroup","validate","errorMessage","emptyStateNoData","emptyStateNoResults","EmptyStateNoResults","ControlPlaneHeader","PageSectionVariants","padding","hasShadowBottom","Level","LevelItem","Nav","NavList","NavItem","style","borderTop","ouiaId","isActive","Link","Divider","ExternalLink","testId","onProviderChange","selectedProvider","defaultRegion","StandardPlanMachine","capabilities","form","creationError","tsTypes","predictableActionArguments","schema","events","services","initial","states","verifyAvailability","always","cond","target","overQuota","tags","instanceUnavailable","regionsUnavailable","configuring","unsubmitted","submitted","create","invalid","valid","fieldInvalid","submit","saving","createSuccess","createError","saved","empty","nameChange","providerChange","regionChange","idle","disabled","waitingForQuota","loading","invoke","src","onDone","sizeChange","billingChange","prepaidOnly","singleSubscription","onlySubscriptions","selectSubscription","prepaidAndSubscriptions","prepaid","selectPrepaid","setInitialContext","availableProviders","setName","setProvider","setRegion","setSize","setSizes","smallestSize","b","resetCreationErrorMessage","_context","setCreationError","triggerSave","triggerSubmit","triggerBillingChange","setBillingToPrepaid","setBillingToSubscription","unsetSubscription","guards","isOverQuota","instanceAvailability","isInstanceUnavailable","isRegionsUnavailable","nameIsEmpty","nameIsValid","providerIsValid","selectedProviderInfo","regionIsValid","noProviderOrRegion","noSizes","emptySizes","sizeIsDisabled","billingRequiredButNotSelected","meta","hasTag","sizeIsOverQuota","availableQuota","didProviderChange","didRegionChange","didSizeChange","onlyPrepaid","matchesSelectedProviderOrRHMarketplaceAndHasQuota","hasPrepaidQuota","noSelectedProvider","TrialPlanMachine","trialUsed","trialUnavailable","isTrialUsed","isTrialUnavailable","noProviderAndRegion","CreateKafkaInstanceMachine","save","complete","setDeveloperAvailable","setDeveloperUnavailable","setDeveloperUsed","setStandardAvailable","setStandardOutOfQuota","setStandardUnavailable","setProviders","setProvidersOrRegionsUnavailable","setCapabilities","notifyCreateErrorToStandardPlan","notifyCreateErrorToTrialPlan","CreateKafkaInstanceContext","CreateKafkaInstanceProvider","service","useInterpret","checkStandardQuotaCb","checkDeveloperAvailabilityCb","fetchProvidersWithRegionsCb","getStandardSizesCb","getTrialSizesCb","withConfig","send","createInstance","standardPlan","withContext","getSizes","trialPlan","makeCreateKafkaInstanceMachine","devTools","BillingHelp","LogoAWS","URL","LogoAzure","LogoGCP","LogoRedhat","AWSLogo","alt","height","AzureLogo","GCPLogo","BillingTiles","hasPrepaid","isPrepaidOverQuota","isMarketplaceOverQuota","marketplaceQuota","onPrepaid","onSubscription","validated","marketplaces","rhm","Flex","role","md","flex","spaceItems","FlexItem","Tile","tiles","isStacked","HelperText","HelperTextItem","Gallery","GalleryItem","FormSelect","FormSelectOption","CloudProvidersTiles","screenreaderText","justifyContent","spacer","providerDisabled","grow","CloudRegionSelect","isSizeUnavailable","makeRegionOptions","toggleId","prevState","FieldAZ","options","validity","enabledZone","trigger","helperTextInvalid","ToggleGroup","Tooltip","content","ToggleGroupItem","text","buttonId","FieldBillingTiles","isValid","billingType","isRequired","FieldCloudProvider","FieldCloudRegion","allRegionsUnavailable","every","disableControl","someRegionsUnavailable","validation","placeholder","hasIcon","helperText","FieldInstanceName","autoFocus","FieldSizeHelperText","remainingQuota","isPreview","isUnavailable","FieldSizeHelperTextOverQuota","ButtonVariant","FieldSizeHelperTextTrial","FieldSize","isLoadingError","helperTextTrial","FormGroupWithPopover","labelHead","fieldLabel","labelBody","buttonAriaLabel","Grid","sm","GridItem","fontSize","valueIndex","findIndex","steps","helperTextOverQuota","Slider","max","showTicks","customSteps","FormAlerts","onClickContactUS","AlertGroup","InstanceInfo","isTrial","trialDurationInHours","streamingUnits","Card","isFlat","CardTitle","CardBody","isCompact","ClockIcon","color","isSmall","InstanceInfoSkeleton","ModalAlertsLoading","customIcon","Spinner","ModalAlertsStandardPlan","ModalAlertsDedicatedPlan","ModalAlertsSystemUnavailable","ModalAlertsTrialPlan","time","LoadingForm","alignItems","DisabledFieldInstanceName","DisabledFieldCloudProvider","DisabledFieldCloudRegion","DisabledFieldAZ","DisabledFieldSize","DedicatedPlanMachine","clusterUnavailable","clusterChange","setCluster","isClusterUnavailable","clusterIsValid","selectedCluster","availableClusters","noCluster","didClusterChange","CreateDedicatedKafkaInstanceMachine","setDedicatedAvailable","setDedicatedOutOfQuota","setDedicatedUnavailable","setClusters","setClustersUnavailable","notifyCreateErrorToDedicatedPlan","CreateDedicatedKafkaInstanceContext","CreateDedicatedKafkaInstanceProvider","checkDedicatedQuotaCb","fetchClustersCb","getDedicatedSizesCb","dedicatedPlan","makeCreateDedicatedKafkaInstanceMachine","useCreateKafkaInstance","useSelector","standardPlanMachine","trialPlanMachine","isSystemUnavailable","isStandardPlan","isTrialPlan","isSaved","done","useCreateDedicatedKafkaInstance","dedicatedPlanMachine","isAvailable","useStandardPlanMachine","setBillingSubscription","setBillingPrepaid","isBlocked","isFormInvalid","isNameTaken","isConfigurable","isLoadingSizes","isBillingSelectionRequired","isBillingSingleSubscription","isBillingSingleMarketplace","isBillingPrepaidAvailable","selectedSize","selectedBilling","isBillingPrepaidOverQuota","isBillingMarketplaceOverQuota","isFormEnabled","isNameInvalid","isNameEmpty","isNameError","isSizeDisabled","isSizeOverQuota","isSizeLoadingError","isSizeAvailable","isSizeError","isProviderError","isRegionError","isBillingError","useTrialPlanMachine","useDedicatedPlanMachine","isClusterError","StandardInstanceForm","formId","instanceInfoBilling","ConnectedFieldInstanceName","ConnectedFieldCloudProvider","ConnectedFieldCloudRegion","ConnectedFieldAZ","ConnectedFieldSize","ConnectedBillingTiles","mq","TrialInstanceForm","CreateKafkaInstance","ConnectedCreateKafkaInstance","FORM_ID","footer","OutlinedClockIcon","spinnerAriaValueText","DedicatedClusterTiles","hasSelectableInput","isSelectableRaised","isDisabledRaised","onSelectableInputChange","CardFooter","OkIcon","ErrorCircleOIcon","FieldDedicatedCluster","DedicatedInstanceForm","CreateDedicatedKafkaInstance","ConnectedCreateDedicatedKafkaInstance","KafkaInstanceActions","rowData","hackZIndex","customChild","DropdownGroup","tooltipProps","tooltip","pointerEvents","cursor","isSeparator","actionProps","zIndex","DataPlaneHeader","actionsProps","Breadcrumb","BreadcrumbItem","DataPlaneTopicHeader","EmptyStateNoDedicatedClusters","PlusCircleIcon","DedicatedClusters","toolbarBreakpoint","DeleteKafkaInstance","kafka","it","resolve","delete","DetailsTabAlert","hoursLeft","differenceInHours","now","FormatDate","date","format","KafkaDetailsTab","kafkaVersion","renderTextListItem","TextListItem","TextListItemVariants","contentName","TextList","TextListVariants","SuspendedConnection","ExclamationTriangleIcon","KafkaConnectionTabP2","isKafkaSuspended","isKafkaPending","externalServer","tokenEndPointUrl","linkToServiceAccount","linkToAccessTab","adminAPIUrl","kafkaFleetManagerUrl","showCreateServiceAccountModal","ClipboardCopy","textAriaLabel","isReadOnly","ExpandableSection","toggleContent","HelpIcon","Label","SampleCodeSnippet","expandableCode","codeBlockCode","codeSnippet","copied","setCopied","copyCode","CodeBlockAction","ClipboardCopyButton","textId","exitDelay","maxWidth","navigator","clipboard","writeText","catch","CodeBlock","CodeBlockCode","isDetached","contentId","ExpandableSectionToggle","javaConfigCodeBlock","kafkaBootstrapUrl","tokenEndpointUrl","pythonConfigCodeBlock","pythonConfigExpandabledBlock","quarkusConfigExpandableBlock","springBootConfigCodeBlock","KafkaSampleCode","clientSelect","setClientSelect","clientProvider","java","python","quarkus","springboot","client_type","KafkaInstanceDrawer","KafkaInstanceDrawerPanel","handleSelect","Tabs","activeKey","Tab","eventKey","TabTitleText","parseISO","getExternalServer","getAdminServerUrl","endsWith","StatusLabel","forwardRef","ref","showWarning","showError","withPopover","buttonVariant","Split","SplitItem","CheckCircleIcon","PopoverStatusOrder","KafkaToPopoverMapping","StatusProgressStepper","currentStatus","currentStep","getVariant","ProgressStepper","isVertical","ProgressStep","titleId","isCurrent","StatusPopoverContent","StatusPopover","initialOpen","reference","isVisible","setIsVisible","handleClickConnectionTabLink","handleClickSupportLink","shouldOpen","shouldClose","enableFlip","SuspendedPopover","alertSeverityVariant","headerIcon","KafkaInstanceStatus","warningAfterMinutes","errorAfterMinutes","popoverStatus","alert","setAlert","labelRef","checkCreatedAt","elapsed","differenceInMinutes","useInterval","EmptyStateNoDedicatedEntitlement","EmptyStateNoDedicatedInstances","EmptyStateNoInstances","SearchIcon","StandardColumns","DedicatedColumns","KafkaInstances","timeCreatedDate","instanceLinkEnable","isAriaDisabled","changeOwnerEnabled","deleteEnabled","openConnectionEnabled","onRowClick","isRowDeleted","isPrimary","DateTimePicker","timeSelected","setIsTimeSelected","InputGroup","DatePicker","formatInTimeZone","newDate","formatISO","TimePicker","hour","minute","__","setHours","setMinutes","FilterGroup","epoch","onOffsetChange","onTimestampChange","onEpochChange","onLatest","currentCategory","setCurrentCategory","ToolbarItem","DropdownToggle","DropdownSeparator","newOffset","Number","isInteger","LimitSelector","InputGroupText","hidden","idx","isSameMessage","m1","m2","beautifyUnknownValue","RetentionSizeUnits","RetentionTimeUnits","NoDataCell","columnLabel","MessageDetails","defaultTab","isResizable","minSize","MessageDetailsBody","messageKey","defaultActiveKey","isCode","random","NoDataEmptyState","onRefresh","NoResultsEmptyState","onReset","OffsetRange","min","PartitionSelector","handleChange","valueAsNum","allPartitions","fill","makeOptions","slice","hiddenOptionsCount","handleFilter","typeAheadAriaLabel","isInputValuePersisted","onClear","InputGroupTextVariant","UnknownValuePreview","truncateAt","shouldTruncate","substring","truncate","preview","truncated","stopPropagation","MessageBrowserMachine","selectedMessage","initialLoading","fetchSuccess","fetchFail","verifyMessages","noData","refresh","pristine","dirty","shouldSearch","setPartition","setEpoch","setTimestamp","setOffset","setLatest","setLimit","selectMessage","deselectMessage","refreshing","setMessages","offsetMin","offsetMax","lastUpdated","noMessages","selectedMessageNotAvailable","areFiltersChanged","columnWidths","KafkaMessageBrowser","useMachine","KafkaMessageBrowserConnected","isFirstLoad","matches","isNoData","isRefreshing","requiresSearch","filterOffset","filterEpoch","filterTimestamp","setDefaultTab","columnLabels","OuterScrollContainer","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","FilterIcon","breakpoint","ToolbarGroup","RefreshButton","alignment","InnerScrollContainer","ResponsiveTable","expectedLength","colIndex","keys","KafkaInstanceCapacityTable","firstStreamingUnit","secondStreamingUnit","table","MarketingPageHero","tagLine","description2","heroImage","heroImageSize","heroImageCanRepeat","heroImagePositionY","cta","MarketingPageSection","isWidthLimited","KafkaPageV3","CardHeader","CardHeaderMain","bold","alignSelf","xl","orientation","EmptyStateNoTopic","PrincipalType","unitsToBytes","BYTE","KIBIBYTE","MEBIBYTE","GIBIBYTE","TEBIBYTE","unitsToMilliSecond","MILLISECOND","SECOND","MINUTE","HOUR","DAY","formattedRetentionTime","days","unit","hours","minutes","seconds","millisecondsToTime","formattedRetentionSize","bytesToMemorySize","tebibytes","gibibytes","mebibytes","kibibytes","KafkaTopics","DurationOptions","createEmptyManageAccessAcl","PermissionsDropdown","onAddPermission","onShortcutConsumeTopic","onShortcutProduceTopic","onShortcutManageAccess","menuRef","handleMenuKeys","contains","handleClickOutside","window","addEventListener","removeEventListener","onToggleClick","open","ev","setTimeout","firstElement","querySelector","focus","menu","Menu","itemId","MenuContent","MenuList","MenuGroup","MenuItem","splitButtonItems","DropdownToggleAction","splitButtonVariant","Popper","popper","popperMatchesTriggerWidth","labelColor","DisplayResourceName","PatternType","ResourceCell","PermissionOperationCell","ALLOW","DENY","operations","ALL","READ","WRITE","CREATE","DELETE","ALTER","DESCRIBE","DESCRIBE_CONFIGS","ALTER_CONFIGS","LabelGroup","numLabels","isArray","PrincipalCell","isDeleteEnabled","isAllAccounts","onRemoveAcl","isReviewTable","ServiceAccount","tabIndex","split","InfoCircleIcon","RemoveButton","PermissionsTableEmptyState","openManagePermissions","PermissionsTable","checkedRows","setCheckedRows","kebabActions","onCheck","isRowChecked","SelectAccount","isDirty","setIsDirty","setSelectedAccount","useLayoutEffect","noServiceAccounts","isNoResultsOption","noUserAccounts","filterValue","toLowerCase","serviceAccountOptions","localeCompare","userAccountOperations","UserAccount","SelectGroup","ValidatedOptions","onEscapePress","labelIcon","noVerticalAlign","newState","isGrouped","onCreateOption","ResourceName","onChangeValue","resourcePrefixRule","onFetchOptions","setIsNameValid","AsyncTypeaheadSelect","required","onValidationCheck","validationMessage","resourcePreixCondition","regExp","validationCheck","ResourceOperation","resourceTypeOptions","ResourcePermission","resourcePermissionOptions","allow","deny","ResourcePrefixRule","resourcePrefixRuleOptions","Is","ResourceType","ShortcutsTableHead","KafkaInstanceManualPermissions","resourceOperation","resourcePermission","onChangeResourceOperation","onChangeResourcePermission","onChangeResourceType","AssignPermissionsManual","resourcePrefix","onChangeResourcePrefix","onChangeResource","onFetchResourceNameOptions","multipleShorctutPermissions","ProduceTopicRow","prefixRuleValue","resourceNameValue","onChangeResourceName","isConsumeTopicShortcut","borderBottom","colSpan","ConsumeTopicShortcut","onChangeConsumerResourceName","topicPrefixRuleValue","topicResourceNameValue","consumerPrefixRuleValue","consumerResourceNameValue","onChangeConsumerResourcePrefixRule","onChangeTopicResourceName","onChangeTopicResourcePrefixRule","onFetchConsumerResourceNameOptions","onFetchTopicResourceNameOptions","ManageAccessShortcut","ProduceTopicShortcut","AssignPermissions","topicNameOptions","consumerGroupNameOptions","onAddManualPermissions","onAddProduceTopicShortcut","onConsumeTopicShortcut","onManageAccessShortcut","addedAcls","setAddedAcls","aclTemplate","resourceValues","consumerResourcePrefixRule","topicResourcePrefixRule","consumerResourceName","topicResourceName","ActionList","ActionListItem","paddingTop","PreCancelModal","closeModal","resumeEditing","titleIconVariant","ReviewPermissionsTable","selectedAccountId","ViewAccountDetails","accountId","transformResourceType","AclResourceType","transformResourceOperation","EditPermissions","escapeClosesModal","isExpandedExistingPermissionSection","setIsExpandedExistingPermissionSection","isAclDeleted","setIsAclDeleted","isExpandedAssignPermissionsSection","setIsExpandedAssignPermissionsSection","isNameValid","canSave","setCanSave","setSubmitted","isOpenPreCancelModal","setIsOpenPreCancelModal","setExistingAcls","newAcls","setNewAcls","deletedAcls","setDeletedAcls","checkValidation","aclsToSave","accountDisplayName","isAclValid","transformAclData","selectedAccountName","transformPermissions","isIndented","Badge","isRead","updateExistingAcls","toggleText","EmptyStateInitialLoading","EmptyStateMetricsUnavailable","TachometerAltIcon","MetricsLayout","metricsLagAlert","topicsKpi","topicPartitionsKpi","consumerGroupKpi","diskSpaceMetrics","topicMetrics","CardBodyLoading","Bullseye","isSVG","timeIntervalsMapping","Last5minutes","ticks","showDate","Last15minutes","Last30minutes","Last1hour","Last3hours","Last6hours","Last12hours","Last24hours","Last2days","Last7days","chartHeight","chartPadding","bottom","left","right","top","ChartSkeletonLoader","useChartWidth","containerRef","setWidth","handleResize","clientWidth","formatBytes","units","shouldShowDate","timeDuration","dateToChartValue","fromUnixTime","timestampsToTicks","timestamps","allTimestamps","mostRecentTs","sub","getTime","ChartLinearWithOptionalLimit","chartName","xLabel","yLabel","usageLimit","formatValue","emptyState","itemsPerRow","lineLabel","limitLabel","legendData","symbol","chart_color_black_500","chart_color_blue_300","areaColor","softLimitColor","chartData","area","softLimit","x","y","tickValues","getChartData","hasMetrics","Chart","ariaTitle","containerComponent","ChartVoronoiContainer","datum","constrainToVisibleArea","legendPosition","legendComponent","ChartLegend","themeColor","ChartTheme","legendAllowWrap","ChartAxis","C","tickFormat","dependentAxis","ChartGroup","ChartArea","ChartThreshold","stroke","colors","chart_color_cyan_300","ChartLogSizePerPartition","dataMap","ChartPopover","ChartTotalBytes","incomingTopicsData","outgoingTopicsData","incomingTopic","outgoingTopic","incomingTopicName","outgoingTopicName","incomingLine","metricsToLine","line","outgoingLine","chart_color_green_300","getBytesChartData","tickCount","ChartLine","EmptyStateNoMetricsData","EmptyStateNoMetricsDataForSelection","EmptyStateNoTopics","WrenchIcon","EmptyStateNoTopicSelected","DurationOptionsMap","FilterByTime","keyText","disableToolbar","onDurationChange","isTimeSelectOpen","setIsTimeSelectOpen","ariaId","mapping","timeOptions","FilterByTopic","topicList","onSetSelectedTopic","isTopicSelectOpen","setIsTopicSelectOpen","selectKey","setSelectKey","allTopicsLabel","topicOptions","textInput","filteredTopics","indexOf","hasInlineFilter","ToolbarRefresh","ToolbarTopicsMetrics","onSetTimeDuration","CardTopicsMetrics","backendUnavailable","isInitialLoading","isJustCreated","onSelectedTopic","noTopics","selectedTopicNotInList","chartEmptyState","TotalBytesTitle","IncomingMessageRate","PartitionSizeTitle","ToolbarKafkaInstanceMetric","CardKafkaInstanceMetrics","usedDiskMetrics","ChartTitle","CardKpi","isFullHeight","shape","MetricsLagAlert","isClosed","actionClose","AlertActionCloseButton","PartitionCard","ExclamationCircleIcon","isExpandable","apiState","failure","after","KafkaInstanceMetricsMachine","fetchFailures","callApi","criticalFail","justCreated","withResponse","selectDuration","setFetchTimestamp","setMetrics","incrementRetries","resetRetries","setDuration","canRetryFetching","TopicsMetricsMachine","selectTopic","setTopic","MetricsKpiMachine","KafkaInstanceMetricsContext","KafkaInstanceMetricsProvider","callback","results","MetricsKpiContext","MetricsKpiProvider","TopicsMetricsContext","TopicsMetricsProvider","useKafkaInstanceMetrics","isFailed","useTopicsMetrics","onTopicChange","Metrics","ConnectedMetrics","kafkaInstanceMetrics","topicsMetrics","metricsKpi","useMetricsKpi","ConnectedKafkaInstanceMetrics","ConnectedTopicsMetrics","Settings","connectionStatus","setConnectionStatus","setIsModalOpen","handleReAuthentication","reAuthValue","reauthentication","flexWrap","checked","retentionTimeSelectOptions","isPlaceholder","retentionSizeSelectOptions","btnAriaLabel","fieldValue","popoverBody","popoverHeader","displayText","Cleanup","defaultFileDeleteDelay","defaultLogSegmentSize","defaultSegmentJitterTime","defaultSegmentTime","FormSection","titleElement","gibibyte","milliseconds","CustomRetentionMessage","topicData","NumberInput","onMinus","onPlus","CustomRetentionSize","CoreConfiguration","isCreate","setTopicData","invalidText","setInvalidText","setTopicValidated","topicValidated","availablePartitionLimit","validateName","legalNameChars","retentionSizeUnit","setRetentionSizeUnit","retentionTimeUnit","setRetentionTimeUnit","isRetentionTimeSelectOpen","setIsRetentionTimeSelectOpen","isRetentionSizeSelectOpen","setIsRetentionSizeSelectOpen","handleRetentionMessageSize","handleRetentionMessageTime","retentionTimeInput","retentionSizeInput","inputName","plusBtnProps","minusBtnProps","Radio","Flush","defaultFlushIntervalMessages","defaultFlushIntervalTime","Log","defaultDeleteRetentionTime","defaultMinCleanbleRatio","defaultMinimumCompactionLagTime","cleanupPolicyOptions","DropdownWithToggle","onSelectOption","isLabelAndValueNotSame","Message","defaultMaximumMessageBytes","defaultMessageTimestampType","defaultMaxMessageTimestampDiff","Replication","TopicAdvanceIndex","defaultIndexIntervalSize","defaultSegmentIndexSize","TopicAdvanceJumpLinks","canHaveDelete","SidebarPanel","JumpLinks","scrollableSelector","JumpLinksItem","handleCancel","checkTopicName","actionText","setIsLoading","warning","setWarning","Sidebar","SidebarContent","PageGroup","ActionGroup","finally","EditTopicProperties","TopicProperties","showUnlimited"],"sourceRoot":""}