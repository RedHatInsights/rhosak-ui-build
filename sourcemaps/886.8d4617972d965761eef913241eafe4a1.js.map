{"version":3,"file":"js/886.1673014125164.8abf77540aabae2df72d.js","mappings":"yeAYMA,EAAQ,eAAK,EACsC,IACvDC,WAgCF,SA9BiB,IAAAC,OAAK,WACZ,IAAAC,GAAS,SAAW,KAW5B,OATA,IAAAC,kBAAgB,WACd,IAAMC,EAAKC,SAASC,cAClB,8BAEEF,IACFA,EAAGG,MAAgB,SAAI,OAE3B,GAAG,KAGD,SAAC,KAAQ,GAACR,MAAOA,GAAK,WACpB,UAAC,KAAW,GACVS,YAAaN,EAAKO,SAClBC,SAAU,kCACVC,gBAAiB,KAAI,YAErB,SAAC,gBAAM,GAACC,UAAU,QAAYC,OAAOC,SAASC,WAAS,WACrD,SAAC,KAAY,GAACC,IAAK,MAAI,WACrB,SAAC,IAAG,WAGR,SAAC,IAAgB,UAIzB,G","sources":["webpack:///./src/AppEntry.tsx"],"sourcesContent":["import { getBaseName } from \"@redhat-cloud-services/frontend-components-utilities/helpers\";\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { ApiProvider } from \"consoledot-api\";\nimport { memo, useLayoutEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport logger from \"redux-logger\";\nimport { I18nProvider } from \"ui\";\nimport App from \"./App\";\nimport { QuickstartLoader } from \"./QuickstartLoader\";\nimport { init } from \"./store\";\n\nconst store = init(\n  ...(process.env.NODE_ENV !== \"production\" ? [logger] : [])\n).getStore();\n\nconst AppEntry = memo(() => {\n  const { auth } = useChrome();\n\n  useLayoutEffect(() => {\n    const el = document.querySelector<HTMLDivElement>(\n      \".chr-scope__default-layout\"\n    );\n    if (el) {\n      el.style[\"overflow\"] = \"auto\";\n    }\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <ApiProvider\n        accessToken={auth.getToken}\n        basePath={process.env.API_URL}\n        refetchInterval={5000}\n      >\n        <Router basename={getBaseName(window.location.pathname)}>\n          <I18nProvider lng={\"en\"}>\n            <App />\n          </I18nProvider>\n        </Router>\n        <QuickstartLoader />\n      </ApiProvider>\n    </Provider>\n  );\n});\n\nexport default AppEntry;\n"],"names":["store","getStore","memo","auth","useLayoutEffect","el","document","querySelector","style","accessToken","getToken","basePath","refetchInterval","basename","window","location","pathname","lng"],"sourceRoot":""}