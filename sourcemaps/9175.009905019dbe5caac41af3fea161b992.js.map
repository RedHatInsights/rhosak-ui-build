{"version":3,"file":"js/9175.bd7dc7a8b07d1d6dd412.js","mappings":"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","sources":["webpack:///./src/routes/control-plane/routesConsts.ts","webpack:///./src/routes/control-plane/DrawerProvider.tsx","webpack:///./src/routes/RedirectOnGateError.tsx","webpack:///./src/useUserControlGate.tsx","webpack:///./src/routes/control-plane/routes/KafkaInstancesRoute.tsx","webpack:///./src/routes/control-plane/routes/CreateKafkaInstanceRoute.tsx","webpack:///./src/routes/control-plane/routes/useCreateKafkaCallbacks.ts","webpack:///./src/routes/control-plane/routes/useSelfTermsReviewGate.tsx","webpack:///./src/routes/control-plane/useControlPlaneGate.tsx","webpack:///./src/routes/control-plane/routes/DeleteKafkaInstanceRoute.tsx","webpack:///./src/routes/control-plane/routes/TermsAndConditionsRoute.tsx","webpack:///./src/routes/control-plane/routes/ChangeOwnerRoute.tsx","webpack:///./src/routes/control-plane/ControlPlaneRoutes.tsx","webpack:///./src/routes/data-plane/routesConsts.ts","webpack:///./src/routes/data-plane/useDataPlaneGate.tsx","webpack:///./src/routes/data-plane/routes/DataPlaneHeaderConnected.tsx","webpack:///./src/routes/data-plane/routes/PermissionsRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicsRoute.tsx","webpack:///./src/routes/data-plane/routes/SettingsRoute.tsx","webpack:///./src/routes/data-plane/routes/DashboardRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupsRoute.tsx","webpack:///./src/routes/data-plane/useTopicGate.tsx","webpack:///./src/routes/data-plane/routes/DataPlaneTopicHeaderConnected.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupsRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicMessagesRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicPropertiesRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicSchemasRoute.tsx","webpack:///./src/routes/data-plane/useConsumerGroupGate.tsx","webpack:///./src/useAlerts.ts","webpack:///./src/routes/data-plane/routes/ConsumerGroupDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupResetOffsetRoute.tsx","webpack:///./src/routes/data-plane/routes/ConsumerGroupViewPartitionRoute.tsx","webpack:///./src/routes/data-plane/useTopicConsumerGroupGate.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupResetOffsetRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicConsumerGroupViewPartitionRoute.tsx","webpack:///../../packages/ui/src/components/DeleteKafkaTopic/DeleteKafkaTopic.tsx","webpack:///./src/routes/data-plane/routes/TopicDeleteRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicEditPropertiesRoute.tsx","webpack:///./src/routes/data-plane/routes/PermissionsEditRoute.tsx","webpack:///./src/routes/data-plane/routes/PermissionsSelectAccountRoute.tsx","webpack:///./src/routes/data-plane/routes/TopicCreateRoute.tsx","webpack:///./src/routes/data-plane/DataPlaneRoutes.tsx","webpack:///./src/routes/overview/OverviewRoute.tsx","webpack:///./src/routes/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/QuickstartLoader.tsx","webpack:///./src/store/index.ts","webpack:///../../packages/consoledot-api/src/transformers/ConsumerGroupTransformer.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaKpis.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkaMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/valuesToQuery.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchKafkas.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchProviderRegionSizes.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchProvidersWithRegions.ts","webpack:///../../packages/consoledot-api/src/utilsAndConstants.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchStandardQuota.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopicsMetrics.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchUserAccounts.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchSelfTermsReview.ts","webpack:///../../packages/consoledot-api/src/ApiProvider.tsx","webpack:///../../packages/consoledot-api/src/queryKeys.ts","webpack:///../../packages/consoledot-api/src/useApi.ts","webpack:///../../packages/consoledot-api/src/queries/useConsumerGroups.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchConsumerGroups.ts","webpack:///../../packages/consoledot-api/src/transformers/kafkaRequestToKafkaInstanceEnhanched.ts","webpack:///../../packages/consoledot-api/src/queries/useCreateInstance.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkaInstanceTransformer.ts","webpack:///../../packages/consoledot-api/src/queries/useKafka.ts","webpack:///../../packages/consoledot-api/src/queries/useKafkas.ts","webpack:///../../packages/consoledot-api/src/queries/useTopic.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchTopic.ts","webpack:///../../packages/consoledot-api/src/queries/useTopics.ts","webpack:///../../packages/consoledot-api/src/queries/useUserAccounts.ts","webpack:///../../packages/consoledot-api/src/queries/useConsumerGroup.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchConsumerGroup.ts","webpack:///../../packages/consoledot-api/src/queries/useAcls.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchPermissions.ts","webpack:///../../packages/consoledot-api/src/queries/useServiceAccounts.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchServiceAccounts.ts","webpack:///../../packages/consoledot-api/src/queries/useUser.ts","webpack:///../../packages/consoledot-api/src/queries/useSSOProvider.ts","webpack:///../../packages/consoledot-api/src/queries/useSelfTermsReview.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useDeveloperInstanceAvailabilityFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaKpisFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useKafkaMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useTopicsMetricsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useTopicsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useMessagesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchMessages.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useProviderRegionSizesFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useProvidersWithRegionsFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchQueries/useStandardQuotaFetchQuery.ts","webpack:///../../packages/consoledot-api/src/fetchers/fetchOrganization.ts","webpack:///../../packages/consoledot-api/src/mutations/useCreateKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteTopicMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdateKafkaMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeleteConsumerGroupMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useResetConsumerGroupMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useDeletePermissionsMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdatePermissionsMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useCreateTopicMutation.ts","webpack:///../../packages/consoledot-api/src/mutations/useUpdateTopicMutation.ts","webpack:///../../packages/consoledot-api/src/types.ts","webpack:///../../packages/consoledot-api/src/transformers/topicTransformer.ts","webpack:///../../packages/local-storage-helpers/index.ts","webpack:///../../packages/ui-models/src/models/kafka.ts","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupPopover.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupState.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupByKafka.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupByTopic.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupDetails.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupEmptyState.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/OffsetSelect.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/TopicSelect.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupResetOffset.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/DeleteConsumerGroup.tsx","webpack:///../../packages/ui/src/components/ConsumerGroups/components/ConsumerGroupDrawer.tsx","webpack:///../../packages/ui/src/hooks/useKafkaLabels.ts","webpack:///../../packages/ui/src/hooks/useTopicLabels.ts","webpack:///../../packages/ui/src/hooks/useConsumerGroupLabels.ts","webpack:///../../packages/ui/src/components/ConsumerGroups/ConsumerGroups.tsx","webpack:///../../packages/ui/src/components/ControlPlaneHeader.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/shared.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/StandardPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/TrialPlanMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateKafkaInstanceMachine.ts","webpack:///../../packages/ui/src/components/CreateKafkaInstance/machines/CreateKafkaInstanceProvider.tsx","webpack:///../../packages/ui/src/components/Logos/images.ts","webpack:///../../packages/ui/src/components/Logos/AWSLogo.tsx","webpack:///../../packages/ui/src/components/Logos/AzureLogo.tsx","webpack:///../../packages/ui/src/components/Logos/GCPLogo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/BillingTiles.tsx","webpack:///../../packages/ui/src/components/Logos/RedhatLogo.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/components/CloudProviderTiles.tsx","webpack:///../../packages/ui/src/components/CreateKafkaInstance/StandardInstanceForm.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceActions.tsx","webpack:///../../packages/ui/src/components/DataPlaneHeader.tsx","webpack:///../../packages/ui/src/components/DataPlaneTopicHeader.tsx","webpack:///../../packages/ui/src/components/DeleteKafKaInstance/DeleteKafkaInstance.tsx","webpack:///../../packages/ui/src/components/I18nProvider.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/DetailsTabAlert.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaDetailsTab.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/SuspendedConnection.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaConnectionTabP2.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/SampleCodeSnippet.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/CodeSnippets.ts","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/components/KafkaSampleCode.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceDrawer/KafkaInstanceDrawer.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusLabel.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/types.ts","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusProgressStepper.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusPopoverContent.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/StatusPopover.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/components/SuspendedPopover.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceStatus/KafkaInstanceStatus.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoInstances.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/components/EmptyStateNoResults.tsx","webpack:///../../packages/ui/src/components/KafkaInstances/KafkaInstances.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/DateTimePicker.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/FilterGroup.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/LimitSelector.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/utils.ts","webpack:///../../packages/ui/src/components/KafkaTopics/types.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoDataCell.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/MessageDetails.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoDataEmptyState.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/NoResultsEmptyState.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/OffsetRange.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/PartitionSelector.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/components/UnknownValuePreview.tsx","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/MessageBrowserMachine.ts","webpack:///../../packages/ui/src/components/KafkaMessageBrowser/KafkaMessageBrowser.tsx","webpack:///../../packages/ui/src/components/KafkaInstanceCapacityTable.tsx","webpack:///../../packages/ui/src/components/MarketingPage.tsx","webpack:///../../packages/ui/src/components/KafkaPageV3.tsx","webpack:///../../packages/ui/src/components/KafkaTopics/components/EmptyStateNoTopic.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/types.ts","webpack:///../../packages/ui/src/components/KafkaTopics/KafkaTopics.tsx","webpack:///../../packages/ui/src/components/Metrics/types.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PermissionsDropdown.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceTypeLabel.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/Cells.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/EmptyPermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/SelectAccount.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceName.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceOperation.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourcePermission.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourcePrefixRule.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ResourceType.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ShortcutsTableHead.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/KafkaInstanceManualPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/AssignPermissionsManual.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ProduceTopicRow.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ConsumeTopicShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ManageAccessShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ProduceTopicShortcut.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/AssignPermissions.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/PreCancelModal.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ReviewPermissionsTable.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/ViewAccountDetails.tsx","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/utils.ts","webpack:///../../packages/ui/src/components/ManageKafkaPermissions/components/EditPermissions.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateInitialLoading.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateMetricsUnavailable.tsx","webpack:///../../packages/ui/src/components/Metrics/components/MetricsLayout.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardBodyLoading.tsx","webpack:///../../packages/ui/src/components/Metrics/consts.ts","webpack:///../../packages/ui/src/components/Metrics/components/ChartSkeletonLoader.tsx","webpack:///../../packages/ui/src/components/Metrics/components/useChartWidth.tsx","webpack:///../../packages/ui/src/components/Metrics/components/utils.ts","webpack:///../../packages/ui/src/components/Metrics/components/ChartLinearWithOptionalLimit.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartLogSizePerPartition.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartPopover.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartTotalBytes.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoMetricsData.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoMetricsDataForSelection.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoTopics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/EmptyStateNoTopicSelected.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByPartition.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTime.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByTopic.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarRefresh.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/FilterByBroker.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ToolbarKafkaInstanceMetric.tsx","webpack:///../../packages/ui/src/components/Metrics/components/BrokerToggle.tsx","webpack:///../../packages/ui/src/components/Metrics/components/ChartPartitionLogSizePerBroker.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardUsedDiskSpaceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardKafkaInstanceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/CardKpi.tsx","webpack:///../../packages/ui/src/components/Metrics/machines/KafkaInstanceMetricsMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/TopicsMetricsMachine.ts","webpack:///../../packages/ui/src/components/Metrics/machines/MetricsKpiMachine.ts","webpack:///../../packages/ui/src/components/Metrics/KafkaInstanceMetricsProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/MetricsKpiProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/TopicsMetricsProvider.tsx","webpack:///../../packages/ui/src/components/Metrics/useKafkaInstanceMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/useTopicsMetrics.tsx","webpack:///../../packages/ui/src/components/Metrics/components/PartitionCard.tsx","webpack:///../../packages/ui/src/components/Metrics/components/MetricsLagAlert.tsx","webpack:///../../packages/ui/src/components/Metrics/Metrics.tsx","webpack:///../../packages/ui/src/components/Metrics/useMetricsKpi.tsx","webpack:///../../packages/ui/src/components/Settings/Settings.tsx","webpack:///../../packages/ui/src/components/Topic/components/types.ts","webpack:///../../packages/ui/src/components/Topic/components/CreateTopicHead.tsx","webpack:///../../packages/ui/src/components/Topic/components/PartitionLimitWarning.tsx","webpack:///../../packages/ui/src/components/Topic/components/retentionTimeTransformer.ts","webpack:///../../packages/ui/src/components/Topic/components/TextWithLabelPopover.tsx","webpack:///../../packages/ui/src/components/Topic/components/Cleanup.tsx","webpack:///../../packages/ui/src/components/Topic/components/CustomRetentionMessage.tsx","webpack:///../../packages/ui/src/components/Topic/components/CustomRetentionSize.tsx","webpack:///../../packages/ui/src/components/Topic/components/useValidateTopic.ts","webpack:///../../packages/ui/src/components/Topic/components/CoreConfiguration.tsx","webpack:///../../packages/ui/src/components/Topic/components/Flush.tsx","webpack:///../../packages/ui/src/components/Topic/components/Log.tsx","webpack:///../../packages/ui/src/components/Topic/components/Message.tsx","webpack:///../../packages/ui/src/components/Topic/components/Replication.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvanceIndex.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvanceJumpLinks.tsx","webpack:///../../packages/ui/src/components/Topic/components/TopicAdvancePage.tsx","webpack:///../../packages/ui/src/components/Topic/components/retentionSizeTransformer.tsx","webpack:///../../packages/ui/src/components/Topic/components/CreateTopicWizard.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepMessageRetention.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepPartitions.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepReplicas.tsx","webpack:///../../packages/ui/src/components/Topic/components/StepTopicName.tsx","webpack:///../../packages/ui/src/components/Topic/components/WizardCustomFooter.tsx","webpack:///../../packages/ui/src/components/Topic/CreateTopic/CreateTopic.tsx","webpack:///../../packages/ui/src/components/Topic/EditTopicProperties/EditTopicProperties.tsx","webpack:///../../packages/ui/src/components/Topic/TopicProperties/TopicProperties.tsx","webpack:///../../packages/ui/src/components/ChangeKafkaOwner/SelectOwner.tsx","webpack:///../../packages/ui/src/components/ChangeKafkaOwner/ChangeKafkaOwner.tsx","webpack:///../../packages/ui/src/components/TermsAndConditionsDialog/TermsAndConditionsDialog.tsx"],"sourcesContent":["export const ControlPlaneRouteRoot = \"/kafkas\" as const;\nconst NewInstanceSegment = \"create\";\nconst TermsAndConditionsSegment = \"terms-and-conditions\";\nexport const ControlPlaneSpecialSegments = [\n  NewInstanceSegment,\n  TermsAndConditionsSegment,\n];\n\nexport const ControlPlaneRoutePath =\n  `${ControlPlaneRouteRoot}/:id?/:section(delete|change-owner)?` as const;\nexport const ControlPlaneNewInstancePath = `${ControlPlaneRouteRoot}/${NewInstanceSegment}`;\nexport const ControlPlaneTermsAndConditionsPath = `${ControlPlaneRouteRoot}/${TermsAndConditionsSegment}`;\nexport const ControlPlaneDeleteInstancePath = `${ControlPlaneRouteRoot}/:id/delete`;\nexport const ControlPlaneChangeOwnerPath = `${ControlPlaneRouteRoot}/:id/change-owner`;\nexport type ControlPlaneRouteParams = {\n  id?: string;\n  section?: \"delete\" | \"change-owner\";\n};\n\nexport type ControlPlaneNavigationProps = {\n  instancesHref: string;\n};\n","import { useKafka, useSSOProvider } from \"consoledot-api\";\nimport type { FunctionComponent, MutableRefObject } from \"react\";\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { KafkaInstanceDrawerTab } from \"ui\";\nimport { KafkaInstanceDrawer } from \"ui\";\nimport type { ControlPlaneRouteParams } from \"./routesConsts\";\nimport {\n  ControlPlaneRoutePath,\n  ControlPlaneSpecialSegments,\n} from \"./routesConsts\";\n\ntype DrawerContextProps = {\n  selectedInstance: string | undefined;\n  activeTab: KafkaInstanceDrawerTab;\n  setActiveTab: (tab: KafkaInstanceDrawerTab) => void;\n  isExpanded: boolean;\n  toggleExpanded: (newState?: boolean) => void;\n  onClose: MutableRefObject<(() => void) | undefined>;\n};\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst DrawerContext = createContext<DrawerContextProps>(null!);\n\nexport const DrawerProvider: FunctionComponent = ({ children }) => {\n  const match = useRouteMatch<ControlPlaneRouteParams>(ControlPlaneRoutePath);\n  if (!match) {\n    throw Error(\"DrawerProvider used outside the expected route\");\n  }\n  const selectedInstance =\n    (match.params.id &&\n      ControlPlaneSpecialSegments.includes(match.params.id)) ||\n    match.params.section !== undefined\n      ? undefined\n      : match.params.id;\n  const { data: instance } = useKafka(selectedInstance);\n  const [isExpanded, setIsExpanded] = useState(\n    selectedInstance !== undefined && match.isExact\n  );\n  const [activeTab, setActiveTab] = useState<KafkaInstanceDrawerTab>(\"details\");\n  const onClose = useRef<() => void | undefined>();\n\n  const { data: tokenEndPointUrl } = useSSOProvider();\n\n  const toggleExpanded = useCallback((newValue: boolean | undefined) => {\n    setIsExpanded((prev) => {\n      const isExpanded = newValue !== undefined ? newValue : !prev;\n      if (isExpanded === false && onClose.current) {\n        onClose.current();\n      }\n      return isExpanded;\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!instance) {\n      setIsExpanded(false);\n    }\n  }, [instance]);\n\n  const value = useMemo(() => {\n    const shouldBeExpanded = selectedInstance !== undefined && isExpanded;\n\n    return {\n      selectedInstance,\n      activeTab,\n      setActiveTab,\n      isExpanded: shouldBeExpanded,\n      toggleExpanded,\n      onClose,\n    };\n  }, [activeTab, isExpanded, selectedInstance, toggleExpanded]);\n\n  return (\n    <DrawerContext.Provider value={value}>\n      <KafkaInstanceDrawer\n        instance={instance}\n        activeTab={activeTab}\n        onTabChange={setActiveTab}\n        isExpanded={isExpanded}\n        onClose={() => toggleExpanded(false)}\n        tokenEndpointUrl={tokenEndPointUrl}\n      >\n        {children}\n      </KafkaInstanceDrawer>\n    </DrawerContext.Provider>\n  );\n};\n\nexport function useDrawer(onClose?: () => void) {\n  const context = useContext(DrawerContext);\n  context.onClose.current = onClose;\n  return context;\n}\n","import { useQueryErrorResetBoundary } from \"consoledot-api\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useEffect } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { Redirect, useLocation } from \"react-router-dom\";\n\nexport const RedirectOnGateError: FunctionComponent<{\n  redirectUrl: string;\n}> = ({ children, redirectUrl }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const { key } = useLocation();\n\n  return (\n    <ErrorBoundary\n      resetKeys={[key]}\n      fallbackRender={() => <RedirectAndResetError redirectUrl={redirectUrl} />}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n};\n\nconst RedirectAndResetError: VoidFunctionComponent<{ redirectUrl: string }> = ({\n  redirectUrl,\n}) => {\n  const { reset } = useQueryErrorResetBoundary();\n  useEffect(() => reset, [reset]);\n  return <Redirect to={redirectUrl} />;\n};\n","import { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { useUser } from \"consoledot-api\";\nimport { useCallback } from \"react\";\n\nexport function useUserControlGate() {\n  const { auth } = useChrome();\n  const getUser = useCallback(async ()=> {\n    const user = await auth.getUser();\n    const username = user?.identity?.user?.username;\n    const isOrgAdmin = user?.identity?.user?.is_org_admin;\n    return {\n      username,\n      isOrgAdmin,\n    }\n  }, [auth]);\n  const { data: userData } = useUser({ getUser, suspense: true });\n  return { userData: userData as NonNullable<typeof userData> };\n}\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport { KafkaInstancesSortableColumns, useKafkas } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { KafkaInstanceDrawerTab, KafkaInstancesProps } from \"ui\";\nimport { ControlPlaneHeader, KafkaInstances, useKafkaLabels } from \"ui\";\nimport type { Kafka, SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport { useDrawer } from \"../DrawerProvider\";\nimport {\n  ControlPlaneNewInstancePath,\n  ControlPlaneRouteRoot,\n} from \"../routesConsts\";\nimport { useUserControlGate } from \"../../../useUserControlGate\";\n\nexport type KafkaInstancesRoute = Pick<\n  KafkaInstancesProps<Kafka>,\n  \"getUrlForInstance\"\n>;\n\nexport const KafkaInstancesRoute: FunctionComponent<KafkaInstancesRoute> = ({\n  getUrlForInstance,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveQuickStart } = useContext(QuickStartContext);\n\n  const { selectedInstance, toggleExpanded, setActiveTab, isExpanded } =\n    useDrawer(\n      useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(`${ControlPlaneRouteRoot}`);\n      }, [history])\n    );\n\n  const { userData } = useUserControlGate();\n\n  const labels = useKafkaLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const namesChips = useURLSearchParamsChips(\"names\", resetPaginationQuery);\n  const ownersChips = useURLSearchParamsChips(\"owners\", resetPaginationQuery);\n  const statusesChips = useURLSearchParamsChips<SimplifiedStatus>(\n    \"statuses\",\n    resetPaginationQuery\n  );\n\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaInstancesSortableColumns,\n    labels.fields,\n    \"createdAt\",\n    \"desc\"\n  );\n\n  const { data } = useKafkas({\n    page,\n    perPage,\n    name: namesChips.chips,\n    owner: ownersChips.chips,\n    status: statusesChips.chips,\n    sort: sort || \"createdAt\",\n    direction: sortDirection,\n  });\n\n  const onClearAllFilters = useCallback(() => {\n    namesChips.clearChained(\n      ownersChips.clearChained(\n        statusesChips.clearChained(setPaginationQuery(1, perPage))\n      ),\n      true\n    );\n  }, [namesChips, ownersChips, perPage, setPaginationQuery, statusesChips]);\n\n  const openDrawer = useCallback(\n    (id: string, tab: KafkaInstanceDrawerTab) => {\n      if (selectedInstance === id && isExpanded) {\n        toggleExpanded(false);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(`${ControlPlaneRouteRoot}/${id}`);\n        toggleExpanded(true);\n        setActiveTab(tab);\n      }\n    },\n    [history, isExpanded, selectedInstance, setActiveTab, toggleExpanded]\n  );\n\n  const onDetailsClick: KafkaInstancesProps[\"onDetails\"] = useCallback(\n    (instance) => {\n      openDrawer(instance.id, \"details\");\n    },\n    [openDrawer]\n  );\n\n  const onConnectionsClick: KafkaInstancesProps[\"onDetails\"] = useCallback(\n    (instance) => {\n      openDrawer(instance.id, \"connections\");\n    },\n    [openDrawer]\n  );\n\n  const onCreate = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${ControlPlaneNewInstancePath}`);\n  }, [history]);\n\n  const onDelete = useCallback<KafkaInstancesProps[\"onDelete\"]>(\n    ({ id }) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(`${ControlPlaneRouteRoot}/${id}/delete`);\n    },\n    [history]\n  );\n  const onChangeOwner = useCallback<KafkaInstancesProps[\"onChangeOwner\"]>(\n    ({ id }) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(`${ControlPlaneRouteRoot}/${id}/change-owner`);\n    },\n    [history]\n  );\n\n  const onQuickstartGuide = useCallback(\n    () => setActiveQuickStart && setActiveQuickStart(\"getting-started\"),\n    [setActiveQuickStart]\n  );\n\n  return (\n    <>\n      <ControlPlaneHeader />\n      <KafkaInstances\n        instances={data?.instances}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        names={namesChips.chips}\n        owners={ownersChips.chips}\n        statuses={statusesChips.chips}\n        isColumnSortable={isColumnSortable}\n        onPageChange={setPagination}\n        onSearchName={namesChips.add}\n        onRemoveNameChip={namesChips.remove}\n        onRemoveNameChips={namesChips.clear}\n        onSearchOwner={ownersChips.add}\n        onRemoveOwnerChip={ownersChips.remove}\n        onRemoveOwnerChips={ownersChips.clear}\n        onSearchStatus={statusesChips.toggle}\n        onRemoveStatusChip={statusesChips.remove}\n        onRemoveStatusChips={statusesChips.clear}\n        onClearAllFilters={onClearAllFilters}\n        onChangeOwner={onChangeOwner}\n        onDelete={onDelete}\n        onCreate={onCreate}\n        isRowSelected={({ row }) => row.id === selectedInstance}\n        getUrlForInstance={getUrlForInstance}\n        onDetails={onDetailsClick}\n        onConnection={onConnectionsClick}\n        onClickConnectionTabLink={() => {\n          /* TODO */\n        }}\n        onClickSupportLink={() => {\n          /* TODO */\n        }}\n        onInstanceLinkClick={() => {\n          /* TODO */\n        }}\n        onQuickstartGuide={onQuickstartGuide}\n        canHaveInstanceLink={({ status }) => ReadyStatuses.includes(status)}\n        canOpenConnection={(row) => userData.canOpenConnection(row)}\n        canChangeOwner={({ owner, status }) =>\n          userData.canChangeOwner(owner, status)\n        }\n        canDelete={({ owner }) => userData.isUserOwnerOrAdmin(owner)}\n      />\n    </>\n  );\n};\n","import { QuickStartContext } from \"@patternfly/quickstarts\";\nimport type { CreateKafkaInstanceServices } from \"@rhoas/app-services-ui-components\";\nimport { CreateKafkaInstance } from \"@rhoas/app-services-ui-components\";\nimport { useCreateKafkaMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { ControlPlaneRouteRoot } from \"../routesConsts\";\nimport { useCreateKafkaCallbacks } from \"./useCreateKafkaCallbacks\";\nimport { useSelfTermsReviewGate } from \"./useSelfTermsReviewGate\";\n\nexport const CreateKafkaInstanceRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const callbacks = useCreateKafkaCallbacks();\n  const createKafkaInstance = useCreateKafkaMutation();\n  const qsContext = useContext(QuickStartContext);\n  useSelfTermsReviewGate();\n\n  const onClickKafkaOverview = () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`/overview`);\n  };\n\n  const onClickQuickStart = useCallback(() => {\n    qsContext.setActiveQuickStart &&\n      qsContext.setActiveQuickStart(\"getting-started\");\n  }, [qsContext]);\n\n  const onCreate = useCallback<CreateKafkaInstanceServices[\"onCreate\"]>(\n    function (instance, onSuccess, onError) {\n      const onOnSuccess = () => {\n        onSuccess();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.push(ControlPlaneRouteRoot);\n      };\n      void createKafkaInstance.mutateAsync({\n        instance,\n        onSuccess: onOnSuccess,\n        onError,\n      });\n    },\n    [createKafkaInstance, history]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  return (\n    <CreateKafkaInstance\n      {...callbacks}\n      isModalOpen={true}\n      onCancel={onCancel}\n      onClickContactUs={onClickKafkaOverview}\n      onClickKafkaOverview={onClickKafkaOverview}\n      onClickQuickStart={onClickQuickStart}\n      onCreate={onCreate}\n      onLearnHowToAddStreamingUnits={onClickKafkaOverview}\n      onLearnMoreAboutSizes={onClickKafkaOverview}\n      subscriptionOptionsHref={document.location.href + \"/../overview\"}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport {\n  useDeveloperInstanceAvailabilityFetchQuery,\n  useProviderRegionSizesFetchQuery,\n  useProvidersWithRegionsFetchQuery,\n  useStandardQuotaFetchQuery,\n} from \"consoledot-api\";\nimport { useCallback } from \"react\";\nimport type { CreateKafkaInstanceProps, StandardSizes } from \"ui\";\n\nexport function useCreateKafkaCallbacks() {\n  const { auth } = useChrome();\n\n  const getUsername = useCallback(async () => {\n    const username = (await auth.getUser())?.identity.user?.username;\n    if (!username) {\n      return Promise.reject(\"Invalid user\");\n    }\n    return username;\n  }, [auth]);\n\n  const checkDeveloperAvailabilityQuery =\n    useDeveloperInstanceAvailabilityFetchQuery();\n\n  const standardQuotaQuery = useStandardQuotaFetchQuery(true);\n  const providersWithRegionsQuery = useProvidersWithRegionsFetchQuery();\n  const getProvidersInfo = useProvidersWithRegionsFetchQuery();\n  const getProviderRegionsSizes = useProviderRegionSizesFetchQuery();\n\n  const checkDeveloperAvailability = useCallback<\n    CreateKafkaInstanceProps[\"checkDeveloperAvailability\"]\n  >(\n    async ({ onAvailable, onUsed, onUnavailable }) => {\n      try {\n        const available = await checkDeveloperAvailabilityQuery(getUsername);\n\n        if (available) {\n          onAvailable();\n        } else {\n          onUsed();\n        }\n      } catch {\n        onUnavailable();\n      }\n    },\n    [checkDeveloperAvailabilityQuery, getUsername]\n  );\n\n  const checkStandardQuota = useCallback<\n    CreateKafkaInstanceProps[\"checkStandardQuota\"]\n  >(\n    async ({ onQuotaAvailable, onNoQuotaAvailable, onOutOfQuota }) => {\n      try {\n        const {\n          hasTrialQuota,\n          remainingPrepaidQuota,\n          remainingMarketplaceQuota,\n          marketplaceSubscriptions,\n        } = await standardQuotaQuery();\n\n        if (\n          remainingMarketplaceQuota !== undefined ||\n          remainingPrepaidQuota !== undefined\n        ) {\n          if (\n            (remainingMarketplaceQuota || 0) === 0 &&\n            (remainingPrepaidQuota || 0) === 0\n          ) {\n            onOutOfQuota({\n              quota: {\n                marketplaceSubscriptions,\n              },\n            });\n          } else {\n            onQuotaAvailable({\n              quota: {\n                remainingPrepaidQuota,\n                remainingMarketplaceQuota,\n                marketplaceSubscriptions,\n              },\n            });\n          }\n        } else {\n          onNoQuotaAvailable({ hasTrialQuota });\n        }\n      } catch (e) {\n        onNoQuotaAvailable({ hasTrialQuota: false });\n      }\n    },\n    [standardQuotaQuery]\n  );\n\n  const fetchProvidersWithRegions = useCallback<\n    CreateKafkaInstanceProps[\"fetchProvidersWithRegions\"]\n  >(\n    async (plan, { onAvailable, onUnavailable }) => {\n      try {\n        const providers = await providersWithRegionsQuery(plan);\n        onAvailable(providers);\n      } catch {\n        onUnavailable();\n      }\n    },\n    [providersWithRegionsQuery]\n  );\n\n  const getStandardSizes = useCallback<\n    CreateKafkaInstanceProps[\"getStandardSizes\"]\n  >(\n    async (provider, region) => {\n      const providersInfo = await getProvidersInfo(\"standard\");\n      const providerInfo = providersInfo.providers.find(\n        (p) => p.id === provider\n      );\n      if (!providerInfo) {\n        return Promise.reject(\"Invalid cloud provider\");\n      }\n      return getProviderRegionsSizes(providerInfo, region, \"standard\");\n    },\n    [getProviderRegionsSizes, getProvidersInfo]\n  );\n\n  const getTrialSizes = useCallback<CreateKafkaInstanceProps[\"getTrialSizes\"]>(\n    async (provider, region) => {\n      let standardSizes: StandardSizes;\n\n      try {\n        standardSizes = await getStandardSizes(provider, region);\n        if (standardSizes.length === 0) {\n          throw new Error(\"No standard sizes found\");\n        }\n      } catch {\n        // It can happen that the selected provider doesn't support standard instances.\n        // In this case we provide a faux sample list of sizes just to make the slider happy.\n        standardSizes = [\n          { id: \"1\", displayName: \"1\", quota: 1 },\n          { id: \"2\", displayName: \"2\", quota: 2 },\n        ] as StandardSizes;\n      }\n      const providersInfo = await getProvidersInfo(\"developer\");\n      const providerInfo = providersInfo.providers.find(\n        (p) => p.id === provider\n      );\n      if (!providerInfo) {\n        return Promise.reject(\"Invalid cloud provider\");\n      }\n      const trialSizes = await getProviderRegionsSizes(\n        providerInfo,\n        region,\n        \"developer\"\n      );\n      return {\n        standard: standardSizes,\n        trial: trialSizes[0],\n      };\n    },\n    [getProviderRegionsSizes, getProvidersInfo, getStandardSizes]\n  );\n  return {\n    checkDeveloperAvailability,\n    checkStandardQuota,\n    fetchProvidersWithRegions,\n    getStandardSizes,\n    getTrialSizes,\n  };\n}\n","import { useSelfTermsReview } from \"consoledot-api\";\n\nexport function useSelfTermsReviewGate() {\n  const { data } = useSelfTermsReview(true);\n  const selfTermsReview = data as NonNullable<typeof data>;\n  if (selfTermsReview.areTermsAccepted === false) {\n    throw new Error(\"Terms and Conditions not accepted\");\n  }\n  return {\n    selfTermsReview,\n  };\n}\n","import { useKafka } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { ControlPlaneRouteParams } from \"./routesConsts\";\nimport { ControlPlaneRoutePath } from \"./routesConsts\";\n\nexport function useControlPlaneGate() {\n  const match = useRouteMatch<ControlPlaneRouteParams>(ControlPlaneRoutePath);\n  if (!match) {\n    throw Error(\"useControlPlaneGate used outside the expected route\");\n  }\n  const { data: instance } = useKafka(match.params.id, true);\n  return { instance: instance as NonNullable<typeof instance>, match };\n}\n","import { useDeleteKafkaMutation } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteKafkaInstance } from \"ui\";\nimport { ReadyStatuses } from \"ui-models/src/models/kafka\";\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { useControlPlaneGate } from \"../useControlPlaneGate\";\n\nexport const DeleteKafkaInstanceRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useControlPlaneGate();\n  const { mutateAsync, isLoading: isDeleting } = useDeleteKafkaMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      id: instance.id,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instancesHref);\n      },\n    });\n  }, [mutateAsync, history, instance?.id, instancesHref]);\n\n  return (\n    <DeleteKafkaInstance\n      isModalOpen={true}\n      isDeleting={isDeleting}\n      onCancel={onCancel}\n      onDelete={onDelete}\n      instanceName={\n        ReadyStatuses.includes(instance.status) ? instance.name : undefined\n      }\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useSelfTermsReview } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { TermsAndConditionsDialog } from \"ui\";\n\nexport const TermsAndConditionsRoute: FunctionComponent<{\n  createHref: string;\n  cancelHref: string;\n}> = ({ createHref, cancelHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { data: selfTermsReview } = useSelfTermsReview();\n  const baselinedCreateHref =\n    window.location.origin +\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n    (history.createHref({\n      pathname: createHref,\n    }) as string);\n  const baselinedCancelHref =\n    window.location.origin +\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n    (history.createHref({\n      pathname: cancelHref,\n    }) as string);\n  const termsUrl = selfTermsReview?.termsUrl(\n    baselinedCreateHref,\n    baselinedCancelHref\n  );\n  const onViewTerms = useCallback(\n    function () {\n      if (termsUrl !== undefined) {\n        window.location.href = termsUrl;\n      }\n    },\n    [termsUrl]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(cancelHref);\n  }, [history, cancelHref]);\n\n  return (\n    <TermsAndConditionsDialog\n      isOpen={true}\n      onViewTerms={onViewTerms}\n      onCancel={onCancel}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useUpdateKafkaMutation, useUserAccounts } from \"consoledot-api\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { ChangeKafkaOwnerProps } from \"ui\";\nimport { ChangeKafkaOwner } from \"ui\";\n\nimport type { ControlPlaneNavigationProps } from \"../routesConsts\";\nimport { useControlPlaneGate } from \"../useControlPlaneGate\";\n\nexport const ChangeOwnerRoute: FunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useControlPlaneGate();\n  const { data: accounts } = useUserAccounts({});\n  const updateInstance = useUpdateKafkaMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instancesHref);\n  }, [history, instancesHref]);\n\n  const onConfirm = useCallback(\n    (newOwner: string) => {\n      updateInstance.mutate(\n        {\n          id: instance.id,\n          updates: { owner: newOwner },\n        },\n        {\n          onSuccess: () => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            history.replace(instancesHref);\n          },\n        }\n      );\n    },\n    [history, instance.id, instancesHref, updateInstance]\n  );\n\n  const savingState = ((): ChangeKafkaOwnerProps[\"savingState\"] => {\n    if (updateInstance.isLoading) return \"saving\";\n    if (updateInstance.isError) {\n      return updateInstance.error.type === \"invalid-user\"\n        ? \"invalid-user\"\n        : \"unknown-error\";\n    }\n    return \"idle\";\n  })();\n\n  return (\n    <ChangeKafkaOwner\n      currentOwner={instance.owner}\n      accounts={accounts?.accounts.map((a) => ({\n        id: a.username,\n        displayName: a.displayName,\n      }))}\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n      savingState={savingState}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Suspense } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  CreateKafkaInstanceRoute,\n  DeleteKafkaInstanceRoute,\n  KafkaInstancesRoute,\n  TermsAndConditionsRoute,\n} from \"./routes\";\nimport { ChangeOwnerRoute } from \"./routes/ChangeOwnerRoute\";\nimport {\n  ControlPlaneChangeOwnerPath,\n  ControlPlaneDeleteInstancePath,\n  ControlPlaneNewInstancePath,\n  ControlPlaneRoutePath,\n  ControlPlaneRouteRoot,\n  ControlPlaneTermsAndConditionsPath,\n} from \"./routesConsts\";\n\nexport const ControlPlaneRoutes: VoidFunctionComponent = () => {\n  return (\n    <Route path={ControlPlaneRoutePath} exact>\n      <Route path={ControlPlaneTermsAndConditionsPath}>\n        <TermsAndConditionsRoute\n          createHref={ControlPlaneNewInstancePath}\n          cancelHref={ControlPlaneRouteRoot}\n        />\n      </Route>\n      <RedirectOnGateError redirectUrl={ControlPlaneTermsAndConditionsPath}>\n        <Suspense fallback={null}>\n          <Route path={ControlPlaneNewInstancePath}>\n            <CreateKafkaInstanceRoute instancesHref={ControlPlaneRouteRoot} />\n          </Route>\n        </Suspense>\n      </RedirectOnGateError>\n      <RedirectOnGateError redirectUrl={ControlPlaneRouteRoot}>\n        <Route path={ControlPlaneDeleteInstancePath}>\n          <DeleteKafkaInstanceRoute instancesHref={ControlPlaneRouteRoot} />\n        </Route>\n        <Route path={ControlPlaneChangeOwnerPath}>\n          <ChangeOwnerRoute instancesHref={ControlPlaneRouteRoot} />\n        </Route>\n      </RedirectOnGateError>\n      <KafkaInstancesRoute\n        getUrlForInstance={(instance) => `/kafkas/${instance.id}/details`}\n      />\n    </Route>\n  );\n};\n","import type { ControlPlaneNavigationProps } from \"../control-plane/routesConsts\";\nimport { ControlPlaneRouteRoot } from \"../control-plane/routesConsts\";\n\nexport const DataPlaneRoutePath =\n  `${ControlPlaneRouteRoot}/:id/details` as const;\nexport type DataPlaneRouteParams = { id: string };\nexport type DataPlaneTopicRouteParams = { id: string; topicName: string };\nexport type DataPlaneConsumerGroupRouteParams = {\n  id: string;\n  consumerGroupId: string;\n};\n\nexport type DataPlaneTopicConsumerRouteParams = {\n  id: string;\n  topicName: string;\n  consumerGroupId: string;\n};\nexport const DataPlaneTopicRoutePath =\n  `${ControlPlaneRouteRoot}/:id/details/topics/:topicName` as const;\n\nexport const DataPlaneConsumerGroupRoutePath =\n  `${ControlPlaneRouteRoot}/:id/details/consumer-groups/:consumerGroupId` as const;\n\nexport type DataPlanePermissionsRouteParams = {\n  selectedAccount: string;\n};\n\nexport const DataPlaneTopicConsumerGroupRoutePath =\n  `${ControlPlaneRouteRoot}/:id/details/topics/:topicName/consumer-groups/:consumerGroupId` as const;\n\nexport const DataPlanePermissionsRoutePath =\n  `${ControlPlaneRouteRoot}/:id/details/acls/select-account/:selectedAccount` as const;\n\nexport type DataPlaneNavigationProps = {\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneTopicNavigationProps = {\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n  topicHref: (instanceId: string, topicName: string) => string;\n  deleteTopicHref: (instanceId: string, topicName: string) => string;\n  updateTopicHref: (instanceId: string, topicName: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneConsumerGroupNavigationsProps = {\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceConsumerGroupsHref: (instanceId: string) => string;\n  viewPartitionConsumerGroupHref: (\n    instanceId: string,\n    consumerGroupId: string\n  ) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlaneTopicConsumerGroupNavigationsProps = {\n  instanceTopicConsumerGroupsHref: (\n    instanceId: string,\n    topicName: string\n  ) => string;\n  viewTopicPartitionConsumerGroupHref: (\n    instanceId: string,\n    consumerGroupId: string,\n    topicName: string\n  ) => string;\n  instanceDetailsHref: (instanceId: string) => string;\n  instanceTopicsHref: (instanceId: string) => string;\n} & ControlPlaneNavigationProps;\n\nexport type DataPlanePermissionsNavigationProps = {\n  managePermissionsHref: (instanceId: string) => string;\n  editPermissionsHref: (instanceId: string, selectedAccount: string) => string;\n} & ControlPlaneNavigationProps;\n","import { useKafka } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { DataPlaneRouteParams } from \"./routesConsts\";\nimport { DataPlaneRoutePath } from \"./routesConsts\";\n\nexport function useDataPlaneGate() {\n  const match = useRouteMatch<DataPlaneRouteParams>(DataPlaneRoutePath);\n  if (!match) {\n    throw Error(\"useDataPlaneGate used outside the expected route\");\n  }\n  const { data: instance } = useKafka(match.params.id, true);\n  return { instance: instance as NonNullable<typeof instance>, match };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlaneHeaderProps } from \"ui\";\nimport { DataPlaneHeader } from \"ui\";\nimport { useDrawer } from \"../../control-plane\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { useUserControlGate } from \"../../../useUserControlGate\";\n\nexport const DataPlaneHeaderConnected: VoidFunctionComponent<\n  ControlPlaneNavigationProps & Pick<DataPlaneHeaderProps, \"activeSection\">\n> = ({ instancesHref, activeSection }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveTab, toggleExpanded } = useDrawer();\n\n  const { userData } = useUserControlGate();\n\n  const {\n    instance,\n    match: { url },\n  } = useDataPlaneGate();\n\n  const sectionsHref = {\n    dashboard: `${url}/dashboard`,\n    topics: `${url}/topics`,\n    consumer: `${url}/consumer-groups`,\n    permissions: `${url}/acls`,\n    settings: `${url}/settings`,\n  };\n\n  const onDelete = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/delete`);\n  }, [history, instance, instancesHref]);\n\n  const onChangeOwner = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/change-owner`);\n  }, [history, instance, instancesHref]);\n\n  return (\n    <DataPlaneHeader\n      instancesHref={instancesHref}\n      instanceName={instance?.name || \"\"}\n      activeSection={activeSection}\n      sectionsHref={sectionsHref}\n      onDetails={() => {\n        setActiveTab(\"details\");\n        toggleExpanded(true);\n      }}\n      onConnection={() => {\n        setActiveTab(\"connections\");\n        toggleExpanded(true);\n      }}\n      canOpenConnection={userData.canOpenConnection(instance)}\n      canChangeOwner={userData.canChangeOwner(instance.owner, instance.status)}\n      canDelete={userData.isUserOwnerOrAdmin(instance.owner)}\n      onChangeOwner={onChangeOwner}\n      onDelete={onDelete}\n    />\n  );\n};\n","import { usePaginationSearchParams } from \"@rhoas/app-services-ui-components\";\nimport { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { Account } from \"ui\";\nimport { PrincipalType } from \"ui\";\nimport { PermissionsTable } from \"ui\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport {\n  useAcls,\n  useDeletePermissionsMutation,\n  useServiceAccounts,\n  useUserAccounts,\n} from \"consoledot-api\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlanePermissionsNavigationProps } from \"../routesConsts\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { useDispatch } from \"react-redux\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\n\nexport const PermissionsRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ instancesHref, managePermissionsHref, editPermissionsHref }) => {\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const { instance } = useDataPlaneGate();\n  const { mutateAsync } = useDeletePermissionsMutation();\n  const dispatch = useDispatch();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { data: acls } = useAcls({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    page,\n    perPage,\n  });\n\n  const { data: accounts } = useUserAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: serviceAccounts } = useServiceAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const userAccounts: Account[] | undefined = accounts?.accounts.map(\n    (userAccount) => {\n      return {\n        id: userAccount.username,\n        displayName: userAccount.displayName,\n        email: userAccount.email,\n        principalType: PrincipalType.UserAccount,\n      };\n    }\n  );\n\n  const serviceAccountList: Account[] | undefined =\n    serviceAccounts?.serviceAccounts.map((serviceAccount) => {\n      return {\n        id: serviceAccount.id,\n        displayName: serviceAccount.displayName,\n        principalType: PrincipalType.ServiceAccount,\n      };\n    });\n\n  const allAccounts =\n    serviceAccountList != undefined && userAccounts != undefined\n      ? [...serviceAccountList, ...userAccounts]\n      : undefined;\n\n  const onDeleteSelected = useCallback(\n    (rowIndex: number[]) => {\n      rowIndex.map((value) => {\n        const rowToDelete = acls?.groups[value];\n        void mutateAsync({\n          instanceId: instance.id,\n          adminUrl: instance.adminUrl || \"\",\n          acl: {\n            patternType: rowToDelete?.resource.patternType,\n            permissionType: rowToDelete?.permission.permission,\n            principal: rowToDelete?.account,\n            resourceName: rowToDelete?.resource.resourceName,\n            operation: rowToDelete?.permission.operation,\n            resourceType: rowToDelete?.resource.resourceType,\n          },\n          onError: (_, message) => {\n            dispatch(\n              addNotification({\n                variant: \"danger\",\n                title: message,\n                dismissable: true,\n                id: \"delete-error\",\n              })\n            );\n          },\n          onSuccess: () => {\n            //We have no action yet to confirm if delete was successfull.\n          },\n        });\n      });\n    },\n    [acls?.groups, mutateAsync, instance.id, instance.adminUrl, dispatch]\n  );\n\n  const onDelete = useCallback(\n    (rowIndex: number) => {\n      const rowToDelete = acls?.groups[rowIndex];\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl || \"\",\n        acl: {\n          patternType: rowToDelete?.resource.patternType,\n          permissionType: rowToDelete?.permission.permission,\n          principal: rowToDelete?.account,\n          resourceName: rowToDelete?.resource.resourceName,\n          operation: rowToDelete?.permission.operation,\n          resourceType: rowToDelete?.resource.resourceType,\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"delete-error\",\n            })\n          );\n        },\n        onSuccess: () => {\n          // No action\n        },\n      });\n    },\n    [acls?.groups, mutateAsync, instance.id, instance.adminUrl, dispatch]\n  );\n\n  const onManagePermissionsActionItem = useCallback(\n    (account: string) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(editPermissionsHref(instance.id, account));\n    },\n    [history, instance.id, editPermissionsHref]\n  );\n  const onManagePermission = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"permissions\"}\n      />\n\n      <PermissionsTable\n        allAccounts={allAccounts}\n        permissions={acls?.groups}\n        onDelete={onDelete}\n        onDeleteSelected={onDeleteSelected}\n        onManagePermissions={onManagePermission}\n        onPerPageChange={setPaginationQuery}\n        itemCount={acls?.count}\n        page={page}\n        perPage={perPage}\n        onPageChange={setPagination}\n        onManagePermissionsActionItem={onManagePermissionsActionItem}\n      />\n    </>\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport { KafkaTopicsSortableColumns, useTopics } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { KafkaTopics, useTopicLabels } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { ControlPlaneRouteRoot } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const TopicsRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const labels = useTopicLabels();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance } = useDataPlaneGate();\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const onCreate = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${ControlPlaneRouteRoot}/${instance.id}/details/topics/create-topic`\n    );\n  }, [history, instance.id]);\n\n  const topicChips = useURLSearchParamsChips(\"topic\", resetPaginationQuery);\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaTopicsSortableColumns,\n    labels.fields\n  );\n  const { data } = useTopics({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    filter: topicChips.chips[0],\n    plan: instance.plan,\n  });\n\n  const onDeleteTopic = useCallback(\n    (topicName: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topicName}/delete`\n      );\n    },\n    [history, instance.id]\n  );\n\n  const onEditTopic = useCallback(\n    (topicName: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topicName}/edit`\n      );\n    },\n    [history, instance.id]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"topics\"}\n      />\n      <KafkaTopics\n        topics={data?.topics}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        topicName={topicChips.chips}\n        getUrlFortopic={(row) => `./topics/${row.name}`}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeleteTopic(row.name)}\n        onEdit={(row) => onEditTopic(row.name)}\n        onSearchTopic={(value) => {\n          topicChips.clear();\n          topicChips.toggle(value);\n        }}\n        onClearAllFilters={topicChips.clear}\n        onCreateTopic={onCreate}\n        onPageChange={setPagination}\n        onRemoveTopicChip={topicChips.clear}\n        onRemoveTopicChips={topicChips.clear}\n      />\n    </>\n  );\n};\n","import { useUpdateKafkaMutation } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { SettingsProps } from \"ui\";\nimport { Settings as SettingsComp } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const SettingsRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const { instance } = useDataPlaneGate();\n  const updateInstance = useUpdateKafkaMutation();\n\n  const onSubmitReAuthentication = useCallback<\n    SettingsProps[\"onSubmitReAuthentication\"]\n  >(\n    async (reauthenticationEnabled) => {\n      try {\n        await updateInstance.mutateAsync({\n          id: instance.id,\n          updates: { reauthentication_enabled: reauthenticationEnabled },\n        });\n        return reauthenticationEnabled;\n      } catch {\n        return instance.request.reauthentication_enabled;\n      }\n    },\n    [instance, updateInstance]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"settings\"}\n      />\n      <SettingsComp\n        onSubmitReAuthentication={onSubmitReAuthentication}\n        reauthenticationEnabled={instance.request.reauthentication_enabled}\n      />\n    </>\n  );\n};\n","import {\n  useKafkaFetchQuery,\n  useKafkaKpisFetchQuery,\n  useKafkaMetricsFetchQuery,\n  useTopicsFetchQuery,\n  useTopicsMetricsFetchQuery,\n} from \"consoledot-api\";\nimport {\n  metricsDismissLagAlerts,\n  metricsIsLagAlertsDismissed,\n} from \"local-storage-helpers\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport type { MetricsProps } from \"ui\";\nimport { Metrics } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\n\nexport const DashboardRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const {\n    instance,\n    match: { params },\n  } = useDataPlaneGate();\n  const [hasUserAlreadyClosedAlert, setHasUserAlreadyClosedAlert] = useState(\n    metricsIsLagAlertsDismissed()\n  );\n\n  const onAlertClose = useCallback(() => {\n    setHasUserAlreadyClosedAlert(true);\n    metricsDismissLagAlerts();\n  }, []);\n\n  const queryInstance = useKafkaFetchQuery();\n  const queryKpisMetrics = useKafkaKpisFetchQuery();\n  const queryInstanceMetrics = useKafkaMetricsFetchQuery();\n  const queryTopicMetrics = useTopicsMetricsFetchQuery();\n  const queryTopics = useTopicsFetchQuery();\n\n  const getMetricsKpi: MetricsProps[\"getMetricsKpi\"] = useCallback(async () => {\n    const kpis = await queryKpisMetrics(params.id);\n    return {\n      ...kpis,\n      topicPartitionsLimit: instance.maxPartitions || 0,\n    };\n  }, [instance, params.id, queryKpisMetrics]);\n\n  const getKafkaInstanceMetrics: MetricsProps[\"getKafkaInstanceMetrics\"] =\n    useCallback(\n      async ({ interval, duration, selectedBroker }) => {\n        const [instance, metrics] = await Promise.all([\n          queryInstance(params.id),\n          queryInstanceMetrics({\n            id: params.id,\n            duration,\n            interval,\n            selectedBroker,\n          }),\n        ]);\n        if (!instance) {\n          return Promise.reject(\"Can't retrieve instance\");\n        }\n        return {\n          ...metrics,\n          diskSpaceLimit:\n            (instance.request.max_data_retention_size?.bytes || 0) / 1073741824,\n          connectionsLimit: instance.connections || 0,\n          connectionRateLimit: instance.connectionRate || 0,\n        };\n      },\n      [params.id, queryInstance, queryInstanceMetrics]\n    );\n\n  const getTopicsMetrics: MetricsProps[\"getTopicsMetrics\"] = useCallback(\n    async ({ interval, duration, selectedTopic }) => {\n      const [instance, metrics] = await Promise.all([\n        queryInstance(params.id),\n        queryTopicMetrics({ id: params.id, duration, interval, selectedTopic }),\n      ]);\n      if (!instance || !instance.adminUrl) {\n        return Promise.reject(\"Can't retrieve instance\");\n      }\n      const kafkaTopics = (\n        await queryTopics({\n          id: instance.id,\n          adminUrl: instance.adminUrl,\n          page: 1,\n          perPage: 1000,\n          plan: instance.plan,\n        })\n      ).topics.map((t) => t.name);\n      return {\n        ...metrics,\n        kafkaTopics,\n      };\n    },\n    [params.id, queryInstance, queryTopicMetrics, queryTopics]\n  );\n\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"dashboard\"}\n      />\n      <Metrics\n        onCreateTopic={() => {\n          /* TODO */\n        }}\n        onAlertClose={onAlertClose}\n        hasUserAlreadyClosedAlert={hasUserAlreadyClosedAlert}\n        getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n        getTopicsMetrics={getTopicsMetrics}\n        getMetricsKpi={getMetricsKpi}\n      />\n    </>\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaConsumerGroupSortableColumns,\n  useConsumerGroups,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { ConsumerGroups, useConsumerGroupLabels } from \"ui\";\nimport type { ControlPlaneNavigationProps } from \"../../control-plane/routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { DataPlaneHeaderConnected } from \"./DataPlaneHeaderConnected\";\nimport { useHistory } from \"react-router-dom\";\nimport { instanceConsumerGroupsHref } from \"../DataPlaneRoutes\";\n\nexport const ConsumerGroupsRoute: VoidFunctionComponent<\n  ControlPlaneNavigationProps\n> = ({ instancesHref }) => {\n  const { instance } = useDataPlaneGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const labels = useConsumerGroupLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const name = labels.fields.groupId;\n\n  const consumerName = useURLSearchParamsChips(\n    \"consumer\",\n    resetPaginationQuery\n  );\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaConsumerGroupSortableColumns,\n    { name }\n  );\n  const { data } = useConsumerGroups({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    groupId: consumerName.chips[0],\n  });\n\n  const onDeletConsumerGroup = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/delete`\n      );\n    },\n    [history, instance.id]\n  );\n\n  const onViewPartition = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/view-partition`\n      );\n    },\n    [history, instance.id]\n  );\n\n  const onClickResetOffset = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${instanceConsumerGroupsHref(instance.id)}/${groupId}/reset-offset`\n      );\n    },\n    [history, instance.id]\n  );\n  return (\n    <>\n      <DataPlaneHeaderConnected\n        instancesHref={instancesHref}\n        activeSection={\"consumer\"}\n      />\n      <ConsumerGroups\n        consumers={data?.groups}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        consumerName={consumerName.chips}\n        isRowSelected={() => false}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeletConsumerGroup(row.groupId)}\n        onSearchConsumer={(value) => {\n          consumerName.clear();\n          consumerName.toggle(value);\n        }}\n        onClearAllFilters={consumerName.clear}\n        onPageChange={setPagination}\n        onRemoveConsumerChip={consumerName.clear}\n        onRemoveConsumerChips={consumerName.clear}\n        onViewPartition={(row) => onViewPartition(row.groupId)}\n        onViewResetOffset={(row) => onClickResetOffset(row.groupId)}\n      />\n    </>\n  );\n};\n","import { useTopic } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport type { DataPlaneTopicRouteParams } from \"./routesConsts\";\nimport { DataPlaneTopicRoutePath } from \"./routesConsts\";\nimport { useDataPlaneGate } from \"./useDataPlaneGate\";\n\nexport function useTopicGate() {\n  const { instance } = useDataPlaneGate();\n  const match = useRouteMatch<DataPlaneTopicRouteParams>(\n    DataPlaneTopicRoutePath\n  );\n  if (!match) {\n    throw Error(\"useDataPlaneGate used outside the expected route\");\n  }\n  const { data: topic } = useTopic(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      topicName: match.params.topicName,\n      plan: instance.plan,\n    },\n    true\n  );\n\n  return {\n    instance,\n    topic: topic as NonNullable<typeof topic>,\n    match,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlaneTopicHeaderProps } from \"ui\";\nimport { DataPlaneTopicHeader } from \"ui\";\nimport { useDrawer } from \"../../control-plane\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { useUserControlGate } from \"../../../useUserControlGate\";\n\nexport const DataPlaneTopicHeaderConnected: VoidFunctionComponent<\n  DataPlaneNavigationProps & Pick<DataPlaneTopicHeaderProps, \"activeSection\">\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  activeSection,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { setActiveTab, toggleExpanded } = useDrawer();\n  const { userData } = useUserControlGate();\n  const {\n    instance,\n    topic,\n    match: { url },\n  } = useTopicGate();\n\n  const tabsHref = {\n    consumer: `${url}/consumer-groups`,\n    messages: `${url}/messages`,\n    properties: `${url}/properties`,\n    schemas: `${url}/schemas`,\n  };\n\n  const onDelete = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/delete`);\n  }, [history, instance, instancesHref]);\n\n  const onChangeOwner = useCallback(() => {\n    // TODO: unhardcode this url\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(`${instancesHref}/${instance.id}/change-owner`);\n  }, [history, instance, instancesHref]);\n\n  return (\n    <DataPlaneTopicHeader\n      instancesHref={instancesHref}\n      instanceName={instance.name}\n      instanceDetailHref={instanceDetailsHref(instance.id)}\n      instanceTopicsHref={instanceTopicsHref(instance.id)}\n      activeSection={activeSection}\n      topicName={topic.name}\n      tabsHref={tabsHref}\n      onDetails={() => {\n        setActiveTab(\"details\");\n        toggleExpanded(true);\n      }}\n      onConnection={() => {\n        setActiveTab(\"connections\");\n        toggleExpanded(true);\n      }}\n      canOpenConnection={userData.canOpenConnection(instance)}\n      canChangeOwner={userData.canChangeOwner(instance.owner, instance.status)}\n      canDelete={userData.isUserOwnerOrAdmin(instance.owner)}\n      onChangeOwner={onChangeOwner}\n      onDelete={onDelete}\n    />\n  );\n};\n","import {\n  usePaginationSearchParams,\n  useSortableSearchParams,\n  useURLSearchParamsChips,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  KafkaConsumerGroupSortableColumns,\n  useConsumerGroups,\n} from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { ConsumerGroups, useConsumerGroupLabels } from \"ui\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\nimport { ControlPlaneRouteRoot } from \"../../control-plane/routesConsts\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const TopicConsumerGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instanceDetailsHref, instanceTopicsHref, instancesHref }) => {\n  const { instance, topic } = useTopicGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const labels = useConsumerGroupLabels();\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const name = labels.fields.groupId;\n\n  const consumerName = useURLSearchParamsChips(\n    \"consumer\",\n    resetPaginationQuery\n  );\n  const [isColumnSortable, sort, sortDirection] = useSortableSearchParams(\n    KafkaConsumerGroupSortableColumns,\n    { name }\n  );\n\n  const { data } = useConsumerGroups({\n    id: instance?.id,\n    adminUrl: instance?.adminUrl,\n    page,\n    perPage,\n    sort: sort || undefined,\n    direction: sortDirection,\n    groupId: consumerName.chips[0],\n    topic: topic.name,\n  });\n\n  const onDeletConsumerGroup = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/delete`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  const onViewPartition = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/view-partition`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  const onClickResetOffset = useCallback(\n    (groupId: string) => {\n      //TODO: remove hardcode value\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${ControlPlaneRouteRoot}/${instance.id}/details/topics/${topic.name}/consumer-groups/${groupId}/reset-offset`\n      );\n    },\n    [history, instance.id, topic.name]\n  );\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        activeSection={\"consumer\"}\n      />\n      <ConsumerGroups\n        consumers={data?.groups}\n        itemCount={data?.count}\n        page={page}\n        perPage={perPage}\n        consumerName={consumerName.chips}\n        isRowSelected={() => false}\n        isColumnSortable={isColumnSortable}\n        onDelete={(row) => onDeletConsumerGroup(row.groupId)}\n        onSearchConsumer={(value) => {\n          consumerName.clear();\n          consumerName.toggle(value);\n        }}\n        onClearAllFilters={consumerName.clear}\n        onPageChange={setPagination}\n        onRemoveConsumerChip={consumerName.clear}\n        onRemoveConsumerChips={consumerName.clear}\n        onViewPartition={(row) => onViewPartition(row.groupId)}\n        onViewResetOffset={(row) => onClickResetOffset(row.groupId)}\n      />\n    </>\n  );\n};\n","import { useMessagesFetchQuery } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { KafkaMessageBrowserProps } from \"ui\";\nimport { KafkaMessageBrowser } from \"ui\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicMessagesGroupsRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instanceDetailsHref, instanceTopicsHref, instancesHref }) => {\n  const { instance, topic } = useTopicGate();\n  const kafkaTopicMessagesFetchQuery = useMessagesFetchQuery();\n\n  const getMessages = useCallback<KafkaMessageBrowserProps[\"getMessages\"]>(\n    async (params) => {\n      if (!instance.adminUrl) {\n        throw Error(\"Invalid instance adminUrl\");\n      }\n      const messages = await kafkaTopicMessagesFetchQuery({\n        ...params,\n        id: instance.id,\n        adminUrl: instance.adminUrl,\n        topicName: topic.name,\n      });\n      return {\n        messages,\n        partitions: topic.partitions.length,\n      };\n    },\n    [\n      instance.adminUrl,\n      instance.id,\n      kafkaTopicMessagesFetchQuery,\n      topic.name,\n      topic.partitions.length,\n    ]\n  );\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        activeSection={\"messages\"}\n      />\n      <KafkaMessageBrowser getMessages={getMessages} />\n    </>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { TopicProperties } from \"ui\";\nimport type { DataPlaneTopicNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicPropertiesRoute: VoidFunctionComponent<\n  DataPlaneTopicNavigationProps\n> = ({\n  instanceDetailsHref,\n  instanceTopicsHref,\n  instancesHref,\n  deleteTopicHref,\n  updateTopicHref,\n}) => {\n  const { instance, topic } = useTopicGate();\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        activeSection={\"properties\"}\n      />\n      <TopicProperties\n        topic={topic}\n        deleteTopicHref={deleteTopicHref(instance.id, topic.name)}\n        updateTopicHref={updateTopicHref(instance.id, topic.name)}\n      />\n    </>\n  );\n};\n","/* eslint-disable */\n// @ts-nocheck\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { I18nProvider } from \"@rhoas/app-services-ui-components\";\nimport type { Auth, Config } from \"@rhoas/app-services-ui-shared\";\nimport { AuthContext, ConfigContext } from \"@rhoas/app-services-ui-shared\";\n/* tslint:disable */\nimport type { Registry } from \"@rhoas/registry-management-sdk\";\nimport type { ScalprumComponentProps } from \"@scalprum/react-core\";\nimport { ScalprumComponent } from \"@scalprum/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\n\nexport const TopicSchemasRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instanceDetailsHref, instanceTopicsHref, instancesHref }) => {\n  const chrome = useChrome();\n  const { topic } = useTopicGate();\n  const processor = (([_, m]: [string, { entry: string[] }]) =>\n    m.entry.map(\n      (e) => `/beta/apps/srs-ui-build${e}`\n    )) as unknown as ScalprumComponentProps[\"processor\"];\n  const processor2 = (([_, m]: [string, { entry: string[] }]) =>\n    m.entry.map(\n      (e) => `/beta/apps/sr-ui-build${e}`\n    )) as unknown as ScalprumComponentProps[\"processor\"];\n  const basename = \"/service-registry\";\n  const auth: Auth = {\n    srs: { getToken: chrome.auth.getToken },\n  };\n  const config: Config = {\n    srs: { apiBasePath: process.env.API_URL },\n  };\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        activeSection={\"schemas\"}\n      />\n      <AuthContext.Provider value={auth}>\n        <ConfigContext.Provider value={config}>\n          <I18nProvider\n            lng={\"en\"}\n            resources={{\n              en: {\n                common: () =>\n                  import(\n                    \"@rhoas/app-services-ui-components/locales/en/common.json\"\n                  ),\n                \"service-registry\": () =>\n                  import(\n                    \"@rhoas/app-services-ui-components/locales/en/service-registry.json\"\n                  ),\n                srsTemporaryFixMe: () => import(\"./srs-locales.json\"),\n              },\n            }}\n            debug={true}\n          >\n            <ScalprumComponent\n              appName=\"srs\"\n              module=\"./ServiceRegistryMapping\"\n              scope=\"srs\"\n              ErrorComponent={<div>opsie</div>}\n              processor={processor}\n              basename={basename}\n              topicName={topic.name}\n              renderSchema={(registry: Registry) => {\n                return (\n                  <ScalprumComponent\n                    appName=\"ar\"\n                    scope=\"ar\"\n                    ErrorComponent={<div>opsie</div>}\n                    processor={processor2}\n                    module=\"./FederatedSchemaMapping\"\n                    registry={registry}\n                    topicName={topic.name}\n                    groupId={null}\n                    version={\"latest\"}\n                    registryId={registry?.id}\n                    basename={basename}\n                  />\n                );\n              }}\n            />\n          </I18nProvider>\n        </ConfigContext.Provider>\n      </AuthContext.Provider>\n    </>\n  );\n};\n","import { useConsumerGroup } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { DataPlaneConsumerGroupRoutePath } from \"./routesConsts\";\nimport type { DataPlaneConsumerGroupRouteParams } from \"./routesConsts\";\nimport { useDataPlaneGate } from \"./useDataPlaneGate\";\n\nexport function useConsumerGroupGate() {\n  const { instance } = useDataPlaneGate();\n  const match = useRouteMatch<DataPlaneConsumerGroupRouteParams>(\n    DataPlaneConsumerGroupRoutePath\n  );\n  if (!match) {\n    throw Error(\"useConsumerGroupGate used outside the expected route\");\n  }\n  const { data: consumerGroup } = useConsumerGroup(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      consumerGroupId: match.params.consumerGroupId,\n    },\n    true\n  );\n\n  return {\n    instance,\n    consumerGroup: consumerGroup as NonNullable<typeof consumerGroup>,\n    match,\n  };\n}\n","import { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { useDispatch } from \"react-redux\";\n\nexport const useAlerts = () => {\n  const dispatch = useDispatch();\n\n  const addAlert = (\n    variant: \"default\" | \"success\" | \"danger\" | \"warning\" | \"info\" | undefined,\n    message: string,\n    dismissable: boolean | undefined,\n    id?: string | number | undefined\n  ) => {\n    dispatch(\n      addNotification({\n        variant: variant,\n        title: message,\n        dismissable: dismissable,\n        id: id,\n      })\n    );\n  };\n\n  return { addAlert };\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteConsumerGroup } from \"ui\";\nimport { useDeleteConsumerGroupMutation } from \"consoledot-api\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\nimport { useAlerts } from \"../../../useAlerts\";\n\nexport const ConsumerGroupDeleteRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({ instanceConsumerGroupsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { addAlert } = useAlerts();\n\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  const { mutateAsync } = useDeleteConsumerGroupMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl!,\n      consumerGroupId: consumerGroup.groupId,\n      onError: (_, message) => {\n        addAlert(\"danger\", message, true, \"delete-consumer-group-error\");\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceConsumerGroupsHref(instance.id));\n        addAlert(\n          \"success\",\n          `Successfully deleted consumer group ${consumerGroup.groupId}`,\n          true,\n          \"delete-consumer-group-success\"\n        );\n      },\n    });\n  }, [\n    mutateAsync,\n    instance.id,\n    instance.adminUrl,\n    consumerGroup.groupId,\n    addAlert,\n    history,\n    instanceConsumerGroupsHref,\n  ]);\n\n  return (\n    <DeleteConsumerGroup\n      isModalOpen={true}\n      onClose={onCancel}\n      onDeleteConsumer={onDelete}\n      state={consumerGroup.state}\n      consumerName={consumerGroup.groupId}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupResetOffset } from \"ui\";\nimport type { OffsetValue } from \"ui\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useResetConsumerGroupMutation } from \"consoledot-api\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\nimport { useAlerts } from \"../../../useAlerts\";\n\nexport const ConsumerGroupResetOffsetRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({ instanceConsumerGroupsHref }) => {\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  const { addAlert } = useAlerts();\n\n  const { mutateAsync } = useResetConsumerGroupMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const getTopics = () => {\n    const topics = (consumerGroup.consumers || []).map(\n      (consumer) => consumer.topic\n    );\n    const distinctTopics = Array.from(new Set(topics));\n    return distinctTopics;\n  };\n\n  const onConfirmResetOffset = useCallback(\n    (\n      topic: string,\n      offset: OffsetValue,\n      partitions: number[],\n      customOffsetValue: string\n    ) => {\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl!,\n        consumerGroupId: consumerGroup.groupId,\n        topic: topic,\n        offset: offset,\n        partitions: partitions,\n        value: customOffsetValue,\n        onError: (_, message) => {\n          addAlert(\"danger\", message, true, \"reset-offset-error\");\n        },\n        onSuccess: () => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.replace(instanceConsumerGroupsHref(instance.id));\n          addAlert(\n            \"success\",\n            \"offsets for the consumer group have been successfully reset\",\n            true,\n            \"reset-offset-success\"\n          );\n        },\n      });\n    },\n    [\n      mutateAsync,\n      instance.id,\n      instance.adminUrl,\n      consumerGroup.groupId,\n      addAlert,\n      history,\n      instanceConsumerGroupsHref,\n    ]\n  );\n\n  return (\n    <ConsumerGroupResetOffset\n      isModalOpen={true}\n      state={consumerGroup.state}\n      groupId={consumerGroup.groupId}\n      topics={getTopics()}\n      consumers={consumerGroup.consumers}\n      onClickClose={onCancel}\n      onClickResetOffset={onConfirmResetOffset}\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupDrawer } from \"ui\";\nimport type { DataPlaneConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConsumerGroupsRoute } from \"./ConsumerGroupsRoute\";\nimport { useConsumerGroupGate } from \"../useConsumerGroupGate\";\n\nexport const ConsumerGroupViewPartitionRoute: VoidFunctionComponent<\n  DataPlaneConsumerGroupNavigationsProps\n> = ({\n  instanceConsumerGroupsHref,\n  viewPartitionConsumerGroupHref,\n  instancesHref,\n}) => {\n  const { instance, consumerGroup } = useConsumerGroupGate();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceConsumerGroupsHref(instance.id));\n  }, [history, instance.id, instanceConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewPartitionConsumerGroupHref(\n        instance.id,\n        consumerGroup.groupId\n      )}/delete`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.groupId,\n    viewPartitionConsumerGroupHref,\n  ]);\n\n  const onClickResetOffset = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(\n      `${viewPartitionConsumerGroupHref(\n        instance.id,\n        consumerGroup.groupId\n      )}/reset-offset`\n    );\n  }, [\n    history,\n    instance.id,\n    consumerGroup.groupId,\n    viewPartitionConsumerGroupHref,\n  ]);\n\n  return (\n    <ConsumerGroupDrawer\n      consumerGroupByTopic={false}\n      state={consumerGroup.state}\n      activeMembers={consumerGroup.activeConsumers!}\n      partitionsWithLag={consumerGroup.laggingPartitions!}\n      consumers={consumerGroup.consumers}\n      groupId={consumerGroup.groupId}\n      onSelectDeleteConsumerGroup={onDelete}\n      onSelectResetOffsetConsumerGroup={onClickResetOffset}\n      isExpanded={true}\n      onClickClose={onCancel}\n    >\n      <ConsumerGroupsRoute instancesHref={instancesHref} />\n    </ConsumerGroupDrawer>\n  );\n};\n","import { useConsumerGroup } from \"consoledot-api\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { DataPlaneTopicConsumerGroupRoutePath } from \"./routesConsts\";\nimport type { DataPlaneTopicConsumerRouteParams } from \"./routesConsts\";\nimport { useTopicGate } from \"./useTopicGate\";\n\nexport function useTopicConsumerGroupGate() {\n  const { instance, topic } = useTopicGate();\n  const match = useRouteMatch<DataPlaneTopicConsumerRouteParams>(\n    DataPlaneTopicConsumerGroupRoutePath\n  );\n  if (!match) {\n    throw Error(\"useTopicConsumerGroupGate used outside the expected route\");\n  }\n  const { data: consumerGroup } = useConsumerGroup(\n    {\n      id: instance.id,\n      adminUrl: instance.adminUrl,\n      consumerGroupId: match.params.consumerGroupId,\n    },\n    true\n  );\n\n  return {\n    instance,\n    consumerGroup: consumerGroup as NonNullable<typeof consumerGroup>,\n    match,\n    topic,\n  };\n}\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteConsumerGroup } from \"ui\";\nimport { useDeleteConsumerGroupMutation } from \"consoledot-api\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\nimport { useAlerts } from \"../../../useAlerts\";\n\nexport const TopicConsumerGroupDeleteRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({ instanceTopicConsumerGroupsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { addAlert } = useAlerts();\n\n  const { instance, consumerGroup, topic } = useTopicConsumerGroupGate();\n\n  const { mutateAsync } = useDeleteConsumerGroupMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const onDelete = useCallback(() => {\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl!,\n      consumerGroupId: consumerGroup.groupId,\n      onError: (_, message) => {\n        addAlert(\"danger\", message, true, \"delete-consumer-group-error\");\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(\n          instanceTopicConsumerGroupsHref(instance.id, topic.name)\n        );\n        addAlert(\n          \"success\",\n          `Successfully deleted consumer group ${consumerGroup.groupId}`,\n          true,\n          \"delete-consumer-group-success\"\n        );\n      },\n    });\n  }, [\n    mutateAsync,\n    instance.id,\n    instance.adminUrl,\n    consumerGroup.groupId,\n    addAlert,\n    history,\n    instanceTopicConsumerGroupsHref,\n    topic.name,\n  ]);\n\n  return (\n    <DeleteConsumerGroup\n      isModalOpen={true}\n      onClose={onCancel}\n      onDeleteConsumer={onDelete}\n      state={consumerGroup.state}\n      consumerName={consumerGroup.groupId}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupResetOffset } from \"ui\";\nimport type { OffsetValue } from \"ui\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useResetConsumerGroupMutation } from \"consoledot-api\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\nimport { useAlerts } from \"../../../useAlerts\";\n\nexport const TopicConsumerGroupResetOffsetRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({ instanceTopicConsumerGroupsHref }) => {\n  const { instance, topic, consumerGroup } = useTopicConsumerGroupGate();\n\n  const { addAlert } = useAlerts();\n\n  const { mutateAsync } = useResetConsumerGroupMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n  }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n  const getTopics = () => {\n    const topics = (consumerGroup.consumers || []).map(\n      (consumer) => consumer.topic\n    );\n    const distinctTopics = Array.from(new Set(topics));\n    return distinctTopics;\n  };\n\n  const onConfirmResetOffset = useCallback(\n    (\n      topicName: string,\n      offset: OffsetValue,\n      partitions: number[],\n      customOffsetValue: string\n    ) => {\n      void mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl!,\n        consumerGroupId: consumerGroup.groupId,\n        topic: topicName,\n        offset: offset,\n        partitions: partitions,\n        value: customOffsetValue,\n        onError: (_, message) => {\n          addAlert(\"danger\", message, true, \"reset-offset-error\");\n        },\n        onSuccess: () => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.replace(\n            instanceTopicConsumerGroupsHref(instance.id, topic.name)\n          );\n          addAlert(\n            \"success\",\n            \"offsets for the consumer group have been successfully reset\",\n            true,\n            \"reset-offset-success\"\n          );\n        },\n      });\n    },\n    [\n      mutateAsync,\n      instance.id,\n      instance.adminUrl,\n      consumerGroup.groupId,\n      addAlert,\n      history,\n      instanceTopicConsumerGroupsHref,\n      topic.name,\n    ]\n  );\n\n  return (\n    <ConsumerGroupResetOffset\n      isModalOpen={true}\n      state={consumerGroup.state}\n      groupId={consumerGroup.groupId}\n      topics={getTopics()}\n      consumers={consumerGroup.consumers}\n      onClickClose={onCancel}\n      onClickResetOffset={onConfirmResetOffset}\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ConsumerGroupDrawer } from \"ui\";\nimport type { DataPlaneTopicConsumerGroupNavigationsProps } from \"../routesConsts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTopicConsumerGroupGate } from \"../useTopicConsumerGroupGate\";\nimport { TopicConsumerGroupsRoute } from \"./TopicConsumerGroupsRoute\";\n\nexport const TopicConsumerGroupViewPartitionRoute: VoidFunctionComponent<\n  DataPlaneTopicConsumerGroupNavigationsProps\n> = ({\n  instanceTopicConsumerGroupsHref,\n  instancesHref,\n  viewTopicPartitionConsumerGroupHref,\n  instanceDetailsHref,\n  instanceTopicsHref,\n}) => {\n    const { instance, topic, consumerGroup } = useTopicConsumerGroupGate();\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const history = useHistory();\n\n    const onCancel = useCallback(() => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(instanceTopicConsumerGroupsHref(instance.id, topic.name));\n    }, [history, instance.id, topic.name, instanceTopicConsumerGroupsHref]);\n\n    const onDelete = useCallback(() => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${viewTopicPartitionConsumerGroupHref(\n          instance.id,\n          topic.name,\n          consumerGroup.groupId\n        )}/delete`\n      );\n    }, [\n      history,\n      instance.id,\n      consumerGroup.groupId,\n      topic.name,\n      viewTopicPartitionConsumerGroupHref,\n    ]);\n\n    const onClickResetOffset = useCallback(() => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        `${viewTopicPartitionConsumerGroupHref(\n          instance.id,\n          topic.name,\n          consumerGroup.groupId\n        )}/reset-offset`\n      );\n    }, [\n      history,\n      instance.id,\n      topic.name,\n      consumerGroup.groupId,\n      viewTopicPartitionConsumerGroupHref,\n    ]);\n\n    return (\n      <ConsumerGroupDrawer\n        consumerGroupByTopic={false}\n        state={consumerGroup.state}\n        activeMembers={consumerGroup.activeConsumers!}\n        partitionsWithLag={consumerGroup.laggingPartitions!}\n        consumers={consumerGroup.consumers}\n        groupId={consumerGroup.groupId}\n        onSelectDeleteConsumerGroup={onDelete}\n        onSelectResetOffsetConsumerGroup={onClickResetOffset}\n        isExpanded={true}\n        onClickClose={onCancel}\n      >\n        <TopicConsumerGroupsRoute\n          instancesHref={instancesHref}\n          instanceDetailsHref={instanceDetailsHref}\n          instanceTopicsHref={instanceTopicsHref}\n        />\n      </ConsumerGroupDrawer>\n    );\n  };\n","import type { DeleteModalProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  DeleteModal,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type DeleteKafkaTopicProps = {\n  topicName: string;\n} & Omit<\n  DeleteModalProps,\n  \"title\" | \"variant\" | \"confirmationValue\" | \"children\"\n>;\n\nexport const DeleteKafkaTopic: VoidFunctionComponent<DeleteKafkaTopicProps> = ({\n  topicName,\n  ...props\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <DeleteModal\n      {...props}\n      variant={\"destructive\"}\n      title={t(\"delete_topic_title\")}\n      confirmationValue={topicName}\n    >\n      <Trans\n        ns={\"kafka\"}\n        i18nKey={\"delete_topic_message\"}\n        components={[<strong />]}\n        values={{\n          topicName,\n        }}\n      />\n    </DeleteModal>\n  );\n};\n","import { useDeleteTopicMutation } from \"consoledot-api\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteKafkaTopic } from \"ui/src/components/DeleteKafkaTopic\";\nimport type { DataPlaneTopicNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\n\nexport const TopicDeleteRoute: VoidFunctionComponent<\n  DataPlaneTopicNavigationProps\n> = ({ instanceTopicsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const { instance, topic } = useTopicGate();\n  const { mutateAsync, isLoading: isDeleting } = useDeleteTopicMutation();\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicsHref(instance.id));\n  }, [history, instance.id, instanceTopicsHref]);\n\n  const onDelete = useCallback(() => {\n    if (!instance.adminUrl) {\n      throw Error(\"Invalid instance adminUrl\");\n    }\n    void mutateAsync({\n      instanceId: instance.id,\n      adminUrl: instance.adminUrl,\n      name: topic.name,\n      onError: () => {\n        // TODO: alert\n      },\n      onSuccess: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.replace(instanceTopicsHref(instance.id));\n      },\n    });\n  }, [\n    instance.adminUrl,\n    instance.id,\n    mutateAsync,\n    topic.name,\n    history,\n    instanceTopicsHref,\n  ]);\n\n  return (\n    <DeleteKafkaTopic\n      topicName={topic.name}\n      isModalOpen={true}\n      isDeleting={isDeleting}\n      appendTo={() =>\n        (document.getElementById(\"chrome-app-render-root\") as HTMLElement) ||\n        document.body\n      }\n      onDelete={onDelete}\n      onCancel={onCancel}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport { useTopicGate } from \"../useTopicGate\";\nimport { useUpdateTopicMutation } from \"consoledot-api\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { DataPlaneTopicHeaderConnected } from \"./DataPlaneTopicHeaderConnected\";\nimport { EditTopicProperties } from \"ui\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\n\nexport const TopicEditPropertiesRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instanceDetailsHref, instanceTopicsHref, instancesHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { instance, topic } = useTopicGate();\n\n  if (instance.maxPartitions === undefined) {\n    throw new Error(\n      `CreateTopicRoute, unexpected maxPartition undefined for instance ${instance.name}`\n    );\n  }\n\n  const dispatch = useDispatch();\n\n  const updateTopic = useUpdateTopicMutation();\n\n  const onSave = useCallback(\n    (topicData: Topic) => {\n      if (instance.adminUrl === undefined) {\n        throw new Error(\n          `EditTopicRoute, adminUrl undefined for instance ${instance.name}`\n        );\n      }\n      void updateTopic.mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance.adminUrl,\n        topic: topicData,\n\n        onSuccess: () => {\n          //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.push(instanceTopicsHref(instance.id));\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"save-error\",\n            })\n          );\n        },\n      });\n    },\n    [\n      instance.adminUrl,\n      instance.id,\n      instance.name,\n      updateTopic,\n      history,\n      instanceTopicsHref,\n      dispatch,\n    ]\n  );\n\n  const onCancel = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicsHref(instance.id));\n  }, [history, instance.id, instanceTopicsHref]);\n\n  return (\n    <>\n      <DataPlaneTopicHeaderConnected\n        instancesHref={instancesHref}\n        instanceDetailsHref={instanceDetailsHref}\n        instanceTopicsHref={instanceTopicsHref}\n        activeSection={\"properties\"}\n      />\n      <EditTopicProperties\n        topic={topic}\n        onCancel={onCancel}\n        onSave={onSave}\n        availablePartitionLimit={instance.maxPartitions}\n      />\n    </>\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { EditPermissions } from \"ui\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  useAcls,\n  useConsumerGroups,\n  useDeletePermissionsMutation,\n  useTopics,\n  useUpdatePermissionsMutation,\n} from \"consoledot-api\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport type {\n  DataPlanePermissionsNavigationProps,\n  DataPlanePermissionsRouteParams,\n} from \"../routesConsts\";\nimport { DataPlanePermissionsRoutePath } from \"../routesConsts\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\n\nexport const PermissionsEditRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ managePermissionsHref }) => {\n  const { instance } = useDataPlaneGate();\n  const match = useRouteMatch<DataPlanePermissionsRouteParams>(\n    DataPlanePermissionsRoutePath\n  );\n  if (!match) {\n    throw Error(\"EditPermissions used outside the expected route\");\n  }\n\n  const { data: acls } = useAcls({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: topics } = useTopics({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    plan: instance.plan,\n  });\n\n  const { data: consumerGroups } = useConsumerGroups({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const dispatch = useDispatch();\n\n  const consumerGroupsList = consumerGroups?.groups.map(\n    (consumer) => consumer.groupId\n  );\n  const topicsList = topics?.topics.map((topic) => topic.name);\n  const { mutateAsync } = useDeletePermissionsMutation();\n  const updatePermissions = useUpdatePermissionsMutation();\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onSaveAcls = useCallback(\n    (\n      aclPermission: AclBinding[] | undefined,\n      deletedPermissions: AclBinding[] | undefined\n    ) => {\n      if (aclPermission != undefined && aclPermission.length > 0) {\n        aclPermission.map(\n          (aclData) =>\n            void updatePermissions.mutateAsync({\n              instanceId: instance.id,\n              adminUrl: instance?.adminUrl || \"\",\n              acl: {\n                patternType: aclData.patternType,\n                permission: aclData.permission,\n                principal: aclData.principal,\n                operation: aclData.operation,\n                resourceName: aclData.resourceName,\n                resourceType: aclData.resourceType,\n              },\n\n              onSuccess: () => {\n                //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n                history.push(managePermissionsHref(instance.id));\n              },\n              onError: (_, message) => {\n                dispatch(\n                  addNotification({\n                    variant: \"danger\",\n                    title: message,\n                    dismissable: true,\n                    id: \"save-error\",\n                  })\n                );\n              },\n            })\n        );\n      }\n\n      if (deletedPermissions != undefined && deletedPermissions.length > 0) {\n        deletedPermissions.map((aclToDelete) => {\n          void mutateAsync({\n            instanceId: instance.id,\n            adminUrl: instance.adminUrl || \"\",\n            acl: {\n              patternType: aclToDelete.patternType,\n              permissionType: aclToDelete.permission,\n              principal: aclToDelete.principal,\n              resourceName: aclToDelete.resourceName,\n              operation: aclToDelete.operation,\n              resourceType: aclToDelete.resourceType,\n            },\n            onError: (_, message) => {\n              dispatch(\n                addNotification({\n                  variant: \"danger\",\n                  title: message,\n                  dismissable: true,\n                  id: \"delete-error\",\n                })\n              );\n            },\n            onSuccess: () => {\n              //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n              history.push(managePermissionsHref(instance.id));\n            },\n          });\n        });\n      }\n    },\n    [\n      dispatch,\n      history,\n      instance.adminUrl,\n      instance.id,\n      managePermissionsHref,\n      mutateAsync,\n      updatePermissions,\n    ]\n  );\n\n  const existingAcls: AclBinding[] | undefined = acls?.groups.map((acl) => {\n    return {\n      resourceName: acl.resource.resourceName,\n      patternType: acl.resource.patternType,\n      permission: acl.permission.permission,\n      operation: acl.permission.operation,\n      principal: acl.account,\n      resourceType: acl.resource.resourceType,\n    };\n  });\n\n  const aclsForSelectedAccount = existingAcls?.filter(\n    (value) =>\n      value.principal == `User:${match.params.selectedAccount}` ||\n      value.principal == \"User:*\"\n  );\n\n  const onClose = useCallback(() => {\n    //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <EditPermissions\n      onCancel={onClose}\n      kafkaName={instance.name}\n      onSave={onSaveAcls}\n      topicsList={topicsList || []}\n      consumerGroupsList={consumerGroupsList || []}\n      selectedAccount={\n        match.params.selectedAccount == \"all-accounts\"\n          ? \"All accounts\"\n          : match.params.selectedAccount\n      }\n      acls={aclsForSelectedAccount || []}\n    />\n  );\n};\n","import { useCallback } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { Account } from \"ui\";\nimport { PrincipalType } from \"ui\";\nimport { useHistory } from \"react-router-dom\";\nimport type { DataPlanePermissionsNavigationProps } from \"../routesConsts\";\nimport { SelectAccount } from \"ui\";\nimport { useServiceAccounts, useUserAccounts } from \"consoledot-api\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport { useUserControlGate } from \"../../../useUserControlGate\";\n\nexport const PermissionsSelectAccountRoute: VoidFunctionComponent<\n  DataPlanePermissionsNavigationProps\n> = ({ managePermissionsHref, editPermissionsHref }) => {\n  const { instance } = useDataPlaneGate();\n  const { data: accounts } = useUserAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { data: serviceAccounts } = useServiceAccounts({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n  });\n\n  const { userData } = useUserControlGate();\n  const userAccounts: Account[] | undefined = accounts?.accounts.map(\n    (userAccount) => {\n      return {\n        displayName: userAccount.displayName,\n        id: userAccount.username,\n        principalType: PrincipalType.UserAccount,\n      };\n    }\n  );\n\n  const serviceAccountList: Account[] | undefined =\n    serviceAccounts?.serviceAccounts.map((userAccount) => {\n      return {\n        displayName: userAccount.displayName,\n        id: userAccount.id,\n        principalType: PrincipalType.ServiceAccount,\n      };\n    });\n\n  const allAccounts =\n    userAccounts != undefined && serviceAccountList != undefined\n      ? [...serviceAccountList, ...userAccounts]\n      : undefined;\n  const filteredAccounts = allAccounts?.filter(\n    (value) => value.id !== instance.owner && value.id !== userData.username\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n\n  const onNext = useCallback(\n    (selectedAccount: string | undefined) => {\n      //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      history.push(\n        editPermissionsHref(\n          instance.id,\n          selectedAccount === \"All accounts\"\n            ? \"all-accounts\"\n            : selectedAccount || \"\"\n        )\n      );\n    },\n    [history, instance.id, editPermissionsHref]\n  );\n\n  const onClose = useCallback(() => {\n    //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(managePermissionsHref(instance.id));\n  }, [history, instance.id, managePermissionsHref]);\n\n  return (\n    <SelectAccount\n      accounts={filteredAccounts}\n      kafkaName={instance.name}\n      onNext={onNext}\n      onClose={onClose}\n    />\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport type { CreateTopicPageProps } from \"ui\";\nimport { CreateTopic } from \"ui\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { useHistory } from \"react-router-dom\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { useDispatch } from \"react-redux\";\nimport { useCreateTopicMutation, useTopics } from \"consoledot-api\";\nimport { useDataPlaneGate } from \"../useDataPlaneGate\";\nimport type { DataPlaneNavigationProps } from \"../routesConsts\";\nimport {\n  developerDefaults,\n  standardDefaults,\n} from \"consoledot-api/src/transformers/topicTransformer\";\n\nexport const TopicCreateRoute: VoidFunctionComponent<\n  DataPlaneNavigationProps\n> = ({ instancesHref, instanceTopicsHref }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { instance } = useDataPlaneGate();\n  const createTopic = useCreateTopicMutation();\n  const dispatch = useDispatch();\n  const availabilityZone = instance.az;\n  const { data: topics } = useTopics({\n    id: instance.id,\n    adminUrl: instance.adminUrl,\n    plan: instance.plan,\n  });\n\n  if (instance.maxPartitions === undefined) {\n    throw new Error(\n      `CreateTopicRoute, unexpected maxPartition undefined for instance ${instance.name}`\n    );\n  }\n\n  const checkTopicName: CreateTopicPageProps[\"checkTopicName\"] = useCallback(\n    (topicName) => {\n      const selectedTopic = topics?.topics.filter(\n        (topic) => topic.name === topicName\n      );\n      if (selectedTopic && selectedTopic?.length > 0) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    [topics?.topics]\n  );\n\n  const onCloseCreateTopic = useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    history.push(instanceTopicsHref(instance.id));\n  }, [history, instance.id, instanceTopicsHref]);\n\n  const onSave = useCallback(\n    (topicData: Topic) => {\n      void createTopic.mutateAsync({\n        instanceId: instance.id,\n        adminUrl: instance?.adminUrl || \"\",\n        topic: topicData,\n\n        onSuccess: () => {\n          //eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          history.push(instanceTopicsHref(instance.id));\n        },\n        onError: (_, message) => {\n          dispatch(\n            addNotification({\n              variant: \"danger\",\n              title: message,\n              dismissable: true,\n              id: \"save-error\",\n            })\n          );\n        },\n      });\n    },\n    [\n      createTopic,\n      dispatch,\n      history,\n      instance?.adminUrl,\n      instance.id,\n      instanceTopicsHref,\n    ]\n  );\n\n  const initialTopicValues = useMemo(() => {\n    return instance.plan === \"developer\"\n      ? {\n          name: \"\",\n          partitions: [{ partition: 1, id: 1 }],\n          ...developerDefaults,\n        }\n      : {\n          name: \"\",\n          partitions: [{ partition: 1, id: 1 }],\n          ...standardDefaults,\n        };\n  }, [instance.plan]);\n\n  return (\n    <>\n      <CreateTopic\n        kafkaName={instance.name}\n        kafkaPageLink={instanceTopicsHref(instance.id)}\n        kafkaInstanceLink={instancesHref}\n        onSave={onSave}\n        initialTopicValues={initialTopicValues}\n        onCloseCreateTopic={onCloseCreateTopic}\n        checkTopicName={checkTopicName}\n        availablePartitionLimit={instance.maxPartitions}\n        availabilityZone={availabilityZone}\n      />\n    </>\n  );\n};\n","import { InvalidObject } from \"@redhat-cloud-services/frontend-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ControlPlaneRouteRoot } from \"../control-plane/routesConsts\";\nimport { RedirectOnGateError } from \"../RedirectOnGateError\";\nimport {\n  PermissionsRoute,\n  ConsumerGroupsRoute,\n  DashboardRoute,\n  SettingsRoute,\n  TopicConsumerGroupsRoute,\n  TopicMessagesGroupsRoute,\n  TopicPropertiesRoute,\n  TopicSchemasRoute,\n  TopicsRoute,\n  ConsumerGroupDeleteRoute,\n  ConsumerGroupResetOffsetRoute,\n  ConsumerGroupViewPartitionRoute,\n  TopicConsumerGroupDeleteRoute,\n  TopicConsumerGroupResetOffsetRoute,\n  TopicConsumerGroupViewPartitionRoute,\n  TopicDeleteRoute,\n  TopicEditPropertiesRoute,\n  PermissionsEditRoute,\n  PermissionsSelectAccountRoute,\n  TopicCreateRoute,\n} from \"./routes\";\nimport { DataPlaneRoutePath, DataPlaneTopicRoutePath } from \"./routesConsts\";\n\nconst instanceDetailsHref = (id: string) =>\n  `${ControlPlaneRouteRoot}/${id}/details`;\n\nconst instanceTopicsHref = (id: string) =>\n  `${ControlPlaneRouteRoot}/${id}/details/topics`;\n\nconst topicPropertyHref = (id: string, topic: string) =>\n  `${instanceDetailsHref(id)}/topics/${topic}/properties`;\n\nconst topicHref = (id: string, topic: string) =>\n  `${instanceDetailsHref(id)}/topics/${topic}`;\n\nconst updateTopicHref = (id: string, topic: string) =>\n  `${topicHref(id, topic)}/edit`;\n\nconst deleteTopicHref = (id: string, topic: string) =>\n  `${topicHref(id, topic)}/delete`;\n\nexport const instanceConsumerGroupsHref = (id: string) =>\n  `${instanceDetailsHref(id)}/consumer-groups`;\n\nconst viewPartitionConsumerGroupHref = (id: string, consumerGroupId: string) =>\n  `${instanceDetailsHref(\n    id\n  )}/consumer-groups/${consumerGroupId}/view-partition`;\n\nconst instanceTopicConsumerGroupHref = (id: string, topic: string) =>\n  `${instanceDetailsHref(id)}/topics/${topic}/consumer-groups`;\n\nconst viewTopicPartitionConsumerGroupHref = (\n  id: string,\n  topic: string,\n  consumerGroupId: string\n) =>\n  `${instanceDetailsHref(\n    id\n  )}/topics/${topic}/consumer-groups/${consumerGroupId}/view-partition`;\nexport const managePermissionsHref = (id: string) =>\n  `${instanceDetailsHref(id)}/acls/select-account`;\n\nconst editPermissionsHref = (id: string, selectedAccount: string) =>\n  `${instanceDetailsHref(\n    id\n  )}/acls/select-account/${selectedAccount}/edit-permissions`;\n\nexport const permissionsModalHref = (id: string) =>\n  `${instanceDetailsHref(id)}/acls`;\n\nexport const DataPlaneRoutes: VoidFunctionComponent = () => {\n  return (\n    <Route path={DataPlaneRoutePath}>\n      <RedirectOnGateError redirectUrl={\"/kafkas\"}>\n        <Switch>\n          <Route path={`${DataPlaneRoutePath}/dashboard`} exact>\n            <DashboardRoute instancesHref={\"/kafkas\"} />\n          </Route>\n\n          <Route path={`${DataPlaneRoutePath}/topics`} exact>\n            <TopicsRoute instancesHref={\"/kafkas\"} />\n          </Route>\n\n          <Route path={`${DataPlaneRoutePath}/consumer-groups`} exact>\n            <ConsumerGroupsRoute instancesHref={\"/kafkas\"} />\n          </Route>\n\n          <Route path={`${DataPlaneRoutePath}/acls`}>\n            <Route path={`${DataPlaneRoutePath}/acls/select-account`}>\n              <PermissionsSelectAccountRoute\n                editPermissionsHref={editPermissionsHref}\n                instancesHref={\"/kafkas\"}\n                managePermissionsHref={permissionsModalHref}\n              />\n            </Route>\n            <Route\n              path={`${DataPlaneRoutePath}/acls/select-account/:selectedAccount/edit-permissions`}\n            >\n              <PermissionsEditRoute\n                editPermissionsHref={editPermissionsHref}\n                instancesHref={\"/kafkas\"}\n                managePermissionsHref={permissionsModalHref}\n              />\n            </Route>\n            <PermissionsRoute\n              instancesHref={\"/kafkas\"}\n              managePermissionsHref={managePermissionsHref}\n              editPermissionsHref={editPermissionsHref}\n            />\n          </Route>\n\n          <Route path={`${DataPlaneRoutePath}/settings`} exact>\n            <SettingsRoute instancesHref={\"/kafkas\"} />\n          </Route>\n          <Route\n            path={`${DataPlaneRoutePath}/topics`}\n            render={({ match }) => (\n              <RedirectOnGateError\n                redirectUrl={instanceTopicsHref(match.params.id)}\n              >\n                <Switch>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/create-topic`}\n                    exact\n                  >\n                    <TopicCreateRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/consumer-groups`}\n                  >\n                    <RedirectOnGateError\n                      redirectUrl={instanceTopicsHref(match.params.id)}\n                    >\n                      <Switch>\n                        <Route\n                          path={`${DataPlaneTopicRoutePath}/consumer-groups/:consumerGroupId/view-partition`}\n                        >\n                          <Route\n                            path={`${DataPlaneTopicRoutePath}/consumer-groups/:consumerGroupId/view-partition/delete`}\n                          >\n                            <TopicConsumerGroupDeleteRoute\n                              instancesHref={\"/kafkas\"}\n                              instanceTopicConsumerGroupsHref={\n                                instanceTopicConsumerGroupHref\n                              }\n                              viewTopicPartitionConsumerGroupHref={\n                                viewTopicPartitionConsumerGroupHref\n                              }\n                              instanceDetailsHref={instanceDetailsHref}\n                              instanceTopicsHref={instanceTopicsHref}\n                            />\n                          </Route>\n                          <Route\n                            path={`${DataPlaneTopicRoutePath}/consumer-groups/:consumerGroupId/view-partition/reset-offset`}\n                          >\n                            <TopicConsumerGroupResetOffsetRoute\n                              instancesHref={\"/kafkas\"}\n                              instanceTopicConsumerGroupsHref={\n                                instanceTopicConsumerGroupHref\n                              }\n                              viewTopicPartitionConsumerGroupHref={\n                                viewTopicPartitionConsumerGroupHref\n                              }\n                              instanceDetailsHref={instanceDetailsHref}\n                              instanceTopicsHref={instanceTopicsHref}\n                            />\n                          </Route>\n                          <TopicConsumerGroupViewPartitionRoute\n                            instancesHref={\"/kafkas\"}\n                            instanceTopicConsumerGroupsHref={\n                              instanceTopicConsumerGroupHref\n                            }\n                            viewTopicPartitionConsumerGroupHref={\n                              viewTopicPartitionConsumerGroupHref\n                            }\n                            instanceDetailsHref={instanceDetailsHref}\n                            instanceTopicsHref={instanceTopicsHref}\n                          />\n                        </Route>\n                        <Route\n                          path={`${DataPlaneTopicRoutePath}/consumer-groups/:consumerGroupId/reset-offset`}\n                        >\n                          <TopicConsumerGroupResetOffsetRoute\n                            instancesHref={\"/kafkas\"}\n                            instanceTopicConsumerGroupsHref={\n                              instanceTopicConsumerGroupHref\n                            }\n                            viewTopicPartitionConsumerGroupHref={\n                              viewTopicPartitionConsumerGroupHref\n                            }\n                            instanceDetailsHref={instanceDetailsHref}\n                            instanceTopicsHref={instanceTopicsHref}\n                          />\n                        </Route>\n                        <Route\n                          path={`${DataPlaneTopicRoutePath}/consumer-groups/:consumerGroupId/delete`}\n                        >\n                          <TopicConsumerGroupDeleteRoute\n                            instancesHref={\"/kafkas\"}\n                            instanceTopicConsumerGroupsHref={\n                              instanceTopicConsumerGroupHref\n                            }\n                            viewTopicPartitionConsumerGroupHref={\n                              viewTopicPartitionConsumerGroupHref\n                            }\n                            instanceDetailsHref={instanceDetailsHref}\n                            instanceTopicsHref={instanceTopicsHref}\n                          />\n                        </Route>\n                      </Switch>\n                    </RedirectOnGateError>\n                    <TopicConsumerGroupsRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/messages`}\n                    exact\n                  >\n                    <TopicMessagesGroupsRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                    />\n                  </Route>\n\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/properties/edit`}\n                    exact\n                  >\n                    <TopicEditPropertiesRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/properties`}\n                  >\n                    <Route\n                      path={`${DataPlaneRoutePath}/topics/:topicName/properties/delete`}\n                    >\n                      <TopicDeleteRoute\n                        instancesHref={\"/kafkas\"}\n                        instanceDetailsHref={instanceDetailsHref}\n                        instanceTopicsHref={instanceTopicsHref}\n                        topicHref={topicHref}\n                        updateTopicHref={updateTopicHref}\n                        deleteTopicHref={deleteTopicHref}\n                      />\n                    </Route>\n                    <TopicPropertiesRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                      topicHref={topicPropertyHref}\n                      updateTopicHref={updateTopicHref}\n                      deleteTopicHref={deleteTopicHref}\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/schemas`}\n                    exact\n                  >\n                    <TopicSchemasRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/delete`}\n                    exact\n                  >\n                    <TopicDeleteRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                      topicHref={topicHref}\n                      updateTopicHref={updateTopicHref}\n                      deleteTopicHref={deleteTopicHref}\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/topics/:topicName/edit`}\n                    exact\n                  >\n                    <TopicEditPropertiesRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceTopicsHref={instanceTopicsHref}\n                    />\n                  </Route>\n                  <Redirect\n                    from={`${DataPlaneRoutePath}/topics/:topicName/`}\n                    to={`${DataPlaneRoutePath}/topics/:topicName/consumer-groups`}\n                    exact\n                  />\n                </Switch>\n              </RedirectOnGateError>\n            )}\n          />\n          <Route\n            path={`${DataPlaneRoutePath}/consumer-groups`}\n            render={({ match }) => (\n              <RedirectOnGateError\n                redirectUrl={instanceConsumerGroupsHref(match.params.id)}\n              >\n                <Switch>\n                  <Route\n                    path={`${DataPlaneRoutePath}/consumer-groups/:consumerGroupId/view-partition`}\n                  >\n                    <Route\n                      path={`${DataPlaneRoutePath}/consumer-groups/:consumerGroupId/view-partition/delete`}\n                    >\n                      <ConsumerGroupDeleteRoute\n                        instancesHref={\"/kafkas\"}\n                        instanceDetailsHref={instanceDetailsHref}\n                        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                        viewPartitionConsumerGroupHref={\n                          viewPartitionConsumerGroupHref\n                        }\n                      />\n                    </Route>\n                    <Route\n                      path={`${DataPlaneRoutePath}/consumer-groups/:consumerGroupId/view-partition/reset-offset`}\n                    >\n                      <ConsumerGroupResetOffsetRoute\n                        instancesHref={\"/kafkas\"}\n                        instanceDetailsHref={instanceDetailsHref}\n                        instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                        viewPartitionConsumerGroupHref={\n                          viewPartitionConsumerGroupHref\n                        }\n                      />\n                    </Route>\n                    <ConsumerGroupViewPartitionRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      viewPartitionConsumerGroupHref={\n                        viewPartitionConsumerGroupHref\n                      }\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/consumer-groups/:consumerGroupId/reset-offset`}\n                  >\n                    <ConsumerGroupResetOffsetRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      viewPartitionConsumerGroupHref={\n                        viewPartitionConsumerGroupHref\n                      }\n                    />\n                  </Route>\n                  <Route\n                    path={`${DataPlaneRoutePath}/consumer-groups/:consumerGroupId/delete`}\n                  >\n                    <ConsumerGroupDeleteRoute\n                      instancesHref={\"/kafkas\"}\n                      instanceDetailsHref={instanceDetailsHref}\n                      instanceConsumerGroupsHref={instanceConsumerGroupsHref}\n                      viewPartitionConsumerGroupHref={\n                        viewPartitionConsumerGroupHref\n                      }\n                    />\n                  </Route>\n                </Switch>\n              </RedirectOnGateError>\n            )}\n          />\n          <Redirect\n            from={`${DataPlaneRoutePath}`}\n            to={`${DataPlaneRoutePath}/dashboard`}\n            exact\n          />\n\n          <Route>\n            <InvalidObject />\n          </Route>\n        </Switch>\n      </RedirectOnGateError>\n    </Route>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { KafkaPageV3 } from \"ui\";\n\nexport const OverviewRoute: VoidFunctionComponent = () => {\n  return <KafkaPageV3 />;\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ControlPlaneRoutes, DrawerProvider } from \"./control-plane\";\nimport { DataPlaneRoutes } from \"./data-plane\";\nimport { OverviewRoute } from \"./overview\";\n\nexport const Routes: VoidFunctionComponent = () => {\n  return (\n    <Switch>\n      <Route path={\"/overview\"} exact>\n        <OverviewRoute />\n      </Route>\n      <Redirect from={\"/\"} to={\"/kafkas\"} exact />\n      <Route path={\"/kafkas\"}>\n        <DrawerProvider>\n          {/* don't move these routes around! the order is important */}\n          <ControlPlaneRoutes />\n          <DataPlaneRoutes />\n        </DrawerProvider>\n      </Route>\n      <Route path={\"\"} exact></Route>\n    </Switch>\n  );\n};\n","import NotificationsPortal from \"@redhat-cloud-services/frontend-components-notifications/NotificationPortal\";\nimport { notificationsReducer } from \"@redhat-cloud-services/frontend-components-notifications/redux\";\nimport { getRegistry } from \"@redhat-cloud-services/frontend-components-utilities/Registry\";\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { useSelfTermsReview } from \"consoledot-api\";\nimport { memo, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport type { Reducer } from \"redux\";\n\nimport \"./App.scss\";\n\nimport { Routes } from \"./routes/Routes\";\n\nconst App = memo(() => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const history = useHistory();\n  const { updateDocumentTitle, on } = useChrome();\n\n  // prefetch the T&C acceptance\n  useSelfTermsReview();\n\n  const { t } = useTranslation();\n  const title = t(\"kafka:rhosakTitle\");\n\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer as Reducer });\n\n    updateDocumentTitle(title);\n\n    const unregister = on(\"APP_NAVIGATION\", (event) => {\n      console.dir(event);\n      if (event.navId) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        history.push(\"/\" + event.navId === \"/\" ? \"\" : event.navId);\n      }\n    });\n    return () => {\n      if (unregister) {\n        unregister();\n      }\n    };\n  }, [history, on, title, updateDocumentTitle]);\n\n  return (\n    <>\n      <NotificationsPortal />\n      <Routes />\n    </>\n  );\n});\n\nexport default App;\n","/* eslint-disable */\n// @ts-nocheck\nimport { useChrome } from \"@redhat-cloud-services/frontend-components/useChrome\";\nimport { AssetsContext } from \"@rhoas/app-services-ui-shared\";\nimport { ScalprumComponent } from \"@scalprum/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nexport const appIdentifier = \"applicationServices\";\n\nconst basePath = \"/apps/rhoas-guides-build\";\nconst getPath = () => {\n  return basePath;\n};\n\nexport const QuickstartLoader: VoidFunctionComponent = () => {\n  const [loaded, setLoaded] = useState(false);\n  const chrome = useChrome();\n  const { quickStarts } = chrome;\n\n  const onLoad = (qs: unknown) => {\n    if (quickStarts) {\n      setLoaded(true); // unload federated module\n      quickStarts.set(appIdentifier, qs);\n    }\n  };\n\n  const processor = (item) => {\n    const fixPath = (e) => `${basePath}${e}`;\n    return item.guides.entry.map(fixPath);\n  };\n\n  return (\n    <ErrorBoundary fallbackRender={() => null}>\n      <AssetsContext.Provider value={{ getPath }}>\n        {!loaded ? (\n          <ScalprumComponent\n            appName=\"guides\"\n            scope=\"guides\"\n            module=\"./QuickStartLoader\"\n            ErrorComponent={<div>opsie</div>}\n            processor={processor}\n            showDrafts={false}\n            onLoad={onLoad}\n          />\n        ) : null}\n      </AssetsContext.Provider>\n    </ErrorBoundary>\n  );\n};\n","import notificationsMiddleware from \"@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware\";\nimport type ReducerRegistry from \"@redhat-cloud-services/frontend-components-utilities/ReducerRegistry\";\nimport { getRegistry } from \"@redhat-cloud-services/frontend-components-utilities/Registry\";\nimport type { Middleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise-middleware\";\n\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nexport let registry: ReducerRegistry<any>;\n\nexport function init(...middleware: Middleware[]) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: [\"detail\", \"stack\"] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n","import type {\n  ConsumerGroup as ConsumerGroupApi,\n  ConsumerGroupState,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type {\n  Consumer,\n  ConsumerGroup,\n} from \"ui-models/src/models/consumer-group\";\n\nexport function consumerGroupTransformer(t: ConsumerGroupApi): ConsumerGroup {\n  const state = stateMapping[t.state as ConsumerGroupState];\n  return {\n    groupId: t.groupId,\n    state: state,\n    consumers: t.consumers.map<Consumer>((consumer) => ({\n      groupId: consumer.groupId,\n      topic: consumer.topic,\n      lag: consumer.lag,\n      memberId: consumer.memberId,\n      partition: consumer.partition,\n      offset: consumer.offset,\n      logEndOffset: consumer.logEndOffset,\n    })),\n    activeConsumers: t.metrics?.activeConsumers,\n    laggingPartitions: t.metrics?.laggingPartitions,\n    unassignedPartitions: t.metrics?.unassignedPartitions,\n  };\n}\n\nexport const stateMapping: {\n  [state in ConsumerGroupState]: ConsumerGroup[\"state\"];\n} = {\n  DEAD: \"Dead\",\n  EMPTY: \"Empty\",\n  STABLE: \"Stable\",\n  UNKNOWN: \"Unknown\",\n  COMPLETING_REBALANCE: \"CompletingRebalance\",\n  PREPARING_REBALANCE: \"PreparingRebalance\",\n};\n","import type { DefaultApi, InstantQuery } from \"@rhoas/kafka-management-sdk\";\nimport type { NoUndefinedField } from \"../types\";\n\nexport async function fetchKafkaKpis(\n  getMetricsByInstantQuery: DefaultApi[\"getMetricsByInstantQuery\"],\n  id: string\n) {\n  let topics = 0,\n    topicPartitions = 0,\n    consumerGroups = 0;\n\n  const response = await getMetricsByInstantQuery(id, [\n    \"kafka_topic:kafka_topic_partitions:sum\", // (Number of topic partitions)\n    \"kafka_topic:kafka_topic_partitions:count\", // (Number of topics)\n    \"consumergroup:kafka_consumergroup_members:count\", // (number of consumer groups - note that this metric will appear after a consumer group is created. There should be handled by the UI in a way that the metric isn't visible if no consumer groups are created)\n  ]);\n\n  const safeMetrics: NoUndefinedField<InstantQuery[]> = (response.data.items ||\n    []) as NoUndefinedField<InstantQuery[]>;\n\n  safeMetrics.forEach(({ metric, value }) => {\n    const { __name__: name } = metric;\n\n    switch (name) {\n      case \"kafka_topic:kafka_topic_partitions:sum\":\n        topicPartitions = value;\n        break;\n      case \"kafka_topic:kafka_topic_partitions:count\":\n        topics = value;\n        break;\n      case \"consumergroup:kafka_consumergroup_members:count\":\n        consumerGroups = value;\n        break;\n    }\n  });\n  return {\n    consumerGroups,\n    topicPartitions,\n    topics,\n  };\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  BrokerBytesMetric,\n  GetKafkaInstanceMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"ui\";\nimport type { SafeRangeQuery } from \"../types\";\n\nexport type FetchKafkaMetricsProps = {\n  getMetricsByRangeQuery: DefaultApi[\"getMetricsByRangeQuery\"];\n  id: string;\n  duration: number;\n  interval: number;\n  selectedBroker: string | undefined;\n};\n\nexport async function fetchKafkaMetrics({\n  getMetricsByRangeQuery,\n  id,\n  duration,\n  interval,\n  selectedBroker,\n}: FetchKafkaMetricsProps): Promise<GetKafkaInstanceMetricsResponse> {\n  const response = await getMetricsByRangeQuery(id, duration, interval, [\n    \"kubelet_volume_stats_used_bytes\",\n    \"kafka_broker_quota_totalstorageusedbytes\",\n    \"kas_broker_partition_log_size_bytes_top50\",\n    \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\",\n    \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\",\n  ]);\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(\n        m.values &&\n        m.metric &&\n        m.metric.topic &&\n        m.metric.name &&\n        m.metric.broker_id &&\n        m.metric.partition_id &&\n        m.metric.persistentvolumeclaim &&\n        m.metric.persistentvolumeclaim.includes(\"zookeeper\")\n      )\n  ) as SafeRangeQuery[];\n\n  const brokers = Array.from(\n    new Set(safeMetrics.map((m) => m.metric.broker_id))\n  );\n\n  const usedDiskSpaceMetrics: BrokerBytesMetric = {};\n  const connectionAttemptRateMetrics: TimeSeriesMetrics = {};\n  const clientConnectionsMetrics: TimeSeriesMetrics = {};\n  const bytesPerPartitionMetrics: PartitionBytesMetric = {};\n\n  const connectionRateLimit = 0,\n    connectionsLimit = 0,\n    diskSpaceLimit = 0;\n\n  safeMetrics.forEach((m) => {\n    const { __name__: name, topic, partition_id, broker_id } = m.metric;\n\n    function addAggregatedValuesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    function addAggregateBrokerBytes() {\n      if (name === \"kubelet_volume_stats_used_bytes\") {\n        const broker = usedDiskSpaceMetrics[\"total\"] || {};\n        m.values.forEach(({ value, timestamp }) => {\n          broker[timestamp] = value + (broker[timestamp] || 0);\n        });\n        usedDiskSpaceMetrics[\"total\"] = broker;\n      } else {\n        const broker = usedDiskSpaceMetrics[broker_id] || {};\n        m.values.forEach(\n          ({ timestamp, value }) =>\n            (broker[timestamp] = value + broker[timestamp] || 0)\n        );\n        usedDiskSpaceMetrics[broker_id] = broker;\n      }\n    }\n\n    function addAggregatePartitionBytes() {\n      const partitionKey = selectedBroker\n        ? topic + \" / \" + partition_id\n        : broker_id + \" , \" + topic + \" / \" + partition_id;\n      const partition = bytesPerPartitionMetrics[broker_id] || {};\n      m.values.forEach(({ value, timestamp }) => {\n        partition[timestamp] = value + (partition[timestamp] || 0);\n      });\n      bytesPerPartitionMetrics[partitionKey] = partition;\n    }\n    switch (name) {\n      case \"kubelet_volume_stats_used_bytes\":\n      case \"kafka_broker_quota_totalstorageusedbytes\":\n        addAggregateBrokerBytes();\n        break;\n      case \"kas_broker_partition_log_size_bytes_top50\":\n        addAggregatePartitionBytes();\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\":\n        addAggregatedValuesTo(connectionAttemptRateMetrics);\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\":\n        addAggregatedValuesTo(clientConnectionsMetrics);\n        break;\n    }\n  });\n  return {\n    brokers,\n    usedDiskSpaceMetrics,\n    bytesPerPartitionMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionRateLimit,\n    connectionsLimit,\n  };\n}\n","export function valuesToQuery(\n  field: string,\n  values: string[],\n  comparison: \"%\" | \"=\"\n): string | undefined {\n  return values\n    .map((v) =>\n      comparison === \"%\"\n        ? `${field} like %${v.trim()}%`\n        : `${field} = ${v.trim()}`\n    )\n    .join(\" or \");\n}\n","import type { DefaultApi, KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport type { SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { SimplifiedStatuses } from \"ui-models/src/models/kafka\";\nimport type { KafkaInstanceEnhanced } from \"../transformers/kafkaRequestToKafkaInstanceEnhanched\";\nimport type { KafkaInstancesSortableColumn } from \"../types\";\nimport { valuesToQuery } from \"./valuesToQuery\";\n\nconst uiColumnMapping: {\n  [key in KafkaInstancesSortableColumn]: keyof KafkaRequest;\n} = {\n  name: \"name\",\n  owner: \"owner\",\n  provider: \"cloud_provider\",\n  region: \"region\",\n  createdAt: \"created_at\",\n};\nexport type FetchKafkasParams = {\n  getKafkas: DefaultApi[\"getKafkas\"];\n  dataMapper: (data: KafkaRequest) => Promise<KafkaInstanceEnhanced>;\n  page: number;\n  perPage: number;\n  name: string[];\n  owner: string[];\n  status: SimplifiedStatus[];\n  sort: KafkaInstancesSortableColumn;\n  direction: \"asc\" | \"desc\";\n};\n\nexport async function fetchKafkas(params: FetchKafkasParams): Promise<{\n  instances: KafkaInstanceEnhanced[];\n  count: number;\n}> {\n  const {\n    name,\n    status,\n    owner,\n    sort,\n    direction,\n    page,\n    perPage,\n    dataMapper,\n    getKafkas,\n  } = params;\n  const search = filtersToSearch(name, owner, status);\n\n  const res = await getKafkas(\n    page.toString(10),\n    perPage.toString(10),\n    sort ? `${uiColumnMapping[sort]} ${direction}` : undefined,\n    search\n  );\n  const rawInstances = res.data.items;\n  const count = res.data.total;\n  const instances = await Promise.all(rawInstances.map(dataMapper));\n  return {\n    instances,\n    count,\n  };\n}\n\nexport function filtersToSearch(\n  name: string[],\n  owner: string[],\n  status: SimplifiedStatus[]\n): string {\n  const querystring = [\n    valuesToQuery(\"name\", name, \"%\"),\n    valuesToQuery(\"owner\", owner, \"%\"),\n    valuesToQuery(\n      \"status\",\n      status.flatMap((s) => SimplifiedStatuses[s]),\n      \"=\"\n    ),\n  ]\n    .filter(Boolean)\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    .map((q) => `(${q!})`)\n    .join(\" and \");\n  return querystring;\n}\n","import type {\n  DefaultApi,\n  SupportedKafkaSize,\n} from \"@rhoas/kafka-management-sdk\";\nimport type { Plan, Size } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfoWithRegionsCapacity } from \"./fetchProvidersWithRegions\";\n\nexport type SizeWithLimits = Size & { trialDurationHours: number };\n\nexport async function fetchProviderRegionSizes(\n  api: DefaultApi[\"getInstanceTypesByCloudProviderAndRegion\"],\n  providerInfo: CloudProviderInfoWithRegionsCapacity,\n  region: string,\n  instanceType: Plan\n) {\n  const regions = providerInfo.regions;\n  const regionInfo = regions.find((r) => r.id === region);\n  const availableSizes =\n    regionInfo?.capacity.flatMap((c) =>\n      c.available_sizes.map((s) => `${c.instance_type}.${s}`)\n    ) || [];\n  const sizes = await api(providerInfo.id, region);\n  if (!sizes?.data?.instance_types) {\n    throw new Error(`No instance_types from backend`);\n  }\n\n  const standardSizes =\n    sizes?.data?.instance_types.find((i) => i.id === instanceType)?.sizes || [];\n\n  return standardSizes.map(\n    apiSizeToComponentSize.bind(\n      undefined,\n      (id) => !availableSizes.includes(`${instanceType}.${id}`)\n    )\n  );\n}\n\n//\n// export async function fetchProviderRegionSizesForPlanStandard (\n//   api: DefaultApi['getInstanceTypesByCloudProviderAndRegion'], providerInfo: CloudProviderInfoWithRegionsCapacity, region: string\n// )  {\n//   return fetchProviderRegionSizes(api, providerInfo, region, \"standard\");\n// };\n//\n// export const fetchProviderRegionSizesForPlanDeveloper = (\n//   api: DefaultApi['getInstanceTypesByCloudProviderAndRegion'], providerInfo: CloudProviderInfoWithRegionsCapacity, region: string\n//\n// ) => {\n//   const { data: standardSizes, isError } = await fetchProviderRegionSizes(\n//     provider,\n//     region,\n//     \"standard\"\n//   );\n//   const { data: developerSizes } = fetchProviderRegionSizes(\n//     provider,\n//     region,\n//     \"developer\"\n//   );\n//   return useQuery({\n//     queryKey: [],\n//     queryFn: () => {\n//       return {\n//         standard:\n//           standardSizes ||\n//           ([\n//             { id: \"1\", displayName: \"1\" },\n//             { id: \"2\", displayName: \"2\" },\n//           ] as StandardSizes),\n//         trial: developerSizes![0],\n//       };\n//     },\n//     enabled: (!!standardSizes || isError) && !!developerSizes,\n//   });\n// };\n\nfunction apiSizeToComponentSize(\n  isDisabled: (id: string) => boolean,\n  apiSize: SupportedKafkaSize\n): SizeWithLimits {\n  const s = apiSize as Required<SupportedKafkaSize>;\n  return {\n    id: s.id,\n    displayName: s.display_name,\n    quota: s.quota_consumed,\n    ingress: (s.ingress_throughput_per_sec.bytes || 0) / 1048576,\n    egress: (s.egress_throughput_per_sec.bytes || 0) / 1048576,\n    storage: Math.round((s.max_data_retention_size.bytes || 0) / 1073741824),\n    connections: s.total_max_connections,\n    connectionRate: s.max_connection_attempts_per_sec,\n    maxPartitions: s.max_partitions,\n    messageSize: (s.max_message_size.bytes || 0) / 1048576,\n    status: s.maturity_status === \"stable\" ? \"stable\" : \"preview\",\n    trialDurationHours: s.lifespan_seconds ? s.lifespan_seconds / 60 / 60 : 0,\n    isDisabled: isDisabled(s.id),\n  };\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type { CloudProviderInfo } from \"ui\";\nimport type { CloudProvider, Plan } from \"ui-models/src/models/kafka\";\n\nexport type CloudProviderInfoWithRegionsCapacity = Omit<\n  CloudProviderInfo,\n  \"regions\"\n> & {\n  regions: Awaited<ReturnType<typeof fetchProviderRegions>>;\n};\n\nexport async function fetchProvidersWithRegions(\n  getCloudProviders: DefaultApi[\"getCloudProviders\"],\n  getCloudProviderRegions: DefaultApi[\"getCloudProviderRegions\"],\n  plan: Plan\n) {\n  const res = await getCloudProviders();\n  const allProviders = res?.data?.items || [];\n\n  const providers = (\n    await Promise.all(\n      allProviders\n        .filter((p) => p.enabled)\n        .map(async (provider) => {\n          const regions = await fetchProviderRegions(\n            getCloudProviderRegions,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            provider.id!,\n            plan\n          );\n          const providerInfo: CloudProviderInfoWithRegionsCapacity = {\n            id: provider.id as CloudProvider,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            displayName: provider.display_name!,\n            regions,\n          };\n          return regions.length > 0 ? providerInfo : null;\n        })\n    )\n  ).filter((p) => Boolean(p)) as CloudProviderInfoWithRegionsCapacity[];\n  if (providers.length === 0) {\n    throw new Error(\"No cloud providers with capacity found\");\n  }\n  const firstProvider = providers[0];\n  return { providers, defaultProvider: firstProvider?.id };\n}\n\nexport async function fetchProviderRegions(\n  getCloudProviderRegions: DefaultApi[\"getCloudProviderRegions\"],\n  provider: string,\n  instanceType: Plan\n) {\n  const res = await getCloudProviderRegions(provider);\n\n  if (!res?.data?.items) {\n    return Promise.reject(\"Invalid provider\");\n  }\n\n  const regionsForInstance = res.data.items.filter(\n    (region) =>\n      region.enabled &&\n      region.capacity.some((c) => c.instance_type === instanceType)\n  );\n\n  return regionsForInstance.map((r) => {\n    const max_capacity_reached = r.capacity?.some(\n      (c) => c.instance_type === instanceType && c.available_sizes?.length === 0\n    );\n\n    return {\n      id: r.id as CloudProvider,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      displayName: r.display_name!,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      isDisabled: max_capacity_reached,\n      capacity: r.capacity,\n    };\n  });\n}\n","import type { QuotaCost } from \"@rhoas/account-management-sdk\";\n\nexport const standardId = \"RHOSAK\" as const;\nexport const developerId = \"RHOSAKTrial\" as const;\nexport const resourceName = \"rhosak\" as const;\n\nexport function isStandardQuota(q: QuotaCost) {\n  return q.related_resources?.find((r) => r.billing_model === \"standard\");\n}\n\nexport function isMarketplaceQuota(q: QuotaCost) {\n  return q.related_resources?.find((r) => r.billing_model === \"marketplace\");\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport type {\n  MarketPlace,\n  MarketPlaceSubscriptions,\n} from \"ui-models/src/models/kafka\";\nimport {\n  developerId,\n  isMarketplaceQuota,\n  isStandardQuota,\n  resourceName,\n  standardId,\n} from \"../utilsAndConstants\";\n\nexport type StandardQuota = {\n  hasTrialQuota: boolean;\n  remainingPrepaidQuota: number | undefined;\n  remainingMarketplaceQuota: number | undefined;\n  marketplaceSubscriptions: MarketPlaceSubscriptions[];\n};\nexport const fetchStandardQuota = async (\n  api: AppServicesApi[\"apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet\"],\n  organizationId: string\n) => {\n  const quotaResponse = await api(\n    organizationId,\n    undefined,\n    true,\n    undefined,\n    true\n  );\n  if (quotaResponse.status !== 200) {\n    throw new Error(quotaResponse.statusText);\n  }\n  const standardQuotas = quotaResponse.data.items?.filter((q) =>\n    q.related_resources?.find(\n      (r) => r.resource_name === resourceName && r.product === standardId\n    )\n  );\n\n  const prepaidQuota = standardQuotas?.find(isStandardQuota);\n\n  const marketplaceQuotas = standardQuotas?.some(isMarketplaceQuota)\n    ? standardQuotas?.filter(isMarketplaceQuota)\n    : undefined;\n\n  const hasTrialQuota =\n    (prepaidQuota === undefined &&\n      marketplaceQuotas === undefined &&\n      quotaResponse.data.items?.some((q) =>\n        q.related_resources?.find(\n          (r) => r.resource_name === resourceName && r.product === developerId\n        )\n      )) ||\n    false;\n\n  const remainingPrepaidQuota = prepaidQuota\n    ? prepaidQuota.allowed - prepaidQuota.consumed\n    : undefined;\n  const remainingMarketplaceQuota = marketplaceQuotas\n    ? marketplaceQuotas.reduce((agg, q) => q.allowed - q.consumed + agg, 0)\n    : undefined;\n  const unaggregatedSubscriptions = marketplaceQuotas\n    ?.filter((q) => q.cloud_accounts !== undefined)\n    .flatMap((q) => q.cloud_accounts || []);\n  const subscriptionMarketplaces = Array.from(\n    new Set(\n      unaggregatedSubscriptions?.map((s) => s.cloud_provider_id as MarketPlace)\n    )\n  );\n  const marketplaceSubscriptions: MarketPlaceSubscriptions[] =\n    unaggregatedSubscriptions\n      ? subscriptionMarketplaces.map((marketplace) => ({\n          marketplace,\n          subscriptions: unaggregatedSubscriptions\n            .filter((s) => s.cloud_provider_id === marketplace)\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            .map((s) => s.cloud_account_id!),\n        }))\n      : [];\n\n  return {\n    hasTrialQuota,\n    remainingPrepaidQuota,\n    remainingMarketplaceQuota,\n    marketplaceSubscriptions,\n  };\n};\n","import type { SortDirection, TopicsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { topicTransformerFactory } from \"../transformers/topicTransformer\";\nimport type { KafkaTopicsSortableColumn } from \"../types\";\n\nexport type FetchTopicsParams = {\n  getTopics: TopicsApi[\"getTopics\"];\n  page?: number;\n  perPage?: number;\n  sort?: KafkaTopicsSortableColumn;\n  direction?: SortDirection;\n  filter?: string;\n  plan: Plan;\n};\n\nexport async function fetchTopics({\n  getTopics,\n  page,\n  perPage,\n  filter,\n  sort,\n  direction,\n  plan,\n}: FetchTopicsParams): Promise<{ topics: Topic[]; count: number }> {\n  const response = await getTopics(\n    undefined,\n    undefined,\n    perPage,\n    filter,\n    page,\n    direction,\n    sort\n  );\n  const topics = (response.data.items || []).map<Topic>(\n    topicTransformerFactory(plan)\n  );\n  const count = response.data.total;\n  return { count, topics };\n}\n","import type { DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"ui\";\nimport type { SafeRangeQuery } from \"../types\";\nimport { BrokerToggle } from \"ui/src/components/Metrics/components/BrokerToggle\";\n\nexport type FetchTopicsMetricsProps = {\n  getMetricsByRangeQuery: DefaultApi[\"getMetricsByRangeQuery\"];\n  id: string;\n  duration: number;\n  interval: number;\n  selectedTopic: string | undefined;\n};\n\nexport async function fetchTopicsMetrics({\n  getMetricsByRangeQuery,\n  id,\n  duration,\n  interval,\n  selectedTopic,\n}: FetchTopicsMetricsProps): Promise<\n  Omit<GetTopicsMetricsResponse, \"kafkaTopics\">\n> {\n  const response = await getMetricsByRangeQuery(id, duration, interval, [\n    \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\",\n    \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\",\n    \"kas_topic_partition_log_size_bytes\",\n    \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\",\n  ]);\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(m.values && m.metric && m.metric.topic && m.metric.name)\n  ) as SafeRangeQuery[];\n\n  // Also filter for metrics about the selectedTopic, if specified\n  const filteredMetrics = safeMetrics.filter((m) =>\n    // filter for metrics for the selectedTopic, if needed\n    selectedTopic !== undefined ? m.metric?.topic === selectedTopic : true\n  );\n\n  // get the unique topics we have metrics for in the selected time range\n  const topics = Array.from(new Set(safeMetrics.map((m) => m.metric.topic)));\n\n  const bytesIncoming: TimeSeriesMetrics = {};\n  const bytesOutgoing: TimeSeriesMetrics = {};\n  const bytesPerPartition: PartitionBytesMetric = {};\n  const incomingMessageRate: TimeSeriesMetrics = {};\n\n  filteredMetrics.forEach((m) => {\n    const { __name__: name, topic, partition_id, broker_id } = m.metric;\n\n    function addAggregatedTotalBytesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    function addAggregatePartitionBytes() {\n      const partitionKey = `${partition_id}`;\n      const partition = bytesPerPartition[partitionKey] || {};\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (partition[timestamp] = value + (partition[timestamp] || 0))\n      );\n      bytesPerPartition[partitionKey] = partition;\n    }\n\n    switch (name) {\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesIncoming);\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesOutgoing);\n        break;\n      case \"kas_topic_partition_log_size_bytes\":\n        addAggregatePartitionBytes();\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\":\n        addAggregatedTotalBytesTo(incomingMessageRate);\n        break;\n    }\n  });\n\n  return {\n    metricsTopics: topics,\n    bytesOutgoing,\n    bytesIncoming,\n    bytesPerPartition,\n    incomingMessageRate,\n  };\n}\n","import type {\n  Principal,\n  PrincipalApi,\n} from \"@redhat-cloud-services/rbac-client\";\nimport type { UserAccount } from \"ui-models/src/models/user-account\";\n\nexport type FetchUserAccountsParams = {\n  getUserAccounts: PrincipalApi[\"listPrincipals\"];\n};\n\nexport async function fetchUserAccounts({\n  getUserAccounts,\n}: FetchUserAccountsParams): Promise<{\n  accounts: UserAccount[];\n  count: number;\n}> {\n  const response = await getUserAccounts(-1);\n  const accounts = response.data.data.map<UserAccount>((p) => {\n    const fullObject = p as Principal;\n    return {\n      username: fullObject.username,\n      displayName: `${fullObject.first_name || \"\"} ${\n        fullObject.last_name || \"\"\n      }`.trim(),\n      email: fullObject.email,\n      isOrgAdmin: fullObject.is_org_admin || false,\n    };\n  });\n  const count = accounts.length;\n  return { count, accounts };\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\n\nexport async function fetchSelfTermsReview(\n  api: AppServicesApi[\"apiAuthorizationsV1SelfTermsReviewPost\"]\n) {\n  const response = await api({\n    event_code: \"register\",\n    site_code: \"ocm\",\n  });\n  const { terms_required, terms_available, redirect_url } = response.data;\n  const areTermsAccepted =\n    terms_required === false && terms_available === false;\n  if (areTermsAccepted === false && redirect_url === undefined) {\n    throw new Error(\"Invalid Terms and Conditions \");\n  }\n  return {\n    areTermsAccepted,\n    termsUrl: (createHref: string, cancelHref: string) => {\n      if (redirect_url === undefined) {\n        throw new Error(\"Invalid Terms and Conditions \");\n      }\n      const url = new URL(redirect_url);\n      url.searchParams.set(\"redirect\", createHref);\n      url.searchParams.set(\"cancelRedirect\", cancelHref);\n      return url.href;\n    },\n  };\n}\n","import { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { ReactQueryDevtools } from \"@tanstack/react-query-devtools\";\nimport { isReactQueryDevToolsEanbled } from \"local-storage-helpers\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext, lazy, Suspense, useContext } from \"react\";\n\nconst ReactQueryDevtoolsProduction = lazy(() =>\n  import(\"@tanstack/react-query-devtools/build/lib/index.prod.js\").then(\n    (d) => ({\n      default: d.ReactQueryDevtools,\n    })\n  )\n);\n\ntype ApiContextProps = {\n  accessToken: () => Promise<string>;\n  basePath: string;\n  refetchInterval: number;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst ApiContext = createContext<ApiContextProps>(null!);\n\nconst queryClient = new QueryClient();\n\nexport const ApiProvider: FunctionComponent<ApiContextProps> = ({\n  children,\n  ...context\n}) => {\n  const showDevTools = isReactQueryDevToolsEanbled();\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ApiContext.Provider value={context}>\n        {children}\n        <ReactQueryDevtools initialIsOpen />\n        {showDevTools && (\n          <Suspense fallback={null}>\n            <ReactQueryDevtoolsProduction />\n          </Suspense>\n        )}\n      </ApiContext.Provider>\n    </QueryClientProvider>\n  );\n};\n\nexport function useApiConfiguration() {\n  return useContext(ApiContext);\n}\n\nexport { useQueryErrorResetBoundary } from \"@tanstack/react-query\";\n","import type {\n  FetchConsumerGroupParams,\n  FetchConsumerGroupsParams,\n  FetchKafkaMetricsProps,\n  FetchKafkasParams,\n  FetchMessagesParams,\n  FetchPermissionsParams,\n  FetchServiceAccountsParams,\n  FetchTopicParams,\n  FetchTopicsMetricsProps,\n  FetchTopicsParams,\n  FetchUserAccountsParams,\n} from \"./fetchers\";\n\nexport const masQueries = {\n  _root: () => ({ scope: \"mas\" } as const),\n  organization: () =>\n    [{ ...masQueries._root(), entity: \"organization\" }] as const,\n  selfTermsReview: () =>\n    [{ ...masQueries._root(), entity: \"selfTermsReview\" }] as const,\n  userAccounts: (params: Omit<FetchUserAccountsParams, \"getUserAccounts\">) =>\n    [{ ...masQueries._root(), entity: \"userAccounts\" }, params] as const,\n  user: () => [{ ...masQueries._root(), entity: \"user\" }] as const,\n  tokenEndPointUrl: () =>\n    [{ ...masQueries._root(), entity: \"tokenEndPointUrl\" }] as const,\n\n  quota: {\n    _root: () => ({ ...masQueries._root(), entity: \"quota\" } as const),\n    available: (params: { organization?: string }) =>\n      [\n        { ...masQueries.quota._root(), subentity: \"available\", ...params },\n      ] as const,\n    developerAvailability: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"developerAvailability\" },\n      ] as const,\n    standardAvailability: () =>\n      [\n        { ...masQueries.quota._root(), subentity: \"standardAvailability\" },\n      ] as const,\n  },\n} as const;\n\nexport const kafkaQueries = {\n  _root: () => ({ scope: \"kafka\" } as const),\n  list: (params: Omit<FetchKafkasParams, \"dataMapper\" | \"getKafkas\">) =>\n    [\n      {\n        ...kafkaQueries._root(),\n        entity: \"list\",\n      },\n      params,\n    ] as const,\n  instance: {\n    _root: ({ id, adminUrl }: { id?: string; adminUrl?: string }) =>\n      ({ ...kafkaQueries._root(), entity: \"instance\", id, adminUrl } as const),\n    details: (params: { id?: string }) =>\n      [\n        { ...kafkaQueries.instance._root(params), subentity: \"details\" },\n      ] as const,\n    topics: ({\n      id,\n      adminUrl,\n      ...params\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchTopicsParams,\n      \"getTopics\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topics\",\n        },\n        params,\n      ] as const,\n    topic: ({\n      id,\n      adminUrl,\n      topicName,\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchTopicParams,\n      \"getTopic\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topic\",\n        },\n        { topicName },\n      ] as const,\n    topicMessages: ({\n      id,\n      adminUrl,\n      topicName,\n      ...params\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchMessagesParams,\n      \"consumeRecords\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"topicMessages\",\n        },\n        { topicName, ...params },\n      ] as const,\n    consumerGroups: (\n      params: { id?: string; adminUrl?: string } & Omit<\n        FetchConsumerGroupsParams,\n        \"getConsumerGroups\"\n      >\n    ) =>\n      [\n        {\n          ...kafkaQueries.instance._root(params),\n          subentity: \"consumer-groups\",\n        },\n        params,\n      ] as const,\n    consumerGroup: ({\n      id,\n      adminUrl,\n      consumerGroupId,\n    }: { id?: string; adminUrl?: string } & Omit<\n      FetchConsumerGroupParams,\n      \"getConsumerGroupById\"\n    >) =>\n      [\n        {\n          ...kafkaQueries.instance._root({ id, adminUrl }),\n          subentity: \"consumerGroup\",\n        },\n        { consumerGroupId },\n      ] as const,\n    serviceAccounts: (\n      params: Omit<FetchServiceAccountsParams, \"getServiceAccounts\">\n    ) =>\n      [{ ...masQueries._root(), entity: \"serviceAccounts\" }, params] as const,\n    permissions: (\n      params: { id?: string; adminUrl?: string } & Omit<\n        FetchPermissionsParams,\n        \"getAcls\"\n      >\n    ) =>\n      [\n        {\n          ...kafkaQueries.instance._root(params),\n          subentity: \"acls\",\n        },\n        params,\n      ] as const,\n    metrics: {\n      _root: ({ id }: { id: string }) =>\n        ({\n          ...kafkaQueries.instance._root({ id }),\n          subentity: \"metrics\",\n          id,\n        } as const),\n      kpi: (params: { id: string }) =>\n        [{ ...kafkaQueries.instance._root(params), type: \"kpi\" }] as const,\n      instance: ({\n        id,\n        ...params\n      }: Omit<FetchKafkaMetricsProps, \"getMetricsByRangeQuery\">) =>\n        [\n          {\n            ...kafkaQueries.instance._root({ id }),\n            type: \"instance\",\n          },\n          params,\n        ] as const,\n      topic: ({\n        id,\n        ...params\n      }: Omit<FetchTopicsMetricsProps, \"getMetricsByRangeQuery\">) =>\n        [\n          {\n            ...kafkaQueries.instance._root({ id }),\n            type: \"topic\",\n          },\n          params,\n        ] as const,\n    },\n  },\n} as const;\n\nexport const providerQueries = {\n  _root: () => ({ scope: \"providers\" }),\n  list: (params: { plan?: string }) =>\n    [{ ...providerQueries._root(), entity: \"list\", ...params }] as const,\n  limits: {\n    _root: ({ provider }: { provider?: string }) =>\n      ({\n        ...providerQueries._root(),\n        entity: \"limits\",\n        provider,\n      } as const),\n    standard: ({ provider, region }: { provider?: string; region: string }) => [\n      {\n        ...providerQueries.limits._root({ provider }),\n        plan: \"standard\",\n        region,\n      },\n    ],\n    developer: ({\n      provider,\n      region,\n    }: {\n      provider?: string;\n      region: string;\n    }) => [\n      {\n        ...providerQueries.limits._root({ provider }),\n        plan: \"developer\",\n        region,\n      },\n    ],\n  },\n} as const;\n","import { PrincipalApi } from \"@redhat-cloud-services/rbac-client\";\nimport { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport {\n  Configuration,\n  DefaultApi,\n  SecurityApi,\n} from \"@rhoas/kafka-management-sdk\";\nimport {\n  GroupsApi,\n  RecordsApi,\n  TopicsApi,\n  AclsApi,\n} from \"@rhoas/kafka-instance-sdk\";\nimport { useCallback } from \"react\";\nimport { useApiConfiguration } from \"./ApiProvider\";\n\nexport const useApi = () => {\n  const { basePath, accessToken } = useApiConfiguration();\n\n  const kafkasFleet = useCallback(\n    () =>\n      new DefaultApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const userAccounts = useCallback(async () => {\n    const token = await accessToken();\n    return new PrincipalApi({\n      accessToken: token,\n      basePath: `/api/rbac/v1`,\n    });\n  }, [accessToken]);\n\n  const serviceAccount = useCallback(\n    () =>\n      new SecurityApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const account = useCallback(\n    () =>\n      new AppServicesApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      ),\n    [accessToken, basePath]\n  );\n\n  const topics = useCallback(\n    (adminUrl: string) =>\n      new TopicsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const consumerGroups = useCallback(\n    (adminUrl: string) =>\n      new GroupsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const acls = useCallback(\n    (adminUrl: string) =>\n      new AclsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  const records = useCallback(\n    (adminUrl: string) =>\n      new RecordsApi(\n        new Configuration({\n          accessToken,\n          basePath: adminUrl,\n        })\n      ),\n    [accessToken]\n  );\n\n  return {\n    kafkasFleet,\n    account,\n    topics,\n    consumerGroups,\n    records,\n    userAccounts,\n    acls,\n    serviceAccount,\n  };\n};\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchConsumerGroupsParams } from \"../fetchers\";\nimport { fetchConsumerGroups } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useConsumerGroups(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchConsumerGroupsParams,\n    \"getConsumerGroups\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { consumerGroups } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.consumerGroups(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = consumerGroups(params.adminUrl);\n\n      return fetchConsumerGroups({\n        getConsumerGroups: (...args) => api.getConsumerGroups(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl) && Boolean(params.id),\n    refetchInterval,\n    suspense,\n  });\n}\n","import type {\n  ConsumerGroupState,\n  GroupsApi,\n  SortDirection,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { ConsumerGroup } from \"ui-models/src/models/consumer-group\";\nimport type { KafkaConsumerGroupSortableColumn } from \"../types\";\nimport { stateMapping } from \"../transformers/ConsumerGroupTransformer\";\n\nexport type FetchConsumerGroupsParams = {\n  getConsumerGroups: GroupsApi[\"getConsumerGroups\"];\n  page?: number;\n  perPage?: number;\n  sort?: KafkaConsumerGroupSortableColumn;\n  direction?: SortDirection;\n  topic?: string;\n  groupId?: string;\n};\n\nexport async function fetchConsumerGroups({\n  getConsumerGroups,\n  page,\n  perPage,\n  topic,\n  groupId,\n  sort,\n  direction,\n}: FetchConsumerGroupsParams): Promise<{\n  groups: ConsumerGroup[];\n  count: number;\n}> {\n  const response = await getConsumerGroups(\n    undefined,\n    undefined,\n    perPage,\n    page,\n    topic,\n    groupId,\n    direction,\n    sort\n  );\n  const groups = (response.data.items || []).map<ConsumerGroup>((t) => ({\n    groupId: t.groupId || \"\",\n    state: stateMapping[t.state as ConsumerGroupState],\n    consumers: t.consumers,\n    activeConsumers: t.metrics?.activeConsumers,\n    laggingPartitions: t.metrics?.laggingPartitions,\n    unassignedPartitions: t.metrics?.unassignedPartitions,\n  }));\n  const count = response.data.total;\n\n  return { count, groups };\n}\n","import type { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport type {\n  CloudProvider,\n  Kafka,\n  MarketPlaceSubscriptions,\n  Plan,\n  Status,\n} from \"ui-models/src/models/kafka\";\nimport type { DateIsoString } from \"ui-models/src/types\";\n\nimport type { SizeWithLimits } from \"../fetchers\";\n\nexport type KafkaInstanceEnhanced = Required<Kafka> & {\n  request: KafkaRequest;\n};\n\nexport function kafkaRequestToKafkaInstanceEnhanched(\n  instance: KafkaRequest,\n  marketplaceSubscriptions: MarketPlaceSubscriptions[],\n  developerPlanInstanceLimits: SizeWithLimits[],\n  standardPlanInstanceLimits: SizeWithLimits[]\n): KafkaInstanceEnhanced {\n  const enhancedInstance: KafkaInstanceEnhanced = {\n    billing: undefined,\n    connectionRate: 0,\n    connections: 0,\n    createdAt: (instance.created_at ||\n      new Date().toISOString()) as DateIsoString,\n    egress: 0,\n    expiryDate: instance.expires_at as DateIsoString | undefined,\n    id: instance.id,\n    ingress: 0,\n    maxPartitions: 0,\n    messageSize: { type: \"bytes\", value: BigInt(0) },\n    name: instance.name || \"\",\n    owner: instance.owner || \"\",\n    plan: instance.instance_type as Plan,\n    provider: instance.cloud_provider as CloudProvider,\n    region: instance.region || \"\",\n    size: \"1\",\n    status: apiStatusToUIStatus(instance.status || \"\"),\n    storage: { type: \"bytes\", value: BigInt(0) },\n    updatedAt: (instance.updated_at ||\n      new Date().toISOString()) as DateIsoString,\n    request: instance,\n    version: instance.version || \"\",\n    bootstrapUrl: instance.bootstrap_server_host,\n    adminUrl: instance.admin_api_server_url,\n    az: instance.multi_az == true ? \"multi\" : \"single\",\n  };\n\n  // update the billing info\n  try {\n    const marketplaceForBilling = marketplaceSubscriptions.find((ms) =>\n      ms.subscriptions.find((s) => s === instance.billing_cloud_account_id)\n    )?.marketplace;\n\n    const billing: KafkaInstanceEnhanced[\"billing\"] =\n      instance.billing_model === \"standard\"\n        ? \"prepaid\"\n        : marketplaceForBilling && instance.billing_cloud_account_id\n        ? {\n            marketplace: marketplaceForBilling,\n            subscription: instance.billing_cloud_account_id,\n          }\n        : undefined;\n    enhancedInstance.billing = billing;\n  } catch (e) {\n    console.warn(\n      \"kafkaRequestToKafkaInstance\",\n      `couldn't retrieve the billing info for`,\n      instance\n    );\n  }\n\n  // update the limits\n  try {\n    const limits =\n      instance.instance_type === \"developer\"\n        ? developerPlanInstanceLimits\n        : standardPlanInstanceLimits;\n    const thisInstanceLimits = limits.find((l) => l.id === instance.size_id);\n    if (thisInstanceLimits) {\n      enhancedInstance.size = thisInstanceLimits.displayName;\n      enhancedInstance.ingress = thisInstanceLimits.ingress;\n      enhancedInstance.egress = thisInstanceLimits.egress;\n      enhancedInstance.storage = {\n        type: \"bytes\",\n        value: BigInt(instance.max_data_retention_size?.bytes || 0),\n      };\n      enhancedInstance.connections = thisInstanceLimits.connections;\n      enhancedInstance.connectionRate = thisInstanceLimits.connectionRate;\n      enhancedInstance.maxPartitions = thisInstanceLimits.maxPartitions;\n      enhancedInstance.messageSize = {\n        type: \"bytes\",\n        value: BigInt(thisInstanceLimits.messageSize),\n      };\n    }\n  } catch (e) {\n    console.warn(\n      \"kafkaRequestToKafkaInstance\",\n      `couldn't retrieve the limits info for`,\n      instance\n    );\n  }\n\n  return enhancedInstance;\n}\n\nfunction apiStatusToUIStatus(status: string): Status {\n  const mapping: { [key: string]: Status } = {\n    accepted: \"accepted\",\n    preparing: \"preparing\",\n    provisioning: \"provisioning\",\n    ready: \"ready\",\n    failed: \"degraded\",\n    deprovision: \"deprovision\",\n    deleting: \"deleting\",\n  };\n  return mapping[status] || \"degraded\";\n}\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport type { CreateKafkaInstanceServices } from \"ui\";\nimport { useApi } from \"../useApi\";\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n};\n\n/**\n * Create Kafka instance hook that creates kafka instance\n */\nexport const useCreateInstance =\n  (): CreateKafkaInstanceServices[\"onCreate\"] => {\n    const { kafkasFleet } = useApi();\n\n    return (data, onSuccess, onError) => {\n      const runner = async () => {\n        const apisService = kafkasFleet();\n\n        try {\n          const kafkaRequest = {} as KafkaRequestPayload;\n          kafkaRequest.name = data.name;\n          kafkaRequest.cloud_provider = data.provider;\n          kafkaRequest.region = data.region;\n          kafkaRequest.plan = data.plan + \".\" + data.sizeId;\n          kafkaRequest.billing_model =\n            data.billing === \"prepaid\"\n              ? \"standard\"\n              : data.billing !== undefined\n              ? \"marketplace\"\n              : null;\n          kafkaRequest.billing_cloud_account_id =\n            data.billing && data.billing !== \"prepaid\"\n              ? data.billing.subscription\n              : null;\n          await apisService.createKafka(true, kafkaRequest);\n          onSuccess();\n        } catch (error) {\n          if (isServiceApiError(error)) {\n            const { code } = error?.response?.data || {};\n\n            switch (data.plan) {\n              case \"developer\":\n                switch (code) {\n                  case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                    onError(\"name-taken\");\n                    break;\n\n                  // regardless of the error, let's not give too many details to trial users\n                  default:\n                    onError(\"developer-unavailable\");\n                    break;\n                }\n                break;\n\n              case \"standard\":\n                switch (code) {\n                  case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                    onError(\"name-taken\");\n                    break;\n\n                  case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                    onError(\"region-unavailable\");\n                    break;\n\n                  case ErrorCodes.INSUFFICIENT_QUOTA:\n                    onError(\"insufficient-quota\");\n                    break;\n\n                  default:\n                    console.error(\n                      \"useAvailableProvidersAndDefault\",\n                      \"createKafka unknown error\",\n                      error\n                    );\n                    onError(\"unknown\");\n                }\n                break;\n            }\n          } else {\n            console.error(\n              \"useAvailableProvidersAndDefault\",\n              \"createKafka unexpected error\",\n              error\n            );\n          }\n        }\n      };\n      void runner();\n    };\n  };\n","import type { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport {\n  useProviderRegionSizesFetchQuery,\n  useProvidersWithRegionsFetchQuery,\n  useStandardQuotaFetchQuery,\n} from \"../fetchQueries\";\nimport { kafkaRequestToKafkaInstanceEnhanched } from \"../transformers/kafkaRequestToKafkaInstanceEnhanched\";\n\nexport function useKafkaInstanceTransformer() {\n  const getStandardQuotaQuery = useStandardQuotaFetchQuery();\n  const getProvidersInfo = useProvidersWithRegionsFetchQuery();\n  const getProviderRegionsSizes = useProviderRegionSizesFetchQuery();\n\n  return async function kafkaInstanceTransformer(instance: KafkaRequest) {\n    if (!instance.region) {\n      throw new Error(\n        `Invalid KafkaRequest, empty region: ${JSON.stringify(instance)}`\n      );\n    }\n    const standardQuota = await getStandardQuotaQuery();\n\n    const providersInfo = await getProvidersInfo(\n      instance.billing_model !== \"standard\" ? \"developer\" : \"standard\"\n    );\n    const providerInfo = providersInfo.providers.find(\n      (p) => p.id === instance.cloud_provider\n    );\n    if (!providerInfo) {\n      return Promise.reject(\"Invalid cloud provider\");\n    }\n    const standardPlanLimitsQuery = getProviderRegionsSizes(\n      providerInfo,\n      instance.region,\n      \"standard\"\n    );\n    const developerPlanLimitsQuery = getProviderRegionsSizes(\n      providerInfo,\n      instance.region,\n      \"developer\"\n    );\n    const [standardPlanLimits, developerPlanLimits] = await Promise.all([\n      standardPlanLimitsQuery,\n      developerPlanLimitsQuery,\n    ]);\n    return kafkaRequestToKafkaInstanceEnhanched(\n      instance,\n      standardQuota.marketplaceSubscriptions,\n      developerPlanLimits,\n      standardPlanLimits\n    );\n  };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport { useKafkaInstanceTransformer } from \"./useKafkaInstanceTransformer\";\n\nexport function useKafka(id: string | undefined, suspense = false) {\n  const { refetchInterval } = useApiConfiguration();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  const api = kafkasFleet();\n\n  return useQuery({\n    enabled: Boolean(id),\n    queryKey: kafkaQueries.instance.details({ id }),\n    queryFn: async () => {\n      if (!id) {\n        return Promise.reject(\"Invalid Kafka instance id\");\n      }\n      const instance = await api.getKafkaById(id);\n      return dataMapper(instance.data);\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchKafkasParams } from \"../fetchers\";\nimport { fetchKafkas } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport { useKafkaInstanceTransformer } from \"./useKafkaInstanceTransformer\";\n\nexport function useKafkas(\n  params: Omit<FetchKafkasParams, \"dataMapper\" | \"getKafkas\">\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const queryClient = useQueryClient();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  const api = kafkasFleet();\n\n  return useQuery({\n    queryKey: kafkaQueries.list(params),\n    queryFn: async () => {\n      const res = await fetchKafkas({\n        getKafkas: (...args) => api.getKafkas(...args),\n        dataMapper,\n        ...params,\n      });\n      res.instances.forEach((i) =>\n        queryClient.setQueryData(kafkaQueries.instance.details({ id: i.id }), i)\n      );\n      return res;\n    },\n    refetchInterval,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchTopicParams } from \"../fetchers\";\nimport { fetchTopic } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopic(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchTopicParams,\n    \"getTopic\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { topics } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.topic(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = topics(params.adminUrl);\n\n      return fetchTopic({\n        getTopic: (...args) => api.getTopic(...args),\n        ...params,\n      });\n    },\n    enabled:\n      Boolean(params.adminUrl) &&\n      Boolean(params.id) &&\n      Boolean(params.topicName),\n    refetchInterval,\n    suspense,\n  });\n}\n","import type { TopicsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { topicTransformerFactory } from \"../transformers/topicTransformer\";\n\nexport type FetchTopicParams = {\n  getTopic: TopicsApi[\"getTopic\"];\n  topicName: string;\n  plan: Plan;\n};\n\nexport async function fetchTopic({\n  getTopic,\n  topicName,\n  plan,\n}: FetchTopicParams): Promise<Topic> {\n  const response = await getTopic(topicName);\n  return topicTransformerFactory(plan)(response.data);\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchTopicsParams } from \"../fetchers\";\nimport { fetchTopics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopics(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchTopicsParams,\n    \"getTopics\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { topics } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.topics(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      const api = topics(params.adminUrl);\n\n      return fetchTopics({\n        getTopics: (...args) => api.getTopics(...args),\n        ...params,\n      });\n    },\n    enabled: Boolean(params.adminUrl) && Boolean(params.id),\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchUserAccountsParams } from \"../fetchers\";\nimport { fetchUserAccounts } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useUserAccounts(\n  params: Omit<FetchUserAccountsParams, \"getUserAccounts\">,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { userAccounts } = useApi();\n\n  return useQuery({\n    queryKey: masQueries.userAccounts(params),\n    queryFn: async () => {\n      const api = await userAccounts();\n\n      return fetchUserAccounts({\n        getUserAccounts: (...args) => api.listPrincipals(...args),\n        ...params,\n      });\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { FetchConsumerGroupParams } from \"../fetchers\";\nimport { fetchConsumerGroup } from \"../fetchers\";\n\nexport function useConsumerGroup(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchConsumerGroupParams,\n    \"getConsumerGroupById\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { consumerGroups } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.consumerGroup(params),\n    queryFn: () => {\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      if (!params.consumerGroupId) {\n        return Promise.reject(\"Invalid consumerGroupId\");\n      }\n      const api = consumerGroups(params.adminUrl);\n\n      return fetchConsumerGroup({\n        getConsumerGroupById: (...args) => api.getConsumerGroupById(...args),\n        ...params,\n      });\n    },\n    enabled:\n      Boolean(params.adminUrl) &&\n      Boolean(params.id) &&\n      Boolean(params.consumerGroupId),\n    refetchInterval,\n    suspense,\n  });\n}\n","import type { GroupsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { ConsumerGroup } from \"ui-models/src/models/consumer-group\";\nimport { consumerGroupTransformer } from \"../transformers/ConsumerGroupTransformer\";\n\nexport type FetchConsumerGroupParams = {\n  getConsumerGroupById: GroupsApi[\"getConsumerGroupById\"];\n  consumerGroupId: string;\n};\n\nexport async function fetchConsumerGroup({\n  getConsumerGroupById,\n  consumerGroupId,\n}: FetchConsumerGroupParams): Promise<ConsumerGroup> {\n  const response = await getConsumerGroupById(consumerGroupId);\n  return consumerGroupTransformer(response.data);\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchPermissionsParams } from \"../fetchers\";\nimport { fetchPermissions } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useAcls(\n  params: { id?: string; adminUrl?: string } & Omit<\n    FetchPermissionsParams,\n    \"getAcls\"\n  >,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { acls } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.permissions(params),\n    queryFn: () => {\n      if (!params.adminUrl) {\n        return Promise.reject(\"Invalid adminUrl\");\n      }\n      if (!params.id) {\n        return Promise.reject(\"Invalid id\");\n      }\n      const api = acls(params.adminUrl);\n\n      return fetchPermissions({\n        getAcls: (...args) => api.getAcls(...args),\n      });\n    },\n    enabled: Boolean(params.adminUrl),\n    refetchInterval,\n    suspense,\n  });\n}\n","import type { AclsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Permissions } from \"../../../ui\";\n\nexport type FetchPermissionsParams = {\n  getAcls: AclsApi[\"getAcls\"];\n  page?: number;\n  perPage?: number;\n};\n\nexport async function fetchPermissions({\n  getAcls,\n  page,\n  perPage,\n}: FetchPermissionsParams): Promise<{\n  groups: Permissions[];\n  count: number;\n}> {\n  const response = await getAcls(\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    page,\n    perPage\n  );\n  const groups = (response.data.items || []).map<Permissions>((t) => ({\n    account: t.principal || \"\",\n    permission: { permission: t.permission, operation: t.operation },\n    resource: {\n      resourceName: t.resourceName,\n      patternType: t.patternType,\n      resourceType: t.resourceType,\n    },\n  }));\n  const count = response.data.total;\n  return { count, groups };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport type { FetchServiceAccountsParams } from \"../fetchers\";\nimport { fetchServiceAccounts } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useServiceAccounts(\n  params: Omit<FetchServiceAccountsParams, \"getServiceAccounts\">,\n  suspense = false\n) {\n  const { refetchInterval } = useApiConfiguration();\n  const { serviceAccount } = useApi();\n\n  return useQuery({\n    queryKey: kafkaQueries.instance.serviceAccounts(params),\n    queryFn: () => {\n      const api = serviceAccount();\n\n      return fetchServiceAccounts({\n        getServiceAccounts: (...args) => api.getServiceAccounts(...args),\n        ...params,\n      });\n    },\n    refetchInterval,\n    suspense,\n  });\n}\n","import type { SecurityApi } from \"@rhoas/kafka-management-sdk\";\nimport type { Account } from \"ui\";\nimport { PrincipalType } from \"ui\";\n\nexport type FetchServiceAccountsParams = {\n  getServiceAccounts: SecurityApi[\"getServiceAccounts\"];\n};\n\nexport async function fetchServiceAccounts({\n  getServiceAccounts,\n}: FetchServiceAccountsParams): Promise<{\n  serviceAccounts: Account[];\n}> {\n  const response = await getServiceAccounts();\n  const data = response.data.items;\n  const serviceAccounts: Account[] = data.map((t) => {\n    return {\n      principalType: PrincipalType.ServiceAccount,\n      id: t.id || \"\",\n      displayName: t.name || \"\",\n    };\n  });\n  return { serviceAccounts };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { masQueries } from \"../queryKeys\";\nimport type { KafkaInstanceEnhanced } from \"consoledot-api/src/transformers/kafkaRequestToKafkaInstanceEnhanched\";\nimport { ReadyStatuses, SuspendedStatuses } from \"ui-models/src/models/kafka\";\nimport type { Status } from \"ui-models/src/models/kafka\";\n\nexport function useUser({getUser, suspense}:{getUser:() => Promise<{username: string | undefined, isOrgAdmin:boolean | undefined}>, suspense: boolean}) {\n\n  return useQuery({\n    queryKey: masQueries.user(),\n    queryFn: async () => {\n      const { username, isOrgAdmin } = await getUser();\n\n      if (username === undefined) {\n        return Promise.reject(\"Invalid username\");\n      }\n\n      if (isOrgAdmin === undefined) {\n        return Promise.reject(\"Invalid username\");\n      }\n\n      const canOpenConnection = (instance: KafkaInstanceEnhanced): boolean => {\n        return instance ? ReadyStatuses.includes(instance.status) : false;\n      };\n\n      const isUserOwnerOrAdmin = (owner: string) => {\n        return owner === username || isOrgAdmin;\n      };\n\n      const canChangeOwner = (owner: string, status: Status) => {\n        return (\n          owner === username ||\n          (isOrgAdmin && !SuspendedStatuses.includes(status))\n        );\n      };\n\n      return {\n        username,\n        isOrgAdmin,\n        canOpenConnection,\n        isUserOwnerOrAdmin,\n        canChangeOwner,\n      };\n    },\n    suspense,\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useApiConfiguration } from \"../ApiProvider\";\nimport { masQueries } from \"../queryKeys\";\n\nexport const useSSOProvider = () => {\n  const { basePath } = useApiConfiguration();\n\n  return useQuery({\n    queryKey: masQueries.tokenEndPointUrl(),\n    queryFn: async () => {\n      const response = await fetch(\n        `${basePath}/api/kafkas_mgmt/v1/sso_providers`\n      );\n      const providers = (await response.json()) as { token_url?: string };\n      const { token_url } = providers;\n      if (token_url === undefined || token_url === \"\") {\n        return Promise.reject(\"Invalid SSO token URL\");\n      }\n      return token_url;\n    },\n  });\n};\n","import { useQuery } from \"@tanstack/react-query\";\nimport { fetchSelfTermsReview } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useSelfTermsReview(suspense = false) {\n  const { account } = useApi();\n\n  return useQuery({\n    queryKey: masQueries.selfTermsReview(),\n    queryFn: async () => {\n      const api = account();\n\n      return fetchSelfTermsReview((...args) =>\n        api.apiAuthorizationsV1SelfTermsReviewPost(...args)\n      );\n    },\n    suspense,\n  });\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchKafkas } from \"../fetchers\";\nimport { useKafkaInstanceTransformer } from \"../queries\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport const useDeveloperInstanceAvailabilityFetchQuery = () => {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n  const dataMapper = useKafkaInstanceTransformer();\n\n  return (getUsername: () => Promise<string>) => {\n    const api = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.developerAvailability(),\n      queryFn: async () => {\n        const username = await getUsername();\n        if (!username) {\n          return Promise.reject(new Error(\"Invalid username\"));\n        }\n\n        const { instances } = await queryClient.fetchQuery({\n          queryKey: kafkaQueries.list({\n            direction: \"desc\",\n            sort: \"createdAt\",\n            name: [],\n            status: [],\n            owner: [username],\n            perPage: 1000,\n            page: 1,\n          }),\n          queryFn: () =>\n            fetchKafkas({\n              getKafkas: (...args) => api.getKafkas(...args),\n              dataMapper,\n              direction: \"desc\",\n              sort: \"createdAt\",\n              name: [],\n              status: [],\n              owner: [username],\n              perPage: 1000,\n              page: 1,\n            }),\n          staleTime: Infinity,\n        });\n\n        return instances.some((k) => k?.plan !== \"standard\") !== true;\n      },\n    });\n  };\n};\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { useKafkaInstanceTransformer } from \"../queries\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaFetchQuery() {\n  const queryClient = useQueryClient();\n  const dataMapper = useKafkaInstanceTransformer();\n  const { kafkasFleet } = useApi();\n  return async (id: string) => {\n    const api = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.details({ id }),\n      queryFn: async () => {\n        const instance = await api.getKafkaById(id);\n        return dataMapper(instance.data);\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchKafkaKpis } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaKpisFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (id: string) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.kpi({ id }),\n      queryFn: async () => {\n        return fetchKafkaKpis(\n          (...args) => api.getMetricsByInstantQuery(...args),\n          id\n        );\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchKafkaMetricsProps } from \"../fetchers\";\nimport { fetchKafkaMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useKafkaMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (params: Omit<FetchKafkaMetricsProps, \"getMetricsByRangeQuery\">) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.instance(params),\n      queryFn: async () => {\n        return fetchKafkaMetrics({\n          getMetricsByRangeQuery: (...args) =>\n            api.getMetricsByRangeQuery(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchTopicsMetricsProps } from \"../fetchers\";\nimport { fetchTopicsMetrics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopicsMetricsFetchQuery() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return (params: Omit<FetchTopicsMetricsProps, \"getMetricsByRangeQuery\">) => {\n    const api = kafkasFleet();\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.metrics.topic(params),\n      queryFn: async () => {\n        return fetchTopicsMetrics({\n          getMetricsByRangeQuery: (...args) =>\n            api.getMetricsByRangeQuery(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchTopicsParams } from \"../fetchers\";\nimport { fetchTopics } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useTopicsFetchQuery() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return (\n    params: Omit<FetchTopicsParams, \"getTopics\"> & {\n      id: string;\n      adminUrl: string;\n    }\n  ) => {\n    const api = topics(params.adminUrl);\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.topics(params),\n      queryFn: async () => {\n        return fetchTopics({\n          getTopics: (...args) => api.getTopics(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { FetchMessagesParams } from \"../fetchers\";\nimport { fetchMessages } from \"../fetchers\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useMessagesFetchQuery() {\n  const { records } = useApi();\n  const queryClient = useQueryClient();\n\n  return (\n    params: { id: string; adminUrl: string } & Omit<\n      FetchMessagesParams,\n      \"consumeRecords\"\n    >\n  ) => {\n    const api = records(params.adminUrl);\n\n    return queryClient.fetchQuery({\n      queryKey: kafkaQueries.instance.topicMessages(params),\n      queryFn: () => {\n        if (!params.id) {\n          return Promise.reject(\"Invalid id\");\n        }\n        if (!params.adminUrl) {\n          return Promise.reject(\"Invalid adminUrl\");\n        }\n\n        return fetchMessages({\n          consumeRecords: (...args) => api.consumeRecords(...args),\n          ...params,\n        });\n      },\n    });\n  };\n}\n","import type { Record, RecordsApi } from \"@rhoas/kafka-instance-sdk\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport type { DateIsoString } from \"../../../ui-models/src/types\";\n\nexport type FetchMessagesParams = {\n  consumeRecords: RecordsApi[\"consumeRecords\"];\n  topicName: string;\n  partition?: number;\n  offset?: number;\n  timestamp?: DateIsoString;\n  limit: number;\n};\n\nexport async function fetchMessages({\n  topicName,\n  consumeRecords,\n  partition,\n  offset,\n  timestamp,\n  limit,\n}: FetchMessagesParams): Promise<Message[]> {\n  const response = await consumeRecords(\n    topicName,\n    undefined,\n    limit,\n    undefined,\n    offset,\n    partition,\n    timestamp\n  );\n  return response.data.items.map((m: Record) => ({\n    partition: m.partition,\n    offset: m.offset,\n    timestamp: m.timestamp as DateIsoString,\n    key: m.key,\n    value: m.value,\n    headers: m.headers || {},\n  }));\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfoWithRegionsCapacity } from \"../fetchers\";\nimport { fetchProviderRegionSizes } from \"../fetchers\";\nimport { providerQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useProviderRegionSizesFetchQuery() {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n\n  return (\n    provider: CloudProviderInfoWithRegionsCapacity,\n    region: string,\n    plan: Plan\n  ) => {\n    const kms = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: providerQueries.limits[\n        plan === \"standard\" ? \"standard\" : \"developer\"\n      ]({ provider: provider.id, region }),\n      queryFn: () =>\n        fetchProviderRegionSizes(\n          (...args) => kms.getInstanceTypesByCloudProviderAndRegion(...args),\n          provider,\n          region,\n          plan\n        ),\n      staleTime: Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport { fetchProvidersWithRegions } from \"../fetchers\";\nimport { providerQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useProvidersWithRegionsFetchQuery() {\n  const queryClient = useQueryClient();\n  const { kafkasFleet } = useApi();\n\n  return (plan: Plan) => {\n    const kms = kafkasFleet();\n    return queryClient.fetchQuery({\n      queryKey: providerQueries.list({ plan }),\n      queryFn: () =>\n        fetchProvidersWithRegions(\n          (...args) => kms.getCloudProviders(...args),\n          (...args) => kms.getCloudProviderRegions(...args),\n          plan\n        ),\n      staleTime: Infinity,\n    });\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\nimport { fetchOrganization, fetchStandardQuota } from \"../fetchers\";\nimport { masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useStandardQuotaFetchQuery(skipCache = false) {\n  const queryClient = useQueryClient();\n  const { account } = useApi();\n  const ams = account();\n\n  return async () => {\n    const organization = await queryClient.fetchQuery({\n      queryKey: masQueries.organization(),\n      queryFn: () =>\n        fetchOrganization((...args) =>\n          ams.apiAccountsMgmtV1CurrentAccountGet(...args)\n        ),\n      staleTime: Infinity,\n    });\n    if (!organization) {\n      return Promise.reject(\"Missing organization id\");\n    }\n    return queryClient.fetchQuery({\n      queryKey: masQueries.quota.available({ organization }),\n      queryFn: () =>\n        fetchStandardQuota(\n          (...args) =>\n            ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(...args),\n          organization\n        ),\n      staleTime: skipCache ? undefined : Infinity,\n    });\n  };\n}\n","import type { AppServicesApi } from \"@rhoas/account-management-sdk\";\n\nexport async function fetchOrganization(\n  api: AppServicesApi[\"apiAccountsMgmtV1CurrentAccountGet\"]\n) {\n  const account = await api();\n  const orgId = account?.data?.organization?.id;\n  return orgId;\n}\n","import type { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { APIErrorCodes, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type { CreateKafkaFormData, CreateKafkaInstanceError } from \"ui\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useCreateKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      instance: CreateKafkaFormData;\n      onSuccess: () => void;\n      onError: (error: CreateKafkaInstanceError) => void;\n    }) {\n      const { instance, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      const kafkaRequest: KafkaRequestPayload = {\n        name: instance.name,\n        cloud_provider: instance.provider,\n        region: instance.region,\n      };\n      kafkaRequest.plan = instance.plan + \".\" + instance.sizeId;\n      kafkaRequest.billing_model =\n        instance.billing === \"prepaid\"\n          ? \"standard\"\n          : instance.billing !== undefined\n          ? \"marketplace\"\n          : null;\n      kafkaRequest.billing_cloud_account_id =\n        instance.billing && instance.billing !== \"prepaid\"\n          ? instance.billing.subscription\n          : null;\n      try {\n        await api.createKafka(true, kafkaRequest);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const { code } = error?.response?.data || {};\n\n          switch (instance.plan) {\n            case \"developer\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                // regardless of the error, let's not give too many details to trial users\n                default:\n                  onError(\"developer-unavailable\");\n                  break;\n              }\n              break;\n\n            case \"standard\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                  onError(\"region-unavailable\");\n                  break;\n\n                case ErrorCodes.INSUFFICIENT_QUOTA:\n                  onError(\"insufficient-quota\");\n                  break;\n\n                default:\n                  console.error(\n                    \"useKafkaCreateInstanceMutation\",\n                    \"createKafka unknown error\",\n                    error\n                  );\n                  onError(\"unknown\");\n              }\n              break;\n          }\n        } else {\n          console.error(\n            \"useKafkaCreateInstanceMutation\",\n            \"createKafka unexpected error\",\n            error\n          );\n          onError(\"unknown\");\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n      },\n    }\n  );\n}\n\nconst ErrorCodes = {\n  /** Forbidden to perform this action*/\n  UNAUTHORIZED_USER: APIErrorCodes.ERROR_4,\n  /** Kafka cluster name is already used*/\n  DUPLICATE_INSTANCE_NAME: APIErrorCodes.ERROR_36,\n  /** The maximum number of allowed kafka instances has been reached*/\n  INTERNAL_CAPACITY_ERROR: APIErrorCodes.ERROR_24,\n  /** Insufficient quota*/\n  INSUFFICIENT_QUOTA: APIErrorCodes.ERROR_120,\n  /** Forbidden to create more instances than the maximum allowed*/\n  TRIAL_USED: APIErrorCodes.ERROR_5,\n  /** Failed to check quota*/\n  FAILED_TO_CHECK_QUOTA: APIErrorCodes.ERROR_121,\n  /** Bad request*/\n  OWNER_DOES_NOT_EXIST: APIErrorCodes.ERROR_21,\n} as const;\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries, masQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance(props: {\n      id: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { id, onSuccess, onError } = props;\n      const api = kafkasFleet();\n      try {\n        await api.deleteKafkaById(id, true);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n        void queryClient.invalidateQueries([masQueries.quota._root()]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function kafkaCreateInstance({\n      adminUrl,\n      name,\n      onSuccess,\n      onError,\n    }: {\n      instanceId: string;\n      adminUrl: string;\n      name: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const api = topics(adminUrl);\n      try {\n        await api.deleteTopic(name);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type {\n  KafkaRequest,\n  KafkaUpdateRequest,\n} from \"@rhoas/kafka-management-sdk\";\nimport { getErrorCode, isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport type { AxiosResponse } from \"axios\";\nimport { AxiosError } from \"axios\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\ntype Errors = \"invalid-user\" | \"other\" | \"unknown\";\n\nexport function useUpdateKafkaMutation() {\n  const { kafkasFleet } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation<\n    AxiosResponse<KafkaRequest>,\n    { type: Errors; message?: string },\n    { id: string; updates: KafkaUpdateRequest },\n    unknown\n  >(\n    async function kafkaCreateInstance({ id, updates }) {\n      const api = kafkasFleet();\n      try {\n        return await api.updateKafkaById(id, updates);\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const code = getErrorCode(error);\n\n          switch (code) {\n            case \"KAFKAS-MGMT-21\": {\n              return Promise.reject({\n                type: \"invalid-user\",\n                message: error.response?.data.reason,\n              });\n            }\n            default: {\n              return Promise.reject({\n                type: \"other\",\n                message: error.response?.data.reason,\n              });\n            }\n          }\n        } else if (error instanceof AxiosError) {\n          return Promise.reject({ type: \"unknown\", message: error.message });\n        } else {\n          return Promise.reject({ type: \"unknown\", message: \"unknown\" });\n        }\n      }\n    },\n    {\n      onSuccess: () => {\n        void queryClient.invalidateQueries([kafkaQueries._root()]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeleteConsumerGroupMutation() {\n  const { consumerGroups } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function deleteConsumerGroup(props: {\n      instanceId: string;\n      adminUrl: string;\n      consumerGroupId: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { instanceId, adminUrl, consumerGroupId, onSuccess, onError } =\n        props;\n      const api = consumerGroups(adminUrl);\n      try {\n        await api.deleteConsumerGroupById(consumerGroupId);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useApi } from \"../useApi\";\nimport type { OffsetValue } from \"ui\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\n\nexport function useResetConsumerGroupMutation() {\n  const { consumerGroups } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function consumerGroupResetOffset(props: {\n      instanceId: string;\n      adminUrl: string;\n      consumerGroupId: string;\n      offset: OffsetValue;\n      topic: string;\n      partitions: number[];\n      value?: string;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const {\n        instanceId,\n        adminUrl,\n        consumerGroupId,\n        offset,\n        topic,\n        partitions,\n        value,\n        onSuccess,\n        onError,\n      } = props;\n      const api = consumerGroups(adminUrl);\n      try {\n        await api.resetConsumerGroupOffset(consumerGroupId, {\n          value,\n          offset,\n          topics: [{ topic, partitions }],\n        });\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport type { AclFilter } from \"../types\";\nimport { useApi } from \"../useApi\";\n\nexport function useDeletePermissionsMutation() {\n  const { acls } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function deletePermissions(props: {\n      instanceId: string;\n      adminUrl: string;\n      acl: AclFilter;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, acl, onSuccess, onError } = props;\n      const api = acls(adminUrl);\n      try {\n        await api.deleteAcls(\n          acl.resourceType,\n          acl.resourceName,\n          acl.patternType,\n          acl.principal,\n          acl.operation,\n          acl.permissionType\n        );\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason || \"\";\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance.permissions({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\n\nexport function useUpdatePermissionsMutation() {\n  const { acls } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function updatePermissionsPermissions(props: {\n      instanceId: string;\n      adminUrl: string;\n      acl: AclBinding;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, acl, onSuccess, onError } = props;\n      const api = acls(adminUrl);\n      try {\n        await api.createAcl({\n          resourceName: acl.resourceName,\n          resourceType: acl.resourceType,\n          patternType: acl.patternType,\n          permission: acl.permission,\n          principal: acl.principal,\n          operation: acl.operation,\n        });\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.message;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message);\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type { NewTopicInput, TopicSettings } from \"@rhoas/kafka-instance-sdk\";\nimport {\n  UserEditable,\n  convertToTopicSettings,\n} from \"consoledot-api/src/transformers/topicTransformer\";\nimport { convertToKeyValuePairs } from \"consoledot-api/src/transformers/topicTransformer\";\n\nexport function useCreateTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function createTopic(props: {\n      instanceId: string;\n      adminUrl: string;\n      topic: Topic;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const { adminUrl, topic, onSuccess, onError } = props;\n      const api = topics(adminUrl);\n\n      const createTopic = (topic: Topic): NewTopicInput => {\n        const { name } = topic;\n        const topicSettings = convertToTopicSettings(topic);\n        return {\n          name,\n          settings: topicSettings,\n        };\n      };\n\n      try {\n        await api.createTopic(createTopic(topic));\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message || \"?\");\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import { isServiceApiError } from \"@rhoas/kafka-management-sdk\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { kafkaQueries } from \"../queryKeys\";\nimport { useApi } from \"../useApi\";\nimport type { TopicSettings } from \"@rhoas/kafka-instance-sdk\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport {\n  convertToKeyValuePairs,\n  convertToTopicSettings,\n} from \"consoledot-api/src/transformers/topicTransformer\";\n\nexport function useUpdateTopicMutation() {\n  const { topics } = useApi();\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async function UpdateTopicMutation({\n      adminUrl,\n      topic,\n      onSuccess,\n      onError,\n    }: {\n      instanceId: string;\n      adminUrl: string;\n      topic: Topic;\n      onSuccess: () => void;\n      onError: (code: string, message: string) => void;\n    }) {\n      const api = topics(adminUrl);\n\n      const updateTopic = (topic: Topic) => {\n        const topicSettings = convertToTopicSettings(topic);\n        return topicSettings;\n      };\n\n      try {\n        await api.updateTopic(topic.name || \"\", updateTopic(topic));\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const message = error?.response?.data.reason;\n          const { code } = error?.response?.data || {};\n\n          onError(code || \"?\", message || \"?\");\n        }\n      }\n    },\n    {\n      onSuccess: (_, { adminUrl, instanceId }) => {\n        void queryClient.invalidateQueries([\n          kafkaQueries.instance._root({\n            id: instanceId,\n            adminUrl,\n          }),\n        ]);\n      },\n    }\n  );\n}\n","import type {\n  AclOperationFilter,\n  AclPatternTypeFilter,\n  AclPermissionTypeFilter,\n  AclResourceTypeFilter,\n} from \"@rhoas/kafka-instance-sdk\";\nimport {\n  ConsumerGroupOrderKey,\n  TopicOrderKey,\n} from \"@rhoas/kafka-instance-sdk\";\nimport type { RangeQuery } from \"@rhoas/kafka-management-sdk\";\n\nexport type NoUndefinedField<T> = {\n  [P in keyof T]-?: NoUndefinedField<NonNullable<T[P]>>;\n};\n\nexport type SafeRangeQuery = NoUndefinedField<RangeQuery>;\n\nexport const KafkaInstancesSortableColumns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"provider\",\n  \"region\",\n] as const;\n\nexport type KafkaInstancesSortableColumn =\n  (typeof KafkaInstancesSortableColumns)[number];\n\nexport const KafkaTopicsSortableColumns = [\n  ...Object.values(TopicOrderKey),\n] as const;\n\nexport type KafkaTopicsSortableColumn =\n  (typeof KafkaTopicsSortableColumns)[number];\n\nexport const KafkaConsumerGroupSortableColumns = [\n  ...Object.values(ConsumerGroupOrderKey),\n] as const;\n\nexport type KafkaConsumerGroupSortableColumn =\n  (typeof KafkaConsumerGroupSortableColumns)[number];\n\nexport type AclFilter = {\n  resourceType?: AclResourceTypeFilter;\n  resourceName?: string;\n  patternType?: AclPatternTypeFilter;\n  principal?: string;\n  operation?: AclOperationFilter;\n  permissionType?: AclPermissionTypeFilter;\n};\n","import type { Topic as ApiTopic } from \"@rhoas/kafka-instance-sdk/dist/generated/model/topic\";\nimport type { Plan } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type {\n  TopicConfig,\n  TopicConfigField,\n} from \"ui-models/src/models/topic-config\";\nimport type { Bytes, Milliseconds } from \"ui-models/src/types\";\nimport type { TopicSettings } from \"@rhoas/kafka-instance-sdk\";\n\nexport type UserEditable = Pick<\n  TopicConfig,\n  \"retention.ms\" | \"retention.bytes\" | \"cleanup.policy\"\n>;\n\nexport const developerDefaults: TopicConfig = {\n  \"cleanup.policy\": \"delete\",\n  \"delete.retention.ms\": { type: \"ms\", value: BigInt(\"86400000\") },\n  \"max.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"max.message.bytes\": { type: \"bytes\", value: BigInt(\"1048588\") },\n  \"message.downconversion.enable\": true,\n  \"message.timestamp.difference.max.ms\": {\n    type: \"ms\",\n    value: BigInt(\"9223372036854775807\"),\n  },\n  \"message.timestamp.type\": \"CreateTime\",\n  \"min.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"retention.bytes\": { type: \"bytes\", value: BigInt(\"-1\") },\n  \"retention.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"segment.bytes\": { type: \"bytes\", value: BigInt(\"1073741824\") },\n  \"segment.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"compression.type\": \"producer\",\n  \"file.delete.delay.ms\": { type: \"ms\", value: BigInt(\"60000\") },\n  \"flush.messages\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"flush.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"index.interval.bytes\": { type: \"bytes\", value: BigInt(\"4096\") },\n  \"message.format.version\": \"3.0-IV1\",\n  \"min.cleanable.dirty.ratio\": 0.5,\n  \"min.insync.replicas\": 1,\n  \"segment.index.bytes\": { type: \"bytes\", value: BigInt(\"10485760\") },\n  \"segment.jitter.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"unclean.leader.election.enable\": false,\n  preallocate: false,\n} as const;\n\nexport const standardDefaults: TopicConfig = {\n  \"cleanup.policy\": \"delete\",\n  \"delete.retention.ms\": { type: \"ms\", value: BigInt(\"86400000\") },\n  \"max.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"max.message.bytes\": { type: \"bytes\", value: BigInt(\"1048588\") },\n  \"message.downconversion.enable\": true,\n  \"message.timestamp.difference.max.ms\": {\n    type: \"ms\",\n    value: BigInt(\"9223372036854775807\"),\n  },\n  \"message.timestamp.type\": \"CreateTime\",\n  \"min.compaction.lag.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"retention.bytes\": { type: \"bytes\", value: BigInt(\"-1\") },\n  \"retention.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"segment.bytes\": { type: \"bytes\", value: BigInt(\"1073741824\") },\n  \"segment.ms\": { type: \"ms\", value: BigInt(\"604800000\") },\n  \"compression.type\": \"producer\",\n  \"file.delete.delay.ms\": { type: \"ms\", value: BigInt(\"60000\") },\n  \"flush.messages\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"flush.ms\": { type: \"ms\", value: BigInt(\"9223372036854775807\") },\n  \"index.interval.bytes\": { type: \"bytes\", value: BigInt(\"4096\") },\n  \"message.format.version\": \"3.0-IV1\",\n  \"min.cleanable.dirty.ratio\": 0.5,\n  \"min.insync.replicas\": 2,\n  \"segment.index.bytes\": { type: \"bytes\", value: BigInt(\"10485760\") },\n  \"segment.jitter.ms\": { type: \"ms\", value: BigInt(\"0\") },\n  \"unclean.leader.election.enable\": false,\n  preallocate: false,\n} as const;\n\nexport function topicTransformerFactory(plan: Plan) {\n  const d = plan === \"developer\" ? developerDefaults : standardDefaults;\n\n  return function topicTransformer(t: ApiTopic): Topic {\n    if (!t.name) {\n      throw new Error(`Invalid topic, name is empty: ${JSON.stringify(t)}`);\n    }\n    const cm = Object.fromEntries<string>(\n      t.config?.map((c) => [c.key as TopicConfigField, c.value]) || []\n    );\n    const config: TopicConfig = {\n      \"cleanup.policy\": cm[\"cleanup.policy\"] as TopicConfig[\"cleanup.policy\"],\n      \"delete.retention.ms\": configValueToMilliseconds(\n        cm[\"delete.retention.ms\"],\n        d[\"delete.retention.ms\"]\n      ),\n      \"max.compaction.lag.ms\": configValueToMilliseconds(\n        cm[\"max.compaction.lag.ms\"],\n        d[\"max.compaction.lag.ms\"]\n      ),\n      \"max.message.bytes\": configValueToBytes(\n        cm[\"max.message.bytes\"],\n        d[\"max.message.bytes\"]\n      ),\n      \"message.downconversion.enable\": configValueToBoolean(\n        cm[\"message.downconversion.enable\"],\n        d[\"message.downconversion.enable\"]\n      ),\n      \"message.timestamp.difference.max.ms\": configValueToMilliseconds(\n        cm[\"message.timestamp.difference.max.ms\"],\n        d[\"message.timestamp.difference.max.ms\"]\n      ),\n      \"message.timestamp.type\": cm[\n        \"message.timestamp.type\"\n      ] as TopicConfig[\"message.timestamp.type\"],\n      \"min.compaction.lag.ms\": configValueToMilliseconds(\n        cm[\"min.compaction.lag.ms\"],\n        d[\"min.compaction.lag.ms\"]\n      ),\n      \"retention.bytes\": configValueToBytes(\n        cm[\"retention.bytes\"],\n        d[\"retention.bytes\"]\n      ),\n      \"retention.ms\": configValueToMilliseconds(\n        cm[\"retention.ms\"],\n        d[\"retention.ms\"]\n      ),\n      \"segment.bytes\": configValueToBytes(\n        cm[\"segment.bytes\"],\n        d[\"segment.bytes\"]\n      ),\n      \"segment.ms\": configValueToMilliseconds(\n        cm[\"segment.ms\"],\n        d[\"segment.ms\"]\n      ),\n      \"compression.type\": cm[\n        \"compression.type\"\n      ] as TopicConfig[\"compression.type\"],\n      \"file.delete.delay.ms\": configValueToMilliseconds(\n        cm[\"file.delete.delay.ms\"],\n        d[\"file.delete.delay.ms\"]\n      ),\n      \"flush.messages\": configValueToMilliseconds(\n        cm[\"flush.messages\"],\n        d[\"flush.messages\"]\n      ),\n      \"flush.ms\": configValueToMilliseconds(cm[\"flush.ms\"], d[\"flush.ms\"]),\n      \"follower.replication.throttled.replicas\":\n        cm[\"follower.replication.throttled.replicas\"],\n      \"index.interval.bytes\": configValueToBytes(\n        cm[\"index.interval.bytes\"],\n        d[\"index.interval.bytes\"]\n      ),\n      \"leader.replication.throttled.replicas\":\n        cm[\"leader.replication.throttled.replicas\"],\n      \"message.format.version\": cm[\"message.format.version\"],\n      \"min.cleanable.dirty.ratio\": configValueToNumber(\n        cm[\"min.cleanable.dirty.ratio\"],\n        d[\"min.cleanable.dirty.ratio\"]\n      ),\n      \"min.insync.replicas\": configValueToNumber(\n        cm[\"min.insync.replicas\"],\n        d[\"min.insync.replicas\"]\n      ),\n      \"segment.index.bytes\": configValueToBytes(\n        cm[\"segment.index.bytes\"],\n        d[\"segment.index.bytes\"]\n      ),\n      \"segment.jitter.ms\": configValueToMilliseconds(\n        cm[\"segment.jitter.ms\"],\n        d[\"segment.jitter.ms\"]\n      ),\n      \"unclean.leader.election.enable\": configValueToBoolean(\n        cm[\"unclean.leader.election.enable\"],\n        d[\"unclean.leader.election.enable\"]\n      ),\n      preallocate: configValueToBoolean(cm[\"preallocate\"], d[\"preallocate\"]),\n    };\n    return {\n      name: t.name,\n      partitions: t.partitions || [],\n      ...config,\n    };\n  };\n}\n\nfunction configValueToMilliseconds(\n  value: string,\n  defaultIfEmpty: Milliseconds\n): Milliseconds {\n  return value && value.trim().length > 0\n    ? { type: \"ms\", value: BigInt(value.trim()) }\n    : defaultIfEmpty;\n}\n\nfunction configValueToBytes(value: string, defaultIfEmpty: Bytes): Bytes {\n  return value && value.trim().length > 0\n    ? { type: \"bytes\", value: BigInt(value.trim()) }\n    : defaultIfEmpty;\n}\n\nfunction configValueToNumber(value: string, defaultIfError: number): number {\n  return parseInt(value, 10) || defaultIfError;\n}\n\nfunction configValueToBoolean(value: string, defaultIfError: boolean): boolean {\n  try {\n    const v: unknown = JSON.parse(value);\n    if (typeof v === \"boolean\") {\n      return v;\n    }\n  } catch {\n    // not a boolean, fallback to the default\n  }\n  return defaultIfError;\n}\n\nexport const convertToKeyValuePairs = (inputObj: UserEditable) => {\n  const keyValuePairs: Array<{ key: string; value: string }> = [];\n  if (inputObj[\"retention.ms\"]) {\n    keyValuePairs.push({\n      key: \"retention.ms\",\n      value: inputObj[\"retention.ms\"].value.toString(),\n    });\n  }\n\n  if (inputObj[\"retention.bytes\"]) {\n    keyValuePairs.push({\n      key: \"retention.bytes\",\n      value: inputObj[\"retention.bytes\"].value.toString(),\n    });\n  }\n\n  if (inputObj[\"cleanup.policy\"]) {\n    keyValuePairs.push({\n      key: \"cleanup.policy\",\n      value: inputObj[\"cleanup.policy\"],\n    });\n  }\n\n  return keyValuePairs;\n};\n\nexport const convertToTopicSettings = (topic: Topic): TopicSettings => {\n  const { partitions, ...config } = topic;\n  const configEntries = convertToKeyValuePairs(config);\n  const topicSettings: TopicSettings = {\n    numPartitions: partitions.length,\n    config: configEntries,\n  };\n  return topicSettings;\n};\n","const REACT_QUERY_DEVTOOLS = \"mas.devtools\";\nconst METRICS_LAG_ALERT = \"mas.rhosak.metrics.lag-alert-closed\";\n\nexport function isReactQueryDevToolsEanbled() {\n  return localStorage.getItem(REACT_QUERY_DEVTOOLS) === \"true\";\n}\n\nexport function metricsIsLagAlertsDismissed() {\n  return localStorage.getItem(METRICS_LAG_ALERT) === \"true\";\n}\n\nexport function metricsDismissLagAlerts() {\n  return localStorage.setItem(METRICS_LAG_ALERT, \"true\");\n}\n","import type { Bytes, DateIsoString } from \"../types\";\n\n/**\n * All the details abut a Kafka instance.\n *\n * Unless differently specified, the values marked as accepting `undefined`\n * will come from extra API calls.\n */\nexport type Kafka = {\n  id: string;\n  name: string;\n  createdAt: DateIsoString;\n  updatedAt: DateIsoString;\n  expiryDate: DateIsoString | undefined;\n  owner: string;\n  provider: CloudProvider;\n  region: CloudRegion;\n  status: Status;\n  plan: Plan;\n  size: string | undefined;\n  ingress: number | undefined;\n  egress: number | undefined;\n  storage: Bytes | undefined;\n  maxPartitions: number | undefined;\n  connections: number | undefined;\n  connectionRate: number | undefined;\n  messageSize: Bytes | undefined;\n  billing: \"prepaid\" | MarketplaceSubscription | undefined;\n  az: AZ;\n\n  version: string;\n\n  bootstrapUrl: string | undefined;\n  adminUrl: string | undefined;\n};\nexport type KafkaField = keyof Kafka;\n\n/**\n * Supported Cloud Providers. Extend this to add a new provider, then follow\n * Typescript errors to find where extra information need to be added (images,\n * translations).\n */\nexport type CloudProvider = \"aws\" | \"gcp\" | \"azure\";\n\n/**\n * A Cloud Region. Since this varies between Cloud Providers and has no extra\n * visual attached, we take its name from the API and do no further\n * transformation.\n */\nexport type CloudRegion = string;\n/**\n * Cloud provider multi availability zone\n */\nexport type AZ = \"single\" | \"multi\";\n/**\n * A number that describes how much does an instance cost to create\n */\nexport type Quota = number;\n/**\n * The capabilities of an instance, and its quota cost. Some sizes might not be\n * enabled, eg. because temporarily out of capacity\n */\nexport type Size = {\n  id: string;\n  displayName: string;\n  status: \"stable\" | \"preview\";\n  quota: Quota;\n  ingress: number;\n  egress: number;\n  storage: number;\n  connections: number;\n  connectionRate: number;\n  maxPartitions: number;\n  messageSize: number;\n  isDisabled: boolean;\n};\n/**\n * Paid for instances are `standard`, evaluation instances are `developer`.\n * `standard` instances have a `Quota` associated, and bigger sizes.\n * `developer` instances are free to be created (up to 1 per user), have a\n * single, smaller size option than `standard` ones, and they expire after a\n * few hours.\n *\n * Note: a new kind of evaluation instance is being studied. They will have a\n * long expiration period and bigger sizes.\n */\nexport type Plan = \"standard\" | \"developer\";\n/**\n * All the statuses an instance can be. If new statuses are added, ensure to\n * add them to the relevant status group (`ReadyStatuses` etc.).\n */\nexport const Statuses = [\n  \"ready\",\n  \"degraded\",\n  \"accepted\",\n  \"provisioning\",\n  \"preparing\",\n  \"deprovision\",\n  \"deleting\",\n  \"suspended\",\n  \"suspending\",\n  \"resuming\",\n] as const;\n\nexport type Status = (typeof Statuses)[number];\n\nexport const CreatingStatuses: readonly Status[] = [\n  \"accepted\",\n  \"provisioning\",\n  \"preparing\",\n];\nexport const ReadyStatuses: readonly Status[] = [\"ready\"];\nexport const DegradedStatuses: readonly Status[] = [\"degraded\"];\nexport const SuspendingStatuses: readonly Status[] = [\"suspending\"];\nexport const SuspendedStatuses: readonly Status[] = [\"suspended\"];\nexport const DeletingStatuses: readonly Status[] = [\"deleting\", \"deprovision\"];\nexport const ResumingStatuses: readonly Status[] = [\"resuming\"];\n\nexport const SimplifiedStatuses = {\n  creating: CreatingStatuses,\n  ready: ReadyStatuses,\n  degraded: DegradedStatuses,\n  suspended: SuspendedStatuses,\n  deleting: DeletingStatuses,\n  resuming: ResumingStatuses,\n  suspending: SuspendingStatuses,\n} as const;\nexport type SimplifiedStatus = keyof typeof SimplifiedStatuses;\n\n/**\n * A list of marketplaces where an instance can be billed to\n */\nexport type MarketPlace = CloudProvider | \"rhm\";\n/**\n * List of marketplaces where a user has some subscription\n */\nexport type MarketPlaceSubscriptions = {\n  marketplace: MarketPlace;\n  subscriptions: string[];\n};\n/**\n * A specific marketplace's subscription, assigned as billing option to an\n * instance.\n *\n * Note: the API will provide only the `subscription`; the `MarketPlace` will\n * have to be fetched querying for the `subscription`.\n */\nexport type MarketplaceSubscription = {\n  marketplace: MarketPlace;\n  subscription: string;\n};\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\n\ntype ConsumerGroupPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ConsumerGroupPopover: FunctionComponent<\n  ConsumerGroupPopoverProps\n> = ({ title, description }) => {\n  return (\n    <Popover\n      aria-label=\"Consumer groups popover\"\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon />\n    </Popover>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type ConsumerGroupStateLabelProps = {\n  state: State;\n};\n\nexport const ConsumerGroupStateLabel: FunctionComponent<\n  ConsumerGroupStateLabelProps\n> = ({ state }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  switch (state) {\n    case \"Stable\":\n      return t(\"consumerGroup.state.stable\");\n    case \"Empty\":\n      return t(\"consumerGroup.state.empty\");\n    case \"Dead\":\n      return t(\"consumerGroup.state.dead\");\n    case \"CompletingRebalance\":\n      return t(\"consumerGroup.state.completing_rebalance\");\n    case \"PreparingRebalance\":\n      return t(\"consumerGroup.state.preparing_rebalance\");\n    case \"Unknown\":\n      return t(\"consumerGroup.state.unknown\");\n    default:\n      return null;\n  }\n};\n","import {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Stack,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupPopover } from \"./ConsumerGroupPopover\";\nimport { ConsumerGroupStateLabel } from \"./ConsumerGroupState\";\n\nexport type ConsumerGroupByKafkaProps = {\n  state: State;\n  consumers: Consumer[];\n  activeMembers: number;\n  partitionsWithLag: number;\n};\n\nexport const ConsumerGroupByKafka: FunctionComponent<\n  ConsumerGroupByKafkaProps\n> = ({ state, consumers, activeMembers, partitionsWithLag }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const columnNames = {\n    topic: t(\"topic.topic\"),\n    partition: t(\"consumerGroup.partition\"),\n    consumer_id: t(\"consumerGroup.consumer_id\"),\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n  };\n\n  return (\n    <Stack hasGutter>\n      <DescriptionList\n        columnModifier={{ lg: \"3Col\" }}\n        className={\"pf-m-display-2xl\"}\n      >\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.active_members\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {activeMembers}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.partitions_with_lag\")}{\" \"}\n            <ConsumerGroupPopover\n              title={t(\"consumerGroup.partitions_with_lag_name\")}\n              description={t(\"consumerGroup.partitions_with_lag_description\")}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {partitionsWithLag}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.state_header\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <ConsumerGroupStateLabel state={state} />\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TableComposable\n        aria-label={t(\"consumerGroup.consumer_group_info_table_aria\")}\n        variant={TableVariant.compact}\n      >\n        <Thead noWrap>\n          <Tr>\n            <Th width={20}>{columnNames.topic}</Th>\n            <Th width={20}>{columnNames.partition}</Th>\n            <Th width={20}>{columnNames.consumer_id}</Th>\n            <Th width={20}>{columnNames.current_offset}</Th>\n            <Th width={20}>{columnNames.log_end_offset}</Th>\n            <Th width={20}>{columnNames.offset_lag}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {consumers.map(\n            ({\n              groupId,\n              partition,\n              topic,\n              memberId,\n              offset,\n              logEndOffset,\n              lag,\n            }) => {\n              return (\n                <Tr key={groupId}>\n                  <Td dataLabel={columnNames.topic}>{topic}</Td>\n                  <Td dataLabel={columnNames.partition}>{partition}</Td>\n                  <Td dataLabel={columnNames.consumer_id}>\n                    {memberId ? (\n                      `${groupId}\\n${memberId}`\n                    ) : (\n                      <i>{t(\"consumerGroup.unassigned\")}</i>\n                    )}\n                  </Td>\n                  <Td dataLabel={columnNames.current_offset}>{offset}</Td>\n                  <Td dataLabel={columnNames.log_end_offset}>{logEndOffset}</Td>\n                  <Td dataLabel={columnNames.offset_lag}>{lag}</Td>\n                </Tr>\n              );\n            }\n          )}\n        </Tbody>\n      </TableComposable>\n    </Stack>\n  );\n};\n","import {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Stack,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupPopover } from \"./ConsumerGroupPopover\";\nimport { ConsumerGroupStateLabel } from \"./ConsumerGroupState\";\n\nexport type ConsumerGroupByTopicProps = {\n  state: State;\n  consumers: Consumer[];\n  activeMembers: number;\n  partitionsWithLag: number;\n};\n\nexport const ConsumerGroupByTopic: FunctionComponent<\n  ConsumerGroupByTopicProps\n> = ({ state, consumers, activeMembers, partitionsWithLag }) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const columnNames = {\n    partition: t(\"consumerGroup.partition\"),\n    consumer_id: t(\"consumerGroup.consumer_id\"),\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n  };\n\n  return (\n    <Stack hasGutter>\n      <DescriptionList\n        columnModifier={{ lg: \"3Col\" }}\n        className={\"pf-m-display-2xl\"}\n      >\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.active_members_for_topic\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {activeMembers}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.partitions_with_lag_for_topic\")}{\" \"}\n            <ConsumerGroupPopover\n              title={t(\"consumerGroup.partitions_with_lag_name\")}\n              description={t(\"consumerGroup.partitions_with_lag_description\")}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {partitionsWithLag}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {t(\"consumerGroup.state_header\")}\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {<ConsumerGroupStateLabel state={state} />}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TableComposable\n        aria-label={t(\"consumerGroup.consumer_group_info_table_aria\")}\n        variant={TableVariant.compact}\n      >\n        <Thead noWrap>\n          <Tr>\n            <Th key={columnNames.partition} width={20}>\n              {columnNames.partition}\n            </Th>\n            <Th key={columnNames.consumer_id} width={20}>\n              {columnNames.consumer_id}\n            </Th>\n            <Th key={columnNames.current_offset} width={20}>\n              {columnNames.current_offset}\n            </Th>\n            <Th key={columnNames.log_end_offset} width={20}>\n              {columnNames.log_end_offset}\n            </Th>\n            <Th key={columnNames.offset_lag} width={20}>\n              {columnNames.offset_lag}\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {consumers.map(\n            ({ groupId, partition, memberId, offset, logEndOffset, lag }) => {\n              return (\n                <Tr key={groupId}>\n                  <Td dataLabel={columnNames.partition}>{partition}</Td>\n                  <Td dataLabel={columnNames.consumer_id}>\n                    {memberId ? (\n                      `${groupId}\\n${memberId}`\n                    ) : (\n                      <i>{t(\"consumerGroup.unassigned\")}</i>\n                    )}{\" \"}\n                  </Td>\n                  <Td dataLabel={columnNames.current_offset}>{offset}</Td>\n                  <Td dataLabel={columnNames.log_end_offset}>{logEndOffset}</Td>\n                  <Td dataLabel={columnNames.offset_lag}>{lag}</Td>\n                </Tr>\n              );\n            }\n          )}\n        </Tbody>\n      </TableComposable>\n    </Stack>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupByKafka } from \"./ConsumerGroupByKafka\";\nimport { ConsumerGroupByTopic } from \"./ConsumerGroupByTopic\";\n\nexport type ConsumerGroupDetailsProps = {\n  consumerGroupByTopic: boolean;\n  state: State;\n  activeMembers: number;\n  partitionsWithLag: number;\n  consumers: Consumer[];\n};\n\nexport const ConsumerGroupDetails: FunctionComponent<\n  ConsumerGroupDetailsProps\n> = ({\n  consumerGroupByTopic,\n  state,\n  consumers,\n  activeMembers,\n  partitionsWithLag,\n}) => {\n  return (\n    <div>\n      {consumerGroupByTopic ? (\n        <ConsumerGroupByTopic\n          state={state}\n          consumers={consumers}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n        />\n      ) : (\n        <ConsumerGroupByKafka\n          state={state}\n          consumers={consumers}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n        />\n      )}\n    </div>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ConsumerGroupEmptyState: FunctionComponent = () => {\n  const { t } = useTranslation([\"kafka\"]);\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel={\"h1\"} size={TitleSizes.lg}>\n        {t(\"consumerGroup.empty_consumer_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"consumerGroup.empty_consumer_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { OffsetValue } from \"../types\";\n\nexport type OffsetSelectProps = {\n  value: OffsetValue;\n  onChange: (value: OffsetValue) => void;\n};\n\nexport const OffsetSelect: FunctionComponent<OffsetSelectProps> = ({\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const offsetValueOption: { [key in OffsetValue]: string } = {\n    absolute: t(\"consumerGroup.offset.absolute\"),\n    latest: t(\"consumerGroup.offset.latest\"),\n    earliest: t(\"consumerGroup.offset.earliest\"),\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChange(selection as OffsetValue);\n    setIsOpen(false);\n  };\n\n  const makeOptions = () => {\n    return Object.entries(offsetValueOption).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <Select\n      aira-label={t(\"consumerGroup.reset_offset_new_offset_label\")}\n      toggleAriaLabel={t(\"consumerGroup.reset_offset_new_offset_label\")}\n      id={\"offset-select\"}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      variant={SelectVariant.single}\n      isOpen={isOpen}\n      placeholderText={t(\"consumerGroup.select_offset\")}\n      selections={value}\n      menuAppendTo={\"parent\"}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type TopicSelectProps = {\n  value: string;\n  topics: string[];\n  onChange: (topic: string) => void;\n};\n\nexport const TopicSelect: FunctionComponent<TopicSelectProps> = ({\n  topics,\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, topic) => {\n    onChange(topic as string);\n    setIsOpen(false);\n  };\n\n  return (\n    <Select\n      aira-label={t(\"consumerGroup.reset_offset_topic_label\")}\n      toggleAriaLabel={t(\"consumerGroup.reset_offset_topic_label\")}\n      id={\"topic-select\"}\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      selections={value}\n      placeholderText={t(\"consumerGroup.select_topic\")}\n      menuAppendTo={\"parent\"}\n      isDisabled={topics.length <= 0}\n    >\n      {topics.map((topic, index) => (\n        <SelectOption key={index} value={topic}>\n          {topic}\n        </SelectOption>\n      ))}\n    </Select>\n  );\n};\n","import {\n  Alert,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n  TextInput,\n} from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport { useCallback, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer } from \"ui-models/src/models/consumer-group\";\nimport \"../ConsumerGroup.css\";\nimport type { OffsetValue } from \"../types\";\nimport { OffsetSelect } from \"./OffsetSelect\";\nimport { TopicSelect } from \"./TopicSelect\";\nimport type { FunctionComponent } from \"react\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type ConsumerGroupResetOffsetProps = {\n  isModalOpen: boolean;\n  state: State;\n  groupId: string;\n  topics: string[];\n  consumers: Consumer[];\n  onClickClose: () => void;\n  onClickResetOffset: (\n    topic: string,\n    offset: OffsetValue,\n    partitions: number[],\n    customOffset: string\n  ) => void;\n  disableFocusTrap?: boolean;\n  appendTo?: () => HTMLElement;\n};\n\nexport const ConsumerGroupResetOffset: FunctionComponent<\n  ConsumerGroupResetOffsetProps\n> = ({\n  groupId,\n  topics,\n  onClickClose,\n  isModalOpen,\n  onClickResetOffset,\n  disableFocusTrap,\n  appendTo,\n  consumers,\n  state,\n}) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const [selectedTopic, setSelectedTopic] = useState<string>(\"\");\n  const [selectedOffset, setSelectedOffset] = useState<OffsetValue>(\"absolute\");\n  const [customOffsetValue, setcustomOffsetValue] = useState<string>();\n\n  const [isResetAccepted, setIsResetAccepted] = useState<boolean>(false);\n\n  const [selectedConsumer, setSelectedConsumer] = useState<Consumer[]>([]);\n\n  const isDisconnected = state !== \"Stable\";\n\n  const consumerList =\n    consumers.filter((consumer) => consumer.topic === selectedTopic) || [];\n\n  const isResetOffsetDisabled =\n    !selectedTopic ||\n    !selectedOffset ||\n    !isResetAccepted ||\n    !isDisconnected ||\n    selectedConsumer.length === 0;\n\n  const tableColumns = {\n    partition: t(\"consumerGroup.partition\"),\n    clientId: `${t(\"consumerGroup.client_id\")} + ${t(\n      \"consumerGroup.member_id\"\n    )}`,\n    current_offset: t(\"consumerGroup.current_offset\"),\n    log_end_offset: t(\"consumerGroup.log_end_offset\"),\n    offset_lag: t(\"consumerGroup.offset_lag\"),\n    new_offset: t(\"consumerGroup.new_offset\"),\n  };\n\n  const areAllConsumerSelected =\n    selectedConsumer.length === consumerList.length;\n\n  const onSelectAllConsumer = (isSelecting = true) => {\n    setSelectedConsumer(isSelecting ? consumerList : []);\n  };\n\n  const isConsumerSelected = (consumer: Consumer) => {\n    return selectedConsumer.includes(consumer);\n  };\n  const onSelect = (consumer: Consumer, isSelecting = true) => {\n    setSelectedConsumer(\n      isSelecting\n        ? [...selectedConsumer, consumer]\n        : selectedConsumer.filter((r) => r !== consumer)\n    );\n  };\n\n  const onResetOffset = useCallback(() => {\n    const partitions = selectedConsumer.map(({ partition }) => partition);\n    onClickResetOffset(\n      selectedTopic,\n      selectedOffset,\n      partitions,\n      customOffsetValue || \"0\"\n    );\n  }, [\n    onClickResetOffset,\n    selectedTopic,\n    selectedOffset,\n    selectedConsumer,\n    customOffsetValue,\n  ]);\n\n  return (\n    <Modal\n      variant={ModalVariant.large}\n      isOpen={isModalOpen}\n      aria-label={t(\"consumerGroup.reset_offset_modal_label\")}\n      title={t(\"consumerGroup.reset_offset\")}\n      showClose={true}\n      onClose={onClickClose}\n      aria-describedby=\"modal-message\"\n      disableFocusTrap={disableFocusTrap}\n      appendTo={appendTo}\n      position=\"top\"\n      actions={[\n        <Button\n          variant=\"danger\"\n          key={1}\n          isDisabled={isResetOffsetDisabled}\n          onClick={onResetOffset}\n        >\n          {t(\"consumerGroup.reset_offset\")}\n        </Button>,\n        <Button variant=\"link\" key={2} onClick={onClickClose}>\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <Form isHorizontal>\n            <FormGroup\n              className=\"mas--ConsumerGroupResetOffset-form-group--readonly\"\n              label={t(\"consumerGroup.reset_offset_consumer_group_label\")}\n              fieldId=\"consumer-group-input\"\n            >\n              <TextInput\n                readOnlyVariant={\"default\"}\n                type=\"text\"\n                name={t(\"consumerGroup.reset_offset_consumer_group_label\")}\n                id={\"consumer-group-input\"}\n                value={groupId}\n              />\n            </FormGroup>\n            {isDisconnected && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_topic_label\")}\n                fieldId=\"topic-select\"\n              >\n                <TopicSelect\n                  value={selectedTopic}\n                  topics={topics}\n                  onChange={setSelectedTopic}\n                />\n              </FormGroup>\n            )}\n            {isDisconnected && selectedTopic && (\n              <FormGroup\n                label={t(\"consumerGroup.reset_offset_new_offset_label\")}\n                fieldId=\"offset-select\"\n              >\n                <OffsetSelect\n                  value={selectedOffset}\n                  onChange={setSelectedOffset}\n                />\n              </FormGroup>\n            )}\n            {isDisconnected &&\n              selectedTopic &&\n              selectedOffset === \"absolute\" && (\n                <FormGroup\n                  label={t(\"consumerGroup.reset_offset_custom_offset_label\")}\n                  fieldId=\"custom-offset-input\"\n                >\n                  <TextInput\n                    id=\"custom-offset-input\"\n                    name={t(\"consumerGroup.reset_offset_custom_offset_label\")}\n                    value={customOffsetValue}\n                    onChange={setcustomOffsetValue}\n                    type=\"number\"\n                  />\n                </FormGroup>\n              )}\n          </Form>\n        </StackItem>\n        <StackItem>\n          {!isDisconnected && (\n            <Alert\n              className=\"modal-alert\"\n              variant=\"danger\"\n              isInline\n              title={t(\"consumerGroup.reset_offset_connected_alert_title\")}\n            >\n              <p>{t(\"consumerGroup.reset_offset_connected_alert_body\")}</p>\n            </Alert>\n          )}\n        </StackItem>\n        <StackItem>\n          {isDisconnected && consumerList.length > 0 && selectedTopic && (\n            <Stack hasGutter>\n              <StackItem>\n                <TableComposable\n                  aria-label={t(\"consumerGroup.reset_offset_selectable table\")}\n                  className=\"consumer-table\"\n                >\n                  <Thead>\n                    <Tr>\n                      <Th\n                        select={{\n                          onSelect: (_event, isSelecting) =>\n                            onSelectAllConsumer(isSelecting),\n                          isSelected: areAllConsumerSelected,\n                        }}\n                      />\n                      <Th>{tableColumns.partition}</Th>\n                      <Th>{tableColumns.clientId}</Th>\n                      <Th>{tableColumns.current_offset}</Th>\n                      <Th>{tableColumns.log_end_offset}</Th>\n                      <Th>{tableColumns.offset_lag}</Th>\n                      <Th>{tableColumns.new_offset}</Th>\n                    </Tr>\n                  </Thead>\n                  <Tbody>\n                    {consumerList.map((consumer, index) => {\n                      return (\n                        <Tr key={index}>\n                          <Td\n                            select={{\n                              rowIndex: index,\n                              isSelected: isConsumerSelected(consumer),\n                              onSelect: (_event, isSelecting) =>\n                                onSelect(consumer, isSelecting),\n                            }}\n                          />\n                          <Td dataLabel={tableColumns.partition}>\n                            {consumer.partition}\n                          </Td>\n                          <Td dataLabel={tableColumns.clientId}>\n                            {String(consumer.groupId)}\n                            {String(consumer.memberId)}\n                          </Td>\n                          <Td dataLabel={tableColumns.current_offset}>\n                            {consumer.offset}\n                          </Td>\n                          <Td dataLabel={tableColumns.log_end_offset}>\n                            {consumer.logEndOffset}\n                          </Td>\n                          <Td dataLabel={tableColumns.offset_lag}>\n                            {consumer.lag}\n                          </Td>\n                          <Td dataLabel={tableColumns.offset_lag}>\n                            {isConsumerSelected(consumer) && selectedOffset\n                              ? selectedOffset === \"absolute\"\n                                ? customOffsetValue || 0\n                                : selectedOffset\n                              : \"-\"}\n                          </Td>\n                        </Tr>\n                      );\n                    })}\n                  </Tbody>\n                </TableComposable>\n              </StackItem>\n              <StackItem>\n                <Checkbox\n                  label={t(\"consumerGroup.reset_offset_accept\")}\n                  id=\"resetoffset-checkbox\"\n                  isChecked={isResetAccepted}\n                  onChange={setIsResetAccepted}\n                />\n              </StackItem>\n            </Stack>\n          )}\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n","import { Alert, Text } from \"@patternfly/react-core\";\nimport { DeleteModal } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { State } from \"ui-models/src/models/consumer-group\";\n\nexport type DeleteConsumerGroupProps = {\n  isModalOpen: boolean;\n  onClose: () => void;\n  onDeleteConsumer: () => void;\n  state: State;\n  consumerName: string;\n  appendTo: () => HTMLElement;\n  disableFocusTrap?: boolean;\n};\n\nexport const DeleteConsumerGroup: FunctionComponent<\n  DeleteConsumerGroupProps\n> = ({\n  isModalOpen,\n  onClose,\n  onDeleteConsumer,\n  state,\n  consumerName,\n  appendTo,\n  disableFocusTrap,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const isConsumerConnected = state === \"Stable\";\n\n  return (\n    <div>\n      <DeleteModal\n        isDeleting={false}\n        isModalOpen={isModalOpen}\n        title={t(\"consumerGroup.delete\")}\n        onCancel={onClose}\n        onDelete={onDeleteConsumer}\n        variant={\"non-destructive\"}\n        appendTo={appendTo}\n        disableFocusTrap={disableFocusTrap}\n        isDisabled={isConsumerConnected}\n      >\n        {isConsumerConnected ? (\n          <Alert\n            className=\"modal-alert\"\n            variant=\"danger\"\n            isInline\n            title={t(\"consumerGroup.delete_consumer_connected_alert_title\", {\n              name: consumerName,\n            })}\n          >\n            {t(\"consumerGroup.delete_consumer_connected_alert_body\")}\n          </Alert>\n        ) : (\n          <Text id=\"modal-message\">\n            <Trans\n              ns={\"kafka\"}\n              i18nKey={\"consumerGroup.consumer_group_delete_message\"}\n              values={{\n                name: consumerName,\n              }}\n            />\n          </Text>\n        )}\n      </DeleteModal>\n    </div>\n  );\n};\n","import {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent, ReactNode } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Consumer, State } from \"ui-models/src/models/consumer-group\";\nimport \"./ConsumerGroup.css\";\nimport { ConsumerGroupDetails } from \"./ConsumerGroupDetails\";\n\nexport type ConsumerGroupDrawerProps = {\n  children: ReactNode;\n  consumerGroupByTopic: boolean;\n  state: State;\n  activeMembers: number;\n  partitionsWithLag: number;\n  consumers: Consumer[];\n  groupId: string;\n  onSelectDeleteConsumerGroup: () => void;\n  onSelectResetOffsetConsumerGroup: () => void;\n  isExpanded: boolean;\n  onClickClose: () => void;\n};\n\nexport const ConsumerGroupDrawer: FunctionComponent<\n  ConsumerGroupDrawerProps\n> = ({\n  children,\n  consumerGroupByTopic,\n  state,\n  activeMembers,\n  partitionsWithLag,\n  consumers,\n  groupId,\n  onSelectDeleteConsumerGroup,\n  onSelectResetOffsetConsumerGroup,\n  isExpanded,\n  onClickClose,\n}) => {\n  const { t } = useTranslation([\"kafka\"]);\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n  const onSelect = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const dropdownItems = [\n    <DropdownItem key=\"reset offset\" onClick={onSelectResetOffsetConsumerGroup}>\n      {t(\"consumerGroup.reset_offset\")}\n    </DropdownItem>,\n    <DropdownItem key=\"delete\" onClick={onSelectDeleteConsumerGroup}>\n      {t(\"common:delete\")}\n    </DropdownItem>,\n  ];\n\n  const panelContent = (\n    <DrawerPanelContent widths={{ default: \"width_50\" }}>\n      <DrawerHead>\n        <TextContent>\n          <Text\n            component={TextVariants.small}\n            className={\"consumer-group-drawer__top-label\"}\n          >\n            {t(\"consumerGroup.consumer_group_id\")}\n          </Text>\n          <Title headingLevel={\"h1\"} className={\"consumer-group-drawer__title\"}>\n            {groupId}\n          </Title>\n        </TextContent>\n        <DrawerActions>\n          <Dropdown\n            onSelect={onSelect}\n            toggle={<KebabToggle onToggle={onToggle} id=\"toggle-data-plane\" />}\n            dropdownItems={dropdownItems}\n            isOpen={isOpen}\n            isPlain\n            position={DropdownPosition.right}\n          />\n          <DrawerCloseButton onClick={onClickClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <ConsumerGroupDetails\n          consumerGroupByTopic={consumerGroupByTopic}\n          state={state}\n          activeMembers={activeMembers}\n          partitionsWithLag={partitionsWithLag}\n          consumers={consumers}\n        />\n      </DrawerPanelBody>\n    </DrawerPanelContent>\n  );\n\n  return (\n    <Drawer\n      isExpanded={isExpanded}\n      data-ouia-app-id={\"dataPlane-consumerGroupDetails\"}\n      isInline={true}\n    >\n      <DrawerContent panelContent={panelContent}>\n        <DrawerContentBody className=\"consumer-group-drawer__drawer-content-body\">\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type {\n  CloudProvider,\n  KafkaField,\n  SimplifiedStatus,\n  Status,\n} from \"ui-models/src/models/kafka\";\n\nexport function useKafkaLabels() {\n  const { t } = useTranslation(\"kafka\");\n\n  const statuses: { [status in Status]: string } = {\n    ready: t(\"statuses.ready\"),\n    degraded: t(\"statuses.degraded\"),\n    accepted: t(\"statuses.accepted\"),\n    provisioning: t(\"statuses.provisioning\"),\n    preparing: t(\"statuses.preparing\"),\n    deprovision: t(\"statuses.deprovision\"),\n    deleting: t(\"statuses.deleting\"),\n    suspended: t(\"statuses.suspended\"),\n    suspending: t(\"statuses.suspending\"),\n    resuming: t(\"statuses.resuming\"),\n  };\n  const statusesSimplified: { [status in SimplifiedStatus]: string } = {\n    creating: t(\"statusesSimplified.creating\"),\n    ready: t(\"statusesSimplified.ready\"),\n    degraded: t(\"statusesSimplified.degraded\"),\n    deleting: t(\"statusesSimplified.deleting\"),\n    suspended: t(\"statusesSimplified.suspended\"),\n    suspending: t(\"statusesSimplified.suspending\"),\n    resuming: t(\"statusesSimplified.resuming\"),\n  };\n  const providers: { [provider in CloudProvider]: string } = {\n    aws: t(\"common:cloudProviders.aws\"),\n    gcp: t(\"common:cloudProviders.gcp\"),\n    azure: t(\"common:cloudProviders.azure\"),\n  };\n  const providerRegions: {\n    [provider in CloudProvider]: { [region: string]: string };\n  } = {\n    aws: {},\n    gcp: {},\n    azure: {},\n  };\n  const fields: {\n    [field in KafkaField]: string;\n  } = {\n    id: t(\"fields.id\"),\n    name: t(\"fields.name\"),\n    createdAt: t(\"fields.createdAt\"),\n    updatedAt: t(\"fields.updatedAt\"),\n    expiryDate: t(\"fields.expiryDate\"),\n    owner: t(\"fields.owner\"),\n    provider: t(\"fields.provider\"),\n    region: t(\"fields.region\"),\n    status: t(\"fields.status\"),\n    plan: t(\"fields.plan\"),\n    size: t(\"fields.size\"),\n    ingress: t(\"fields.ingress\"),\n    egress: t(\"fields.egress\"),\n    storage: t(\"fields.storage\"),\n    maxPartitions: t(\"fields.maxPartitions\"),\n    connections: t(\"fields.connections\"),\n    connectionRate: t(\"fields.connectionRate\"),\n    messageSize: t(\"fields.messageSize\"),\n    billing: t(\"fields.billing\"),\n    adminUrl: t(\"fields.adminUrl\"),\n    bootstrapUrl: t(\"fields.bootstrapUrl\"),\n    version: t(\"fields.version\"),\n    az: t(\"fields.availabilityZone\"),\n  };\n  return {\n    fields,\n    statuses,\n    statusesSimplified,\n    providers,\n    providerRegions,\n  };\n}\n","import { useTranslation } from \"react-i18next\";\nimport type { TopicField } from \"ui-models/src/models/topic\";\n\nexport function useTopicLabels() {\n  const { t } = useTranslation(\"topic\");\n\n  const fields: {\n    [field in TopicField]: string;\n  } = {\n    name: t(\"fields.name\"),\n    partitions: t(\"fields.partitions\"),\n    \"cleanup.policy\": t(\"fields.cleanup_policy\"),\n    \"delete.retention.ms\": t(\"fields.delete_retention_ms\"),\n    \"max.compaction.lag.ms\": t(\"fields.max_compaction_lag_ms\"),\n    \"max.message.bytes\": t(\"fields.max_message_bytes\"),\n    \"message.downconversion.enable\": t(\"fields.message_downconversion_enable\"),\n    \"message.timestamp.difference.max.ms\": t(\n      \"fields.message_timestamp_difference_max_ms\"\n    ),\n    \"message.timestamp.type\": t(\"fields.message_timestamp_type\"),\n    \"min.compaction.lag.ms\": t(\"fields.min_compaction_lag_ms\"),\n    \"retention.bytes\": t(\"fields.retention_bytes\"),\n    \"retention.ms\": t(\"fields.retention_ms\"),\n    \"segment.bytes\": t(\"fields.segment_bytes\"),\n    \"segment.ms\": t(\"fields.segment_ms\"),\n    \"compression.type\": t(\"fields.compression_type\"),\n    \"file.delete.delay.ms\": t(\"fields.file_delete_delay_ms\"),\n    \"flush.messages\": t(\"fields.flush_messages\"),\n    \"flush.ms\": t(\"fields.flush_ms\"),\n    \"follower.replication.throttled.replicas\": t(\n      \"fields.follower_replication_throttled_replicas\"\n    ),\n    \"index.interval.bytes\": t(\"fields.index_interval_bytes\"),\n    \"leader.replication.throttled.replicas\": t(\n      \"fields.leader_replication_throttled_replicas\"\n    ),\n    \"message.format.version\": t(\"fields.message_format_version\"),\n    \"min.cleanable.dirty.ratio\": t(\"fields.min_cleanable_dirty_ratio\"),\n    \"min.insync.replicas\": t(\"fields.min_insync_replicas\"),\n    \"segment.index.bytes\": t(\"fields.segment_index_bytes\"),\n    \"segment.jitter.ms\": t(\"fields.segment_jitter_ms\"),\n    \"unclean.leader.election.enable\": t(\n      \"fields.unclean_leader_election_enable\"\n    ),\n    preallocate: t(\"fields.preallocate\"),\n  };\n  return {\n    fields,\n  };\n}\n","import { useTranslation } from \"react-i18next\";\nimport type { ConsumerGroupField } from \"ui-models/src/models/consumer-group\";\n\nexport function useConsumerGroupLabels() {\n  const { t } = useTranslation(\"kafka\");\n\n  const fields: {\n    [field in ConsumerGroupField]: string;\n  } = {\n    groupId: t(\"consumerGroup.consumer_group_id\"),\n    activeConsumers: t(\"consumerGroup.active_members\"),\n    laggingPartitions: t(\"consumerGroup.partitions_with_lag\"),\n    state: t(\"consumerGroup.state_header\"),\n  };\n  return {\n    fields,\n  };\n}\n","import { PageSection } from \"@patternfly/react-core\";\nimport { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  EmptyStateNoResults,\n  TableView,\n} from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport type {\n  ConsumerGroup,\n  ConsumerGroupField,\n} from \"ui-models/src/models/consumer-group\";\nimport { ConsumerGroupEmptyState, ConsumerGroupStateLabel } from \"./components\";\nimport { useConsumerGroupLabels } from \"../../hooks\";\n\ntype SubUnion<T, U extends T> = U;\n\nconst Columns: SubUnion<\n  ConsumerGroupField,\n  \"groupId\" | \"activeConsumers\" | \"laggingPartitions\" | \"state\"\n>[] = [\"groupId\", \"activeConsumers\", \"laggingPartitions\", \"state\"];\n\nexport type ConsumerGroupsProps<T extends ConsumerGroup> = {\n  consumers: Array<T> | undefined;\n  onDelete: (row: T) => void;\n  onViewPartition: (row: T) => void;\n  onViewResetOffset: (row: T) => void;\n  consumerName: string[];\n  onSearchConsumer: (value: string) => void;\n  onRemoveConsumerChip: (value: string) => void;\n  onRemoveConsumerChips: () => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n>;\n\nexport const ConsumerGroups = <T extends ConsumerGroup>({\n  consumers,\n  onDelete,\n  onViewPartition,\n  isColumnSortable,\n  itemCount,\n  onViewResetOffset,\n  onClearAllFilters,\n  page,\n  perPage,\n  onPageChange,\n  consumerName,\n  onSearchConsumer,\n  onRemoveConsumerChip,\n  onRemoveConsumerChips,\n}: ConsumerGroupsProps<T>) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const labels = useConsumerGroupLabels();\n\n  const isFiltered = consumerName.length > 0;\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"consumerGroup.consumer_group_list\")}\n        data={consumers}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th\n            key={key}\n            info={\n              column === \"laggingPartitions\"\n                ? {\n                    popover: (\n                      <div>\n                        {t(\"consumerGroup.partitions_with_lag_description\")}\n                      </div>\n                    ),\n                    ariaLabel: \"partitions with lag\",\n                    popoverProps: {\n                      headerContent: t(\n                        \"consumerGroup.partitions_with_lag_name\"\n                      ),\n                    },\n                  }\n                : undefined\n            }\n          >\n            {labels.fields[column]}\n          </Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"groupId\":\n                    return row.groupId;\n                  case \"activeConsumers\":\n                    return row.activeConsumers;\n                  case \"laggingPartitions\":\n                    return row.laggingPartitions;\n                  case \"state\":\n                    return <ConsumerGroupStateLabel state={row.state} />;\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row, ActionsColumn }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"consumerGroup.view_partitions_offsets\"),\n                onClick: () => onViewPartition(row),\n              },\n              {\n                title: t(\"consumerGroup.reset_offset\"),\n                onClick: () => onViewResetOffset(row),\n              },\n              {\n                title: t(\"common:delete\"),\n                onClick: () => onDelete(row),\n              },\n            ]}\n          />\n        )}\n        isColumnSortable={isColumnSortable}\n        filters={{\n          [labels.fields.groupId]: {\n            type: \"search\",\n            chips: consumerName,\n            onSearch: onSearchConsumer,\n            onRemoveChip: onRemoveConsumerChip,\n            onRemoveGroup: onRemoveConsumerChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"input_field_invalid_message\"),\n          },\n        }}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        isFiltered={isFiltered}\n        onClearAllFilters={onClearAllFilters}\n        emptyStateNoData={<ConsumerGroupEmptyState />}\n        emptyStateNoResults={<EmptyStateNoResults />}\n      />\n    </PageSection>\n  );\n};\n","import {\n  Level,\n  LevelItem,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const ControlPlaneHeader: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n\n  return (\n    <PageSection\n      variant={PageSectionVariants.light}\n      hasShadowBottom={true}\n      stickyOnBreakpoint={{ default: \"top\" }}\n    >\n      <Level>\n        <LevelItem>\n          <TextContent>\n            <Text component=\"h1\">{t(\"kafka:table.title\")}</Text>\n          </TextContent>\n        </LevelItem>\n      </Level>\n    </PageSection>\n  );\n};\n","import type { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport type { CloudProviderInfo } from \"../types\";\n\nexport function onProviderChange(\n  providers: CloudProviderInfo[],\n  provider: CloudProvider\n): { provider: CloudProvider; region: CloudRegion | undefined } {\n  const selectedProvider = providers.find((p) => p.id === provider);\n  const region =\n    selectedProvider?.defaultRegion ||\n    selectedProvider?.regions.filter((r) => !!r.isDisabled === false)[0]?.id;\n  return { provider, region };\n}\n","import {\n  CloudProvider,\n  CloudRegion,\n  MarketplaceSubscription,\n  Size,\n} from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateKafkaFormData,\n  CreateKafkaInstanceError,\n  StandardPlanInitializationData,\n  StandardSizes,\n} from \"../types\";\nimport { onProviderChange } from \"./shared\";\n\nexport type StandardPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: StandardPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    provider?: CloudProvider;\n    region?: CloudRegion;\n    size?: Size;\n    billing?: MarketplaceSubscription | \"prepaid\";\n  };\n\n  // based on the form.provider selection\n\n  // based on the form.provider and form.region selection\n  sizes: StandardSizes | undefined;\n\n  creationError: CreateKafkaInstanceError | undefined;\n};\n\nexport const StandardPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5SwC4EMB2E0CcIAUAbTAWTQGMALASwzADoA3MHagMwE8BBRta4gEb9qKDgGJEoAA4B7WCOoyMkkAA9EAZgAcARnoBOfQAYdOrQHYArABYNAJnMAaEB0Q6j++reuXL5k3bWWpY65gC+Yc6omNh4RKQUNHT05Eps1FAArqwYUPTRKJmwYuQ4YGgoYCqy8iiKykhqmjp29OYW5hpGQYG+zq4Ilvoa9KZGlh4a5joAbPqBEVHoWLgExBhkVLQMqRjpWTl5bDI4ALZMaITUEGLpYIQQAJIYvFcQ1XIKSirqCKGG9Ds+ksU1m5n0M2s1n0-UQdgmllGdjsOj8QJm7ihixA0RWcXWmySOzSGWytCOJ3Or2uYlgmQEpxEH1q9R+bmMnnMnRR9n8di0RjssIQ-MFo2sgQ81lCGjm2NxsTWCS2yV2+zJuXoxzO+TQjHJJTKFTAAGVMuRyHB4I0al8GqBfoEZlp6FpISYdBp7PprFZhaK9JDAuDproQfLlor4htEtsUiSDuStZTdfrcobypUAKI4HAnZl2tkinn0WVTFFQrS+mb+jEzehzMz84btazjCMxVbRwlxtWkw7Js63aj3J4vS7XAt1b6NR0+etaWXzPmQmsuOGmRGWfmWRchbctGYdvFKmMq4l7ftJu4PWD0DBoU4ManYSoSG2faf2poIIL15GmDo+iLkBdhGOYa4DLMUKjKCljOkYbrDFox5RgSsaqgmGpHCOt73o+YAZsaU6srObj2F45gSn4UIaDY7QaMKMouohVgzNuHhgRoOioV26HnvGl6JpqN4QHeD5PmIElgAAwpQmAwCRM4OuRrS+tRVG2PRi5MexrSojM9iIW2VgSrx+LKkSgnqgOol3lIeb6hALAXG8xrvtIn6kSpgxAm00IosiEEzDMTjriKHj1hMEIoqE1iGeYdjmaePaYUJ2FarhYn0A5MhOSwRGVEp36-J6alUfCml0b6Onhci8UGJxnoSuBGj6Ml3YYReNnXll9mOdcBW5flOByQpVQfiyyk-mVlEabR2mMXVUr0EYgo+qGQHtJYHX8VZfbCTho53mUUD1K51zucVRYHl4hg6EEPisdYTHwkYgLDNKRjsSF0I7ZEOKRnxlm9lhtl9fQp31IVE2eVNJWqXNlULTVS1QXR5iAqidgzCYApui0u0g2lPUiRDUNKGIw2DaN8m5LDIC2l+RazepyNaajTFdJ4OM8hBnRejxAMKsDZ77WDvXHZDYBnZTFMYGN9PXWRfwUWzNEcwxTEGaWvgWA9Gg+P41hE2LoPpeDUvyAAXs+E6voRys+b6gbcW7czQu4tUDA44KrZCsogfyXqm6l3VXmTVvULb9CEDIaAQAaEBKAwtCMDIADWDAixZZskxHR14TbDBxwn5IIGnMjkBU9QANpGAAuk7P6gvQNi6HY2gPVCwr2HRbS6PoVG7lYQyh111kF5lUcx6XifpiweY4DlxAoNq5w5ylE8HRldn5NHJfx-PUAVy8Vc10o9dN5NhYq9uLqBMiwEWBKneWL3vKrSEiHDOBILDOPASO9LZFwPjDZujpQq6wAuxYwoEpj+n-qMT0254KG3ig9QB4sLaS1AbbKmA1nK03GhAtwi4sYeisPMQw9hay4wML6RKhhvrgiFksTsucw6T0OtPPBhF5aK0UjfZmKtcYuh9GBQwGIUS1kNgYT6Ewfqd26Fg82pNC7ZWLrSA+giGZM28j+KiLopjbkhPrcCuhaweGgT4Ux-hZj-XYSeTqQCJaRz4WIIQhAri5F0aQ388E26NnYuCZcEEXp1VxpjAmVYqKsOBEeYWQNOHbzcRou8XifF5BfFdYRBjfjbhGFoAUZjZjLj8L3YpmM1pWHCZVGYONVH5x4XvTJSYlCEA4GaAQsBSjUCkF+YosB7hgHICgbpvTWADIMfo6apU1rWDaO6EKa0goNMqfoPQ-gbC4x9MBQUGgmnhxaRDNpmoHJgCkHwCAXAsATL6dMpQQyRljPuVMkRcNb4+UPIiYpQI9y7ngsBYU3hFlrU9GYjwIRwhJI4VvVxOD3HZTOXkC5Vzri3IgG8-pgzaQvJQPgMo6L3h5LmW4IwUxXS7i9L4KwswtAgr7m3FEQxEq6EhEc7hu9Tn8CyQQvKNM-GkoRqres3FURxPsMiIEvdAUD0XIhHG8VEKOMBnClx2D1G8LEmIZOyQCjZ2SfCzVU87L+NmOMNo7hxjlgaYbd+kT+6aWCG-XcSrOXAKTinfI6BKg+vVXtNRBd-H8hxq6aUxtfQmCkf6WU9YWhgUqiETEEQAYYBkM5a0yAjUarjMwVgnAeB8EEMIUQ-iQjhtCm1WUEofTjGFFYAw3oQj2p9NRTleUWAAEVMgyHQP4gUIxOLQh8FoX2DLwoJtLI9cFWg63TESU4tCxNU4YFxJaAAqg+Xg-A0ACEIHoryZKEBcnep0NtwQuTSIdT7ClrpQoonmC0XQa1F1qucYG5I8tYBbr1MWvdB7-FckWdCYpD1+RujHTCOqVZSwB3GMiRcwxZgerSf6wod5MhrvpIyFAlQSWfI+TNRCpY2pVhCI+jmwohg8zilRA2Y7fSocRXkAoRR8g4ZEPh-x84DBmGlPjLko8IkDAXatLoi54Sd3hPBZjWq2NZsZkekVsGvTAR8C0ICVHwoTBdKYUKLbkSsQhHJ01KY0723NeCRZnpNkmFCqEMdsaUSrWYd0LkgcTOwo-SurltkUwvis8BUY4EMQ-3cA9G9cJcYjFCmtYIQRhhzEOd55dedjm7xTLAPU5IQ0oIbBYDw4x5wojCj7Kw+lZScV8PCT0pmWlZb1JAENCUDDhOs8CYI-pwSIgabFHGHtMGpdFlwz1IlKRWf8LBOzYJHNCmWl0Nura51uu+vV7lUtpL0DAKcAZAxCP5MQEw0YhS2xoJqhOqCiUh3OmleMCEKWl0jdSSx7V4kCL0As28c1asKoa2qlrSd4J6zdG+h0MEXoTbDZSQirVe8tuBeFSzKiDYfT0UMqYkETFNkg4Mu0aY4xFxQ6ezDk1JzNsfZyUVJHKtDYjDavMKTc6vSdyYtd-2Y6jNDEMutkB2VpLmpI+rKqi0mK+E8AbX0QJWXGCStD41Qbyd4WpkQi6Dt-HaHrMubiHmTJukghuaEXhdzPo8BCFbvPcHZRVy5L7k4affJsICbQSrDBAiHlFkUXRFluk7nReYY7nQwpJwr5pG3leEJcojg7x6Kv+yCBYEEtWuT+gep4UdpupEW-l7msPfP+oCqIYLl0wuUaA9vdYta8xDJei6EYy3SKToy3OlTw98MixTBdKFAWLQbBlTK+RO9gR+NfW4vFFCOfP0Zfz9LWWGBPvjm+w7maExkG8lCCCQUtimLSkRPSl3zokNDZD7n6fVum9z7V0BxbDnBQNOdEBSEXMh8CahO4MfzoG-pNnzM5TLMhd-Yi6cyTrgR6CygoiJ7BAhQhRf5vb7wxyt4a7tANidD6bDwPrzY+wOYNiBCc4hTNiPbvppajZoZ7zFyfYQCAbL6lQUQgiGygFuztDwjdYQjiZQiigZ5vqbyn5+bn7wEMCJzZb7rNbUGIAdBeC6DcRVheiSGYFwjAh6DAgmCKJWDaA+CwFkEHz0AADufAdQuQAAYicD2n2mgD9q0HQVMLyNMDjAguFDSnoOMF7L-KoQApPr5mNt-uQZ2jgCYf2qIarBYZDgwZ6EwZ7l0HeozoqkEBYhPiflPrwY3vwVfgEZspyPZohuxN6HIQgBJmAdIdtA5tCMHkQc9rDqahDOQYvPmAEbNJYdyFyIeHYQMM2qtG2GVDaozhoZUVoXPLlgERBLFtoPfAKFCEMCJs0MMG0IlNuCGIuJ-u4elokV4QfMXktl6A0TYQlP6D4DZkBH3uBMPKqtwQkZ4XASimrsRLUdoI1J0IZBSn4HAuEZIf5C1O4EMJ3GwqUaToruHsirykmOmiaPivUAAEpgAACOmQ1AZQBGSm7eKs+WEw6+OuVe4RChro1mI6iE0a3RUsFxHSXS9IkyOK9Qd4ducJsyKmKOFiEq0wPQNglSwQowwQ0EYE-GcR3xoeZ+SRBJGAnS2Kjya6KRMeIqkWmMf4-IwOdqD0vcGJ0IkObq7Q4wXBOapxpBPK3i7S-JRJPSDygyA6q+tJfg9JY6jJ9hFUWMkIoQDEDSnJJxHhGp+JAJ5yRK1ymKgpgy22u2ZaARFgIw8IxgGmFKDgoQjKoQq0AQ9qjmwIeJeEFxaK7pdyxJ+pZJHGep7yv+CJ3yfIXgtmfeW0Y6l2iAb+Yq7QAo2y7g8IcZ-xWprplySZWKKZmZTyOUbp9uopRYzCroHgi4i4dKesIKtg6egoxSJSbU0wNZGSLpqK7ZNyyZGZpJTyA6RugZ3Q386+A+v4qIQ6r8hsVZvIU59AKK5qpgbcIZ0wqJUKsqa0bQPo7EFiEoKGixJBr2ZqfpIGgBZe3siAhgxizoY+-Ib+xSX+-i9Cam5GmmPo1UjKe+iGypYEVYJgnK2WzAlJf+Ks-yUUmyJp9Bl5saQwDYJgTCa0Y+boRyIa0S8U56NaQIZ2ORrQwwaR3oNewEz5EQQAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as StandardPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./StandardPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as StandardPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"providerChange\"; provider: CloudProvider }\n          | { type: \"regionChange\"; region: CloudRegion }\n          | { type: \"sizeChange\"; size: Size }\n          | {\n              type: \"selectSubscription\";\n              subscription: MarketplaceSubscription;\n            }\n          | { type: \"selectPrepaid\" }\n          | { type: \"billingChange\" }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: StandardSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"standardPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isOverQuota\",\n              target: \"overQuota\",\n            },\n            {\n              cond: \"isInstanceUnavailable\",\n              target: \"instanceUnavailable\",\n            },\n            {\n              cond: \"isRegionsUnavailable\",\n              target: \"regionsUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        overQuota: {\n          tags: \"blocked\",\n        },\n        instanceUnavailable: {\n          tags: \"blocked\",\n        },\n        regionsUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitted: {\n                  entry: \"triggerSubmit\",\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitted\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  tags: \"creatable\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                provider: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"providerIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"providerInvalid\",\n                    },\n                    valid: {\n                      tags: \"providerValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      actions: \"setProvider\",\n                      cond: \"didProviderChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                region: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"regionIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"regionInvalid\",\n                    },\n                    valid: {\n                      tags: \"regionValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      actions: \"setRegion\",\n                      cond: \"didRegionChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noProviderOrRegion\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          cond: \"sizeIsDisabled\",\n                          target: \"disabled\",\n                        },\n                        {\n                          cond: \"billingRequiredButNotSelected\",\n                          target: \"waitingForQuota\",\n                        },\n                        {\n                          cond: \"sizeIsOverQuota\",\n                          target: \"overQuota\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    disabled: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeDisabled\",\n                    },\n                    waitingForQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeWaitingForQuota\",\n                    },\n                    overQuota: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeOverQuota\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      target: \".validate\",\n                    },\n                    sizeChange: {\n                      actions: \"setSize\",\n                      cond: \"didSizeChange\",\n                      target: \".validate\",\n                    },\n                    billingChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n                billing: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"onlyPrepaid\",\n                          target: \"prepaidOnly\",\n                        },\n                        {\n                          cond: \"singleSubscription\",\n                          target: \"singleSubscription\",\n                        },\n                        {\n                          cond: \"onlySubscriptions\",\n                          target: \"onlySubscriptions\",\n                        },\n                        {\n                          description:\n                            \"user has both prepaid and marketplace subscriptions\",\n                          target: \"prepaidAndSubscriptions\",\n                        },\n                      ],\n                    },\n                    prepaidOnly: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\"],\n                      entry: \"setBillingToPrepaid\",\n                      type: \"final\",\n                    },\n                    singleSubscription: {\n                      description:\n                        \"The user doesn't need to specify any option about the billing. The API will automatically figure out the right thing to do without giving it any information.\",\n                      tags: [\"noBilling\", \"billingValid\", \"singleSubscription\"],\n                      entry: \"setBillingToSubscription\",\n                      type: \"final\",\n                    },\n                    onlySubscriptions: {\n                      description:\n                        \"More than one subscription exist. The user needs to select one to procede.\",\n                      initial: \"invalid\",\n                      type: \"final\",\n                      states: {\n                        invalid: {},\n                        valid: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                      },\n                      on: {\n                        selectSubscription: [\n                          {\n                            actions: \"setBillingToSubscription\",\n                            cond: \"matchesSelectedProviderOrRHMarketplaceAndHasQuota\",\n                            target: \".valid\",\n                          },\n                          {\n                            cond: \"noSelectedProvider\",\n                            target: \".valid\",\n                          },\n                        ],\n                      },\n                    },\n                    prepaidAndSubscriptions: {\n                      description:\n                        \"The user has both prepaid quota and one or more subscription to a marketplace. The user needs to select one to procede.\",\n                      initial: \"empty\",\n                      type: \"final\",\n                      states: {\n                        empty: {},\n                        subscription: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                        prepaid: {\n                          entry: \"triggerBillingChange\",\n                          tags: \"billingValid\",\n                          type: \"final\",\n                        },\n                      },\n                      on: {\n                        selectSubscription: [\n                          {\n                            actions: \"setBillingToSubscription\",\n                            cond: \"matchesSelectedProviderOrRHMarketplaceAndHasQuota\",\n                            target: \".subscription\",\n                          },\n                          {\n                            cond: \"noSelectedProvider\",\n                            target: \".subscription\",\n                          },\n                        ],\n                        selectPrepaid: {\n                          actions: \"setBillingToPrepaid\",\n                          cond: \"hasPrepaidQuota\",\n                          target: \".prepaid\",\n                        },\n                      },\n                    },\n                  },\n                  on: {\n                    providerChange: {\n                      actions: \"unsetSubscription\",\n                      description:\n                        \"If a new provider is selected, deselect any previously selected billing option.\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#standardPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              ...(context.capabilities.defaultProvider\n                ? onProviderChange(\n                    context.capabilities.availableProviders,\n                    context.capabilities.defaultProvider\n                  )\n                : {}),\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setProvider: assign((context, { provider }) => {\n          return {\n            form: {\n              ...context.form,\n              ...onProviderChange(\n                context.capabilities.availableProviders,\n                provider\n              ),\n            },\n            sizes: undefined,\n          };\n        }),\n        setRegion: assign((context, { region }) => {\n          if (context.creationError === \"region-unavailable\") {\n            return {\n              form: { ...context.form, region },\n              sizes: undefined,\n              creationError: undefined,\n            };\n          }\n          return {\n            form: {\n              ...context.form,\n              region,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSize: assign((context, { size }) => ({\n          form: {\n            ...context.form,\n            size,\n          },\n        })),\n        setSizes: assign((context, event) => {\n          const sizes = event.data;\n          const smallestSize = sizes.sort((a, b) => a.quota - b.quota)[0];\n          return {\n            sizes,\n            form: {\n              ...context.form,\n              size: smallestSize,\n            },\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => {\n          return {\n            creationError: error,\n          };\n        }),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form> &\n            Pick<typeof context.form, \"billing\">;\n          const data: CreateKafkaFormData = {\n            plan: \"standard\",\n            name: form.name,\n            provider: form.provider,\n            region: form.region,\n            sizeId: form.size.id,\n            billing: form.billing,\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n        triggerBillingChange: send(\"billingChange\"),\n        setBillingToPrepaid: assign((context) => {\n          const form = { ...context.form };\n          form.billing = \"prepaid\";\n          return { form };\n        }),\n        setBillingToSubscription: assign((context, event) => {\n          const form = { ...context.form };\n          if (event.type === \"selectSubscription\") {\n            form.billing = event.subscription;\n          } else {\n            // single subscription, take it from the context\n            const ms = context.capabilities.marketplaceSubscriptions[0];\n            form.billing = {\n              marketplace: ms.marketplace,\n              subscription: ms.subscriptions[0],\n            };\n          }\n          return { form };\n        }),\n        unsetSubscription: assign((context) => {\n          const form = { ...context.form };\n          form.billing = undefined;\n          return { form };\n        }),\n      },\n      guards: {\n        isOverQuota: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"out-of-quota\",\n        isInstanceUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"instance-unavailable\",\n        isRegionsUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"regions-unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        providerIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableProviders || []).length > 0 &&\n            // must have selected a provider\n            selectedProviderInfo !== undefined\n          );\n        },\n        regionIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have selected a region\n            form.region !== undefined &&\n            // the region must be included in the capabilities for the provider\n            selectedProviderInfo?.regions.find((r) => r.id === form.region) !==\n              undefined\n          );\n        },\n        noProviderOrRegion: ({ form }) =>\n          form.provider === undefined || form.region === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) => sizes !== undefined && sizes.length === 0,\n        sizeIsDisabled: ({ form, capabilities }) => {\n          if (capabilities === undefined) return true;\n          return form.size?.isDisabled === true;\n        },\n        billingRequiredButNotSelected: ({ form }, _, meta) => {\n          if (meta.state.hasTag(\"noBilling\")) {\n            return false;\n          }\n          return form.billing === undefined;\n        },\n        sizeIsOverQuota: ({ form, capabilities }) => {\n          if (capabilities === undefined || !form.size) return true;\n          const availableQuota =\n            form.billing === \"prepaid\" || form.billing === undefined\n              ? capabilities.remainingPrepaidQuota\n              : capabilities.remainingMarketplaceQuota;\n          if (!availableQuota) return true;\n          return form.size.quota > availableQuota;\n        },\n        didProviderChange: (context, event) =>\n          context.form.provider !== event.provider,\n        didRegionChange: (context, event) =>\n          context.form.region !== event.region,\n        didSizeChange: (context, event) =>\n          context.form.size?.id !== event.size.id,\n        onlyPrepaid: (context) =>\n          context.capabilities.marketplaceSubscriptions.length === 0,\n        singleSubscription: (context) =>\n          context.capabilities.remainingPrepaidQuota === undefined &&\n          context.capabilities.marketplaceSubscriptions.flatMap(\n            (m) => m.subscriptions\n          ).length === 1,\n        onlySubscriptions: (context) =>\n          context.capabilities.remainingPrepaidQuota === undefined &&\n          context.capabilities.marketplaceSubscriptions.length > 0,\n        matchesSelectedProviderOrRHMarketplaceAndHasQuota: (\n          { form, capabilities },\n          { subscription }\n        ) =>\n          capabilities.remainingMarketplaceQuota !== undefined &&\n          capabilities.remainingMarketplaceQuota > 0 &&\n          (subscription.marketplace === \"rhm\" ||\n            form.provider === subscription.marketplace),\n        hasPrepaidQuota: (context) =>\n          context.capabilities.remainingPrepaidQuota !== undefined &&\n          context.capabilities.remainingPrepaidQuota > 0,\n        noSelectedProvider: ({ form }) => form.provider === undefined,\n      },\n    }\n  );\n","import { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, send, sendParent } from \"xstate\";\nimport {\n  CreateKafkaFormData,\n  CreateKafkaInstanceError,\n  TrialPlanInitializationData,\n  TrialSizes,\n} from \"../types\";\nimport { onProviderChange } from \"./shared\";\n\nexport type TrialPlanMachineContext = {\n  // initial data coming from the APIs\n  capabilities: TrialPlanInitializationData;\n\n  // what the user is selecting\n  form: {\n    name?: string;\n    provider?: CloudProvider;\n    region?: CloudRegion;\n  };\n\n  // based on the form.provider and form.region selection\n  sizes: TrialSizes | undefined;\n\n  creationError: CreateKafkaInstanceError | undefined;\n};\n\nexport const TrialPlanMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QBUBOBLAhgGwArcwDsBZTAYwAt1CwA6ANzAwDMBPAQXs3QICMf0AF1YBiRKAAOAe1hD0UwuJAAPRACYAbAA4AnLQ0AGNQBYArBo0BmHQHYNNywBoQrRDoO1bARjWmv54y8DY18AX1DnNCw8AhJyKhpaMgVmdCgAVwxCKFpYQUxBdNgRMlQwArAlaVlBeUUkFUQgtWdXBFNLY1o7LRDTG1NTLVNjG3DIjBx8IlJKajpkwlSMrJzmKVQAWwYcdAgRVLBsCABJQi5sPaqZOQUlVQQvLRs9NR1TI1Mdey0tNS1Wk1nqZaJodIEbEYTAZ7OMQFEprFZgkFik0plqGsNtsLnsSmUKtcanV7kCXqD3p9vjZfv9AQg1AYhrQDF4fH9jJ0aVo4QiYjN4vMkmiVpjaOstrlMPRMfjyoIwABldJkMhweANaq3eqgB5qSxqGwsgwmgzPHRBGxeemMrQeCwfAY6NT6s2mXmTflxOaJRbLDHZcXYqUy7JyioAUVQqA2RO1pIZBqNppN5st1pcTR04O6gX+9hMefdEXhnum3pRwqW6NWQa2B3QR1O512EDjtTuDQe-i+tD+Jpdxm0NhdpnpXlGXTNnIt-RCnOLE2i5eRQr9NbFh2OsFohEwmzouIgFTEmpuHZ1jQQxmG3VHfjUE7Zb3HGlGoK8Vo0-ksli0Vh0D1lyRQVfRFAM1kbbdd33MADmxZVeE2IR2xJLsmgNccbECWgvAsGwBkhBwb0sIDEQFH1UWrUVAy3CAdz3A8REYsAAGEKCIGBUM7XUMJaTNHg0QZQU5Axf0MYxRmwsivVXMDqIg8UoPo2gJBjGUICYHZLmPBVT0kc80N49o3lBQxgnBLkmQBATH20Wghy8WxnS0IJLA0GSV1Aqj-VrOidzUqQNKYeCtkQ5DBG4y9u0w2zLCePs33cxkmW0IdPJAyiq18zdlIC9S9hCwLgtQdjOMqM9iR4q8vFito7JBd4XhpGF-FGDKKMrdcaMgpsdzKKA6m0vYTyihNTEfY0TH-aFzGCccni6G8DGzf9WSE9KSz5Lysu6xT-NoAa6lCzZwpQyr43Qx46qaN4vFoawR1HT8Jv6DqKzXcC-Lyw6wEGhQRGKwrSo47IKoMqror48cTEsByOhItlLD8P93rknyN1on6joBnHCDKsGxqu2r+LaIJ3FoEYRytYYkZCNHvOyzHeug2QAC9D1bUaLovBNnjh2xnn-A1hgmmz6rtLRugMZrhhvJzF1LYDOs+hTvr63J0A52hsCkTAIFlCAFDoah6CkABrOhtsyrqvtyjX2boXX9cxBBTakMgCjqABtAwAF0ieM4x3k8O0jCc2qNDum0Bg0bpKXihxvmsYwGd2u2sYdrWnb1g2wyYGNUFUghBAlbZrZV+Scsz1ns513PXfdz2L19gOeaMq9g8asPHwtZKLRjs0+xRv5DHJzQ09ttX7drjmTrOyL2+qmLSfUC0uhMDRsysbRNH8SfVerlmVMdwGCs0kHysDmqboQSxgnuvD9THq1szCLayxtw-maUrO57xgmXEl5Q2uqvO+Zo9BBCsJCSwI5rA8g-srD6Vcf7+REEbRIeQKi0ArsgjGPVf7bmvt2QI90-BCx0PFWBXcbQPweoMLeidHyfAPignq6Dja5HyAqHBn9K74IgsQ9Q2g9CGBMOYACdgHBYU5KHay2FkbOhdOEEshApCaQ1CgPheCGBMHQGwTg3A+ACGEEI68YC8J6AtBHew35-wWDUKwugghPQAFVYCQDMW8ewuE+hsjZIMXwr4rFsgtLYp4Fgo5ONoC46Iri9xcB4JgXg2BwYgC1LzK6IQbR-j7FoJMYkhIRxpNEvGsB4nSiMck1JZjskCSCB4cEMtOQiNGDLLw0S9q1iwYUHc6RCCwHSEhIQCo2zAITM0ekQ4QTNSfhCbM9NEHkR0V0sUPSii5CGRFUZXj8mUwaayP4eFkb9HpNoOGkIVodBePYMSitcHoyZgQ9Zmj0mGWXogGk9I-weD+EMbMZpWTiVTks2SjNVm0WDKbVsXjg5xxlv+Zyj4CIWMRaCBhgwmQjD+KRUFO0p5HzrDiGF4ziaDD0P2KEQ5nijloStRKMIvjDmGMjTpGcsSSlgNKTEXiTRGleiaCaFprF0qlhNBWLomTHI8nir+bD9rBi5YwMZENLrGRMN8FkNIt4vGRSOWh2F9Ao1qu8Do+SZVLmWY8iFHLNhmJ-CCSlg5hy0vqX+SBtV2TPz-G8Nl08a4qRYrQfpggpAqgoJ40lxl-BqFBLoWBFhYEwn1E4epLwPVYr+K5dN9ztHWvZYQwNsFaBgE2BIUxUarwjilkJAYmh7DIxTVhTQuF+gcjsJQ38YxZX8KeftH6QboU6XtbfJysCWQdGnE1CaMs-WEoOkGo89rDUumZdmfof48Ljn-FLM0Tw7JOQsHO1BA7i1HkJJWh4nRY0WgGHhXQxhpzGGbXHfwNITAdt-LA49BCF2wXtWacc5hY3iPBEK5ovQf39o1kDC+wbCChvDZG1VmTo2Gusj4OcDghh2ByXYPse6wl3u-N2y1YL07+uPvlIKwNhq6TSRkjuV7-zww+P4NkQ4CKpvqi6e6IRmm6EZOu0jSsrXgoLQdWDWkh1XEvU0Do3RhzBzZEYb4ZgbSSRmS8MwbH77KJ7SsiTP0pNFyXXJhAd7KYOA5OSnQdowEukmvx7CgmVpNSg+raCJmAPi3UIC0O2gLK6HYx5meKk8bwcQ5QZDbzIYTK3p4N4nRAgfHzDCccQ5XjYW0AreKPxQsBv6n9Ia56FRmNgVLJy2E-DOiZPFHQMNx0zhHBxoSD6CtUd+v9QgtAZMqti2qmqwd9DWGpCjF0sCxxuuG50Fa35nQ-mkgZ-NlHC1Fe63RsxDgPB4Q+H+ecjIXz1P1EaGctigXDBEw88Tq2Dp4x8+OQVVnzK0yTO5Dra3Nba1Kwx95ID7CiPyXYL4wdDTfBtH3EbFlvxfsZLisj+Lv6-p+o7XrEAanmY4yCMehoTCHqEjaX4lXQeb38NvD7B1UdmZQ0x9QCnfCuXih8QYQQOgQ5HLhC0JohLaHwrmpBK350o7rgXWM5mLC7u-GCTkkltBTfqvYI0yMALzmnVdvNN2hd-xzi7bII6HP2C6GlTk+S-k+Ap8LjmD3bL-O6J6gYwRpn72W5rk9fUzG9HpJQ2NElqsvUCPD0T5GCXMzMSMb5Mth5Dn1N8Wm2holKpi4xj5DJ7OeEKbobT2ExJYXHd8XeIwRG2HVwL7y9rfOPAQeEIAA */\n  createMachine(\n    {\n      context: {\n        capabilities: {} as TrialPlanInitializationData,\n        sizes: undefined,\n        form: {},\n        creationError: undefined,\n      },\n      tsTypes: {} as import(\"./TrialPlanMachine.typegen\").Typegen0,\n      predictableActionArguments: true,\n      schema: {\n        context: {} as TrialPlanMachineContext,\n        events: {} as\n          | { type: \"fieldInvalid\" }\n          | { type: \"nameChange\"; name: string }\n          | { type: \"providerChange\"; provider: CloudProvider }\n          | { type: \"regionChange\"; region: CloudRegion }\n          | { type: \"nameIsValid\" }\n          | { type: \"nameIsInvalid\" }\n          | { type: \"nameIsTaken\" }\n          | { type: \"submit\" }\n          | { type: \"create\" }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          getSizes: {\n            data: TrialSizes;\n          };\n        },\n      },\n      initial: \"verifyAvailability\",\n      id: \"TrialPlanMachine\",\n      states: {\n        verifyAvailability: {\n          entry: \"setInitialContext\",\n          always: [\n            {\n              cond: \"isTrialUsed\",\n              target: \"trialUsed\",\n            },\n            {\n              cond: \"isTrialUnavailable\",\n              target: \"trialUnavailable\",\n            },\n            {\n              target: \"configuring\",\n            },\n          ],\n        },\n        trialUsed: {\n          tags: \"blocked\",\n        },\n        trialUnavailable: {\n          tags: \"blocked\",\n        },\n        regionsUnavailable: {\n          tags: \"blocked\",\n        },\n        configuring: {\n          type: \"parallel\",\n          states: {\n            status: {\n              initial: \"unsubmitted\",\n              states: {\n                unsubmitted: {\n                  tags: \"unsubmitted\",\n                },\n                submitted: {\n                  entry: \"triggerSubmit\",\n                  tags: \"submitted\",\n                },\n              },\n              on: {\n                create: {\n                  description:\n                    \"Save is enabled all the time, if it's clicked before the form is completely filled out we should show the validation for all errored fields\",\n                  target: \".submitted\",\n                },\n              },\n            },\n            form: {\n              initial: \"invalid\",\n              states: {\n                invalid: {\n                  tags: \"formInvalid\",\n                },\n                valid: {\n                  entry: \"resetCreationErrorMessage\",\n                  on: {\n                    fieldInvalid: {\n                      target: \"invalid\",\n                    },\n                    submit: {\n                      target: \"saving\",\n                    },\n                  },\n                },\n                saving: {\n                  entry: [\"resetCreationErrorMessage\", \"triggerSave\"],\n                  tags: \"formSaving\",\n                  on: {\n                    createSuccess: {\n                      target: \"saved\",\n                    },\n                    createError: {\n                      actions: \"setCreationError\",\n                      target: \"invalid\",\n                    },\n                  },\n                },\n                saved: {\n                  type: \"final\",\n                },\n              },\n              on: {\n                fieldInvalid: {\n                  description:\n                    \"sent by the fields when their value change to an invalid value. This will transition the form to the invalid state, to then eventually transition to the valid state if the field state is marked as done (which means that all fields have a valid value selected)\",\n                  target: \".invalid\",\n                },\n              },\n            },\n            fields: {\n              tags: \"configurable\",\n              type: \"parallel\",\n              states: {\n                name: {\n                  initial: \"validate\",\n                  states: {\n                    empty: {\n                      tags: \"nameEmpty\",\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"nameInvalid\",\n                    },\n                    valid: {\n                      tags: \"nameValid\",\n                      type: \"final\",\n                    },\n                    validate: {\n                      always: [\n                        {\n                          cond: \"nameIsEmpty\",\n                          target: \"empty\",\n                        },\n                        {\n                          cond: \"nameIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    nameChange: {\n                      actions: \"setName\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                provider: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"providerIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"providerInvalid\",\n                    },\n                    valid: {\n                      tags: \"providerValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      actions: \"setProvider\",\n                      cond: \"didProviderChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                region: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"regionIsValid\",\n                          target: \"valid\",\n                        },\n                        {\n                          target: \"invalid\",\n                        },\n                      ],\n                    },\n                    invalid: {\n                      entry: \"fieldInvalid\",\n                      tags: \"regionInvalid\",\n                    },\n                    valid: {\n                      tags: \"regionValid\",\n                      type: \"final\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      actions: \"setRegion\",\n                      cond: \"didRegionChange\",\n                      target: \".validate\",\n                    },\n                  },\n                },\n                size: {\n                  initial: \"validate\",\n                  states: {\n                    validate: {\n                      always: [\n                        {\n                          cond: \"noProviderAndRegion\",\n                          target: \"idle\",\n                        },\n                        {\n                          cond: \"noSizes\",\n                          target: \"loading\",\n                        },\n                        {\n                          cond: \"emptySizes\",\n                          target: \"error\",\n                        },\n                        {\n                          target: \"valid\",\n                        },\n                      ],\n                    },\n                    idle: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeIdle\",\n                    },\n                    valid: {\n                      tags: \"sizeValid\",\n                      type: \"final\",\n                    },\n                    error: {\n                      entry: \"fieldInvalid\",\n                      tags: \"sizeError\",\n                    },\n                    loading: {\n                      description:\n                        \"Fetch the data required to show the available sizes and limits\",\n                      invoke: {\n                        src: \"getSizes\",\n                        onDone: [\n                          {\n                            actions: \"setSizes\",\n                            target: \"validate\",\n                          },\n                        ],\n                        onError: [\n                          {\n                            target: \"error\",\n                          },\n                        ],\n                      },\n                      tags: \"sizeLoading\",\n                    },\n                  },\n                  on: {\n                    create: {\n                      target: \".validate\",\n                    },\n                    providerChange: {\n                      target: \".validate\",\n                    },\n                    regionChange: {\n                      target: \".validate\",\n                    },\n                  },\n                },\n              },\n              onDone: {\n                target: \"#TrialPlanMachine.configuring.form.valid\",\n              },\n            },\n          },\n          onDone: {\n            target: \"saved\",\n          },\n        },\n        saved: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        setInitialContext: assign((context) => {\n          return {\n            form: {\n              ...(context.capabilities.defaultProvider\n                ? onProviderChange(\n                    context.capabilities.availableProviders,\n                    context.capabilities.defaultProvider\n                  )\n                : {}),\n            },\n          };\n        }),\n        fieldInvalid: send(\"fieldInvalid\"),\n        setName: assign((context, { name }) => {\n          if (context.creationError === \"name-taken\") {\n            return {\n              form: { ...context.form, name },\n              creationError: undefined,\n            };\n          }\n          return { form: { ...context.form, name } };\n        }),\n        setProvider: assign((context, { provider }) => {\n          return {\n            form: {\n              ...context.form,\n              ...onProviderChange(\n                context.capabilities.availableProviders,\n                provider\n              ),\n            },\n            sizes: undefined,\n          };\n        }),\n        setRegion: assign((context, { region }) => {\n          if (context.creationError === \"region-unavailable\") {\n            return {\n              form: { ...context.form, region },\n              sizes: undefined,\n              creationError: undefined,\n            };\n          }\n          return {\n            form: {\n              ...context.form,\n              region,\n            },\n            sizes: undefined,\n          };\n        }),\n        setSizes: assign((_context, event) => {\n          const sizes = event.data;\n          return {\n            sizes,\n          };\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resetCreationErrorMessage: assign((_context) => ({\n          creationError: undefined,\n        })),\n        setCreationError: assign((_context, { error }) => ({\n          creationError: error,\n        })),\n        triggerSave: sendParent((context) => {\n          const form = context.form as Required<typeof context.form>;\n          const data: CreateKafkaFormData = {\n            plan: \"developer\",\n            name: form.name,\n            provider: form.provider,\n            region: form.region,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            sizeId: context.sizes!.trial.id,\n            billing: undefined,\n          };\n          return {\n            type: \"save\",\n            data,\n          };\n        }),\n        triggerSubmit: send(\"submit\"),\n      },\n      guards: {\n        isTrialUsed: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"used\",\n        isTrialUnavailable: ({ capabilities }) =>\n          capabilities === undefined ||\n          capabilities.instanceAvailability === \"unavailable\",\n        nameIsEmpty: ({ form }) =>\n          form.name === undefined || form.name.length === 0,\n        nameIsValid: ({ form }) =>\n          /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(form.name || \"\"),\n        providerIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have loaded a list of providers\n            (capabilities?.availableProviders || []).length > 0 &&\n            // must have selected a provider\n            selectedProviderInfo !== undefined\n          );\n        },\n        regionIsValid: ({ form, capabilities }) => {\n          const selectedProviderInfo = capabilities?.availableProviders.find(\n            (p) => p.id === form.provider\n          );\n          return (\n            // must have selected a region\n            form.region !== undefined &&\n            // the region must be included in the capabilities for the provider\n            selectedProviderInfo?.regions.find((r) => r.id === form.region) !==\n              undefined\n          );\n        },\n        noProviderAndRegion: ({ form }) =>\n          form.provider === undefined || form.region === undefined,\n        noSizes: ({ sizes }) => sizes === undefined,\n        emptySizes: ({ sizes }) =>\n          sizes !== undefined && sizes.standard.length === 0,\n        didProviderChange: (context, event) =>\n          context.form.provider !== event.provider,\n        didRegionChange: (context, event) =>\n          context.form.region !== event.region,\n      },\n    }\n  );\n","import type { CloudProvider, CloudRegion } from \"ui-models/src/models/kafka\";\nimport { assign, createMachine, EventFrom, forwardTo, send } from \"xstate\";\nimport type {\n  CloudProvidersInfo,\n  CreateKafkaFormData,\n  CreateKafkaInitializationData,\n  CreateKafkaInstanceError,\n  StandardPlanInitializationData,\n  StandardSizes,\n  TrialPlanInitializationData,\n  TrialSizes,\n} from \"../types\";\nimport {\n  StandardPlanMachine,\n  StandardPlanMachineContext,\n} from \"./StandardPlanMachine\";\nimport { TrialPlanMachine, TrialPlanMachineContext } from \"./TrialPlanMachine\";\n\ntype Quota =\n  | Pick<\n      StandardPlanInitializationData,\n      | \"plan\"\n      | \"remainingPrepaidQuota\"\n      | \"marketplaceSubscriptions\"\n      | \"remainingMarketplaceQuota\"\n      | \"instanceAvailability\"\n    >\n  | Pick<TrialPlanInitializationData, \"plan\" | \"instanceAvailability\">;\n\nexport type CreateKafkaInstanceMachineContext = {\n  quota: Quota | undefined;\n  providers: CloudProvidersInfo | undefined;\n  defaultProvider: CloudProvider | undefined;\n  capabilities: CreateKafkaInitializationData | undefined;\n};\n\nconst CreateKafkaInstanceMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMBOYCGAXMBpDAZgNYYCSAdrFhucmAHQA2A9hhAJblT0COArs2r1kACzDIinKAAIqNCBlQRp-QRgDEYVKmap6AB0bYCugLbD02PIRIU5tBizZTeAoaPGSus6uQVKVNwwETgA3ZmRsdmZyAG0ABgBdRFB9Zlh2LGjyFJAAD0QAFniAJnp4gGYAdkKATgAOeqr4qvrCgFYAGhAAT0QANir++n769tqq2sKARhKKjsKAX0XutEwcfGIySl86JlYOLlc1YTEJKR95RWVVanV7fxug6QxQjHYjACNGMFy0jKyMVyBQQxTKlRqDSaLTaXV6iHG8XoVXahX6UyqJVqJX6-WWq0sGxs23seych24twwp08Fwe10CanUzD4WGkzAIlz8DKpf3SmWywKKpXK1TqjWarQ63T6CHa8UK9Hqcw6JUK6palXxIDWVk2th2NDJBxcVJp5289ICVPU5GYXMejOoLzeHww31+SBA-wFQK9ILBoshEph0vhoPaw2hFRKasKbQa0yWKx1hOsWzsu0cJqOZqtEHUfIBgv9iCTU2RkZj03RYsjMoGyvo0yG40KJSq0wq02m9W1uqJGcNDn2zlzQXoEDAoTALH0WkLXp9gJypYQ5cVKP61drNXr4faFSRJVmdUmasjvf7af1JKzo4px3cZy8MinM7nWhd7y+H0yPU0bRdAMIwsBMVBzAHdMDVJbMx0pCcPAtN9p1nZh51Qb83U+P8sB6EJyHCSIVwSZIl35FchQQWpanaeh4y7JN5gqbFZgbOU1WRE96m3Bp+lRKoKmvdZoLvI04MfM0kNfaR3zQjCsN-Rh-3UOTP0wvhYEgItfVXUAQRouiGO7QpmNYkp2NMqolXqWZcSPCpRn6NFhL1YlM3Eh9TUQl8LjU9Cv1eH93VwgD-IUoLsJ+HTKLXQz6NskyzJPCzwwqdppnoWj4niaZ2kPepaiTaZXMHGD73JFwCDALBRAufQdFCdgp1QWB1Aa5gmpa2AXj8aR0CgbIesir5ovI4s-X0staNqegjzGcZ+hKHjeyqdj2jGcplu4moFSqKpStEjyR0qo5qtqkR6sa5qtDarQdD0QxjDMCwRNvY7jXg+hzrq7wOq626CKIqIYlImKSym9cMRsiY0RmaYFXiOFZUKfa5rqRy5mmWp4kGdpDve4dPsfH7Lr+67uvainbvZTCBqG6Q+HIEb3TG1IKIh-Jpsjeh2k7XHOw7QqWnY0Z6mbapakGNVqgR-GUygwnYK8rhVJiBg5BwV63KHZXTqgcHJq5hASlROj+lKCp6kqdUVvYq3Mr3ds0UaPLZgJ9yiY13xHSe8h6Gan57leT12YmvTjaxbd6NM+NDIVdLCkskUFmxyZt2cwYPd1+982kP36FgV4pHUKCAGU+GQOhYHgcbdKoxOjKR0p6nmYXlvt1Fyn6Lt1W7E9Jkc7Pys8vOC6LprVaggBRIDUENiOQSjioY7b+PTNRe2a152NbLy03M7y4exJHcKvwLwOwGDmcF6orFWl5i2Nt7toEYqUWpayrt5SW+z4ls4+H0GBn0wuPYuU80wVyrnAWuYd65rkbvRBUtQ6x9zaKLeMO8WhDB7PEKEtRAFe0nKhdS+cjD+wniXGec9b5rnvuLSMSNErxhmJUUWCMsrKmWngsEuJ5YpjtFOWBqY3qez1jmBCJxpJ0h9jyIItDIYI1SrKSM4tW6dmVB0TsaISoKxvGIiqEinzUnzAo42zRxYojmD3FEtk+bTFFkMZskYcS9mfiwwh4ivpmhAWYkEswGg2RwSxJosxSjrU4tjAePcEY8SKp4wx3ifK0m8CAxSIVlJ4T8QMfic1lrFVaMqeYDjwztjojxHhsYOxW1ssmAkoic6eX1sY7JCBWjsQ7LNKWjRKiLRxmieW9SdYjxOkY0mV1Oo3Vaq0msCoY7FCGOlWMsxkYIkxMiHh7RYyMPjEJPRDSRnExcJYCAso4GxUhrGQY5QMpjCSpedaExkRND5jorEFQ9lDLKifI5XBWmb3DC2TKlRGLVCxBeDoCTR49CoGAUwjNmaulGqHb0HMjYgkciiLK+UUFWRxt2VZbT1mt1GK0Fo-EOx4n2cMn53srgBAvhANmqLw53yaIqfi4xsQdnyu2d+aVqjONbmna2OJuxQpHGPchhdwEGzrhc42MZBXYwmD3CE-F+j21jCMZy8Ytxdlom0CVewpU0FacteUIwcXcpRKiOY7FsYrzBdbeMhUWJt2NcAkhAVQHSsvuaxos19rzUxelFsyiBjdhGC2UYLY4k9l0V8o6RC0lgMnnK85nMMVVPKJo2GbiirsOsrMd1uU1SWzqSImlQDiEfh9WQs18qs2IGWrk4N-9Q0ZUxJZJoSolWVBylYwqnrhDMFMIYGqKLlzNoQNUf+SomFoP2p2Ht1lcZ5Roj2IW4rqXfKAa0o87EaI3JyhtQS2Ntyo2WMsIAA */\n  createMachine(\n    {\n      context: {\n        providers: undefined,\n        defaultProvider: undefined,\n        quota: undefined,\n        capabilities: undefined,\n      },\n      predictableActionArguments: true,\n      tsTypes: {} as import(\"./CreateKafkaInstanceMachine.typegen\").Typegen0,\n      schema: {\n        context: {} as CreateKafkaInstanceMachineContext,\n        events: {} as\n          | {\n              type: \"standard quota available\";\n              quota: Pick<\n                StandardPlanInitializationData,\n                | \"remainingPrepaidQuota\"\n                | \"remainingMarketplaceQuota\"\n                | \"marketplaceSubscriptions\"\n              >;\n            }\n          | {\n              type: \"out of standard quota\";\n              quota: Pick<\n                StandardPlanInitializationData,\n                \"marketplaceSubscriptions\"\n              >;\n            }\n          | {\n              type: \"no standard quota available\";\n              hasTrialQuota: boolean;\n            }\n          | {\n              type: \"trial available\";\n              capabilities: TrialPlanInitializationData;\n            }\n          | { type: \"trial used\" }\n          | { type: \"developer available\" }\n          | { type: \"developer used\" }\n          | { type: \"developer unavailable\" }\n          | {\n              type: \"providers and regions available\";\n              providers: CloudProvidersInfo;\n              defaultProvider: CloudProvider | undefined;\n            }\n          | { type: \"providers or regions unavailable\" }\n          | { type: \"save\"; data: CreateKafkaFormData }\n          | { type: \"createSuccess\" }\n          | { type: \"createError\"; error: CreateKafkaInstanceError },\n        services: {} as {\n          checkStandardQuota: {\n            data: never;\n          };\n          checkDeveloperAvailability: {\n            data: never;\n          };\n          fetchProvidersWithRegions: {\n            data: never;\n          };\n          standardPlan: {\n            data: StandardPlanMachineContext;\n          };\n          trialPlan: {\n            data: TrialPlanMachineContext;\n          };\n        },\n      },\n      id: \"createKafkaInstance\",\n      initial: \"loading\",\n      states: {\n        loading: {\n          description: \"Fetch the data required to drive the creation flow\",\n          tags: \"loading\",\n          initial: \"quota\",\n          states: {\n            quota: {\n              initial: \"checking standard quota\",\n              states: {\n                \"checking standard quota\": {\n                  invoke: {\n                    src: \"checkStandardQuota\",\n                    onError: [\n                      {\n                        actions: \"setStandardUnavailable\",\n                        target: \"standard\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"standard quota available\": {\n                      actions: \"setStandardAvailable\",\n                      target: \"standard\",\n                    },\n                    \"out of standard quota\": {\n                      actions: \"setStandardOutOfQuota\",\n                      target: \"standard\",\n                    },\n                    \"no standard quota available\": {\n                      target: \"checking developer availability\",\n                    },\n                  },\n                },\n                standard: {\n                  type: \"final\",\n                  always: {\n                    target: \"#createKafkaInstance.loading.fetching providers\",\n                  },\n                },\n                developer: {\n                  type: \"final\",\n                  always: {\n                    target: \"#createKafkaInstance.loading.fetching providers\",\n                  },\n                },\n                \"checking developer availability\": {\n                  invoke: {\n                    src: \"checkDeveloperAvailability\",\n                    onError: [\n                      {\n                        actions: \"setDeveloperUnavailable\",\n                        target: \"developer\",\n                      },\n                    ],\n                  },\n                  on: {\n                    \"developer used\": {\n                      actions: \"setDeveloperUsed\",\n                      target: \"developer\",\n                    },\n                    \"developer available\": {\n                      actions: \"setDeveloperAvailable\",\n                      target: \"developer\",\n                    },\n                    \"developer unavailable\": {\n                      actions: \"setDeveloperUnavailable\",\n                      target: \"developer\",\n                    },\n                  },\n                },\n              },\n            },\n            \"fetching providers\": {\n              invoke: {\n                src: \"fetchProvidersWithRegions\",\n                onError: [\n                  {\n                    actions: \"setProvidersOrRegionsUnavailable\",\n                    target: \"ready\",\n                  },\n                ],\n              },\n              on: {\n                \"providers and regions available\": {\n                  actions: \"setProviders\",\n                  target: \"ready\",\n                },\n                \"providers or regions unavailable\": {\n                  actions: \"setProvidersOrRegionsUnavailable\",\n                  target: \"ready\",\n                },\n              },\n            },\n            ready: {\n              type: \"final\",\n              entry: \"setCapabilities\",\n            },\n          },\n          onDone: [\n            {\n              cond: \"standard plan\",\n              target: \"standard plan\",\n            },\n            {\n              cond: \"developer plan\",\n              target: \"developer plan\",\n            },\n            {\n              target: \"system unavailable\",\n            },\n          ],\n        },\n        \"system unavailable\": {\n          tags: \"systemUnavailable\",\n          type: \"final\",\n        },\n        \"standard plan\": {\n          invoke: {\n            src: \"standardPlan\",\n            id: \"standardPlanService\",\n          },\n          tags: \"standardPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToStandardPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        \"developer plan\": {\n          invoke: {\n            src: \"trialPlan\",\n            id: \"trialPlanService\",\n          },\n          tags: \"trialPlan\",\n          initial: \"idle\",\n          states: {\n            idle: {\n              on: {\n                save: {\n                  target: \"saving\",\n                },\n              },\n            },\n            saving: {\n              invoke: {\n                src: \"createInstance\",\n              },\n              tags: \"saving\",\n              on: {\n                createSuccess: {\n                  target: \"#createKafkaInstance.complete\",\n                },\n                createError: {\n                  actions: \"notifyCreateErrorToTrialPlan\",\n                  target: \"idle\",\n                },\n              },\n            },\n          },\n        },\n        complete: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      actions: {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        setDeveloperAvailable: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"available\" as const,\n          },\n        })),\n        setDeveloperUnavailable: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"unavailable\" as const,\n          },\n        })),\n        setDeveloperUsed: assign((_) => ({\n          quota: {\n            plan: \"developer\" as const,\n            instanceAvailability: \"used\" as const,\n          },\n        })),\n        setStandardAvailable: assign((_, event) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"available\" as const,\n            remainingPrepaidQuota: event.quota.remainingPrepaidQuota,\n            marketplaceSubscriptions: event.quota.marketplaceSubscriptions,\n            remainingMarketplaceQuota: event.quota.remainingMarketplaceQuota,\n          },\n        })),\n        setStandardOutOfQuota: assign((_, event) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"out-of-quota\" as const,\n            marketplaceSubscriptions: event.quota.marketplaceSubscriptions,\n            remainingMarketplaceQuota: 0,\n            remainingPrepaidQuota: 0,\n          },\n        })),\n        setStandardUnavailable: assign((_) => ({\n          quota: {\n            plan: \"standard\" as const,\n            instanceAvailability: \"instance-unavailable\" as const,\n            marketplaceSubscriptions: [],\n            remainingMarketplaceQuota: 0,\n            remainingPrepaidQuota: 0,\n          },\n        })),\n        setProviders: assign((_, event) => {\n          return {\n            providers: event.providers,\n            defaultProvider: event.defaultProvider,\n          };\n        }),\n        setProvidersOrRegionsUnavailable: assign((context) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const quota = context.quota!;\n          if (quota.plan === \"standard\") {\n            quota.instanceAvailability = \"regions-unavailable\";\n          } else {\n            quota.instanceAvailability = \"unavailable\";\n          }\n          return {\n            providers: [],\n            quota,\n          };\n        }),\n        setCapabilities: assign((context) => {\n          const { providers, defaultProvider, quota } = context;\n          if (!providers || !quota) {\n            throw new Error(\"unexpected condition, no providers or quota\");\n          }\n          if (quota.plan === \"standard\") {\n            const capabilities: StandardPlanInitializationData = {\n              plan: \"standard\",\n              availableProviders: providers,\n              defaultProvider,\n              instanceAvailability: quota.instanceAvailability,\n              marketplaceSubscriptions: quota.marketplaceSubscriptions,\n              remainingMarketplaceQuota: quota.remainingMarketplaceQuota,\n              remainingPrepaidQuota: quota.remainingPrepaidQuota,\n            };\n            return { capabilities };\n          } else {\n            const capabilities: TrialPlanInitializationData = {\n              plan: \"developer\",\n              availableProviders: providers,\n              defaultProvider,\n              instanceAvailability: quota.instanceAvailability,\n            };\n            return { capabilities };\n          }\n        }),\n        notifyCreateErrorToStandardPlan: forwardTo(\"standardPlanService\"),\n        notifyCreateErrorToTrialPlan: send(\n          (_, event) => {\n            return { type: \"createError\", error: event.error };\n          },\n          { to: \"trialPlanService\" }\n        ),\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n      },\n      guards: {\n        \"standard plan\": (context) => context.quota?.plan === \"standard\",\n        \"developer plan\": (context) => context.quota?.plan === \"developer\",\n      },\n    }\n  );\n\ntype EventTypes = Pick<\n  EventFrom<typeof CreateKafkaInstanceMachine>,\n  \"type\"\n>[\"type\"];\n\ntype EventOptions<E extends EventTypes> = Omit<\n  EventFrom<typeof CreateKafkaInstanceMachine, E>,\n  \"type\"\n>;\n\nexport type CreateKafkaInstanceServices = {\n  checkStandardQuota: (events: {\n    onOutOfQuota: (p: EventOptions<\"out of standard quota\">) => void;\n    onQuotaAvailable: (p: EventOptions<\"standard quota available\">) => void;\n    onNoQuotaAvailable: (\n      p: EventOptions<\"no standard quota available\">\n    ) => void;\n  }) => void;\n  checkDeveloperAvailability: (events: {\n    onUsed: () => void;\n    onAvailable: () => void;\n    onUnavailable: () => void;\n  }) => void;\n  fetchProvidersWithRegions: (\n    plan: \"standard\" | \"developer\",\n    events: {\n      onAvailable: (p: EventOptions<\"providers and regions available\">) => void;\n      onUnavailable: () => void;\n    }\n  ) => void;\n  getStandardSizes: (\n    provider: CloudProvider,\n    region: CloudRegion\n  ) => Promise<StandardSizes>;\n  getTrialSizes: (\n    provider: CloudProvider,\n    region: CloudRegion\n  ) => Promise<TrialSizes>;\n  onCreate: (\n    data: CreateKafkaFormData,\n    onSuccess: () => void,\n    onError: (error: CreateKafkaInstanceError) => void\n  ) => void;\n};\n\nexport function makeCreateKafkaInstanceMachine({\n  checkStandardQuota: checkStandardQuotaCb,\n  checkDeveloperAvailability: checkDeveloperAvailabilityCb,\n  fetchProvidersWithRegions: fetchProvidersWithRegionsCb,\n  getStandardSizes: getStandardSizesCb,\n  getTrialSizes: getTrialSizesCb,\n  onCreate,\n}: CreateKafkaInstanceServices) {\n  return CreateKafkaInstanceMachine.withConfig({\n    services: {\n      checkStandardQuota: () => {\n        return (send) =>\n          checkStandardQuotaCb({\n            onNoQuotaAvailable: ({ hasTrialQuota }) => {\n              send({ type: \"no standard quota available\", hasTrialQuota });\n            },\n            onOutOfQuota: ({ quota }) => {\n              send({ type: \"out of standard quota\", quota });\n            },\n            onQuotaAvailable: ({ quota }) => {\n              send({ type: \"standard quota available\", quota });\n            },\n          });\n      },\n      checkDeveloperAvailability: () => {\n        return (send) => {\n          checkDeveloperAvailabilityCb({\n            onAvailable: () => send(\"developer available\"),\n            onUsed: () => send(\"developer used\"),\n            onUnavailable: () => send(\"developer unavailable\"),\n          });\n        };\n      },\n      fetchProvidersWithRegions: (context) => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const instanceType = context.quota!.plan;\n        return (send) => {\n          fetchProvidersWithRegionsCb(instanceType, {\n            onAvailable: ({ providers, defaultProvider }) =>\n              send({\n                type: \"providers and regions available\",\n                providers,\n                defaultProvider,\n              }),\n            onUnavailable: () => send(\"providers or regions unavailable\"),\n          });\n        };\n      },\n      createInstance: (_context, event) => {\n        const form = event.data;\n\n        return (send) => {\n          function onSuccess() {\n            send(\"createSuccess\");\n          }\n\n          function onError(error: CreateKafkaInstanceError) {\n            send({ type: \"createError\", error });\n          }\n\n          onCreate(\n            {\n              plan: form.plan,\n              name: form.name,\n              provider: form.provider,\n              region: form.region,\n              sizeId: form.sizeId,\n              billing: form.billing,\n            },\n            onSuccess,\n            onError\n          );\n        };\n      },\n      standardPlan: (context) => {\n        return StandardPlanMachine.withContext({\n          capabilities: context.capabilities as StandardPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getStandardSizesCb(form.provider, form.region);\n            },\n          },\n        });\n      },\n      trialPlan: (context) => {\n        return TrialPlanMachine.withContext({\n          capabilities: context.capabilities as TrialPlanInitializationData,\n          sizes: undefined,\n          form: {},\n          creationError: undefined,\n        }).withConfig({\n          services: {\n            getSizes: (context) => {\n              const form = context.form as Required<typeof context.form>;\n              return getTrialSizesCb(form.provider, form.region);\n            },\n          },\n        });\n      },\n    },\n  });\n}\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { CreateKafkaInstanceServices } from \"./CreateKafkaInstanceMachine\";\nimport { makeCreateKafkaInstanceMachine } from \"./CreateKafkaInstanceMachine\";\n\nexport const CreateKafkaInstanceContext = createContext<{\n  service: ActorRefFrom<ReturnType<typeof makeCreateKafkaInstanceMachine>>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport const CreateKafkaInstanceProvider: FunctionComponent<\n  CreateKafkaInstanceServices\n> = ({\n  onCreate,\n  checkStandardQuota,\n  checkDeveloperAvailability,\n  fetchProvidersWithRegions,\n  getStandardSizes,\n  getTrialSizes,\n  children,\n}) => {\n  const service = useInterpret(\n    () =>\n      makeCreateKafkaInstanceMachine({\n        checkStandardQuota,\n        checkDeveloperAvailability,\n        fetchProvidersWithRegions,\n        getStandardSizes,\n        getTrialSizes,\n        onCreate,\n      }),\n    { devTools: true }\n  );\n  return (\n    <CreateKafkaInstanceContext.Provider value={{ service }}>\n      {children}\n    </CreateKafkaInstanceContext.Provider>\n  );\n};\n","export const LogoAWS = new URL(\"./Logo-AWS.svg\", import.meta.url)\n  .href;\nexport const LogoAzure = new URL(\n  \"./Logo-Azure.svg\",\n  import.meta.url\n).href;\nexport const LogoGCP = new URL(\"./Logo-GCP.svg\", import.meta.url)\n  .href;\nexport const LogoRedhat = new URL(\n  \"./Logo-Redhat.svg\",\n  import.meta.url\n).href;","import type { FunctionComponent } from \"react\";\nimport { LogoAWS } from \"./images\";\n\nexport const AWSLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoAWS} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoAzure } from \"./images\";\n\nexport const AzureLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoAzure} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoGCP } from \"./images\";\n\nexport const GCPLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoGCP} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Gallery,\n  GalleryItem,\n  HelperText,\n  HelperTextItem,\n  Tile,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { MarketPlace } from \"ui-models/src/models/kafka\";\nimport { AWSLogo, AzureLogo, GCPLogo, RedhatLogo } from \"../../Logos\";\n\nexport type BillingTilesProps = {\n  value: \"prepaid\" | string | undefined;\n  hasPrepaid: boolean;\n  subscriptions: {\n    marketplace: MarketPlace;\n    subscription: string;\n    isDisabled: boolean;\n  }[];\n  isPrepaidOverQuota: boolean;\n  prepaidQuota: number;\n  isMarketplaceOverQuota: boolean;\n  marketplaceQuota: number;\n  onPrepaid: () => void;\n  onSubscription: (marketplace: MarketPlace, subscription: string) => void;\n  validated?: SelectProps[\"validated\"];\n};\nexport const BillingTiles: VoidFunctionComponent<BillingTilesProps> = ({\n  value,\n  hasPrepaid,\n  subscriptions,\n  isPrepaidOverQuota,\n  prepaidQuota,\n  isMarketplaceOverQuota,\n  marketplaceQuota,\n  onPrepaid,\n  onSubscription,\n  validated,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  const marketplaces: { [key in MarketPlace]: string } = {\n    aws: t(\"billing.marketplace_aws\"),\n    azure: t(\"billing.marketplace_azure\"),\n    gcp: t(\"billing.marketplace_gcp\"),\n    rhm: t(\"billing.marketplace_rh\"),\n  };\n  return (\n    <>\n      <Flex\n        role=\"listbox\"\n        aria-label={t(\"select_billing\")}\n        direction={{ default: \"column\", md: \"row\" }}\n      >\n        {hasPrepaid && (\n          <Flex\n            flex={{ default: \"flex_1\" }}\n            direction={{ default: \"column\" }}\n            spaceItems={{ default: \"spaceItemsSm\" }}\n          >\n            <span className=\"pf-c-form__label\">\n              <span className=\"pf-c-form__label-text\">\n                {t(\"billing.prepaid\")}\n              </span>\n            </span>\n            <FlexItem flex={{ default: \"flex_1\" }}>\n              <Tile\n                className={\"pf-u-w-100\"}\n                title={t(\"billing.prepaid_option\")}\n                icon={tiles[\"rhm\"]}\n                isDisabled={isPrepaidOverQuota}\n                isStacked={true}\n                isSelected={value === \"prepaid\"}\n                onClick={onPrepaid}\n              >\n                &nbsp;\n              </Tile>\n            </FlexItem>\n            {isPrepaidOverQuota && prepaidQuota > 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.prepaid_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {isPrepaidOverQuota && prepaidQuota === 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.prepaid_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </Flex>\n        )}\n        {subscriptions.length > 0 && (\n          <Flex\n            flex={{ default: \"flex_1\" }}\n            direction={{ default: \"column\" }}\n            spaceItems={{ default: \"spaceItemsSm\" }}\n          >\n            {hasPrepaid && (\n              <span className=\"pf-c-form__label\">\n                <span className=\"pf-c-form__label-text\">\n                  {t(\"billing.marketplace\")}\n                </span>\n              </span>\n            )}\n            <Gallery hasGutter={true}>\n              {subscriptions.map(\n                ({ marketplace, subscription, isDisabled }) => (\n                  <GalleryItem key={`tile-${subscription}`}>\n                    <Tile\n                      className={\"pf-u-w-100\"}\n                      title={marketplaces[marketplace]}\n                      icon={tiles[marketplace]}\n                      isStacked={true}\n                      isSelected={value === subscription}\n                      isDisabled={isDisabled || isMarketplaceOverQuota}\n                      onClick={() => onSubscription(marketplace, subscription)}\n                    >\n                      {subscription}\n                    </Tile>\n                  </GalleryItem>\n                )\n              )}\n            </Gallery>\n            {isMarketplaceOverQuota && marketplaceQuota > 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.marketplace_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {isMarketplaceOverQuota && marketplaceQuota === 0 && (\n              <HelperText className={\"pf-c-form__helper-text\"}>\n                <HelperTextItem variant={\"error\"}>\n                  {t(\"billing.marketplace_out_of_quota\")}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </Flex>\n        )}\n      </Flex>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-billing-option\"\n        name=\"billing\"\n        validated={validated}\n        onChange={(value) => {\n          if (value === \"prepaid\") {\n            onPrepaid();\n          } else {\n            const s = subscriptions.find((s) => s.marketplace === value);\n            if (s) {\n              onSubscription(s.marketplace, s.subscription);\n            }\n          }\n        }}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_billing\")}\n          />,\n          hasPrepaid ? (\n            <FormSelectOption\n              key={\"prepaid\"}\n              value={\"prepaid\"}\n              label={`prepaid`}\n            />\n          ) : null,\n          subscriptions.map(({ marketplace, subscription, isDisabled }) => {\n            return (\n              <FormSelectOption\n                key={`select-option-${subscription}`}\n                value={subscription}\n                label={`${marketplace} - ${subscription}`}\n                isDisabled={isDisabled}\n              />\n            );\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n\nconst tiles: { [id in MarketPlace]: JSX.Element } = {\n  aws: <AWSLogo />,\n  gcp: <GCPLogo />,\n  azure: <AzureLogo />,\n  rhm: <RedhatLogo />,\n};\n","import type { FunctionComponent } from \"react\";\nimport { LogoRedhat } from \"./images\";\n\nexport const RedhatLogo: FunctionComponent = () => {\n  return (\n    <>\n      <img src={LogoRedhat} alt={\"\"} style={{ height: \"60px\" }} />\n    </>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  FormSelect,\n  FormSelectOption,\n  Skeleton,\n  Tile,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { CloudProvider } from \"ui-models/src/models/kafka\";\nimport { AWSLogo, AzureLogo, GCPLogo } from \"../../Logos\";\nimport type { CloudProviderInfo } from \"../types\";\n\nexport type CloudProvidersTilesProps = {\n  providers: (CloudProviderInfo & { isDisabled?: boolean })[];\n  value: CloudProvider | undefined;\n  onChange: (provider: CloudProvider) => void;\n  isDisabled: boolean;\n  validated?: SelectProps[\"validated\"];\n};\nexport const CloudProvidersTiles: VoidFunctionComponent<\n  CloudProvidersTilesProps\n> = ({ providers, value, onChange, isDisabled, validated }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n  return (\n    <>\n      {providers.length === 0 && (\n        <Skeleton\n          className=\"pf-m-text-4xl\"\n          screenreaderText=\"Loading contents\"\n        />\n      )}\n      <div role=\"listbox\" aria-label={t(\"select_cloud_provider\")}>\n        <Flex\n          justifyContent={{ default: \"justifyContentSpaceBetween\" }}\n          spacer={{ default: \"spacerNone\" }}\n          spaceItems={{ default: \"spaceItemsXs\" }}\n        >\n          {providers.map(\n            ({ id, displayName, isDisabled: providerDisabled }) => (\n              <FlexItem grow={{ default: \"grow\" }} key={id}>\n                <Tile\n                  className={\"pf-u-w-100\"}\n                  title={displayName}\n                  icon={tiles[id]}\n                  isStacked={true}\n                  isSelected={value === id}\n                  isDisabled={providerDisabled || isDisabled}\n                  onClick={() => onChange(id)}\n                >\n                  {(providerDisabled || isDisabled) &&\n                    t(\"billing.provider_incompatible_with_current_billing\")}\n                  &nbsp;\n                </Tile>\n              </FlexItem>\n            )\n          )}\n        </Flex>\n      </div>\n      <FormSelect\n        className={\"pf-u-display-none\"}\n        value={value}\n        id=\"form-cloud-provider-option\"\n        name=\"cloud-provider\"\n        isDisabled={isDisabled}\n        validated={validated}\n        onChange={(value) => onChange(value as CloudProvider)}\n      >\n        {[\n          <FormSelectOption\n            value=\"\"\n            key=\"placeholder\"\n            label={t(\"select_cloud_provider\")}\n          />,\n          providers.map(({ id, displayName }, index) => {\n            return (\n              <FormSelectOption key={index} value={id} label={displayName} />\n            );\n          }),\n        ]}\n      </FormSelect>\n    </>\n  );\n};\n\nconst tiles: { [id in CloudProvider]: JSX.Element } = {\n  aws: <AWSLogo />,\n  gcp: <GCPLogo />,\n  azure: <AzureLogo />,\n};\n","import { Flex, FlexItem, Form } from \"@patternfly/react-core\";\nimport type { FormEvent, VoidFunctionComponent } from \"react\";\nimport { useCallback } from \"react\";\nimport type { CloudProvider, MarketPlace } from \"ui-models/src/models/kafka\";\nimport type {\n  FieldInstanceNameProps,\n  FieldSizeProps,\n  InstanceInfoProps,\n} from \"./components\";\nimport {\n  FieldAZ,\n  FieldBillingTiles,\n  FieldCloudProvider,\n  FieldCloudRegion,\n  FieldInstanceName,\n  FieldSize,\n  FormAlerts,\n  InstanceInfo,\n  InstanceInfoSkeleton,\n  ModalAlertsStandardPlan,\n} from \"./components\";\nimport { useStandardPlanMachine } from \"./machines\";\n\nexport type StandardInstanceFormProps = {\n  formId: string;\n  onClickContactUs: () => void;\n  onLearnHowToAddStreamingUnits: () => void;\n  onLearnMoreAboutSizes: () => void;\n  onClickQuickStart: () => void;\n  subscriptionOptionsHref: string;\n};\n\nexport const StandardInstanceForm: VoidFunctionComponent<\n  StandardInstanceFormProps\n> = ({\n  formId,\n  onClickContactUs,\n  onLearnHowToAddStreamingUnits,\n  onLearnMoreAboutSizes,\n  onClickQuickStart,\n  subscriptionOptionsHref,\n}) => {\n  const {\n    isBillingSelectionRequired,\n    isBillingSingleMarketplace,\n    capabilities,\n    selectedSize,\n    billingType,\n    error,\n    onCreate,\n  } = useStandardPlanMachine();\n\n  const onSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      onCreate();\n    },\n    [onCreate]\n  );\n\n  const instanceInfoBilling: InstanceInfoProps[\"billing\"] = (() => {\n    if (!isBillingSelectionRequired) {\n      if (isBillingSingleMarketplace === false) {\n        return {\n          value: \"prepaid\",\n          subscriptionOptionsHref,\n          type: billingType,\n        };\n      } else {\n        return {\n          value: isBillingSingleMarketplace,\n          subscriptionOptionsHref,\n          type: billingType,\n        };\n      }\n    }\n    return undefined;\n  })();\n\n  return (\n    <>\n      <ModalAlertsStandardPlan\n        instanceAvailability={capabilities.instanceAvailability}\n        onClickContactUs={onClickContactUs}\n      />\n\n      <Flex\n        direction={{ default: \"column\", lg: \"row\" }}\n        alignItems={{ lg: \"alignItemsFlexStart\" }}\n      >\n        <FlexItem flex={{ default: \"flex_2\" }}>\n          <FormAlerts error={error} onClickContactUS={onClickContactUs} />\n          <Form onSubmit={onSubmit} id={formId}>\n            <ConnectedFieldInstanceName />\n            <ConnectedFieldCloudProvider />\n            <ConnectedFieldCloudRegion />\n            <ConnectedFieldAZ />\n            <ConnectedFieldSize\n              onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n              onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n            />\n            {isBillingSelectionRequired && (\n              <ConnectedBillingTiles\n                subscriptionOptionsHref={subscriptionOptionsHref}\n              />\n            )}\n          </Form>\n        </FlexItem>\n        <FlexItem\n          flex={{ default: \"flex_1\" }}\n          className=\"mas--CreateKafkaInstance__sidebar\"\n        >\n          {selectedSize === undefined ? (\n            <InstanceInfoSkeleton\n              isTrial={false}\n              onClickQuickStart={onClickQuickStart}\n            />\n          ) : (\n            <InstanceInfo\n              isTrial={false}\n              trialDurationInHours={undefined}\n              ingress={selectedSize.ingress}\n              egress={selectedSize.egress}\n              storage={selectedSize.storage}\n              maxPartitions={selectedSize.maxPartitions}\n              connections={selectedSize.connections}\n              connectionRate={selectedSize.connectionRate}\n              messageSize={selectedSize.messageSize}\n              onClickQuickStart={onClickQuickStart}\n              streamingUnits={selectedSize.displayName}\n              billing={instanceInfoBilling}\n            />\n          )}\n        </FlexItem>\n      </Flex>\n    </>\n  );\n};\n\nexport const ConnectedFieldInstanceName: VoidFunctionComponent = () => {\n  const {\n    form,\n    isNameTaken,\n    isNameInvalid,\n    isNameEmpty,\n    isNameError,\n    isFormEnabled,\n    setName,\n  } = useStandardPlanMachine();\n\n  const validity: FieldInstanceNameProps[\"validity\"] = (() => {\n    if (isNameTaken) {\n      return \"taken\";\n    } else if (isNameInvalid) {\n      return \"invalid\";\n    } else if (isNameEmpty && isNameError) {\n      return \"required\";\n    }\n    return \"valid\";\n  })();\n\n  return (\n    <FieldInstanceName\n      value={form.name || \"\"}\n      validity={validity}\n      isDisabled={!isFormEnabled}\n      onChange={setName}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudProvider: VoidFunctionComponent = () => {\n  const {\n    form,\n    capabilities,\n    isProviderError,\n    isFormEnabled,\n    isBillingSingleMarketplace,\n    setProvider,\n  } = useStandardPlanMachine();\n\n  const providers =\n    isBillingSingleMarketplace &&\n    isBillingSingleMarketplace.marketplace !== \"rhm\"\n      ? capabilities.availableProviders.map((p) => ({\n          ...p,\n          isDisabled: p.id !== isBillingSingleMarketplace.marketplace,\n        }))\n      : capabilities.availableProviders;\n\n  return (\n    <FieldCloudProvider\n      isValid={!isProviderError}\n      providers={providers}\n      value={form.provider}\n      isDisabled={!isFormEnabled}\n      onChange={setProvider}\n    />\n  );\n};\n\nexport const ConnectedFieldCloudRegion: VoidFunctionComponent = () => {\n  const {\n    form,\n    selectedProvider,\n    selectedSize,\n    isRegionError,\n    isFormEnabled,\n    capabilities,\n    error,\n    setRegion,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldCloudRegion\n      validity={\n        isRegionError\n          ? \"required\"\n          : error === \"region-unavailable\" ||\n            capabilities.instanceAvailability === \"regions-unavailable\"\n          ? \"region-unavailable\"\n          : \"valid\"\n      }\n      regions={selectedProvider?.regions}\n      value={form.region}\n      isDisabled={!isFormEnabled}\n      isSizeUnavailable={selectedSize?.isDisabled || false}\n      onChange={setRegion}\n    />\n  );\n};\n\nexport const ConnectedFieldAZ: VoidFunctionComponent = () => {\n  const { isFormEnabled } = useStandardPlanMachine();\n\n  return (\n    <FieldAZ\n      validity={\"valid\"}\n      options={\"multi\"}\n      value={\"multi\"}\n      isDisabled={!isFormEnabled}\n      onChange={() => false} // AZ is defined by the backend, we just visualize the value here\n    />\n  );\n};\n\nexport const ConnectedFieldSize: VoidFunctionComponent<\n  Pick<\n    FieldSizeProps,\n    \"onLearnHowToAddStreamingUnits\" | \"onLearnMoreAboutSizes\"\n  >\n> = ({ onLearnHowToAddStreamingUnits, onLearnMoreAboutSizes }) => {\n  const {\n    form,\n    sizes,\n    isSizeOverQuota,\n    isSizeDisabled,\n    isSizeError,\n    isSizeLoadingError,\n    isBillingSelectionRequired,\n    isFormEnabled,\n    isLoadingSizes,\n    isLoading,\n    setSize,\n    remainingQuota,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldSize\n      value={form.size?.quota}\n      sizes={sizes}\n      remainingQuota={isBillingSelectionRequired ? undefined : remainingQuota}\n      isDisabled={!isFormEnabled || sizes === undefined}\n      isLoading={isLoading || isLoadingSizes}\n      isError={isSizeError}\n      isLoadingError={isSizeLoadingError}\n      validity={\n        isSizeOverQuota ? \"out-of-quota\" : isSizeDisabled ? \"required\" : \"valid\"\n      }\n      onChange={setSize}\n      onLearnHowToAddStreamingUnits={onLearnHowToAddStreamingUnits}\n      onLearnMoreAboutSizes={onLearnMoreAboutSizes}\n    />\n  );\n};\n\nfunction isMarketplaceDisabled(\n  marketplace: MarketPlace,\n  selectedProvider: CloudProvider | undefined\n) {\n  if (marketplace === \"rhm\") {\n    return false;\n  } else if (selectedProvider) {\n    return marketplace !== selectedProvider;\n  }\n  return false;\n}\n\nexport const ConnectedBillingTiles: VoidFunctionComponent<{\n  subscriptionOptionsHref: string;\n}> = ({ subscriptionOptionsHref }) => {\n  const {\n    form,\n    capabilities,\n    selectedBilling,\n    billingType,\n    isBillingPrepaidAvailable,\n    isSizeOverQuota,\n    isBillingError,\n    isBillingPrepaidOverQuota,\n    isBillingMarketplaceOverQuota,\n    setBillingPrepaid,\n    setBillingSubscription,\n  } = useStandardPlanMachine();\n\n  return (\n    <FieldBillingTiles\n      value={\n        selectedBilling === \"prepaid\"\n          ? \"prepaid\"\n          : selectedBilling?.subscription\n      }\n      hasPrepaid={isBillingPrepaidAvailable}\n      subscriptions={capabilities.marketplaceSubscriptions.flatMap((mq) =>\n        mq.subscriptions.map((subscription) => ({\n          marketplace: mq.marketplace,\n          subscription,\n          isDisabled: isMarketplaceDisabled(mq.marketplace, form.provider),\n        }))\n      )}\n      isPrepaidOverQuota={isBillingPrepaidOverQuota}\n      prepaidQuota={capabilities.remainingPrepaidQuota || 0} // we can default to 0 here just to make TS happy, we will have the info here\n      isMarketplaceOverQuota={isBillingMarketplaceOverQuota}\n      marketplaceQuota={capabilities.remainingMarketplaceQuota || 0} // we can default to 0 here just to make TS happy, we will have the info here\n      onPrepaid={setBillingPrepaid}\n      onSubscription={setBillingSubscription}\n      isValid={!isSizeOverQuota && !isBillingError}\n      billingType={billingType}\n      subscriptionOptionsHref={subscriptionOptionsHref}\n    />\n  );\n};\n","import { DropdownGroup } from \"@patternfly/react-core\";\nimport { ActionsColumn } from \"@patternfly/react-table\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type KafkaInstanceActionsProps = {\n  onDetails: () => void;\n  onConnection: () => void;\n  canOpenConnection: boolean;\n  canChangeOwner: boolean;\n  onChangeOwner: () => void;\n  canDelete: boolean;\n  onDelete: () => void;\n};\n\nexport const KafkaInstanceActions: VoidFunctionComponent<\n  KafkaInstanceActionsProps\n> = ({\n  onDetails,\n  onConnection,\n  canOpenConnection,\n  canChangeOwner,\n  onChangeOwner,\n  canDelete,\n  onDelete,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <ActionsColumn\n      rowData={hackZIndex}\n      items={[\n        {\n          customChild: (\n            <DropdownGroup\n              label={t(\"table.actions.view-instance-information\")}\n            />\n          ),\n        },\n        {\n          title: t(\"table.actions.details\"),\n          onClick: onDetails,\n        },\n        {\n          title: t(\"table.actions.connection\"),\n          ...(!canOpenConnection\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_see_connections\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onConnection,\n              }),\n        },\n        {\n          isSeparator: true,\n        },\n        {\n          title: t(\"table.actions.change-owner\"),\n          ...(!canChangeOwner\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_change_owner\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onChangeOwner,\n              }),\n        },\n        {\n          title: t(\"table.actions.delete\"),\n          ...(!canDelete\n            ? {\n                isDisabled: true,\n                tooltipProps: {\n                  position: \"left\",\n                  content: t(\"kafka:no_permission_to_delete_kafka\"),\n                },\n                tooltip: true,\n                style: {\n                  pointerEvents: \"auto\",\n                  cursor: \"default\",\n                },\n              }\n            : {\n                onClick: onDelete,\n              }),\n        },\n      ]}\n    />\n  );\n};\n\nconst hackZIndex = {\n  actionProps: {\n    style: { zIndex: 9999 },\n  },\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { KafkaInstanceActionsProps } from \"./KafkaInstanceActions\";\nimport { KafkaInstanceActions } from \"./KafkaInstanceActions\";\n\ntype Sections =\n  | \"dashboard\"\n  | \"topics\"\n  | \"consumer\"\n  | \"permissions\"\n  | \"settings\";\n\nexport type DataPlaneHeaderProps = {\n  instancesHref: string;\n  instanceName: string;\n  activeSection: Sections;\n  sectionsHref: { [key in Sections]: string };\n} & KafkaInstanceActionsProps;\n\nexport const DataPlaneHeader: VoidFunctionComponent<DataPlaneHeaderProps> = ({\n  instancesHref,\n  instanceName,\n  activeSection,\n  sectionsHref,\n  ...actionsProps\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <Breadcrumb ouiaId={\"breadcrumb\"}>\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instancesHref}>{t(\"common:kafka_instance\")}</Link>\n            )}\n          />\n          <BreadcrumbItem isActive={true}>{instanceName}</BreadcrumbItem>\n        </Breadcrumb>\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <LevelItem>\n            <TextContent>\n              <Text component=\"h1\">{instanceName}</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <KafkaInstanceActions {...actionsProps} />\n          </LevelItem>\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        className=\"pf-c-page__main-tabs\"\n        hasShadowBottom={true}\n      >\n        <Nav\n          variant=\"tertiary\"\n          data-testid=\"pageKafka-tabProperties\"\n          className=\"pf-u-px-sm-on-xl\"\n        >\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabDashboard\"\n              id=\"dashboard-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.dashboard\")}\n              ouiaId={\"tab-Dashboard\"}\n              isActive={activeSection === \"dashboard\"}\n            >\n              <Link to={sectionsHref[\"dashboard\"]}>\n                {t(\"dataPlaneNavigation.dashboard\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabTopics\"\n              id=\"topics-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.topics\")}\n              ouiaId={\"tab-Topics\"}\n              isActive={activeSection === \"topics\"}\n            >\n              <Link to={sectionsHref[\"topics\"]}>\n                {t(\"dataPlaneNavigation.topics\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabConsumers\"\n              id=\"consumer-groups-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.consumer_groups\")}\n              ouiaId={\"tab-Consumers\"}\n              isActive={activeSection === \"consumer\"}\n            >\n              <Link to={sectionsHref[\"consumer\"]}>\n                {t(\"dataPlaneNavigation.consumer_groups\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabPermissions\"\n              id=\"permissions-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.permissions\")}\n              ouiaId={\"tab-Permissions\"}\n              isActive={activeSection === \"permissions\"}\n            >\n              <Link to={sectionsHref[\"permissions\"]}>\n                {t(\"dataPlaneNavigation.permissions\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              data-testid=\"pageKafka-tabSettings\"\n              id=\"settings-tab-section\"\n              aria-label={t(\"dataPlaneNavigation.settings\")}\n              ouiaId={\"tab-Settings\"}\n              isActive={activeSection === \"settings\"}\n            >\n              <Link to={sectionsHref[\"settings\"]}>\n                {t(\"dataPlaneNavigation.settings\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n      </PageSection>\n    </>\n  );\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n  Nav,\n  NavItem,\n  NavList,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { KafkaInstanceActionsProps } from \"./KafkaInstanceActions\";\nimport { KafkaInstanceActions } from \"./KafkaInstanceActions\";\n\ntype Sections = \"consumer\" | \"messages\" | \"properties\" | \"schemas\";\n\nexport type DataPlaneTopicHeaderProps = {\n  instancesHref: string;\n  instanceName: string;\n  instanceDetailHref: string;\n  instanceTopicsHref: string;\n  topicName: string;\n  activeSection: Sections;\n  tabsHref: { [key in Sections]: string };\n} & KafkaInstanceActionsProps;\n\nexport const DataPlaneTopicHeader: VoidFunctionComponent<\n  DataPlaneTopicHeaderProps\n> = ({\n  instancesHref,\n  instanceName,\n  instanceDetailHref,\n  instanceTopicsHref,\n  topicName,\n  activeSection,\n  tabsHref,\n  ...actionsProps\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <Breadcrumb ouiaId={\"breadcrumb\"}>\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instancesHref}>{t(\"common:kafka_instance\")}</Link>\n            )}\n          />\n          <BreadcrumbItem\n            render={() => <Link to={instanceDetailHref}>{instanceName}</Link>}\n          />\n          <BreadcrumbItem\n            render={() => (\n              <Link to={instanceTopicsHref}>\n                {t(\"dataPlaneNavigation.topics\")}\n              </Link>\n            )}\n          />\n          <BreadcrumbItem isActive={true}>{topicName}</BreadcrumbItem>\n        </Breadcrumb>\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <LevelItem>\n            <TextContent>\n              <Text component=\"h1\">{topicName}</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <KafkaInstanceActions {...actionsProps} />\n          </LevelItem>\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        className=\"pf-c-page__main-tabs\"\n        hasShadowBottom={true}\n      >\n        <Nav variant=\"tertiary\" className=\"pf-u-px-sm-on-xl\">\n          <NavList>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.consumer_groups\")}\n              ouiaId={\"tab-Dashboard\"}\n              isActive={activeSection === \"consumer\"}\n            >\n              <Link to={tabsHref[\"consumer\"]}>\n                {t(\"dataPlaneTopicNavigation.consumer_groups\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.messages\")}\n              ouiaId={\"tab-Topics\"}\n              isActive={activeSection === \"messages\"}\n            >\n              <Link to={tabsHref[\"messages\"]}>\n                {t(\"dataPlaneTopicNavigation.messages\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.properties\")}\n              ouiaId={\"tab-Permissions\"}\n              isActive={activeSection === \"properties\"}\n            >\n              <Link to={tabsHref[\"properties\"]}>\n                {t(\"dataPlaneTopicNavigation.properties\")}\n              </Link>\n            </NavItem>\n            <NavItem\n              style={{ borderTop: 0 }}\n              aria-label={t(\"dataPlaneTopicNavigation.schemas\")}\n              ouiaId={\"tab-Settings\"}\n              isActive={activeSection === \"schemas\"}\n            >\n              <Link to={tabsHref[\"schemas\"]}>\n                {t(\"dataPlaneTopicNavigation.schemas\")}\n              </Link>\n            </NavItem>\n          </NavList>\n        </Nav>\n      </PageSection>\n    </>\n  );\n};\n","import type { DeleteModalProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  DeleteModal,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type DeleteKafkaInstanceProps = {\n  instanceName: string | undefined;\n} & Omit<\n  DeleteModalProps,\n  \"title\" | \"variant\" | \"confirmationValue\" | \"children\"\n>;\n\nexport const DeleteKafkaInstance: VoidFunctionComponent<\n  DeleteKafkaInstanceProps\n> = ({ instanceName, ...props }) => {\n  const { t } = useTranslation(\"kafka\");\n\n  return (\n    <DeleteModal\n      {...props}\n      variant={\"destructive\"}\n      title={t(\"delete_instance_title\")}\n      confirmationValue={instanceName}\n    >\n      <Trans\n        ns={\"kafka\"}\n        i18nKey={\"delete_instance_message\"}\n        components={[<strong />]}\n        values={{\n          instanceName,\n        }}\n      />\n    </DeleteModal>\n  );\n};\n","import type { I18nProviderProps } from \"@rhoas/app-services-ui-components\";\nimport { I18nProvider as UiComponentsI18nProvider } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\n\nexport const I18nProvider: FunctionComponent<\n  Omit<I18nProviderProps, \"resources\">\n> = ({ lng, debug, children }) => {\n  return (\n    <UiComponentsI18nProvider\n      lng={lng}\n      resources={{\n        en: {\n          common: () =>\n            import(\"@rhoas/app-services-ui-components/locales/en/common.json\"),\n          \"create-kafka-instance\": () =>\n            import(\"locales/en/create-kafka-instance.json\"),\n          kafka: () => import(\"locales/en/kafka.json\"),\n          \"kafkaoverview-v3\": () => import(\"locales/en/kafkaoverview-v3.json\"),\n          metrics: () => import(\"locales/en/metrics.json\"),\n          topic: () => import(\"locales/en/topic.json\"),\n          \"manage-kafka-permissions\": () =>\n            import(\"locales/en/manage-kafka-permissions.json\"),\n          \"create-topic\": () => import(\"locales/en/create-topic.json\"),\n          \"message-browser\": () => import(\"locales/en/message-browser.json\"),\n          \"connection-tab\": () => import(\"locales/en/connection-tab.json\"),\n          \"connection-tab-p1\": () =>\n            import(\"locales/en/connection-tab-p1.json\"),\n          \"terms-and-conditions\": () =>\n            import(\"locales/en/terms-and-conditions.json\"),\n        },\n        it: {\n          common: () => Promise.resolve({ delete: \"Elimina\" }),\n        },\n      }}\n      debug={debug}\n    >\n      {children}\n    </UiComponentsI18nProvider>\n  );\n};\n","import { Alert } from \"@patternfly/react-core\";\nimport { differenceInHours } from \"date-fns\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate } from \"@rhoas/app-services-ui-components\";\n\ntype DetailsTabAlertProps = {\n  expiryDate: Date;\n};\n\nexport const DetailsTabAlert: FunctionComponent<DetailsTabAlertProps> = ({\n  expiryDate,\n}) => {\n  const hoursLeft = expiryDate ? differenceInHours(expiryDate, Date.now()) : 0;\n  return (\n    <Alert\n      variant={\n        hoursLeft > 24\n          ? \"info\"\n          : hoursLeft < 24 && hoursLeft > 5\n          ? \"warning\"\n          : \"danger\"\n      }\n      title={\n        <Trans\n          i18nKey=\"kafka:will_expire\"\n          components={{\n            time: <FormatDate date={expiryDate} format=\"expiration\" />,\n          }}\n        />\n      }\n      aria-live=\"polite\"\n      isInline\n      className=\"pf-u-mb-lg\"\n    />\n  );\n};\n","import {\n  Skeleton,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from \"@patternfly/react-core\";\nimport { FormatDate, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { ReactChild, VoidFunctionComponent } from \"react\";\nimport type { MarketplaceSubscription, Plan } from \"ui-models/src/models/kafka\";\nimport type { Bytes } from \"../../../../../ui-models/src/types\";\nimport { DetailsTabAlert } from \"./DetailsTabAlert\";\n\n/**\n * All fields marked as accepting undefined will show a skeleton loader until the value is available.\n * This is to support fetching the data from different APIs.\n */\nexport type KafkaDetailsTabProps = {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n  expiryDate: Date | undefined;\n  owner: string;\n  provider: string;\n  region: string;\n  instanceType: Plan;\n  size: string | undefined;\n  ingress: number | undefined;\n  egress: number | undefined;\n  storage: Bytes | undefined;\n  maxPartitions: number | undefined;\n  connections: number | undefined;\n  connectionRate: number | undefined;\n  messageSize: Bytes | undefined;\n  billing: \"prepaid\" | MarketplaceSubscription | undefined;\n  kafkaVersion: string;\n};\n\nexport const KafkaDetailsTab: VoidFunctionComponent<KafkaDetailsTabProps> = ({\n  id,\n  createdAt,\n  updatedAt,\n  owner,\n  provider,\n  region,\n  expiryDate,\n  instanceType,\n  size,\n  ingress,\n  egress,\n  storage,\n  maxPartitions,\n  connections,\n  connectionRate,\n  messageSize,\n  billing,\n  kafkaVersion,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const renderTextListItem = (title: string, value: ReactChild | undefined) => (\n    <>\n      <TextListItem component={TextListItemVariants.dt}>{title}</TextListItem>\n      {value ? (\n        <TextListItem component={TextListItemVariants.dd}>{value}</TextListItem>\n      ) : (\n        <Skeleton\n          width=\"50%\"\n          screenreaderText={t(\"common:skeleton_loader_screenreader_text\", {\n            contentName: title,\n          })}\n        />\n      )}\n    </>\n  );\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      {instanceType !== \"standard\" && expiryDate && (\n        <DetailsTabAlert expiryDate={expiryDate} />\n      )}\n      <TextContent>\n        <TextList component={TextListVariants.dl}>\n          {instanceType === \"standard\" &&\n            renderTextListItem(\n              t(\"common:size\"),\n              size\n                ? t(\"create-kafka-instance:streaming_size_value\", {\n                    value: size,\n                  })\n                : undefined\n            )}\n          {renderTextListItem(\n            t(\"ingress\"),\n            ingress\n              ? t(\"create-kafka-instance:ingress_value\", {\n                  value: ingress,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"egress\"),\n            egress\n              ? t(\"create-kafka-instance:egress_value\", {\n                  value: egress,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"storage\"),\n            storage?.value\n              ? t(\"create-kafka-instance:storage_value\", {\n                  value: storage.value,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"partitions\"),\n            maxPartitions\n              ? t(\"create-kafka-instance:partitions_value\", {\n                  value: maxPartitions,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"client_connections\"),\n            connections\n              ? t(\"create-kafka-instance:client_connections_value\", {\n                  value: connections,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"connection_rate\"),\n            connectionRate\n              ? t(\"create-kafka-instance:connection_rate_value\", {\n                  value: connectionRate,\n                })\n              : undefined\n          )}\n          {renderTextListItem(\n            t(\"message_size\"),\n            messageSize?.value\n              ? t(\"create-kafka-instance:message_size_value\", {\n                  value: messageSize.value,\n                })\n              : undefined\n          )}\n\n          {renderTextListItem(t(\"common:id\"), id)}\n          {renderTextListItem(t(\"common:kafka_version\"), kafkaVersion)}\n          {renderTextListItem(t(\"common:owner\"), owner)}\n          {renderTextListItem(\n            t(\"common:time_created\"),\n            <FormatDate date={createdAt} format={\"long\"} />\n          )}\n          {renderTextListItem(\n            t(\"common:time_updated\"),\n            <FormatDate date={updatedAt} format={\"long\"} />\n          )}\n          {renderTextListItem(t(\"common:cloud_provider\"), provider)}\n          {renderTextListItem(t(\"common:region\"), region)}\n          {renderTextListItem(\n            t(\"create-kafka-instance:billing.field_label\"),\n            (() => {\n              if (billing === undefined) {\n                return undefined;\n              } else if (billing === \"prepaid\") {\n                return t(\"create-kafka-instance:billing.prepaid_option\");\n              } else {\n                switch (billing.marketplace) {\n                  case \"aws\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_aws\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"azure\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_azure\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"gcp\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_gcp\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                  case \"rhm\":\n                    return (\n                      <>\n                        {t(\"create-kafka-instance:billing.marketplace_rh\")}\n                        <br />\n                        {billing.subscription}\n                      </>\n                    );\n                }\n              }\n            })()\n          )}\n        </TextList>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const SuspendedConnection: VoidFunctionComponent = () => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.small}>\n      <EmptyStateIcon icon={ExclamationTriangleIcon} color={\"#f0ab00\"} />\n      <Title headingLevel={\"h1\"} size={TitleSizes.lg}>\n        {t(\"suspend_empty_state_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"suspend_empty_state_body\")}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  ClipboardCopy,\n  ExpandableSection,\n  Label,\n  Popover,\n  Skeleton,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport {\n  ExternalLink,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SuspendedConnection } from \"./SuspendedConnection\";\n\nexport type KafkaConnectionTabP2Props = {\n  isKafkaSuspended?: boolean;\n  isKafkaPending?: boolean;\n  externalServer?: string;\n  tokenEndPointUrl: string | undefined;\n  linkToServiceAccount: string;\n  linkToAccessTab: string;\n  adminAPIUrl: string | undefined;\n  showCreateServiceAccountModal: () => void;\n  kafkaFleetManagerUrl: string;\n};\n\nexport const KafkaConnectionTabP2: FunctionComponent<\n  KafkaConnectionTabP2Props\n> = ({\n  isKafkaSuspended,\n  isKafkaPending,\n  externalServer,\n  tokenEndPointUrl,\n  linkToServiceAccount,\n  linkToAccessTab,\n  adminAPIUrl,\n  kafkaFleetManagerUrl,\n  showCreateServiceAccountModal,\n}) => {\n  const { t } = useTranslation();\n\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n\n  const onChangeExpandedSection = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return isKafkaSuspended ? (\n    <SuspendedConnection />\n  ) : (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:drawer_resource_tab_body_description_1\")}\n        </Text>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:bootstrap_server\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:bootstrap_server_description\")}\n        </Text>\n        {isKafkaPending ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            data-testid=\"drawerStreams-copyBootstrapURL\"\n            textAriaLabel={t(\"connection-tab:bootstrap_server\")}\n            isReadOnly\n          >\n            {externalServer}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:service_accounts_small\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\n                \"connection-tab:create_service_account_to_generate_credentials\"\n              }\n              components={{\n                value: (\n                  <Link\n                    to={linkToServiceAccount}\n                    data-testid=\"tableStreams-linkKafka\"\n                  ></Link>\n                ),\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <Button\n        variant={ButtonVariant.secondary}\n        isInline\n        data-testid=\"drawerStreams-buttonCreateServiceAccount\"\n        href={`${\n          document.location.pathname.startsWith(\"/beta\") ? \"/beta\" : \"\"\n        }/application-services/service-account`}\n        component={\"a\"}\n      >\n        {t(\"connection-tab:create_service_account\")}\n      </Button>\n      <TextContent className=\"pf-u-pt-sm\">\n        <Text component={TextVariants.small}>\n          {\n            <Trans\n              i18nKey={\"connection-tab:current_instance\"}\n              components={{\n                value: <Link to={linkToAccessTab}></Link>,\n              }}\n            />\n          }\n        </Text>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <ExpandableSection\n          toggleContent={\n            <div className=\"pf-c-content\">\n              <Text component={TextVariants.h3} className={\"pf-c-content\"}>\n                {t(\"connection-tab:rest_api_header\")}\n              </Text>\n            </div>\n          }\n          isExpanded={isExpanded}\n          onToggle={onChangeExpandedSection}\n          className=\"pf-u-mt-lg\"\n        >\n          <TextContent className=\"pf-u-pb-sm\">\n            <Text component={TextVariants.small}>\n              {t(\"connection-tab:rest_api_description\")}\n            </Text>\n          </TextContent>\n          <TextContent>\n            <strong>\n              {t(\"connection-tab:kafka_instance_url_label\")}\n              <Popover\n                headerContent={\n                  <div>\n                    {t(\"connection-tab:kafka_instance_url_popover_label\")}\n                  </div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"connection-tab:kafka_instance_url_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkainstance?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kafka-admin-rest.yaml%3Fref%3Ddoc-portal&readonly=true\"\n                          />,\n                          <ExternalLink\n                            testId={\"customerPortal-link\"}\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_openshift_application_services/1/guide/2409253a-45ee-470e-bdc9-5db4bfcf9d0f\"\n                            className={\"pf-u-ml-xs\"}\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\n                    \"connection-tab:kafka_instance_url_button_aria_label\"\n                  )}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {adminAPIUrl ? (\n              <ClipboardCopy\n                textAriaLabel={t(\"connection-tab:kafka_instance_url_label\")}\n                isReadOnly\n              >\n                {adminAPIUrl}\n              </ClipboardCopy>\n            ) : (\n              <Skeleton fontSize=\"2xl\" />\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"connection-tab:kafka_instance_url_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n          <TextContent className=\"pf-u-mt-md\">\n            <strong>\n              {t(\"connection-tab:kafka_management_url\")}\n              <Popover\n                headerContent={\n                  <div>\n                    {t(\"connection-tab:kafka_management_popover_header\")}\n                  </div>\n                }\n                bodyContent={\n                  <TextContent>\n                    <p>{t(\"connection-tab:kafka_management_popover_body\")}</p>\n                    <p>\n                      <Trans\n                        ns={\"connection-tab\"}\n                        i18nKey={\"popover_helper_text\"}\n                        components={[\n                          <Button\n                            isInline\n                            variant={ButtonVariant.link}\n                            component=\"a\"\n                            href=\"https://console.redhat.com/docs/api/kafkamgmt?github-owner=redhat-developer&github-repo=app-services-sdk-core&github-content=kas-fleet-manager.yaml%3Fref%3Ddoc-portal\"\n                          />,\n                          <ExternalLink\n                            testId={\"customerPortal-link\"}\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_openshift_application_services/1/guide/2409253a-45ee-470e-bdc9-5db4bfcf9d0f\"\n                            className={\"pf-u-ml-xs\"}\n                          />,\n                        ]}\n                      />\n                    </p>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant={ButtonVariant.plain}\n                  aria-label={t(\n                    \"connection-tab:kafka_management_button_aria_label\"\n                  )}\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </strong>\n            {isKafkaPending ? (\n              <Skeleton fontSize=\"2xl\" />\n            ) : (\n              <ClipboardCopy\n                textAriaLabel={t(\"connection-tab:kafka_management_url\")}\n                isReadOnly\n              >\n                {kafkaFleetManagerUrl}\n              </ClipboardCopy>\n            )}\n            <TextContent className=\"pf-u-pt-sm\">\n              <Text component={TextVariants.small}>\n                {t(\"connection-tab:kafka_management_description\")}\n              </Text>\n            </TextContent>\n          </TextContent>\n        </ExpandableSection>\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"connection-tab:authentication_method\")}\n        </Text>\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"connection-tab:sasl_oauthbearer\")}{\" \"}\n          <Label color=\"green\">{t(\"connection-tab:recommended\")}</Label>\n          <Popover\n            aria-label={t(\"connection-tab:sasl_oauthbearer\")}\n            bodyContent={\n              <div>{t(\"connection-tab:sasl_oauthbearer_popover_content\")}</div>\n            }\n          >\n            <Button\n              variant={ButtonVariant.plain}\n              aria-label={t(\"connection-tab:more_info_about_sasl_oauthbearer\")}\n            >\n              <HelpIcon />\n            </Button>\n          </Popover>\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:sasl_oauthbearer_description\")}\n        </Text>\n        <strong>{t(\"connection-tab:token_endpoint_url\")}</strong>\n        {tokenEndPointUrl === undefined ? (\n          <Skeleton fontSize=\"2xl\" />\n        ) : (\n          <ClipboardCopy\n            textAriaLabel={t(\"connection-tab:token_endpoint_url\")}\n            isReadOnly\n          >\n            {tokenEndPointUrl}\n          </ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.h4} className=\"pf-u-mt-md\">\n          {t(\"connection-tab:sasl_plain\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"connection-tab:sasl_plain_description\")}\n        </Text>\n      </TextContent>\n    </div>\n  );\n};\n","import {\n  ClipboardCopyButton,\n  CodeBlock,\n  CodeBlockAction,\n  CodeBlockCode,\n  ExpandableSection,\n  ExpandableSectionToggle,\n} from \"@patternfly/react-core\";\nimport { useEffect, useState } from \"react\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport type ClientType = \"java\" | \"python\" | \"quarkus\" | \"springboot\";\n\nexport type SampleCodeSnippetProps = {\n  expandableCode?: string;\n  codeBlockCode: string;\n  codeSnippet?: ClientType;\n};\n\nexport const SampleCodeSnippet: VoidFunctionComponent<\n  SampleCodeSnippetProps\n> = ({ expandableCode, codeBlockCode, codeSnippet }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const [copied, setCopied] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsExpanded(false);\n  }, [codeSnippet]);\n\n  const clipboardCopyFunc = (_event: any, text: string) => {\n    navigator.clipboard\n      .writeText(text.toString())\n      .then(() => {\n        setCopied(true);\n      })\n      .catch(() => {\n        setCopied(false);\n      });\n  };\n\n  const onToggle = (isExpanded: boolean) => {\n    setIsExpanded(isExpanded);\n  };\n\n  const copyCode = expandableCode\n    ? codeBlockCode + \"\\n\" + expandableCode\n    : codeBlockCode;\n\n  const actions = (\n    <CodeBlockAction>\n      <ClipboardCopyButton\n        id=\"basic-copy-button\"\n        textId=\"code-content\"\n        aria-label=\"Copy to clipboard\"\n        exitDelay={600}\n        maxWidth=\"110px\"\n        variant=\"plain\"\n        onClick={(e) => clipboardCopyFunc(e, copyCode)}\n      >\n        {copied ? \"Successfully copied to clipboard!\" : \"Copy to clipboard\"}\n      </ClipboardCopyButton>\n    </CodeBlockAction>\n  );\n\n  return (\n    <CodeBlock actions={actions}>\n      <CodeBlockCode id=\"code-content\">\n        {codeBlockCode}\n\n        <ExpandableSection\n          isExpanded={isExpanded}\n          isDetached\n          contentId=\"code-block-expand\"\n        >\n          {expandableCode}\n        </ExpandableSection>\n      </CodeBlockCode>\n      {expandableCode ? (\n        <ExpandableSectionToggle\n          isExpanded={isExpanded}\n          onToggle={onToggle}\n          contentId=\"code-block-expand\"\n          direction=\"up\"\n        >\n          {isExpanded ? \"Show Less\" : \"Show More\"}\n        </ExpandableSectionToggle>\n      ) : null}\n    </CodeBlock>\n  );\n};\n","export const javaConfigCodeBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `package org.example;\nimport org.apache.kafka.clients.producer.ProducerConfig;  \nimport java.util.Properties;\n    \npublic class KafkaConfig {\n    \n    static Properties properties() {\n    \n        String kafkaHost = \"${kafkaBootstrapUrl}\";\n        String rhoasClientID = \"<client_id>\";\n        String rhoasClientSecret = \"<client_secret>\";\n        String rhoasOauthTokenUrl = \"${tokenEndpointUrl}\";`;\n};\n\nexport const javaConfigExpandabledBlock = `\n        var properties= new Properties();\n\n        properties.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, kafkaHost);\n        properties.setProperty(\"security.protocol\", \"SASL_SSL\");\n        properties.setProperty(\"sasl.mechanism\", \"OAUTHBEARER\");\n\n        properties.setProperty(\"sasl.jaas.config\", \"org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId=\\\\\"\" + rhoasClientID + \"\\\\\" clientSecret=\\\\\"\" + rhoasClientSecret + \"\\\\\" oauth.token.endpoint.uri=\\\\\"\" + rhoasOauthTokenUrl + \"\\\\\";\");\n\n        properties.setProperty(\"sasl.login.callback.handler.class\", \"org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler\");\n        properties.setProperty(\"sasl.oauthbearer.token.endpoint.url\", rhoasOauthTokenUrl);\n        properties.setProperty(\"sasl.oauthbearer.scope.claim.name\", \"api.iam.service_accounts\");\n\n        return properties;\n    }\n}`;\n\nexport const javaProducerCodeBlock = `package org.example;\n \nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.clients.producer.ProducerRecord;\nimport org.apache.kafka.clients.producer.KafkaProducer;\nimport org.apache.kafka.common.serialization.StringSerializer;\n \npublic class ProducerExample {\n \n   public static void main(String[] args) {`;\n\nexport const javaProducerExpandableBlock = `\n   //Creating producer properties\n   var properties= KafkaConfig.properties();\n   properties.setProperty(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n   properties.setProperty(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n\n   KafkaProducer<String,String> producer= new KafkaProducer<String,String>(properties);\n\n   producer.send(new ProducerRecord<>(<\"topic\">, \"Test Message\"));\n   producer.flush();\n   producer.close();\n  }\n}`;\n\nexport const javaConsumerCodeBlock = `package org.example;\n \nimport java.util.Arrays;\n\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.clients.consumer.KafkaConsumer;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.apache.kafka.clients.consumer.ConsumerRecord;\nimport org.apache.kafka.clients.consumer.ConsumerRecords;\nimport java.time.Duration;`;\n\nexport const javaConsumerExpandableBlock = `\npublic class ConsumerExample {\n\n    public static void main(String[] args) {\n\n        var properties= KafkaConfig.properties();\n\n        properties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n        properties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n        properties.setProperty(ConsumerConfig.GROUP_ID_CONFIG,\"test_group_2\");\n        properties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n\n        KafkaConsumer<String,String> consumer = new KafkaConsumer<String,String>(properties);\n\n        //Subscribing\n        consumer.subscribe(Arrays.asList(\"<topic>\"));\n\n        //polling\n        while(true){\n            ConsumerRecords<String,String> records=consumer.poll(Duration.ofMillis(100));\n            for(ConsumerRecord<String,String> record: records) {\n                System.out.println(\"Key: \"+ record.key() + \", Value:\" +record.value());\n                System.out.println(\"Partition:\" + record.partition()+\",Offset:\"+record.offset());\n            }\n        }\n    }\n}`;\n\nexport const pythonConfigCodeBlock = (tokenEndpointUrl: string) => {\n  return `import time\nimport requests\n    \ndef _get_token(config):\n    payload = {\"grant_type\": \"client_credentials\", \"scope\": \"api.iam.service_accounts\"}\n    resp = requests.post(\n        \"${tokenEndpointUrl}\",\n        auth=(\n            <client_id>,\n            <client_secret>,\n        ),\n        data=payload,\n    )`;\n};\n\nexport const pythonConfigExpandabledBlock = (kafkaBootstrapUrl: string) => {\n  return `\n    token = resp.json()\n    return token[\"access_token\"], time.time() + float(token[\"expires_in\"])\n    \n    common_config = {\n    'bootstrap.servers': \"${kafkaBootstrapUrl}\",\n    'security.protocol': 'SASL_SSL',\n    'sasl.mechanisms': 'OAUTHBEARER',\n    'oauth_cb': _get_token,\n    }\n    \n    topic=<topic>`;\n};\n\nexport const pythonProducer = `from confluent_kafka import Producer\n \nproducer = Producer(common_config)\n \nproducer.produce(topic=<topic>, value=b\"Sample Message\")\nproducer.flush()`;\n\nexport const pythonConsumerCodeBlock = `from confluent_kafka import Consumer\n \nconsumer_config = {\n    \"group.id\": \"test-group\",\n    'session.timeout.ms': 6000,\n    'auto.offset.reset': 'earliest',\n}\n\nconsumer = Consumer({ **consumer_config, **common_config })\n\nconsumer.subscribe([<topic>])`;\n\nexport const pythonConsumerExpandableBlock = `while True:\ntry:\n    msg = consumer.poll(1.0)\n    if msg is None:\n        continue\n\n    print(msg.value())\nexcept KeyboardInterrupt:\n    break\n\nconsumer.close()`;\n\nexport const quarkusConfigCodeBlock = `# Quarkus config\nquarkus.ssl.native=true\n\n# Configure the Kafka sink (we write to it)\nmp.messaging.outgoing.generated-price.connector=smallrye-kafka\nmp.messaging.outgoing.generated-price.topic=<topic>\nmp.messaging.outgoing.generated-price.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer\n\n# Configure the Kafka source (we read from it)\nmp.messaging.incoming.prices.connector=smallrye-kafka\nmp.messaging.incoming.prices.topic=<topic>\nmp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer`;\n\nexport const quarkusConfigExpandableBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `\n# Configure docker config\nquarkus.container-image.builder=jib\nquarkus.kubernetes.deployment-target=kubernetes\nquarkus.container-image.build=false\nquarkus.container-image.push=false\n    \n## dev profile using user defined environment variables that uses SASL/OAUTHBEARER\n## ./mvnw quarkus:dev\n## ./mvnw package -Dquarkus.profile=dev\n    \n%dev.kafka.bootstrap.servers=\\${\"${kafkaBootstrapUrl}\"}\n%dev.kafka.security.protocol=SASL_SSL\n    \n%dev.kafka.sasl.mechanism=OAUTHBEARER\n%dev.kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \\\\\n    oauth.client.id=\"\\${<client_id>}\" \\\\\n    oauth.client.secret=\"\\${<client_secret>}\" \\\\\n    oauth.token.endpoint.uri=\"\\${\"${tokenEndpointUrl}\"}\" ;\n%dev.kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler`;\n};\n\nexport const quarkusProducerCodeBlock = `package org.acme.kafka;\nimport java.time.Duration;\nimport java.util.Random;\n\nimport javax.enterprise.context.ApplicationScoped;\n\nimport io.smallrye.mutiny.Multi;\nimport org.eclipse.microprofile.reactive.messaging.Outgoing;`;\n\nexport const quarkusProducerExpandableBlock = `\n/**\n* A bean producing random prices every 5 seconds.\n* The prices are written to a Kafka topic (prices). The Kafka configuration is specified in the application configuration.\n*/\n@ApplicationScoped\npublic class PriceGenerator {\n\n   private Random random = new Random();\n\n   @Outgoing(\"generated-price\")\n   public Multi<Integer> generate() {\n       return Multi.createFrom().ticks().every(Duration.ofSeconds(5))\n               .onOverflow().drop()\n               .map(tick -> random.nextInt(100));\n   }\n\n}`;\n\nexport const quarkusConsumerCodeBlock = `package org.acme.kafka;\nimport javax.enterprise.context.ApplicationScoped;\n\nimport org.eclipse.microprofile.reactive.messaging.Acknowledgment;\nimport org.eclipse.microprofile.reactive.messaging.Incoming;\nimport org.eclipse.microprofile.reactive.messaging.Outgoing;\n\nimport io.smallrye.reactive.messaging.annotations.Broadcast;\n\n/**\n * A bean consuming data from the \"prices\" Kafka topic and applying some conversion.\n * The result is pushed to the \"my-data-stream\" stream which is an in-memory stream.\n */\n@ApplicationScoped`;\n\nexport const quarkusConsumerExpandableBlock = `public class PriceConverter {\n\n    private static final double CONVERSION_RATE = 0.88;\n\n    // Consume from the \\`prices\\` channel and produce to the \\`my-data-stream\\` channel\n    @Incoming(\"prices\")\n    @Outgoing(\"my-data-stream\")\n    // Send to all subscribers\n    @Broadcast\n    // Acknowledge the messages before calling this method.\n    @Acknowledgment(Acknowledgment.Strategy.PRE_PROCESSING)\n    public double process(int priceInUsd) {\n        return priceInUsd * CONVERSION_RATE;\n    }\n\n}`;\n\nexport const springBootConfigCodeBlock = (\n  kafkaBootstrapUrl: string,\n  tokenEndpointUrl: string\n) => {\n  return `package com.example.kafkaconfig;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class KafkaConfig {\n\n   public static Map<String, Object> Config() {\n\n       Map<String, Object> config = new HashMap<>();\n\n       String kafkaHost = \"${kafkaBootstrapUrl}\";\n       String rhoasClientID = \"<client_id>\";\n       String rhoasClientSecret = \"<client_secret>\";\n       String rhoasOauthTokenUrl = \"${tokenEndpointUrl}\";`;\n};\n\nexport const springBootConfigExpandableBlock = `\n    config.put(\"bootstrap.servers\", kafkaHost);\n\n    config.put(\"security.protocol\", \"SASL_SSL\");\n    config.put(\"sasl.mechanism\", \"OAUTHBEARER\");\n\n    config.put(\"sasl.jaas.config\", \"org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId=\\\\\"\" + rhoasClientID + \"\\\\\" clientSecret=\\\\\"\" + rhoasClientSecret + \"\\\\\" oauth.token.endpoint.uri=\\\\\"\" + rhoasOauthTokenUrl + \"\\\\\";\");\n    config.put(\"sasl.login.callback.handler.class\", \"org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler\");\n    config.put(\"sasl.oauthbearer.token.endpoint.url\", rhoasOauthTokenUrl);\n    config.put(\"sasl.oauthbearer.scope.claim.name\", \"api.iam.service_accounts\");\n\n    return config;\n   }\n}`;\n\nexport const springBootProducerCodeBlock = `package com.example.kafkademo;\nimport org.apache.kafka.clients.producer.ProducerConfig;\nimport org.apache.kafka.common.serialization.StringSerializer;\nimport org.springframework.boot.ApplicationRunner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.kafka.core.DefaultKafkaProducerFactory;\nimport org.springframework.kafka.core.KafkaTemplate;\nimport org.springframework.kafka.core.ProducerFactory;\nimport com.example.kafkaconfig.KafkaConfig;\n\nimport java.util.Map;`;\n\nexport const springBootProducerExpandableBlock = `\n@SpringBootApplication\npublic class KafkaProducerExample {\n\n  public static void main(String[] args) throws Exception {\n    SpringApplication.run(KafkaProducerExample.class, args);\n  }\n\n  @Bean\n  public ProducerFactory<String, String> producerFactory() {\n    Map<String, Object> config = KafkaConfig.Config();\n\n    config.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n    config.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n\n    return new DefaultKafkaProducerFactory<String, String>(config);\n  }\n\n  @Bean\n  public KafkaTemplate<String, String> kafkaTemplate() {\n    return new KafkaTemplate<>(producerFactory());\n  }\n\n  @Bean\n  public ApplicationRunner runner(KafkaTemplate<String, String> template) {\n    return args -> {\n      template.send(<\"topic\">, \"Test Message\");\n    };\n  }\n\n}`;\n\nexport const springBootListenerCodeBlock = `package com.example.kafkaconsumer.listener;\n\nimport com.example.kafkaconfig.KafkaConfig;\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.kafka.annotation.KafkaListener;\nimport org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;\nimport org.springframework.kafka.core.ConsumerFactory;\nimport org.springframework.kafka.core.DefaultKafkaConsumerFactory;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Map;`;\n\nexport const springBootListenerExpandableBlock = `@Component\npublic class Listener {\n\n    @KafkaListener(topics = <\"topic\">,\n            containerFactory = \"concurrentKafkaListenerContainerFactory\",\n            groupId = \"test_group\")\n\n    // Method\n    public void consume(String message)\n    {\n        // Print statement\n        System.out.println(message);\n    }\n}`;\n\nexport const springBootConsumerConfigCodeBlock = `package com.example.kafkaconsumer.config;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport com.example.kafkaconfig.KafkaConfig;\nimport org.apache.kafka.clients.consumer.ConsumerConfig;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.kafka.annotation.EnableKafka;\nimport org.springframework.kafka.core.ConsumerFactory;\nimport org.springframework.kafka.core.DefaultKafkaConsumerFactory;\nimport org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;`;\n\nexport const springBootConsumerConfigExpandableBlock = `// Annotations\n@EnableKafka\n@Configuration\n\npublic class KafkaConsumerConfig {\n\n    @Bean\n    public ConsumerFactory<String, String> consumerFactory() {\n        Map<String, Object> config = KafkaConfig.Config();\n\n        config.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\n        config.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\n\n        return new DefaultKafkaConsumerFactory<>(config);\n    }\n\n    @Bean\n    public ConcurrentKafkaListenerContainerFactory concurrentKafkaListenerContainerFactory() {\n        ConcurrentKafkaListenerContainerFactory<\n                String, String> factory\n                = new ConcurrentKafkaListenerContainerFactory<>();\n        factory.setConsumerFactory(consumerFactory());\n        return factory;\n    }\n}`;\n\nexport const springBootConsumerExampleCodeBlock = `\npackage com.example.kafkaconsumer;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;`;\n\nexport const springBootConsumerExampleExpandableBlock = `\n@SpringBootApplication\npublic class KafkaConsumerExample {\n\n    public static void main(String[] args) {\n        SpringApplication.run(KafkaConsumerExample.class, args);\n    }\n\n}`;\n","import {\n  TextContent,\n  TextVariants,\n  Text,\n  ToggleGroup,\n  ToggleGroupItem,\n  Skeleton,\n} from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { SampleCodeSnippet } from \"./SampleCodeSnippet\";\nimport {\n  javaConfigCodeBlock,\n  javaConfigExpandabledBlock,\n  javaConsumerCodeBlock,\n  javaConsumerExpandableBlock,\n  javaProducerCodeBlock,\n  javaProducerExpandableBlock,\n  pythonConfigCodeBlock,\n  pythonConfigExpandabledBlock,\n  pythonConsumerCodeBlock,\n  pythonConsumerExpandableBlock,\n  pythonProducer,\n  quarkusConfigCodeBlock,\n  quarkusConfigExpandableBlock,\n  quarkusConsumerCodeBlock,\n  quarkusConsumerExpandableBlock,\n  quarkusProducerCodeBlock,\n  quarkusProducerExpandableBlock,\n  springBootConfigCodeBlock,\n  springBootConfigExpandableBlock,\n  springBootConsumerConfigCodeBlock,\n  springBootConsumerConfigExpandableBlock,\n  springBootConsumerExampleCodeBlock,\n  springBootConsumerExampleExpandableBlock,\n  springBootListenerCodeBlock,\n  springBootListenerExpandableBlock,\n  springBootProducerCodeBlock,\n  springBootProducerExpandableBlock,\n} from \"./CodeSnippets\";\n\nexport type ClientType = \"java\" | \"python\" | \"quarkus\" | \"springboot\";\n\nexport type KafkaSampleCodeProps = {\n  kafkaBootstrapUrl: string;\n  tokenEndpointUrl: string | undefined;\n};\n\nexport const KafkaSampleCode: VoidFunctionComponent<KafkaSampleCodeProps> = ({\n  kafkaBootstrapUrl,\n  tokenEndpointUrl,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n\n  const [clientSelect, setClientSelect] = useState<ClientType>(\"java\");\n\n  const clientProvider: { [provider in ClientType]: string } = {\n    java: t(\"sample_code.clients.java\"),\n    python: t(\"sample_code.clients.python\"),\n    quarkus: t(\"sample_code.clients.quarkus\"),\n    springboot: t(\"sample_code.clients.spring_boot\"),\n  };\n\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.code_snippet_description_1\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.code_snippet_description_2\")}\n        </Text>\n        <ToggleGroup>\n          <ToggleGroupItem\n            text={clientProvider[\"java\"]}\n            value=\"java\"\n            buttonId=\"java\"\n            isSelected={clientSelect === \"java\"}\n            onChange={() => setClientSelect(\"java\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"python\"]}\n            value=\"python\"\n            buttonId=\"python\"\n            isSelected={clientSelect === \"python\"}\n            onChange={() => setClientSelect(\"python\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"quarkus\"]}\n            value=\"quarkus\"\n            buttonId=\"quarkus\"\n            isSelected={clientSelect === \"quarkus\"}\n            onChange={() => setClientSelect(\"quarkus\")}\n          />\n          <ToggleGroupItem\n            text={clientProvider[\"springboot\"]}\n            value=\"springboot\"\n            buttonId=\"springboot\"\n            isSelected={clientSelect === \"springboot\"}\n            onChange={() => setClientSelect(\"springboot\")}\n          />\n        </ToggleGroup>\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_configuration_code\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.sample_configuration_code_description\")}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t(\"sample_code.bracket_text\")}\n        </Text>\n        {(() => {\n          switch (clientSelect) {\n            case \"java\":\n              return tokenEndpointUrl ? (\n                <SampleCodeSnippet\n                  codeBlockCode={javaConfigCodeBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  expandableCode={javaConfigExpandabledBlock}\n                  codeSnippet={clientSelect}\n                />\n              ) : (\n                <Skeleton fontSize=\"4xl\" />\n              );\n            case \"python\":\n              return tokenEndpointUrl ? (\n                <SampleCodeSnippet\n                  codeBlockCode={pythonConfigCodeBlock(tokenEndpointUrl)}\n                  expandableCode={pythonConfigExpandabledBlock(\n                    kafkaBootstrapUrl\n                  )}\n                  codeSnippet={clientSelect}\n                />\n              ) : (\n                <Skeleton fontSize=\"4xl\" />\n              );\n            case \"quarkus\":\n              return tokenEndpointUrl ? (\n                <SampleCodeSnippet\n                  codeBlockCode={quarkusConfigCodeBlock}\n                  expandableCode={quarkusConfigExpandableBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  codeSnippet={clientSelect}\n                />\n              ) : (\n                <Skeleton fontSize=\"4xl\" />\n              );\n            case \"springboot\":\n              return tokenEndpointUrl ? (\n                <SampleCodeSnippet\n                  codeBlockCode={springBootConfigCodeBlock(\n                    kafkaBootstrapUrl,\n                    tokenEndpointUrl\n                  )}\n                  expandableCode={springBootConfigExpandableBlock}\n                  codeSnippet={clientSelect}\n                />\n              ) : (\n                <Skeleton fontSize=\"4xl\" />\n              );\n            default:\n              return null;\n          }\n        })()}\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_producer_code\")}\n        </Text>\n        {clientSelect === \"quarkus\" ? (\n          <>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.sample_producer_code_quarkus_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={quarkusProducerCodeBlock}\n              expandableCode={quarkusProducerExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n          </>\n        ) : (\n          <>\n            <Text component={TextVariants.small}>\n              <Trans\n                ns={\"kafka\"}\n                i18nKey={\"sample_code.sample_producer_code_description\"}\n                values={{\n                  client_type: clientProvider[clientSelect],\n                }}\n              />\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.bracket_text\")}\n            </Text>\n            {(() => {\n              switch (clientSelect) {\n                case \"java\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={javaProducerCodeBlock}\n                      expandableCode={javaProducerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"python\":\n                  return <SampleCodeSnippet codeBlockCode={pythonProducer} />;\n                case \"springboot\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={springBootProducerCodeBlock}\n                      expandableCode={springBootProducerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                default:\n                  return null;\n              }\n            })()}\n          </>\n        )}\n\n        <Text component={TextVariants.h3} className=\"pf-u-mt-xl\">\n          {t(\"sample_code.sample_consumer_code\")}\n        </Text>\n        {clientSelect === \"springboot\" ? (\n          <>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_sample_consumer_code_description\")}\n            </Text>\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_consumer_configuration\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_consumer_configuration_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootConsumerConfigCodeBlock}\n              expandableCode={springBootConsumerConfigExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_listener\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_listener_description\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.bracket_text\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootListenerCodeBlock}\n              expandableCode={springBootListenerExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n            <Text component={TextVariants.h4} className=\"pf-u-mt-xl\">\n              {t(\"sample_code.spring_boot_consumer\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"sample_code.spring_boot_consumer_description\")}\n            </Text>\n            <SampleCodeSnippet\n              codeBlockCode={springBootConsumerExampleCodeBlock}\n              expandableCode={springBootConsumerExampleExpandableBlock}\n              codeSnippet={clientSelect}\n            />\n          </>\n        ) : (\n          <>\n            <Text component={TextVariants.small}>\n              <Trans\n                ns={\"kafka\"}\n                i18nKey={\"sample_code.sample_consumer_code_description\"}\n                values={{\n                  client_type: clientProvider[clientSelect],\n                }}\n              />\n            </Text>\n            {clientSelect === \"quarkus\" ? null : (\n              <Text component={TextVariants.small}>\n                {t(\"sample_code.bracket_text\")}\n              </Text>\n            )}\n            {(() => {\n              switch (clientSelect) {\n                case \"java\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={javaConsumerCodeBlock}\n                      expandableCode={javaConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"python\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={pythonConsumerCodeBlock}\n                      expandableCode={pythonConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                case \"quarkus\":\n                  return (\n                    <SampleCodeSnippet\n                      codeBlockCode={quarkusConsumerCodeBlock}\n                      expandableCode={quarkusConsumerExpandableBlock}\n                      codeSnippet={clientSelect}\n                    />\n                  );\n                default:\n                  return null;\n              }\n            })()}\n          </>\n        )}\n      </TextContent>\n    </div>\n  );\n};\n","import type { TabsProps } from \"@patternfly/react-core\";\nimport {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport type { FunctionComponent, VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport type { Kafka } from \"ui-models/src/models/kafka\";\nimport { CreatingStatuses } from \"ui-models/src/models/kafka\";\nimport { useKafkaLabels } from \"../../hooks\";\nimport {\n  KafkaConnectionTabP2,\n  KafkaDetailsTab,\n  KafkaSampleCode,\n} from \"./components\";\n\nexport type KafkaInstanceDrawerProps = {\n  instance?: Kafka;\n  isExpanded: boolean;\n  activeTab: KafkaInstanceDrawerTab;\n  onTabChange: (tab: KafkaInstanceDrawerTab) => void;\n  tokenEndpointUrl: string | undefined;\n  onClose: () => void;\n};\n\nexport const KafkaInstanceDrawer: FunctionComponent<\n  KafkaInstanceDrawerProps\n> = ({\n  instance,\n  activeTab,\n  isExpanded,\n  onTabChange,\n  onClose,\n  children,\n  tokenEndpointUrl,\n}) => {\n  const content = useMemo(() => {\n    return (\n      <DrawerPanelContent>\n        {instance ? (\n          <KafkaInstanceDrawerPanel\n            instance={instance}\n            activeTab={activeTab}\n            onTabChange={onTabChange}\n            onClose={onClose}\n            tokenEndpointUrl={tokenEndpointUrl}\n          />\n        ) : null}\n      </DrawerPanelContent>\n    );\n  }, [activeTab, instance, onClose, onTabChange, tokenEndpointUrl]);\n  return (\n    <Drawer isExpanded={isExpanded} isInline={true}>\n      <DrawerContent panelContent={content}>\n        <DrawerContentBody\n          className={\"pf-u-display-flex pf-u-flex-direction-column\"}\n        >\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nexport type KafkaInstanceDrawerTab = \"details\" | \"connections\";\n\nexport const KafkaInstanceDrawerPanel: VoidFunctionComponent<\n  Required<Omit<KafkaInstanceDrawerProps, \"isExpanded\">> & {\n    activeTab: KafkaInstanceDrawerTab;\n  }\n> = ({ instance, activeTab, onTabChange, onClose, tokenEndpointUrl }) => {\n  const { t } = useTranslation([\"kafka\"]);\n  const labels = useKafkaLabels();\n\n  const handleSelect: TabsProps[\"onSelect\"] = useCallback(\n    (_, tab) => {\n      const t = tab as KafkaInstanceDrawerTab;\n      onTabChange(t);\n    },\n    [onTabChange]\n  );\n\n  const isKafkaPending = CreatingStatuses.includes(instance.status);\n\n  return (\n    <>\n      <DrawerHead>\n        <TextContent>\n          <Text component={TextVariants.small} className={\"pf-u-mb-0\"}>\n            {t(\"common:name\")}\n          </Text>\n          <Title\n            headingLevel={\"h1\"}\n            size={TitleSizes[\"xl\"]}\n            className={\"pf-u-mt-0\"}\n          >\n            {instance.name}\n          </Title>\n        </TextContent>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <Tabs activeKey={activeTab} onSelect={handleSelect}>\n          <Tab\n            eventKey={\"details\"}\n            title={<TabTitleText>{t(\"drawer-tabs.details\")}</TabTitleText>}\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaDetailsTab\n                id={instance.id}\n                owner={instance.owner}\n                createdAt={parseISO(instance.createdAt)}\n                updatedAt={parseISO(instance.updatedAt)}\n                expiryDate={\n                  instance.expiryDate\n                    ? parseISO(instance.expiryDate)\n                    : undefined\n                }\n                size={instance.size}\n                ingress={instance.ingress}\n                egress={instance.egress}\n                storage={instance.storage}\n                maxPartitions={instance.maxPartitions}\n                connections={instance.connections}\n                connectionRate={instance.connectionRate}\n                messageSize={instance.messageSize}\n                provider={\n                  labels.providers[instance.provider] || instance.provider\n                }\n                region={\n                  labels.providerRegions[instance.provider][instance.region] ||\n                  instance.region\n                }\n                instanceType={instance.plan}\n                billing={instance.billing}\n                kafkaVersion={instance.version}\n              />\n            </div>\n          </Tab>\n          <Tab\n            eventKey={\"connections\"}\n            title={<TabTitleText>{t(\"drawer-tabs.connections\")}</TabTitleText>}\n            data-testid=\"drawerStreams-tabConnect\"\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaConnectionTabP2\n                isKafkaPending={isKafkaPending}\n                externalServer={getExternalServer(instance.bootstrapUrl)}\n                tokenEndPointUrl={tokenEndpointUrl}\n                linkToServiceAccount={\"service-accounts\"}\n                linkToAccessTab={`TODO/acls`}\n                adminAPIUrl={getAdminServerUrl(instance.adminUrl)}\n                showCreateServiceAccountModal={() => {\n                  /* TODO */\n                }}\n                kafkaFleetManagerUrl={\n                  \"https://api.openshift.com/api/kafkas_mgmt/v1/openapi\"\n                }\n              />\n            </div>\n          </Tab>\n          <Tab\n            eventKey={\"samplecode\"}\n            title={<TabTitleText>{t(\"drawer-tabs.sample-code\")}</TabTitleText>}\n          >\n            <div className={\"pf-u-pt-md pf-u-pb-md\"}>\n              <KafkaSampleCode\n                kafkaBootstrapUrl={getExternalServer(instance.bootstrapUrl)!}\n                tokenEndpointUrl={tokenEndpointUrl}\n              />\n            </div>\n          </Tab>\n        </Tabs>\n      </DrawerPanelBody>\n    </>\n  );\n};\n\nconst getExternalServer = (bootstrapUrl: string | undefined) => {\n  if (!bootstrapUrl) {\n    return undefined;\n  }\n  return bootstrapUrl?.endsWith(\":443\") ? bootstrapUrl : `${bootstrapUrl}:443`;\n};\n\nconst getAdminServerUrl = (adminUrl: string | undefined) => {\n  return adminUrl ? `${adminUrl}/openapi` : undefined;\n};\n","import {\n  Alert,\n  Button,\n  Flex,\n  FlexItem,\n  HelperText,\n  HelperTextItem,\n  Spinner,\n  Split,\n  SplitItem,\n} from \"@patternfly/react-core\";\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { forwardRef } from \"react\";\nimport type { Status } from \"ui-models/src/models/kafka\";\nimport {\n  CreatingStatuses,\n  DegradedStatuses,\n  DeletingStatuses,\n  ReadyStatuses,\n  ResumingStatuses,\n  SuspendedStatuses,\n  SuspendingStatuses,\n} from \"ui-models/src/models/kafka\";\nimport \"./StatusLabel.css\";\n\ntype StatusLabelProps = {\n  value: Status;\n  showWarning?: boolean;\n  showError?: boolean;\n  withPopover?: boolean;\n};\n\n/**\n *<strong> Introduction </strong>\n *These are the various statuses that can show in the Kafka instances table under the \"Status\" header.\n */\nexport const StatusLabel = forwardRef<HTMLButtonElement, StatusLabelProps>(\n  (\n    { value, showWarning = false, showError = false, withPopover = false },\n    ref\n  ) => {\n    const { t } = useTranslation(\"kafka\");\n\n    const buttonVariant = withPopover ? \"link\" : \"plain\";\n\n    switch (true) {\n      case ReadyStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <CheckCircleIcon className=\"mas-m-ready\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.ready\")}</SplitItem>\n            </Split>\n          </div>\n        );\n\n      case CreatingStatuses.includes(value):\n        switch (true) {\n          case showWarning:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                  </SplitItem>\n                </Split>\n                <Alert\n                  variant=\"warning\"\n                  isInline\n                  isPlain\n                  title=\"This is taking longer than expected.\"\n                />\n              </div>\n            );\n          case showError:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                  </SplitItem>\n                </Split>\n                <Alert\n                  variant=\"danger\"\n                  isInline\n                  isPlain\n                  title={t(\"status_warning_or_error_title\")}\n                />\n              </div>\n            );\n          default:\n            return (\n              <div>\n                <Split hasGutter className=\"mas-c-status\">\n                  <SplitItem>\n                    <Spinner size=\"md\" />\n                  </SplitItem>\n                  <SplitItem>\n                    <Button ref={ref} variant={buttonVariant} isInline>\n                      {t(\"statuses.creating\")}\n                    </Button>\n                    <Flex>\n                      <FlexItem>\n                        <HelperText>\n                          <HelperTextItem variant=\"indeterminate\">\n                            {t(\"status_created_shortly_help\")}\n                          </HelperTextItem>\n                        </HelperText>\n                      </FlexItem>\n                    </Flex>\n                  </SplitItem>\n                </Split>\n              </div>\n            );\n        }\n\n      case DegradedStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <ExclamationTriangleIcon className=\"mas-m-degraded\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.degraded\")}</SplitItem>\n            </Split>\n          </div>\n        );\n\n      case SuspendingStatuses.includes(value):\n        return (\n          <div>\n            <p className=\"mas-m-deleting\"> {t(\"statuses.suspending\")}</p>\n          </div>\n        );\n      case SuspendedStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <ExclamationTriangleIcon className=\"mas-m-degraded\" />\n              </SplitItem>\n              <SplitItem>\n                <Button ref={ref} variant={buttonVariant} isInline>\n                  {t(\"statuses.suspended\")}\n                </Button>\n              </SplitItem>\n            </Split>\n          </div>\n        );\n      case ResumingStatuses.includes(value):\n        return (\n          <div>\n            <Split hasGutter className=\"mas-c-status\">\n              <SplitItem>\n                <Spinner size=\"md\" />\n              </SplitItem>\n              <SplitItem>{t(\"statuses.resuming\")}</SplitItem>\n            </Split>\n          </div>\n        );\n      case DeletingStatuses.includes(value):\n        return (\n          <div>\n            <p className=\"mas-m-deleting\"> {t(\"statuses.deleting\")}</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  }\n);\n","export type KafkaStatus =\n  | \"ready\"\n  | \"degraded\"\n  | \"accepted\"\n  | \"provisioning\"\n  | \"preparing\"\n  | \"deprovision\"\n  | \"deleting\"\n  | \"suspended\"\n  | \"suspending\"\n  | \"resuming\";\n\nexport type PopoverStatus =\n  | \"pending\"\n  | \"provisioning\"\n  | \"preparing\"\n  | \"ready\"\n  | \"suspended\";\n\nexport const PopoverStatusOrder: PopoverStatus[] = [\n  \"pending\",\n  \"preparing\",\n  \"provisioning\",\n];\n\nexport const KafkaToPopoverMapping: {\n  [status in KafkaStatus]: PopoverStatus | null;\n} = {\n  ready: null,\n  degraded: null,\n  accepted: \"pending\",\n  provisioning: \"provisioning\",\n  preparing: \"preparing\",\n  deprovision: null,\n  deleting: null,\n  suspended: \"suspended\",\n  suspending: null,\n  resuming: null,\n};\n","import { ProgressStep, ProgressStepper } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport { PopoverStatusOrder } from \"../types\";\n\ntype StatusProgressStepperProps = {\n  currentStatus: PopoverStatus;\n};\n\nexport const StatusProgressStepper: VoidFunctionComponent<\n  StatusProgressStepperProps\n> = ({ currentStatus }) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const currentStep = PopoverStatusOrder.findIndex((s) => s === currentStatus);\n\n  const getVariant = (index: number) =>\n    (currentStep === index && \"info\") ||\n    (currentStep > index && \"success\") ||\n    \"default\";\n\n  return (\n    <ProgressStepper isVertical={true}>\n      <ProgressStep\n        id={\"pending\"}\n        titleId={\"pending\"}\n        isCurrent={currentStatus === \"pending\"}\n        description={t(\"kafka_status_popover.pending.description\")}\n        aria-label={t(\"kafka_status_popover.pending.description\")}\n        variant={getVariant(0)}\n      >\n        {t(\"kafka_status_popover.pending.title\")}\n      </ProgressStep>\n\n      <ProgressStep\n        id={\"provisioning\"}\n        titleId={\"provisioning\"}\n        isCurrent={currentStatus === \"provisioning\"}\n        description={t(\"kafka_status_popover.provisioning.description\")}\n        aria-label={t(\"kafka_status_popover.provisioning.description\")}\n        variant={getVariant(1)}\n      >\n        {t(\"kafka_status_popover.provisioning.title\")}\n      </ProgressStep>\n      <ProgressStep\n        id={\"preparing\"}\n        titleId={\"preparing\"}\n        isCurrent={currentStatus === \"preparing\"}\n        description={t(\"kafka_status_popover.preparing.description\")}\n        aria-label={t(\"kafka_status_popover.preparing.description\")}\n        variant={getVariant(2)}\n      >\n        {t(\"kafka_status_popover.preparing.title\")}\n      </ProgressStep>\n    </ProgressStepper>\n  );\n};\n","import {\n  Alert,\n  Button,\n  ButtonVariant,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport { PopoverStatusOrder } from \"../types\";\nimport { StatusProgressStepper } from \"./StatusProgressStepper\";\n\nexport type StatusPopoverContentProps = {\n  currentStatus: PopoverStatus;\n  showWarning?: boolean;\n  showError?: boolean;\n  onClickConnectionTabLink: () => void;\n  onClickSupportLink: () => void;\n};\n\nexport const StatusPopoverContent: VoidFunctionComponent<\n  StatusPopoverContentProps\n> = ({\n  currentStatus,\n  showWarning = false,\n  showError = false,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const currentStep = PopoverStatusOrder.findIndex((s) => s === currentStatus);\n\n  return (\n    <div>\n      <Stack hasGutter>\n        <StackItem>\n          {showWarning && (\n            <Alert\n              variant=\"warning\"\n              isInline\n              isPlain\n              title={t(\"kafka_status_popover.warning_or_error_title\")}\n            >\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  <Trans\n                    ns={[\"create-kafka-instance\"]}\n                    i18nKey=\"kafka_status_popover.header_content_with_warning\"\n                    components={[\n                      <Button\n                        key=\"btn-connetcion-tab\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickConnectionTabLink}\n                        isInline\n                      />,\n                    ]}\n                  />\n                </Text>\n              </TextContent>\n            </Alert>\n          )}\n          {showError && (\n            <Alert\n              variant=\"danger\"\n              isInline\n              isPlain\n              title={t(\"kafka_status_popover.warning_or_error_title\")}\n            >\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  <Trans\n                    ns={[\"create-kafka-instance\"]}\n                    i18nKey=\"kafka_status_popover.header_content_with_error\"\n                    components={[\n                      <Button\n                        key=\"btn-connetcion-tab\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickConnectionTabLink}\n                        isInline\n                      />,\n                      <Button\n                        key=\"btn-support-case\"\n                        variant={ButtonVariant.link}\n                        onClick={onClickSupportLink}\n                        isInline\n                      />,\n                    ]}\n                  />\n                </Text>\n              </TextContent>\n            </Alert>\n          )}\n          {!showError && !showWarning && (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans\n                  ns={[\"create-kafka-instance\"]}\n                  i18nKey=\"kafka_status_popover.header_content\"\n                  components={[\n                    <Button\n                      key=\"btn-connetcion-tab\"\n                      variant={ButtonVariant.link}\n                      onClick={onClickConnectionTabLink}\n                      isInline\n                    />,\n                  ]}\n                />\n              </Text>\n            </TextContent>\n          )}\n        </StackItem>\n        <StackItem>\n          {t(\"common:progress_stepper_current_step\", {\n            currentStep,\n            total: PopoverStatusOrder.length,\n          })}\n        </StackItem>\n        <StackItem>\n          <StatusProgressStepper currentStatus={currentStatus} />\n        </StackItem>\n      </Stack>\n    </div>\n  );\n};\n","import type { PopoverProps } from \"@patternfly/react-core\";\nimport { Popover } from \"@patternfly/react-core\";\nimport type { RefObject, VoidFunctionComponent } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { PopoverStatus } from \"../types\";\nimport type { StatusPopoverContentProps } from \"./StatusPopoverContent\";\nimport { StatusPopoverContent } from \"./StatusPopoverContent\";\n\nexport type StatusPopoverProps = {\n  status: PopoverStatus;\n  initialOpen?: boolean;\n  showWarning?: boolean;\n  showError?: boolean;\n  children?: PopoverProps[\"children\"];\n  onClickConnectionTabLink: StatusPopoverContentProps[\"onClickConnectionTabLink\"];\n  onClickSupportLink: StatusPopoverContentProps[\"onClickSupportLink\"];\n  reference?: RefObject<HTMLButtonElement>;\n};\n\n/**\n * ## Introduction\n *\n * This is a popover that can be reached from the Kafka Instance table while the status of the instance in question is “Creating”.\n * A Kafka instance usually takes a few minutes to create. The purpose of this popover is to give the user some insights into\n * the creation process of their instance while they wait for it to be available to use.\n *\n * - The text at the top explains that the instance will be ready shortly & suggests that the user creates a service account while they wait.\n *  (Provides a link to the “Connections tab\" where this is done).\n *\n * - The steps shown in the progress stepper are statuses that show in the api. They have been grouped together under the one overall\n * “Creating status” in the table.There is some descriptive text accompanying each step too. When these steps are complete the instance will be ready for use\n *\n * - The popover is only available while instance creation is in progress.\n * - After creation is complete the table displays the ready status and the popover is no longer available.\n *\n */\nexport const StatusPopover: VoidFunctionComponent<StatusPopoverProps> = ({\n  initialOpen = false,\n  status,\n  showWarning = false,\n  showError = false,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n  reference,\n  children,\n}) => {\n  const { t } = useTranslation(\"create-kafka-instance\");\n\n  const [isVisible, setIsVisible] = useState(initialOpen);\n  const onClose = () => setIsVisible(false);\n\n  const handleClickConnectionTabLink = useCallback(() => {\n    onClose();\n    onClickConnectionTabLink();\n  }, [onClickConnectionTabLink]);\n\n  const handleClickSupportLink = useCallback(() => {\n    onClose();\n    onClickSupportLink();\n  }, [onClickSupportLink]);\n\n  return (\n    <Popover\n      headerContent={t(\"kafka_status_popover.title\")}\n      bodyContent={\n        <StatusPopoverContent\n          currentStatus={status}\n          showWarning={showWarning}\n          showError={showError}\n          onClickConnectionTabLink={handleClickConnectionTabLink}\n          onClickSupportLink={handleClickSupportLink}\n        />\n      }\n      isVisible={isVisible}\n      shouldOpen={() => setIsVisible(true)}\n      shouldClose={() => setIsVisible(false)}\n      position={\"right\"}\n      enableFlip={true}\n      reference={reference}\n    >\n      {children}\n    </Popover>\n  );\n};\n","import type { PopoverProps } from \"@patternfly/react-core\";\nimport { Popover, TextContent } from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { RefObject, VoidFunctionComponent } from \"react\";\n\nexport type SuspendedPopoverProps = {\n  children?: PopoverProps[\"children\"];\n  reference?: RefObject<HTMLButtonElement>;\n};\n\nexport const SuspendedPopover: VoidFunctionComponent<SuspendedPopoverProps> = ({\n  children,\n  reference,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <Popover\n      alertSeverityVariant={\"warning\"}\n      headerIcon={<ExclamationTriangleIcon />}\n      headerContent={t(\"suspend_popover_title\")}\n      bodyContent={\n        <TextContent>\n          <p>{t(\"suspend_popover_body_1\")}</p>\n        </TextContent>\n      }\n      position={\"right\"}\n      reference={reference}\n    >\n      {children}\n    </Popover>\n  );\n};\n","import { useInterval } from \"@rhoas/app-services-ui-components\";\nimport { differenceInMinutes } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport type { Status } from \"ui-models/src/models/kafka\";\nimport type { StatusPopoverProps } from \"./components\";\nimport { StatusLabel, StatusPopover, SuspendedPopover } from \"./components\";\nimport { KafkaToPopoverMapping } from \"./types\";\n\nexport type KafkaInstanceStatusProps = {\n  status: Status;\n  createdAt: Date;\n  warningAfterMinutes?: number;\n  errorAfterMinutes?: number;\n} & Pick<StatusPopoverProps, \"onClickConnectionTabLink\" | \"onClickSupportLink\">;\n\n/**\n * A component to show the status of a Kafka instance combining the\n * `StatusPopover` with the `StatusLabel`, with automatic handling of which\n * statuses should have a companion popover.\n */\nexport const KafkaInstanceStatus: VoidFunctionComponent<\n  KafkaInstanceStatusProps\n> = ({\n  status,\n  createdAt,\n  warningAfterMinutes = 15,\n  errorAfterMinutes = 30,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n}) => {\n  const popoverStatus = KafkaToPopoverMapping[status];\n  const [alert, setAlert] = useState<\"warning\" | \"error\" | false>(false);\n  const labelRef = useRef<HTMLButtonElement>(null);\n\n  const checkCreatedAt = useCallback(() => {\n    const elapsed = differenceInMinutes(new Date(), createdAt);\n    if (elapsed > errorAfterMinutes) {\n      setAlert(\"error\");\n    } else if (elapsed > warningAfterMinutes) {\n      setAlert(\"warning\");\n    } else {\n      setAlert(false);\n    }\n  }, [createdAt, errorAfterMinutes, warningAfterMinutes]);\n\n  useInterval(checkCreatedAt, 5000);\n  const showWarning = alert === \"warning\";\n  const showError = alert === \"error\";\n  return (\n    <>\n      {popoverStatus === \"suspended\" ? (\n        <SuspendedPopover reference={labelRef} />\n      ) : (\n        popoverStatus && (\n          <StatusPopover\n            status={popoverStatus}\n            showWarning={showWarning}\n            showError={showError}\n            onClickConnectionTabLink={onClickConnectionTabLink}\n            onClickSupportLink={onClickSupportLink}\n            reference={labelRef}\n          />\n        )\n      )}\n      <StatusLabel\n        value={status}\n        showWarning={showWarning}\n        showError={showError}\n        withPopover={popoverStatus !== undefined}\n        ref={labelRef}\n      />\n    </>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type EmptyStateNoInstancesProps = {\n  onCreate: () => void;\n  onQuickstartGuide: () => void;\n};\n\nexport const EmptyStateNoInstances: VoidFunctionComponent<\n  EmptyStateNoInstancesProps\n> = ({ onCreate, onQuickstartGuide }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_instances_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_instances_body\"}\n          components={[<a onClick={onQuickstartGuide} />]}\n        />\n      </EmptyStateBody>\n      <Button ouiaId=\"button-create\" variant=\"primary\" onClick={onCreate}>\n        {t(\"empty_state_no_instances_create_instance\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type EmptyStateNoResultsProps = {\n  onClearAllFilters: () => void;\n};\n\nexport const EmptyStateNoResults: VoidFunctionComponent<\n  EmptyStateNoResultsProps\n> = ({ onClearAllFilters }) => {\n  const { t } = useTranslation(\"kafka\");\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_state_no_results_found_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"kafka\"}\n          i18nKey={\"empty_state_no_results_found_body\"}\n          components={[<a onClick={onClearAllFilters} />]}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { Button, PageSection, Stack, StackItem } from \"@patternfly/react-core\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  FormatDate,\n  TableView,\n  Trans,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport type { Kafka, SimplifiedStatus } from \"ui-models/src/models/kafka\";\nimport { DeletingStatuses } from \"ui-models/src/models/kafka\";\nimport { useKafkaLabels } from \"../../hooks\";\nimport { KafkaInstanceActions } from \"../KafkaInstanceActions\";\nimport { KafkaInstanceStatus } from \"../KafkaInstanceStatus\";\nimport type {\n  EmptyStateNoInstancesProps,\n  EmptyStateNoResultsProps,\n} from \"./components\";\nimport { EmptyStateNoInstances, EmptyStateNoResults } from \"./components\";\n\nconst Columns = [\n  \"name\",\n  \"owner\",\n  \"createdAt\",\n  \"provider\",\n  \"region\",\n  \"status\",\n] as const;\n\nexport type KafkaInstancesProps<T extends Kafka = Kafka> = {\n  instances: Array<T> | undefined | null;\n  getUrlForInstance: (row: T) => string;\n  names: string[];\n  owners: string[];\n  statuses: string[];\n  onCreate: () => void;\n  onSearchName: (value: string) => void;\n  onRemoveNameChip: (value: string) => void;\n  onRemoveNameChips: () => void;\n  onSearchOwner: (value: string) => void;\n  onRemoveOwnerChip: (value: string) => void;\n  onRemoveOwnerChips: () => void;\n  onSearchStatus: (value: SimplifiedStatus) => void;\n  onRemoveStatusChip: (value: SimplifiedStatus) => void;\n  onRemoveStatusChips: () => void;\n  onDetails: (row: T) => void;\n  onConnection: (row: T) => void;\n  canChangeOwner: (row: T) => boolean;\n  onChangeOwner: (row: T) => void;\n  canDelete: (row: T) => boolean;\n  onDelete: (row: T) => void;\n  onClickConnectionTabLink: (row: T) => void;\n  onClickSupportLink: () => void;\n  onInstanceLinkClick: (row: T) => void;\n  canHaveInstanceLink: (row: T) => boolean;\n  canOpenConnection: (row: T) => boolean;\n} & Pick<\n  TableViewProps<T, typeof Columns[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n> &\n  EmptyStateNoInstancesProps &\n  EmptyStateNoResultsProps;\n\nexport const KafkaInstances = <T extends Kafka>({\n  instances,\n  itemCount,\n  page,\n  perPage,\n  names,\n  owners,\n  statuses,\n  getUrlForInstance,\n  isRowSelected,\n  isColumnSortable,\n  onPageChange,\n  onDetails,\n  onConnection,\n  canChangeOwner,\n  onChangeOwner,\n  canDelete,\n  onDelete,\n  onCreate,\n  onQuickstartGuide,\n  onClickConnectionTabLink,\n  onClickSupportLink,\n  onInstanceLinkClick,\n  onSearchName,\n  onRemoveNameChip,\n  onRemoveNameChips,\n  onSearchOwner,\n  onRemoveOwnerChip,\n  onRemoveOwnerChips,\n  onSearchStatus,\n  onRemoveStatusChip,\n  onRemoveStatusChips,\n  onClearAllFilters,\n\n  canHaveInstanceLink,\n  canOpenConnection,\n}: KafkaInstancesProps<T>) => {\n  const { t } = useTranslation(\"kafka\");\n  const labels = useKafkaLabels();\n  const breakpoint = \"lg\";\n\n  const isFiltered =\n    names.length > 0 || owners.length > 0 || statuses.length > 0;\n\n  return (\n    <PageSection isFilled={true}>\n      <TableView\n        data={instances}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          const timeCreatedDate = parseISO(row.createdAt);\n          const instanceLinkEnable = canHaveInstanceLink(row);\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"name\":\n                    return (\n                      <Button\n                        variant=\"link\"\n                        component={(props) => (\n                          <Link to={getUrlForInstance(row)} {...props}>\n                            {row.name}\n                          </Link>\n                        )}\n                        isInline={true}\n                        isAriaDisabled={!instanceLinkEnable}\n                        isDisabled={!instanceLinkEnable}\n                        onClick={() => onInstanceLinkClick(row)}\n                      />\n                    );\n                  case \"provider\":\n                    return labels.providers[row.provider];\n                  case \"createdAt\":\n                    return (\n                      <Stack>\n                        <StackItem>\n                          <FormatDate\n                            date={timeCreatedDate}\n                            format={\"distanceToNowWithAgo\"}\n                          />\n                        </StackItem>\n                        {row.expiryDate && (\n                          <StackItem>\n                            <Trans\n                              i18nKey=\"will_expire_short\"\n                              ns={[\"kafka\"]}\n                              components={{\n                                time: (\n                                  <FormatDate\n                                    date={parseISO(row.expiryDate)}\n                                    format=\"expiration\"\n                                  />\n                                ),\n                              }}\n                            />\n                          </StackItem>\n                        )}\n                      </Stack>\n                    );\n                  case \"status\":\n                    return (\n                      <KafkaInstanceStatus\n                        status={row[\"status\"]}\n                        createdAt={timeCreatedDate}\n                        onClickConnectionTabLink={() =>\n                          onClickConnectionTabLink(row)\n                        }\n                        onClickSupportLink={onClickSupportLink}\n                      />\n                    );\n                  default:\n                    return row[column];\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row }) => {\n          const changeOwnerEnabled = canChangeOwner(row);\n          const deleteEnabled = canDelete(row);\n          const openConnectionEnabled = canOpenConnection(row);\n          return (\n            <KafkaInstanceActions\n              onDetails={() => onDetails(row)}\n              onConnection={() => onConnection(row)}\n              canOpenConnection={openConnectionEnabled}\n              canChangeOwner={changeOwnerEnabled}\n              onChangeOwner={() => onChangeOwner(row)}\n              canDelete={deleteEnabled}\n              onDelete={() => onDelete(row)}\n            />\n          );\n        }}\n        onRowClick={({ row }) => onDetails(row)}\n        isColumnSortable={isColumnSortable}\n        isRowSelected={isRowSelected}\n        isRowDeleted={({ row }) => DeletingStatuses.includes(row[\"status\"])}\n        toolbarBreakpoint={breakpoint}\n        filters={{\n          [labels.fields.name]: {\n            type: \"search\",\n            chips: names,\n            onSearch: onSearchName,\n            onRemoveChip: onRemoveNameChip,\n            onRemoveGroup: onRemoveNameChips,\n            validate: (value) => /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(value),\n            errorMessage: t(\"kafka:input_field_invalid_message\"),\n          },\n          [labels.fields.owner]: {\n            type: \"search\",\n            chips: owners,\n            onSearch: onSearchOwner,\n            onRemoveChip: onRemoveOwnerChip,\n            onRemoveGroup: onRemoveOwnerChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"kafka:input_field_invalid_message\"),\n          },\n          [labels.fields.status]: {\n            type: \"checkbox\",\n            chips: statuses,\n            options: labels.statusesSimplified,\n            onToggle: onSearchStatus,\n            onRemoveChip: onRemoveStatusChip,\n            onRemoveGroup: onRemoveStatusChips,\n          },\n        }}\n        actions={[\n          {\n            label: t(\"create_instance\"),\n            onClick: onCreate,\n            isPrimary: true,\n          },\n        ]}\n        itemCount={itemCount}\n        page={page}\n        perPage={perPage}\n        onPageChange={onPageChange}\n        onClearAllFilters={onClearAllFilters}\n        ariaLabel={t(\"table.title\")}\n        isFiltered={isFiltered}\n        emptyStateNoData={\n          <EmptyStateNoInstances\n            onCreate={onCreate}\n            onQuickstartGuide={onQuickstartGuide}\n          />\n        }\n        emptyStateNoResults={\n          <EmptyStateNoResults onClearAllFilters={onClearAllFilters} />\n        }\n      />\n    </PageSection>\n  );\n};\n","import type { DatePickerProps, TimePickerProps } from \"@patternfly/react-core\";\nimport { DatePicker, InputGroup, TimePicker } from \"@patternfly/react-core\";\nimport { formatISO, parseISO, setHours, setMinutes } from \"date-fns\";\nimport { formatInTimeZone } from \"date-fns-tz\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { DateIsoString } from \"../../../../../ui-models/src/types\";\n\nexport type DateTimePickerProps = {\n  isDisabled: boolean;\n  value: DateIsoString | undefined;\n  onChange: (value: DateIsoString) => void;\n};\nexport const DateTimePicker: VoidFunctionComponent<DateTimePickerProps> = ({\n  isDisabled,\n  value,\n  onChange,\n}) => {\n  const [timeSelected, setIsTimeSelected] = useState(false);\n  const date = value ? parseISO(value) : undefined;\n\n  const onSelectCalendar: DatePickerProps[\"onChange\"] = (_, newDate) => {\n    if (newDate) {\n      onChange(formatISO(newDate) as DateIsoString);\n    }\n  };\n\n  const onSelectTime: TimePickerProps[\"onChange\"] = (\n    time,\n    hour,\n    minute,\n    __,\n    isValid\n  ) => {\n    if (\n      isValid &&\n      date &&\n      hour != undefined &&\n      hour > 0 &&\n      (time.includes(\"AM\") || time.includes(\"PM\"))\n    ) {\n      let newDate = date;\n      if (hour !== undefined) {\n        newDate = setHours(newDate, hour);\n      }\n      if (minute !== undefined) {\n        newDate = setMinutes(newDate, minute);\n      }\n\n      onChange(formatISO(newDate) as DateIsoString);\n      setIsTimeSelected(true);\n    }\n  };\n\n  return (\n    <InputGroup>\n      <DatePicker\n        isDisabled={isDisabled}\n        value={date ? formatInTimeZone(date, \"UTC\", \"yyyy-MM-dd\") : undefined}\n        onChange={onSelectCalendar}\n      />\n      <TimePicker\n        isDisabled={!date || isDisabled}\n        time={timeSelected ? date : undefined}\n        onChange={onSelectTime}\n      />\n    </InputGroup>\n  );\n};\n","import {\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  DropdownSeparator,\n  DropdownToggle,\n  InputGroup,\n  TextInput,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { DateIsoString } from \"../../../../../ui-models/src/types\";\nimport { DateTimePicker } from \"./DateTimePicker\";\n\ntype Category = \"offset\" | \"timestamp\" | \"epoch\" | \"latest\";\nexport type FilterGroupProps = {\n  isDisabled: boolean;\n  offset: number | undefined;\n  epoch: number | undefined;\n  timestamp: DateIsoString | undefined;\n  onOffsetChange: (value: number | undefined) => void;\n  onTimestampChange: (value: DateIsoString | undefined) => void;\n  onEpochChange: (value: number | undefined) => void;\n  onLatest: () => void;\n};\nexport const FilterGroup: VoidFunctionComponent<FilterGroupProps> = ({\n  isDisabled,\n  offset,\n  epoch,\n  timestamp,\n  onOffsetChange,\n  onTimestampChange,\n  onEpochChange,\n  onLatest,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [currentCategory, setCurrentCategory] = useState<Category>(\"latest\");\n  const [isOpen, setIsOpen] = useState(false);\n  const labels: { [key in Category]: string } = {\n    offset: t(\"filter.offset\"),\n    timestamp: t(\"filter.timestamp\"),\n    epoch: t(\"filter.epoch\"),\n    latest: t(\"filter.latest\"),\n  };\n  return (\n    <ToolbarItem>\n      <InputGroup>\n        <Dropdown\n          data-testid={\"filter-group-dropdown\"}\n          toggle={\n            <DropdownToggle\n              onToggle={setIsOpen}\n              isDisabled={isDisabled}\n              data-testid={\"filter-group\"}\n            >\n              {labels[currentCategory]}\n            </DropdownToggle>\n          }\n          position={DropdownPosition.left}\n          isOpen={isOpen}\n          onSelect={() => setIsOpen(false)}\n          dropdownItems={[\n            <DropdownItem\n              key=\"offset\"\n              value=\"offset\"\n              autoFocus={currentCategory === \"offset\"}\n              onClick={() => setCurrentCategory(\"offset\")}\n            >\n              {labels[\"offset\"]}\n            </DropdownItem>,\n            <DropdownItem\n              key=\"timestamp\"\n              value=\"timestamp\"\n              autoFocus={currentCategory === \"timestamp\"}\n              onClick={() => setCurrentCategory(\"timestamp\")}\n            >\n              {labels[\"timestamp\"]}\n            </DropdownItem>,\n            <DropdownItem\n              key=\"epoch\"\n              value=\"epoch\"\n              autoFocus={currentCategory === \"epoch\"}\n              onClick={() => setCurrentCategory(\"epoch\")}\n            >\n              {labels[\"epoch\"]}\n            </DropdownItem>,\n            <DropdownSeparator key={\"divider\"} />,\n            <DropdownItem\n              key=\"latest\"\n              value=\"latest\"\n              autoFocus={currentCategory === \"latest\"}\n              onClick={() => {\n                setCurrentCategory(\"latest\");\n                onLatest();\n              }}\n            >\n              {labels[\"latest\"]}\n            </DropdownItem>,\n          ]}\n        />\n        {currentCategory === \"offset\" && (\n          <TextInput\n            isDisabled={isDisabled}\n            type={\"number\"}\n            aria-label={t(\"filter.offset_aria_label\")}\n            placeholder={t(\"filter.offset_placeholder\")}\n            onChange={(value) => {\n              if (value !== \"\") {\n                const newOffset = parseInt(value, 10);\n                if (Number.isInteger(newOffset)) {\n                  onOffsetChange(newOffset);\n                }\n              } else {\n                onOffsetChange(undefined);\n              }\n            }}\n            value={offset === undefined ? \"\" : offset}\n          />\n        )}\n        {currentCategory === \"timestamp\" && (\n          <DateTimePicker\n            isDisabled={isDisabled}\n            value={timestamp}\n            onChange={onTimestampChange}\n          />\n        )}\n        {currentCategory === \"epoch\" && (\n          <TextInput\n            isDisabled={isDisabled}\n            type={\"number\"}\n            aria-label={t(\"filter.epoch_aria_label\")}\n            placeholder={t(\"filter.epoch_placeholder\")}\n            className=\"pf-u-flex-basis-auto pf-u-flex-grow-0 pf-u-w-initial\"\n            size={t(\"filter.epoch_placeholder\").length}\n            onChange={(value) => {\n              if (value !== \"\" && Number(value) >= 0)\n                onEpochChange(Number(value));\n              else onEpochChange(undefined);\n            }}\n            value={epoch == undefined ? \"\" : epoch}\n          />\n        )}\n      </InputGroup>\n    </ToolbarItem>\n  );\n};\n","import {\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type LimitSelectorProps = {\n  value: number;\n  isDisabled: boolean;\n  onChange: (value: number) => void;\n};\nexport const LimitSelector: VoidFunctionComponent<LimitSelectorProps> = ({\n  value,\n  isDisabled,\n  onChange,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = (isOpen: boolean) => setIsOpen(isOpen);\n  const titleId = \"limit-selector\";\n\n  return (\n    <InputGroup>\n      <InputGroupText className=\"pf-c-content\">\n        {t(\"limit_label\")}\n      </InputGroupText>\n      <div>\n        <span id={titleId} hidden>\n          Select a state\n        </span>\n\n        <Select\n          aria-label={t(\"per_page_aria_label\")}\n          onToggle={toggleOpen}\n          selections={value !== undefined ? [t(\"limit\", { value })] : undefined}\n          isOpen={isOpen}\n          isDisabled={isDisabled}\n          onSelect={() => setIsOpen(false)}\n          data-testid={\"limit-selector\"}\n        >\n          {[10, 20, 50].map((value, idx) => (\n            <SelectOption\n              key={idx}\n              value={t(\"limit\", { value })}\n              onClick={() => onChange(value)}\n            />\n          ))}\n        </Select>\n      </div>\n    </InputGroup>\n  );\n};\n","import type { Message } from \"ui-models/src/models/message\";\n\nexport function isSameMessage(m1: Message, m2: Message) {\n  return JSON.stringify(m1) === JSON.stringify(m2);\n}\n\nexport function beautifyUnknownValue(value: string): string {\n  try {\n    return JSON.stringify(JSON.parse(value), null, 2);\n  } catch (e) {\n    // noop\n  }\n  return value;\n}\n\nexport function truncate(value: string, length: number): [string, boolean] {\n  const shouldTruncate = value.length > length;\n  return [\n    shouldTruncate ? `${value.substring(0, length)}...` : value,\n    shouldTruncate,\n  ];\n}\n","export enum RetentionTimeUnits {\n  MILLISECOND = \"milliseconds\",\n  SECOND = \"seconds\",\n  MINUTE = \"minutes\",\n  HOUR = \"hours\",\n  DAY = \"days\",\n  WEEK = \"weeks\",\n  CUSTOM = \"custom\",\n  UNLIMITED = \"unlimited\",\n}\n\nexport enum RetentionSizeUnits {\n  BYTE = \"bytes\",\n  KIBIBYTE = \"kibibytes\",\n  MEBIBYTE = \"mebibytes\",\n  GIBIBYTE = \"gibibytes\",\n  TEBIBYTE = \"tebibytes\",\n  CUSTOM = \"custom\",\n  UNLIMITED = \"unlimited\",\n}\n\nexport const unitsToBytes = {\n  [RetentionSizeUnits.BYTE]: BigInt(\"1\"),\n  [RetentionSizeUnits.KIBIBYTE]: BigInt(\"1024\"),\n  [RetentionSizeUnits.MEBIBYTE]: BigInt(\"1048576\"),\n  [RetentionSizeUnits.GIBIBYTE]: BigInt(\"1073741824\"),\n  [RetentionSizeUnits.TEBIBYTE]: BigInt(\"1099511627776\"),\n};\n\nexport const unitsToMilliSecond = {\n  [RetentionTimeUnits.MILLISECOND]: BigInt(\"1\"),\n  [RetentionTimeUnits.SECOND]: BigInt(\"1000\"),\n  [RetentionTimeUnits.MINUTE]: BigInt(\"60000\"),\n  [RetentionTimeUnits.HOUR]: BigInt(\"3600000\"),\n  [RetentionTimeUnits.DAY]: BigInt(\"86400000\"),\n};\n\ntype ConversionUnit = {\n  value: bigint;\n  unit: string;\n};\n\nexport const millisecondsToTime = (value: bigint): ConversionUnit => {\n  if (value) {\n    if (value % unitsToMilliSecond.days == BigInt(0))\n      return { value: value / unitsToMilliSecond.days, unit: \"days\" };\n    if (value % unitsToMilliSecond.hours == BigInt(0))\n      return { value: value / unitsToMilliSecond.hours, unit: \"hours\" };\n    if (value % unitsToMilliSecond.minutes == BigInt(0))\n      return { value: value / unitsToMilliSecond.minutes, unit: \"minutes\" };\n    if (value % unitsToMilliSecond.seconds == BigInt(0))\n      return { value: value / unitsToMilliSecond.seconds, unit: \"seconds\" };\n  }\n\n  return { value, unit: \"milliseconds\" };\n};\n\nexport const formattedRetentionTime = (time: bigint): string => {\n  const { unit, value } = millisecondsToTime(time);\n  return Number(value) === -1 ? \"Unlimited\" : `${time} ms (${value} ${unit})`;\n};\n\nexport const formattedRetentionSize = (size: bigint): string => {\n  const { unit, value } = bytesToMemorySize(size);\n  return Number(value) === -1\n    ? \"Unlimited\"\n    : `${size} bytes (${value} ${unit})`;\n};\n\nexport const bytesToMemorySize = (value: bigint): ConversionUnit => {\n  if (value) {\n    if (value % unitsToBytes.tebibytes == BigInt(0))\n      return { value: value / unitsToBytes.tebibytes, unit: \"tebibytes\" };\n    if (value % unitsToBytes.gibibytes == BigInt(0))\n      return { value: value / unitsToBytes.gibibytes, unit: \"gibibytes\" };\n    if (value % unitsToBytes.mebibytes == BigInt(0))\n      return { value: value / unitsToBytes.mebibytes, unit: \"mebibytes\" };\n    if (value % unitsToBytes.kibibytes == BigInt(0))\n      return { value: value / unitsToBytes.kibibytes, unit: \"kibibytes\" };\n  }\n\n  return { value, unit: \"bytes\" };\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type NoDataCellProps = {\n  columnLabel: string;\n};\nexport const NoDataCell: VoidFunctionComponent<NoDataCellProps> = ({\n  columnLabel,\n}) => {\n  const { t } = useTranslation(\"common\");\n  return (\n    <span className=\"pf-u-color-400\">\n      {t(\"table_cell_no_data\", { column: columnLabel })}\n    </span>\n  );\n};\n","import {\n  ClipboardCopy,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelContent,\n  Flex,\n  FlexItem,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { FormatDate, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { parseISO } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport { beautifyUnknownValue } from \"../utils\";\nimport { NoDataCell } from \"./NoDataCell\";\n\nexport type MessageDetailsProps = {\n  onClose: () => void;\n  defaultTab: MessageDetailsBodyProps[\"defaultTab\"];\n  message: Message | undefined;\n};\nexport const MessageDetails: VoidFunctionComponent<MessageDetailsProps> = ({\n  onClose,\n  defaultTab,\n  message,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n\n  return (\n    <DrawerPanelContent isResizable={true} minSize={\"400px\"}>\n      <DrawerHead>\n        <TextContent>\n          <Text component={TextVariants.h2}>{t(\"message\")}</Text>\n        </TextContent>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onClose} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerContentBody>\n        {message && (\n          <MessageDetailsBody\n            defaultTab={defaultTab}\n            messageKey={message.key}\n            {...message}\n          />\n        )}\n      </DrawerContentBody>\n    </DrawerPanelContent>\n  );\n};\n\nexport type MessageDetailsBodyProps = {\n  defaultTab: \"value\" | \"headers\";\n  messageKey: Message[\"key\"];\n} & Omit<Message, \"key\">;\n\nexport const MessageDetailsBody: VoidFunctionComponent<\n  MessageDetailsBodyProps\n> = ({ defaultTab, ...message }) => {\n  const { t } = useTranslation(\"message-browser\");\n\n  return (\n    <Flex direction={{ default: \"column\" }} data-testid={\"message-details\"}>\n      <FlexItem>\n        <DescriptionList isHorizontal isCompact>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.partition\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.partition}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.offset\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.offset}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.timestamp\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.timestamp ? (\n                <FormatDate\n                  date={parseISO(message.timestamp)}\n                  format={\"longWithMilliseconds\"}\n                />\n              ) : (\n                <NoDataCell columnLabel={t(\"field.timestamp\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.epoch\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.timestamp ? (\n                <FormatDate\n                  date={parseISO(message.timestamp)}\n                  format={\"epoch\"}\n                />\n              ) : (\n                <NoDataCell columnLabel={t(\"field.epoch\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>{t(\"field.key\")}</DescriptionListTerm>\n            <DescriptionListDescription>\n              {message.messageKey ? (\n                message.messageKey\n              ) : (\n                <NoDataCell columnLabel={t(\"field.key\")} />\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n        </DescriptionList>\n      </FlexItem>\n      <FlexItem>\n        {/* set key to be a random number to force redraw the tabs in order to change the active tab from the outside */}\n        <Tabs defaultActiveKey={defaultTab} key={Math.random()}>\n          <Tab\n            eventKey={\"value\"}\n            title={<TabTitleText>{t(\"field.value\")}</TabTitleText>}\n          >\n            <ClipboardCopy isCode={true} isExpanded={true} isReadOnly={true}>\n              {beautifyUnknownValue(message.value || \"\")}\n            </ClipboardCopy>\n          </Tab>\n          <Tab\n            eventKey={\"headers\"}\n            title={<TabTitleText>{t(\"field.headers\")}</TabTitleText>}\n          >\n            <ClipboardCopy isCode={true} isExpanded={true} isReadOnly={true}>\n              {beautifyUnknownValue(JSON.stringify(message.headers) || \"\")}\n            </ClipboardCopy>\n          </Tab>\n        </Tabs>\n      </FlexItem>\n    </Flex>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const NoDataEmptyState: VoidFunctionComponent<{\n  onRefresh: () => void;\n}> = ({ onRefresh }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {t(\"no_data_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_data_body\")}</EmptyStateBody>\n      <Button onClick={onRefresh}>{t(\"no_data_refresh\")}</Button>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const NoResultsEmptyState: VoidFunctionComponent<{\n  onReset: () => void;\n}> = ({ onReset }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {t(\"no_results_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_results_body\")}</EmptyStateBody>\n      <Button variant={\"link\"} onClick={onReset}>\n        {t(\"no_results_reset\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { Text, TextContent } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const OffsetRange: VoidFunctionComponent<{\n  min: number;\n  max: number;\n}> = ({ min, max }) => {\n  const { t } = useTranslation(\"message-browser\");\n  return (\n    <TextContent className=\"pf-u-font-size\">\n      <Text>\n        {t(\"offset\")} <span className=\"custom-text\">{min}</span> -{\" \"}\n        <span className=\"custom-text\">{max}</span>\n      </Text>\n    </TextContent>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  InputGroup,\n  InputGroupText,\n  InputGroupTextVariant,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nconst MAX_OPTIONS = 20;\n\nexport type PartitionSelectorProps = {\n  value: number | undefined;\n  partitions: number | undefined;\n  isDisabled: boolean;\n  onChange: (value: number | undefined) => void;\n};\nexport const PartitionSelector: VoidFunctionComponent<\n  PartitionSelectorProps\n> = ({ value, partitions, isDisabled, onChange }) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = (isOpen: boolean) => setIsOpen(isOpen);\n  const titleId = \"partition-selector\";\n\n  const handleChange = useCallback(\n    (value: string) => {\n      if (value !== \"\") {\n        const valueAsNum = parseInt(value, 10);\n        if (Number.isInteger(valueAsNum)) {\n          onChange(valueAsNum);\n        }\n      }\n      setIsOpen(false);\n    },\n    [onChange]\n  );\n\n  const allPartitions = useMemo(() => {\n    return new Array(partitions).fill(0).map((_, index) => index.toString());\n  }, [partitions]);\n\n  const makeOptions = useCallback(\n    (values: string[]) => {\n      const options = values\n        .slice(0, MAX_OPTIONS)\n        .map((v) => <SelectOption key={v} value={v} />);\n      const hiddenOptionsCount = values.length - options.length;\n      return hiddenOptionsCount\n        ? [\n            ...options,\n            <SelectOption\n              key={\"more-info\"}\n              isDisabled={true}\n              description={t(\"partitions_hidden\", {\n                count: hiddenOptionsCount,\n              })}\n            />,\n          ]\n        : options;\n    },\n    [t]\n  );\n\n  const options = useMemo(() => {\n    return makeOptions(allPartitions);\n  }, [allPartitions, makeOptions]);\n\n  const handleFilter: SelectProps[\"onFilter\"] = useCallback(\n    (_, filter: string) => {\n      if (filter !== \"\") {\n        return makeOptions(\n          allPartitions.filter((partition) => partition.includes(filter))\n        );\n      }\n      return options;\n    },\n    [allPartitions, makeOptions, options]\n  );\n\n  return (\n    <InputGroup>\n      <InputGroupText className=\"pf-c-content\">\n        {t(\"field.partition\")}\n      </InputGroupText>\n      <div>\n        <span id={titleId} hidden>\n          {t(\"select_partition_aria_label\")}\n        </span>\n        <Select\n          variant={SelectVariant.typeahead}\n          typeAheadAriaLabel={t(\"select_partition_typeahead\")}\n          onToggle={toggleOpen}\n          onSelect={(_, value) => handleChange(value as string)}\n          selections={value !== undefined ? [`${value}`] : undefined}\n          isOpen={isOpen}\n          aria-labelledby={titleId}\n          maxHeight={200}\n          width={150}\n          onFilter={handleFilter}\n          isInputValuePersisted={false}\n          isDisabled={isDisabled}\n          placeholderText={t(\"partition_placeholder\")}\n          onClear={() => onChange(undefined)}\n          data-testid={\"partition-selector\"}\n        >\n          {options}\n        </Select>\n      </div>\n      <InputGroupText\n        id={`${titleId}-input`}\n        variant={InputGroupTextVariant.plain}\n        className=\"pf-c-content\"\n      >\n        {t(\"select_partition_of_count\", { partitions })}\n      </InputGroupText>\n    </InputGroup>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { truncate } from \"../utils\";\nimport { Flex, FlexItem } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nconst PREVIEW_LENGTH = 170;\n\nexport type UnknownValuePreviewProps = {\n  value: string;\n  truncateAt?: number;\n  onClick?: () => void;\n};\nexport const UnknownValuePreview: VoidFunctionComponent<\n  UnknownValuePreviewProps\n> = ({ value, truncateAt = PREVIEW_LENGTH, onClick }) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [preview, truncated] = truncate(value, truncateAt);\n  return (\n    <Flex\n      direction={{ default: \"column\" }}\n      spaceItems={{ default: \"spaceItemsXs\" }}\n    >\n      <FlexItem>{preview}</FlexItem>\n      {truncated && (\n        <FlexItem>\n          <a\n            onClick={\n              onClick\n                ? (e) => {\n                    e.stopPropagation();\n                    onClick();\n                  }\n                : undefined\n            }\n          >\n            {t(\"show_more\")}\n          </a>\n        </FlexItem>\n      )}\n    </Flex>\n  );\n};\n","import type { Message } from \"ui-models/src/models/message\";\nimport { assign, createMachine } from \"xstate\";\nimport type { DateIsoString } from \"../../../../ui-models/src/types\";\nimport { isSameMessage } from \"./utils\";\n\nexport type MessageApiResponse = {\n  lastUpdated: Date;\n  messages: Message[];\n  partitions: number;\n  offsetMin: number;\n  offsetMax: number;\n\n  filter: {\n    partition: number | undefined;\n    offset: number | undefined;\n    timestamp: DateIsoString | undefined;\n    limit: number | undefined;\n    epoch: number | undefined;\n  };\n};\n\nexport const MessageBrowserMachine = createMachine(\n  {\n    id: \"message-browser\",\n    predictableActionArguments: true,\n    tsTypes: {} as import(\"./MessageBrowserMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as {\n        // response\n        response: MessageApiResponse | undefined;\n\n        limit: number;\n        // optional input\n        partition: number | undefined;\n        offset: number | undefined;\n        epoch: number | undefined;\n        timestamp: DateIsoString | undefined;\n        selectedMessage: Message | undefined;\n      },\n      events: {} as\n        | {\n            type: \"fetchSuccess\";\n            messages: Message[];\n            partitions: number;\n            offsetMin: number;\n            offsetMax: number;\n          }\n        | { type: \"fetchFail\" }\n        | { type: \"refresh\" }\n        | { type: \"setPartition\"; value: number | undefined }\n        | { type: \"setOffset\"; value: number | undefined }\n        | { type: \"setTimestamp\"; value: DateIsoString | undefined }\n        | { type: \"setEpoch\"; value: number | undefined }\n        | { type: \"setLatest\" }\n        | { type: \"setLimit\"; value: number }\n        | { type: \"selectMessage\"; message: Message }\n        | { type: \"deselectMessage\" },\n    },\n    initial: \"initialLoading\",\n    context: {\n      // response\n      response: undefined,\n\n      limit: 10,\n      // optional input\n      partition: undefined,\n      offset: undefined,\n      timestamp: undefined,\n      selectedMessage: undefined,\n      epoch: undefined,\n    },\n    states: {\n      initialLoading: {\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMessages\",\n            target: \"verifyMessages\",\n          },\n          fetchFail: \"error\",\n        },\n      },\n      verifyMessages: {\n        always: [{ cond: \"noMessages\", target: \"noData\" }, { target: \"ready\" }],\n      },\n      noData: {\n        on: {\n          refresh: \"initialLoading\",\n        },\n      },\n      error: {\n        on: {\n          refresh: \"initialLoading\",\n        },\n      },\n      ready: {\n        initial: \"pristine\",\n        states: {\n          pristine: {},\n          dirty: {\n            tags: \"dirty\",\n          },\n          shouldSearch: {\n            always: [\n              {\n                cond: \"areFiltersChanged\",\n                target: \"dirty\",\n              },\n              { target: \"pristine\" },\n            ],\n          },\n        },\n        always: [\n          {\n            cond: \"selectedMessageNotAvailable\",\n            actions: \"deselectMessage\",\n          },\n        ],\n        on: {\n          refresh: \"refreshing\",\n          setPartition: {\n            target: \".shouldSearch\",\n            actions: \"setPartition\",\n          },\n          setEpoch: {\n            actions: \"setEpoch\",\n            target: \".shouldSearch\",\n          },\n          setTimestamp: {\n            target: \".shouldSearch\",\n            actions: \"setTimestamp\",\n          },\n          setOffset: {\n            target: \".shouldSearch\",\n            actions: \"setOffset\",\n          },\n          setLatest: {\n            target: \".shouldSearch\",\n            actions: \"setLatest\",\n          },\n          setLimit: {\n            target: \".shouldSearch\",\n            actions: \"setLimit\",\n          },\n          selectMessage: {\n            actions: \"selectMessage\",\n          },\n          deselectMessage: {\n            actions: \"deselectMessage\",\n          },\n        },\n      },\n      refreshing: {\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMessages\",\n            target: \"ready\",\n          },\n          fetchFail: {\n            target: \"ready\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setMessages: assign(\n        (context, { messages, partitions, offsetMin, offsetMax }) => ({\n          response: {\n            lastUpdated: new Date(),\n            messages,\n            partitions,\n            offsetMin,\n            offsetMax,\n            filter: {\n              partition: context.partition,\n              timestamp: context.timestamp,\n              offset: context.offset,\n              limit: context.limit,\n              epoch: context.epoch,\n            },\n          },\n        })\n      ),\n      setPartition: assign((_, { value }) => ({ partition: value })),\n      setEpoch: assign((_, { value }) => ({\n        epoch: value,\n      })),\n      setTimestamp: assign((_, { value }) => ({\n        timestamp: value,\n      })),\n      setOffset: assign((_, { value }) => ({\n        offset: value,\n      })),\n      setLimit: assign((_, { value }) => ({\n        limit: value,\n      })),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      setLatest: assign((_) => ({\n        timestamp: undefined,\n        offset: undefined,\n      })),\n      selectMessage: assign((_, { message }) => ({ selectedMessage: message })),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      deselectMessage: assign((_) => ({ selectedMessage: undefined })),\n    },\n    guards: {\n      noMessages: ({ response }) =>\n        response === undefined || response.messages.length === 0,\n      selectedMessageNotAvailable: ({ response, selectedMessage }) =>\n        selectedMessage !== undefined &&\n        response?.messages.find((m) => isSameMessage(m, selectedMessage)) ===\n          undefined,\n      areFiltersChanged: (context) =>\n        context.response?.filter.limit !== context.limit ||\n        context.response?.filter.offset !== context.offset ||\n        context.response?.filter.partition !== context.partition ||\n        context.response?.filter.timestamp !== context.timestamp ||\n        context.response?.filter.epoch !== context.epoch,\n    },\n  }\n);\n","import {\n  Button,\n  Drawer,\n  DrawerContent,\n  PageSection,\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup,\n} from \"@patternfly/react-core\";\nimport { FilterIcon, SearchIcon } from \"@patternfly/react-icons\";\nimport type { BaseCellProps } from \"@patternfly/react-table\";\nimport {\n  InnerScrollContainer,\n  OuterScrollContainer,\n} from \"@patternfly/react-table\";\nimport {\n  FormatDate,\n  Loading,\n  RefreshButton,\n  ResponsiveTable,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport { useMachine } from \"@xstate/react\";\nimport { parseISO } from \"date-fns\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useMemo, useState } from \"react\";\nimport type { Message } from \"ui-models/src/models/message\";\nimport type { DateIsoString } from \"../../../../ui-models/src/types\";\nimport type { MessageDetailsProps } from \"./components\";\nimport {\n  FilterGroup,\n  LimitSelector,\n  MessageDetails,\n  NoDataCell,\n  NoDataEmptyState,\n  NoResultsEmptyState,\n  OffsetRange,\n  PartitionSelector,\n  UnknownValuePreview,\n} from \"./components\";\nimport \"./KafkaMessageBrowser.css\";\nimport type { MessageApiResponse } from \"./MessageBrowserMachine\";\nimport { MessageBrowserMachine } from \"./MessageBrowserMachine\";\nimport { beautifyUnknownValue, isSameMessage } from \"./utils\";\n\nconst columns = [\n  \"partition\",\n  \"offset\",\n  \"timestamp\",\n  \"key\",\n  \"headers\",\n  \"value\",\n] as const;\n\nconst columnWidths: BaseCellProps[\"width\"][] = [10, 10, 15, 10, undefined, 30];\n\nexport type KafkaMessageBrowserProps = {\n  getMessages: (props: {\n    partition?: number;\n    offset?: number;\n    timestamp?: DateIsoString;\n    limit: number;\n  }) => Promise<{ messages: Message[]; partitions: number }>;\n};\nexport const KafkaMessageBrowser: VoidFunctionComponent<\n  KafkaMessageBrowserProps\n> = ({ getMessages }) => {\n  const [state, send] = useMachine(() => MessageBrowserMachine, {\n    devTools: true,\n    services: {\n      api: (context) => {\n        return (send) => {\n          getMessages({\n            partition: context.partition,\n            offset: context.offset,\n            timestamp: context.timestamp,\n            limit: context.limit,\n          })\n            .then(({ messages, partitions }) =>\n              send({\n                type: \"fetchSuccess\",\n                messages,\n                partitions,\n                offsetMin: context.offset || 0,\n                offsetMax: messages.reduce(\n                  (max, m) => Math.max(max, m.offset || 0),\n                  0\n                ),\n              })\n            )\n            .catch(() => send({ type: \"fetchFail\" }));\n        };\n      },\n    },\n  });\n\n  return (\n    <KafkaMessageBrowserConnected\n      isFirstLoad={state.matches(\"initialLoading\")}\n      isNoData={state.matches(\"noData\") || state.matches(\"error\")}\n      isRefreshing={state.matches(\"refreshing\")}\n      requiresSearch={state.hasTag(\"dirty\")}\n      selectedMessage={state.context.selectedMessage}\n      response={state.context.response}\n      lastUpdated={state.context.response?.lastUpdated}\n      partition={state.context.partition}\n      limit={state.context.limit}\n      filterOffset={state.context.offset}\n      filterEpoch={state.context.epoch}\n      filterTimestamp={state.context.timestamp}\n      setPartition={(value: number | undefined) =>\n        send({ type: \"setPartition\", value })\n      }\n      setOffset={(value: number | undefined) =>\n        send({ type: \"setOffset\", value })\n      }\n      setTimestamp={(value: DateIsoString | undefined) =>\n        send({ type: \"setTimestamp\", value })\n      }\n      setEpoch={(value: number | undefined) =>\n        send({ type: \"setEpoch\", value })\n      }\n      setLatest={() => send({ type: \"setLatest\" })}\n      setLimit={(value: number) => send({ type: \"setLimit\", value })}\n      refresh={() => send({ type: \"refresh\" })}\n      selectMessage={(message: Message) =>\n        send({ type: \"selectMessage\", message })\n      }\n      deselectMessage={() => send({ type: \"deselectMessage\" })}\n    />\n  );\n};\n\nexport type KafkaMessageBrowserConnectedProps = {\n  isFirstLoad: boolean;\n  isNoData: boolean;\n  isRefreshing: boolean;\n  requiresSearch: boolean;\n  selectedMessage: Message | undefined;\n  lastUpdated: Date | undefined;\n  response: MessageApiResponse | undefined;\n  partition: number | undefined;\n  limit: number;\n  filterOffset: number | undefined;\n  filterEpoch: number | undefined;\n  filterTimestamp: DateIsoString | undefined;\n  setPartition: (value: number | undefined) => void;\n  setOffset: (value: number | undefined) => void;\n  setTimestamp: (value: DateIsoString | undefined) => void;\n  setEpoch: (value: number | undefined) => void;\n  setLatest: () => void;\n  setLimit: (value: number) => void;\n  refresh: () => void;\n  selectMessage: (message: Message) => void;\n  deselectMessage: () => void;\n};\nexport const KafkaMessageBrowserConnected: VoidFunctionComponent<\n  KafkaMessageBrowserConnectedProps\n> = ({\n  isFirstLoad,\n  isNoData,\n  isRefreshing,\n  requiresSearch,\n  selectedMessage,\n  response,\n  partition,\n  limit,\n  filterOffset,\n  filterEpoch,\n  filterTimestamp,\n  setPartition,\n  setOffset,\n  setTimestamp,\n  setEpoch,\n  setLatest,\n  setLimit,\n  refresh,\n  selectMessage,\n  deselectMessage,\n}) => {\n  const { t } = useTranslation(\"message-browser\");\n  const [defaultTab, setDefaultTab] =\n    useState<MessageDetailsProps[\"defaultTab\"]>(\"value\");\n\n  const columnLabels: { [key in typeof columns[number]]: string } = useMemo(\n    () =>\n      ({\n        partition: t(\"field.partition\"),\n        offset: t(\"field.offset\"),\n        timestamp: t(\"field.timestamp\"),\n        key: t(\"field.key\"),\n        value: t(\"field.value\"),\n        headers: t(\"field.headers\"),\n      } as const),\n    [t]\n  );\n\n  switch (true) {\n    case isFirstLoad:\n      return <Loading />;\n    case isNoData:\n      return <NoDataEmptyState onRefresh={refresh} />;\n    default:\n      return (\n        <PageSection\n          isFilled={true}\n          hasOverflowScroll={true}\n          aria-label={\"TODO\"}\n        >\n          <Drawer isInline={true} isExpanded={selectedMessage !== undefined}>\n            <DrawerContent\n              panelContent={\n                <MessageDetails\n                  message={selectedMessage}\n                  defaultTab={defaultTab}\n                  onClose={deselectMessage}\n                />\n              }\n            >\n              <OuterScrollContainer>\n                <Toolbar\n                  className={\"mas-KafkaMessageBrowser-Toolbar\"}\n                  data-testid={\"message-browser-toolbar\"}\n                >\n                  <ToolbarContent>\n                    <ToolbarToggleGroup\n                      toggleIcon={<FilterIcon />}\n                      breakpoint=\"2xl\"\n                    >\n                      <ToolbarGroup variant=\"filter-group\">\n                        <ToolbarItem>\n                          <PartitionSelector\n                            value={partition}\n                            partitions={response?.partitions || 0}\n                            onChange={setPartition}\n                            isDisabled={isRefreshing}\n                          />\n                        </ToolbarItem>\n                      </ToolbarGroup>\n                      <ToolbarGroup variant=\"filter-group\">\n                        <FilterGroup\n                          isDisabled={isRefreshing}\n                          offset={filterOffset}\n                          epoch={filterEpoch}\n                          timestamp={filterTimestamp}\n                          onOffsetChange={setOffset}\n                          onTimestampChange={setTimestamp}\n                          onEpochChange={setEpoch}\n                          onLatest={setLatest}\n                        />\n                      </ToolbarGroup>\n                      <ToolbarGroup>\n                        <LimitSelector\n                          value={limit}\n                          onChange={setLimit}\n                          isDisabled={isRefreshing}\n                        />\n                      </ToolbarGroup>\n                    </ToolbarToggleGroup>\n                    <ToolbarGroup>\n                      <ToolbarItem>\n                        <Button\n                          variant={\"plain\"}\n                          isDisabled={!requiresSearch || isRefreshing}\n                          aria-label={t(\"common:search_button_label\")}\n                          onClick={refresh}\n                        >\n                          <SearchIcon />\n                        </Button>\n                      </ToolbarItem>\n                      <ToolbarItem>\n                        <RefreshButton\n                          onClick={refresh}\n                          isRefreshing={isRefreshing}\n                          isDisabled={requiresSearch}\n                        />\n                      </ToolbarItem>\n                    </ToolbarGroup>\n                    <ToolbarGroup alignment={{ default: \"alignRight\" }}>\n                      {response?.filter.partition !== undefined &&\n                        response?.messages.length > 0 && (\n                          <OffsetRange\n                            min={response?.offsetMin || 0}\n                            max={response?.offsetMax || 0}\n                          />\n                        )}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n                <InnerScrollContainer>\n                  <ResponsiveTable\n                    ariaLabel={t(\"table_aria_label\")}\n                    columns={columns}\n                    data={response?.messages}\n                    expectedLength={response?.messages?.length}\n                    renderHeader={({ column, Th, key }) => (\n                      <Th key={key}>{columnLabels[column]}</Th>\n                    )}\n                    renderCell={({ column, row, colIndex, Td, key }) => (\n                      <Td\n                        key={key}\n                        dataLabel={columnLabels[column]}\n                        width={columnWidths[colIndex]}\n                      >\n                        {(() => {\n                          const empty = (\n                            <NoDataCell columnLabel={columnLabels[column]} />\n                          );\n                          switch (column) {\n                            case \"partition\":\n                              return row.partition;\n                            case \"offset\":\n                              return row.offset;\n                            case \"timestamp\":\n                              return row.timestamp ? (\n                                <FormatDate\n                                  date={parseISO(row.timestamp)}\n                                  format={\"longWithMilliseconds\"}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"key\":\n                              return row.key ? (\n                                <UnknownValuePreview\n                                  value={row.key}\n                                  truncateAt={40}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"headers\":\n                              return Object.keys(row.headers).length > 0 ? (\n                                <UnknownValuePreview\n                                  value={beautifyUnknownValue(\n                                    JSON.stringify(row.headers)\n                                  )}\n                                  onClick={() => {\n                                    setDefaultTab(\"headers\");\n                                    selectMessage(row);\n                                  }}\n                                />\n                              ) : (\n                                empty\n                              );\n                            case \"value\":\n                              return row.value ? (\n                                <UnknownValuePreview\n                                  value={beautifyUnknownValue(row.value || \"\")}\n                                  onClick={() => {\n                                    setDefaultTab(\"value\");\n                                    selectMessage(row);\n                                  }}\n                                />\n                              ) : (\n                                empty\n                              );\n                          }\n                        })()}\n                      </Td>\n                    )}\n                    isRowSelected={({ row }) =>\n                      selectedMessage !== undefined &&\n                      isSameMessage(row, selectedMessage)\n                    }\n                    onRowClick={({ row }) => {\n                      setDefaultTab(\"value\");\n                      selectMessage(row);\n                    }}\n                  >\n                    <NoResultsEmptyState\n                      onReset={() => {\n                        setLatest();\n                        setPartition(undefined);\n                        refresh();\n                      }}\n                    />\n                  </ResponsiveTable>\n                </InnerScrollContainer>\n              </OuterScrollContainer>\n            </DrawerContent>\n          </Drawer>\n        </PageSection>\n      );\n  }\n};\n","import {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface CapacityTable {\n  name: string;\n  firstStreamingUnit: string;\n  secondStreamingUnit: string;\n}\n\nexport const KafkaInstanceCapacityTable: FunctionComponent = () => {\n  const { t } = useTranslation(\"kafkaoverview-v2\");\n\n  const capacityTable: CapacityTable[] = [\n    {\n      name: \"Ingress (MB/second)\",\n      firstStreamingUnit: \"up to 50\",\n      secondStreamingUnit: \"up to 100\",\n    },\n    {\n      name: \"Egress (MB/second)\",\n      firstStreamingUnit: \"up to 100\",\n      secondStreamingUnit: \"up to 200\",\n    },\n    {\n      name: \"Storage* (GB)\",\n      firstStreamingUnit: \"up to 1000\",\n      secondStreamingUnit: \"up to 2000\",\n    },\n    {\n      name: \"Topic partitions\",\n      firstStreamingUnit: \"up to 1500\",\n      secondStreamingUnit: \"up to 3000\",\n    },\n    {\n      name: \"Client connections\",\n      firstStreamingUnit: \"up to 3000\",\n      secondStreamingUnit: \"up to 6000\",\n    },\n    {\n      name: \"Connection rate (connections/second)\",\n      firstStreamingUnit: \"up to 100\",\n      secondStreamingUnit: \"up to 200\",\n    },\n    {\n      name: \"Message size (MB)\",\n      firstStreamingUnit: \"up to 1\",\n      secondStreamingUnit: \"up to 1\",\n    },\n  ];\n\n  const columnNames = {\n    name: \"\",\n    firstStreamingUnit: t(\"firstStreamingUnit\"),\n    secondStreamingUnit: t(\"secondStreamingUnit\"),\n  };\n\n  return (\n    <TableComposable>\n      <Thead>\n        <Tr>\n          <Th>{columnNames.name}</Th>\n          <Th>{columnNames.firstStreamingUnit}</Th>\n          <Th>{columnNames.secondStreamingUnit}</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {capacityTable.map((table) => {\n          return (\n            <Tr key={table.name}>\n              <Td dataLabel={columnNames.name}>{table.name}</Td>\n              <Td dataLabel={columnNames.firstStreamingUnit}>\n                {table.firstStreamingUnit}\n              </Td>\n              <Td dataLabel={columnNames.secondStreamingUnit}>\n                {table.secondStreamingUnit}\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </TableComposable>\n  );\n};\n","import {\n  Bullseye,\n  Card,\n  PageSection,\n  PageSectionVariants,\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport classNames from \"classnames\";\nimport type {\n  CSSProperties,\n  FunctionComponent,\n  ReactNode,\n  VoidFunctionComponent,\n} from \"react\";\nimport \"./MarketingPage.css\";\n\nexport type MarketingPageHeroProps = {\n  title: string;\n  tagLine: string;\n  description: string;\n  description2?: string;\n  heroImage: string;\n  heroImageSize: number;\n  heroImageCanRepeat?: boolean;\n  heroImagePositionY?: number;\n  cta?: ReactNode;\n  variant?: \"light\" | \"dark\";\n};\n\nexport const MarketingPageHero: VoidFunctionComponent<\n  MarketingPageHeroProps\n> = ({\n  title,\n  tagLine,\n  description,\n  description2,\n  heroImage,\n  heroImageSize,\n  heroImageCanRepeat = true,\n  heroImagePositionY = 0,\n  cta,\n  variant = \"light\",\n}) => {\n  const style = {\n    \"--appsrv-marketing--banner--before--BackgroundImage\": `url(${heroImage})`,\n    \"--appsrv-marketing--banner--before--BackgroundSize\": `${heroImageSize}px`,\n    \"--appsrv-marketing--banner--before--BackgroundRepeat\": heroImageCanRepeat\n      ? \"repeat\"\n      : \"no-repeat\",\n    \"--appsrv-marketing--banner--before--BackgroundPositionY\": `${heroImagePositionY}px`,\n  } as CSSProperties;\n  return (\n    <PageSection\n      className={classNames(\"appsrv-marketing--banner\", {\n        \"pf-u-background-color-dark-100\": variant === \"dark\",\n        \"pf-u-background-color-100\": variant === \"light\",\n      })}\n      variant={\n        variant === \"dark\"\n          ? PageSectionVariants.dark\n          : PageSectionVariants.light\n      }\n      style={style}\n    >\n      <Stack hasGutter>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          {title}\n        </Title>\n        <Text\n          className={`appsrv-marketing--banner__tagline ${\n            variant === \"dark\" ? \"\" : \"pf-u-color-200\"\n          }`}\n        >\n          {tagLine}\n        </Text>\n        <Text component={TextVariants.p}>{description}</Text>\n        {description2 && (\n          <Text component={TextVariants.p} className=\"pf-u-mt-md\">\n            {description2}\n          </Text>\n        )}\n        {cta && <StackItem>{cta}</StackItem>}\n      </Stack>\n    </PageSection>\n  );\n};\n\nexport const MarketingPageBanner: FunctionComponent = ({ children }) => {\n  return (\n    <PageSection\n      variant={PageSectionVariants.light}\n      className=\"appsrv-marketing--page-section--marketing pf-u-background-color-100\"\n    >\n      <Bullseye>\n        <Text\n          component={TextVariants.p}\n          className=\"appsrv-marketing--banner--text-only\"\n        >\n          {children}\n        </Text>\n      </Bullseye>\n    </PageSection>\n  );\n};\n\nexport type MarketingPageSectionProps = {\n  className?: string;\n};\n\nexport const MarketingPageSection: FunctionComponent<\n  MarketingPageSectionProps & {\n    variant?: \"dark\" | \"light\" | \"default\";\n  }\n> = ({\n  className = \"appsrv-marketing--page-section--marketing\",\n  variant = \"default\",\n  children,\n}) => (\n  <PageSection\n    isWidthLimited\n    className={classNames(className, {\n      \"pf-u-background-color-dark-100\": variant === \"dark\",\n      \"pf-u-background-color-100\": variant === \"light\",\n    })}\n    variant={\n      variant === \"dark\"\n        ? PageSectionVariants.dark\n        : variant === \"light\"\n        ? PageSectionVariants.light\n        : PageSectionVariants.default\n    }\n  >\n    {children}\n  </PageSection>\n);\n\nexport const MarketingPageVideoCard: VoidFunctionComponent<{\n  src: string;\n  title: string;\n}> = ({ src, title }) => (\n  <Card className=\"appsrv-marketing--video\">\n    <div className=\"appsrv-marketing--video__wrapper\">\n      <iframe\n        src={src}\n        title={title}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  </Card>\n);\n","import {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Divider,\n  Flex,\n  FlexItem,\n  Grid,\n  Split,\n  SplitItem,\n  Stack,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport {\n  AppSpeedKeyArt,\n  ExternalLink,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { KafkaInstanceCapacityTable } from \"./KafkaInstanceCapacityTable\";\nimport { LogoAWS, LogoAzure, LogoGCP } from \"./Logos/images\";\nimport { MarketingPageHero, MarketingPageSection } from \"./MarketingPage\";\n\nexport const KafkaPageV3: FunctionComponent = () => {\n  const { t } = useTranslation([\"kafkaoverview-v3\"]);\n  return (\n    <>\n      <MarketingPageHero\n        title={t(\"heroTitle\")}\n        tagLine={t(\"heroTagline\")}\n        description={t(\"heroDescription\")}\n        heroImage={AppSpeedKeyArt}\n        heroImageSize={478}\n        heroImageCanRepeat={false}\n        heroImagePositionY={-99}\n      />\n      <MarketingPageSection>\n        <Grid hasGutter lg={6}>\n          <Card\n            ouiaId=\"card-overview-purchase-now\"\n            aria-label={t(\"kafkaoverview:purchaseCardTitle\")}\n          >\n            <CardHeader>\n              <CardHeaderMain>\n                <CardTitle>\n                  <Title headingLevel=\"h2\">\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardTitle\"}\n                    >\n                      <span className=\"pf-u-color-200 pf-u-font-size-sm\"></span>\n                    </Trans>\n                  </Title>\n                </CardTitle>\n              </CardHeaderMain>\n            </CardHeader>\n            <CardBody>{t(\"purchaseCardMainText\")}</CardBody>\n            <CardFooter>\n              <Flex spaceItems={{ default: \"spaceItems2xl\" }}>\n                <FlexItem>\n                  <ExternalLink\n                    href={\n                      \"https://marketplace.redhat.com/en-us/products/red-hat-openshift-streams-for-apache-kafka\"\n                    }\n                    testId={\"cardPurchase-buttonRH\"}\n                    className={\"pf-u-ml-md \"}\n                  >\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardCallToActionButtonRedHat\"}\n                      components={{\n                        bold: <strong />,\n                        size: <span className=\"pf-u-font-size-lg\" />,\n                      }}\n                    />\n                  </ExternalLink>\n                </FlexItem>\n\n                <FlexItem>\n                  <ExternalLink\n                    href={\n                      \"https://aws.amazon.com/marketplace/pp/prodview-3xohcoyuwkumc\"\n                    }\n                    testId={\"cardPurchase-buttonAWS\"}\n                    className={\"pf-u-ml-md\"}\n                  >\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"purchaseCardCallToActionButtonAWS\"}\n                      components={{\n                        bold: <strong />,\n                        size: <span className=\"pf-u-font-size-lg\" />,\n                      }}\n                    />\n                  </ExternalLink>\n                </FlexItem>\n              </Flex>\n            </CardFooter>\n          </Card>\n          <Card\n            ouiaId=\"card-overview-contact-sales\"\n            aria-label={t(\"kafkaoverview:contactSalesCardTitle\")}\n          >\n            <CardHeader>\n              <CardTitle>\n                <Title headingLevel=\"h2\">\n                  <Trans\n                    ns={\"kafkaoverview-v3\"}\n                    i18nKey={\"contactSalesCardTitle\"}\n                  >\n                    <span className=\"pf-u-color-200 pf-u-font-size-sm\"></span>\n                  </Trans>\n                </Title>\n              </CardTitle>\n            </CardHeader>\n            <CardBody>{t(\"contactSalesCardMainText\")}</CardBody>\n            <CardFooter>\n              <ExternalLink\n                href={\n                  \"https://www.redhat.com/en/technologies/cloud-computing/openshift/openshift-streams-for-apache-kafka#contact-us\"\n                }\n                testId={\"cardContactSales-buttonCTA\"}\n                className={\"pf-u-ml-md\"}\n              >\n                <Trans\n                  ns={\"kafkaoverview-v3\"}\n                  i18nKey={\"contactSalesCardCallToActionButton\"}\n                  components={{\n                    bold: <strong />,\n                    size: <span className=\"pf-u-font-size-lg\" />,\n                  }}\n                />\n              </ExternalLink>\n            </CardFooter>\n          </Card>\n        </Grid>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"pricingModalTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Flex spaceItems={{ default: \"spaceItemsXl\" }}>\n              <Flex\n                alignSelf={{ default: \"alignSelfCenter\" }}\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <DescriptionList isHorizontal>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"steamingUnit\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"streamingUnit_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"dataTransfer\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"dataTransfer_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>{t(\"storage\")}</DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {t(\"storage_price\")}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                  </DescriptionList>\n                </FlexItem>\n              </Flex>\n              <Divider isVertical />\n              <FlexItem flex={{ default: \"flex_1\" }}>\n                <TextContent>\n                  <Text component={TextVariants.p}>\n                    <Trans\n                      ns={\"kafkaoverview-v3\"}\n                      i18nKey={\"streamingUnitText\"}\n                      components={{ bold: <strong /> }}\n                    />\n                  </Text>\n                </TextContent>\n              </FlexItem>\n            </Flex>\n          </CardBody>\n        </Card>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"kafkaInstanceCapacityTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Stack hasGutter>\n              <Text component={TextVariants.p}>\n                {t(\"kafkaInstanceCapacityDescription\")}\n              </Text>\n              <KafkaInstanceCapacityTable />\n            </Stack>\n          </CardBody>\n          <CardFooter>\n            <TextContent className={\"pf-u-font-size-sm\"}>\n              <Trans\n                ns={\"kafkaoverview-v3\"}\n                i18nKey={\"kafkaInstanceCapacityfooter\"}\n                components={[\n                  <ExternalLink\n                    href={\"https://access.redhat.com/support\"}\n                    testId={\"SupportLink\"}\n                    className={\"pf-u-ml-xs\"}\n                  />,\n                  <ExternalLink\n                    href={\n                      \"https://access.redhat.com/documentation/en-us/red_hat_openshift_streams_for_apache_kafka/1/guide/aced8e5e-8229-4cb2-82f9-87a8caa24bb3\"\n                    }\n                    testId={\"MonitoringDiskSpaceLink\"}\n                    className={\"pf-u-ml-xs\"}\n                  />,\n                ]}\n              />\n            </TextContent>\n          </CardFooter>\n        </Card>\n      </MarketingPageSection>\n      <MarketingPageSection\n        className={\"kafka-overview--page-section--marketing\"}\n      >\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h2\">{t(\"cloudProvidersTitle\")}</Title>\n          </CardTitle>\n          <CardBody>\n            <Flex\n              spaceItems={{ default: \"spaceItemsXl\" }}\n              direction={{ default: \"column\", xl: \"row\" }}\n            >\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img src={LogoAWS} alt={\"\"} style={{ height: \"60px\" }} />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"awsWebServiceTitle\")}\n                      </Title>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n              <Divider\n                orientation={{ default: \"horizontal\", xl: \"vertical\" }}\n              />\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img src={LogoGCP} alt={\"\"} style={{ height: \"60px\" }} />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"googleCloudProviderTitle\")}\n                      </Title>\n                      <Text\n                        component={TextVariants.p}\n                        className={\"pf-u-color-200\"}\n                      >\n                        {t(\"googleCloudProviderDescription\")}\n                      </Text>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n              <Divider\n                orientation={{ default: \"horizontal\", xl: \"vertical\" }}\n              />\n              <Flex\n                justifyContent={{ default: \"justifyContentCenter\" }}\n                flex={{ default: \"flex_1\" }}\n              >\n                <FlexItem>\n                  <Split hasGutter>\n                    <SplitItem>\n                      <img\n                        src={LogoAzure}\n                        alt={\"\"}\n                        style={{ height: \"60px\" }}\n                      />\n                    </SplitItem>\n                    <SplitItem>\n                      <Title headingLevel=\"h2\" className={\"pf-u-pt-sm\"}>\n                        {t(\"microsoftAzureTitle\")}\n                      </Title>\n                      <Text\n                        component={TextVariants.p}\n                        className={\"pf-u-color-200\"}\n                      >\n                        {t(\"microsoftAzureDescription\")}\n                      </Text>\n                    </SplitItem>\n                  </Split>\n                </FlexItem>\n              </Flex>\n            </Flex>\n          </CardBody>\n        </Card>\n      </MarketingPageSection>\n    </>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type EmptyStateNoTopicProps = {\n  onCreateTopic: () => void;\n};\n\nexport const EmptyStateNoTopic: VoidFunctionComponent<\n  EmptyStateNoTopicProps\n> = ({ onCreateTopic }) => {\n  const { t } = useTranslation(\"topic\");\n\n  return (\n    <EmptyState\n      data-ouia-page-id=\"emptyStateTopics\"\n      variant={EmptyStateVariant.large}\n    >\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"empty_topics_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"empty_topics_body\")}</EmptyStateBody>\n      <Button\n        data-testid=\"actionCreateTopic\"\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={onCreateTopic}\n      >\n        {t(\"create_topic\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import type { ResourceOperationValue } from \"./components/ResourceOperation\";\nimport type { ResourcePermissionValue } from \"./components/ResourcePermission\";\nimport type { ResourcePrefixRuleValue } from \"./components/ResourcePrefixRule\";\nimport type { ResourceTypeValue } from \"./components/ResourceType\";\n\nexport type AclOperation =\n  | \"ALL\"\n  | \"READ\"\n  | \"WRITE\"\n  | \"CREATE\"\n  | \"DELETE\"\n  | \"ALTER\"\n  | \"DESCRIBE\"\n  | \"DESCRIBE_CONFIGS\"\n  | \"ALTER_CONFIGS\";\n\nexport type AclResourceType =\n  | \"GROUP\"\n  | \"TOPIC\"\n  | \"CLUSTER\"\n  | \"TRANSACTIONAL_ID\";\n\nexport type AclPatternType = \"LITERAL\" | \"PREFIXED\";\n\nexport type AclPermissionType = \"ALLOW\" | \"DENY\";\n\nexport interface AclBinding {\n  /**\n   *\n   * @type {AclResourceType}\n   * @memberof AclBinding\n   */\n  resourceType: AclResourceType;\n  /**\n   *\n   * @type {string}\n   * @memberof AclBinding\n   */\n  resourceName: string;\n  /**\n   *\n   * @type {AclPatternType}\n   * @memberof AclBinding\n   */\n  patternType: AclPatternType;\n  /**\n   * Identifies the user or service account to which an ACL entry is bound. The literal prefix value of `User:` is required. May be used to specify all users with value `User:*`.\n   * @type {string}\n   * @memberof AclBinding\n   */\n  principal: string;\n  /**\n   *\n   * @type {AclOperation}\n   * @memberof AclBinding\n   */\n  operation: AclOperation;\n  /**\n   *\n   * @type {AclPermissionType}\n   * @memberof AclBinding\n   */\n  permission: AclPermissionType;\n}\nexport type AclTablePermissionsType = {\n  permission: AclPermissionType;\n  operation: AclOperation;\n};\nexport type AclTableResourceType = {\n  resourceType: AclResourceType;\n  resourceName: string;\n  patternType: AclPatternType;\n};\nexport type Permissions = {\n  account: string;\n  permission: AclTablePermissionsType;\n  resource: AclTableResourceType;\n};\nexport enum PrincipalType {\n  UserAccount = \"USER_ACCOUNT\",\n  ServiceAccount = \"SERVICE_ACCOUNT\",\n}\n\nexport type Account = {\n  id: string;\n  principalType: PrincipalType;\n  displayName: string;\n  email?: string;\n};\n\ntype ManualAcl = {\n  resourceType: ResourceTypeValue | undefined;\n  resourcePrefix: ResourcePrefixRuleValue;\n  resourceName: string | undefined;\n  resourcePermission: ResourcePermissionValue;\n  resourceOperation: ResourceOperationValue | undefined;\n};\n\ntype ProduceTopicTemplate = {\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n};\n\ntype ConsumeTopicTemplate = {\n  consumerResourceName: string | undefined;\n  consumerResourcePrefixRule: ResourcePrefixRuleValue;\n  topicResourceName: string | undefined;\n  topicResourcePrefixRule: ResourcePrefixRuleValue;\n};\n\ntype ManageAccessTemplate = {\n  instanceName: string;\n};\nexport type AddAclType =\n  | ({ type: \"manual\" } & ManualAcl)\n  | ({ type: \"consume-topic\" } & ConsumeTopicTemplate)\n  | ({ type: \"produce-topic\" } & ProduceTopicTemplate)\n  | ({ type: \"manage-access\" } & ManageAccessTemplate);\n\nexport const createEmptyManualAcl = (): AddAclType => {\n  return {\n    type: \"manual\",\n    resourceName: undefined,\n    resourceType: undefined,\n    resourceOperation: undefined,\n    resourcePrefix: \"Is\",\n    resourcePermission: \"allow\",\n  };\n};\nexport const createEmptyProduceTopicAcl = (): AddAclType => {\n  return {\n    type: \"produce-topic\",\n    prefixRuleValue: \"Is\",\n    resourceNameValue: undefined,\n  };\n};\nexport const createEmptyConsumeTopicAcl = (): AddAclType => {\n  return {\n    type: \"consume-topic\",\n    consumerResourceName: undefined,\n    consumerResourcePrefixRule: \"Is\",\n    topicResourceName: undefined,\n    topicResourcePrefixRule: \"Is\",\n  };\n};\nexport const createEmptyManageAccessAcl = (kafkaName: string): AddAclType => {\n  return {\n    type: \"manage-access\",\n    instanceName: kafkaName,\n  };\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport {\n  EmptyStateNoResults,\n  TableView,\n} from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport type { Topic, TopicField } from \"ui-models/src/models/topic\";\nimport { useTopicLabels } from \"../../hooks\";\nimport type { EmptyStateNoTopicProps } from \"./components\";\nimport { EmptyStateNoTopic } from \"./components\";\nimport { formattedRetentionSize, formattedRetentionTime } from \"./types\";\n\ntype SubUnion<T, U extends T> = U;\n\nconst Columns: SubUnion<\n  TopicField,\n  \"name\" | \"partitions\" | \"retention.ms\" | \"retention.bytes\"\n>[] = [\"name\", \"partitions\", \"retention.ms\", \"retention.bytes\"];\n\nexport type KafkaTopicsProps<T extends Topic> = {\n  topics: Array<T> | undefined;\n  getUrlFortopic: (row: T) => string;\n  onDelete: (row: T) => void;\n  onEdit: (row: T) => void;\n  topicName: string[];\n  onSearchTopic: (value: string) => void;\n  onRemoveTopicChip: (value: string) => void;\n  onRemoveTopicChips: () => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"isColumnSortable\"\n  | \"onClearAllFilters\"\n> &\n  EmptyStateNoTopicProps;\n\nexport const KafkaTopics = <T extends Topic>({\n  topics,\n  onDelete,\n  onEdit,\n  isColumnSortable,\n  itemCount,\n  onSearchTopic,\n  topicName,\n  onClearAllFilters,\n  onCreateTopic,\n  page,\n  perPage,\n  onPageChange,\n  onRemoveTopicChip,\n  onRemoveTopicChips,\n  getUrlFortopic,\n}: KafkaTopicsProps<T>) => {\n  const { t } = useTranslation(\"topic\");\n\n  const labels = useTopicLabels();\n\n  const isFiltered = topicName.length > 0;\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"topic_list_table\")}\n        data={topics}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels.fields[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels.fields[column]}>\n              {(() => {\n                switch (column) {\n                  case \"name\":\n                    return (\n                      <Link\n                        to={getUrlFortopic(row)}\n                        data-testid=\"tableTopics-linkTopic\"\n                        data-ouia-component-id=\"table-link\"\n                      >\n                        {row.name}\n                      </Link>\n                    );\n                  case \"partitions\":\n                    return row.partitions.length;\n                  case \"retention.ms\":\n                    return formattedRetentionTime(row[\"retention.ms\"].value);\n                  case \"retention.bytes\":\n                    return formattedRetentionSize(row[\"retention.bytes\"].value);\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ row, ActionsColumn }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"table.actions.edit\"),\n                onClick: () => onEdit(row),\n              },\n              {\n                title: t(\"table.actions.delete\"),\n                onClick: () => onDelete(row),\n              },\n            ]}\n          />\n        )}\n        isColumnSortable={isColumnSortable}\n        filters={{\n          [labels.fields.name]: {\n            type: \"search\",\n            chips: topicName,\n            onSearch: onSearchTopic,\n            onRemoveChip: onRemoveTopicChip,\n            onRemoveGroup: onRemoveTopicChips,\n            validate: (value: string) => !/[\"$^<>|+%/;:,\\s*=~#()]/.test(value),\n            errorMessage: t(\"input_field_invalid_message\"),\n          },\n        }}\n        actions={[\n          {\n            label: t(\"create_topic\"),\n            onClick: onCreateTopic,\n            isPrimary: true,\n          },\n        ]}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        isFiltered={isFiltered}\n        onClearAllFilters={onClearAllFilters}\n        emptyStateNoData={<EmptyStateNoTopic onCreateTopic={onCreateTopic} />}\n        emptyStateNoResults={<EmptyStateNoResults />}\n      />\n    </PageSection>\n  );\n};\n","import type { CardKafkaInstanceMetricsLimits } from \"./components\";\n\nexport type TimeSeriesMetrics = { [timestamp: string]: number };\nexport type PartitionBytesMetric = {\n  [partition: string]: TimeSeriesMetrics;\n};\nexport type BrokerBytesMetric = {\n  [broker: \"total\" | string]: TimeSeriesMetrics;\n};\n\nexport enum DurationOptions {\n  Last5minutes = 5,\n  Last15minutes = 15,\n  Last30minutes = 30,\n  Last1hour = 60,\n  Last3hours = 3 * 60,\n  Last6hours = 6 * 60,\n  Last12hours = 12 * 60,\n  Last24hours = 24 * 60,\n  Last2days = 2 * 24 * 60,\n  Last7days = 7 * 24 * 60,\n}\n\nexport type GetTopicsMetricsResponse = {\n  kafkaTopics: string[];\n  metricsTopics: string[];\n  bytesOutgoing: TimeSeriesMetrics;\n  bytesIncoming: TimeSeriesMetrics;\n  bytesPerPartition: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n};\n\nexport type GetKafkaInstanceMetricsResponse = {\n  brokers: string[];\n  usedDiskSpaceMetrics: BrokerBytesMetric;\n  bytesPerPartitionMetrics: PartitionBytesMetric;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n} & CardKafkaInstanceMetricsLimits;\n\nexport type GetMetricsKpiResponse = {\n  topics: number;\n  topicPartitions: number;\n  consumerGroups: number;\n  topicPartitionsLimit: number;\n};\n\nexport type BrokerFilter = \"total\" | \"perBroker\";\n\nexport type PartitionSelect = \"Top10\" | \"Top20\";\n","import type { MenuProps } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  Dropdown,\n  DropdownToggle,\n  DropdownToggleAction,\n  Menu,\n  MenuContent,\n  MenuGroup,\n  MenuItem,\n  MenuList,\n  Popper,\n} from \"@patternfly/react-core\";\nimport type {\n  MouseEvent as ReactMouseEvent,\n  VoidFunctionComponent,\n} from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type PermissionsDropdownProps = {\n  onAddPermission: () => void;\n  onShortcutConsumeTopic: () => void;\n  onShortcutProduceTopic: () => void;\n  onShortcutManageAccess: () => void;\n};\n\nexport const PermissionsDropdown: VoidFunctionComponent<\n  PermissionsDropdownProps\n> = ({\n  onAddPermission,\n  onShortcutConsumeTopic,\n  onShortcutProduceTopic,\n  onShortcutManageAccess,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  const [isOpen, setIsOpen] = useState(false);\n  useState<string | number | undefined>(0);\n\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const handleMenuKeys = useCallback(\n    (event: KeyboardEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        event.target &&\n        menuRef.current.contains(event.target as Node)\n      ) {\n        if (event.key === \"Escape\" || event.key === \"Tab\") {\n          setIsOpen(!isOpen);\n        }\n      }\n    },\n    [isOpen]\n  );\n\n  const handleClickOutside = useCallback(\n    (event: MouseEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        !menuRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleMenuKeys);\n    window.addEventListener(\"click\", handleClickOutside);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleMenuKeys);\n      window.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, [handleClickOutside, handleMenuKeys, isOpen, menuRef]);\n\n  const onToggleClick = useCallback((open: boolean, ev: ReactMouseEvent) => {\n    ev.stopPropagation(); // Stop handleClickOutside from handling\n    setTimeout(() => {\n      if (menuRef.current) {\n        const firstElement = menuRef.current.querySelector(\n          \"li > button,input:not(:disabled)\"\n        );\n        firstElement && (firstElement as HTMLElement).focus();\n      }\n    }, 0);\n    setIsOpen(open);\n  }, []);\n\n  const handleSelect: MenuProps[\"onSelect\"] = (_event, itemId) => {\n    setIsOpen(false);\n    switch (itemId) {\n      case \"add_permission\":\n        onAddPermission();\n        break;\n      case \"shortcut_consume_topic\":\n        onShortcutConsumeTopic();\n        break;\n      case \"shortcut_produce_topic\":\n        onShortcutProduceTopic();\n        break;\n      case \"shortcut_manage_access\":\n        onShortcutManageAccess();\n        break;\n    }\n  };\n\n  const onActionClick = (\n    event: ReactMouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    onAddPermission();\n  };\n\n  const menu = (\n    <Menu onSelect={handleSelect} key=\"acls-menu\" ref={menuRef}>\n      <MenuContent>\n        <MenuList>\n          <MenuGroup>\n            <MenuList>\n              <MenuItem itemId={\"add_permission\"}>\n                {t(\"permissions_dropdown.add_permission\")}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n\n          <Divider />\n          <MenuGroup label={t(\"permissions_dropdown.task_based_permission\")}>\n            <MenuList>\n              <MenuItem\n                itemId={\"shortcut_consume_topic\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_consume_topic_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_consume_topic\")}\n              </MenuItem>\n              <MenuItem\n                itemId={\"shortcut_produce_topic\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_produce_topic_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_produce_topic\")}\n              </MenuItem>\n              <MenuItem\n                itemId={\"shortcut_manage_access\"}\n                description={t(\n                  \"permissions_dropdown.shortcut_manage_access_description\"\n                )}\n              >\n                {t(\"permissions_dropdown.shortcut_manage_access\")}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n        </MenuList>\n      </MenuContent>\n    </Menu>\n  );\n\n  const toggle = (\n    <Dropdown\n      toggle={\n        <DropdownToggle\n          data-testid={\"permissions-dropdown-toggle\"}\n          splitButtonItems={[\n            <DropdownToggleAction\n              key=\"cog-action\"\n              aria-label={t(\"permissions_dropdown.add_permission\")}\n              onClick={onActionClick}\n            >\n              {t(\"permissions_dropdown.add_permission\")}\n            </DropdownToggleAction>,\n          ]}\n          splitButtonVariant=\"action\"\n          onToggle={onToggleClick}\n        />\n      }\n    />\n  );\n\n  return (\n    <Popper\n      trigger={toggle}\n      popper={menu}\n      isVisible={isOpen}\n      popperMatchesTriggerWidth={false}\n    />\n  );\n};\n","import type { VFC } from \"react\";\nimport type { LabelProps } from \"@patternfly/react-core\";\nimport { Label } from \"@patternfly/react-core\";\nimport type { AclResourceType } from \"../types\";\nimport \"./ResourceTypeLabel.css\";\n\nexport type SolidLabelProps = {\n  variant: AclResourceType;\n};\n\ntype Variant = {\n  labelColor: LabelProps[\"color\"];\n  content: string;\n};\n\nexport const ResourceTypeLabel: VFC<SolidLabelProps> = ({ variant }) => {\n  const getVariant = (): Variant => {\n    switch (variant) {\n      case \"GROUP\":\n        return { labelColor: \"green\", content: \"G\" };\n      case \"CLUSTER\":\n        return { labelColor: \"grey\", content: \"KI\" };\n      case \"TOPIC\":\n        return { labelColor: \"blue\", content: \"T\" };\n      case \"TRANSACTIONAL_ID\":\n        return { labelColor: \"orange\", content: \"TI\" };\n    }\n  };\n\n  const { labelColor, content } = getVariant() || {};\n\n  return (\n    <Label isCompact color={labelColor} className={`mas-m-solid`}>\n      {content}\n    </Label>\n  );\n};\n","import type { FunctionComponent, VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Label, LabelGroup, Tooltip } from \"@patternfly/react-core\";\n\nimport type {\n  Account,\n  AclOperation,\n  AclPatternType,\n  AclPermissionType,\n  AclResourceType,\n} from \"../types\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { InfoCircleIcon } from \"@patternfly/react-icons\";\nimport { PrincipalType } from \"..\";\n\nexport const DisplayResourceName: VFC<{ resourceType: AclResourceType }> = ({\n  resourceType,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  switch (resourceType) {\n    case \"GROUP\":\n      return t(\"resourceTypes.consumer_group\");\n    case \"TOPIC\":\n      return t(\"resourceTypes.topic\");\n    case \"CLUSTER\":\n      return t(\"resourceTypes.kafka_instance\");\n    case \"TRANSACTIONAL_ID\":\n      return t(\"resourceTypes.transactional_id\");\n  }\n};\n\nconst PatternType: VFC<{ patternType: AclPatternType }> = ({ patternType }) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  if (patternType === \"PREFIXED\") {\n    return t(\"pattern_type_prefixed\");\n  } else {\n    return t(\"pattern_type_literal\");\n  }\n};\n\nexport type ResourceCellProps = {\n  resourceType: AclResourceType;\n  patternType: AclPatternType;\n  resourceName: string;\n};\n\nexport const ResourceCell: FunctionComponent<ResourceCellProps> = ({\n  resourceType,\n  patternType,\n  resourceName,\n}) => {\n  if (resourceType === \"CLUSTER\") {\n    return (\n      <>\n        <ResourceTypeLabel variant={resourceType} />{\" \"}\n        <DisplayResourceName resourceType={resourceType} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ResourceTypeLabel variant={resourceType} />{\" \"}\n      <DisplayResourceName resourceType={resourceType} />{\" \"}\n      <PatternType patternType={patternType} /> \"{resourceName}\"\n    </>\n  );\n};\n\nexport type PermissionOperationCellProps = {\n  permission: AclPermissionType;\n  operation: AclOperation | AclOperation[];\n};\n\nexport const PermissionOperationCell: FunctionComponent<\n  PermissionOperationCellProps\n> = ({ permission, operation }) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const permissions: { [key in AclPermissionType]: string } = {\n    ALLOW: t(\"permissions.allow\"),\n    DENY: t(\"permissions.deny\"),\n  };\n  const operations: { [key in AclOperation]: string } = {\n    ALL: t(\"operations.all\"),\n    READ: t(\"operations.read\"),\n    WRITE: t(\"operations.write\"),\n    CREATE: t(\"operations.create\"),\n    DELETE: t(\"operations.delete\"),\n    ALTER: t(\"operations.alter\"),\n    DESCRIBE: t(\"operations.describe\"),\n    DESCRIBE_CONFIGS: t(\"operations.describe_configs\"),\n    ALTER_CONFIGS: t(\"operations.alter_configs\"),\n  };\n  return (\n    <LabelGroup numLabels={4}>\n      {permission && (\n        <Label\n          variant=\"outline\"\n          color={permission === \"DENY\" ? \"red\" : undefined}\n        >\n          {permissions[permission]}\n        </Label>\n      )}\n      {Array.isArray(operation) ? (\n        operation.map((value, key) => (\n          <Label key={key} variant=\"outline\">\n            {operations[value]}\n          </Label>\n        ))\n      ) : (\n        <Label variant=\"outline\">{operations[operation]}</Label>\n      )}\n    </LabelGroup>\n  );\n};\n\nexport type PrincipalCellProps = {\n  isDeleteEnabled: boolean;\n  isAllAccounts?: boolean;\n  onRemoveAcl?: () => void;\n  isReviewTable?: boolean;\n  principal?: string;\n  allAccounts?: Account;\n};\n\nexport const PrincipalCell: VFC<PrincipalCellProps> = ({\n  isDeleteEnabled,\n  isAllAccounts,\n  onRemoveAcl,\n  isReviewTable = true,\n  principal,\n  allAccounts,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  const principalWithTooltip = () => {\n    return allAccounts?.principalType == PrincipalType.ServiceAccount &&\n      !isReviewTable ? (\n      <Tooltip\n        content={\n          <div>\n            Type: {allAccounts && allAccounts.principalType} <br />\n          </div>\n        }\n      >\n        <span tabIndex={0}>\n          {\" \"}\n          {principal?.split(\":\")[1]} <InfoCircleIcon color=\"grey\" />\n        </span>\n      </Tooltip>\n    ) : (\n      !isReviewTable && (\n        <Tooltip\n          content={\n            <div>\n              Type: {allAccounts?.principalType} <br />\n              Name: {allAccounts?.displayName} <br />\n              Email: {allAccounts?.email}\n            </div>\n          }\n        >\n          <span tabIndex={0}>\n            {principal?.split(\":\")[1]} <InfoCircleIcon color=\"grey\" />\n          </span>\n        </Tooltip>\n      )\n    );\n  };\n\n  return (\n    <div\n      className={\n        isReviewTable\n          ? \"pf-u-display-flex pf-u-justify-content-space-between pf-u-justify-content-flex-end-on-lg pf-u-align-items-center\"\n          : \"\"\n      }\n    >\n      {isAllAccounts && isReviewTable ? (\n        <Label variant=\"outline\">{t(\"table.all_accounts\")}</Label>\n      ) : !isReviewTable && principal == \"User:*\" ? (\n        <Label variant={\"outline\"}>{t(\"table.all_accounts\")}</Label>\n      ) : (\n        principalWithTooltip()\n      )}\n\n      {isDeleteEnabled && onRemoveAcl != undefined && (\n        <RemoveButton\n          variant=\"link\"\n          tooltip={t(\"remove_permission_tooltip\")}\n          onClick={onRemoveAcl}\n          ariaLabel={t(\"operations.delete\")}\n        />\n      )}\n    </div>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type PermissionsTableEmptyStateProps = {\n  openManagePermissions: () => void;\n};\nexport const PermissionsTableEmptyState: React.FunctionComponent<\n  PermissionsTableEmptyStateProps\n> = ({ openManagePermissions }) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  return (\n    <EmptyState\n      data-ouia-page-id=\"emptyStateTopics\"\n      variant={EmptyStateVariant.large}\n    >\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        {t(\"no_results_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"no_results_body\")}</EmptyStateBody>\n      <Button\n        data-testid=\"actionManagePermissions\"\n        ouiaId=\"button-manage-permissions\"\n        variant=\"primary\"\n        onClick={openManagePermissions}\n      >\n        {t(\"dialog_title\")}\n      </Button>\n    </EmptyState>\n  );\n};\n","import { TableVariant } from \"@patternfly/react-table\";\nimport type { TableViewProps } from \"@rhoas/app-services-ui-components\";\nimport { TableView } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Account, Permissions } from \"../types\";\nimport { PrincipalCell, PermissionOperationCell, ResourceCell } from \"./Cells\";\nimport { useEffect, useState } from \"react\";\nimport { PageSection } from \"@patternfly/react-core\";\nimport { PermissionsTableEmptyState } from \"./EmptyPermissionsTable\";\n\ntype SubUnion<T, U extends T> = U;\nexport type PermissionsField = keyof Permissions;\nconst Columns: SubUnion<\n  PermissionsField,\n  \"account\" | \"permission\" | \"resource\"\n>[] = [\"account\", \"permission\", \"resource\"];\n\nexport type PermissionsTableProps<T extends Permissions> = {\n  allAccounts: Account[] | undefined;\n  permissions: Array<T> | undefined;\n  onDelete: (rowIndex: number) => void;\n  onDeleteSelected: (rowIndex: number[]) => void;\n  onManagePermissions: () => void;\n  onManagePermissionsActionItem: (account: string) => void;\n  onPerPageChange: (page: number, perPage: number) => void;\n} & Pick<\n  TableViewProps<T, (typeof Columns)[number]>,\n  | \"itemCount\"\n  | \"page\"\n  | \"perPage\"\n  | \"onPageChange\"\n  | \"isRowSelected\"\n  | \"onClearAllFilters\"\n>;\n\nexport const PermissionsTable = <T extends Permissions>({\n  allAccounts,\n  permissions,\n  onDelete,\n  itemCount,\n  page,\n  perPage,\n  onDeleteSelected,\n  onPageChange,\n  onManagePermissions,\n  onManagePermissionsActionItem,\n}: PermissionsTableProps<T>) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const [checkedRows, setCheckedRows] = useState<number[]>([]);\n\n  useEffect(() => {\n    //Only clear all the checked row when they are deleted\n    setCheckedRows([]);\n  }, [permissions]);\n\n  const labels: { [field in (typeof Columns)[number]]: string } = {\n    account: t(\"account_id_title\"),\n    permission: t(\"table.permissions_column_title\"),\n    resource: t(\"table.resource_column_title\"),\n  };\n  const onCheck = (isSelecting: boolean, rowIndex: number) => {\n    if (rowIndex != undefined) {\n      setCheckedRows(\n        isSelecting\n          ? [...checkedRows, rowIndex]\n          : checkedRows.filter((row) => row !== rowIndex)\n      );\n    }\n  };\n\n  const isRowChecked = (rowIndex: number) => {\n    return checkedRows.includes(rowIndex);\n  };\n\n  const onBulkDelete = () => {\n    onDeleteSelected(checkedRows);\n  };\n\n  return (\n    <PageSection hasOverflowScroll={true}>\n      <TableView\n        variant={TableVariant.compact}\n        tableOuiaId={\"card-table\"}\n        ariaLabel={t(\"consumerGroup.consumer_group_list\")}\n        actions={[\n          {\n            onClick: onManagePermissions,\n            label: t(\"dialog_title\"),\n            isPrimary: true,\n          },\n        ]}\n        kebabActions={[\n          {\n            onClick: onBulkDelete,\n            label: t(\"delete_selected\"),\n            isDisabled: checkedRows.length > 0 ? false : true,\n          },\n        ]}\n        data={permissions}\n        columns={Columns}\n        onCheck={onCheck}\n        isRowChecked={({ rowIndex }) => isRowChecked(rowIndex)}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => {\n          return (\n            <Td key={key} dataLabel={labels[column]}>\n              {(() => {\n                switch (column) {\n                  case \"account\":\n                    return (\n                      <PrincipalCell\n                        isReviewTable={false}\n                        principal={row.account}\n                        isDeleteEnabled={false}\n                        allAccounts={\n                          allAccounts?.filter(\n                            (value) => `User:${value.id}` == row.account\n                          )[0]\n                        }\n                      />\n                    );\n                  case \"permission\":\n                    return (\n                      <PermissionOperationCell\n                        permission={row.permission.permission}\n                        operation={row.permission.operation}\n                      />\n                    );\n                  case \"resource\":\n                    return (\n                      <ResourceCell\n                        patternType={row.resource.patternType}\n                        resourceType={row.resource.resourceType}\n                        resourceName={row.resource.resourceName}\n                      />\n                    );\n                }\n              })()}\n            </Td>\n          );\n        }}\n        renderActions={({ ActionsColumn, rowIndex, row }) => (\n          <ActionsColumn\n            items={[\n              {\n                title: t(\"manage\"),\n                onClick: () =>\n                  onManagePermissionsActionItem(\n                    row.account == \"User:*\"\n                      ? \"all-accounts\"\n                      : row.account?.split(\":\")[1]\n                  ),\n              },\n              {\n                title: t(\"common:delete\"),\n                onClick: () => onDelete(rowIndex),\n              },\n            ]}\n          />\n        )}\n        itemCount={itemCount}\n        page={page}\n        onPageChange={onPageChange}\n        perPage={perPage}\n        emptyStateNoData={\n          <PermissionsTableEmptyState\n            openManagePermissions={onManagePermissions}\n          />\n        }\n        emptyStateNoResults={\n          <PermissionsTableEmptyState\n            openManagePermissions={onManagePermissions}\n          />\n        }\n      />\n    </PageSection>\n  );\n};\n","import type React from \"react\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { Account } from \"../types\";\nimport { PrincipalType } from \"../types\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { Button, Form, Modal } from \"@patternfly/react-core\";\nimport { Skeleton } from \"@patternfly/react-core\";\nimport { FormGroup, Popover } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\n\nexport type SelectAccountProps = {\n  accounts: Account[] | undefined;\n  initialOpen?: boolean;\n  kafkaName: string;\n  id?: string;\n  onNext: (selectedAccount: string | undefined) => void;\n  onClose: () => void;\n};\n\nexport const SelectAccount: React.VFC<SelectAccountProps> = ({\n  accounts,\n  initialOpen = false,\n  kafkaName,\n  id,\n  onNext,\n  onClose,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [isDirty, setIsDirty] = useState<boolean>(false);\n  const [selectedAccount, setSelectedAccount] = useState<string>();\n\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const onToggle = (newState: boolean) => {\n    setIsOpen(newState);\n  };\n\n  const clearSelection = () => {\n    setSelectedAccount(undefined);\n    setIsDirty(true);\n    setIsOpen(false);\n  };\n\n  const noServiceAccounts = [\n    <SelectOption\n      isNoResultsOption={true}\n      isDisabled={true}\n      key={t(\"no_results_found\")}\n    >\n      {t(\"no_results_found\")}\n    </SelectOption>,\n  ];\n  const noUserAccounts = [\n    <SelectOption\n      isNoResultsOption={true}\n      isDisabled={true}\n      key={\"no_user_accounts\"}\n    >\n      {t(\"no_results_found\")}\n    </SelectOption>,\n  ];\n\n  function makeOptions(filterValue = \"\") {\n    const filter = filterValue.toLowerCase();\n    const filteredAccounts =\n      filter !== \"\"\n        ? accounts?.filter(\n            (principal) =>\n              principal.displayName.toLowerCase().includes(filter) ||\n              principal.id.includes(filter)\n          )\n        : accounts;\n\n    const serviceAccountOptions = filteredAccounts\n      ?.filter(\n        (principal) => principal.principalType === PrincipalType.ServiceAccount\n      )\n      .sort((a, b) =>\n        a.displayName && b.displayName\n          ? a.displayName.localeCompare(b.displayName)\n          : -1\n      )\n      .map((principal, index) => (\n        <SelectOption\n          key={index}\n          value={principal.id}\n          description={principal.displayName}\n        >\n          {principal.id}\n        </SelectOption>\n      ));\n\n    const userAccountOperations = filteredAccounts\n      ?.filter(\n        (principal) => principal.principalType === PrincipalType.UserAccount\n      )\n      .map((principal, index) => (\n        <SelectOption\n          key={index}\n          value={principal.id}\n          description={principal.displayName}\n        >\n          {principal.id}\n        </SelectOption>\n      ));\n\n    return [\n      <SelectGroup key=\"all_accounts_group\">\n        <SelectOption\n          key={t(\"all_accounts_title\")}\n          value={t(\"all_accounts_title\")}\n          description={t(\"all_accounts_description\")}\n        >\n          {t(\"all_accounts_title\")}\n        </SelectOption>\n      </SelectGroup>,\n\n      <Divider key=\"all_accounts_divider\" />,\n      <SelectGroup\n        label={t(\"all_accounts_service_account_group\")}\n        key=\"service_accounts_group\"\n      >\n        {serviceAccountOptions?.length\n          ? serviceAccountOptions\n          : noServiceAccounts}\n      </SelectGroup>,\n      <Divider key=\"user_account_divider2\" />,\n      <SelectGroup\n        label={t(\"all_accounts_user_account_group\")}\n        key=\"user_accounts_group\"\n      >\n        {userAccountOperations?.length ? userAccountOperations : noUserAccounts}\n      </SelectGroup>,\n    ];\n  }\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, value) => {\n    setSelectedAccount(value as string);\n    setIsDirty(false);\n    setIsOpen(false);\n  };\n\n  const validated: ValidatedOptions = isDirty\n    ? ValidatedOptions.error\n    : ValidatedOptions.default;\n\n  return (\n    <Modal\n      id=\"manage-permissions-modal\"\n      variant={\"large\"}\n      isOpen={true}\n      aria-label={t(\"dialog_aria_label\")}\n      position=\"top\"\n      title={t(\"dialog_title\")}\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={onClose}\n      onEscapePress={onClose}\n      appendTo={() =>\n        id ? document.getElementById(id) || document.body : document.body\n      }\n      actions={[\n        <Button\n          key={1}\n          variant=\"primary\"\n          isDisabled={\n            selectedAccount == \"\" || selectedAccount == undefined ? true : false\n          }\n          onClick={() => onNext(selectedAccount)}\n          aria-label={t(\"step_1_submit_button\")}\n        >\n          {t(\"step_1_submit_button\")}\n        </Button>,\n        <Button\n          onClick={onClose}\n          key={2}\n          variant=\"secondary\"\n          aria-label={t(\"common:cancel\")}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <FormGroup\n          fieldId=\"kafka-instance-name\"\n          label={t(\"kafka_instance\")}\n          id=\"modal-message\"\n        >\n          {kafkaName}\n        </FormGroup>\n\n        <FormGroup\n          fieldId=\"account-name\"\n          validated={validated}\n          helperTextInvalid={t(\"common:required\")}\n          isRequired\n          label={t(\"account_id_title\")}\n          labelIcon={\n            <Popover bodyContent={t(\"account_id_help\")}>\n              <button\n                type=\"button\"\n                onClick={(e) => e.preventDefault()}\n                className=\"pf-c-form__group-label-help\"\n                aria-label={t(\"account_help\")}\n              >\n                <HelpIcon noVerticalAlign />\n              </button>\n            </Popover>\n          }\n        >\n          {accounts ? (\n            <Select\n              id={\"account-id\"}\n              data-testid=\"acls-select-account\"\n              className=\"kafka-ui--select--limit-height\"\n              variant={SelectVariant.typeahead}\n              typeAheadAriaLabel={t(\"account_id_title\")}\n              maxHeight={400}\n              onToggle={onToggle}\n              onSelect={onSelect}\n              onClear={clearSelection}\n              selections={selectedAccount}\n              onFilter={(_, value) => makeOptions(value)}\n              isOpen={isOpen}\n              placeholderText={t(\"account_id_typeahead_placeholder\")}\n              isCreatable\n              menuAppendTo=\"parent\"\n              validated={validated}\n              createText={t(\"resourcePrefix.create_text\")}\n              isGrouped\n              onCreateOption={() => {\n                setIsOpen(false);\n                setIsDirty(false);\n              }}\n            >\n              {makeOptions()}\n            </Select>\n          ) : (\n            <Skeleton width={\"100%\"} />\n          )}\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { AsyncTypeaheadSelect } from \"@rhoas/app-services-ui-components\";\n\ntype ResourceNameProps = {\n  value: string | undefined;\n  onChangeValue: (value: string | undefined) => void;\n  onFetchOptions: (filter: string) => string[];\n  submitted: boolean;\n  resourceType: ResourceTypeValue | undefined;\n  resourcePrefixRule: ResourcePrefixRuleValue;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const ResourceName: React.VFC<ResourceNameProps> = ({\n  value,\n  onChangeValue,\n  submitted,\n  resourceType,\n  resourcePrefixRule,\n  onFetchOptions,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const validationCheck = (\n    resourceType: ResourceTypeValue | undefined,\n    resourcePreixCondition: \"Starts with\" | \"Is\",\n    filter: string | undefined\n  ) => {\n    const regExp = new RegExp(\"^[0-9A-Za-z_.-]+$\");\n\n    if (filter === undefined || filter === \"\" || filter == \"*\")\n      return { isValid: true, message: undefined };\n    if (resourcePreixCondition == \"Is\" && resourceType == \"topic\") {\n      if (filter == \".\" || filter == \"..\")\n        return {\n          isValid: false,\n          message: t(\"resourcePrefix.invalid_topic_name\"),\n        };\n    }\n\n    if (resourceType == \"topic\" && !regExp.test(filter))\n      return {\n        isValid: false,\n        message: t(\"resourcePrefix.invalid_topic\"),\n      };\n\n    if (resourceType == \"consumer-group\" && !regExp.test(filter))\n      return {\n        isValid: false,\n        message: t(\"resourcePrefix.invalid_consumer_group\"),\n      };\n    if (filter.length > 32)\n      return { isValid: false, message: t(\"resourcePrefix.invalid_length\") };\n\n    return { isValid: true, message: undefined };\n  };\n\n  const onValidation = (filter: string | undefined) => {\n    const validationMessage = validationCheck(\n      resourceType,\n      resourcePrefixRule,\n      filter\n    );\n    setIsNameValid(validationMessage.isValid);\n    return validationMessage;\n  };\n\n  return (\n    <AsyncTypeaheadSelect\n      id=\"resource-name\"\n      ariaLabel={\n        resourcePrefixRule === \"Is\"\n          ? t(\"resourcePrefix.aria_label_name_is\", { value: resourceType })\n          : t(\"resourcePrefix.aria_label_name_starts_with\", {\n              value: resourceType,\n            })\n      }\n      value={value}\n      placeholderText={\n        resourcePrefixRule === \"Is\"\n          ? t(\"resourcePrefix.placeholder_name_is\")\n          : t(\"resourcePrefix.placeholder_name_starts_with\")\n      }\n      onChange={onChangeValue}\n      required={true}\n      submitted={submitted}\n      onFetchOptions={onFetchOptions}\n      onValidationCheck={onValidation}\n    />\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\n\nexport type ResourceOperationValue =\n  | \"All\"\n  | \"Read\"\n  | \"Write\"\n  | \"Create\"\n  | \"Delete\"\n  | \"Alter\"\n  | \"Describe\"\n  | \"Describe configs\"\n  | \"Alter configs\";\n\ntype ResourceOperationProps = {\n  value: ResourceOperationValue | undefined;\n  onChangeValue: (value: ResourceOperationValue | undefined) => void;\n  initialOpen?: boolean;\n  invalid: boolean;\n  resourceTypeOptions: string[];\n};\n\nexport const ResourceOperation: React.VFC<ResourceOperationProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n  invalid,\n  resourceTypeOptions,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourceOperationValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return resourceTypeOptions.map((value, index) => (\n      <SelectOption key={index} value={value}>\n        {value}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <FormGroup\n      validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n      helperTextInvalid={t(\"common:required\")}\n      fieldId={\"resource-operation-select\"}\n    >\n      <Select\n        id={\"resource-operation-select\"}\n        aria-label={t(\"operations.aria_label\", value)}\n        data-testid=\"acls-resource-operation-select\"\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        isOpen={isOpen}\n        width={200}\n        placeholderText={t(\"operations.placeholder_text\")}\n        validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n        selections={value}\n        menuAppendTo={document.body}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroup>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\n\nexport type ResourcePermissionValue = \"allow\" | \"deny\";\n\ntype ResourcePermissionProps = {\n  value: ResourcePermissionValue;\n  onChangeValue: (value: ResourcePermissionValue) => void;\n  initialOpen?: boolean;\n};\n\nexport const ResourcePermission: React.VFC<ResourcePermissionProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourcePermissionOptions: {\n    [key in ResourcePermissionValue]: string;\n  } = {\n    allow: t(\"permissions.allow\"),\n    deny: t(\"permissions.deny\"),\n  };\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourcePermissionValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourcePermissionOptions).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <Select\n      id={\"resource-permission-select\"}\n      aria-label={t(\"permissions.aria_label\", { value })}\n      data-testid=\"acls-resource-permission-select\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      width={150}\n      selections={value}\n      menuAppendTo={document.body}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type ResourcePrefixRuleValue = \"Is\" | \"Starts with\";\n\ntype ResourcePrefixRuleProps = {\n  value: ResourcePrefixRuleValue;\n  onChangeValue: (value: ResourcePrefixRuleValue) => void;\n  initialOpen?: boolean;\n};\n\nexport const ResourcePrefixRule: React.VFC<ResourcePrefixRuleProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourcePrefixRuleOptions: {\n    [key in ResourcePrefixRuleValue]: { label: string; description: string };\n  } = {\n    \"Starts with\": {\n      label: t(\"resource_prefix_rule.starts_with\"),\n      description: t(\"resource_prefix_rule.starts_with_description\"),\n    },\n    Is: {\n      label: t(\"resource_prefix_rule.is\"),\n      description: t(\"resource_prefix_rule.is_description\"),\n    },\n  };\n\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourcePrefixRuleValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourcePrefixRuleOptions).map(\n      ([key, { label, description }]) => (\n        <SelectOption key={key} value={key} description={description}>\n          {label}\n        </SelectOption>\n      )\n    );\n  };\n\n  return (\n    <Select\n      id={\"resource-prefix-rule-select\"}\n      aria-label={t(\"resource_prefix_rule.aria_label\", { value })}\n      data-testid=\"acls-resource-prefix-rule-select\"\n      variant={SelectVariant.single}\n      onToggle={onToggle}\n      onSelect={onSelect}\n      isOpen={isOpen}\n      width={150}\n      selections={value}\n      menuAppendTo={document.body}\n    >\n      {makeOptions()}\n    </Select>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\n\nexport type ResourceTypeValue =\n  | \"topic\"\n  | \"consumer-group\"\n  | \"kafka-instance\"\n  | \"transactional-id\";\n\ntype ResourceTypeProps = {\n  value: ResourceTypeValue | undefined;\n  onChangeValue: (value: ResourceTypeValue | undefined) => void;\n  initialOpen?: boolean;\n  invalid: boolean;\n};\n\nexport const ResourceType: React.VFC<ResourceTypeProps> = ({\n  value,\n  onChangeValue,\n  initialOpen = false,\n  invalid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  // for Storybook, allows opening the select programmatically respecting the initialization needed by the modal and Popper.js\n  useLayoutEffect(() => setIsOpen(initialOpen), [initialOpen]);\n\n  const resourceTypeOptions: { [key in ResourceTypeValue]: string } = {\n    \"consumer-group\": t(\"resourceTypes.consumer_group\"),\n    topic: t(\"resourceTypes.topic\"),\n    \"kafka-instance\": t(\"resourceTypes.kafka_instance\"),\n    \"transactional-id\": t(\"resourceTypes.transactional_id\"),\n  };\n  const onToggle = (value: boolean) => {\n    setIsOpen(value);\n  };\n  const onSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    onChangeValue(selection as ResourceTypeValue);\n    setIsOpen(false);\n  };\n  const makeOptions = () => {\n    return Object.entries(resourceTypeOptions).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <FormGroup\n      validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n      helperTextInvalid={t(\"common:required\")}\n      fieldId={\"resource-type-select\"}\n    >\n      <Select\n        id={\"resource-type-select\"}\n        aria-label={\n          value != undefined\n            ? t(\"resourceTypes.resource_type_selected\", { value: value })\n            : t(\"resourceTypes.resource_type\")\n        }\n        data-testid=\"acls-resource-type-select\"\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        isOpen={isOpen}\n        width={200}\n        placeholderText={t(\"resourceTypes.placeholder_text\")}\n        validated={invalid ? ValidatedOptions.error : ValidatedOptions.default}\n        selections={value}\n        menuAppendTo={document.body}\n      >\n        {makeOptions()}\n      </Select>\n    </FormGroup>\n  );\n};\n","import { Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ShortcutsTableHead: React.FC = () => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Thead>\n      <Tr>\n        <Th>{t(\"table.resource_column_title\")}</Th>\n        <Th />\n\n        <Th />\n\n        <Th>{t(\"table.permissions_column_title\")}</Th>\n        <Th />\n        <Th />\n      </Tr>\n    </Thead>\n  );\n};\n","import { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { ResourceType } from \"./ResourceType\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport { ResourcePermission } from \"./ResourcePermission\";\nimport type { ResourcePermissionValue } from \"./ResourcePermission\";\nimport { ResourceOperation } from \"./ResourceOperation\";\nimport type { ResourceOperationValue } from \"./ResourceOperation\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nexport type KafkaInstanceManualPermissions = {\n  resourceType: ResourceTypeValue | undefined;\n  onChangeResourceType: (value: ResourceTypeValue | undefined) => void;\n  submitted: boolean;\n  resourcePermission: ResourcePermissionValue;\n  onChangeResourcePermission: (value: ResourcePermissionValue) => void;\n  resourceOperation: ResourceOperationValue | undefined;\n  onChangeResourceOperation: (\n    value: ResourceOperationValue | undefined\n  ) => void;\n  row: number;\n  onDelete: (row: number) => void;\n};\n\nexport const KafkaInstanceManualPermissions: React.FC<\n  KafkaInstanceManualPermissions\n> = ({\n  resourceType,\n  resourceOperation,\n  resourcePermission,\n  submitted,\n  onChangeResourceOperation,\n  onChangeResourcePermission,\n  onChangeResourceType,\n  row,\n  onDelete,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Tbody>\n      <Tr>\n        <Td width={60}>\n          <ResourceType\n            value={resourceType}\n            onChangeValue={onChangeResourceType}\n            invalid={submitted && resourceType === undefined}\n          />\n        </Td>\n\n        <Td />\n        <Td />\n\n        <Td>\n          <ResourcePermission\n            value={resourcePermission}\n            onChangeValue={onChangeResourcePermission}\n          />\n        </Td>\n        <Td>\n          <ResourceOperation\n            value={resourceOperation}\n            onChangeValue={onChangeResourceOperation}\n            resourceTypeOptions={[\n              t(\"operations.alter\"),\n              t(\"operations.describe\"),\n            ]}\n            invalid={submitted && resourceOperation === undefined}\n          />\n        </Td>\n        <Td>\n          <RemoveButton\n            variant=\"link\"\n            onClick={() => onDelete(row)}\n            tooltip={t(\"operations.delete\")}\n          />\n        </Td>\n      </Tr>\n    </Tbody>\n  );\n};\n","import { Tbody, Tr, Td } from \"@patternfly/react-table\";\nimport { ResourceName } from \"./ResourceName\";\nimport { ResourceOperation } from \"./ResourceOperation\";\nimport type { ResourceOperationValue } from \"./ResourceOperation\";\nimport { ResourcePermission } from \"./ResourcePermission\";\nimport type { ResourcePermissionValue } from \"./ResourcePermission\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { ResourceType } from \"./ResourceType\";\nimport type { ResourceTypeValue } from \"./ResourceType\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\nimport { useTranslation } from \"react-i18next\";\nimport { KafkaInstanceManualPermissions } from \"./KafkaInstanceManualPermissions\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\n\nexport type AssignPermissionsManualProps = {\n  resourceType: ResourceTypeValue | undefined;\n  onChangeResourceType: (value: ResourceTypeValue | undefined) => void;\n  submitted: boolean;\n  resourcePrefix: ResourcePrefixRuleValue;\n  onChangeResourcePrefix: (value: ResourcePrefixRuleValue) => void;\n  resourceName: string | undefined;\n  onChangeResource: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  resourcePermission: ResourcePermissionValue;\n  onChangeResourcePermission: (value: ResourcePermissionValue) => void;\n  resourceOperation: ResourceOperationValue | undefined;\n  onChangeResourceOperation: (\n    value: ResourceOperationValue | undefined\n  ) => void;\n  multipleShorctutPermissions?: boolean;\n  row: number;\n  onDelete: (row: number) => void;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const AssignPermissionsManual: React.FC<\n  AssignPermissionsManualProps\n> = ({\n  resourceType,\n  onChangeResourceType,\n  submitted,\n  resourcePrefix,\n  onChangeResourcePrefix,\n  resourceName,\n  onChangeResource,\n  onFetchResourceNameOptions,\n  resourcePermission,\n  resourceOperation,\n  onChangeResourceOperation,\n  onChangeResourcePermission,\n  multipleShorctutPermissions = true,\n  row,\n  onDelete,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation(\"manage-kafka-permissions\");\n  const resourceTypeOptions = () => {\n    switch (resourceType) {\n      case \"consumer-group\":\n        return [\n          t(\"operations.all\"),\n          t(\"operations.read\"),\n          t(\"operations.delete\"),\n          t(\"operations.describe\"),\n        ];\n      case \"kafka-instance\":\n        return [t(\"operations.alter\"), t(\"operations.describe\")];\n      case \"transactional-id\":\n        return [\n          t(\"operations.all\"),\n          t(\"operations.write\"),\n          t(\"operations.describe\"),\n        ];\n      default:\n        return [\n          t(\"operations.all\"),\n          t(\"operations.read\"),\n          t(\"operations.write\"),\n          t(\"operations.create\"),\n          t(\"operations.delete\"),\n          t(\"operations.alter\"),\n          t(\"operations.describe\"),\n          t(\"operations.describe_configs\"),\n          t(\"operations.alter_configs\"),\n        ];\n    }\n  };\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n      {resourceType === \"kafka-instance\" ? (\n        <KafkaInstanceManualPermissions\n          resourceOperation={resourceOperation}\n          resourcePermission={resourcePermission}\n          resourceType={resourceType}\n          submitted={submitted}\n          onChangeResourceOperation={onChangeResourceOperation}\n          onChangeResourcePermission={onChangeResourcePermission}\n          onChangeResourceType={onChangeResourceType}\n          onDelete={onDelete}\n          row={row}\n        />\n      ) : (\n        <Tbody>\n          <Tr>\n            <Td>\n              <ResourceType\n                value={resourceType}\n                onChangeValue={onChangeResourceType}\n                invalid={submitted && resourceType === undefined}\n              />\n            </Td>\n            <Td>\n              <ResourcePrefixRule\n                value={resourcePrefix}\n                onChangeValue={onChangeResourcePrefix}\n              />\n            </Td>\n            <Td>\n              <ResourceName\n                value={resourceName}\n                onChangeValue={onChangeResource}\n                onFetchOptions={onFetchResourceNameOptions}\n                submitted={submitted}\n                resourceType={resourceType}\n                resourcePrefixRule={resourcePrefix}\n                setIsNameValid={setIsNameValid}\n              />\n            </Td>\n            <Td>\n              <ResourcePermission\n                value={resourcePermission}\n                onChangeValue={onChangeResourcePermission}\n              />\n            </Td>\n            <Td>\n              <ResourceOperation\n                resourceTypeOptions={resourceTypeOptions()}\n                value={resourceOperation}\n                onChangeValue={onChangeResourceOperation}\n                invalid={\n                  submitted && resourceOperation === undefined ? true : false\n                }\n              />\n            </Td>\n            <Td>\n              <RemoveButton\n                variant=\"link\"\n                onClick={() => onDelete(row)}\n                tooltip={t(\"remove_permission_tooltip\")}\n                ariaLabel={t(\"manual_delete\")}\n              />\n            </Td>\n          </Tr>\n        </Tbody>\n      )}\n    </>\n  );\n};\n","import { Tr, Td } from \"@patternfly/react-table\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ResourceName } from \"./ResourceName\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\n\nexport type ProduceTopicRowProps = {\n  onChange: (value: ResourcePrefixRuleValue) => void;\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n  onChangeResourceName: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  isConsumeTopicShortcut?: boolean;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ProduceTopicRow: React.FC<ProduceTopicRowProps> = ({\n  onChange,\n  prefixRuleValue,\n  resourceNameValue,\n  onChangeResourceName,\n  onFetchResourceNameOptions,\n  submitted,\n  isConsumeTopicShortcut,\n  setIsNameValid,\n}) => {\n  return (\n    <Tr style={{ borderBottom: isConsumeTopicShortcut ? \"none\" : \"\" }}>\n      <Td>\n        {\" \"}\n        <ResourceTypeLabel variant={\"TOPIC\"} />{\" \"}\n        <DisplayResourceName resourceType={\"TOPIC\"} />{\" \"}\n      </Td>\n      <Td>\n        {\n          <ResourcePrefixRule\n            value={prefixRuleValue}\n            onChangeValue={onChange}\n          />\n        }\n      </Td>\n      <Td>\n        <ResourceName\n          value={resourceNameValue}\n          onChangeValue={onChangeResourceName}\n          onFetchOptions={onFetchResourceNameOptions}\n          submitted={submitted}\n          resourceType={\"topic\"}\n          resourcePrefixRule={prefixRuleValue}\n          setIsNameValid={setIsNameValid}\n        />\n      </Td>\n      <Td colSpan={2}>\n        <PermissionOperationCell\n          permission={\"ALLOW\"}\n          operation={\n            isConsumeTopicShortcut\n              ? [\"READ\", \"DESCRIBE\"]\n              : [\"WRITE\", \"CREATE\", \"DESCRIBE\"]\n          }\n        />\n      </Td>\n    </Tr>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { ResourcePrefixRule } from \"./ResourcePrefixRule\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\n\nimport { ResourceName } from \"./ResourceName\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { ProduceTopicRow } from \"./ProduceTopicRow\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\n\nexport type ConsumeTopicShortcutProps = {\n  onChangeConsumerResourcePrefixRule: (value: ResourcePrefixRuleValue) => void;\n  onChangeTopicResourcePrefixRule: (value: ResourcePrefixRuleValue) => void;\n  consumerPrefixRuleValue: ResourcePrefixRuleValue;\n  topicPrefixRuleValue: ResourcePrefixRuleValue;\n  consumerResourceNameValue: string | undefined;\n  topicResourceNameValue: string | undefined;\n  onChangeConsumerResourceName: (value: string | undefined) => void;\n  onChangeTopicResourceName: (value: string | undefined) => void;\n  onFetchConsumerResourceNameOptions: (filter: string) => string[];\n  onFetchTopicResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  multipleShorctutPermissions?: boolean;\n  onDelete: (row: number) => void;\n  row: number;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ConsumeTopicShortcut: React.FC<ConsumeTopicShortcutProps> = ({\n  onChangeConsumerResourceName,\n  topicPrefixRuleValue,\n  topicResourceNameValue,\n  consumerPrefixRuleValue,\n  consumerResourceNameValue,\n  submitted,\n  onChangeConsumerResourcePrefixRule,\n  onChangeTopicResourceName,\n  onChangeTopicResourcePrefixRule,\n  onFetchConsumerResourceNameOptions,\n  onFetchTopicResourceNameOptions,\n  onDelete,\n  multipleShorctutPermissions = true,\n  row,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_consume_topic\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_consume_topic\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_consume_topic_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_consumer\")}\n            />\n          </Td>\n        </Tr>\n        <ProduceTopicRow\n          setIsNameValid={setIsNameValid}\n          isConsumeTopicShortcut={true}\n          onChange={onChangeTopicResourcePrefixRule}\n          prefixRuleValue={topicPrefixRuleValue}\n          resourceNameValue={topicResourceNameValue}\n          onChangeResourceName={onChangeTopicResourceName}\n          onFetchResourceNameOptions={onFetchTopicResourceNameOptions}\n          submitted={submitted}\n        />\n        <Tr>\n          <Td>\n            {\" \"}\n            <ResourceTypeLabel variant={\"GROUP\"} />{\" \"}\n            <DisplayResourceName resourceType={\"GROUP\"} />{\" \"}\n          </Td>\n          <Td>\n            <ResourcePrefixRule\n              value={consumerPrefixRuleValue}\n              onChangeValue={onChangeConsumerResourcePrefixRule}\n            />\n          </Td>\n          <Td>\n            {\n              <ResourceName\n                value={consumerResourceNameValue}\n                onChangeValue={onChangeConsumerResourceName}\n                onFetchOptions={onFetchConsumerResourceNameOptions}\n                submitted={submitted}\n                resourceType={\"topic\"}\n                resourcePrefixRule={consumerPrefixRuleValue}\n                setIsNameValid={setIsNameValid}\n              />\n            }\n          </Td>\n          <Td>\n            <PermissionOperationCell\n              permission={\"ALLOW\"}\n              operation={[\"READ\"]}\n            />\n          </Td>\n        </Tr>\n      </Tbody>\n    </>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { ResourceTypeLabel } from \"./ResourceTypeLabel\";\nimport { DisplayResourceName, PermissionOperationCell } from \"./Cells\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type ManageAccessShortcutProps = {\n  onDelete: (row: number) => void;\n  multipleShorctutPermissions?: boolean;\n  instanceName: string;\n  row: number;\n};\nexport const ManageAccessShortcut: React.FC<ManageAccessShortcutProps> = ({\n  onDelete,\n  multipleShorctutPermissions = true,\n  instanceName,\n  row,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_manage_access\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_manage_access\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_manage_access_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_access\")}\n            />\n          </Td>\n        </Tr>\n\n        <Tr>\n          <Td colSpan={2}>\n            <ResourceTypeLabel variant={\"CLUSTER\"} />{\" \"}\n            <DisplayResourceName resourceType={\"CLUSTER\"} />{\" \"}\n            {t(\"is_kafka_instance\", { value: instanceName })}\n          </Td>\n\n          <Td />\n\n          <Td>\n            <PermissionOperationCell\n              permission={\"ALLOW\"}\n              operation={[\"ALTER\"]}\n            />\n          </Td>\n        </Tr>\n      </Tbody>\n    </>\n  );\n};\n","import { Popover, Title } from \"@patternfly/react-core\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport type { ResourcePrefixRuleValue } from \"./ResourcePrefixRule\";\nimport { RemoveButton } from \"@rhoas/app-services-ui-components\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nimport { ProduceTopicRow } from \"./ProduceTopicRow\";\n\nexport type ProduceTopicShortcutProps = {\n  onChange: (value: ResourcePrefixRuleValue) => void;\n  prefixRuleValue: ResourcePrefixRuleValue;\n  resourceNameValue: string | undefined;\n  onChangeResourceName: (value: string | undefined) => void;\n  onFetchResourceNameOptions: (filter: string) => string[];\n  submitted: boolean;\n  onDelete: (row: number) => void;\n  multipleShorctutPermissions?: boolean;\n  row: number;\n  setIsNameValid: (value: boolean) => void;\n};\nexport const ProduceTopicShortcut: React.FC<ProduceTopicShortcutProps> = ({\n  onChange,\n  onDelete,\n  prefixRuleValue,\n  onChangeResourceName,\n  resourceNameValue,\n  submitted,\n  onFetchResourceNameOptions,\n  multipleShorctutPermissions = true,\n  row,\n  setIsNameValid,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <>\n      {!multipleShorctutPermissions ? <ShortcutsTableHead /> : null}\n\n      <Tbody>\n        <Tr style={{ borderBottom: \"none\" }}>\n          <Td colSpan={5}>\n            <Title headingLevel=\"h6\">\n              {t(\"permissions_dropdown.shortcut_produce_topic\")}{\" \"}\n              <Popover\n                headerContent={t(\"permissions_dropdown.shortcut_produce_topic\")}\n                bodyContent={t(\n                  \"permissions_dropdown.shortcut_produce_topic_description\"\n                )}\n              >\n                <button\n                  type=\"button\"\n                  onClick={(e) => e.preventDefault()}\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon noVerticalAlign />\n                </button>\n              </Popover>\n            </Title>\n          </Td>\n          <Td>\n            <RemoveButton\n              variant=\"link\"\n              onClick={() => onDelete(row)}\n              tooltip={t(\"remove_permission_tooltip\")}\n              ariaLabel={t(\"delete_producer\")}\n            />\n          </Td>\n        </Tr>\n\n        <ProduceTopicRow\n          onChange={onChange}\n          prefixRuleValue={prefixRuleValue}\n          resourceNameValue={resourceNameValue}\n          onChangeResourceName={onChangeResourceName}\n          onFetchResourceNameOptions={onFetchResourceNameOptions}\n          submitted={submitted}\n          setIsNameValid={setIsNameValid}\n        />\n      </Tbody>\n    </>\n  );\n};\n","import { ActionList, ActionListItem } from \"@patternfly/react-core\";\nimport { TableComposable } from \"@patternfly/react-table\";\nimport { PermissionsDropdown } from \"./PermissionsDropdown\";\nimport type { AddAclType } from \"../types\";\nimport { AssignPermissionsManual } from \"./AssignPermissionsManual\";\nimport { ConsumeTopicShortcut } from \"./ConsumeTopicShortcut\";\nimport { ManageAccessShortcut } from \"./ManageAccessShortcut\";\nimport { ProduceTopicShortcut } from \"./ProduceTopicShortcut\";\nimport { ShortcutsTableHead } from \"./ShortcutsTableHead\";\n\nexport type AssignPermissionsProps = {\n  submitted: boolean;\n  onDelete: (index: number) => void;\n  topicNameOptions: (filter: string) => string[];\n  consumerGroupNameOptions: (filter: string) => string[];\n  addedAcls?: AddAclType[];\n  onAddManualPermissions: () => void;\n  onAddProduceTopicShortcut: () => void;\n  onConsumeTopicShortcut: () => void;\n  onManageAccessShortcut: () => void;\n  kafkaName: string;\n  setAddedAcls: (value: AddAclType[]) => void;\n  setIsNameValid: (value: boolean) => void;\n};\n\nexport const AssignPermissions: React.VFC<AssignPermissionsProps> = ({\n  submitted,\n  onDelete,\n  topicNameOptions,\n  consumerGroupNameOptions,\n  onAddManualPermissions,\n  onAddProduceTopicShortcut,\n  onConsumeTopicShortcut,\n  onManageAccessShortcut,\n  addedAcls,\n  kafkaName,\n  setAddedAcls,\n  setIsNameValid,\n}) => {\n  return (\n    <>\n      <TableComposable variant=\"compact\">\n        {addedAcls && addedAcls.length > 0 && <ShortcutsTableHead />}\n        {addedAcls &&\n          addedAcls.map((aclTemplate, idx) => {\n            switch (aclTemplate.type) {\n              case \"manual\":\n                return (\n                  <AssignPermissionsManual\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    resourceType={aclTemplate.resourceType}\n                    onChangeResourceType={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourceType: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    submitted={submitted}\n                    resourcePrefix={aclTemplate.resourcePrefix}\n                    onChangeResourcePrefix={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourcePrefix: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    resourceName={aclTemplate.resourceName}\n                    onChangeResource={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, resourceName: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchResourceNameOptions={topicNameOptions}\n                    resourcePermission={aclTemplate.resourcePermission}\n                    onChangeResourcePermission={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourcePermission: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    resourceOperation={aclTemplate.resourceOperation}\n                    onChangeResourceOperation={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourceOperation: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    row={idx}\n                    onDelete={onDelete}\n                  />\n                );\n\n              case \"consume-topic\":\n                return (\n                  <ConsumeTopicShortcut\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    onChangeConsumerResourcePrefixRule={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                consumerResourcePrefixRule: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onChangeTopicResourcePrefixRule={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                topicResourcePrefixRule: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    consumerPrefixRuleValue={\n                      aclTemplate.consumerResourcePrefixRule\n                    }\n                    topicPrefixRuleValue={aclTemplate.topicResourcePrefixRule}\n                    consumerResourceNameValue={aclTemplate.consumerResourceName}\n                    topicResourceNameValue={aclTemplate.topicResourceName}\n                    onChangeConsumerResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                consumerResourceName: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onChangeTopicResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                topicResourceName: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchConsumerResourceNameOptions={\n                      consumerGroupNameOptions\n                    }\n                    onFetchTopicResourceNameOptions={topicNameOptions}\n                    submitted={submitted}\n                    onDelete={onDelete}\n                    row={idx}\n                  />\n                );\n\n              case \"produce-topic\":\n                return (\n                  <ProduceTopicShortcut\n                    key={idx}\n                    setIsNameValid={setIsNameValid}\n                    onChange={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? { ...resourceValues, prefixRuleValue: value }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    prefixRuleValue={aclTemplate.prefixRuleValue}\n                    resourceNameValue={aclTemplate.resourceNameValue}\n                    onChangeResourceName={(value) =>\n                      setAddedAcls(\n                        [...addedAcls].map((resourceValues, row) => {\n                          return row === idx\n                            ? {\n                                ...resourceValues,\n                                resourceNameValue: value,\n                              }\n                            : { ...resourceValues };\n                        })\n                      )\n                    }\n                    onFetchResourceNameOptions={topicNameOptions}\n                    submitted={submitted}\n                    onDelete={onDelete}\n                    row={idx}\n                  />\n                );\n\n              case \"manage-access\":\n                return (\n                  <ManageAccessShortcut\n                    key={idx}\n                    row={idx}\n                    instanceName={kafkaName}\n                    onDelete={onDelete}\n                  />\n                );\n            }\n          })}\n      </TableComposable>\n      <ActionList>\n        <ActionListItem style={{ paddingTop: \"20px\" }}>\n          <PermissionsDropdown\n            onAddPermission={onAddManualPermissions}\n            onShortcutConsumeTopic={onConsumeTopicShortcut}\n            onShortcutProduceTopic={onAddProduceTopicShortcut}\n            onShortcutManageAccess={onManageAccessShortcut}\n          />\n        </ActionListItem>\n      </ActionList>\n    </>\n  );\n};\n","import type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Modal,\n  ModalVariant,\n  Button,\n  ButtonVariant,\n} from \"@patternfly/react-core\";\n\nexport type PreCancelModalProps = {\n  isOpen: boolean;\n  closeModal: () => void;\n  resumeEditing: () => void;\n};\n\nconst PreCancelModal: React.FC<PreCancelModalProps> = ({\n  isOpen,\n  closeModal,\n  resumeEditing,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  return (\n    <Modal\n      id=\"manage-permissions-precancel-modal\"\n      variant={ModalVariant.small}\n      isOpen={isOpen}\n      aria-label={t(\"pre_cancel_label\")}\n      title={t(\"pre_cancel_title\")}\n      titleIconVariant=\"warning\"\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={resumeEditing}\n      onEscapePress={closeModal}\n      actions={[\n        <Button onClick={closeModal} key={1} variant={ButtonVariant.primary}>\n          {t(\"discard_changes\")}\n        </Button>,\n        <Button\n          onClick={resumeEditing}\n          key={2}\n          variant={ButtonVariant.secondary}\n        >\n          {t(\"resume_editing\")}\n        </Button>,\n      ]}\n    >\n      {t(\"cancel_description\")}\n    </Modal>\n  );\n};\n\nexport { PreCancelModal };\n","import type { VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\n\nimport type { AclBinding } from \"../types\";\nimport { PermissionOperationCell, PrincipalCell, ResourceCell } from \"./Cells\";\n\nexport type ReviewPermissionsTableProps = {\n  acls: AclBinding[];\n  selectedAccountId: string;\n  onRemoveAcl: (idx: number) => void;\n};\n\nexport const ReviewPermissionsTable: VFC<ReviewPermissionsTableProps> = ({\n  selectedAccountId,\n  acls = [],\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n\n  return (\n    <TableComposable\n      variant={TableVariant.compact}\n      aria-label={t(\"review_permissions_table\")}\n    >\n      <Thead noWrap>\n        <Tr>\n          <Th width={60}>{t(\"table.resource_column_title\")}</Th>\n          <Th width={20}>{t(\"table.permissions_column_title\")}</Th>\n          <Th width={20} />\n        </Tr>\n      </Thead>\n      <Tbody>\n        {acls.map((acl, idx) => {\n          const {\n            patternType,\n            resourceType,\n            resourceName,\n            operation,\n            permission,\n            principal,\n          } = acl;\n          const isDeleteEnabled =\n            selectedAccountId === \"All accounts\" ||\n            principal === `User:${selectedAccountId}` ||\n            principal != `User:*`;\n          const isAllAccounts = principal === \"User:*\";\n\n          return (\n            <Tr key={idx}>\n              <Td>\n                <ResourceCell\n                  patternType={patternType}\n                  resourceType={resourceType}\n                  resourceName={resourceName}\n                />\n              </Td>\n              <Td>\n                <PermissionOperationCell\n                  permission={permission}\n                  operation={operation}\n                />\n              </Td>\n              <Td>\n                <PrincipalCell\n                  isDeleteEnabled={isDeleteEnabled}\n                  isAllAccounts={isAllAccounts}\n                  onRemoveAcl={() => onRemoveAcl(idx)}\n                />\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </TableComposable>\n  );\n};\n","import { Text, TextContent, TextVariants } from \"@patternfly/react-core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport type { AclBinding } from \"../types\";\nimport { ReviewPermissionsTable } from \"./ReviewPermissionsTable\";\n\nexport type ViewAccountDetailsProps = {\n  accountId: string | undefined;\n  existingAcls: AclBinding[];\n  onRemoveAcl: (index: number) => void;\n};\n\nexport const ViewAccountDetails: React.VFC<ViewAccountDetailsProps> = ({\n  accountId,\n  existingAcls,\n  onRemoveAcl,\n}) => {\n  const { t } = useTranslation([\"manage-kafka-permissions\"]);\n  const HelperText: React.FunctionComponent = () => {\n    if (accountId === \"All accounts\") {\n      return t(\"all_accounts_help\");\n    }\n    return (\n      <Trans ns={[\"manage-kafka-permissions\"]} i18nKey=\"selected_account_help\">\n        Review the list of existing permissions for the selected account. The\n        list includes account-specific permissions and permissions applied to\n        all accounts within this Kafka instance. Permissions labeled\n        <strong>All accounts</strong> cannot be removed when an individual\n        account ID is selected.\n      </Trans>\n    );\n  };\n  return (\n    <>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          <HelperText />\n        </Text>\n      </TextContent>\n      <ReviewPermissionsTable\n        acls={existingAcls}\n        selectedAccountId={accountId ? accountId : \"\"}\n        onRemoveAcl={onRemoveAcl}\n      />\n    </>\n  );\n};\n","import type { ResourceOperationValue } from \"./components/ResourceOperation\";\nimport type { ResourceTypeValue } from \"./components/ResourceType\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport { AclResourceType } from \"@rhoas/kafka-instance-sdk\";\nimport type { AddAclType } from \"./types\";\n\nexport const transformPermissions = (\n  transformAclData: AclBinding[],\n  newAcls?: AddAclType[],\n  selectedAccount?: string\n) => {\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  const selectedAccountName = `User:${selectedAccount}`;\n  newAcls?.map((value) => {\n    switch (value.type) {\n      case \"manual\": {\n        transformAclData.push({\n          resourceName:\n            value.resourceType == \"kafka-instance\"\n              ? \"kafka-cluster\"\n              : value.resourceName\n              ? value.resourceName\n              : \"\",\n          resourceType: transformResourceType(value.resourceType),\n          patternType: value.resourcePrefix == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n          operation: transformResourceOperation(value.resourceOperation),\n          permission: value.resourcePermission == \"allow\" ? \"ALLOW\" : \"DENY\",\n          principal:\n            selectedAccount == \"All accounts\" ? `User:*` : selectedAccountName,\n        });\n        break;\n      }\n      case \"manage-access\":\n        {\n          transformAclData.push({\n            resourceName: \"kafka-cluster\",\n            resourceType: \"CLUSTER\",\n            patternType: \"LITERAL\",\n            operation: \"ALTER\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          });\n        }\n        break;\n      case \"consume-topic\":\n        {\n          transformAclData.push(\n            {\n              resourceName: value.topicResourceName || \"\",\n              resourceType: \"TOPIC\",\n              patternType:\n                value.topicResourcePrefixRule == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n              operation: \"READ\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            },\n            {\n              resourceName: value.topicResourceName || \"\",\n              resourceType: \"TOPIC\",\n              patternType:\n                value.topicResourcePrefixRule == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n              operation: \"DESCRIBE\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            },\n            {\n              resourceName: value.consumerResourceName || \"\",\n              resourceType: \"GROUP\",\n              patternType:\n                value.consumerResourcePrefixRule == \"Is\"\n                  ? \"LITERAL\"\n                  : \"PREFIXED\",\n              operation: \"READ\",\n              permission: \"ALLOW\",\n              principal:\n                selectedAccount == \"All accounts\"\n                  ? `User:*`\n                  : selectedAccountName,\n            }\n          );\n        }\n        break;\n      case \"produce-topic\": {\n        transformAclData.push(\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"WRITE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          },\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"CREATE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          },\n          {\n            resourceName: value.resourceNameValue || \"\",\n            resourceType: \"TOPIC\",\n            patternType: value.prefixRuleValue == \"Is\" ? \"LITERAL\" : \"PREFIXED\",\n            operation: \"DESCRIBE\",\n            permission: \"ALLOW\",\n            principal:\n              selectedAccount == \"All accounts\"\n                ? `User:*`\n                : selectedAccountName,\n          }\n        );\n      }\n    }\n  });\n};\n\nexport const transformResourceType = (value: ResourceTypeValue | undefined) => {\n  switch (value) {\n    case \"consumer-group\":\n      return AclResourceType.Group;\n    case \"kafka-instance\":\n      return AclResourceType.Cluster;\n    case \"topic\":\n      return AclResourceType.Topic;\n    default:\n      return AclResourceType.TransactionalId;\n  }\n};\nexport const transformResourceOperation = (\n  value: ResourceOperationValue | undefined\n) => {\n  switch (value) {\n    case \"All\":\n      return \"ALL\";\n    case \"Alter\":\n      return \"ALTER\";\n    case \"Alter configs\":\n      return \"ALTER_CONFIGS\";\n    case \"Create\":\n      return \"CREATE\";\n    case \"Delete\":\n      return \"DELETE\";\n    case \"Describe\":\n      return \"DESCRIBE\";\n    case \"Describe configs\":\n      return \"DESCRIBE_CONFIGS\";\n    case \"Read\":\n      return \"READ\";\n    default:\n      return \"WRITE\";\n  }\n};\n","import {\n  Button,\n  ExpandableSection,\n  Form,\n  FormGroup,\n  Modal,\n  TextContent,\n  TextVariants,\n  Text,\n  Badge,\n  Alert,\n  Popover,\n} from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AssignPermissions } from \"./AssignPermissions\";\nimport { PreCancelModal } from \"./PreCancelModal\";\nimport { ViewAccountDetails } from \"./ViewAccountDetails\";\nimport type { AddAclType } from \"../types\";\nimport type { AclBinding } from \"@rhoas/kafka-instance-sdk\";\nimport type { Permissions } from \"ui\";\nimport {\n  createEmptyConsumeTopicAcl,\n  createEmptyManageAccessAcl,\n  createEmptyManualAcl,\n  createEmptyProduceTopicAcl,\n} from \"../types\";\nimport { transformPermissions } from \"../utils\";\n\nexport type AclType = {\n  groups: Permissions[];\n  count: number;\n};\n\nexport type EditPermissionsProps = {\n  onCancel: () => void;\n  kafkaName: string;\n  onSave: (\n    acls: AclBinding[] | undefined,\n    deletedAcls: AclBinding[] | undefined\n  ) => void;\n  acls: AclBinding[];\n  topicsList: string[];\n  consumerGroupsList: string[];\n  id?: string;\n  selectedAccount: string | undefined;\n};\n\nexport const EditPermissions: React.FC<EditPermissionsProps> = ({\n  onCancel,\n  kafkaName,\n  acls,\n  onSave,\n  topicsList,\n  consumerGroupsList,\n  selectedAccount,\n  id,\n}) => {\n  const { t } = useTranslation([\n    \"manage-kafka-permissions\",\n    \"create-kafka-instance\",\n  ]);\n\n  const escapeClosesModal = useRef<boolean>(true);\n  const [\n    isExpandedExistingPermissionSection,\n    setIsExpandedExistingPermissionSection,\n  ] = useState<boolean>(false);\n  const [isAclDeleted, setIsAclDeleted] = useState<boolean>(false);\n  const [\n    isExpandedAssignPermissionsSection,\n    setIsExpandedAssignPermissionsSection,\n  ] = useState<boolean>(true);\n  const [isNameValid, setIsNameValid] = useState<boolean>(true);\n  const [canSave, setCanSave] = useState<boolean>(false);\n  const [submitted, setSubmitted] = useState<boolean>(false);\n  const [isOpenPreCancelModal, setIsOpenPreCancelModal] =\n    useState<boolean>(false);\n  const [existingAcls, setExistingAcls] = useState<AclBinding[]>(acls);\n  const [newAcls, setNewAcls] = useState<AddAclType[]>();\n  const [deletedAcls, setDeletedAcls] = useState<AclBinding[] | undefined>(\n    undefined\n  );\n\n  const checkValidation = useCallback(() => {\n    if (newAcls) {\n      const isRowInvalid = newAcls?.map((value) =>\n        value.type == \"manual\" &&\n        value.resourceType == \"kafka-instance\" &&\n        value.resourceOperation != undefined\n          ? false\n          : Object.values(value).includes(undefined)\n      );\n      isRowInvalid.includes(true) ? setCanSave(false) : setCanSave(true);\n      if (canSave == true && isNameValid) return true;\n      else return false;\n    }\n    if (deletedAcls && deletedAcls.length > 0) {\n      setCanSave(true);\n      return true;\n    } else return false;\n  }, [canSave, deletedAcls, isNameValid, newAcls]);\n\n  useEffect(() => {\n    checkValidation();\n  }, [checkValidation, newAcls]);\n\n  useEffect(() => {\n    //Fetch the latest table for exiting acls, only when no row is scheduled for deletion\n    if (deletedAcls == undefined) setExistingAcls(acls);\n  }, [acls, deletedAcls]);\n\n  const onEscapePress = () => {\n    if (escapeClosesModal.current) {\n      onCancel();\n    }\n  };\n  const topicFilter = (filter: string) => {\n    if (filter == \"\" || filter == undefined) return topicsList;\n    else return topicsList.filter((v) => v.includes(filter));\n  };\n\n  const consumerGroupsFilter = (filter: string) => {\n    if (filter == \"\" || filter == undefined) return consumerGroupsList;\n    else return consumerGroupsList.filter((v) => v.includes(filter));\n  };\n\n  const aclsToSave: AclBinding[] = [];\n\n  const onClickSubmit = () => {\n    if (\n      (newAcls && newAcls.length > 0) ||\n      (deletedAcls && deletedAcls.length > 0)\n    ) {\n      setSubmitted(true);\n      const isAclValid = checkValidation();\n      transformPermissions(aclsToSave, newAcls, selectedAccount);\n      isAclValid && onSave(aclsToSave, deletedAcls);\n    }\n  };\n\n  const onAddManualPermissions = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyManualAcl()]\n        : [createEmptyManualAcl()]\n    );\n  };\n  const onAddProduceTopicShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyProduceTopicAcl()]\n        : [createEmptyProduceTopicAcl()]\n    );\n  };\n  const onConsumeTopicShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyConsumeTopicAcl()]\n        : [createEmptyConsumeTopicAcl()]\n    );\n  };\n  const onManageAccessShortcut = () => {\n    setSubmitted(false);\n    setNewAcls((prevState) =>\n      prevState\n        ? [...prevState, createEmptyManageAccessAcl(kafkaName)]\n        : [createEmptyManageAccessAcl(kafkaName)]\n    );\n  };\n\n  const onDeleteNewAcl = (row: number) => {\n    setNewAcls(\n      (prevState) => prevState && prevState.filter((_, index) => index !== row)\n    );\n  };\n\n  const onChangeExpandedExistingPermissionsSection = (value: boolean) => {\n    setIsExpandedExistingPermissionSection(value);\n  };\n  const onChangeExpandedAssignPermissionsSection = (value: boolean) => {\n    setIsExpandedAssignPermissionsSection(value);\n  };\n\n  const isDisabled =\n    (submitted && !canSave) ||\n    ((newAcls == undefined || newAcls.length < 1) && !isAclDeleted) ||\n    !isNameValid\n      ? true\n      : false;\n  const onClose = () => {\n    !isDisabled || (newAcls && newAcls?.length > 0)\n      ? setIsOpenPreCancelModal(true)\n      : onCancel();\n  };\n\n  const closePreCancelModal = () => {\n    setIsOpenPreCancelModal(false);\n    onCancel();\n  };\n\n  const resumeEditingPermissions = () => {\n    setIsOpenPreCancelModal(false);\n  };\n\n  const updateExistingAcls = (row: number) => {\n    setExistingAcls((existingAcls || []).filter((_, index) => index != row));\n  };\n\n  const onRemoveAcls = (row: number) => {\n    setDeletedAcls((prevState) =>\n      existingAcls && prevState != undefined\n        ? [...prevState, existingAcls[row]]\n        : existingAcls && [existingAcls[row]]\n    );\n    setIsAclDeleted(true);\n    updateExistingAcls(row);\n  };\n  //The value received will have a prefix 'User:'.Remove the prefix when displaying value\n  const accountDisplayName =\n    selectedAccount === \"All accounts\"\n      ? t(\"all_accounts_title\")\n      : selectedAccount?.includes(\"User:\")\n      ? selectedAccount?.split(\":\")[1]\n      : selectedAccount;\n  return (\n    <Modal\n      id=\"manage-permissions-modal\"\n      variant={\"large\"}\n      isOpen={true}\n      aria-label={t(\"dialog_aria_label\")}\n      position=\"top\"\n      title={t(\"dialog_title\")}\n      showClose={true}\n      aria-describedby=\"modal-message\"\n      onClose={onClose}\n      onEscapePress={onEscapePress}\n      appendTo={() =>\n        id ? document.getElementById(id) || document.body : document.body\n      }\n      actions={[\n        <Button\n          key={1}\n          variant=\"primary\"\n          isDisabled={isDisabled}\n          onClick={onClickSubmit}\n          aria-label={t(\"step_2_submit_button\")}\n        >\n          {t(\"step_2_submit_button\")}\n        </Button>,\n        <Button\n          onClick={onClose}\n          key={2}\n          variant=\"secondary\"\n          aria-label={t(\"common:cancel\")}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <PreCancelModal\n        isOpen={isOpenPreCancelModal}\n        closeModal={closePreCancelModal}\n        resumeEditing={resumeEditingPermissions}\n      />\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <FormGroup\n          fieldId=\"kafka-instance-name\"\n          label={t(\"kafka_instance\")}\n          id=\"modal-message\"\n        >\n          {kafkaName}\n        </FormGroup>\n\n        <FormGroup\n          fieldId=\"account-name\"\n          label={t(\"account_id_title\")}\n          labelIcon={\n            <Popover bodyContent={t(\"account_id_help\")}>\n              <button\n                type=\"button\"\n                onClick={(e) => e.preventDefault()}\n                className=\"pf-c-form__group-label-help\"\n                aria-label={t(\"account_help\")}\n              >\n                <HelpIcon noVerticalAlign />\n              </button>\n            </Popover>\n          }\n        >\n          {accountDisplayName}\n        </FormGroup>\n        {(!canSave || !isNameValid) && submitted && (\n          <Alert\n            isInline\n            title={t(\"create-kafka-instance:form_errors.form_invalid\")}\n            variant={\"danger\"}\n          />\n        )}\n        <ExpandableSection\n          isIndented={true}\n          isExpanded={isExpandedExistingPermissionSection}\n          onToggle={onChangeExpandedExistingPermissionsSection}\n          toggleContent={\n            <div>\n              <span>{t(\"review_existing_title\")}</span>{\" \"}\n              <Badge isRead={existingAcls.length == 0 ? true : false}>\n                {existingAcls.length}\n              </Badge>\n            </div>\n          }\n        >\n          <ViewAccountDetails\n            accountId={selectedAccount}\n            existingAcls={existingAcls}\n            onRemoveAcl={onRemoveAcls}\n          />\n        </ExpandableSection>\n        <FormGroup>\n          <ExpandableSection\n            toggleText={t(\"assign_permissions_title\")}\n            isIndented={true}\n            isExpanded={isExpandedAssignPermissionsSection}\n            onToggle={onChangeExpandedAssignPermissionsSection}\n          >\n            <FormGroup>\n              <TextContent>\n                <Text component={TextVariants.small}>\n                  {selectedAccount === \"All accounts\"\n                    ? t(\"assign_permissions_all_description\")\n                    : t(\"assign_permissions_description\", {\n                        value: accountDisplayName,\n                      })}\n                </Text>\n                {newAcls && newAcls?.length > 0 && (\n                  <Text component={TextVariants.small}>\n                    {t(\"all_fields_required\")}\n                  </Text>\n                )}\n              </TextContent>\n            </FormGroup>\n            <AssignPermissions\n              setIsNameValid={setIsNameValid}\n              submitted={submitted}\n              onAddManualPermissions={onAddManualPermissions}\n              onAddProduceTopicShortcut={onAddProduceTopicShortcut}\n              onConsumeTopicShortcut={onConsumeTopicShortcut}\n              onManageAccessShortcut={onManageAccessShortcut}\n              onDelete={onDeleteNewAcl}\n              topicNameOptions={topicFilter}\n              consumerGroupNameOptions={consumerGroupsFilter}\n              addedAcls={newAcls}\n              kafkaName={kafkaName}\n              setAddedAcls={setNewAcls}\n            />\n          </ExpandableSection>\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const EmptyStateInitialLoading: VoidFunctionComponent = () => {\n  return (\n    <PageSection isFilled={true}>\n      <EmptyState variant={EmptyStateVariant.xs}>\n        <EmptyStateBody data-chromatic=\"ignore\">\n          <AppServicesLoading />\n        </EmptyStateBody>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  PageSection,\n  Title,\n} from \"@patternfly/react-core\";\nimport { TachometerAltIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\n\nexport const EmptyStateMetricsUnavailable: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <PageSection isFilled={true}>\n      <EmptyState variant={EmptyStateVariant.xs}>\n        <EmptyStateIcon icon={TachometerAltIcon} />\n        <Title headingLevel=\"h3\" size=\"lg\">\n          {t(\"metrics:empty_state_no_data_title\")}\n        </Title>\n        <EmptyStateBody>{t(\"metrics:empty_state_no_data_body\")}</EmptyStateBody>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import { Grid, GridItem, PageSection } from \"@patternfly/react-core\";\nimport type { FunctionComponent, ReactElement } from \"react\";\n\ntype MetricsLayoutProps = {\n  metricsLagAlert: ReactElement;\n  topicsKpi: ReactElement;\n  topicPartitionsKpi: ReactElement;\n  consumerGroupKpi: ReactElement;\n  diskSpaceMetrics: ReactElement;\n  topicMetrics: ReactElement;\n};\nexport const MetricsLayout: FunctionComponent<MetricsLayoutProps> = ({\n  metricsLagAlert,\n  topicsKpi,\n  topicPartitionsKpi,\n  consumerGroupKpi,\n  diskSpaceMetrics,\n  topicMetrics,\n}) => {\n  return (\n    <PageSection\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n      padding={{ default: \"noPadding\" }}\n      className={\n        \"pf-u-px-lg-on-xl pf-u-pt-sm-on-xl pf-u-pb-lg-on-xl pf-u-px-md pf-u-pb-md\"\n      }\n    >\n      <Grid hasGutter>\n        <GridItem>{metricsLagAlert}</GridItem>\n        <GridItem sm={4}>{topicsKpi}</GridItem>\n        <GridItem sm={4}>{topicPartitionsKpi}</GridItem>\n        <GridItem sm={4}>{consumerGroupKpi}</GridItem>\n        <GridItem lg={6}>{diskSpaceMetrics}</GridItem>\n        <GridItem lg={6}>{topicMetrics}</GridItem>\n      </Grid>\n    </PageSection>\n  );\n};\n","import { CardBody, Bullseye, Spinner } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\n\nexport const CardBodyLoading: FunctionComponent = () => (\n  <CardBody>\n    <Bullseye>\n      <Spinner isSVG data-chromatic=\"ignore\" />\n    </Bullseye>\n  </CardBody>\n);\n","import { DurationOptions } from \"./types\";\n\nexport const timeIntervalsMapping = {\n  [DurationOptions.Last5minutes]: {\n    interval: 1 * 60,\n    ticks: 6,\n    showDate: false,\n  },\n  [DurationOptions.Last15minutes]: {\n    interval: 3 * 60,\n    ticks: 6,\n    showDate: false,\n  },\n  [DurationOptions.Last30minutes]: {\n    interval: 5 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last1hour]: { interval: 10 * 60, ticks: 6, showDate: false },\n  [DurationOptions.Last3hours]: {\n    interval: 30 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last6hours]: {\n    interval: 1 * 60 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last12hours]: {\n    interval: 2 * 60 * 60,\n    ticks: 7,\n    showDate: false,\n  },\n  [DurationOptions.Last24hours]: {\n    interval: 4 * 60 * 60,\n    ticks: 7,\n    showDate: true,\n  },\n  [DurationOptions.Last2days]: {\n    interval: 8 * 60 * 60,\n    ticks: 7,\n    showDate: true,\n  },\n  [DurationOptions.Last7days]: {\n    interval: 24 * 60 * 60,\n    ticks: 8,\n    showDate: true,\n  },\n} as const;\n\nexport const chartHeight = 350;\nexport const chartPadding = {\n  bottom: 110, // Adjusted to accomodate legend\n  left: 120,\n  right: 40,\n  top: 10,\n};\n","import { Flex, FlexItem, Skeleton } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const ChartSkeletonLoader: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <Flex direction={{ default: \"column\" }} data-chromatic=\"ignore\">\n      <FlexItem>\n        <Skeleton\n          height={`${chartHeight - chartPadding.bottom}px`}\n          screenreaderText={t(\"common:skeleton_loader_screenreader_text\")}\n        />\n      </FlexItem>\n      <FlexItem>\n        <Skeleton height={`${chartPadding.bottom / 2 - 12.5}px`} width=\"20%\" />\n      </FlexItem>\n      <FlexItem>\n        <Skeleton height={`${chartPadding.bottom / 2 - 12.5}px`} width=\"40%\" />\n      </FlexItem>\n    </Flex>\n  );\n};\n","import type { RefObject } from \"react\";\nimport { useEffect, useLayoutEffect, useRef, useState } from \"react\";\n\nexport function useChartWidth(): [RefObject<HTMLDivElement>, number] {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number>(0);\n\n  const handleResize = () =>\n    containerRef.current && setWidth(containerRef.current.clientWidth);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return [containerRef, width];\n}\n","import byteSize from \"byte-size\";\nimport { fromUnixTime, sub } from \"date-fns\";\nimport { formatInTimeZone } from \"date-fns-tz\";\nimport { timeIntervalsMapping } from \"../consts\";\nimport type { DurationOptions } from \"../types\";\n\nexport function formatBytes(bytes: number): string {\n  return byteSize(bytes, { units: \"iec\" }).toString();\n}\n\nexport const shouldShowDate = (timeDuration: DurationOptions): boolean => {\n  return timeIntervalsMapping[timeDuration].showDate;\n};\n\nexport const dateToChartValue = (\n  timestamp: number,\n  { showDate }: { showDate: boolean } = { showDate: false }\n): string => {\n  const date = fromUnixTime(timestamp / 1000);\n  return formatInTimeZone(date, \"utc\", showDate ? \"HH:mm'\\n'MMM dd\" : \"HH:mm\");\n};\n\nexport function timestampsToTicks(\n  timestamps: string[],\n  duration: DurationOptions\n): number[] {\n  const allTimestamps = [...timestamps];\n  allTimestamps.sort();\n  const mostRecentTs =\n    parseInt(allTimestamps[allTimestamps.length - 1]) || Date.now();\n  return new Array(\n    Math.max(timeIntervalsMapping[duration].ticks, allTimestamps.length)\n  )\n    .fill(mostRecentTs)\n    .map((d: number, index) =>\n      sub(new Date(d), {\n        seconds: timeIntervalsMapping[duration].interval * index,\n      }).getTime()\n    );\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartArea,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartThreshold,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_black_500,\n  chart_color_blue_300,\n} from \"@patternfly/react-tokens\";\nimport type { ReactElement, VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { DurationOptions, TimeSeriesMetrics } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport { dateToChartValue, shouldShowDate, timestampsToTicks } from \"./utils\";\n\ntype ChartData = {\n  areaColor: string;\n  softLimitColor: string;\n  area: BrokerChartData[];\n  softLimit: BrokerChartData[];\n};\n\ntype BrokerChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol?: {\n    fill?: string;\n    type?: string;\n  };\n};\n\ntype ChartLinearWithOptionalLimitProps = {\n  metrics: TimeSeriesMetrics;\n  duration: DurationOptions;\n  chartName: string;\n  xLabel?: string;\n  yLabel?: string;\n  usageLimit?: number;\n  formatValue?: (d: number) => string;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\n\nexport const ChartLinearWithOptionalLimit: VoidFunctionComponent<\n  ChartLinearWithOptionalLimitProps\n> = ({\n  metrics,\n  duration,\n  chartName,\n  xLabel,\n  yLabel,\n  usageLimit,\n  formatValue = (d) => `${d}`,\n  isLoading,\n  emptyState,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getChartData(\n    metrics,\n    duration,\n    chartName,\n    t(\"metrics:limit\"),\n    usageLimit\n  );\n\n  const hasMetrics = Object.keys(metrics).length > 0;\n  const showDate = shouldShowDate(duration);\n\n  switch (true) {\n    case isLoading:\n      return <ChartSkeletonLoader />;\n    case !hasMetrics:\n      return emptyState;\n    default: {\n      const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n        `${datum.name}: ${formatValue(datum.y)}`;\n      return (\n        <div ref={containerRef}>\n          <Chart\n            ariaTitle={chartName}\n            containerComponent={\n              <ChartVoronoiContainer labels={labels} constrainToVisibleArea />\n            }\n            legendPosition=\"bottom-left\"\n            legendComponent={\n              <ChartLegend\n                orientation={\"horizontal\"}\n                data={legendData}\n                itemsPerRow={itemsPerRow}\n              />\n            }\n            height={chartHeight}\n            padding={chartPadding}\n            themeColor={ChartThemeColor.multiUnordered}\n            width={width}\n            legendAllowWrap={true}\n          >\n            <ChartAxis\n              label={\"\\n\" + (xLabel || t(\"metrics:axis-label-time\") || \"\")}\n              tickValues={tickValues}\n              tickFormat={(d: number) =>\n                dateToChartValue(d, {\n                  showDate,\n                })\n              }\n            />\n            <ChartAxis\n              label={\"\\n\\n\\n\\n\\n\" + (yLabel || chartName)}\n              dependentAxis\n              tickFormat={formatValue}\n            />\n            <ChartGroup>\n              {chartData.map((value, index) => (\n                <ChartArea\n                  key={`chart-area-${index}`}\n                  data={value.area}\n                  style={{\n                    data: {\n                      // TODO: check if this is needed\n                      // stroke: value.color,\n                    },\n                  }}\n                />\n              ))}\n            </ChartGroup>\n            <ChartThreshold\n              key={`chart-softlimit`}\n              data={chartData[0].softLimit}\n              style={{\n                data: {\n                  stroke: chartData[0].softLimitColor,\n                },\n              }}\n            />\n          </Chart>\n        </div>\n      );\n    }\n  }\n};\n\nfunction getChartData(\n  metrics: TimeSeriesMetrics,\n  duration: number,\n  lineLabel: string,\n  limitLabel: string,\n  usageLimit?: number\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData = [\n    usageLimit\n      ? {\n          name: limitLabel,\n          symbol: { fill: chart_color_black_500.value, type: \"threshold\" },\n        }\n      : undefined,\n    { name: lineLabel, symbol: { fill: chart_color_blue_300.value } },\n  ].filter((d) => !!d) as Array<LegendData>;\n\n  const areaColor = chart_color_blue_300.value;\n  const softLimitColor = chart_color_black_500.value;\n  const chartData: Array<ChartData> = [];\n  const area: Array<BrokerChartData> = [];\n  const softLimit: Array<BrokerChartData> = [];\n\n  Object.entries(metrics).map(([timestamp, bytes]) => {\n    area.push({ name: lineLabel, x: parseInt(timestamp, 10), y: bytes });\n  });\n  chartData.push({ areaColor, softLimitColor, area, softLimit });\n\n  const tickValues = timestampsToTicks(Object.keys(metrics), duration);\n\n  if (usageLimit) {\n    tickValues.forEach((timestamp) =>\n      softLimit.push({\n        name: limitLabel,\n        x: timestamp,\n        y: usageLimit,\n      })\n    );\n  }\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport { ChartLine } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_cyan_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { PartitionBytesMetric, PartitionSelect } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\nconst colors = [chart_color_cyan_300.value, chart_color_blue_300.value];\n\ntype ChartData = {\n  color: string;\n  area: PartitionChartData[];\n};\n\ntype PartitionChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n};\n\nexport type ChartLogSizePerPartitionProps = {\n  partitions: PartitionBytesMetric;\n  topic: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n  selectedPartition: PartitionSelect;\n};\nexport const ChartLogSizePerPartition: FunctionComponent<\n  ChartLogSizePerPartitionProps\n> = ({\n  partitions,\n  topic,\n  duration,\n  isLoading,\n  emptyState,\n  selectedPartition,\n}) => {\n    const { t } = useTranslation();\n    const [containerRef, width] = useChartWidth();\n\n    const { chartData, legendData, tickValues } = getChartData(\n      partitions,\n      topic,\n      duration,\n      selectedPartition\n    );\n\n    const hasMetrics = Object.keys(partitions).length > 0;\n\n    const showDate = shouldShowDate(duration);\n\n    return (\n      <div ref={containerRef} style={{ marginTop: \"-30px\", height: \"700px\", width: \"650px\" }}>\n        {(() => {\n          switch (true) {\n            case isLoading:\n              return <ChartSkeletonLoader />;\n            case !hasMetrics:\n              return emptyState;\n            default: {\n              const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n                `${datum.name}: ${formatBytes(datum.y)}`;\n\n              return (\n                <Chart\n                  ariaTitle={t(\"metrics:log_size_per_partition\")}\n                  containerComponent={\n                    <ChartVoronoiContainer\n                      labels={labels}\n                      constrainToVisibleArea\n                    />\n                  }\n                  legendPosition=\"bottom-left\"\n                  legendComponent={<ChartLegend data={legendData} />}\n                  height={chartHeight}\n                  padding={chartPadding}\n                  themeColor={ChartThemeColor.multiOrdered}\n                  width={width}\n                  legendAllowWrap={true}\n                >\n                  <ChartAxis\n                    label={\"\\n\" + t(\"metrics:axis-label-time\")}\n                    tickValues={tickValues}\n                    tickFormat={(d: number) =>\n                      dateToChartValue(d, {\n                        showDate,\n                      })\n                    }\n                  />\n                  <ChartAxis\n                    label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n                    dependentAxis\n                    tickFormat={formatBytes}\n                  />\n                  <ChartGroup>\n                    {chartData.map((value, index) => (\n                      <ChartLine key={`chart-area-${index}`} data={value.area} />\n                    ))}\n                  </ChartGroup>\n                </Chart>\n              );\n            }\n          }\n        })()}\n      </div>\n    );\n  };\n\nexport function getChartData(\n  partitions: PartitionBytesMetric,\n  topic: string | undefined,\n  duration: number,\n  selectedPartition: PartitionSelect\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n\n  const top50Partition = Object.entries(partitions).sort((a, b) => {\n    const aValue = Object.values(a[1]).reduce((sum, val) => sum + val, 0);\n    const bValue = Object.values(b[1]).reduce((sum, val) => sum + val, 0);\n    return bValue - aValue;\n  });\n\n  selectedPartition === \"Top10\"\n    ? top50Partition.slice(0, 10).map(([partition, dataMap], index) => {\n      const name = topic ? `${topic} / ${partition}` : partition;\n      const color = colors[index];\n      legendData.push({\n        name,\n      });\n      const area: Array<PartitionChartData> = [];\n\n      Object.entries(dataMap).map(([timestamp, value]) => {\n        area.push({ name, x: parseInt(timestamp, 10), y: value });\n      });\n      chartData.push({ color, area });\n    })\n    : top50Partition\n      .slice(0, 20)\n      .sort((a, b) => {\n        const dataMapAValues = Object.values(a[1]);\n        const dataMapBValues = Object.values(b[1]);\n        const aValueSum = dataMapAValues.reduce((sum, val) => sum + val, 0);\n        const bValueSum = dataMapBValues.reduce((sum, val) => sum + val, 0);\n        return bValueSum - aValueSum;\n      })\n      .sort((a, b) => b[1][1] - a[1][1])\n      .slice(0, 20)\n      .map(([partition, dataMap], index) => {\n        const name = topic ? `${topic} / ${partition}` : partition;\n        const color = colors[index];\n        legendData.push({\n          name,\n        });\n        const area: Array<PartitionChartData> = [];\n\n        Object.entries(dataMap).map(([timestamp, value]) => {\n          area.push({ name, x: parseInt(timestamp, 10), y: value });\n        });\n        chartData.push({ color, area });\n      });\n\n  const allTimestamps = Array.from(\n    new Set(Object.values(partitions).flatMap((m) => Object.keys(m)))\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import { Popover } from \"@patternfly/react-core\";\nimport { OutlinedQuestionCircleIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\ntype ChartPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ChartPopover: VoidFunctionComponent<ChartPopoverProps> = ({\n  title,\n  description,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Popover\n      aria-label={title}\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon\n        aria-label={t(\"metrics:chart-popover-icon-screenreader-text\", {\n          title,\n        })}\n      />\n    </Popover>\n  );\n};\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartLine,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_green_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { chartHeight, chartPadding, timeIntervalsMapping } from \"../consts\";\nimport type { TimeSeriesMetrics } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\ntype ChartData = {\n  color: string;\n  line: TopicChartData[];\n};\n\ntype TopicChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol: {\n    fill: string;\n    type?: string;\n  };\n};\n\ntype ChartTotalBytesProps = {\n  incomingTopicsData: TimeSeriesMetrics;\n  outgoingTopicsData: TimeSeriesMetrics;\n  selectedTopic: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n};\nexport const ChartTotalBytes: FunctionComponent<ChartTotalBytesProps> = ({\n  incomingTopicsData,\n  outgoingTopicsData,\n  selectedTopic,\n  duration,\n  isLoading,\n  emptyState,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const itemsPerRow = width && width > 650 ? 6 : 3;\n\n  const { chartData, legendData, tickValues } = getBytesChartData(\n    incomingTopicsData,\n    outgoingTopicsData,\n    duration,\n    selectedTopic\n      ? t(\"metrics:incoming_bytes\", {\n          topic: selectedTopic,\n        })\n      : t(\"metrics:incoming_bytes_all_topics\"),\n    selectedTopic\n      ? t(\"metrics:outgoing_bytes\", {\n          topic: selectedTopic,\n        })\n      : t(\"metrics:outgoing_bytes_all_topics\")\n  );\n\n  const hasMetrics =\n    Object.keys(incomingTopicsData).length > 0 ||\n    Object.keys(outgoingTopicsData).length > 0;\n\n  const showDate = shouldShowDate(duration);\n\n  switch (true) {\n    case isLoading:\n      return <ChartSkeletonLoader />;\n    case !hasMetrics:\n      return emptyState;\n    default: {\n      const labels: ChartVoronoiContainerProps[\"labels\"] =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n        ({ datum }) => `${datum.name}: ${formatBytes(datum.y)}`;\n      return (\n        <div ref={containerRef}>\n          <Chart\n            ariaTitle={t(\"metrics:total_bytes\")}\n            containerComponent={\n              <ChartVoronoiContainer labels={labels} constrainToVisibleArea />\n            }\n            legendAllowWrap={true}\n            legendPosition=\"bottom-left\"\n            legendComponent={\n              <ChartLegend data={legendData} itemsPerRow={itemsPerRow} />\n            }\n            height={chartHeight}\n            padding={chartPadding}\n            themeColor={ChartThemeColor.multiUnordered}\n            width={width}\n          >\n            <ChartAxis\n              label={\"\\n\" + t(\"metrics:axis-label-time\")}\n              tickValues={tickValues}\n              tickCount={timeIntervalsMapping[duration].ticks}\n              tickFormat={(d: number) =>\n                dateToChartValue(d, {\n                  showDate,\n                })\n              }\n            />\n            <ChartAxis\n              label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n              dependentAxis\n              tickFormat={formatBytes}\n            />\n            <ChartGroup>\n              {chartData.map((value, index) => (\n                <ChartLine\n                  key={`chart-line-${index}`}\n                  data={value.line}\n                  style={{\n                    data: {\n                      stroke: value.color,\n                    },\n                  }}\n                />\n              ))}\n            </ChartGroup>\n          </Chart>\n        </div>\n      );\n    }\n  }\n};\n\nexport function getBytesChartData(\n  incomingTopic: TimeSeriesMetrics,\n  outgoingTopic: TimeSeriesMetrics,\n  duration: number,\n  incomingTopicName: string,\n  outgoingTopicName: string\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n\n  const incomingLine = metricsToLine(incomingTopic, incomingTopicName);\n  if (incomingLine.length > 0) {\n    const color = chart_color_blue_300.value;\n    chartData.push({ color, line: incomingLine });\n    legendData.push({\n      name: incomingTopicName,\n      symbol: {\n        fill: color,\n      },\n    });\n  }\n\n  const outgoingLine = metricsToLine(outgoingTopic, outgoingTopicName);\n  if (outgoingLine.length > 0) {\n    const color = chart_color_green_300.value;\n    chartData.push({ color, line: outgoingLine });\n    legendData.push({\n      name: outgoingTopicName,\n      symbol: {\n        fill: color,\n      },\n    });\n  }\n  const allTimestamps = Array.from(\n    new Set([...Object.keys(incomingTopic), ...Object.keys(outgoingTopic)])\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n\nexport function metricsToLine(\n  metrics: TimeSeriesMetrics,\n  name: string\n): Array<TopicChartData> {\n  const line: Array<TopicChartData> = [];\n\n  Object.entries(metrics).map(([timestamp, bytes]) => {\n    line.push({ name, x: parseInt(timestamp, 10), y: bytes });\n  });\n  return line;\n}\n","import {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateNoMetricsData: FunctionComponent = () => {\n  const { t } = useTranslation([\"metrics\"]);\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon\n        icon={ExclamationTriangleIcon}\n        color=\"var(--pf-global--warning-color--100)\"\n      />\n      <Title headingLevel=\"h3\" size=\"md\">\n        {t(\"metric_not_available\")}\n      </Title>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport const EmptyStateNoMetricsDataForSelection: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_metrics_data_title\")}\n      </Title>\n      <EmptyStateBody>\n        {t(\"metrics:empty_state_no_metrics_data_body\")}\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { WrenchIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\ntype EmptyStateNoTopicsProps = {\n  onCreateTopic?: () => void;\n};\nexport const EmptyStateNoTopics: FunctionComponent<EmptyStateNoTopicsProps> = ({\n  onCreateTopic,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={WrenchIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_topics_title\")}\n      </Title>\n      <EmptyStateBody>{t(\"metrics:empty_state_no_topics_body\")}</EmptyStateBody>\n      {onCreateTopic && (\n        <Button\n          ouiaId=\"button-create\"\n          variant=\"primary\"\n          onClick={onCreateTopic}\n        >\n          {t(\"metrics:empty_state_no_topics_create_topic\")}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport { Trans, useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\n\nexport const EmptyStateNoTopicSelected: VoidFunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={FilterIcon} />\n      <Title headingLevel=\"h3\" size=\"lg\">\n        {t(\"metrics:empty_state_no_filter_title\")}\n      </Title>\n      <EmptyStateBody>\n        <Trans\n          ns={\"metrics\"}\n          i18nKey={\"empty_state_no_filter_body\"}\n          components={{ bold: <strong /> }}\n        />\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { PartitionSelect } from \"../types\";\n\ntype FilterByPartitionProps = {\n  partitionValue: PartitionSelect;\n  onSetSelectedPartition: (value: PartitionSelect) => void;\n};\n\nexport const FilterByPartition: VoidFunctionComponent<\n  FilterByPartitionProps\n> = ({ partitionValue, onSetSelectedPartition }) => {\n  const { t } = useTranslation(\"metrics\");\n\n  const [ispartitionSelectOpen, setIspartitionSelectOpen] =\n    useState<boolean>(false);\n\n  const onBrokerToggle = (ispartitionSelectOpen: boolean) => {\n    setIspartitionSelectOpen(ispartitionSelectOpen);\n  };\n\n  const partitionSelectOption: { [key in PartitionSelect]: string } = {\n    Top10: t(\"top10_partitions\"),\n    Top20: t(\"top20_partitions\"),\n  };\n\n  const onBrokerSelect: SelectProps[\"onSelect\"] = (_, partition) => {\n    onSetSelectedPartition(partition as PartitionSelect);\n    setIspartitionSelectOpen(false);\n  };\n\n  const partitionOptions = () => {\n    return Object.entries(partitionSelectOption).map(([value, label]) => (\n      <SelectOption key={value} value={value}>\n        {label}\n      </SelectOption>\n    ));\n  };\n\n  return (\n    <ToolbarItem>\n      <Select\n        variant={SelectVariant.single}\n        isOpen={ispartitionSelectOpen}\n        onToggle={onBrokerToggle}\n        onSelect={onBrokerSelect}\n        selections={partitionValue}\n        position=\"left\"\n        placeholderText={t(\"top10_partitions\")}\n        aria-label={t(\"filter-by-partitions\")}\n      >\n        {partitionOptions()}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  ToolbarItem,\n  Select,\n  SelectVariant,\n  SelectGroup,\n  SelectOption,\n} from \"@patternfly/react-core\";\nimport { DurationOptions } from \"../types\";\n\nexport const DurationOptionsMap = {\n  [DurationOptions.Last5minutes]: \"Last 5 minutes\",\n  [DurationOptions.Last15minutes]: \"Last 15 minutes\",\n  [DurationOptions.Last30minutes]: \"Last 30 minutes\",\n  [DurationOptions.Last1hour]: \"Last 1 hour\",\n  [DurationOptions.Last3hours]: \"Last 3 hours\",\n  [DurationOptions.Last6hours]: \"Last 6 hours\",\n  [DurationOptions.Last12hours]: \"Last 12 hours\",\n  [DurationOptions.Last24hours]: \"Last 24 hours\",\n  [DurationOptions.Last2days]: \"Last 2 days\",\n  [DurationOptions.Last7days]: \"Last 7 days\",\n} as const;\n\ntype FilterByTimeProps = {\n  duration: DurationOptions;\n  onDurationChange: (value: DurationOptions) => void;\n  keyText: string;\n  ariaLabel: string;\n  disableToolbar: boolean;\n};\n\nexport const FilterByTime: VoidFunctionComponent<FilterByTimeProps> = ({\n  duration,\n  keyText,\n  ariaLabel,\n  disableToolbar,\n  onDurationChange,\n}) => {\n  const [isTimeSelectOpen, setIsTimeSelectOpen] = useState<boolean>(false);\n\n  const onTimeToggle = (isTimeSelectOpen: boolean) => {\n    setIsTimeSelectOpen(isTimeSelectOpen);\n  };\n\n  const onTimeSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    const mapping = Object.entries(DurationOptionsMap).find(\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ([_, value]) => value === selection\n    );\n    if (mapping) {\n      onDurationChange(parseInt(mapping[0], 10) as DurationOptions);\n    }\n    setIsTimeSelectOpen(false);\n  };\n\n  const timeOptions = (keyText: string) => [\n    <SelectGroup label=\"Relative time ranges\" key={`${keyText}-group`}>\n      {Object.values(DurationOptionsMap).map((label, idx) => (\n        <SelectOption key={`${keyText}-${idx}`} value={label} />\n      ))}\n    </SelectGroup>,\n  ];\n  const ariaId = `filter-by-time-${Date.now()}`;\n  return (\n    <ToolbarItem>\n      <label hidden id={ariaId}>\n        {ariaLabel}\n      </label>\n      <Select\n        variant={SelectVariant.single}\n        aria-labelledby={ariaId}\n        onToggle={onTimeToggle}\n        onSelect={onTimeSelect}\n        selections={DurationOptionsMap[duration]}\n        isOpen={isTimeSelectOpen}\n        isDisabled={disableToolbar}\n      >\n        {timeOptions(keyText)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport {\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { FilterIcon } from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport \"./FilterByTopic.css\";\n\nconst widths = {\n  default: \"150px\",\n  sm: \"150px\",\n  md: \"150px\",\n  lg: \"200px\",\n  xl: \"200px\",\n  \"2xl\": \"200px\",\n};\n\ntype FilterByTopicProps = {\n  selectedTopic: string | undefined;\n  topicList: string[];\n  disableToolbar: boolean;\n  ariaLabel: string;\n  onSetSelectedTopic: (value: string | undefined) => void;\n};\n\nexport const FilterByTopic: VoidFunctionComponent<FilterByTopicProps> = ({\n  selectedTopic,\n  topicList = [],\n  disableToolbar,\n  ariaLabel,\n  onSetSelectedTopic,\n}) => {\n  const { t } = useTranslation();\n  const [isTopicSelectOpen, setIsTopicSelectOpen] = useState<boolean>(false);\n  const [selectKey, setSelectKey] = useState(Math.random());\n\n  useEffect(() => setSelectKey(Math.random()), [topicList]);\n\n  const allTopicsLabel = t(\"metrics:all_topics\");\n\n  const onTopicToggle = (isTopicSelectOpen: boolean) => {\n    setIsTopicSelectOpen(isTopicSelectOpen);\n  };\n\n  const onTopicSelect: SelectProps[\"onSelect\"] = (_, selection) => {\n    selection !== allTopicsLabel\n      ? onSetSelectedTopic(selection as string)\n      : onSetSelectedTopic(undefined);\n    setIsTopicSelectOpen(false);\n  };\n\n  const onTopicFilter = (_: unknown, textInput: string) => {\n    const filteredTopics =\n      topicList.filter((topic) => topic.indexOf(textInput) != -1) || [];\n    return topicOptions(filteredTopics);\n  };\n\n  const topicOptions = (topicList: string[]) => [\n    <SelectOption key={\"topic-filter-0\"} value={allTopicsLabel} />,\n    <SelectGroup label=\"Filter by topic\" key=\"topic-filter-group\">\n      {topicList.map((topic, index) => (\n        <SelectOption\n          key={`topic-filter-${index + 1}`}\n          value={topic}\n          title={topic}\n        />\n      ))}\n    </SelectGroup>,\n  ];\n\n  const isDisabled = disableToolbar || topicList.length === 0;\n  const ariaId = `filter-by-topic-${Date.now()}`;\n\n  return (\n    <ToolbarItem widths={widths}>\n      <label hidden id={ariaId}>\n        {ariaLabel}\n      </label>\n      <Select\n        key={selectKey}\n        variant={SelectVariant.single}\n        onToggle={onTopicToggle}\n        onSelect={onTopicSelect}\n        selections={selectedTopic || allTopicsLabel}\n        isOpen={isTopicSelectOpen}\n        placeholderText={\n          <>\n            <FilterIcon /> {allTopicsLabel}\n          </>\n        }\n        aria-labelledby={ariaId}\n        onFilter={onTopicFilter}\n        isGrouped\n        hasInlineFilter\n        isDisabled={isDisabled}\n        position=\"left\"\n        className={\"appserv-metrics-filterbytopic\"}\n      >\n        {topicOptions(topicList)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import { ToolbarItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { FormatDate, RefreshButton } from \"@rhoas/app-services-ui-components\";\n\nexport type ToolbarRefreshProps = {\n  isRefreshing: boolean;\n  lastUpdated: Date | undefined;\n  ariaLabel: string;\n  onRefresh: () => void;\n};\n\nexport const ToolbarRefresh: VoidFunctionComponent<ToolbarRefreshProps> = ({\n  isRefreshing,\n  lastUpdated = new Date(),\n  ariaLabel,\n  onRefresh,\n}) => {\n  const { t } = useTranslation([\"metrics\"]);\n\n  return (\n    <>\n      <ToolbarItem>\n        <RefreshButton\n          ariaLabel={ariaLabel}\n          onClick={onRefresh}\n          isRefreshing={isRefreshing}\n        />\n      </ToolbarItem>\n      <ToolbarItem\n        alignment={{ default: \"alignRight\" }}\n        style={{ color: \"var(--pf-global--Color--200)\" }}\n      >\n        <div className=\"pf-u-font-size-xs\">\n          {isRefreshing ? (\n            t(\"metrics:refreshing\")\n          ) : (\n            <>\n              {t(\"metrics:last-refresh\")}\n              <br />\n              <FormatDate date={lastUpdated} format=\"distanceToNow\" />\n              {t(\"metrics:last-refresh-distance\")}\n            </>\n          )}\n        </div>\n      </ToolbarItem>\n    </>\n  );\n};\n","import {\n  CardHeader,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { DurationOptions } from \"../types\";\nimport { FilterByTime } from \"./FilterByTime\";\nimport { FilterByTopic } from \"./FilterByTopic\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarRefresh } from \"./ToolbarRefresh\";\n\ntype ToolbarTopicsMetricsProps = {\n  title: string;\n  selectedTopic: string | undefined;\n  topicList: string[];\n  duration: DurationOptions;\n  isDisabled: boolean;\n  onSetTimeDuration: (value: DurationOptions) => void;\n  onSetSelectedTopic: (value: string | undefined) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\nexport const ToolbarTopicsMetrics: FunctionComponent<\n  ToolbarTopicsMetricsProps\n> = ({\n  title,\n  selectedTopic,\n  topicList,\n  duration,\n  isDisabled,\n  isRefreshing,\n  lastUpdated,\n  onSetTimeDuration,\n  onRefresh,\n  onSetSelectedTopic,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <CardHeader>\n        <CardTitle component=\"h2\">{title}</CardTitle>\n      </CardHeader>\n      <Divider />\n      <Toolbar>\n        <ToolbarContent>\n          <FilterByTopic\n            ariaLabel={t(\"metrics:topics_filter_by_topic\")}\n            selectedTopic={selectedTopic}\n            onSetSelectedTopic={onSetSelectedTopic}\n            topicList={topicList}\n            disableToolbar={isDisabled}\n          />\n          <FilterByTime\n            ariaLabel={t(\"metrics:topics_filter_by_time\")}\n            duration={duration}\n            onDurationChange={onSetTimeDuration}\n            disableToolbar={isDisabled}\n            keyText={\"topic-metrics-time-filter\"}\n          />\n          <ToolbarRefresh\n            isRefreshing={isRefreshing}\n            lastUpdated={lastUpdated}\n            onRefresh={onRefresh}\n            ariaLabel={t(\"metrics:topics_refresh\")}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <Divider />\n    </>\n  );\n};\n","import {\n  Card,\n  CardBody,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type {\n  DurationOptions,\n  PartitionBytesMetric,\n  PartitionSelect,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { CardBodyLoading } from \"./CardBodyLoading\";\nimport { ChartLinearWithOptionalLimit } from \"./ChartLinearWithOptionalLimit\";\nimport { ChartLogSizePerPartition } from \"./ChartLogSizePerPartition\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { ChartTotalBytes } from \"./ChartTotalBytes\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\nimport { EmptyStateNoMetricsDataForSelection } from \"./EmptyStateNoMetricsDataForSelection\";\nimport { EmptyStateNoTopics } from \"./EmptyStateNoTopics\";\nimport { EmptyStateNoTopicSelected } from \"./EmptyStateNoTopicSelected\";\nimport { FilterByPartition } from \"./FilterByPartition\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarTopicsMetrics } from \"./ToolbarTopicsMetrics\";\n\ntype CardTopicsMetricsProps = {\n  topics: string[];\n  incomingTopicsData: TimeSeriesMetrics;\n  outgoingTopicsData: TimeSeriesMetrics;\n  partitions: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n  duration: DurationOptions;\n  backendUnavailable: boolean;\n  isInitialLoading: boolean;\n  isLoading: boolean;\n  isJustCreated: boolean;\n  selectedTopic: string | undefined;\n  onCreateTopic: () => void;\n  onSelectedTopic: (topic: string | undefined) => void;\n  onDurationChange: (duration: DurationOptions) => void;\n  onSelectedPartition: (value: PartitionSelect) => void;\n  selectedPartition: PartitionSelect;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\n\nexport const CardTopicsMetrics: FunctionComponent<CardTopicsMetricsProps> = ({\n  topics,\n  incomingTopicsData,\n  outgoingTopicsData,\n  incomingMessageRate,\n  selectedTopic,\n  duration,\n  partitions,\n  backendUnavailable,\n  isInitialLoading,\n  isLoading,\n  isRefreshing,\n  isJustCreated,\n  lastUpdated,\n  onCreateTopic,\n  onRefresh,\n  onSelectedTopic,\n  onDurationChange,\n  selectedPartition,\n  onSelectedPartition,\n}) => {\n  const { t } = useTranslation();\n  const noTopics = topics.length === 0;\n  const selectedTopicNotInList =\n    selectedTopic !== undefined &&\n    topics.find((t) => t === selectedTopic) === undefined;\n  const chartEmptyState = selectedTopicNotInList ? (\n    <EmptyStateNoMetricsDataForSelection />\n  ) : (\n    <EmptyStateNoMetricsData />\n  );\n  return (\n    <Card data-testid={\"metrics-topics\"}>\n      <ToolbarTopicsMetrics\n        title={t(\"metrics:topic_metrics\")}\n        duration={duration}\n        onSetTimeDuration={onDurationChange}\n        isDisabled={\n          backendUnavailable || isJustCreated || noTopics || isLoading\n        }\n        isRefreshing={isRefreshing}\n        selectedTopic={selectedTopic}\n        onSetSelectedTopic={onSelectedTopic}\n        onRefresh={onRefresh}\n        topicList={topics}\n        lastUpdated={lastUpdated}\n      />\n      {(() => {\n        switch (true) {\n          case isInitialLoading:\n            return <CardBodyLoading />;\n\n          case backendUnavailable:\n            return (\n              <CardBody>\n                <EmptyStateNoMetricsData />\n              </CardBody>\n            );\n\n          case isJustCreated && !noTopics:\n            return (\n              <CardBody>\n                <EmptyStateNoTopics />\n              </CardBody>\n            );\n\n          case isJustCreated && noTopics:\n            return (\n              <CardBody>\n                <EmptyStateNoTopics onCreateTopic={onCreateTopic} />\n              </CardBody>\n            );\n\n          case selectedTopic !== undefined:\n            return (\n              <>\n                <TotalBytesTitle />\n                <CardBody>\n                  <ChartTotalBytes\n                    incomingTopicsData={incomingTopicsData}\n                    outgoingTopicsData={outgoingTopicsData}\n                    selectedTopic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <IncomingMessageRate />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"metrics:topic_incoming_message_rate\")}\n                    yLabel={t(\"metrics:topic_incoming_message_rate_y_axis\")}\n                    metrics={incomingMessageRate}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <PartitionSizeTitle />\n                <CardBody>\n                  <Toolbar>\n                    <ToolbarContent>\n                      <FilterByPartition\n                        onSetSelectedPartition={onSelectedPartition}\n                        partitionValue={selectedPartition}\n                      />\n                    </ToolbarContent>\n                  </Toolbar>\n                  <ChartLogSizePerPartition\n                    partitions={partitions}\n                    topic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                    selectedPartition={selectedPartition}\n                  />\n                </CardBody>\n              </>\n            );\n\n          default:\n            return (\n              <>\n                <TotalBytesTitle />\n                <CardBody>\n                  <ChartTotalBytes\n                    incomingTopicsData={incomingTopicsData}\n                    outgoingTopicsData={outgoingTopicsData}\n                    selectedTopic={selectedTopic}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <IncomingMessageRate />\n                <CardBody>\n                  <ChartLinearWithOptionalLimit\n                    chartName={t(\"metrics:topic_incoming_message_rate\")}\n                    yLabel={t(\"metrics:topic_incoming_message_rate_y_axis\")}\n                    metrics={incomingMessageRate}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={chartEmptyState}\n                  />\n                </CardBody>\n                <Divider />\n                <PartitionSizeTitle />\n                <CardBody>\n                  <EmptyStateNoTopicSelected />\n                </CardBody>\n              </>\n            );\n        }\n      })()}\n    </Card>\n  );\n};\n\nconst TotalBytesTitle: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:total_bytes\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:total_bytes_popover_header\")}\n        description={t(\"metrics:topic_metrics_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n\nconst PartitionSizeTitle: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:partition_size\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:topic_partition_size_popover_header\")}\n        description={t(\"metrics:topic_partition_size_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n\nconst IncomingMessageRate: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <CardTitle component=\"h3\">\n      {t(\"metrics:topic_incoming_message_rate\")}{\" \"}\n      <ChartPopover\n        title={t(\"metrics:topic_incoming_message_rate_popover_header\")}\n        description={t(\"metrics:topic_incoming_message_rate_help_text\")}\n      />\n    </CardTitle>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { SelectGroup } from \"@patternfly/react-core\";\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ntype FilterByBrokerProps = {\n  selectedBroker: string | undefined;\n  brokerList: string[];\n  onSetSelectedBroker: (value: string | undefined) => void;\n  disableToolbar: boolean;\n};\n\nexport const FilterByBroker: VoidFunctionComponent<FilterByBrokerProps> = ({\n  selectedBroker,\n  brokerList,\n  onSetSelectedBroker,\n  disableToolbar,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  const [isBrokerSelectOpen, setIsBrokerSelectOpen] = useState<boolean>(false);\n\n  const onBrokerToggle = (isBrokerSelectOpen: boolean) => {\n    setIsBrokerSelectOpen(isBrokerSelectOpen);\n  };\n\n  const onBrokerSelect: SelectProps[\"onSelect\"] = (_, broker) => {\n    broker !== t(\"all_brokers\")\n      ? onSetSelectedBroker(broker as string)\n      : onSetSelectedBroker(undefined);\n    setIsBrokerSelectOpen(false);\n  };\n\n  const brokerOptions = (brokerList: string[]) => [\n    <SelectOption key={\"broker-filter-0\"} value={t(\"all_brokers\")} />,\n    <SelectGroup label=\"Filter by broker\" key=\"broker-filter-group\">\n      {brokerList.map((broker, index) => (\n        <SelectOption\n          key={`broker-filter-${index + 1}`}\n          value={broker}\n          title={broker}\n        />\n      ))}\n    </SelectGroup>,\n  ];\n\n  const isDisabled = disableToolbar || brokerList.length === 0;\n\n  return (\n    <ToolbarItem>\n      <Select\n        variant={SelectVariant.single}\n        isOpen={isBrokerSelectOpen}\n        onToggle={onBrokerToggle}\n        onSelect={onBrokerSelect}\n        selections={selectedBroker || t(\"all_brokers\")}\n        position=\"left\"\n        placeholderText={t(\"all_brokers\")}\n        aria-label={t(\"filter-by-broker\")}\n        isDisabled={isDisabled}\n      >\n        {brokerOptions(brokerList)}\n      </Select>\n    </ToolbarItem>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport {\n  CardHeader,\n  CardTitle,\n  Divider,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport { FilterByTime } from \"./FilterByTime\";\nimport { FilterByBroker } from \"./FilterByBroker\";\nimport type { DurationOptions } from \"../types\";\nimport { useTranslation } from \"react-i18next\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { ToolbarRefresh } from \"./ToolbarRefresh\";\n\ntype ToolbarKafkaInstanceMetricProps = {\n  title: string;\n  selectedBroker: string | undefined;\n  brokerList: string[];\n  isDisabled: boolean;\n  duration: DurationOptions;\n  onSetTimeDuration: (value: DurationOptions) => void;\n  onSetSelectedBroker: (value: string | undefined) => void;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\">;\nexport const ToolbarKafkaInstanceMetric: FunctionComponent<\n  ToolbarKafkaInstanceMetricProps\n> = ({\n  title,\n  isDisabled,\n  isRefreshing,\n  lastUpdated,\n  duration,\n  onSetTimeDuration,\n  onRefresh,\n  selectedBroker,\n  brokerList,\n  onSetSelectedBroker,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <CardHeader>\n        <CardTitle component=\"h2\">{title}</CardTitle>\n      </CardHeader>\n      <Divider />\n      <Toolbar>\n        <ToolbarContent>\n          <FilterByBroker\n            selectedBroker={selectedBroker}\n            brokerList={brokerList}\n            onSetSelectedBroker={onSetSelectedBroker}\n            disableToolbar={isDisabled}\n          />\n          <FilterByTime\n            ariaLabel={t(\"metrics:kafka_instance_filter_by_time\")}\n            duration={duration}\n            onDurationChange={onSetTimeDuration}\n            keyText={\"kafka-metrics-time-filter\"}\n            disableToolbar={isDisabled}\n          />\n          <ToolbarRefresh\n            isRefreshing={isRefreshing}\n            lastUpdated={lastUpdated}\n            onRefresh={onRefresh}\n            ariaLabel={t(\"metrics:kafka_instance_refresh\")}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <Divider />\n    </>\n  );\n};\n","import { ToggleGroup, ToggleGroupItem } from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { BrokerFilter } from \"../types\";\n\nexport type BrokerToggleProps = {\n  value: BrokerFilter;\n  onChange: (value: BrokerFilter) => void;\n  selectedBroker: string | undefined;\n};\n\nexport const BrokerToggle: VoidFunctionComponent<BrokerToggleProps> = ({\n  value,\n  onChange,\n  selectedBroker,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  return (\n    <ToggleGroup>\n      <ToggleGroupItem\n        text={t(\"broker_filter.total\")}\n        value=\"total\"\n        buttonId=\"total\"\n        isSelected={value === \"total\"}\n        onChange={() => onChange(\"total\")}\n        isDisabled={selectedBroker !== undefined}\n      />\n      <ToggleGroupItem\n        text={t(\"broker_filter.per_broker\")}\n        value=\"perBroker\"\n        buttonId=\"perBroker\"\n        isSelected={value === \"perBroker\" || selectedBroker !== undefined}\n        onChange={() => onChange(\"perBroker\")}\n      />\n    </ToggleGroup>\n  );\n};\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport { ChartLine } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_cyan_300,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { PartitionBytesMetric, PartitionSelect } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\nconst colors = [chart_color_cyan_300.value, chart_color_blue_300.value];\n\ntype ChartData = {\n  color: string;\n  area: PartitionChartData[];\n};\n\ntype PartitionChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n};\n\nexport type ChartPartitionLogSizePerBrokerProps = {\n  partitions: PartitionBytesMetric;\n  broker: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n  selectedPartition: PartitionSelect;\n};\nexport const ChartPartitionLogSizePerBroker: FunctionComponent<\n  ChartPartitionLogSizePerBrokerProps\n> = ({\n  partitions,\n  broker,\n  duration,\n  isLoading,\n  emptyState,\n  selectedPartition,\n}) => {\n    const { t } = useTranslation();\n    const [containerRef, width] = useChartWidth();\n\n    const { chartData, legendData, tickValues } = getChartData(\n      partitions,\n      broker,\n      duration,\n      selectedPartition\n    );\n\n    const hasMetrics = Object.keys(partitions).length > 0;\n\n    const showDate = shouldShowDate(duration);\n\n    return (\n      <div ref={containerRef} style={{ height: \"700px\" }}>\n        {(() => {\n          switch (true) {\n            case isLoading:\n              return <ChartSkeletonLoader />;\n            case !hasMetrics:\n              return emptyState;\n            default: {\n              const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n                `${datum.name}: ${formatBytes(datum.y)}`;\n\n              return (\n                <Chart\n                  ariaTitle={t(\"metrics:log_size_per_partition\")}\n                  containerComponent={\n                    <ChartVoronoiContainer\n                      labels={labels}\n                      constrainToVisibleArea\n                    />\n                  }\n                  legendPosition=\"bottom-left\"\n                  legendComponent={<ChartLegend data={legendData} />}\n                  height={chartHeight}\n                  padding={chartPadding}\n                  themeColor={ChartThemeColor.multiOrdered}\n                  width={width}\n                  legendAllowWrap={true}\n                >\n                  <ChartAxis\n                    label={\"\\n\" + t(\"metrics:axis-label-time\")}\n                    tickValues={tickValues}\n                    tickFormat={(d: number) =>\n                      dateToChartValue(d, {\n                        showDate,\n                      })\n                    }\n                  />\n                  <ChartAxis\n                    label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n                    dependentAxis\n                    tickFormat={formatBytes}\n                  />\n                  <ChartGroup>\n                    {chartData.map((value, index) => (\n                      <ChartLine key={`chart-area-${index}`} data={value.area} />\n                    ))}\n                  </ChartGroup>\n                </Chart>\n              );\n            }\n          }\n        })()}\n      </div>\n    );\n  };\n\nexport function getChartData(\n  partitions: PartitionBytesMetric,\n  broker: string | undefined,\n  duration: number,\n  selectedPartition: PartitionSelect\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData: Array<LegendData> = [];\n  const chartData: Array<ChartData> = [];\n\n  const top50Partition = Object.entries(partitions).sort((a, b) => {\n    const aValue = Object.values(a[1]).reduce((sum, val) => sum + val, 0);\n    const bValue = Object.values(b[1]).reduce((sum, val) => sum + val, 0);\n    return bValue - aValue;\n  });\n  selectedPartition === \"Top10\"\n    ? top50Partition.slice(0, 10).map(([partition, dataMap], index) => {\n      const name = broker ? ` ${partition}` : partition;\n      const color = colors[index];\n      legendData.push({\n        name,\n      });\n      const area: Array<PartitionChartData> = [];\n\n      Object.entries(dataMap).map(([timestamp, value]) => {\n        area.push({ name, x: parseInt(timestamp, 10), y: value });\n      });\n      chartData.push({ color, area });\n    })\n    : top50Partition.slice(0, 20).map(([partition, dataMap], index) => {\n      const name = broker ? `${partition}` : partition;\n      const color = colors[index];\n      legendData.push({\n        name,\n      });\n      const area: Array<PartitionChartData> = [];\n\n      Object.entries(dataMap).map(([timestamp, value]) => {\n        area.push({ name, x: parseInt(timestamp, 10), y: value });\n      });\n      chartData.push({ color, area });\n    });\n\n  const allTimestamps = Array.from(\n    new Set(Object.values(partitions).flatMap((m) => Object.keys(m)))\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import type { ChartVoronoiContainerProps } from \"@patternfly/react-charts\";\nimport { ChartLine } from \"@patternfly/react-charts\";\nimport {\n  Chart,\n  ChartAxis,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n  ChartThreshold,\n} from \"@patternfly/react-charts\";\nimport {\n  chart_color_blue_300,\n  chart_color_cyan_300,\n  chart_color_black_500,\n} from \"@patternfly/react-tokens\";\nimport type { FunctionComponent, ReactElement } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { chartHeight, chartPadding } from \"../consts\";\nimport type { BrokerBytesMetric, BrokerFilter } from \"../types\";\nimport { ChartSkeletonLoader } from \"./ChartSkeletonLoader\";\nimport { useChartWidth } from \"./useChartWidth\";\nimport {\n  dateToChartValue,\n  formatBytes,\n  shouldShowDate,\n  timestampsToTicks,\n} from \"./utils\";\n\nconst colors = [chart_color_cyan_300.value, chart_color_blue_300.value];\n\ntype ChartData = {\n  color: string;\n  softLimitColor: string;\n  area: BrokerChartData[];\n  softLimit: BrokerChartData[];\n};\n\ntype BrokerChartData = {\n  name: string;\n  x: number;\n  y: number;\n};\n\ntype LegendData = {\n  name: string;\n  symbol?: {\n    fill?: string;\n    type?: string;\n  };\n};\n\nexport type ChartUsedDiskSpaceProps = {\n  metrics: BrokerBytesMetric;\n  broker: string | undefined;\n  duration: number;\n  isLoading: boolean;\n  emptyState: ReactElement;\n  brokerToggle: BrokerFilter;\n  usageLimit?: number;\n};\nexport const ChartUsedDiskSpace: FunctionComponent<ChartUsedDiskSpaceProps> = ({\n  metrics,\n  broker,\n  duration,\n  isLoading,\n  emptyState,\n  brokerToggle,\n  usageLimit,\n}) => {\n  const { t } = useTranslation();\n  const [containerRef, width] = useChartWidth();\n\n  const { chartData, legendData, tickValues } = getChartData(\n    metrics,\n    broker,\n    duration,\n    brokerToggle,\n    t(\"metrics:limit\"),\n    usageLimit\n  );\n\n  const hasMetrics = Object.keys(metrics).length > 0;\n\n  const showDate = shouldShowDate(duration);\n\n  return (\n    <div ref={containerRef} style={{ height: \"400px\" }}>\n      {(() => {\n        switch (true) {\n          case isLoading:\n            return <ChartSkeletonLoader />;\n          case !hasMetrics:\n            return emptyState;\n          default: {\n            const labels: ChartVoronoiContainerProps[\"labels\"] = ({ datum }) =>\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-argument\n              `${datum.name}: ${formatBytes(datum.y)}`;\n\n            return (\n              <Chart\n                ariaTitle={t(\"metrics:log_size_per_partition\")}\n                containerComponent={\n                  <ChartVoronoiContainer\n                    labels={labels}\n                    constrainToVisibleArea\n                  />\n                }\n                legendPosition=\"bottom-left\"\n                legendComponent={<ChartLegend data={legendData} />}\n                height={chartHeight}\n                padding={chartPadding}\n                themeColor={ChartThemeColor.multiOrdered}\n                width={width}\n                legendAllowWrap={true}\n              >\n                <ChartAxis\n                  label={\"\\n\" + t(\"metrics:axis-label-time\")}\n                  tickValues={tickValues}\n                  tickFormat={(d: number) =>\n                    dateToChartValue(d, {\n                      showDate,\n                    })\n                  }\n                />\n                <ChartAxis\n                  label={\"\\n\\n\\n\\n\\n\" + t(\"metrics:axis-label-bytes\")}\n                  dependentAxis\n                  tickFormat={formatBytes}\n                />\n                <ChartGroup>\n                  {chartData.map((value, index) => (\n                    <ChartLine key={`chart-area-${index}`} data={value.area} />\n                  ))}\n                </ChartGroup>\n                <ChartThreshold\n                  key={`chart-softlimit`}\n                  data={chartData[0].softLimit}\n                  style={{\n                    data: {\n                      stroke: chartData[0].softLimitColor,\n                    },\n                  }}\n                />\n              </Chart>\n            );\n          }\n        }\n      })()}\n    </div>\n  );\n};\n\nexport function getChartData(\n  metrics: BrokerBytesMetric,\n  broker: string | undefined,\n  duration: number,\n  brokerToggle: BrokerFilter,\n  limitLabel: string,\n  usageLimit?: number\n): {\n  legendData: Array<LegendData>;\n  chartData: Array<ChartData>;\n  tickValues: number[];\n} {\n  const legendData = [\n    usageLimit\n      ? {\n          name: limitLabel,\n          symbol: { fill: chart_color_black_500.value, type: \"threshold\" },\n        }\n      : undefined,\n  ].filter((d) => !!d) as Array<LegendData>;\n\n  const chartData: Array<ChartData> = [];\n  const softLimit: Array<BrokerChartData> = [];\n  const softLimitColor = chart_color_black_500.value;\n\n  if (broker && metrics[broker]) {\n    const area: Array<BrokerChartData> = [];\n    const color = chart_color_blue_300.value;\n    legendData.push({ name: broker, symbol: { fill: color } });\n    Object.entries(metrics[broker]).forEach(([timestamp, bytes]) => {\n      area.push({ name: broker, x: parseInt(timestamp, 10), y: bytes });\n    });\n    chartData.push({ color, softLimitColor, area, softLimit });\n  } else if (brokerToggle === \"total\") {\n    const area: Array<BrokerChartData> = [];\n\n    const color = chart_color_blue_300.value;\n    legendData.push({ name: \"Instance\", symbol: { fill: color } });\n    metrics[brokerToggle] &&\n      Object.entries(metrics[brokerToggle]).forEach(([timestamp, bytes]) => {\n        area.push({ name: \"Instance\", x: parseInt(timestamp, 10), y: bytes });\n      });\n    chartData.push({ color, softLimitColor, area, softLimit });\n  } else {\n    Object.entries(metrics)\n      .filter((metric) => metric[0] !== \"total\")\n      .map(([metric, dataMap], index) => {\n        const name = metric;\n\n        const color = colors[index];\n        legendData.push({ name });\n        const area: Array<BrokerChartData> = [];\n\n        Object.entries(dataMap).forEach(([timestamp, value]) => {\n          area.push({ name, x: parseInt(timestamp, 10), y: value });\n        });\n        chartData.push({ color, softLimitColor, area, softLimit });\n      });\n  }\n\n  const allTimestamps = Array.from(\n    new Set(Object.values(metrics).flatMap((m) => Object.keys(m)))\n  );\n  const tickValues = timestampsToTicks(allTimestamps, duration);\n\n  if (usageLimit) {\n    tickValues.forEach((timestamp) =>\n      softLimit.push({\n        name: limitLabel,\n        x: timestamp,\n        y: usageLimit,\n      })\n    );\n  }\n  return {\n    legendData,\n    chartData,\n    tickValues,\n  };\n}\n","import {\n  Alert,\n  Card,\n  CardBody,\n  CardTitle,\n  Divider,\n  Grid,\n  GridItem,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type {\n  BrokerBytesMetric,\n  BrokerFilter,\n  DurationOptions,\n  PartitionBytesMetric,\n  PartitionSelect,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { CardBodyLoading } from \"./CardBodyLoading\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { ChartLinearWithOptionalLimit } from \"./ChartLinearWithOptionalLimit\";\nimport { EmptyStateMetricsUnavailable } from \"./EmptyStateMetricsUnavailable\";\nimport { ToolbarKafkaInstanceMetric } from \"./ToolbarKafkaInstanceMetric\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\nimport type { ToolbarRefreshProps } from \"./ToolbarRefresh\";\nimport { BrokerToggle } from \"./BrokerToggle\";\nimport { ChartPartitionLogSizePerBroker } from \"./ChartPartitionLogSizePerBroker\";\nimport { FilterByPartition } from \"./FilterByPartition\";\nimport { ChartUsedDiskSpace } from \"./CardUsedDiskSpaceMetrics\";\n\nexport type CardKafkaInstanceMetricsLimits = {\n  diskSpaceLimit: number;\n  connectionsLimit: number;\n  connectionRateLimit: number;\n};\n\nexport type CardKafkaInstanceMetricsProps = {\n  usedDiskMetrics: BrokerBytesMetric;\n  brokers: string[];\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n  duration: DurationOptions;\n  lastUpdated: Date | undefined;\n  backendUnavailable: boolean;\n  isInitialLoading: boolean;\n  isLoading: boolean;\n  isJustCreated: boolean;\n  selectedBroker: string | undefined;\n  onSelectedBroker: (broker: string | undefined) => void;\n  onDurationChange: (duration: DurationOptions) => void;\n  selectToggle: BrokerFilter;\n  onSelectedToggle: (value: BrokerFilter) => void;\n  bytesPerPartitions: PartitionBytesMetric;\n  onSelectedPartition: (value: PartitionSelect) => void;\n  selectedPartition: PartitionSelect;\n} & Omit<ToolbarRefreshProps, \"ariaLabel\"> &\n  CardKafkaInstanceMetricsLimits;\n\ntype ChartTitleProps = {\n  title: string;\n  helperText: string;\n};\n\nexport const CardKafkaInstanceMetrics: FunctionComponent<\n  CardKafkaInstanceMetricsProps\n> = ({\n  usedDiskMetrics,\n  brokers,\n  clientConnectionsMetrics,\n  connectionAttemptRateMetrics,\n  duration,\n  lastUpdated,\n  backendUnavailable,\n  isInitialLoading,\n  isLoading,\n  isRefreshing,\n  isJustCreated,\n  diskSpaceLimit,\n  connectionsLimit,\n  connectionRateLimit,\n  onRefresh,\n  onDurationChange,\n  selectedBroker,\n  onSelectedBroker,\n  selectToggle,\n  onSelectedToggle,\n  selectedPartition,\n  onSelectedPartition,\n  bytesPerPartitions,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  return (\n    <Card data-testid={\"metrics-kafka-instance\"}>\n      <ToolbarKafkaInstanceMetric\n        title={t(\"kafka_instance_metrics\")}\n        duration={duration}\n        lastUpdated={lastUpdated}\n        onSetTimeDuration={onDurationChange}\n        isDisabled={backendUnavailable || isJustCreated || isLoading}\n        isRefreshing={isRefreshing}\n        onRefresh={onRefresh}\n        selectedBroker={selectedBroker}\n        onSetSelectedBroker={onSelectedBroker}\n        brokerList={brokers}\n      />\n      {(() => {\n        switch (true) {\n          case isInitialLoading:\n            return <CardBodyLoading />;\n\n          case backendUnavailable:\n            return (\n              <CardBody>\n                <EmptyStateNoMetricsData />\n              </CardBody>\n            );\n\n          case isJustCreated:\n            return (\n              <CardBody>\n                <EmptyStateMetricsUnavailable />\n              </CardBody>\n            );\n\n          default:\n            return (\n              <>\n                <ChartTitle\n                  title={t(\"used_disk_space\")}\n                  helperText={t(\"used_disk_space_help_text\")}\n                />\n                <CardBody>\n                  <BrokerToggle\n                    value={selectToggle}\n                    onChange={onSelectedToggle}\n                    selectedBroker={selectedBroker}\n                  />\n                  <ChartUsedDiskSpace\n                    metrics={usedDiskMetrics}\n                    broker={selectedBroker}\n                    duration={duration}\n                    isLoading={isLoading}\n                    emptyState={<EmptyStateNoMetricsData />}\n                    brokerToggle={selectToggle}\n                    usageLimit={diskSpaceLimit}\n                  />\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"partition_size\")}\n                  helperText={t(\"broker_partition_size_help_text\")}\n                />\n                <CardBody>\n                  <Toolbar>\n                    <ToolbarContent>\n                      <FilterByPartition\n                        onSetSelectedPartition={onSelectedPartition}\n                        partitionValue={selectedPartition}\n                      />\n                    </ToolbarContent>\n                    <ChartPartitionLogSizePerBroker\n                      partitions={bytesPerPartitions}\n                      broker={selectedBroker}\n                      duration={duration}\n                      isLoading={isLoading}\n                      selectedPartition={selectedPartition}\n                      emptyState={<EmptyStateNoMetricsData />}\n                    />\n                  </Toolbar>\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"client_connections\")}\n                  helperText={t(\"client_connections_helper_text\")}\n                />\n                <CardBody>\n                  <Grid hasGutter>\n                    <GridItem>\n                      {selectedBroker ? (\n                        <Alert\n                          variant=\"info\"\n                          isInline\n                          title={t(\"client_connection_alert\")}\n                        />\n                      ) : null}\n                    </GridItem>\n                    <GridItem>\n                      <ChartLinearWithOptionalLimit\n                        chartName={t(\"client_connections\")}\n                        yLabel={t(\"client_connections_y_axis\")}\n                        metrics={clientConnectionsMetrics}\n                        duration={duration}\n                        usageLimit={connectionsLimit}\n                        isLoading={isLoading}\n                        emptyState={<EmptyStateNoMetricsData />}\n                      />\n                    </GridItem>\n                  </Grid>\n                </CardBody>\n                <Divider />\n                <ChartTitle\n                  title={t(\"connection_attempt_rate\")}\n                  helperText={t(\"connection_attempt_rate_help_text\")}\n                />\n                <CardBody>\n                  <Grid hasGutter>\n                    <GridItem>\n                      {selectedBroker ? (\n                        <Alert\n                          variant=\"info\"\n                          isInline\n                          title={t(\"connection_attempt_rate_alert\")}\n                        />\n                      ) : null}\n                    </GridItem>\n                    <GridItem>\n                      <ChartLinearWithOptionalLimit\n                        chartName={t(\"connection_attempt_rate\")}\n                        yLabel={t(\"connection_attempt_rate_yaxis\")}\n                        metrics={connectionAttemptRateMetrics}\n                        duration={duration}\n                        usageLimit={connectionRateLimit}\n                        isLoading={isLoading}\n                        emptyState={<EmptyStateNoMetricsData />}\n                      />\n                    </GridItem>\n                  </Grid>\n                </CardBody>\n              </>\n            );\n        }\n      })()}\n    </Card>\n  );\n};\n\nexport const ChartTitle: FunctionComponent<ChartTitleProps> = ({\n  title,\n  helperText,\n}) => {\n  return (\n    <CardTitle component=\"h3\">\n      {title} <ChartPopover title={title} description={helperText} />\n    </CardTitle>\n  );\n};\n","import {\n  Bullseye,\n  Card,\n  CardBody,\n  CardTitle,\n  Skeleton,\n  Title,\n} from \"@patternfly/react-core\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\n\ntype CardKpiProps = {\n  metric: string | number | undefined;\n  name: string;\n  popover: string;\n  isLoading: boolean;\n};\n\nexport const CardKpi: VoidFunctionComponent<CardKpiProps> = ({\n  metric,\n  name,\n  popover,\n  isLoading,\n}) => {\n  return (\n    <Card isFullHeight data-testid={name}>\n      <CardTitle component=\"h3\">\n        {name} <ChartPopover title={name} description={popover} />\n      </CardTitle>\n      <CardBody>\n        {!isLoading &&\n          (metric === undefined ? (\n            <Bullseye>\n              <EmptyStateNoMetricsData />\n            </Bullseye>\n          ) : (\n            <Title\n              headingLevel=\"h3\"\n              size=\"4xl\"\n              aria-valuetext={`${metric} ${name}`}\n            >\n              {metric}\n            </Title>\n          ))}\n        {isLoading && <Skeleton width=\"50px\" shape=\"square\" />}\n      </CardBody>\n    </Card>\n  );\n};\n","import { assign, createMachine } from \"xstate\";\nimport type {\n  BrokerBytesMetric,\n  BrokerFilter,\n  GetKafkaInstanceMetricsResponse,\n  PartitionBytesMetric,\n  PartitionSelect,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { DurationOptions } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#kafkaInstanceMetrics.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type KafkaInstanceMetricsMachineContext = {\n  lastUpdated: Date | undefined;\n\n  // from the UI elements\n  duration: DurationOptions;\n  selectedBroker: string | undefined;\n  selectedToggle: BrokerFilter;\n  selectedPartition: PartitionSelect;\n\n  // from the api\n  brokers: string[];\n  usedDiskSpaceMetrics: BrokerBytesMetric;\n  clientConnectionsMetrics: TimeSeriesMetrics;\n  connectionAttemptRateMetrics: TimeSeriesMetrics;\n  bytesPerPartitionMetrics: PartitionBytesMetric;\n  diskSpaceLimit: number | undefined;\n  connectionsLimit: number | undefined;\n  connectionRateLimit: number | undefined;\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const KafkaInstanceMetricsMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./KafkaInstanceMetricsMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as KafkaInstanceMetricsMachineContext,\n      events: {} as\n        | ({ type: \"fetchSuccess\" } & GetKafkaInstanceMetricsResponse)\n        | { type: \"fetchFail\" }\n        // to refresh the data\n        | { type: \"refresh\" }\n        // from the UI elements\n        | { type: \"selectTopic\"; topic: string | undefined }\n        | { type: \"selectDuration\"; duration: DurationOptions }\n        | { type: \"selectBroker\"; broker: string | undefined }\n        | { type: \"selectToggle\"; value: BrokerFilter }\n        | { type: \"selectPartition\"; value: PartitionSelect },\n    },\n    id: \"kafkaInstanceMetrics\",\n    context: {\n      lastUpdated: undefined,\n      selectedBroker: undefined,\n      duration: DurationOptions.Last1hour,\n      usedDiskSpaceMetrics: {},\n      bytesPerPartitionMetrics: {},\n      clientConnectionsMetrics: {},\n      connectionAttemptRateMetrics: {},\n      diskSpaceLimit: undefined,\n      connectionsLimit: undefined,\n      connectionRateLimit: undefined,\n      fetchFailures: 0,\n      brokers: [],\n      selectedToggle: \"total\",\n      selectedPartition: \"Top10\",\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#kafkaInstanceMetrics.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#kafkaInstanceMetrics.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        on: {\n          refresh: {\n            target: \"refreshing\",\n          },\n          selectDuration: {\n            actions: \"setDuration\",\n            target: \"callApi\",\n          },\n          selectBroker: {\n            actions: \"setBroker\",\n            target: \"callApi\",\n          },\n          selectToggle: {\n            actions: \"setToggle\",\n            target: \"callApi\",\n          },\n          selectPartition: {\n            actions: \"setPartition\",\n          },\n        },\n      },\n      refreshing: {\n        tags: \"refreshing\",\n        entry: \"setFetchTimestamp\",\n        invoke: {\n          src: \"api\",\n        },\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"withResponse\",\n          },\n          fetchFail: {\n            // 👀 we silently ignore this happened and go back to the right\n            // state depending on the previous data\n            target: \"withResponse\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setFetchTimestamp: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        lastUpdated: (_context) => new Date(),\n      }),\n      setMetrics: assign((_, event) => {\n        const {\n          usedDiskSpaceMetrics,\n          bytesPerPartitionMetrics,\n          clientConnectionsMetrics,\n          connectionAttemptRateMetrics,\n          diskSpaceLimit,\n          connectionsLimit,\n          connectionRateLimit,\n          brokers,\n        } = event;\n        return {\n          brokers,\n          usedDiskSpaceMetrics,\n          bytesPerPartitionMetrics,\n          clientConnectionsMetrics,\n          connectionAttemptRateMetrics,\n          diskSpaceLimit: diskSpaceLimit * 1024 ** 3, // convert it to GiB\n          connectionsLimit,\n          connectionRateLimit,\n        };\n      }),\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n      setDuration: assign((_context, event) => ({\n        duration: event.duration,\n        usedDiskSpaceMetrics: {},\n        bytesPerPartitionMetrics: {},\n        clientConnectionsMetrics: {},\n        connectionAttemptRateMetrics: {},\n      })),\n      setBroker: assign({\n        selectedBroker: (_context, event) => event.broker,\n      }),\n      setToggle: assign((_, { value }) => ({ selectedToggle: value })),\n      setPartition: assign((_, { value }) => ({ selectedPartition: value })),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            Object.keys(event.clientConnectionsMetrics).length > 0 ||\n            Object.keys(event.connectionAttemptRateMetrics).length > 0 ||\n            Object.keys(event.usedDiskSpaceMetrics).length > 0 ||\n            Object.keys(event.bytesPerPartitionMetrics).length > 0\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type KafkaInstanceMetricsMachineType =\n  typeof KafkaInstanceMetricsMachine;\n","import { assign, createMachine } from \"xstate\";\nimport type {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  PartitionSelect,\n  TimeSeriesMetrics,\n} from \"../types\";\nimport { DurationOptions } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#topicsMetrics.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type TopicsMetricsMachineContext = {\n  lastUpdated: Date | undefined;\n\n  // from the UI elements\n  selectedTopic: string | undefined;\n  duration: DurationOptions;\n  selectedPartition: PartitionSelect;\n  // from the api\n  kafkaTopics: string[];\n  metricsTopics: string[];\n  bytesOutgoing: TimeSeriesMetrics;\n  bytesIncoming: TimeSeriesMetrics;\n  bytesPerPartition: PartitionBytesMetric;\n  incomingMessageRate: TimeSeriesMetrics;\n\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const TopicsMetricsMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./TopicsMetricsMachine.typegen\").Typegen0,\n    schema: {\n      context: {} as TopicsMetricsMachineContext,\n      events: {} as  // called when a new kafka id has been specified\n        | ({ type: \"fetchSuccess\" } & GetTopicsMetricsResponse)\n        | { type: \"fetchFail\" }\n\n        // to refresh the data\n        | { type: \"refresh\" }\n\n        // from the UI elements\n        | { type: \"selectTopic\"; topic: string | undefined }\n        | { type: \"selectDuration\"; duration: DurationOptions }\n        | { type: \"selectPartition\"; value: PartitionSelect },\n    },\n    id: \"topicsMetrics\",\n    context: {\n      lastUpdated: undefined,\n\n      // from the UI elements\n      selectedTopic: undefined,\n      duration: DurationOptions.Last1hour,\n      selectedPartition: \"Top10\",\n\n      // from the api\n      kafkaTopics: [],\n      metricsTopics: [],\n      bytesOutgoing: {},\n      bytesIncoming: {},\n      bytesPerPartition: {},\n      incomingMessageRate: {},\n\n      // how many time did we try a fetch (that combines more api)\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#topicsMetrics.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        entry: \"setFetchTimestamp\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#topicsMetrics.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        initial: \"idle\",\n        states: {\n          idle: {},\n          refreshing: {\n            tags: \"refreshing\",\n            entry: \"setFetchTimestamp\",\n            invoke: {\n              src: \"api\",\n            },\n            on: {\n              fetchSuccess: {\n                actions: \"setMetrics\",\n                target: \"#topicsMetrics.withResponse\",\n              },\n              fetchFail: {\n                // 👀 we silently ignore this happened\n                target: \"#topicsMetrics.withResponse\",\n              },\n            },\n          },\n        },\n        on: {\n          refresh: {\n            target: \"#topicsMetrics.withResponse.refreshing\",\n          },\n          selectTopic: {\n            actions: \"setTopic\",\n            target: \"callApi\",\n          },\n          selectDuration: {\n            actions: \"setDuration\",\n            target: \"callApi\",\n          },\n          selectPartition: {\n            actions: \"setPartition\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setFetchTimestamp: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        lastUpdated: (_context) => new Date(),\n      }),\n      setMetrics: assign((_context, event) => {\n        const {\n          kafkaTopics,\n          metricsTopics,\n          bytesPerPartition,\n          bytesIncoming,\n          bytesOutgoing,\n          incomingMessageRate,\n        } = event;\n        return {\n          kafkaTopics,\n          metricsTopics,\n          bytesPerPartition,\n          bytesIncoming,\n          bytesOutgoing,\n          incomingMessageRate,\n        };\n      }),\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n      setTopic: assign({\n        selectedTopic: (_context, event) => event.topic,\n      }),\n      setDuration: assign({\n        duration: (_, event) => event.duration,\n      }),\n      setPartition: assign((_, { value }) => ({ selectedPartition: value })),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            Object.keys(event.bytesIncoming).length > 0 ||\n            Object.keys(event.bytesOutgoing).length > 0 ||\n            Object.keys(event.bytesPerPartition).length > 0 ||\n            Object.keys(event.incomingMessageRate).length > 0\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type TopicsMetricsMachineType = typeof TopicsMetricsMachine;\n","import { assign, createMachine } from \"xstate\";\nimport type { GetMetricsKpiResponse } from \"../types\";\n\nconst MAX_RETRIES = 3;\n\nconst apiState = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        src: \"api\",\n      },\n      on: {\n        fetchFail: {\n          actions: \"incrementRetries\",\n          target: \"failure\",\n        },\n      },\n    },\n    failure: {\n      after: {\n        1000: [\n          { cond: \"canRetryFetching\", target: \"loading\" },\n          { target: \"#kpis.criticalFail\" },\n        ],\n      },\n    },\n  },\n};\n\nexport type MetricsKpiMachineContext = {\n  // from the api\n  topics: number | undefined;\n  topicPartitions: number | undefined;\n  consumerGroups: number | undefined;\n  topicPartitionsLimit: number | undefined;\n\n  // how many time did we try a fetch (that combines more api)\n  fetchFailures: number;\n};\n\nexport const MetricsKpiMachine = createMachine(\n  {\n    tsTypes: {} as import(\"./MetricsKpiMachine.typegen\").Typegen0,\n    predictableActionArguments: true,\n    schema: {\n      context: {} as MetricsKpiMachineContext,\n      events: {} as\n        | { type: \"fetch\" }\n        | ({ type: \"fetchSuccess\" } & GetMetricsKpiResponse)\n        | { type: \"fetchFail\" }\n        | { type: \"refresh\" },\n    },\n    id: \"kpis\",\n    context: {\n      topics: undefined,\n      topicPartitions: undefined,\n      consumerGroups: undefined,\n      topicPartitionsLimit: undefined,\n      fetchFailures: 0,\n    },\n    initial: \"initialLoading\",\n    states: {\n      initialLoading: {\n        ...apiState,\n        tags: \"initialLoading\",\n        on: {\n          fetchSuccess: [\n            {\n              cond: \"isJustCreated\",\n              actions: \"setMetrics\",\n              target: \"#kpis.withResponse\",\n            },\n            { actions: \"setMetrics\", target: \"justCreated\" },\n          ],\n        },\n      },\n      callApi: {\n        ...apiState,\n        tags: \"loading\",\n        on: {\n          fetchSuccess: {\n            actions: \"setMetrics\",\n            target: \"#kpis.withResponse\",\n          },\n        },\n      },\n      criticalFail: {\n        tags: \"failed\",\n        on: {\n          refresh: {\n            actions: \"resetRetries\",\n            target: \"callApi\",\n          },\n        },\n      },\n      justCreated: {\n        tags: \"justCreated\",\n        on: {\n          refresh: {\n            target: \"initialLoading\",\n          },\n        },\n      },\n      withResponse: {\n        tags: \"withResponse\",\n        initial: \"idle\",\n        states: {\n          idle: {},\n          refreshing: {\n            tags: \"refreshing\",\n            invoke: {\n              src: \"api\",\n            },\n            on: {\n              fetchSuccess: {\n                actions: \"setMetrics\",\n                target: \"#kpis.withResponse\",\n              },\n              fetchFail: {\n                // 👀 we silently ignore this happened\n                target: \"#kpis.withResponse\",\n              },\n            },\n          },\n        },\n        on: {\n          refresh: {\n            target: \"#kpis.withResponse.refreshing\",\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setMetrics: assign((_, event) => {\n        const {\n          topics,\n          topicPartitions,\n          consumerGroups,\n          topicPartitionsLimit,\n        } = event;\n        return {\n          topics,\n          topicPartitions,\n          consumerGroups,\n          topicPartitionsLimit,\n        };\n      }),\n\n      incrementRetries: assign({\n        fetchFailures: (context) => context.fetchFailures + 1,\n      }),\n\n      resetRetries: assign({\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fetchFailures: (_context) => 0,\n      }),\n    },\n    guards: {\n      canRetryFetching: (context) => context.fetchFailures < MAX_RETRIES,\n      isJustCreated: (_, event) => {\n        if (event.type === \"fetchSuccess\") {\n          return (\n            event.topics !== undefined ||\n            event.topicPartitions !== undefined ||\n            event.consumerGroups !== undefined ||\n            event.topicPartitionsLimit !== undefined\n          );\n        }\n        return false;\n      },\n    },\n  }\n);\n\nexport type MetricsKpiMachineType = typeof MetricsKpiMachine;\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { timeIntervalsMapping } from \"./consts\";\nimport type { KafkaInstanceMetricsMachineType } from \"./machines\";\nimport { KafkaInstanceMetricsMachine } from \"./machines\";\nimport type { DurationOptions, GetKafkaInstanceMetricsResponse } from \"./types\";\n\nexport const KafkaInstanceMetricsContext = createContext<{\n  service: ActorRefFrom<KafkaInstanceMetricsMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type KafkaInstanceMetricsProviderProps = {\n  getKafkaInstanceMetrics: (options: {\n    duration: DurationOptions;\n    interval: number;\n    selectedBroker: string | undefined;\n  }) => Promise<GetKafkaInstanceMetricsResponse>;\n};\nexport const KafkaInstanceMetricsProvider: FunctionComponent<\n  KafkaInstanceMetricsProviderProps\n> = ({ children, getKafkaInstanceMetrics }) => {\n  const service = useInterpret(\n    () =>\n      KafkaInstanceMetricsMachine.withConfig({\n        services: {\n          api: (context) => {\n            return (callback) => {\n              getKafkaInstanceMetrics({\n                selectedBroker: context.selectedBroker,\n                duration: context.duration,\n                interval: timeIntervalsMapping[context.duration].interval,\n              })\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <KafkaInstanceMetricsContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </KafkaInstanceMetricsContext.Provider>\n  );\n};\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport type { MetricsKpiMachineType } from \"./machines\";\nimport { MetricsKpiMachine } from \"./machines\";\nimport type { GetMetricsKpiResponse } from \"./types\";\n\nexport const MetricsKpiContext = createContext<{\n  service: ActorRefFrom<MetricsKpiMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type MetricsKpiProviderProps = {\n  getMetricsKpi: () => Promise<GetMetricsKpiResponse>;\n};\nexport const MetricsKpiProvider: FunctionComponent<MetricsKpiProviderProps> = ({\n  children,\n  getMetricsKpi,\n}) => {\n  const service = useInterpret(\n    () =>\n      MetricsKpiMachine.withConfig({\n        services: {\n          api: () => {\n            return (callback) => {\n              getMetricsKpi()\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <MetricsKpiContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </MetricsKpiContext.Provider>\n  );\n};\n","import { useInterpret } from \"@xstate/react\";\nimport type { FunctionComponent } from \"react\";\nimport { createContext } from \"react\";\nimport type { ActorRefFrom } from \"xstate\";\nimport { timeIntervalsMapping } from \"./consts\";\nimport type { TopicsMetricsMachineType } from \"./machines\";\nimport { TopicsMetricsMachine } from \"./machines\";\nimport type { DurationOptions, GetTopicsMetricsResponse } from \"./types\";\n\nexport const TopicsMetricsContext = createContext<{\n  service: ActorRefFrom<TopicsMetricsMachineType>;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n}>(null!);\n\nexport type TopicsMetricsProviderProps = {\n  getTopicsMetrics: (options: {\n    duration: DurationOptions;\n    interval: number;\n    selectedTopic: string | undefined;\n  }) => Promise<GetTopicsMetricsResponse>;\n};\nexport const TopicsMetricsProvider: FunctionComponent<\n  TopicsMetricsProviderProps\n> = ({ children, getTopicsMetrics }) => {\n  const service = useInterpret(\n    () =>\n      TopicsMetricsMachine.withConfig({\n        services: {\n          api: (context) => {\n            return (callback) => {\n              getTopicsMetrics({\n                selectedTopic: context.selectedTopic,\n                duration: context.duration,\n                interval: timeIntervalsMapping[context.duration].interval,\n              })\n                .then((results) =>\n                  callback({ type: \"fetchSuccess\", ...results })\n                )\n                .catch((e) => {\n                  console.error(\"Failed fetching data\", e);\n                  callback(\"fetchFail\");\n                });\n            };\n          },\n        },\n      }),\n    {\n      devTools: true,\n    }\n  );\n  return (\n    <TopicsMetricsContext.Provider\n      value={{\n        service,\n      }}\n    >\n      {children}\n    </TopicsMetricsContext.Provider>\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport { KafkaInstanceMetricsContext } from \"./KafkaInstanceMetricsProvider\";\nimport type { KafkaInstanceMetricsMachineContext } from \"./machines\";\nimport type { BrokerFilter, DurationOptions, PartitionSelect } from \"./types\";\n\ntype SeletorReturn = KafkaInstanceMetricsMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useKafkaInstanceMetrics() {\n  const { service } = useContext(KafkaInstanceMetricsContext);\n\n  const {\n    selectedToggle,\n    selectedBroker,\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    bytesPerPartitionMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    duration,\n    lastUpdated,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    selectedPartition,\n    brokers,\n  } = useSelector<typeof service, SeletorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onBrokerChange = useCallback(\n    (broker: string | undefined) =>\n      service.send({ type: \"selectBroker\", broker }),\n    [service]\n  );\n\n  const onDurationChange = useCallback(\n    (duration: DurationOptions) =>\n      service.send({ type: \"selectDuration\", duration }),\n    [service]\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  const onSelectToggle = useCallback(\n    (value: BrokerFilter) => service.send({ type: \"selectToggle\", value }),\n    [service]\n  );\n\n  const onSelectPartition = useCallback(\n    (value: PartitionSelect) =>\n      service.send({ type: \"selectPartition\", value }),\n    [service]\n  );\n\n  return {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    bytesPerPartitionMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    lastUpdated,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    duration,\n    onDurationChange,\n    onRefresh,\n    onBrokerChange,\n    selectedBroker,\n    selectedToggle,\n    onSelectToggle,\n    onSelectPartition,\n    selectedPartition,\n    brokers,\n  };\n}\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport type { TopicsMetricsMachineContext } from \"./machines\";\nimport { TopicsMetricsContext } from \"./TopicsMetricsProvider\";\nimport type { DurationOptions, PartitionSelect } from \"./types\";\n\ntype SelectorReturn = TopicsMetricsMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useTopicsMetrics() {\n  const { service } = useContext(TopicsMetricsContext);\n\n  const {\n    selectedTopic,\n    duration,\n    kafkaTopics,\n    metricsTopics,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    selectedPartition,\n  } = useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onTopicChange = useCallback(\n    (topic: string | undefined) => service.send({ type: \"selectTopic\", topic }),\n    [service]\n  );\n\n  const onDurationChange = useCallback(\n    (duration: DurationOptions) =>\n      service.send({ type: \"selectDuration\", duration }),\n    [service]\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  const mergedTopics = useMemo((): string[] => {\n    const topics = Array.from(\n      new Set<string>([...kafkaTopics, ...metricsTopics])\n    );\n    topics.sort((a, b) => a.localeCompare(b));\n    return topics;\n  }, [kafkaTopics, metricsTopics]);\n\n  const onSelectPartition = useCallback(\n    (value: PartitionSelect) =>\n      service.send({ type: \"selectPartition\", value }),\n    [service]\n  );\n\n  return {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    topics: mergedTopics,\n    selectedTopic,\n    duration,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    onTopicChange,\n    onDurationChange,\n    onRefresh,\n    onSelectPartition,\n    selectedPartition,\n  };\n}\n","import {\n  Alert,\n  AlertVariant,\n  Bullseye,\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Skeleton,\n  Text,\n  TextContent,\n  Title,\n} from \"@patternfly/react-core\";\nimport {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from \"@patternfly/react-icons\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { ChartPopover } from \"./ChartPopover\";\nimport { EmptyStateNoMetricsData } from \"./EmptyStateNoMetricsData\";\n\ntype PartitionCardProps = {\n  metric: number | undefined;\n  isLoading: boolean;\n  topicPartitionsLimit: number | undefined;\n};\n\nexport const PartitionCard: VoidFunctionComponent<PartitionCardProps> = ({\n  metric,\n  isLoading,\n  topicPartitionsLimit = 0,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Card\n      isFullHeight\n      data-testid={t(\"metrics:metric_kpi_topicPartitions_name\")}\n    >\n      <CardTitle component=\"h3\">\n        {t(\"metrics:metric_kpi_topicPartitions_name\")}{\" \"}\n        <ChartPopover\n          title={t(\"metrics:metric_kpi_topicPartitions_name\")}\n          description={t(\"metrics:metric_kpi_topicPartitions_description\")}\n        />\n      </CardTitle>\n      <CardBody>\n        {!isLoading &&\n          (metric === undefined ? (\n            <Bullseye>\n              <EmptyStateNoMetricsData />\n            </Bullseye>\n          ) : (\n            <>\n              <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                aria-valuetext={`${metric} ${t(\n                  \"metrics:metric_kpi_topicPartitions_name\"\n                )}`}\n              >\n                {metric}{\" \"}\n                {(() => {\n                  if (metric >= topicPartitionsLimit) {\n                    return (\n                      <ExclamationCircleIcon color=\"var(--pf-global--danger-color--100)\" />\n                    );\n                  } else if (metric >= topicPartitionsLimit * 0.95) {\n                    return (\n                      <ExclamationTriangleIcon color=\"var(--pf-global--warning-color--100)\" />\n                    );\n                  } else {\n                    return \"\";\n                  }\n                })()}\n              </Title>\n              <TextContent>\n                <Text>\n                  {t(\"metrics:partition_limit\", {\n                    topic: topicPartitionsLimit,\n                  })}\n                </Text>\n              </TextContent>\n            </>\n          ))}\n        {isLoading && <Skeleton width=\"50px\" shape=\"square\" />}\n      </CardBody>\n      {(() => {\n        if (metric && metric >= topicPartitionsLimit) {\n          return (\n            <CardFooter>\n              <Alert\n                isExpandable\n                isInline\n                variant={AlertVariant.danger}\n                title={t(\"metrics:partition_limit_reached_title\")}\n              >\n                <p>{t(\"metrics:partition_limit_reached_description_1\")}</p>\n                <p>{t(\"metrics:partition_limit_reached_description_2\")}</p>\n              </Alert>\n            </CardFooter>\n          );\n        } else if (metric && metric >= topicPartitionsLimit * 0.95) {\n          return (\n            <CardFooter>\n              <Alert\n                role={\"alert\"}\n                isExpandable\n                isInline\n                variant={AlertVariant.warning}\n                title={t(\"metrics:partition_limit_approaching_title\")}\n              >\n                <p>\n                  {t(\"metrics:partition_limit_approaching_description_1\", {\n                    limit: topicPartitionsLimit,\n                  })}\n                </p>\n                <p>{t(\"metrics:partition_limit_approaching_description_2\")}</p>\n              </Alert>\n            </CardFooter>\n          );\n        } else {\n          return \" \";\n        }\n      })()}\n    </Card>\n  );\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { Alert, AlertActionCloseButton } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport type MetricsLagAlertProps = {\n  isClosed: boolean;\n  onClickClose: () => void;\n};\n\nexport const MetricsLagAlert: VoidFunctionComponent<MetricsLagAlertProps> = ({\n  isClosed,\n  onClickClose,\n}) => {\n  const { t } = useTranslation(\"metrics\");\n\n  if (!isClosed) {\n    return (\n      <Alert\n        isInline\n        variant=\"info\"\n        title={t(\"metrics_lag_title\")}\n        actionClose={<AlertActionCloseButton onClose={onClickClose} />}\n      >\n        <p>{t(\"metrics_lag_description\")}</p>\n      </Alert>\n    );\n  } else {\n    return <> </>;\n  }\n};\n","import type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  CardKafkaInstanceMetrics,\n  CardTopicsMetrics,\n  EmptyStateInitialLoading,\n  EmptyStateMetricsUnavailable,\n  MetricsLayout,\n} from \"./components\";\nimport { CardKpi } from \"./components/CardKpi\";\nimport type { KafkaInstanceMetricsProviderProps } from \"./KafkaInstanceMetricsProvider\";\nimport { KafkaInstanceMetricsProvider } from \"./KafkaInstanceMetricsProvider\";\nimport type { MetricsKpiProviderProps } from \"./MetricsKpiProvider\";\nimport { MetricsKpiProvider } from \"./MetricsKpiProvider\";\nimport type { TopicsMetricsProviderProps } from \"./TopicsMetricsProvider\";\nimport { TopicsMetricsProvider } from \"./TopicsMetricsProvider\";\nimport { useKafkaInstanceMetrics } from \"./useKafkaInstanceMetrics\";\nimport { useMetricsKpi } from \"./useMetricsKpi\";\nimport { useTopicsMetrics } from \"./useTopicsMetrics\";\nimport { PartitionCard } from \"./components/PartitionCard\";\nimport { MetricsLagAlert } from \"./components/MetricsLagAlert\";\n\nexport type MetricsProps = {\n  onCreateTopic: () => void;\n  onAlertClose: () => void;\n  hasUserAlreadyClosedAlert: boolean;\n} & KafkaInstanceMetricsProviderProps &\n  TopicsMetricsProviderProps &\n  MetricsKpiProviderProps;\n\nexport const Metrics: VoidFunctionComponent<MetricsProps> = ({\n  getKafkaInstanceMetrics,\n  getTopicsMetrics,\n  getMetricsKpi,\n  onCreateTopic,\n  onAlertClose,\n  hasUserAlreadyClosedAlert,\n}) => {\n  return (\n    <TopicsMetricsProvider getTopicsMetrics={getTopicsMetrics}>\n      <KafkaInstanceMetricsProvider\n        getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n      >\n        <MetricsKpiProvider getMetricsKpi={getMetricsKpi}>\n          <ConnectedMetrics\n            onCreateTopic={onCreateTopic}\n            onClickClose={onAlertClose}\n            isClosed={hasUserAlreadyClosedAlert}\n          />\n        </MetricsKpiProvider>\n      </KafkaInstanceMetricsProvider>\n    </TopicsMetricsProvider>\n  );\n};\n\ntype ConnectedMetricsProps = {\n  onCreateTopic: () => void;\n  onClickClose: () => void;\n  isClosed: boolean;\n};\nconst ConnectedMetrics: VoidFunctionComponent<ConnectedMetricsProps> = ({\n  onCreateTopic,\n  onClickClose,\n  isClosed,\n}) => {\n  const { t } = useTranslation();\n  const kafkaInstanceMetrics = useKafkaInstanceMetrics();\n  const topicsMetrics = useTopicsMetrics();\n  const metricsKpi = useMetricsKpi();\n\n  switch (true) {\n    case kafkaInstanceMetrics.isInitialLoading ||\n      topicsMetrics.isInitialLoading ||\n      metricsKpi.isInitialLoading:\n      return <EmptyStateInitialLoading />;\n    case kafkaInstanceMetrics.isFailed &&\n      topicsMetrics.isFailed &&\n      topicsMetrics.isFailed:\n    case kafkaInstanceMetrics.isJustCreated &&\n      topicsMetrics.isJustCreated &&\n      metricsKpi.isJustCreated:\n      return <EmptyStateMetricsUnavailable />;\n    default:\n      return (\n        <MetricsLayout\n          metricsLagAlert={\n            <MetricsLagAlert onClickClose={onClickClose} isClosed={isClosed} />\n          }\n          topicsKpi={\n            <CardKpi\n              metric={metricsKpi.topics}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              name={t(\"metrics:metric_kpi_topics_name\")}\n              popover={t(\"metrics:metric_kpi_topics_description\")}\n            />\n          }\n          topicPartitionsKpi={\n            <PartitionCard\n              metric={metricsKpi.topicPartitions}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              topicPartitionsLimit={metricsKpi.topicPartitionsLimit}\n            />\n          }\n          consumerGroupKpi={\n            <CardKpi\n              metric={metricsKpi.consumerGroups}\n              isLoading={metricsKpi.isInitialLoading || metricsKpi.isLoading}\n              name={t(\"metrics:metric_kpi_consumerGroup_name\")}\n              popover={t(\"metrics:metric_kpi_consumerGroup_description\")}\n            />\n          }\n          diskSpaceMetrics={<ConnectedKafkaInstanceMetrics />}\n          topicMetrics={\n            <ConnectedTopicsMetrics onCreateTopic={onCreateTopic} />\n          }\n        />\n      );\n  }\n};\n\nconst ConnectedKafkaInstanceMetrics: VoidFunctionComponent = () => {\n  const {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    duration,\n    lastUpdated,\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionsLimit,\n    connectionRateLimit,\n    onDurationChange,\n    onRefresh,\n    brokers,\n    onBrokerChange,\n    selectedBroker,\n    selectedToggle,\n    onSelectToggle,\n    bytesPerPartitionMetrics,\n    selectedPartition,\n    onSelectPartition,\n  } = useKafkaInstanceMetrics();\n\n  return (\n    <CardKafkaInstanceMetrics\n      usedDiskMetrics={usedDiskSpaceMetrics}\n      clientConnectionsMetrics={clientConnectionsMetrics}\n      connectionAttemptRateMetrics={connectionAttemptRateMetrics}\n      duration={duration}\n      backendUnavailable={isFailed}\n      isInitialLoading={isInitialLoading}\n      isLoading={isLoading}\n      isRefreshing={isRefreshing}\n      isJustCreated={isJustCreated}\n      lastUpdated={lastUpdated}\n      onRefresh={onRefresh}\n      onDurationChange={onDurationChange}\n      diskSpaceLimit={diskSpaceLimit || 0}\n      connectionsLimit={connectionsLimit || 0}\n      connectionRateLimit={connectionRateLimit || 0}\n      brokers={brokers}\n      selectedBroker={selectedBroker}\n      onSelectedBroker={onBrokerChange}\n      selectToggle={selectedToggle}\n      onSelectedToggle={onSelectToggle}\n      bytesPerPartitions={bytesPerPartitionMetrics}\n      onSelectedPartition={onSelectPartition}\n      selectedPartition={selectedPartition}\n    />\n  );\n};\n\ntype ConnectedTopicsMetricsProps = {\n  onCreateTopic: () => void;\n};\nconst ConnectedTopicsMetrics: VoidFunctionComponent<\n  ConnectedTopicsMetricsProps\n> = ({ onCreateTopic }) => {\n  const {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    lastUpdated,\n    selectedTopic,\n    duration,\n    topics,\n    bytesIncoming,\n    bytesOutgoing,\n    bytesPerPartition,\n    incomingMessageRate,\n    selectedPartition,\n    onDurationChange,\n    onTopicChange,\n    onRefresh,\n    onSelectPartition,\n  } = useTopicsMetrics();\n\n  return (\n    <CardTopicsMetrics\n      backendUnavailable={isFailed}\n      topics={topics}\n      incomingTopicsData={bytesIncoming}\n      outgoingTopicsData={bytesOutgoing}\n      partitions={bytesPerPartition}\n      incomingMessageRate={incomingMessageRate}\n      duration={duration}\n      isInitialLoading={isInitialLoading}\n      isLoading={isLoading}\n      isRefreshing={isRefreshing}\n      isJustCreated={isJustCreated}\n      lastUpdated={lastUpdated}\n      selectedTopic={selectedTopic}\n      onRefresh={onRefresh}\n      onSelectedTopic={onTopicChange}\n      onDurationChange={onDurationChange}\n      onCreateTopic={onCreateTopic}\n      onSelectedPartition={onSelectPartition}\n      selectedPartition={selectedPartition}\n    />\n  );\n};\n","import { useSelector } from \"@xstate/react\";\nimport { useCallback, useContext } from \"react\";\nimport type { MetricsKpiMachineContext } from \"./machines\";\nimport { MetricsKpiContext } from \"./MetricsKpiProvider\";\n\ntype SelectorReturn = MetricsKpiMachineContext & {\n  isInitialLoading: boolean;\n  isRefreshing: boolean;\n  isLoading: boolean;\n  isFailed: boolean;\n  isJustCreated: boolean;\n};\n\nexport function useMetricsKpi() {\n  const { service } = useContext(MetricsKpiContext);\n\n  const {\n    topics,\n    topicPartitions,\n    topicPartitionsLimit,\n    consumerGroups,\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n  } = useSelector<typeof service, SelectorReturn>(\n    service,\n    useCallback(\n      (state) => ({\n        ...state.context,\n        isInitialLoading: state.hasTag(\"initialLoading\"),\n        isRefreshing: state.hasTag(\"refreshing\"),\n        isLoading: state.hasTag(\"loading\"),\n        isFailed: state.hasTag(\"failed\"),\n        isJustCreated: state.hasTag(\"justCreated\"),\n      }),\n      []\n    )\n  );\n\n  const onRefresh = useCallback(() => service.send(\"refresh\"), [service]);\n\n  return {\n    isInitialLoading,\n    isLoading,\n    isRefreshing,\n    isFailed,\n    isJustCreated,\n    topics,\n    topicPartitions,\n    consumerGroups,\n    topicPartitionsLimit,\n    onRefresh,\n  };\n}\n","import {\n  Button,\n  Card,\n  CardBody,\n  Flex,\n  FlexItem,\n  Modal,\n  ModalVariant,\n  PageSection,\n  Spinner,\n  Stack,\n  StackItem,\n  Switch,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport \"./Settings.css\";\nimport type { SettingsStatus } from \"./types\";\n\nexport type SettingsProps = {\n  onSubmitReAuthentication: (\n    reauthenticationEnabled: boolean\n  ) => Promise<boolean>;\n  reauthenticationEnabled: boolean;\n};\n\nexport const Settings: FunctionComponent<SettingsProps> = ({\n  onSubmitReAuthentication,\n  reauthenticationEnabled,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  //states\n  const [connectionStatus, setConnectionStatus] = useState<SettingsStatus>(\n    reauthenticationEnabled ? \"On\" : \"Off\"\n  );\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  const onClose = () => {\n    setIsModalOpen(false);\n  };\n\n  const onChangeSwitch = (checked: boolean) => {\n    if (connectionStatus === \"On\") {\n      setIsModalOpen(true);\n    } else {\n      handleReAuthentication(checked);\n    }\n  };\n\n  const handleReAuthentication = (reAuthValue: boolean) => {\n    setConnectionStatus(reAuthValue ? \"TurningOn\" : \"TurningOff\");\n\n    onSubmitReAuthentication(reAuthValue)\n      .then((reauthentication) => {\n        setConnectionStatus(reauthentication ? \"On\" : \"Off\");\n\n        // TODO: send notification\n        // addAlert({\n        //   variant: \"success\",\n        //   title: t(\"settings.success_alert\", {\n        //     status: reauthentication ? \"on\" : \"off\",\n        //   }),\n        // });\n      })\n      .catch(() => {\n        setConnectionStatus(!reAuthValue ? \"On\" : \"Off\");\n\n        // TODO: send notification\n        // addAlert({\n        //   variant: \"danger\",\n        //   title: t(\"settings.error_alert_title\"),\n        //   description: t(\"settings.error_alert_title_description\"),\n        // });\n      });\n  };\n\n  const onTurnOff = () => {\n    setIsModalOpen(false);\n    handleReAuthentication(false);\n  };\n\n  return (\n    <PageSection isFilled={true} hasOverflowScroll={true} aria-label={\"TODO\"}>\n      <Stack hasGutter>\n        <StackItem>\n          <Card>\n            <CardBody>{t(\"settings.kafka_instance_settings_label\")}</CardBody>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <Card className={\"mas--settings__card\"}>\n            <CardBody>\n              <Flex flexWrap={{ default: \"nowrap\" }}>\n                <FlexItem grow={{ default: \"grow\" }}>\n                  <Flex>\n                    <FlexItem\n                      component={\"span\"}\n                      spacer={{ default: \"spacerSm\" }}\n                    >\n                      <strong>\n                        {t(\"settings.connection_re_authentication_label\")}\n                        {\":\"}\n                      </strong>\n                    </FlexItem>\n                    <FlexItem>\n                      {(() => {\n                        switch (connectionStatus) {\n                          case \"On\":\n                            return t(\n                              \"settings.Connection_re_authentication_states.on\"\n                            );\n                          case \"TurningOff\":\n                            return (\n                              <>\n                                <Spinner\n                                  size=\"md\"\n                                  aria-valuetext={t(\n                                    \"settings.Connection_re_authentication_states.turning_off\"\n                                  )}\n                                  aria-label={t(\n                                    \"settings.connection_re_authentication_label\"\n                                  )}\n                                />{\" \"}\n                                {t(\n                                  \"settings.Connection_re_authentication_states.turning_off\"\n                                )}\n                              </>\n                            );\n                          case \"Off\":\n                            return t(\n                              \"settings.Connection_re_authentication_states.off\"\n                            );\n                          case \"TurningOn\":\n                            return (\n                              <>\n                                <Spinner\n                                  size=\"md\"\n                                  aria-valuetext={\n                                    \"settings.Connection_re_authentication_states.turning_on\"\n                                  }\n                                  aria-label={t(\n                                    \"settings.connection_re_authentication_label\"\n                                  )}\n                                />{\" \"}\n                                {t(\n                                  \"settings.Connection_re_authentication_states.turning_on\"\n                                )}\n                              </>\n                            );\n                          default:\n                            return null;\n                        }\n                      })()}\n                    </FlexItem>\n                  </Flex>\n                </FlexItem>\n                <FlexItem>\n                  <Switch\n                    id=\"Connection-re-authentication-switch\"\n                    aria-label={t(\n                      \"settings.connection_re_authentication_label\"\n                    )}\n                    isChecked={\n                      connectionStatus === \"On\" ||\n                      connectionStatus === \"TurningOff\"\n                    }\n                    isDisabled={\n                      connectionStatus === \"TurningOff\" ||\n                      connectionStatus === \"TurningOn\"\n                    }\n                    onChange={onChangeSwitch}\n                  />\n                </FlexItem>\n                <Modal\n                  variant={ModalVariant.small}\n                  isOpen={isModalOpen}\n                  title={t(\"settings.warning_title\")}\n                  titleIconVariant={\"warning\"}\n                  actions={[\n                    <Button\n                      key={\"confirm\"}\n                      variant=\"primary\"\n                      onClick={onTurnOff}\n                    >\n                      {t(\"settings.turn_off_button_label\")}\n                    </Button>,\n                    <Button key={\"cancel\"} variant=\"link\" onClick={onClose}>\n                      {t(\"common:cancel\")}\n                    </Button>,\n                  ]}\n                  onClose={onClose}\n                >\n                  {t(\"settings.warning_description\")}\n                </Modal>\n              </Flex>\n            </CardBody>\n          </Card>\n        </StackItem>\n      </Stack>\n    </PageSection>\n  );\n};\n","export type SelectOptions = {\n  key: string;\n  value: string;\n  isPlaceholder?: boolean;\n  isDisabled?: boolean;\n};\n\nexport const retentionTimeSelectOptions: SelectOptions[] = [\n  { key: \"days\", value: \"days\", isPlaceholder: true },\n  { key: \"hours\", value: \"hours\" },\n  { key: \"minutes\", value: \"minutes\" },\n  { key: \"seconds\", value: \"seconds\" },\n  { key: \"milliseconds\", value: \"milliseconds\" },\n];\n\nexport const retentionSizeSelectOptions: SelectOptions[] = [\n  { key: \"bytes\", value: \"bytes\", isPlaceholder: true },\n  { key: \"kibibytes\", value: \"kibibytes\" },\n  { key: \"mebibytes\", value: \"mebibytes\" },\n  { key: \"gibibytes\", value: \"gibibytes\" },\n  { key: \"tebibytes\", value: \"tebibytes\" },\n];\n\nexport type IDropdownOption = {\n  value?: string;\n  label?: string;\n  key?: string;\n  isDisabled?: boolean;\n};\n\nexport type TimeUnit =\n  | \"days\"\n  | \"hours\"\n  | \"minutes\"\n  | \"seconds\"\n  | \"milliseconds\"\n  | \"weeks\"\n  | \"unlimited\";\n\nexport type CustomSelect = {\n  unit: TimeUnit;\n  value: number;\n};\n\nexport type CustomRetentionSizeSelect = {\n  unit: CustomRetentionUnit;\n  value: number;\n};\n\nexport type CustomRetentionUnit =\n  | \"bytes\"\n  | \"kibibytes\"\n  | \"mebibytes\"\n  | \"gibibytes\"\n  | \"tebibytes\"\n  | \"unlimited\";\n\nexport type RadioSelectType = \"day\" | \"week\" | \"custom\" | \"unlimited\";\n\nexport type RetentionSizeRadioSelect = \"unlimited\" | \"custom\";\n","import type { VoidFunctionComponent } from \"react\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport {\n  PageSection,\n  PageSectionVariants,\n  Title,\n  Switch,\n  Breadcrumb,\n  BreadcrumbItem,\n} from \"@patternfly/react-core\";\nimport { Link } from \"react-router-dom\";\n\nexport type CreateTopicHeadProps = {\n  showAllOptions: boolean;\n  kafkaName: string;\n  onShowAllOptions: (value: boolean) => void;\n  kafkaInstanceLink: string;\n  kafkaPageLink: string;\n};\n\nexport const CreateTopicHead: VoidFunctionComponent<CreateTopicHeadProps> = ({\n  showAllOptions,\n  onShowAllOptions,\n  kafkaName,\n  kafkaInstanceLink,\n  kafkaPageLink,\n}) => {\n  const { t } = useTranslation([\"common\", \"topic\"]);\n\n  const mainBreadcrumbs = (\n    <Breadcrumb ouiaId={\"breadcrumb\"}>\n      <BreadcrumbItem\n        render={() => (\n          <Link to={kafkaInstanceLink}>{t(\"common:kafka_instance\")}</Link>\n        )}\n      />\n      <BreadcrumbItem\n        render={() => <Link to={kafkaPageLink}>{kafkaName}</Link>}\n      />\n      <BreadcrumbItem isActive>{t(\"topic:create_topic\")}</BreadcrumbItem>\n    </Breadcrumb>\n  );\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        {mainBreadcrumbs}\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          {t(\"topic:create_topic\")}\n        </Title>\n        <br />\n        <Switch\n          ouiaId={\"toggle-switch-off\"}\n          id=\"id-show-all-options\"\n          label={t(\"topic:show_all_options\")}\n          labelOff={t(\"topic:show_all_options\")}\n          isChecked={showAllOptions}\n          onChange={onShowAllOptions}\n          className=\"create-topic-wizard\"\n        />\n      </PageSection>\n    </>\n  );\n};\n","import { Button, Modal } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { Topic } from \"ui-models/src/models/topic\";\n\nexport type PartitionLimitWarningProps = {\n  topicData: Topic;\n  onSave: (topicData: Topic) => void;\n  isModalOpen: boolean;\n  setIsModalOpen: (value: boolean) => void;\n};\n\nexport const PartitionLimitWarning: React.FC<PartitionLimitWarningProps> = ({\n  topicData,\n  onSave,\n  isModalOpen,\n  setIsModalOpen,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  const handleModalToggle = () => {\n    setIsModalOpen(false);\n  };\n  const onConfirm = () => {\n    setIsModalOpen(false);\n    onSave(topicData);\n  };\n  return (\n    <Modal\n      title={t(\"increase_partitions\")}\n      variant={\"small\"}\n      titleIconVariant=\"warning\"\n      aria-describedby=\"modal-title-icon-description\"\n      isOpen={isModalOpen}\n      onClose={handleModalToggle}\n      actions={[\n        <Button key=\"confirm\" variant=\"primary\" onClick={onConfirm}>\n          {t(\"common:yes\")}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={handleModalToggle}>\n          {t(\"no_return\")}\n        </Button>,\n      ]}\n    >\n      {t(\"partition_warning_modal\")}\n    </Modal>\n  );\n};\n","import { convert } from \"convert\";\nimport type { CustomSelect } from \"./types\";\n\nexport const retentionTimeTransformer = (value: CustomSelect) => {\n  if (value.value != null)\n    switch (value.unit) {\n      case \"days\": {\n        const convertedValue = convert(BigInt(value.value), \"days\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"weeks\": {\n        const convertedValue = convert(BigInt(value.value), \"weeks\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"seconds\": {\n        const convertedValue = convert(BigInt(value.value), \"seconds\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"hours\": {\n        const convertedValue = convert(BigInt(value.value), \"hours\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"minutes\": {\n        const convertedValue = convert(BigInt(value.value), \"minutes\").to(\"ms\");\n        return convertedValue;\n      }\n      case \"unlimited\": {\n        return BigInt(value.value);\n      }\n      case \"milliseconds\": {\n        return BigInt(value.value);\n      }\n    }\n};\n","import { FormGroup, Popover, TextInput } from \"@patternfly/react-core\";\nimport { HelpIcon } from \"@patternfly/react-icons\";\nimport type { FunctionComponent } from \"react\";\n\nexport interface TextWithLabelPopoverProps {\n  fieldId: string;\n  fieldLabel: string;\n  fieldValue?: string;\n  popoverHeader: string;\n  popoverBody: string;\n  btnAriaLabel: string;\n  showUnlimited?: boolean;\n}\n\nexport const TextWithLabelPopover: FunctionComponent<\n  TextWithLabelPopoverProps\n> = ({\n  fieldId,\n  fieldLabel,\n  btnAriaLabel,\n  fieldValue,\n  popoverBody,\n  popoverHeader,\n  showUnlimited,\n}) => {\n  let displayText = \"-\";\n\n  if (\n    showUnlimited === true &&\n    fieldValue !== undefined &&\n    parseInt(fieldValue) < 0\n  ) {\n    displayText = \"Unlimited\"; // TODO i18n\n  } else if (fieldValue) {\n    displayText = fieldValue;\n  }\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={fieldLabel}\n      className=\"kafka-ui-form-group--readonly\"\n      labelIcon={\n        <Popover\n          headerContent={<div>{popoverHeader}</div>}\n          bodyContent={<div>{popoverBody}</div>}\n        >\n          <button\n            aria-label={btnAriaLabel}\n            onClick={(event) => event.preventDefault()}\n            className=\"pf-c-form__group-label-help\"\n          >\n            <HelpIcon noVerticalAlign />\n          </button>\n        </Popover>\n      }\n    >\n      <TextInput\n        readOnlyVariant={\"plain\"}\n        type=\"text\"\n        id={fieldId}\n        name={fieldId}\n        value={displayText}\n      />\n    </FormGroup>\n  );\n};\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype CleanupProps = {\n  defaultLogSegmentSize: bigint;\n  defaultSegmentTime: bigint;\n  defaultSegmentJitterTime: bigint;\n  defaultFileDeleteDelay: bigint;\n};\n\nconst Cleanup: React.FC<CleanupProps> = ({\n  defaultFileDeleteDelay,\n  defaultLogSegmentSize,\n  defaultSegmentJitterTime,\n  defaultSegmentTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <FormSection title={t(\"cleanup\")} id=\"cleanup\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"cleanup_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"log-segment-size\"\n        btnAriaLabel={t(\"log_segment_size\")}\n        fieldLabel={t(\"log_segment_size\")}\n        fieldValue={t(\"bytes_to_gibibyte\", {\n          bytes: defaultLogSegmentSize,\n          gibibyte: convert(Number(defaultLogSegmentSize), \"bytes\").to(\n            \"gibibytes\"\n          ),\n        })}\n        popoverBody={t(\"log_segment_size\")}\n        popoverHeader={t(\"log_segment_size_description\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segement-time\"\n        btnAriaLabel={t(\"segement_time\")}\n        fieldLabel={t(\"segement_time\")}\n        fieldValue={t(\"milliseconds_to_days\", {\n          milliseconds: defaultSegmentTime,\n          days: convert(Number(defaultSegmentTime), \"milliseconds\").to(\"days\"),\n        })}\n        popoverBody={t(\"segement_time_description\")}\n        popoverHeader={t(\"segement_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segment-jitter-time\"\n        btnAriaLabel={t(\"segment_jitter_time\")}\n        fieldLabel={t(\"segment_jitter_time\")}\n        fieldValue={t(\"milliseconds_time\", { value: defaultSegmentJitterTime })}\n        popoverBody={t(\"segment_jitter_time_description\")}\n        popoverHeader={t(\"segment_jitter_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"file-delete-delay\"\n        btnAriaLabel={t(\"file_delete_delay\")}\n        fieldLabel={t(\"file_delete_delay\")}\n        fieldValue={t(\"milliseconds_to_minute\", {\n          milliseconds: defaultFileDeleteDelay,\n          minute: convert(Number(defaultFileDeleteDelay), \"milliseconds\").to(\n            \"minutes\"\n          ),\n        })}\n        popoverBody={t(\"file_delete_delay_description\")}\n        popoverHeader={t(\"file_delete_delay\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"preallocate-log-segment-files\"\n        btnAriaLabel={t(\"preallocate_log_segment_files\")}\n        fieldLabel={t(\"preallocate_log_segment_files\")}\n        fieldValue={t(\"common:disabled\")}\n        popoverBody={t(\"preallocate_log_segment_files_description\")}\n        popoverHeader={t(\"preallocate_log_segment_files\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Cleanup };\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { TextInput } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { CustomSelect, TimeUnit } from \"./types\";\nimport { retentionTimeSelectOptions } from \"./types\";\n\nexport type CustomRetentionMessageProps = {\n  id?: string;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n};\n\nconst CustomRetentionMessage: React.FC<CustomRetentionMessageProps> = ({\n  customTimeValue,\n  setCustomTimeValue,\n}) => {\n  const [isRetentionTimeSelectOpen, setIsRetentionTimeSelectOpen] =\n    useState<boolean>(false);\n\n  const onRetentionTimeToggle = (isOpen: boolean) => {\n    setIsRetentionTimeSelectOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (event, value) => {\n    const inputUnit: CustomSelect = {\n      unit: value as TimeUnit,\n      value: 1,\n    };\n    setCustomTimeValue(inputUnit);\n\n    onRetentionTimeToggle(false);\n  };\n\n  const onChange = (input: string) => {\n    const inputValue: CustomSelect = {\n      ...customTimeValue,\n      value: Number(input),\n    };\n    if (inputValue.value > -1) setCustomTimeValue(inputValue);\n  };\n\n  return (\n    <div className=\"kafka-ui--radio__parameters\">\n      <Flex>\n        <FlexItem>\n          <TextInput\n            aria-label={\"Retention time\"}\n            type=\"number\"\n            value={customTimeValue.value == 0 ? \"\" : customTimeValue.value}\n            onChange={onChange}\n            min={1}\n          />\n        </FlexItem>\n        <FlexItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={onRetentionTimeToggle}\n            onSelect={(event, value) => onSelect(event, value as string)}\n            placeholder=\"days\"\n            selections={customTimeValue.unit}\n            isOpen={isRetentionTimeSelectOpen}\n          >\n            {retentionTimeSelectOptions?.map((s) => (\n              <SelectOption\n                key={s.key}\n                value={s.value}\n                isPlaceholder={s.isPlaceholder}\n              >\n                {s.value}\n              </SelectOption>\n            ))}\n          </Select>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n\nexport { CustomRetentionMessage };\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { TextInput } from \"@patternfly/react-core\";\nimport {\n  Flex,\n  FlexItem,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport type { CustomRetentionSizeSelect, CustomRetentionUnit } from \"./types\";\nimport { retentionSizeSelectOptions } from \"./types\";\nimport { useState } from \"react\";\n\nexport type CustomRetentionSizeProps = {\n  id?: string;\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n};\n\nconst CustomRetentionSize: React.FC<CustomRetentionSizeProps> = ({\n  customRetentionSizeValue,\n  setCustomRetentionSizeValue,\n}) => {\n  const [isRetentionSizeSelectOpen, setIsRetentionSizeSelectOpen] =\n    useState<boolean>(false);\n\n  const onRetentionSizeToggle = (isOpen: boolean) => {\n    setIsRetentionSizeSelectOpen(isOpen);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (event, value) => {\n    const inputUnit: CustomRetentionSizeSelect = {\n      unit: value as CustomRetentionUnit,\n      value: 1,\n    };\n    setCustomRetentionSizeValue(inputUnit);\n    onRetentionSizeToggle(false);\n  };\n\n  const onChange = (input: string) => {\n    const inputValue: CustomRetentionSizeSelect = {\n      ...customRetentionSizeValue,\n      value: Number(input),\n    };\n    if (inputValue.value > -1) setCustomRetentionSizeValue(inputValue);\n  };\n  return (\n    <div className=\"kafka-ui--radio__parameters\">\n      <Flex>\n        <FlexItem>\n          <TextInput\n            aria-label=\"Retention size\"\n            type=\"number\"\n            value={\n              customRetentionSizeValue.value == 0\n                ? \"\"\n                : customRetentionSizeValue.value\n            }\n            onChange={onChange}\n            min={1}\n          />\n        </FlexItem>\n        <FlexItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={onRetentionSizeToggle}\n            onSelect={onSelect}\n            selections={customRetentionSizeValue.unit}\n            isOpen={isRetentionSizeSelectOpen}\n          >\n            {retentionSizeSelectOptions?.map((s) => (\n              <SelectOption\n                key={s.key}\n                value={s.value}\n                isPlaceholder={s.isPlaceholder}\n              />\n            ))}\n          </Select>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n\nexport { CustomRetentionSize };\n","import { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport { useCallback } from \"react\";\n\nexport const useValidateTopic = (): {\n  validateName: (name: string) => string | undefined;\n} => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return {\n    validateName: useCallback(\n      (name) => {\n        const legalNameChars = new RegExp(\"^[a-zA-Z0-9._-]+$\");\n        if (name.length && !legalNameChars.test(name)) {\n          return t(\"topic_name_helper_text\");\n        } else if (name.length > 249) {\n          return t(\"cannot_exceed_characters\");\n        } else if (name === \".\" || name === \"..\") {\n          return t(\"invalid_name_with_dot\");\n        }\n        return undefined;\n      },\n      [t]\n    ),\n  };\n};\n","import type { NumberInputProps } from \"@patternfly/react-core\";\nimport {\n  FormSection,\n  NumberInput,\n  Radio,\n  Stack,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport {\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport { useCallback } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type { TopicPartition } from \"ui-models/src/models/topic-partition\";\nimport { CustomRetentionMessage } from \"./CustomRetentionMessage\";\nimport { CustomRetentionSize } from \"./CustomRetentionSize\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"./types\";\nimport { useValidateTopic } from \"./useValidateTopic\";\n\nexport type CoreConfigurationProps = {\n  isCreate?: boolean;\n  topicData: Topic;\n  setTopicData: (data: Topic) => void;\n  invalidText: string;\n  setInvalidText: (message: string) => void;\n  setTopicValidated: (error: ValidatedOptions) => void;\n  topicValidated: ValidatedOptions;\n  setWarning: (isWarning: boolean) => void;\n  warning: boolean;\n  availablePartitionLimit: number;\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n  radioTimeSelectValue: RadioSelectType;\n  setRadioTimeSelectValue: (value: RadioSelectType) => void;\n  radioSizeSelectValue: RetentionSizeRadioSelect;\n  setRadioSizeSelectValue: (data: RetentionSizeRadioSelect) => void;\n};\n\nconst CoreConfiguration: FunctionComponent<CoreConfigurationProps> = ({\n  isCreate,\n  topicData,\n  setTopicData,\n  invalidText,\n  setInvalidText,\n  setTopicValidated,\n  topicValidated,\n  availablePartitionLimit,\n  customTimeValue,\n  setCustomTimeValue,\n  radioTimeSelectValue,\n  setRadioTimeSelectValue,\n  setCustomRetentionSizeValue,\n  customRetentionSizeValue,\n  radioSizeSelectValue,\n  setRadioSizeSelectValue,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  const [initialPartitions] = useState<TopicPartition[]>(topicData.partitions);\n  const { validateName } = useValidateTopic();\n  const validationCheck = useCallback(\n    (value: string) => {\n      const errorMessage = validateName(value);\n      if (errorMessage) {\n        setInvalidText(errorMessage);\n        setTopicValidated(ValidatedOptions.error);\n      } else {\n        setTopicValidated(ValidatedOptions.default);\n      }\n    },\n    [setInvalidText, setTopicValidated, validateName]\n  );\n\n  const handleRetentionMessageTime = (value: RadioSelectType) => {\n    if (value === \"unlimited\") {\n      setCustomTimeValue({ value: -1, unit: \"unlimited\" });\n      setRadioTimeSelectValue(value);\n    } else {\n      setCustomTimeValue({ value: 7, unit: \"days\" });\n      setRadioTimeSelectValue(value);\n    }\n  };\n\n  const handleRetentionMessageSize = (value: RetentionSizeRadioSelect) => {\n    if (value === \"unlimited\") {\n      setRadioSizeSelectValue(value);\n      setCustomRetentionSizeValue({ value: -1, unit: \"unlimited\" });\n    } else {\n      setCustomRetentionSizeValue({ value: 1, unit: \"bytes\" });\n      setRadioSizeSelectValue(value);\n    }\n  };\n  const handleTextInputChange = (value: string) => {\n    validationCheck(value);\n    setTopicData({ ...topicData, name: value });\n  };\n\n  const onPartitionsChange: NumberInputProps[\"onChange\"] = (event) => {\n    const partitions = Number((event.target as HTMLInputElement).value);\n\n    const updatedPartitions = Array(partitions)\n      .fill(null)\n      .map((_, index) => ({ partition: index }));\n    //Donot allow to set a value below original value in case of edit topic\n    setTopicData({\n      ...topicData,\n      partitions: isCreate\n        ? updatedPartitions\n        : updatedPartitions.length > initialPartitions.length\n        ? updatedPartitions\n        : initialPartitions,\n    });\n  };\n\n  const handleOnPlus = () => {\n    const currentPartitions = topicData.partitions;\n    const updatedPartitions = [\n      ...currentPartitions,\n      { partition: currentPartitions.length },\n    ];\n    setTopicData({\n      ...topicData,\n      partitions: updatedPartitions,\n    });\n  };\n\n  const handleOnMinus = () => {\n    const { partitions } = topicData;\n    const newPartitions = partitions.slice(0, partitions.length - 1);\n    setTopicData({\n      ...topicData,\n      partitions: newPartitions,\n    });\n  };\n\n  const retentionTimeInput = (\n    <CustomRetentionMessage\n      customTimeValue={customTimeValue}\n      setCustomTimeValue={setCustomTimeValue}\n    />\n  );\n\n  const retentionSizeInput = (\n    <CustomRetentionSize\n      customRetentionSizeValue={customRetentionSizeValue}\n      setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n    />\n  );\n\n  return (\n    <FormSection\n      title={t(\"core_configuration\")}\n      id=\"core-configuration\"\n      titleElement={\"h2\"}\n    >\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"core_config_info\")}\n        </Text>\n      </TextContent>\n      {isCreate ? (\n        <FormGroupWithPopover\n          labelHead={t(\"topic_name\")}\n          fieldId=\"create-topic-name\"\n          fieldLabel={t(\"topic_name\")}\n          labelBody={t(\"topic_name_description\")}\n          buttonAriaLabel=\"More info for topic name field\"\n          helperTextInvalid={invalidText}\n          validated={topicValidated}\n          isRequired={true}\n          helperText={t(\"topic_name_helper_text\")}\n        >\n          <TextInput\n            isRequired\n            type=\"text\"\n            id=\"create-topic-name\"\n            name=\"name\"\n            value={topicData.name}\n            onChange={handleTextInputChange}\n            label={t(\"topic_name\")}\n            placeholder={t(\"enter_name\")}\n            validated={topicValidated}\n          />\n        </FormGroupWithPopover>\n      ) : (\n        <TextWithLabelPopover\n          fieldId=\"topic-name\"\n          btnAriaLabel=\"topic detail name\"\n          fieldLabel=\"Name\"\n          fieldValue={topicData.name}\n          popoverBody={t(\"topic_name_description\")}\n          popoverHeader={t(\"topic_name\")}\n        />\n      )}\n\n      <FormGroupWithPopover\n        fieldId=\"create-topic-partitions\"\n        fieldLabel=\"Partitions\"\n        labelHead={t(\"partitions\")}\n        labelBody={t(\"partitions_description\")}\n        buttonAriaLabel=\"More info for partitions field\"\n        helperText={\n          topicData.partitions.length >= availablePartitionLimit\n            ? t(\"partitions_warning\")\n            : t(\"partition_helper_text\")\n        }\n        validated={\n          topicData.partitions.length >= availablePartitionLimit\n            ? \"warning\"\n            : \"default\"\n        }\n      >\n        <NumberInput\n          id=\"create-topic-partitions\"\n          inputName=\"num-partitions\"\n          onChange={onPartitionsChange}\n          data-testid={t(\"partitions\")}\n          onPlus={handleOnPlus}\n          onMinus={handleOnMinus}\n          value={\n            topicData.partitions.length == 0 ? \"\" : topicData.partitions.length\n          }\n          plusBtnProps={{ name: \"num-partitions\" }}\n          minusBtnProps={{ name: \"num-partitions\" }}\n          min={isCreate ? 1 : initialPartitions.length}\n        />\n      </FormGroupWithPopover>\n\n      {/*<TextWithLabelPopover\n        fieldId=\"replicas\"\n        btnAriaLabel={t(\"replicas\")}\n        fieldLabel={t(\"replicas\")}\n        popoverBody={t(\"replicas_description\")}\n        popoverHeader={t(\"replicas\")}\n      />*/}\n      <TextWithLabelPopover\n        fieldId=\"min-insync-replicas\"\n        btnAriaLabel=\"topic detail min-in-sync replica\"\n        fieldLabel=\"Minimum in-sync replicas\"\n        fieldValue={topicData[\"min.insync.replicas\"].toString()}\n        popoverBody={t(\"min_insync_replicas_description\")}\n        popoverHeader={t(\"min_insync_replicas\")}\n      />\n      <FormGroupWithPopover\n        fieldId=\"retention\"\n        fieldLabel=\"Retention time\"\n        labelHead={t(\"retention_time\")}\n        labelBody={t(\"retention_time_description\")}\n        buttonAriaLabel=\"More info for retention time field\"\n      >\n        <Stack hasGutter>\n          <Radio\n            isChecked={radioTimeSelectValue === \"custom\"}\n            name=\"custom-retention-time\"\n            onChange={() => handleRetentionMessageTime(\"custom\")}\n            label={retentionTimeInput}\n            className=\"kafka-ui--radio-label__number-input\"\n            aria-label=\"custom duration\"\n            id=\"custom-retention-time\"\n            value={radioTimeSelectValue}\n          />\n          <Radio\n            isChecked={radioTimeSelectValue === \"unlimited\"}\n            name=\"unlimited-retention-time\"\n            onChange={() => handleRetentionMessageTime(\"unlimited\")}\n            label=\"Unlimited time\"\n            aria-label=\"Unlimited\"\n            id=\"unlimited-retention-time\"\n            value={radioTimeSelectValue}\n          />\n        </Stack>\n      </FormGroupWithPopover>\n      <FormGroupWithPopover\n        fieldId=\"retention-size\"\n        fieldLabel=\"Retention size\"\n        labelHead={t(\"retention_size\")}\n        labelBody={t(\"retention_size_description\")}\n        buttonAriaLabel=\"More info for retention size field\"\n      >\n        <Stack hasGutter>\n          <Radio\n            isChecked={radioSizeSelectValue === \"custom\"}\n            name=\"custom-retention-size\"\n            onChange={() => handleRetentionMessageSize(\"custom\")}\n            label={retentionSizeInput}\n            className=\"kafka-ui--radio-label__number-input\"\n            aria-label=\"custom size\"\n            id=\"custom-retention-size\"\n            value={radioSizeSelectValue}\n          />\n          <Radio\n            isChecked={radioSizeSelectValue === \"unlimited\"}\n            name=\"unlimited-retention-size\"\n            onChange={() => handleRetentionMessageSize(\"unlimited\")}\n            label=\"Unlimited size\"\n            aria-label=\"Unlimited\"\n            id=\"unlimited-retention-size\"\n            value={radioSizeSelectValue}\n          />\n        </Stack>\n      </FormGroupWithPopover>\n    </FormSection>\n  );\n};\n\nexport { CoreConfiguration };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype FlushProps = {\n  defaultFlushIntervalMessages: bigint;\n  defaultFlushIntervalTime: bigint;\n};\n\nconst Flush: React.FC<FlushProps> = ({\n  defaultFlushIntervalMessages,\n  defaultFlushIntervalTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"flush\")} id=\"flush\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"flush_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"flush-interval-messages\"\n        btnAriaLabel={t(\"flush_interval_messages\")}\n        fieldLabel={t(\"flush_interval_messages\")}\n        fieldValue={t(\"messages_time\", {\n          value: defaultFlushIntervalMessages,\n        })}\n        popoverBody={t(\"flush_interval_messages_description\")}\n        popoverHeader={t(\"flush_interval_messages\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"flush-interval-time\"\n        btnAriaLabel={t(\"flush_interval_time\")}\n        fieldLabel={t(\"flush_interval_time\")}\n        fieldValue={t(\"milliseconds_time\", { value: defaultFlushIntervalTime })}\n        popoverBody={t(\"flush_interval_time_description\")}\n        popoverHeader={t(\"flush_interval_time\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Flush };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport {\n  DropdownWithToggle,\n  FormGroupWithPopover,\n  useTranslation,\n} from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\nimport type { IDropdownOption } from \"./types\";\nimport { TopicConfig } from \"ui-models/src/models/topic-config\";\n\nexport type LogProps = {\n  topicData: Topic;\n  setTopicData: (data: Topic) => void;\n  defaultDeleteRetentionTime: bigint;\n  defaultMinCleanbleRatio: number;\n  defaultMinimumCompactionLagTime: bigint;\n};\n\nconst Log: React.FC<LogProps> = ({\n  topicData,\n  setTopicData,\n  defaultDeleteRetentionTime,\n  defaultMinCleanbleRatio,\n  defaultMinimumCompactionLagTime,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  const cleanupPolicyOptions: IDropdownOption[] = [\n    {\n      key: \"compact\",\n      value: \"compact\",\n      label: t(\"compact\"),\n      isDisabled: false,\n    },\n    {\n      key: \"delete\",\n      value: \"delete\",\n      label: t(\"common:delete\"),\n      isDisabled: false,\n    },\n    {\n      key: \"delete, compact\",\n      value: \"compact,delete\",\n      label: `${t(\"compact\")},${t(\"common:delete\")}`,\n      isDisabled: false,\n    },\n  ];\n\n  const onSelectOption = (value: string) => {\n    setTopicData({\n      ...topicData,\n      \"cleanup.policy\": value as TopicConfig[\"cleanup.policy\"],\n    });\n  };\n\n  return (\n    <FormSection title={t(\"log\")} id=\"log\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p}>{t(\"log_section_info\")}</Text>\n        <Text component={TextVariants.small}>{t(\"log_section_info_note\")}</Text>\n      </TextContent>\n\n      <FormGroupWithPopover\n        fieldId=\"cleanup-policy\"\n        fieldLabel={t(\"cleanup_policy\")}\n        labelHead={t(\"cleanup_policy\")}\n        labelBody={t(\"cleanup_policy_description\")}\n        buttonAriaLabel={t(\"cleanup_policy\")}\n      >\n        <DropdownWithToggle\n          id=\"log-section-policy-type-dropdown\"\n          toggleId=\"log-section-policy-type-dropdowntoggle\"\n          ariaLabel={t(\"select_policy\")}\n          onSelectOption={onSelectOption}\n          items={cleanupPolicyOptions}\n          name=\"cleanup-policy\"\n          value={topicData[\"cleanup.policy\"]}\n          isLabelAndValueNotSame={true}\n          key={topicData[\"cleanup.policy\"]}\n        />\n      </FormGroupWithPopover>\n\n      <TextWithLabelPopover\n        fieldId=\"delete-retention-time\"\n        btnAriaLabel={t(\"delete_retention_time\")}\n        fieldLabel={t(\"delete_retention_time\")}\n        fieldValue={t(\"milliseconds_time_to_day\", {\n          value: defaultDeleteRetentionTime,\n          days: convert(Number(defaultDeleteRetentionTime), \"milliseconds\").to(\n            \"days\"\n          ),\n        })}\n        popoverBody={t(\"delete_retention_time_description\")}\n        popoverHeader={t(\"delete_retention_time\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"min-cleanable-ratio\"\n        btnAriaLabel={t(\"min_cleanable_ratio\")}\n        fieldLabel={t(\"min_cleanable_ratio\")}\n        fieldValue={String(defaultMinCleanbleRatio)}\n        popoverBody={t(\"min_cleanable_ratio_description\")}\n        popoverHeader={t(\"min_cleanable_ratio\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"min-compaction-lag-time-description\"\n        btnAriaLabel={t(\"min_compaction_lag_time\")}\n        fieldLabel={t(\"min_compaction_lag_time\")}\n        fieldValue={t(\"milliseconds_time\", {\n          value: defaultMinimumCompactionLagTime,\n        })}\n        popoverBody={t(\"min_compaction_lag_time_description\")}\n        popoverHeader={t(\"min_compaction_lag_time\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Log };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype MessageProps = {\n  defaultMaximumMessageBytes: bigint;\n  defaultMessageTimestampType: string;\n  defaultMaxMessageTimestampDiff: bigint;\n};\n\nconst Message: React.FC<MessageProps> = ({\n  defaultMaximumMessageBytes,\n  defaultMessageTimestampType,\n  defaultMaxMessageTimestampDiff,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"messages\")} id=\"messages\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"message_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"max-message-size\"\n        btnAriaLabel={t(\"max_message_size\")}\n        fieldLabel={t(\"max_message_size\")}\n        fieldValue={t(\"bytes_size\", { value: defaultMaximumMessageBytes })}\n        popoverBody={t(\"max_message_size_description\")}\n        popoverHeader={t(\"max_message_size\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"message-timestamp-type\"\n        btnAriaLabel={t(\"message_timestamp_type\")}\n        fieldLabel={t(\"message_timestamp_type\")}\n        fieldValue={String(defaultMessageTimestampType)}\n        popoverBody={t(\"message_timestamp_type_description\")}\n        popoverHeader={t(\"message_timestamp_type\")}\n      />\n      <TextWithLabelPopover\n        fieldId=\"max-message-timestamp-diff\"\n        btnAriaLabel={t(\"max_message_timestamp_diff\")}\n        fieldLabel={t(\"max_message_timestamp_diff\")}\n        fieldValue={t(\"milliseconds_time\", {\n          value: defaultMaxMessageTimestampDiff,\n        })}\n        popoverBody={t(\"max_message_timestamp_diff_description\")}\n        popoverHeader={t(\"max_message_timestamp_diff\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"compression-type\"\n        btnAriaLabel={t(\"compression_type\")}\n        fieldLabel={t(\"compression_type\")}\n        fieldValue={\"Producer\"}\n        popoverBody={t(\"compression_type_description\")}\n        popoverHeader={t(\"compression_type\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"message-format\"\n        btnAriaLabel={t(\"message_format\")}\n        fieldLabel={t(\"message_format\")}\n        fieldValue={\"2.7-IV2\"}\n        popoverBody={t(\"message_format_description\")}\n        popoverHeader={t(\"message_format\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Message };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\nconst Replication: React.FC = () => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <FormSection title={t(\"replication\")} id=\"replication\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {t(\"replication_section_info\")}\n          <Text component={TextVariants.small}>\n            {t(\"replication_section_info_note\")}\n          </Text>\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"unclean-leader-election\"\n        btnAriaLabel={t(\"unclean_leader_election\")}\n        fieldLabel={t(\"unclean_leader_election\")}\n        fieldValue={t(\"common:disabled\")}\n        popoverBody={t(\"unclean_leader_election_description\")}\n        popoverHeader={t(\"unclean_leader_election\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { Replication };\n","import {\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport convert from \"convert\";\nimport type React from \"react\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\ntype TopicAdavanceIndexProps = {\n  defaultIndexIntervalSize: bigint;\n  defaultSegmentIndexSize: bigint;\n};\n\nconst TopicAdvanceIndex: React.FC<TopicAdavanceIndexProps> = ({\n  defaultIndexIntervalSize,\n  defaultSegmentIndexSize,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <FormSection title={t(\"index\")} id=\"index\" titleElement={\"h2\"}>\n      <TextContent>\n        <Text component={TextVariants.p} className=\"section-info\">\n          {t(\"index_section_info\")}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId=\"index-interval-size\"\n        btnAriaLabel={t(\"index_interval_size\")}\n        fieldLabel={t(\"index_interval_size\")}\n        fieldValue={t(\"bytes_to_kibibytes\", {\n          bytes: defaultIndexIntervalSize,\n          kibibytes: convert(Number(defaultIndexIntervalSize), \"bytes\").to(\n            \"kibibytes\"\n          ),\n        })}\n        popoverBody={t(\"index_interval_size_description\")}\n        popoverHeader={t(\"index_interval_size\")}\n      />\n\n      <TextWithLabelPopover\n        fieldId=\"segment-index-size\"\n        btnAriaLabel={t(\"segment_index_size\")}\n        fieldLabel={t(\"segment_index_size\")}\n        fieldValue={t(\"bytes_to_mebibytes\", {\n          bytes: defaultSegmentIndexSize,\n          mebibytes: convert(Number(defaultIndexIntervalSize), \"bytes\").to(\n            \"mebibytes\"\n          ),\n        })}\n        popoverBody={t(\"segment_index_size_description\")}\n        popoverHeader={t(\"segment_index_size\")}\n      />\n    </FormSection>\n  );\n};\n\nexport { TopicAdvanceIndex };\n","import { JumpLinks, JumpLinksItem, SidebarPanel } from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\n\nexport type TopicAdvanceJumpLinksProps = {\n  canHaveDelete?: boolean;\n};\nconst TopicAdvanceJumpLinks: React.FC<TopicAdvanceJumpLinksProps> = ({\n  canHaveDelete,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <SidebarPanel variant=\"sticky\">\n      <JumpLinks\n        isVertical\n        label={t(\"jump_to_section\")}\n        scrollableSelector=\".topic-properties\"\n        style={{ position: \"sticky\" }}\n        // offset={-164} // for header\n      >\n        <JumpLinksItem key={0} href=\"#core-configuration\">\n          {t(\"core_configuration\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={1} href=\"#messages\">\n          {t(\"messages\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={2} href=\"#log\">\n          {t(\"log\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={3} href=\"#replication\">\n          {t(\"replication\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={4} href=\"#cleanup\">\n          {t(\"cleanup\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={5} href=\"#index\">\n          {t(\"index\")}\n        </JumpLinksItem>\n        <JumpLinksItem key={6} href=\"#flush\">\n          {t(\"flush\")}\n        </JumpLinksItem>\n        {canHaveDelete ? (\n          <JumpLinksItem key={7} href=\"#delete\">\n            {t(\"delete\")}\n          </JumpLinksItem>\n        ) : (\n          <></>\n        )}\n      </JumpLinks>\n    </SidebarPanel>\n  );\n};\n\nexport { TopicAdvanceJumpLinks };\n","import {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  PageGroup,\n  PageSection,\n  Sidebar,\n  SidebarContent,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"..\";\nimport { Cleanup } from \"./Cleanup\";\nimport { CoreConfiguration } from \"./CoreConfiguration\";\nimport { Flush } from \"./Flush\";\nimport { Log } from \"./Log\";\nimport { Message } from \"./Message\";\nimport { Replication } from \"./Replication\";\nimport { TopicAdvanceIndex } from \"./TopicAdvanceIndex\";\nimport { TopicAdvanceJumpLinks } from \"./TopicAdvanceJumpLinks\";\n\nexport type TopicAdvancePageProps = {\n  isCreate: boolean;\n  onConfirm: (data: Topic) => void;\n  handleCancel?: () => void;\n  topicData: Topic;\n  setTopicData: (val: Topic) => void;\n  checkTopicName?: (value: string) => boolean;\n  availablePartitionLimit: number;\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n  radioTimeSelectValue: RadioSelectType;\n  setRadioTimeSelectValue: (value: RadioSelectType) => void;\n  radioSizeSelectValue: RetentionSizeRadioSelect;\n  setRadioSizeSelectValue: (data: RetentionSizeRadioSelect) => void;\n};\n\nexport const TopicAdvancePage: React.FunctionComponent<\n  TopicAdvancePageProps\n> = ({\n  isCreate,\n  onConfirm,\n  handleCancel,\n  topicData,\n  setTopicData,\n  checkTopicName,\n  availablePartitionLimit,\n  customTimeValue,\n  setCustomTimeValue,\n  radioTimeSelectValue,\n  setRadioTimeSelectValue,\n  setCustomRetentionSizeValue,\n  customRetentionSizeValue,\n  radioSizeSelectValue,\n  setRadioSizeSelectValue,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n  const actionText = isCreate ? t(\"create_topic\") : t(\"common:save\");\n\n  //states\n\n  const [topicValidated, setTopicValidated] = useState<ValidatedOptions>(\n    ValidatedOptions.default\n  );\n  const [invalidText, setInvalidText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [warning, setWarning] = useState<boolean>(false);\n  const onValidateTopic = () => {\n    if (isCreate) {\n      if (topicData?.name.length < 1) {\n        setInvalidText(t(\"common:required\"));\n        setTopicValidated(ValidatedOptions.error);\n      } else {\n        setIsLoading(true);\n\n        const isTopicNameValid =\n          checkTopicName && checkTopicName(topicData?.name);\n        if (!isTopicNameValid) {\n          setIsLoading(false);\n          setInvalidText(t(\"already_exists\", { name: topicData?.name })),\n            setTopicValidated(ValidatedOptions.error);\n        } else onConfirm(topicData);\n      }\n    } else {\n      onConfirm(topicData);\n    }\n  };\n  return (\n    <PageSection padding={{ default: \"noPadding\" }}>\n      <Sidebar hasGutter>\n        <TopicAdvanceJumpLinks />\n        <SidebarContent>\n          <PageGroup\n            hasOverflowScroll={true}\n            id=\"topic-detail-view\"\n            aria-label={\"TODO\"}\n          >\n            <PageSection padding={{ default: \"noPadding\" }}>\n              <Form>\n                <CoreConfiguration\n                  isCreate={isCreate}\n                  topicData={topicData}\n                  setTopicData={setTopicData}\n                  availablePartitionLimit={availablePartitionLimit}\n                  invalidText={invalidText}\n                  setInvalidText={setInvalidText}\n                  setTopicValidated={setTopicValidated}\n                  topicValidated={topicValidated}\n                  setWarning={setWarning}\n                  warning={warning}\n                  customRetentionSizeValue={customRetentionSizeValue}\n                  setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n                  customTimeValue={customTimeValue}\n                  setCustomTimeValue={setCustomTimeValue}\n                  radioTimeSelectValue={radioTimeSelectValue}\n                  setRadioTimeSelectValue={setRadioTimeSelectValue}\n                  radioSizeSelectValue={radioSizeSelectValue}\n                  setRadioSizeSelectValue={setRadioSizeSelectValue}\n                />\n                <Message\n                  defaultMaximumMessageBytes={\n                    topicData[\"max.message.bytes\"].value\n                  }\n                  defaultMessageTimestampType={\n                    topicData[\"message.timestamp.type\"]\n                  }\n                  defaultMaxMessageTimestampDiff={\n                    topicData[\"message.timestamp.difference.max.ms\"].value\n                  }\n                />\n                <Log\n                  topicData={topicData}\n                  setTopicData={setTopicData}\n                  defaultDeleteRetentionTime={topicData[\"retention.ms\"].value}\n                  defaultMinCleanbleRatio={\n                    topicData[\"min.cleanable.dirty.ratio\"]\n                  }\n                  defaultMinimumCompactionLagTime={\n                    topicData[\"min.compaction.lag.ms\"].value\n                  }\n                />\n                <Replication />\n                <Cleanup\n                  defaultLogSegmentSize={topicData[\"segment.bytes\"].value}\n                  defaultSegmentTime={topicData[\"segment.ms\"].value}\n                  defaultSegmentJitterTime={\n                    topicData[\"segment.jitter.ms\"].value\n                  }\n                  defaultFileDeleteDelay={\n                    topicData[\"file.delete.delay.ms\"].value\n                  }\n                />\n                <TopicAdvanceIndex\n                  defaultIndexIntervalSize={\n                    topicData[\"index.interval.bytes\"].value\n                  }\n                  defaultSegmentIndexSize={\n                    topicData[\"segment.index.bytes\"].value\n                  }\n                />\n                <Flush\n                  defaultFlushIntervalMessages={\n                    topicData[\"flush.messages\"].value\n                  }\n                  defaultFlushIntervalTime={topicData[\"flush.ms\"].value}\n                />\n              </Form>\n\n              <ActionGroup className=\"kafka-ui--sticky-footer\">\n                <Divider className=\"kafka-ui--divider--FlexShrink\" />\n                <Button\n                  isLoading={isLoading}\n                  onClick={onValidateTopic}\n                  variant=\"primary\"\n                  data-testid={\n                    isCreate\n                      ? \"topicAdvanceCreate-actionCreate\"\n                      : \"tabProperties-actionSave\"\n                  }\n                  isDisabled={topicValidated !== \"default\"}\n                >\n                  {actionText}\n                </Button>\n                <Button\n                  onClick={handleCancel}\n                  variant=\"link\"\n                  data-testid={\n                    isCreate\n                      ? \"topicAdvanceCreate-actionCancel\"\n                      : \"tabProperties-actionCancel\"\n                  }\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </ActionGroup>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import { convert } from \"convert\";\nimport type { CustomRetentionSizeSelect } from \"./types\";\n\nexport const retentionSizeTransformer = (size: CustomRetentionSizeSelect) => {\n  switch (size.unit) {\n    case \"bytes\":\n      return BigInt(size.value);\n    case \"kibibytes\":\n      return convert(BigInt(size.value), \"kibibytes\").to(\"bytes\");\n    case \"mebibytes\":\n      return convert(BigInt(size.value), \"mebibytes\").to(\"bytes\");\n    case \"gibibytes\":\n      return convert(BigInt(size.value), \"gibibytes\").to(\"bytes\");\n    case \"tebibytes\":\n      return convert(BigInt(size.value), \"tebibytes\").to(\"bytes\");\n    case \"unlimited\":\n      return BigInt(size.value);\n  }\n};\n","import type { WizardStep } from \"@patternfly/react-core\";\nimport {\n  Divider,\n  PageSection,\n  PageSectionTypes,\n  PageSectionVariants,\n  ValidatedOptions,\n  Wizard,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport type { IWizardFooter } from \"./index\";\nimport {\n  StepMessageRetention,\n  StepPartitions,\n  StepReplicas,\n  StepTopicName,\n  WizardCustomFooter,\n} from \"./index\";\nimport { PartitionLimitWarning } from \"./PartitionLimitWarning\";\nimport { retentionTimeTransformer } from \"./retentionTimeTransformer\";\nimport { TopicAdvancePage } from \"./TopicAdvancePage\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"./types\";\nimport { retentionSizeTransformer } from \"./retentionSizeTransformer\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\n\nexport type CreateTopicWizardProps = {\n  isSwitchChecked: boolean;\n  setIsCreateTopic?: (value: boolean) => void;\n  onCloseCreateTopic: () => void;\n  onSave: (topicData: Topic) => void;\n  initialFieldsValue: Topic;\n  checkTopicName: (value: string) => boolean;\n  availablePartitionLimit: number;\n  availabilityZone: AZ;\n};\n\nexport const CreateTopicWizard: React.FC<CreateTopicWizardProps> = ({\n  isSwitchChecked,\n  onCloseCreateTopic,\n  onSave,\n  initialFieldsValue,\n  checkTopicName,\n  availablePartitionLimit,\n  availabilityZone,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  const [customTimeValue, setCustomTimeValue] = useState<CustomSelect>({\n    unit: \"days\",\n    value: 7,\n  });\n\n  const [customRetentionSizeValue, setCustomRetentionSizeValue] =\n    useState<CustomRetentionSizeSelect>({ unit: \"unlimited\", value: -1 });\n\n  const [topicNameValidated, setTopicNameValidated] =\n    useState<ValidatedOptions>(ValidatedOptions.default);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [invalidText, setInvalidText] = useState<string>(\"\");\n  const [topicData, setTopicData] = useState<Topic>(initialFieldsValue);\n  const [warningModalOpen, setWarningModalOpen] = useState<boolean>(false);\n  const [radioTimeSelectValue, setRadioTimeSelectValue] =\n    useState<RadioSelectType>(\"week\");\n\n  const [radioSizeSelectValue, setRadioSizeSelectValue] =\n    useState<RetentionSizeRadioSelect>(\"unlimited\");\n\n  const closeWizard = () => {\n    onCloseCreateTopic && onCloseCreateTopic();\n  };\n\n  const steps: WizardStep[] = [\n    {\n      name: t(\"topic_name\"),\n      enableNext:\n        topicData?.name.trim() !== \"\" &&\n        topicNameValidated === ValidatedOptions.default,\n      component: (\n        <StepTopicName\n          newTopicData={topicData}\n          onTopicNameChange={setTopicData}\n          topicNameValidated={topicNameValidated}\n          onValidationCheck={setTopicNameValidated}\n          invalidText={invalidText}\n          setInvalidText={setInvalidText}\n        />\n      ),\n    },\n    {\n      name: t(\"partitions\"),\n      canJumpTo: topicData?.name.trim() !== \"\",\n      component: (\n        <StepPartitions\n          newTopicData={topicData}\n          onPartitionsChange={setTopicData}\n          availablePartitionLimit={availablePartitionLimit}\n        />\n      ),\n    },\n    {\n      name: t(\"message_retention\"),\n      canJumpTo: topicData?.name.trim() !== \"\",\n      component: (\n        <StepMessageRetention\n          customRetentionSizeValue={customRetentionSizeValue}\n          setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n          customTimeValue={customTimeValue}\n          setCustomTimeValue={setCustomTimeValue}\n          radioTimeSelectValue={radioTimeSelectValue}\n          setRadioTimeSelectValue={setRadioTimeSelectValue}\n          radioSizeSelectValue={radioSizeSelectValue}\n          setRadioSizeSelectValue={setRadioSizeSelectValue}\n        />\n      ),\n    },\n    {\n      name: t(\"replicas\"),\n      canJumpTo: topicData?.name.trim() !== \"\",\n      component: (\n        <StepReplicas\n          minInSyncReplica={topicData[\"min.insync.replicas\"]}\n          availabilityZone={availabilityZone}\n        />\n      ),\n      nextButtonText: t(\"finish\"),\n    },\n  ];\n\n  const title = t(\"wizard_title\");\n\n  const onTransform = () => {\n    const tranformedValueInMilliseconds =\n      retentionTimeTransformer(customTimeValue);\n    const tranformedValueInBytes = retentionSizeTransformer(\n      customRetentionSizeValue\n    );\n    const transformedTopic: Topic = {\n      ...topicData,\n      \"retention.ms\": {\n        type: \"ms\",\n        value: tranformedValueInMilliseconds || BigInt(-1),\n      },\n      \"retention.bytes\": { type: \"bytes\", value: tranformedValueInBytes },\n    };\n    onSaveTopic(transformedTopic);\n  };\n\n  const onValidate: IWizardFooter[\"onValidate\"] = (onNext) => {\n    if (topicData?.name.length < 1) {\n      setInvalidText(t(\"common:required\"));\n      setTopicNameValidated(ValidatedOptions.error);\n    } else {\n      setIsLoading(true);\n\n      const isTopicNameValid = checkTopicName(topicData?.name);\n      if (!isTopicNameValid) {\n        setIsLoading(false);\n        setInvalidText(t(\"already_exists\", { name: topicData?.name })),\n          setTopicNameValidated(ValidatedOptions.error);\n      } else onNext();\n    }\n  };\n  const onSaveTopic = (transformedTopic: Topic) => {\n    if (topicData.partitions.length >= availablePartitionLimit)\n      setWarningModalOpen(true);\n    else onSave(transformedTopic);\n  };\n  return (\n    <>\n      {isSwitchChecked ? (\n        <>\n          <Divider className=\"kafka-ui--divider--FlexShrink\" />\n          <PageSection\n            variant={PageSectionVariants.light}\n            hasOverflowScroll={true}\n            aria-label={\"TODO\"}\n          >\n            {\n              <TopicAdvancePage\n                isCreate={true}\n                onConfirm={onTransform}\n                handleCancel={onCloseCreateTopic}\n                topicData={topicData}\n                setTopicData={setTopicData}\n                checkTopicName={checkTopicName}\n                availablePartitionLimit={availablePartitionLimit}\n                customRetentionSizeValue={customRetentionSizeValue}\n                setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n                customTimeValue={customTimeValue}\n                setCustomTimeValue={setCustomTimeValue}\n                radioTimeSelectValue={radioTimeSelectValue}\n                setRadioTimeSelectValue={setRadioTimeSelectValue}\n                radioSizeSelectValue={radioSizeSelectValue}\n                setRadioSizeSelectValue={setRadioSizeSelectValue}\n              />\n            }\n            {warningModalOpen && (\n              <PartitionLimitWarning\n                topicData={topicData}\n                onSave={onSaveTopic}\n                isModalOpen={warningModalOpen}\n                setIsModalOpen={setWarningModalOpen}\n              />\n            )}\n          </PageSection>\n        </>\n      ) : (\n        <PageSection\n          variant={PageSectionVariants.light}\n          type={PageSectionTypes.wizard}\n          hasOverflowScroll={true}\n          aria-label={\"TODO\"}\n        >\n          <Wizard\n            navAriaLabel={`${title} steps`}\n            mainAriaLabel={`${title} content`}\n            steps={steps}\n            onClose={closeWizard}\n            onSave={onTransform}\n            data-testid=\"topicBasicCreate-Wizard\"\n            footer={\n              <WizardCustomFooter\n                isLoading={isLoading}\n                onValidate={onValidate}\n                topicNameValidated={topicNameValidated}\n                closeWizard={closeWizard}\n              />\n            }\n          />\n          {warningModalOpen && (\n            <PartitionLimitWarning\n              topicData={topicData}\n              onSave={onSave}\n              isModalOpen={warningModalOpen}\n              setIsModalOpen={setWarningModalOpen}\n            />\n          )}\n        </PageSection>\n      )}\n    </>\n  );\n};\n","import {\n  Form,\n  FormGroup,\n  FormSection,\n  Radio,\n  Stack,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { CustomRetentionMessage } from \"./CustomRetentionMessage\";\nimport { CustomRetentionSize } from \"./CustomRetentionSize\";\nimport type {\n  CustomRetentionSizeSelect,\n  CustomSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n} from \"./types\";\n\nexport type StepMessageRetentionProps = {\n  customRetentionSizeValue: CustomRetentionSizeSelect;\n  setCustomRetentionSizeValue: (data: CustomRetentionSizeSelect) => void;\n  customTimeValue: CustomSelect;\n  setCustomTimeValue: (data: CustomSelect) => void;\n  radioTimeSelectValue: RadioSelectType;\n  setRadioTimeSelectValue: (value: RadioSelectType) => void;\n  radioSizeSelectValue: RetentionSizeRadioSelect;\n  setRadioSizeSelectValue: (data: RetentionSizeRadioSelect) => void;\n};\n\nexport const StepMessageRetention: React.FC<StepMessageRetentionProps> = ({\n  customTimeValue,\n  setCustomTimeValue,\n  radioTimeSelectValue,\n  setRadioTimeSelectValue,\n  setCustomRetentionSizeValue,\n  customRetentionSizeValue,\n  radioSizeSelectValue,\n  setRadioSizeSelectValue,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  const handleRetentionMessageSize = (value: RetentionSizeRadioSelect) => {\n    if (value === \"unlimited\") {\n      setRadioSizeSelectValue(value);\n      setCustomRetentionSizeValue({ value: -1, unit: \"unlimited\" });\n    } else {\n      setCustomRetentionSizeValue({ value: 1, unit: \"bytes\" });\n      setRadioSizeSelectValue(value);\n    }\n  };\n\n  const retentionTime = (value: RadioSelectType) => {\n    switch (value) {\n      case \"day\":\n        setCustomTimeValue({ value: 1, unit: \"days\" });\n        break;\n      case \"week\":\n        setCustomTimeValue({ value: 1, unit: \"weeks\" });\n        break;\n      case \"custom\":\n        setCustomTimeValue({ value: 7, unit: \"days\" });\n        break;\n      case \"unlimited\":\n        setCustomTimeValue({ value: -1, unit: \"unlimited\" });\n        break;\n    }\n    setRadioTimeSelectValue(value);\n  };\n\n  return (\n    <>\n      <Form onSubmit={(event) => event.preventDefault()}>\n        <FormSection\n          title={t(\"message_retention\")}\n          id=\"message-retention\"\n          titleElement={\"h2\"}\n        >\n          <TextContent>\n            <Text component={TextVariants.p}>\n              {t(\"message_retention_info\")}\n            </Text>\n            <Text component={TextVariants.small}>\n              {t(\"message_retention_info_note\")}\n            </Text>\n          </TextContent>\n\n          <FormGroup\n            fieldId=\"form-group-retention-time-in-wizard\"\n            label={t(\"retention_time\")}\n            isRequired\n          >\n            <Stack hasGutter>\n              <Radio\n                isChecked={radioTimeSelectValue === \"day\"}\n                name=\"radioDay\"\n                onChange={() => retentionTime(\"day\")}\n                label=\"A day\"\n                aria-label=\"A day\"\n                id=\"radio-controlled-1\"\n                value={radioTimeSelectValue}\n              />\n              <Radio\n                isChecked={radioTimeSelectValue === \"week\"}\n                name=\"radioWeek\"\n                onChange={() => retentionTime(\"week\")}\n                label=\"A week\"\n                aria-label=\"A week\"\n                id=\"radio-controlled-2\"\n                value={radioTimeSelectValue}\n              />\n              <Radio\n                isChecked={radioTimeSelectValue === \"custom\"}\n                name=\"radioCustomTime\"\n                onChange={() => retentionTime(\"custom\")}\n                label=\"Custom duration\"\n                aria-label=\"custom input\"\n                id=\"radio-controlled-4\"\n                value={radioTimeSelectValue}\n              />\n              {radioTimeSelectValue === \"custom\" && (\n                <CustomRetentionMessage\n                  customTimeValue={customTimeValue}\n                  setCustomTimeValue={setCustomTimeValue}\n                />\n              )}\n              <Radio\n                isChecked={radioTimeSelectValue === \"unlimited\"}\n                name=\"radioUnlimitedTime\"\n                onChange={() => retentionTime(\"unlimited\")}\n                label=\"Unlimited time\"\n                aria-label=\"Unlimited\"\n                id=\"radio-controlled-3\"\n                value={radioTimeSelectValue}\n              />\n            </Stack>\n          </FormGroup>\n          <FormGroup\n            fieldId=\"form-group-retention-size-in-wizard\"\n            label=\"Retention size\"\n          >\n            <Stack hasGutter>\n              <Radio\n                isChecked={radioSizeSelectValue === \"unlimited\"}\n                name=\"radioUnlimitedSize\"\n                onChange={() => handleRetentionMessageSize(\"unlimited\")}\n                label=\"Unlimited size\"\n                aria-label=\"Unlimited\"\n                id=\"radio-controlled-6\"\n                value={radioSizeSelectValue}\n              />\n              <Radio\n                isChecked={radioSizeSelectValue === \"custom\"}\n                name=\"radioCustomSize\"\n                onChange={() => handleRetentionMessageSize(\"custom\")}\n                label=\"Custom size\"\n                aria-label=\"custom size\"\n                id=\"radio-controlled-5\"\n                value={radioSizeSelectValue}\n              />\n              {radioSizeSelectValue === \"custom\" && (\n                <CustomRetentionSize\n                  customRetentionSizeValue={customRetentionSizeValue}\n                  setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n                />\n              )}\n            </Stack>\n          </FormGroup>\n        </FormSection>\n      </Form>\n    </>\n  );\n};\n","import type { NumberInputProps } from \"@patternfly/react-core\";\nimport {\n  Form,\n  FormGroup,\n  FormSection,\n  NumberInput,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\n\nexport type StepPartitionsProps = {\n  newTopicData: Topic;\n  onPartitionsChange: (value: Topic) => void;\n  availablePartitionLimit: number;\n};\n\nexport const StepPartitions: React.FC<StepPartitionsProps> = ({\n  newTopicData,\n  onPartitionsChange,\n  availablePartitionLimit,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  const handleOnPlus = () => {\n    const newPartitions = [\n      ...newTopicData.partitions,\n      { partition: newTopicData.partitions.length },\n    ];\n    onPartitionsChange({\n      ...newTopicData,\n      partitions: newPartitions,\n    });\n  };\n\n  const handleOnMinus = () => {\n    const { partitions } = newTopicData;\n    const newPartitions = partitions.slice(0, partitions.length - 1);\n    onPartitionsChange({\n      ...newTopicData,\n      partitions: newPartitions,\n    });\n  };\n\n  const handlePartitionTouchspinChange: NumberInputProps[\"onChange\"] = (\n    event\n  ) => {\n    const newPartitionCount = Number((event.target as HTMLInputElement).value);\n    const newPartitions = Array.from(\n      { length: newPartitionCount },\n      (_, i) => newTopicData.partitions[i] ?? { partition: i }\n    );\n    onPartitionsChange({\n      ...newTopicData,\n      partitions: newPartitions,\n    });\n  };\n  const onBlur = () => {\n    if (newTopicData.partitions.length < 1) {\n      onPartitionsChange({ ...newTopicData, partitions: [{ partition: 1 }] });\n    }\n  };\n\n  return (\n    <Form>\n      <FormSection title={t(\"partitions\")} id=\"partitions\" titleElement={\"h2\"}>\n        <TextContent>\n          <Text component={TextVariants.p}>{t(\"partition_info\")}</Text>\n          <Text component={TextVariants.small}>{t(\"partition_info_note\")}</Text>\n        </TextContent>\n\n        <FormGroup\n          label=\"Partitions\"\n          fieldId=\"step-topic-name-form\"\n          helperText={\n            newTopicData.partitions.length >= availablePartitionLimit\n              ? t(\"partitions_warning\")\n              : t(\"partition_helper_text\")\n          }\n          validated={\n            newTopicData.partitions.length >= availablePartitionLimit\n              ? \"warning\"\n              : \"default\"\n          }\n          isRequired\n        >\n          <NumberInput\n            onPlus={handleOnPlus}\n            onMinus={handleOnMinus}\n            value={\n              Number(newTopicData.partitions.length) == 0\n                ? \"\"\n                : Number(newTopicData.partitions.length)\n            }\n            inputName=\"input\"\n            onChange={handlePartitionTouchspinChange}\n            widthChars={20}\n            onBlur={onBlur}\n            min={1}\n          />\n        </FormGroup>\n      </FormSection>\n    </Form>\n  );\n};\n","import {\n  Alert,\n  Form,\n  FormSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\nimport { TextWithLabelPopover } from \"./TextWithLabelPopover\";\n\nexport type StepReplicasProps = {\n  //replicationFactor: number;\n  minInSyncReplica: number;\n  availabilityZone: AZ;\n};\n\nexport const StepReplicas: React.FC<StepReplicasProps> = ({\n  minInSyncReplica,\n  availabilityZone,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n\n  return (\n    <Form>\n      <FormSection\n        title={t(\"replicas\")}\n        id=\"replica-section\"\n        titleElement={\"h2\"}\n      >\n        <TextContent>\n          <Text component={TextVariants.p}>{t(\"replicas_info\")}</Text>\n          <Text component={TextVariants.small}>{t(\"replicas_detail\")}</Text>\n        </TextContent>\n        <Alert\n          variant=\"info\"\n          isInline\n          title={\n            availabilityZone == \"multi\"\n              ? t(\"replicas_helper_text_multi_az\")\n              : t(\"replicas_helper_text_single_az\")\n          }\n        />\n\n        {/*<TextWithLabelPopover\n          fieldId=\"replicas\"\n          btnAriaLabel={t(\"replicas\")}\n          fieldLabel={t(\"replicas\")}\n          popoverBody={t(\"replicas_description\")}\n          popoverHeader={t(\"replicas\")}\n        />*/}\n\n        <TextWithLabelPopover\n          fieldId=\"min-insync-replicas\"\n          btnAriaLabel=\"topic detail min-in-sync replica\"\n          fieldLabel=\"Minimum in-sync replicas\"\n          fieldValue={minInSyncReplica.toString()}\n          popoverBody={t(\"min_insync_replicas_description\")}\n          popoverHeader={t(\"min_insync_replicas\")}\n        />\n      </FormSection>\n    </Form>\n  );\n};\n","import {\n  Form,\n  FormGroup,\n  FormSection,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { useValidateTopic } from \"./useValidateTopic\";\n\nexport type StepTopicNameProps = {\n  newTopicData: Topic;\n  onTopicNameChange: (value: Topic) => void;\n  topicNameValidated: ValidatedOptions;\n  onValidationCheck: (value: ValidatedOptions) => void;\n  invalidText: string;\n  setInvalidText: (value: string) => void;\n};\n\nexport const StepTopicName: React.FC<StepTopicNameProps> = ({\n  newTopicData,\n  onTopicNameChange,\n  topicNameValidated,\n  onValidationCheck,\n  invalidText,\n  setInvalidText,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  const { validateName } = useValidateTopic();\n\n  const validationCheck = useCallback(\n    (inputValue: string) => {\n      const errorMessage = validateName(inputValue);\n      if (errorMessage) {\n        setInvalidText(errorMessage);\n        onValidationCheck(ValidatedOptions.error);\n      } else {\n        onValidationCheck(ValidatedOptions.default);\n      }\n    },\n    [setInvalidText, onValidationCheck, validateName]\n  );\n\n  useEffect(() => {\n    validationCheck(newTopicData.name);\n  }, [newTopicData.name, validationCheck]);\n\n  const handleTopicNameChange = (value: string) => {\n    validationCheck(value);\n    onTopicNameChange({ ...newTopicData, name: value });\n  };\n\n  return (\n    <Form onSubmit={(event) => event.preventDefault()}>\n      <FormSection title={t(\"topic_name\")} id=\"topic-name\" titleElement={\"h2\"}>\n        <TextContent>\n          <Text component={TextVariants.p}>{t(\"topic_name_info\")}</Text>\n          <Text component={TextVariants.small}>\n            {t(\"topic_name_info_note\")}\n          </Text>\n        </TextContent>\n        <FormGroup\n          label={t(\"topic_name\")}\n          fieldId=\"step-topic-name-form\"\n          helperText={t(\"topic_name_helper_text\")}\n          helperTextInvalid={invalidText}\n          validated={topicNameValidated}\n          isRequired\n        >\n          <TextInput\n            ouiaId={\"text-input\"}\n            isRequired\n            type=\"text\"\n            id=\"step-topic-name-input\"\n            name=\"step-topic-name\"\n            value={newTopicData.name}\n            onChange={handleTopicNameChange}\n            placeholder={t(\"enter_name\")}\n            validated={topicNameValidated}\n          />\n        </FormGroup>\n      </FormSection>\n    </Form>\n  );\n};\n","import type React from \"react\";\nimport {\n  WizardContextConsumer,\n  Button,\n  WizardFooter,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\n\nexport interface IWizardFooter {\n  isLoading: boolean;\n  onValidate: (value: () => void) => void;\n  topicNameValidated: ValidatedOptions;\n  closeWizard: () => void;\n}\n\nexport const WizardCustomFooter: React.FC<IWizardFooter> = ({\n  isLoading,\n  onValidate,\n  closeWizard,\n  topicNameValidated,\n}) => {\n  const { t } = useTranslation([\"create-topic\", \"common\"]);\n\n  return (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack }) => {\n          if (activeStep.name == t(\"topic_name\")) {\n            return (\n              <>\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isLoading={isLoading}\n                  onClick={() => onValidate(onNext)}\n                  isDisabled={\n                    topicNameValidated == ValidatedOptions.default\n                      ? false\n                      : true\n                  }\n                  ouiaId={\"button-next\"}\n                >\n                  {t(\"common:next\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-back\"}\n                  variant=\"secondary\"\n                  isDisabled={true}\n                >\n                  {t(\"common:back\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-cancel\"}\n                  variant=\"link\"\n                  onClick={closeWizard}\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </>\n            );\n          }\n\n          if (activeStep.name == \"Replicas\") {\n            return (\n              <>\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={onNext}\n                  ouiaId={\"button-finish\"}\n                >\n                  {t(\"common:finish\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-back\"}\n                  variant=\"secondary\"\n                  onClick={onBack}\n                >\n                  {t(\"common:back\")}\n                </Button>\n                <Button\n                  ouiaId={\"button-cancel\"}\n                  variant=\"link\"\n                  onClick={closeWizard}\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </>\n            );\n          }\n          return (\n            <>\n              <Button\n                ouiaId={\"button-next\"}\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={onNext}\n              >\n                {t(\"common:next\")}\n              </Button>\n              <Button\n                ouiaId={\"button-back\"}\n                variant=\"secondary\"\n                onClick={onBack}\n              >\n                {t(\"common:back\")}\n              </Button>\n              <Button\n                ouiaId={\"button-cancel\"}\n                variant=\"link\"\n                onClick={closeWizard}\n              >\n                {t(\"common:cancel\")}\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n};\n","import type React from \"react\";\nimport { useState } from \"react\";\nimport type { AZ } from \"ui-models/src/models/kafka\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { CreateTopicHead, CreateTopicWizard } from \"../components\";\n\nexport type CreateTopicPageProps = {\n  kafkaName: string;\n  kafkaPageLink: string;\n  kafkaInstanceLink: string;\n  onSave: (topicData: Topic) => void;\n  initialTopicValues: Topic;\n  onCloseCreateTopic: () => void;\n  checkTopicName: (value: string) => boolean;\n  availablePartitionLimit: number;\n  availabilityZone: AZ;\n};\n\nexport const CreateTopic: React.FC<CreateTopicPageProps> = ({\n  kafkaName,\n  kafkaPageLink,\n  kafkaInstanceLink,\n  onSave,\n  initialTopicValues,\n  onCloseCreateTopic,\n  checkTopicName,\n  availablePartitionLimit,\n  availabilityZone,\n}) => {\n  const [isSwitchChecked, setIsSwitchChecked] = useState<boolean>(false);\n\n  return (\n    <>\n      <CreateTopicHead\n        showAllOptions={isSwitchChecked}\n        kafkaName={kafkaName}\n        kafkaInstanceLink={kafkaInstanceLink}\n        kafkaPageLink={kafkaPageLink}\n        onShowAllOptions={setIsSwitchChecked}\n      />\n      <CreateTopicWizard\n        isSwitchChecked={isSwitchChecked}\n        onCloseCreateTopic={onCloseCreateTopic}\n        onSave={onSave}\n        initialFieldsValue={initialTopicValues}\n        checkTopicName={checkTopicName}\n        availablePartitionLimit={availablePartitionLimit}\n        availabilityZone={availabilityZone}\n      />\n    </>\n  );\n};\n","import { PageSection } from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useState } from \"react\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport { TopicAdvancePage } from \"../components/TopicAdvancePage\";\nimport { PartitionLimitWarning } from \"../components\";\nimport type {\n  CustomSelect,\n  CustomRetentionSizeSelect,\n  RadioSelectType,\n  RetentionSizeRadioSelect,\n  TimeUnit,\n} from \"../../\";\nimport { bytesToMemorySize, millisecondsToTime } from \"../../KafkaTopics/types\";\nimport type { CustomRetentionUnit } from \"../components/types\";\nimport { retentionSizeTransformer } from \"../components/retentionSizeTransformer\";\nimport { retentionTimeTransformer } from \"../components/retentionTimeTransformer\";\n\nexport type EditTopicPropertiesProps = {\n  topic: Topic;\n  onCancel: () => void;\n  onSave: (data: Topic) => void;\n  availablePartitionLimit: number;\n};\n\nexport const EditTopicProperties: FunctionComponent<\n  EditTopicPropertiesProps\n> = ({ topic, onCancel, onSave, availablePartitionLimit }) => {\n  const millisecondsToTimeValue = millisecondsToTime(\n    topic[\"retention.ms\"].value\n  );\n  const bytesToSizeValue = bytesToMemorySize(topic[\"retention.bytes\"].value);\n  const [customTimeValue, setCustomTimeValue] = useState<CustomSelect>({\n    unit:\n      topic[\"retention.ms\"].value != BigInt(-1)\n        ? (millisecondsToTimeValue.unit as TimeUnit)\n        : \"days\",\n    value:\n      topic[\"retention.ms\"].value != BigInt(-1)\n        ? Number(millisecondsToTimeValue.value)\n        : 7,\n  });\n\n  const [customRetentionSizeValue, setCustomRetentionSizeValue] =\n    useState<CustomRetentionSizeSelect>({\n      unit:\n        topic[\"retention.bytes\"].value != BigInt(-1)\n          ? (bytesToSizeValue.unit as CustomRetentionUnit)\n          : \"bytes\",\n      value:\n        topic[\"retention.bytes\"].value != BigInt(-1)\n          ? Number(bytesToSizeValue.value)\n          : 1,\n    });\n\n  const [radioTimeSelectValue, setRadioTimeSelectValue] =\n    useState<RadioSelectType>(\n      topic[\"retention.ms\"].value == BigInt(-1) ? \"unlimited\" : \"custom\"\n    );\n\n  const [radioSizeSelectValue, setRadioSizeSelectValue] =\n    useState<RetentionSizeRadioSelect>(\n      topic[\"retention.bytes\"].value == BigInt(-1) ? \"unlimited\" : \"custom\"\n    );\n\n  const [topicData, setTopicData] = useState<Topic>(topic);\n\n  const [warningModalOpen, setWarningModalOpen] = useState<boolean>(false);\n\n  const onSaveTopic = (transformedTopic: Topic) => {\n    if (topicData.partitions.length >= availablePartitionLimit)\n      setWarningModalOpen(true);\n    else onSave(transformedTopic);\n  };\n\n  const onTransform = () => {\n    const tranformedValueInMilliseconds =\n      retentionTimeTransformer(customTimeValue);\n    const tranformedValueInBytes = retentionSizeTransformer(\n      customRetentionSizeValue\n    );\n    const transformedTopic: Topic = {\n      ...topicData,\n      \"retention.ms\": {\n        type: \"ms\",\n        value: tranformedValueInMilliseconds || BigInt(-1),\n      },\n      \"retention.bytes\": { type: \"bytes\", value: tranformedValueInBytes },\n    };\n    onSaveTopic(transformedTopic);\n  };\n\n  return (\n    <PageSection\n      variant={\"light\"}\n      className={\"topic-properties\"}\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n    >\n      <TopicAdvancePage\n        isCreate={false}\n        onConfirm={onTransform}\n        handleCancel={onCancel}\n        topicData={topicData}\n        setTopicData={setTopicData}\n        availablePartitionLimit={availablePartitionLimit}\n        customRetentionSizeValue={customRetentionSizeValue}\n        setCustomRetentionSizeValue={setCustomRetentionSizeValue}\n        customTimeValue={customTimeValue}\n        setCustomTimeValue={setCustomTimeValue}\n        radioTimeSelectValue={radioTimeSelectValue}\n        setRadioTimeSelectValue={setRadioTimeSelectValue}\n        radioSizeSelectValue={radioSizeSelectValue}\n        setRadioSizeSelectValue={setRadioSizeSelectValue}\n      />\n      {warningModalOpen && (\n        <PartitionLimitWarning\n          topicData={topicData}\n          onSave={onSave}\n          isModalOpen={warningModalOpen}\n          setIsModalOpen={setWarningModalOpen}\n        />\n      )}\n    </PageSection>\n  );\n};\n","import {\n  Button,\n  Divider,\n  Form,\n  FormSection,\n  PageGroup,\n  PageSection,\n  Sidebar,\n  SidebarContent,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport type React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport type { Topic } from \"ui-models/src/models/topic\";\nimport {\n  formattedRetentionSize,\n  formattedRetentionTime,\n} from \"../../KafkaTopics/types\";\nimport { TextWithLabelPopover } from \"../components\";\nimport { Cleanup } from \"../components/Cleanup\";\nimport { Flush } from \"../components/Flush\";\nimport { Message } from \"../components/Message\";\nimport { Replication } from \"../components/Replication\";\nimport { TopicAdvanceIndex } from \"../components/TopicAdvanceIndex\";\nimport { TopicAdvanceJumpLinks } from \"../components/TopicAdvanceJumpLinks\";\n\nexport type TopicViewDetailProps = {\n  topic: Topic;\n  deleteTopicHref: string;\n  updateTopicHref: string;\n};\n\nexport const TopicProperties: React.FunctionComponent<TopicViewDetailProps> = ({\n  topic,\n  deleteTopicHref,\n  updateTopicHref,\n}) => {\n  const { t } = useTranslation([\"create-topic\"]);\n  return (\n    <PageSection\n      variant={\"light\"}\n      className={\"topic-properties\"}\n      hasOverflowScroll={true}\n      aria-label={\"TODO\"}\n    >\n      <Sidebar hasGutter>\n        <TopicAdvanceJumpLinks canHaveDelete={true} />\n        <SidebarContent>\n          <PageGroup\n            hasOverflowScroll={true}\n            aria-label={\"TODO\"}\n            id=\"topic-detail-view\"\n            className={\"pf-u-mb-4xl\"}\n          >\n            <PageSection padding={{ default: \"noPadding\" }}>\n              <Split>\n                <SplitItem isFilled>\n                  <Form id=\"topic-form\">\n                    <FormSection\n                      title={t(\"core_configuration\")}\n                      id=\"core-configuration\"\n                      titleElement={\"h2\"}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className=\"section-info\"\n                        >\n                          {t(\"core_config_info\")}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"topic-name\"\n                        btnAriaLabel={t(\"topic_name\")}\n                        fieldLabel={t(\"topic_name\")}\n                        fieldValue={topic.name}\n                        popoverBody={t(\"topic_name_description\")}\n                        popoverHeader={t(\"topic_name\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"partitions\"\n                        btnAriaLabel={t(\"partitions\")}\n                        fieldLabel={t(\"partitions\")}\n                        fieldValue={topic.partitions.length.toString()}\n                        popoverBody={t(\"partitions_description\")}\n                        popoverHeader={t(\"partitions\")}\n                      />\n\n                      {/*<TextWithLabelPopover\n                        fieldId=\"replicas\"\n                        btnAriaLabel={t(\"replicas\")}\n                        fieldLabel={t(\"replicas\")}\n                        fieldValue={}\n                        popoverBody={t(\"replicas_description\")}\n                        popoverHeader={t(\"replicas\")}\n                      />*/}\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-insync-replicas\"\n                        btnAriaLabel={t(\"min_insync_replicas\")}\n                        fieldLabel={t(\"min_insync_replicas\")}\n                        fieldValue={topic[\"min.insync.replicas\"].toString()}\n                        popoverBody={t(\"min_insync_replicas_description\")}\n                        popoverHeader={t(\"min_insync_replicas\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"retention-time\"\n                        btnAriaLabel={t(\"retention_time\")}\n                        fieldLabel={t(\"retention_time\")}\n                        fieldValue={formattedRetentionTime(\n                          topic[\"retention.ms\"].value\n                        )}\n                        popoverBody={t(\"retention_time_description\")}\n                        popoverHeader={t(\"retention_time\")}\n                        showUnlimited={true}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"retention-size\"\n                        btnAriaLabel={t(\"retention_size\")}\n                        fieldLabel={t(\"retention_size\")}\n                        fieldValue={formattedRetentionSize(\n                          topic[\"retention.bytes\"].value\n                        )}\n                        popoverHeader={t(\"retention_size\")}\n                        popoverBody={t(\"retention_size_description\")}\n                        showUnlimited={true}\n                      />\n                    </FormSection>\n                    <Message\n                      defaultMaximumMessageBytes={\n                        topic[\"max.message.bytes\"].value\n                      }\n                      defaultMessageTimestampType={\n                        topic[\"message.timestamp.type\"]\n                      }\n                      defaultMaxMessageTimestampDiff={\n                        topic[\"message.timestamp.difference.max.ms\"].value\n                      }\n                    />\n                    <FormSection title={t(\"log\")} id=\"log\" titleElement={\"h2\"}>\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t(\"log_section_info\")}\n                          <Text\n                            component={TextVariants.small}\n                            className=\"section-info-note\"\n                          >\n                            {t(\"log_section_info_note\")}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"cleanup-policy\"\n                        btnAriaLabel={t(\"cleanup_policy\")}\n                        fieldLabel={t(\"cleanup_policy\")}\n                        fieldValue={topic[\"cleanup.policy\"]}\n                        popoverBody={t(\"cleanup_policy_description\")}\n                        popoverHeader={t(\"cleanup_policy\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"delete-retention-time\"\n                        btnAriaLabel={t(\"delete_retention_time\")}\n                        fieldLabel={t(\"delete_retention_time\")}\n                        fieldValue={topic[\n                          \"delete.retention.ms\"\n                        ].value.toString()}\n                        popoverBody={t(\"delete_retention_time_description\")}\n                        popoverHeader={t(\"delete_retention_time\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-cleanable-ratio\"\n                        btnAriaLabel={t(\"min_cleanable_ratio\")}\n                        fieldLabel={t(\"min_cleanable_ratio\")}\n                        fieldValue={topic[\n                          \"min.cleanable.dirty.ratio\"\n                        ].toString()}\n                        popoverBody={t(\"min_cleanable_ratio_description\")}\n                        popoverHeader={t(\"min_cleanable_ratio\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-compaction-lag-time\"\n                        btnAriaLabel={t(\"min_compaction_lag_time\")}\n                        fieldLabel={t(\"min_compaction_lag_time\")}\n                        fieldValue={topic[\n                          \"min.compaction.lag.ms\"\n                        ].value.toString()}\n                        popoverBody={t(\"min_compaction_lag_time_description\")}\n                        popoverHeader={t(\"min_compaction_lag_time\")}\n                      />\n                    </FormSection>\n                    <Replication />\n                    <Cleanup\n                      defaultLogSegmentSize={topic[\"segment.bytes\"].value}\n                      defaultSegmentTime={topic[\"segment.ms\"].value}\n                      defaultSegmentJitterTime={\n                        topic[\"segment.jitter.ms\"].value\n                      }\n                      defaultFileDeleteDelay={\n                        topic[\"file.delete.delay.ms\"].value\n                      }\n                    />\n                    <TopicAdvanceIndex\n                      defaultIndexIntervalSize={\n                        topic[\"index.interval.bytes\"].value\n                      }\n                      defaultSegmentIndexSize={\n                        topic[\"segment.index.bytes\"].value\n                      }\n                    />\n                    <Flush\n                      defaultFlushIntervalMessages={\n                        topic[\"flush.messages\"].value\n                      }\n                      defaultFlushIntervalTime={topic[\"flush.ms\"].value}\n                    />\n                  </Form>\n\n                  <Divider className=\"pf-u-mt-2xl pf-u-mb-2xl\" />\n\n                  <TextContent>\n                    <Text component={TextVariants.h2} id=\"delete\">\n                      {t(\"delete_topic_irreversible\")}\n                    </Text>\n                    <Text component={TextVariants.p} className=\"section-info\">\n                      {t(\"delete_topic_info\")}\n                    </Text>\n                    <Button\n                      variant=\"danger\"\n                      data-testid=\"tabProperties-actionDelete\"\n                      component={(props) => (\n                        <Link {...props} to={deleteTopicHref}>\n                          {t(\"delete_topic\")}\n                        </Link>\n                      )}\n                    />\n                  </TextContent>\n                </SplitItem>\n                <SplitItem>\n                  <Button\n                    variant=\"primary\"\n                    data-testid=\"tabProperties-actionEdit\"\n                    component={(props) => (\n                      <Link {...props} to={updateTopicHref}>\n                        {t(\"edit_props\")}\n                      </Link>\n                    )}\n                  />\n                </SplitItem>\n              </Split>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import type { SelectProps } from \"@patternfly/react-core\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport type { FC } from \"react\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport type { OwnerAccount } from \"./types\";\n\nexport type SelectOwnerProps = {\n  isDisabled: boolean;\n  accounts: OwnerAccount[];\n  owner: string | undefined;\n  onChangeOwner: (owner: string | undefined) => void;\n};\n\nexport const SelectOwner: FC<SelectOwnerProps> = ({\n  isDisabled,\n  accounts,\n  owner,\n  onChangeOwner,\n}) => {\n  const { t } = useTranslation(\"kafka\");\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (isExpanded: boolean) => {\n    setIsOpen(isExpanded);\n  };\n\n  const onSelect: SelectProps[\"onSelect\"] = (_, owner) => {\n    onChangeOwner(owner as string);\n    setIsOpen(false);\n  };\n\n  function selectOptions(filter = \"\") {\n    const filterRegExp = new RegExp(filter, \"i\");\n    const filteredAccounts =\n      filter !== \"\"\n        ? accounts.filter(\n            (account) =>\n              filterRegExp.test(account.displayName) ||\n              filterRegExp.test(account.id)\n          )\n        : accounts;\n    return filteredAccounts.map((account) => (\n      <SelectOption\n        key={account.id}\n        value={account.id}\n        description={account.displayName}\n      >\n        {account.id}\n      </SelectOption>\n    ));\n  }\n\n  return (\n    <Select\n      id=\"change-permission-owner-select\"\n      variant={SelectVariant.typeahead}\n      onToggle={onToggle}\n      isDisabled={isDisabled}\n      isOpen={isOpen}\n      placeholderText={t(\"select_user_account\")}\n      isCreatable={true}\n      createText={t(\"change_owner_create_text\")}\n      menuAppendTo=\"parent\"\n      maxHeight={400}\n      selections={owner}\n      onSelect={onSelect}\n      onFilter={(_, value) => selectOptions(value)}\n    >\n      {selectOptions()}\n    </Select>\n  );\n};\n","import {\n  Alert,\n  AlertVariant,\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  Skeleton,\n} from \"@patternfly/react-core\";\nimport type { FunctionComponent } from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { SelectOwner } from \"./SelectOwner\";\nimport type { ChangeOwnerErrorMessage, OwnerAccount } from \"./types\";\n\nexport type ChangeKafkaOwnerProps = {\n  currentOwner: string;\n  accounts: OwnerAccount[] | undefined;\n  savingState: \"idle\" | \"saving\" | ChangeOwnerErrorMessage;\n  onConfirm: (newOwner: string) => void;\n  onCancel: () => void;\n};\n\nexport const ChangeKafkaOwner: FunctionComponent<ChangeKafkaOwnerProps> = ({\n  currentOwner,\n  accounts,\n  savingState,\n  onConfirm,\n  onCancel,\n}) => {\n  const { t } = useTranslation([\"kafka\", \"common\"]);\n  const [account, setAccount] = useState<string | undefined>();\n  const submittedAccount = useRef<string>();\n\n  const isSaving = savingState === \"saving\";\n\n  const onConfirmOwner = useCallback(() => {\n    if (account) {\n      submittedAccount.current = account;\n      onConfirm(account);\n    }\n  }, [onConfirm, account]);\n\n  const renderAlert = () => {\n    switch (savingState) {\n      case \"invalid-user\":\n        return (\n          <Alert\n            variant={AlertVariant.danger}\n            aria-live=\"polite\"\n            isInline\n            title={t(\"new_owner_does_not_exist_title\")}\n          >\n            {t(\"new_owner_does_not_exist_message\", {\n              newOwner: submittedAccount.current,\n            })}\n          </Alert>\n        );\n      case \"unknown-error\":\n        return (\n          <Alert\n            variant={AlertVariant.danger}\n            aria-live=\"polite\"\n            isInline\n            title={t(\"can_not_change_owner_title\")}\n          >\n            {t(\"owner_transfer_failed_message\", {\n              name: currentOwner,\n            })}\n          </Alert>\n        );\n    }\n  };\n  return (\n    <Modal\n      id=\"change-owner-modal\"\n      title={t(\"change-owner-title\")}\n      isOpen={true}\n      onClose={onCancel}\n      variant={\"medium\"}\n      position=\"top\"\n      actions={[\n        <Button\n          id=\"confirm-button\"\n          key=\"changeowner\"\n          variant=\"primary\"\n          isDisabled={isSaving}\n          onClick={onConfirmOwner}\n        >\n          {t(\"change-owner-button\")}\n        </Button>,\n        <Button\n          id=\"cancel-button\"\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={onCancel}\n          isDisabled={isSaving}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={(e) => e?.preventDefault()}>\n        {renderAlert()}\n        <FormGroup fieldId=\"Current-owner-name\" label={t(\"current_owner\")}>\n          {currentOwner}\n        </FormGroup>\n        <FormGroup fieldId=\"New-owner-name\" label={t(\"new_owner\")}>\n          {accounts ? (\n            <SelectOwner\n              isDisabled={isSaving}\n              accounts={accounts}\n              owner={account}\n              onChangeOwner={setAccount}\n            />\n          ) : (\n            <Skeleton width={\"100%\"} />\n          )}\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"@rhoas/app-services-ui-components\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { Trans } from \"react-i18next\";\n\nexport type TermsAndConditionsDialogProps = {\n  isOpen: boolean;\n  disableFocusTrap?: boolean;\n  appendTo?: () => HTMLElement;\n  onViewTerms: () => void;\n  onCancel: () => void;\n};\n\nexport const TermsAndConditionsDialog: VoidFunctionComponent<\n  TermsAndConditionsDialogProps\n> = ({ isOpen, disableFocusTrap, appendTo, onViewTerms, onCancel }) => {\n  const { t } = useTranslation(\"terms-and-conditions\");\n\n  return (\n    <Modal\n      aria-label={t(\"title\")}\n      ouiaId={\"terms-and-conditions-dialog\"}\n      variant={ModalVariant.small}\n      isOpen={isOpen}\n      title={t(\"title\")}\n      onClose={onCancel}\n      appendTo={appendTo}\n      disableFocusTrap={disableFocusTrap}\n      actions={[\n        <Button\n          key={\"confirm__button\"}\n          variant={ButtonVariant.primary}\n          onClick={onViewTerms}\n          ouiaId={\"view_terms_and_conditions\"}\n        >\n          {t(\"view_button\")}\n        </Button>,\n        <Button\n          key={\"cancel__button\"}\n          variant={ButtonVariant.link}\n          onClick={onCancel}\n          ouiaId={\"cancel\"}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <Trans\n        ns={\"terms-and-conditions\"}\n        i18nKey={\"body\"}\n        components={{\n          bold: <strong />,\n          br: <br />,\n        }}\n      />\n    </Modal>\n  );\n};\n"],"names":["ControlPlaneRouteRoot","NewInstanceSegment","TermsAndConditionsSegment","ControlPlaneSpecialSegments","ControlPlaneRoutePath","ControlPlaneNewInstancePath","ControlPlaneTermsAndConditionsPath","ControlPlaneDeleteInstancePath","ControlPlaneChangeOwnerPath","DrawerContext","createContext","DrawerProvider","children","match","useRouteMatch","Error","selectedInstance","params","id","includes","undefined","section","instance","useState","isExact","isExpanded","setIsExpanded","activeTab","setActiveTab","onClose","useRef","tokenEndPointUrl","toggleExpanded","useCallback","newValue","prev","current","useEffect","value","useMemo","Provider","onTabChange","tokenEndpointUrl","useDrawer","context","useContext","RedirectOnGateError","redirectUrl","key","useLocation","ErrorBoundary","resetKeys","fallbackRender","RedirectAndResetError","reset","Redirect","to","useUserControlGate","auth","useChrome","getUser","user","username","identity","isOrgAdmin","is_org_admin","userData","suspense","KafkaInstancesRoute","getUrlForInstance","history","useHistory","setActiveQuickStart","QuickStartContext","replace","labels","usePaginationSearchParams","page","perPage","setPagination","setPaginationQuery","resetPaginationQuery","namesChips","useURLSearchParamsChips","ownersChips","statusesChips","useSortableSearchParams","fields","isColumnSortable","sort","sortDirection","data","name","chips","owner","status","direction","onClearAllFilters","clearChained","openDrawer","tab","onDetailsClick","onConnectionsClick","onCreate","push","onDelete","onChangeOwner","onQuickstartGuide","instances","itemCount","count","names","owners","statuses","onPageChange","onSearchName","add","onRemoveNameChip","remove","onRemoveNameChips","clear","onSearchOwner","onRemoveOwnerChip","onRemoveOwnerChips","onSearchStatus","toggle","onRemoveStatusChip","onRemoveStatusChips","isRowSelected","onDetails","onConnection","onClickConnectionTabLink","onClickSupportLink","onInstanceLinkClick","canHaveInstanceLink","canOpenConnection","row","canChangeOwner","canDelete","isUserOwnerOrAdmin","CreateKafkaInstanceRoute","instancesHref","callbacks","getUsername","Promise","reject","checkDeveloperAvailabilityQuery","standardQuotaQuery","providersWithRegionsQuery","getProvidersInfo","getProviderRegionsSizes","checkDeveloperAvailability","onAvailable","onUsed","onUnavailable","checkStandardQuota","onQuotaAvailable","onNoQuotaAvailable","onOutOfQuota","hasTrialQuota","remainingPrepaidQuota","remainingMarketplaceQuota","marketplaceSubscriptions","quota","fetchProvidersWithRegions","plan","providers","getStandardSizes","provider","region","providersInfo","providerInfo","find","p","getTrialSizes","standardSizes","length","displayName","trialSizes","standard","trial","useCreateKafkaCallbacks","createKafkaInstance","qsContext","areTermsAccepted","useSelfTermsReviewGate","onClickKafkaOverview","onClickQuickStart","onSuccess","onError","mutateAsync","onCancel","CreateKafkaInstance","isModalOpen","onClickContactUs","onLearnHowToAddStreamingUnits","onLearnMoreAboutSizes","subscriptionOptionsHref","document","location","href","appendTo","getElementById","body","useControlPlaneGate","DeleteKafkaInstanceRoute","isDeleting","instanceName","TermsAndConditionsRoute","createHref","cancelHref","selfTermsReview","baselinedCreateHref","window","origin","pathname","baselinedCancelHref","termsUrl","onViewTerms","isOpen","ChangeOwnerRoute","accounts","updateInstance","onConfirm","newOwner","mutate","updates","savingState","isLoading","isError","error","type","currentOwner","map","a","ControlPlaneRoutes","Route","path","exact","Suspense","fallback","DataPlaneRoutePath","DataPlaneTopicRoutePath","DataPlaneConsumerGroupRoutePath","DataPlaneTopicConsumerGroupRoutePath","DataPlanePermissionsRoutePath","useDataPlaneGate","DataPlaneHeaderConnected","activeSection","url","sectionsHref","dashboard","topics","consumer","permissions","settings","PermissionsRoute","managePermissionsHref","editPermissionsHref","dispatch","useDispatch","acls","adminUrl","serviceAccounts","userAccounts","userAccount","email","principalType","serviceAccountList","serviceAccount","allAccounts","onDeleteSelected","rowIndex","rowToDelete","groups","instanceId","acl","patternType","resource","permissionType","permission","principal","account","resourceName","operation","resourceType","_","message","addNotification","variant","title","dismissable","onManagePermissionsActionItem","onManagePermission","onManagePermissions","onPerPageChange","TopicsRoute","topicChips","filter","onDeleteTopic","topicName","onEditTopic","getUrlFortopic","onEdit","onSearchTopic","onCreateTopic","onRemoveTopicChip","onRemoveTopicChips","SettingsRoute","onSubmitReAuthentication","reauthenticationEnabled","reauthentication_enabled","request","DashboardRoute","hasUserAlreadyClosedAlert","setHasUserAlreadyClosedAlert","onAlertClose","queryInstance","queryKpisMetrics","queryInstanceMetrics","queryTopicMetrics","queryTopics","getMetricsKpi","kpis","topicPartitionsLimit","maxPartitions","getKafkaInstanceMetrics","interval","duration","selectedBroker","all","metrics","diskSpaceLimit","max_data_retention_size","bytes","connectionsLimit","connections","connectionRateLimit","connectionRate","getTopicsMetrics","selectedTopic","kafkaTopics","t","ConsumerGroupsRoute","groupId","consumerName","onDeletConsumerGroup","instanceConsumerGroupsHref","onViewPartition","onClickResetOffset","consumers","onSearchConsumer","onRemoveConsumerChip","onRemoveConsumerChips","onViewResetOffset","useTopicGate","topic","DataPlaneTopicHeaderConnected","instanceDetailsHref","instanceTopicsHref","tabsHref","messages","properties","schemas","instanceDetailHref","TopicConsumerGroupsRoute","TopicMessagesGroupsRoute","kafkaTopicMessagesFetchQuery","getMessages","partitions","TopicPropertiesRoute","deleteTopicHref","updateTopicHref","TopicSchemasRoute","chrome","processor2","entry","e","basename","srs","getToken","AuthContext","ConfigContext","apiBasePath","I18nProvider","lng","resources","en","common","srsTemporaryFixMe","debug","ScalprumComponent","appName","module","scope","ErrorComponent","processor","renderSchema","registry","version","registryId","useConsumerGroupGate","consumerGroup","consumerGroupId","useAlerts","addAlert","ConsumerGroupDeleteRoute","onDeleteConsumer","state","ConsumerGroupResetOffsetRoute","onConfirmResetOffset","offset","customOffsetValue","Array","from","Set","onClickClose","ConsumerGroupViewPartitionRoute","viewPartitionConsumerGroupHref","consumerGroupByTopic","activeMembers","activeConsumers","partitionsWithLag","laggingPartitions","onSelectDeleteConsumerGroup","onSelectResetOffsetConsumerGroup","useTopicConsumerGroupGate","TopicConsumerGroupDeleteRoute","instanceTopicConsumerGroupsHref","TopicConsumerGroupResetOffsetRoute","TopicConsumerGroupViewPartitionRoute","viewTopicPartitionConsumerGroupHref","DeleteKafkaTopic","props","useTranslation","DeleteModal","confirmationValue","Trans","ns","i18nKey","components","values","TopicDeleteRoute","TopicEditPropertiesRoute","updateTopic","onSave","topicData","availablePartitionLimit","PermissionsEditRoute","consumerGroups","consumerGroupsList","topicsList","updatePermissions","onSaveAcls","aclPermission","deletedPermissions","aclData","aclToDelete","existingAcls","aclsForSelectedAccount","selectedAccount","kafkaName","PermissionsSelectAccountRoute","filteredAccounts","onNext","TopicCreateRoute","createTopic","availabilityZone","az","checkTopicName","onCloseCreateTopic","initialTopicValues","partition","kafkaPageLink","kafkaInstanceLink","topicPropertyHref","topicHref","instanceTopicConsumerGroupHref","permissionsModalHref","DataPlaneRoutes","Switch","render","InvalidObject","OverviewRoute","Routes","memo","updateDocumentTitle","on","register","notifications","unregister","event","console","dir","navId","basePath","getPath","QuickstartLoader","loaded","setLoaded","quickStarts","AssetsContext","item","guides","showDrafts","onLoad","qs","set","init","errorDescriptionKey","middleware","consumerGroupTransformer","stateMapping","lag","memberId","logEndOffset","unassignedPartitions","DEAD","EMPTY","STABLE","UNKNOWN","COMPLETING_REBALANCE","PREPARING_REBALANCE","fetchKafkaKpis","getMetricsByInstantQuery","topicPartitions","items","forEach","metric","fetchKafkaMetrics","getMetricsByRangeQuery","response","safeMetrics","m","broker_id","partition_id","persistentvolumeclaim","brokers","usedDiskSpaceMetrics","connectionAttemptRateMetrics","clientConnectionsMetrics","bytesPerPartitionMetrics","partitionKey","addAggregatedValuesTo","timestamp","addAggregateBrokerBytes","valuesToQuery","field","comparison","v","trim","join","uiColumnMapping","createdAt","fetchKafkas","dataMapper","getKafkas","search","flatMap","s","Boolean","q","filtersToSearch","toString","res","rawInstances","total","apiSizeToComponentSize","isDisabled","apiSize","display_name","quota_consumed","ingress","ingress_throughput_per_sec","egress","egress_throughput_per_sec","storage","Math","round","total_max_connections","max_connection_attempts_per_sec","max_partitions","messageSize","max_message_size","maturity_status","trialDurationHours","lifespan_seconds","fetchProviderRegions","getCloudProviderRegions","instanceType","enabled","capacity","some","c","instance_type","r","max_capacity_reached","available_sizes","isStandardQuota","related_resources","billing_model","isMarketplaceQuota","fetchStandardQuota","api","organizationId","quotaResponse","statusText","standardQuotas","resource_name","product","prepaidQuota","marketplaceQuotas","allowed","consumed","reduce","agg","unaggregatedSubscriptions","cloud_accounts","subscriptionMarketplaces","cloud_provider_id","marketplace","subscriptions","cloud_account_id","fetchTopics","getTopics","topicTransformer","fetchTopicsMetrics","filteredMetrics","bytesIncoming","bytesOutgoing","bytesPerPartition","incomingMessageRate","addAggregatedTotalBytesTo","metricsTopics","fetchUserAccounts","getUserAccounts","fullObject","first_name","last_name","fetchSelfTermsReview","event_code","site_code","terms_required","terms_available","redirect_url","URL","searchParams","ReactQueryDevtoolsProduction","lazy","then","d","default","ReactQueryDevtools","ApiContext","ApiProvider","showDevTools","QueryClientProvider","client","initialIsOpen","useApiConfiguration","masQueries","_root","organization","entity","available","subentity","developerAvailability","standardAvailability","kafkaQueries","list","details","topicMessages","kpi","providerQueries","limits","developer","accessToken","kafkasFleet","DefaultApi","Configuration","token","PrincipalApi","SecurityApi","AppServicesApi","TopicsApi","GroupsApi","AclsApi","records","RecordsApi","useConsumerGroups","refetchInterval","useQuery","queryKey","queryFn","getConsumerGroups","fetchConsumerGroups","args","kafkaRequestToKafkaInstanceEnhanched","developerPlanInstanceLimits","standardPlanInstanceLimits","enhancedInstance","billing","created_at","Date","toISOString","expiryDate","expires_at","BigInt","cloud_provider","size","accepted","preparing","provisioning","ready","failed","deprovision","deleting","updatedAt","updated_at","bootstrapUrl","bootstrap_server_host","admin_api_server_url","multi_az","marketplaceForBilling","ms","billing_cloud_account_id","subscription","warn","thisInstanceLimits","l","size_id","APIErrorCodes","useKafkaInstanceTransformer","getStandardQuotaQuery","useStandardQuotaFetchQuery","useProvidersWithRegionsFetchQuery","useProviderRegionSizesFetchQuery","JSON","stringify","standardQuota","standardPlanLimitsQuery","developerPlanLimitsQuery","standardPlanLimits","developerPlanLimits","useKafka","getKafkaById","useKafkas","queryClient","i","setQueryData","useTopic","getTopic","fetchTopic","useTopics","useUserAccounts","listPrincipals","useConsumerGroup","getConsumerGroupById","fetchConsumerGroup","useAcls","getAcls","fetchPermissions","useServiceAccounts","getServiceAccounts","fetchServiceAccounts","useUser","useSSOProvider","fetch","json","token_url","useSelfTermsReview","apiAuthorizationsV1SelfTermsReviewPost","useDeveloperInstanceAvailabilityFetchQuery","fetchQuery","staleTime","Infinity","k","useKafkaFetchQuery","useKafkaKpisFetchQuery","useKafkaMetricsFetchQuery","useTopicsMetricsFetchQuery","useTopicsFetchQuery","useMessagesFetchQuery","consumeRecords","limit","headers","fetchMessages","kms","regions","regionInfo","availableSizes","sizes","instance_types","bind","fetchProviderRegionSizes","getInstanceTypesByCloudProviderAndRegion","getCloudProviders","allProviders","firstProvider","defaultProvider","skipCache","ams","fetchOrganization","apiAccountsMgmtV1CurrentAccountGet","apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet","useCreateKafkaMutation","useMutation","kafkaRequest","sizeId","createKafka","isServiceApiError","code","DUPLICATE_INSTANCE_NAME","INTERNAL_CAPACITY_ERROR","INSUFFICIENT_QUOTA","invalidateQueries","UNAUTHORIZED_USER","TRIAL_USED","FAILED_TO_CHECK_QUOTA","OWNER_DOES_NOT_EXIST","useDeleteKafkaMutation","deleteKafkaById","useDeleteTopicMutation","deleteTopic","useUpdateKafkaMutation","updateKafkaById","getErrorCode","reason","AxiosError","useDeleteConsumerGroupMutation","deleteConsumerGroupById","useResetConsumerGroupMutation","resetConsumerGroupOffset","useDeletePermissionsMutation","deleteAcls","useUpdatePermissionsMutation","createAcl","useCreateTopicMutation","useUpdateTopicMutation","KafkaInstancesSortableColumns","KafkaTopicsSortableColumns","Object","TopicOrderKey","KafkaConsumerGroupSortableColumns","ConsumerGroupOrderKey","developerDefaults","preallocate","standardDefaults","topicTransformerFactory","cm","fromEntries","config","configValueToMilliseconds","configValueToBytes","configValueToBoolean","configValueToNumber","defaultIfEmpty","defaultIfError","parseInt","parse","convertToTopicSettings","inputObj","keyValuePairs","configEntries","numPartitions","REACT_QUERY_DEVTOOLS","METRICS_LAG_ALERT","isReactQueryDevToolsEanbled","localStorage","getItem","metricsIsLagAlertsDismissed","metricsDismissLagAlerts","setItem","CreatingStatuses","ReadyStatuses","DegradedStatuses","SuspendingStatuses","SuspendedStatuses","DeletingStatuses","ResumingStatuses","SimplifiedStatuses","creating","degraded","suspended","resuming","suspending","ConsumerGroupPopover","description","Popover","headerContent","bodyContent","OutlinedQuestionCircleIcon","ConsumerGroupStateLabel","ConsumerGroupByKafka","columnNames","consumer_id","current_offset","log_end_offset","offset_lag","Stack","hasGutter","DescriptionList","columnModifier","lg","className","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","TableComposable","TableVariant","Thead","noWrap","Tr","Th","width","Tbody","Td","dataLabel","ConsumerGroupByTopic","ConsumerGroupDetails","ConsumerGroupEmptyState","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","CubesIcon","Title","headingLevel","TitleSizes","EmptyStateBody","OffsetSelect","onChange","setIsOpen","offsetValueOption","absolute","latest","earliest","Select","toggleAriaLabel","onToggle","onSelect","selection","SelectVariant","placeholderText","selections","menuAppendTo","entries","label","SelectOption","TopicSelect","index","ConsumerGroupResetOffset","disableFocusTrap","setSelectedTopic","selectedOffset","setSelectedOffset","setcustomOffsetValue","isResetAccepted","setIsResetAccepted","selectedConsumer","setSelectedConsumer","isDisconnected","consumerList","isResetOffsetDisabled","tableColumns","clientId","new_offset","areAllConsumerSelected","isConsumerSelected","onResetOffset","Modal","ModalVariant","showClose","position","actions","Button","onClick","StackItem","Form","isHorizontal","FormGroup","fieldId","TextInput","readOnlyVariant","Alert","isInline","select","_event","isSelecting","onSelectAllConsumer","isSelected","String","Checkbox","isChecked","DeleteConsumerGroup","isConsumerConnected","Text","ConsumerGroupDrawer","dropdownItems","DropdownItem","panelContent","DrawerPanelContent","widths","DrawerHead","TextContent","component","TextVariants","DrawerActions","Dropdown","KebabToggle","isPlain","DropdownPosition","DrawerCloseButton","DrawerPanelBody","Drawer","DrawerContent","DrawerContentBody","useKafkaLabels","statusesSimplified","aws","gcp","azure","providerRegions","useTopicLabels","useConsumerGroupLabels","Columns","ConsumerGroups","isFiltered","PageSection","isFilled","hasOverflowScroll","TableView","tableOuiaId","ariaLabel","columns","renderHeader","column","info","popover","popoverProps","renderCell","renderActions","ActionsColumn","filters","onSearch","onRemoveChip","onRemoveGroup","validate","test","errorMessage","emptyStateNoData","emptyStateNoResults","EmptyStateNoResults","ControlPlaneHeader","PageSectionVariants","hasShadowBottom","stickyOnBreakpoint","Level","LevelItem","onProviderChange","selectedProvider","defaultRegion","capabilities","form","creationError","tsTypes","predictableActionArguments","schema","events","services","initial","states","verifyAvailability","always","cond","target","overQuota","tags","instanceUnavailable","regionsUnavailable","configuring","unsubmitted","submitted","create","invalid","valid","fieldInvalid","submit","saving","createSuccess","createError","saved","empty","nameChange","providerChange","regionChange","idle","disabled","waitingForQuota","loading","invoke","src","onDone","sizeChange","billingChange","prepaidOnly","singleSubscription","onlySubscriptions","selectSubscription","prepaidAndSubscriptions","prepaid","selectPrepaid","setInitialContext","availableProviders","setName","setProvider","setRegion","setSize","setSizes","smallestSize","b","resetCreationErrorMessage","_context","setCreationError","triggerSave","triggerSubmit","triggerBillingChange","setBillingToPrepaid","setBillingToSubscription","unsetSubscription","guards","isOverQuota","instanceAvailability","isInstanceUnavailable","isRegionsUnavailable","nameIsEmpty","nameIsValid","providerIsValid","selectedProviderInfo","regionIsValid","noProviderOrRegion","noSizes","emptySizes","sizeIsDisabled","billingRequiredButNotSelected","meta","hasTag","sizeIsOverQuota","availableQuota","didProviderChange","didRegionChange","didSizeChange","onlyPrepaid","matchesSelectedProviderOrRHMarketplaceAndHasQuota","hasPrepaidQuota","noSelectedProvider","trialUsed","trialUnavailable","isTrialUsed","isTrialUnavailable","noProviderAndRegion","save","complete","setDeveloperAvailable","setDeveloperUnavailable","setDeveloperUsed","setStandardAvailable","setStandardOutOfQuota","setStandardUnavailable","setProviders","setProvidersOrRegionsUnavailable","setCapabilities","notifyCreateErrorToStandardPlan","notifyCreateErrorToTrialPlan","LogoAWS","LogoAzure","LogoGCP","LogoRedhat","AWSLogo","alt","style","height","AzureLogo","GCPLogo","KafkaInstanceActions","rowData","hackZIndex","customChild","DropdownGroup","tooltipProps","content","tooltip","pointerEvents","cursor","isSeparator","actionProps","zIndex","DataPlaneHeader","actionsProps","Breadcrumb","ouiaId","BreadcrumbItem","Link","isActive","padding","Nav","NavList","NavItem","borderTop","DataPlaneTopicHeader","DeleteKafkaInstance","kafka","it","resolve","delete","DetailsTabAlert","hoursLeft","differenceInHours","now","time","FormatDate","date","format","KafkaDetailsTab","kafkaVersion","renderTextListItem","TextListItem","TextListItemVariants","Skeleton","screenreaderText","contentName","TextList","TextListVariants","SuspendedConnection","ExclamationTriangleIcon","color","KafkaConnectionTabP2","isKafkaSuspended","isKafkaPending","externalServer","linkToServiceAccount","linkToAccessTab","adminAPIUrl","kafkaFleetManagerUrl","fontSize","ClipboardCopy","textAriaLabel","isReadOnly","ButtonVariant","startsWith","ExpandableSection","toggleContent","testId","HelpIcon","Label","SampleCodeSnippet","expandableCode","codeBlockCode","codeSnippet","copied","setCopied","copyCode","CodeBlockAction","ClipboardCopyButton","textId","exitDelay","maxWidth","text","navigator","clipboard","writeText","catch","CodeBlock","CodeBlockCode","isDetached","contentId","ExpandableSectionToggle","javaConfigCodeBlock","kafkaBootstrapUrl","pythonConfigCodeBlock","pythonConfigExpandabledBlock","quarkusConfigExpandableBlock","springBootConfigCodeBlock","KafkaSampleCode","clientSelect","setClientSelect","clientProvider","java","python","quarkus","springboot","ToggleGroup","ToggleGroupItem","buttonId","client_type","KafkaInstanceDrawer","KafkaInstanceDrawerPanel","handleSelect","Tabs","activeKey","Tab","eventKey","TabTitleText","parseISO","getExternalServer","getAdminServerUrl","showCreateServiceAccountModal","endsWith","StatusLabel","forwardRef","ref","showWarning","showError","withPopover","buttonVariant","Split","SplitItem","CheckCircleIcon","Spinner","Flex","FlexItem","HelperText","HelperTextItem","PopoverStatusOrder","KafkaToPopoverMapping","StatusProgressStepper","currentStatus","currentStep","findIndex","getVariant","ProgressStepper","isVertical","ProgressStep","titleId","isCurrent","StatusPopoverContent","StatusPopover","initialOpen","reference","isVisible","setIsVisible","handleClickConnectionTabLink","handleClickSupportLink","shouldOpen","shouldClose","enableFlip","SuspendedPopover","alertSeverityVariant","headerIcon","KafkaInstanceStatus","warningAfterMinutes","errorAfterMinutes","popoverStatus","alert","setAlert","labelRef","checkCreatedAt","elapsed","differenceInMinutes","useInterval","EmptyStateNoInstances","PlusCircleIcon","SearchIcon","KafkaInstances","timeCreatedDate","instanceLinkEnable","isAriaDisabled","changeOwnerEnabled","deleteEnabled","openConnectionEnabled","onRowClick","isRowDeleted","toolbarBreakpoint","options","isPrimary","DateTimePicker","timeSelected","setIsTimeSelected","InputGroup","DatePicker","formatInTimeZone","newDate","formatISO","TimePicker","hour","minute","__","isValid","setHours","setMinutes","FilterGroup","epoch","onOffsetChange","onTimestampChange","onEpochChange","onLatest","currentCategory","setCurrentCategory","ToolbarItem","DropdownToggle","autoFocus","DropdownSeparator","placeholder","newOffset","Number","isInteger","LimitSelector","InputGroupText","hidden","idx","isSameMessage","m1","m2","beautifyUnknownValue","RetentionTimeUnits","RetentionSizeUnits","NoDataCell","columnLabel","MessageDetails","defaultTab","isResizable","minSize","MessageDetailsBody","messageKey","isCompact","defaultActiveKey","isCode","random","NoDataEmptyState","onRefresh","NoResultsEmptyState","onReset","OffsetRange","min","max","PartitionSelector","handleChange","valueAsNum","allPartitions","fill","makeOptions","slice","hiddenOptionsCount","handleFilter","typeAheadAriaLabel","maxHeight","onFilter","isInputValuePersisted","onClear","InputGroupTextVariant","UnknownValuePreview","truncateAt","shouldTruncate","substring","truncate","preview","truncated","spaceItems","stopPropagation","MessageBrowserMachine","selectedMessage","initialLoading","fetchSuccess","fetchFail","verifyMessages","noData","refresh","pristine","dirty","shouldSearch","setPartition","setEpoch","setTimestamp","setOffset","setLatest","setLimit","selectMessage","deselectMessage","refreshing","setMessages","offsetMin","offsetMax","lastUpdated","noMessages","selectedMessageNotAvailable","areFiltersChanged","columnWidths","KafkaMessageBrowser","useMachine","devTools","send","KafkaMessageBrowserConnected","isFirstLoad","matches","isNoData","isRefreshing","requiresSearch","filterOffset","filterEpoch","filterTimestamp","setDefaultTab","columnLabels","Loading","OuterScrollContainer","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","FilterIcon","breakpoint","ToolbarGroup","RefreshButton","alignment","InnerScrollContainer","ResponsiveTable","expectedLength","colIndex","keys","KafkaInstanceCapacityTable","firstStreamingUnit","secondStreamingUnit","table","MarketingPageHero","tagLine","description2","heroImage","heroImageSize","heroImageCanRepeat","heroImagePositionY","cta","MarketingPageSection","isWidthLimited","KafkaPageV3","Grid","Card","CardHeader","CardHeaderMain","CardTitle","CardBody","CardFooter","bold","alignSelf","justifyContent","flex","Divider","xl","orientation","EmptyStateNoTopic","PrincipalType","unitsToBytes","BYTE","KIBIBYTE","MEBIBYTE","GIBIBYTE","TEBIBYTE","unitsToMilliSecond","MILLISECOND","SECOND","MINUTE","HOUR","DAY","millisecondsToTime","days","unit","hours","minutes","seconds","formattedRetentionTime","formattedRetentionSize","bytesToMemorySize","tebibytes","gibibytes","mebibytes","kibibytes","KafkaTopics","DurationOptions","createEmptyManageAccessAcl","PermissionsDropdown","onAddPermission","onShortcutConsumeTopic","onShortcutProduceTopic","onShortcutManageAccess","menuRef","handleMenuKeys","contains","handleClickOutside","addEventListener","removeEventListener","onToggleClick","open","ev","setTimeout","firstElement","querySelector","focus","menu","Menu","itemId","MenuContent","MenuList","MenuGroup","MenuItem","splitButtonItems","DropdownToggleAction","preventDefault","splitButtonVariant","Popper","trigger","popper","popperMatchesTriggerWidth","labelColor","DisplayResourceName","PatternType","ResourceCell","PermissionOperationCell","ALLOW","DENY","operations","ALL","READ","WRITE","CREATE","DELETE","ALTER","DESCRIBE","DESCRIBE_CONFIGS","ALTER_CONFIGS","LabelGroup","numLabels","isArray","PrincipalCell","isDeleteEnabled","isAllAccounts","onRemoveAcl","isReviewTable","ServiceAccount","Tooltip","tabIndex","split","InfoCircleIcon","RemoveButton","PermissionsTableEmptyState","openManagePermissions","PermissionsTable","checkedRows","setCheckedRows","kebabActions","onCheck","isRowChecked","SelectAccount","isDirty","setIsDirty","setSelectedAccount","useLayoutEffect","noServiceAccounts","isNoResultsOption","noUserAccounts","filterValue","toLowerCase","serviceAccountOptions","localeCompare","userAccountOperations","UserAccount","SelectGroup","validated","ValidatedOptions","onEscapePress","onSubmit","helperTextInvalid","isRequired","labelIcon","noVerticalAlign","newState","isCreatable","createText","isGrouped","onCreateOption","ResourceName","onChangeValue","resourcePrefixRule","onFetchOptions","setIsNameValid","AsyncTypeaheadSelect","required","onValidationCheck","validationMessage","resourcePreixCondition","regExp","RegExp","validationCheck","ResourceOperation","resourceTypeOptions","ResourcePermission","resourcePermissionOptions","allow","deny","ResourcePrefixRule","resourcePrefixRuleOptions","Is","ResourceType","ShortcutsTableHead","KafkaInstanceManualPermissions","resourceOperation","resourcePermission","onChangeResourceOperation","onChangeResourcePermission","onChangeResourceType","AssignPermissionsManual","resourcePrefix","onChangeResourcePrefix","onChangeResource","onFetchResourceNameOptions","multipleShorctutPermissions","ProduceTopicRow","prefixRuleValue","resourceNameValue","onChangeResourceName","isConsumeTopicShortcut","borderBottom","colSpan","ConsumeTopicShortcut","onChangeConsumerResourceName","topicPrefixRuleValue","topicResourceNameValue","consumerPrefixRuleValue","consumerResourceNameValue","onChangeConsumerResourcePrefixRule","onChangeTopicResourceName","onChangeTopicResourcePrefixRule","onFetchConsumerResourceNameOptions","onFetchTopicResourceNameOptions","ManageAccessShortcut","ProduceTopicShortcut","AssignPermissions","topicNameOptions","consumerGroupNameOptions","onAddManualPermissions","onAddProduceTopicShortcut","onConsumeTopicShortcut","onManageAccessShortcut","addedAcls","setAddedAcls","aclTemplate","resourceValues","consumerResourcePrefixRule","topicResourcePrefixRule","consumerResourceName","topicResourceName","ActionList","ActionListItem","paddingTop","PreCancelModal","closeModal","resumeEditing","titleIconVariant","ReviewPermissionsTable","selectedAccountId","ViewAccountDetails","accountId","transformResourceType","AclResourceType","transformResourceOperation","EditPermissions","escapeClosesModal","isExpandedExistingPermissionSection","setIsExpandedExistingPermissionSection","isAclDeleted","setIsAclDeleted","isExpandedAssignPermissionsSection","setIsExpandedAssignPermissionsSection","isNameValid","canSave","setCanSave","setSubmitted","isOpenPreCancelModal","setIsOpenPreCancelModal","setExistingAcls","newAcls","setNewAcls","deletedAcls","setDeletedAcls","checkValidation","aclsToSave","accountDisplayName","isAclValid","transformAclData","selectedAccountName","transformPermissions","isIndented","Badge","isRead","prevState","updateExistingAcls","toggleText","EmptyStateInitialLoading","EmptyStateMetricsUnavailable","TachometerAltIcon","MetricsLayout","metricsLagAlert","topicsKpi","topicPartitionsKpi","consumerGroupKpi","diskSpaceMetrics","topicMetrics","GridItem","sm","CardBodyLoading","Bullseye","isSVG","timeIntervalsMapping","Last5minutes","ticks","showDate","Last15minutes","Last30minutes","Last1hour","Last3hours","Last6hours","Last12hours","Last24hours","Last2days","Last7days","chartHeight","chartPadding","bottom","left","right","top","ChartSkeletonLoader","useChartWidth","containerRef","setWidth","handleResize","clientWidth","formatBytes","units","shouldShowDate","timeDuration","dateToChartValue","fromUnixTime","timestampsToTicks","timestamps","allTimestamps","mostRecentTs","sub","getTime","ChartLinearWithOptionalLimit","chartName","xLabel","yLabel","usageLimit","formatValue","emptyState","itemsPerRow","lineLabel","limitLabel","legendData","symbol","chart_color_black_500","chart_color_blue_300","areaColor","softLimitColor","chartData","area","softLimit","x","y","tickValues","getChartData","hasMetrics","Chart","ariaTitle","containerComponent","ChartVoronoiContainer","datum","constrainToVisibleArea","legendPosition","legendComponent","ChartLegend","themeColor","ChartTheme","legendAllowWrap","ChartAxis","C","tickFormat","dependentAxis","ChartGroup","ChartArea","ChartThreshold","stroke","colors","chart_color_cyan_300","ChartLogSizePerPartition","selectedPartition","top50Partition","aValue","sum","val","dataMap","dataMapAValues","dataMapBValues","aValueSum","marginTop","ChartLine","ChartPopover","ChartTotalBytes","incomingTopicsData","outgoingTopicsData","incomingTopic","outgoingTopic","incomingTopicName","outgoingTopicName","incomingLine","metricsToLine","line","outgoingLine","chart_color_green_300","getBytesChartData","tickCount","EmptyStateNoMetricsData","EmptyStateNoMetricsDataForSelection","EmptyStateNoTopics","WrenchIcon","EmptyStateNoTopicSelected","FilterByPartition","partitionValue","onSetSelectedPartition","ispartitionSelectOpen","setIspartitionSelectOpen","partitionSelectOption","Top10","Top20","DurationOptionsMap","FilterByTime","keyText","disableToolbar","onDurationChange","isTimeSelectOpen","setIsTimeSelectOpen","ariaId","mapping","timeOptions","md","FilterByTopic","topicList","onSetSelectedTopic","isTopicSelectOpen","setIsTopicSelectOpen","selectKey","setSelectKey","allTopicsLabel","topicOptions","textInput","filteredTopics","indexOf","hasInlineFilter","ToolbarRefresh","ToolbarTopicsMetrics","onSetTimeDuration","CardTopicsMetrics","backendUnavailable","isInitialLoading","isJustCreated","onSelectedTopic","onSelectedPartition","noTopics","selectedTopicNotInList","chartEmptyState","TotalBytesTitle","IncomingMessageRate","PartitionSizeTitle","FilterByBroker","brokerList","onSetSelectedBroker","isBrokerSelectOpen","setIsBrokerSelectOpen","broker","brokerOptions","ToolbarKafkaInstanceMetric","BrokerToggle","ChartPartitionLogSizePerBroker","ChartUsedDiskSpace","brokerToggle","CardKafkaInstanceMetrics","usedDiskMetrics","onSelectedBroker","selectToggle","onSelectedToggle","bytesPerPartitions","ChartTitle","helperText","CardKpi","isFullHeight","shape","apiState","failure","after","KafkaInstanceMetricsMachine","fetchFailures","selectedToggle","callApi","criticalFail","justCreated","withResponse","selectDuration","selectBroker","selectPartition","setFetchTimestamp","setMetrics","incrementRetries","resetRetries","setDuration","setBroker","setToggle","canRetryFetching","TopicsMetricsMachine","selectTopic","setTopic","MetricsKpiMachine","KafkaInstanceMetricsContext","KafkaInstanceMetricsProvider","service","callback","results","MetricsKpiContext","MetricsKpiProvider","TopicsMetricsContext","TopicsMetricsProvider","useKafkaInstanceMetrics","isFailed","onBrokerChange","onSelectToggle","onSelectPartition","useTopicsMetrics","onTopicChange","PartitionCard","ExclamationCircleIcon","isExpandable","AlertVariant","role","MetricsLagAlert","isClosed","actionClose","AlertActionCloseButton","Metrics","ConnectedMetrics","kafkaInstanceMetrics","topicsMetrics","metricsKpi","useMetricsKpi","ConnectedKafkaInstanceMetrics","ConnectedTopicsMetrics","Settings","connectionStatus","setConnectionStatus","setIsModalOpen","handleReAuthentication","reAuthValue","reauthentication","flexWrap","grow","spacer","checked","retentionTimeSelectOptions","isPlaceholder","retentionSizeSelectOptions","CreateTopicHead","showAllOptions","onShowAllOptions","mainBreadcrumbs","labelOff","PartitionLimitWarning","handleModalToggle","retentionTimeTransformer","TextWithLabelPopover","fieldLabel","btnAriaLabel","fieldValue","popoverBody","popoverHeader","displayText","Cleanup","defaultFileDeleteDelay","defaultLogSegmentSize","defaultSegmentJitterTime","defaultSegmentTime","FormSection","titleElement","gibibyte","milliseconds","CustomRetentionMessage","customTimeValue","setCustomTimeValue","isRetentionTimeSelectOpen","setIsRetentionTimeSelectOpen","onRetentionTimeToggle","input","inputValue","CustomRetentionSize","customRetentionSizeValue","setCustomRetentionSizeValue","isRetentionSizeSelectOpen","setIsRetentionSizeSelectOpen","onRetentionSizeToggle","useValidateTopic","validateName","legalNameChars","CoreConfiguration","isCreate","setTopicData","invalidText","setInvalidText","setTopicValidated","topicValidated","radioTimeSelectValue","setRadioTimeSelectValue","radioSizeSelectValue","setRadioSizeSelectValue","initialPartitions","handleRetentionMessageTime","handleRetentionMessageSize","retentionTimeInput","retentionSizeInput","labelHead","labelBody","buttonAriaLabel","NumberInput","inputName","updatedPartitions","onPlus","currentPartitions","onMinus","newPartitions","plusBtnProps","minusBtnProps","Radio","Flush","defaultFlushIntervalMessages","defaultFlushIntervalTime","Log","defaultDeleteRetentionTime","defaultMinCleanbleRatio","defaultMinimumCompactionLagTime","cleanupPolicyOptions","DropdownWithToggle","toggleId","onSelectOption","isLabelAndValueNotSame","Message","defaultMaximumMessageBytes","defaultMessageTimestampType","defaultMaxMessageTimestampDiff","Replication","TopicAdvanceIndex","defaultIndexIntervalSize","defaultSegmentIndexSize","TopicAdvanceJumpLinks","canHaveDelete","SidebarPanel","JumpLinks","scrollableSelector","JumpLinksItem","TopicAdvancePage","handleCancel","actionText","setIsLoading","warning","setWarning","Sidebar","SidebarContent","PageGroup","ActionGroup","retentionSizeTransformer","CreateTopicWizard","isSwitchChecked","initialFieldsValue","topicNameValidated","setTopicNameValidated","warningModalOpen","setWarningModalOpen","closeWizard","steps","enableNext","StepTopicName","newTopicData","onTopicNameChange","canJumpTo","StepPartitions","onPartitionsChange","StepMessageRetention","StepReplicas","minInSyncReplica","nextButtonText","onTransform","tranformedValueInMilliseconds","tranformedValueInBytes","transformedTopic","onSaveTopic","PageSectionTypes","Wizard","navAriaLabel","mainAriaLabel","footer","WizardCustomFooter","onValidate","retentionTime","newPartitionCount","widthChars","onBlur","WizardFooter","WizardContextConsumer","activeStep","onBack","CreateTopic","setIsSwitchChecked","EditTopicProperties","millisecondsToTimeValue","bytesToSizeValue","TopicProperties","showUnlimited","SelectOwner","selectOptions","filterRegExp","ChangeKafkaOwner","setAccount","submittedAccount","isSaving","onConfirmOwner","renderAlert","TermsAndConditionsDialog","br"],"sourceRoot":""}