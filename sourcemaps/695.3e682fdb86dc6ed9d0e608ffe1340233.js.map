{"version":3,"file":"js/695.fba28bf6e87015a111cd.js","mappings":"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","sources":["webpack:///../../node_modules/fast-safe-stringify/index.js","webpack:///../../node_modules/@xstate/inspect/es/_virtual/_tslib.js","webpack:///../../node_modules/@xstate/inspect/es/utils.js","webpack:///../../node_modules/@xstate/inspect/es/serialize.js","webpack:///../../node_modules/@xstate/inspect/es/browser.js","webpack:///../../packages/ui/src/hooks/XStateInspector.tsx","webpack:///../../node_modules/@xstate/inspect/es/inspectMachine.js"],"sourcesContent":["module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar LIMIT_REPLACE_NODE = '[...]'\nvar CIRCULAR_REPLACE_NODE = '[Circular]'\n\nvar arr = []\nvar replacerStack = []\n\nfunction defaultOptions () {\n  return {\n    depthLimit: Number.MAX_SAFE_INTEGER,\n    edgesLimit: Number.MAX_SAFE_INTEGER\n  }\n}\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  decirc(obj, '', 0, [], undefined, 0, options)\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer)\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction setReplace (replace, val, k, parent) {\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n  if (propertyDescriptor.get !== undefined) {\n    if (propertyDescriptor.configurable) {\n      Object.defineProperty(parent, k, { value: replace })\n      arr.push([parent, k, val, propertyDescriptor])\n    } else {\n      replacerStack.push([val, k, replace])\n    }\n  } else {\n    parent[k] = replace\n    arr.push([parent, k, val])\n  }\n}\n\nfunction decirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, i, stack, val, depth, options)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer)\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n    try {\n      if (typeof val.toJSON === 'function') {\n        return\n      }\n    } catch (_) {\n      return\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, i, stack, val, depth, options)\n        tmp[key] = val[key]\n      }\n      if (typeof parent !== 'undefined') {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues (replacer) {\n  replacer =\n    typeof replacer !== 'undefined'\n      ? replacer\n      : function (k, v) {\n        return v\n      }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = part[2]\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\n\nexport { __assign, __rest, __values };\n","import { __assign } from './_virtual/_tslib.js';\nimport safeStringify from 'fast-safe-stringify';\nimport { createMachine, State } from 'xstate';\n\nfunction getLazy(value) {\r\n    return typeof value === 'function' ? value() : value;\r\n}\r\nfunction stringify(value, replacer) {\r\n    try {\r\n        return JSON.stringify(value, replacer);\r\n    }\r\n    catch (e) {\r\n        return safeStringify(value, replacer);\r\n    }\r\n}\r\nfunction isReceiverEvent(event) {\r\n    if (!event) {\r\n        return false;\r\n    }\r\n    try {\r\n        if (typeof event === 'object' &&\r\n            'type' in event &&\r\n            event.type.startsWith('service.')) {\r\n            return true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    return false;\r\n}\r\nfunction parseState(stateJSON) {\r\n    var state = State.create(JSON.parse(stateJSON));\r\n    delete state.history;\r\n    return state;\r\n}\r\nfunction parseReceiverEvent(event) {\r\n    switch (event.type) {\r\n        case 'service.event':\r\n            return __assign(__assign({}, event), { event: JSON.parse(event.event) });\r\n        case 'service.register':\r\n            return __assign(__assign({}, event), { machine: createMachine(JSON.parse(event.machine)), state: parseState(event.state) });\r\n        case 'service.state':\r\n            return __assign(__assign({}, event), { state: parseState(event.state) });\r\n        default:\r\n            return event;\r\n    }\r\n}\n\nexport { getLazy, isReceiverEvent, parseReceiverEvent, parseState, stringify };\n","import { __assign, __values, __rest } from './_virtual/_tslib.js';\nimport { stringify } from './utils.js';\n\nfunction selectivelyStringify(value, keys, replacer) {\r\n    var e_1, _a;\r\n    var selected = {};\r\n    try {\r\n        for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\r\n            var key = keys_1_1.value;\r\n            selected[key] = value[key];\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    var serialized = JSON.parse(stringify(selected, replacer));\r\n    return stringify(__assign(__assign({}, value), serialized));\r\n}\r\nfunction stringifyState(state, replacer) {\r\n    state.machine; state.configuration; state.history; var stateToStringify = __rest(state, [\"machine\", \"configuration\", \"history\"]);\r\n    return selectivelyStringify(stateToStringify, ['context', 'event', '_event'], replacer);\r\n}\r\nfunction stringifyMachine(machine, replacer) {\r\n    return selectivelyStringify(machine.definition, ['context'], replacer);\r\n}\n\nexport { selectivelyStringify, stringifyMachine, stringifyState };\n","import { __assign } from './_virtual/_tslib.js';\nimport { interpret, toSCXMLEvent, toEventObject, toObserver, toActorRef } from 'xstate';\nimport { createInspectMachine } from './inspectMachine.js';\nimport { stringifyMachine, stringifyState } from './serialize.js';\nimport { getLazy, stringify, isReceiverEvent, parseReceiverEvent } from './utils.js';\n\nvar serviceMap = new Map();\r\nfunction createDevTools() {\r\n    var services = new Set();\r\n    var serviceListeners = new Set();\r\n    return {\r\n        services: services,\r\n        register: function (service) {\r\n            services.add(service);\r\n            serviceMap.set(service.sessionId, service);\r\n            serviceListeners.forEach(function (listener) { return listener(service); });\r\n            service.onStop(function () {\r\n                services.delete(service);\r\n                serviceMap.delete(service.sessionId);\r\n            });\r\n        },\r\n        unregister: function (service) {\r\n            services.delete(service);\r\n            serviceMap.delete(service.sessionId);\r\n        },\r\n        onRegister: function (listener) {\r\n            serviceListeners.add(listener);\r\n            services.forEach(function (service) { return listener(service); });\r\n            return {\r\n                unsubscribe: function () {\r\n                    serviceListeners.delete(listener);\r\n                }\r\n            };\r\n        }\r\n    };\r\n}\r\nvar defaultInspectorOptions = {\r\n    url: 'https://stately.ai/viz?inspect',\r\n    iframe: function () {\r\n        return document.querySelector('iframe[data-xstate]');\r\n    },\r\n    devTools: function () {\r\n        var devTools = createDevTools();\r\n        globalThis.__xstate__ = devTools;\r\n        return devTools;\r\n    },\r\n    serialize: undefined\r\n};\r\nvar getFinalOptions = function (options) {\r\n    var withDefaults = __assign(__assign({}, defaultInspectorOptions), options);\r\n    return __assign(__assign({}, withDefaults), { url: new URL(withDefaults.url), iframe: getLazy(withDefaults.iframe), devTools: getLazy(withDefaults.devTools) });\r\n};\r\nvar patchedInterpreters = new Set();\r\nfunction inspect(options) {\r\n    var _a = getFinalOptions(options), iframe = _a.iframe, url = _a.url, devTools = _a.devTools;\r\n    if (iframe === null) {\r\n        console.warn('No suitable <iframe> found to embed the inspector. Please pass an <iframe> element to `inspect(iframe)` or create an <iframe data-xstate></iframe> element.');\r\n        return undefined;\r\n    }\r\n    var inspectMachine = createInspectMachine(devTools, options);\r\n    var inspectService = interpret(inspectMachine).start();\r\n    var listeners = new Set();\r\n    var sub = inspectService.subscribe(function (state) {\r\n        listeners.forEach(function (listener) { return listener.next(state); });\r\n    });\r\n    var targetWindow;\r\n    var client;\r\n    var messageHandler = function (event) {\r\n        if (typeof event.data === 'object' &&\r\n            event.data !== null &&\r\n            'type' in event.data) {\r\n            if (iframe && !targetWindow) {\r\n                targetWindow = iframe.contentWindow;\r\n            }\r\n            if (!client) {\r\n                client = {\r\n                    send: function (e) {\r\n                        targetWindow.postMessage(e, url.origin);\r\n                    }\r\n                };\r\n            }\r\n            var inspectEvent = __assign(__assign({}, event.data), { client: client });\r\n            inspectService.send(inspectEvent);\r\n        }\r\n    };\r\n    window.addEventListener('message', messageHandler);\r\n    window.addEventListener('unload', function () {\r\n        inspectService.send({ type: 'unload' });\r\n    });\r\n    var stringifyWithSerializer = function (value) {\r\n        return stringify(value, options === null || options === void 0 ? void 0 : options.serialize);\r\n    };\r\n    devTools.onRegister(function (service) {\r\n        var _a;\r\n        var state = service.state || service.initialState;\r\n        inspectService.send({\r\n            type: 'service.register',\r\n            machine: stringifyMachine(service.machine, options === null || options === void 0 ? void 0 : options.serialize),\r\n            state: stringifyState(state, options === null || options === void 0 ? void 0 : options.serialize),\r\n            sessionId: service.sessionId,\r\n            id: service.id,\r\n            parent: (_a = service.parent) === null || _a === void 0 ? void 0 : _a.sessionId\r\n        });\r\n        inspectService.send({\r\n            type: 'service.event',\r\n            event: stringifyWithSerializer(state._event),\r\n            sessionId: service.sessionId\r\n        });\r\n        if (!patchedInterpreters.has(service)) {\r\n            patchedInterpreters.add(service);\r\n            // monkey-patch service.send so that we know when an event was sent\r\n            // to a service *before* it is processed, since other events might occur\r\n            // while the sent one is being processed, which throws the order off\r\n            var originalSend_1 = service.send.bind(service);\r\n            service.send = function inspectSend(event, payload) {\r\n                inspectService.send({\r\n                    type: 'service.event',\r\n                    event: stringifyWithSerializer(toSCXMLEvent(toEventObject(event, payload))),\r\n                    sessionId: service.sessionId\r\n                });\r\n                return originalSend_1(event, payload);\r\n            };\r\n        }\r\n        service.subscribe(function (state) {\r\n            // filter out synchronous notification from within `.start()` call\r\n            // when the `service.state` has not yet been assigned\r\n            if (state === undefined) {\r\n                return;\r\n            }\r\n            inspectService.send({\r\n                type: 'service.state',\r\n                // TODO: investigate usage of structuredClone in browsers if available\r\n                state: stringifyState(state, options === null || options === void 0 ? void 0 : options.serialize),\r\n                sessionId: service.sessionId\r\n            });\r\n        });\r\n        service.onStop(function () {\r\n            inspectService.send({\r\n                type: 'service.stop',\r\n                sessionId: service.sessionId\r\n            });\r\n        });\r\n    });\r\n    if (iframe) {\r\n        iframe.addEventListener('load', function () {\r\n            targetWindow = iframe.contentWindow;\r\n        });\r\n        iframe.setAttribute('src', String(url));\r\n    }\r\n    else {\r\n        targetWindow = window.open(String(url), 'xstateinspector');\r\n    }\r\n    return {\r\n        send: function (event) {\r\n            inspectService.send(event);\r\n        },\r\n        subscribe: function (next, onError, onComplete) {\r\n            var observer = toObserver(next, onError, onComplete);\r\n            listeners.add(observer);\r\n            observer.next(inspectService.state);\r\n            return {\r\n                unsubscribe: function () {\r\n                    listeners.delete(observer);\r\n                }\r\n            };\r\n        },\r\n        disconnect: function () {\r\n            inspectService.send('disconnect');\r\n            window.removeEventListener('message', messageHandler);\r\n            sub.unsubscribe();\r\n        }\r\n    };\r\n}\r\nfunction createWindowReceiver(options) {\r\n    var _a = options || {}, _b = _a.window, ownWindow = _b === void 0 ? window : _b, _c = _a.targetWindow, targetWindow = _c === void 0 ? window.self === window.top ? window.opener : window.parent : _c;\r\n    var observers = new Set();\r\n    var latestEvent;\r\n    var handler = function (event) {\r\n        var data = event.data;\r\n        if (isReceiverEvent(data)) {\r\n            latestEvent = parseReceiverEvent(data);\r\n            observers.forEach(function (listener) { return listener.next(latestEvent); });\r\n        }\r\n    };\r\n    ownWindow.addEventListener('message', handler);\r\n    var actorRef = toActorRef({\r\n        id: 'xstate.windowReceiver',\r\n        send: function (event) {\r\n            if (!targetWindow) {\r\n                return;\r\n            }\r\n            targetWindow.postMessage(event, '*');\r\n        },\r\n        subscribe: function (next, onError, onComplete) {\r\n            var observer = toObserver(next, onError, onComplete);\r\n            observers.add(observer);\r\n            return {\r\n                unsubscribe: function () {\r\n                    observers.delete(observer);\r\n                }\r\n            };\r\n        },\r\n        stop: function () {\r\n            observers.clear();\r\n            ownWindow.removeEventListener('message', handler);\r\n        },\r\n        getSnapshot: function () {\r\n            return latestEvent;\r\n        }\r\n    });\r\n    actorRef.send({\r\n        type: 'xstate.inspecting'\r\n    });\r\n    return actorRef;\r\n}\r\nfunction createWebSocketReceiver(options) {\r\n    var _a = options.protocol, protocol = _a === void 0 ? 'ws' : _a;\r\n    var ws = new WebSocket(\"\".concat(protocol, \"://\").concat(options.server));\r\n    var observers = new Set();\r\n    var latestEvent;\r\n    var actorRef = toActorRef({\r\n        id: 'xstate.webSocketReceiver',\r\n        send: function (event) {\r\n            ws.send(stringify(event, options.serialize));\r\n        },\r\n        subscribe: function (next, onError, onComplete) {\r\n            var observer = toObserver(next, onError, onComplete);\r\n            observers.add(observer);\r\n            return {\r\n                unsubscribe: function () {\r\n                    observers.delete(observer);\r\n                }\r\n            };\r\n        },\r\n        getSnapshot: function () {\r\n            return latestEvent;\r\n        }\r\n    });\r\n    ws.onopen = function () {\r\n        actorRef.send({\r\n            type: 'xstate.inspecting'\r\n        });\r\n    };\r\n    ws.onmessage = function (event) {\r\n        if (typeof event.data !== 'string') {\r\n            return;\r\n        }\r\n        try {\r\n            var eventObject = JSON.parse(event.data);\r\n            if (isReceiverEvent(eventObject)) {\r\n                latestEvent = parseReceiverEvent(eventObject);\r\n                observers.forEach(function (observer) {\r\n                    observer.next(latestEvent);\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n    ws.onerror = function (err) {\r\n        observers.forEach(function (observer) {\r\n            var _a;\r\n            (_a = observer.error) === null || _a === void 0 ? void 0 : _a.call(observer, err);\r\n        });\r\n    };\r\n    return actorRef;\r\n}\n\nexport { createDevTools, createWebSocketReceiver, createWindowReceiver, inspect, serviceMap };\n","import { inspect } from \"@xstate/inspect\";\nimport type { VoidFunctionComponent } from \"react\";\nimport { useEffect, useState } from \"react\";\n\nexport const XStateInspector: VoidFunctionComponent = () => {\n  const [popup, setPopup] = useState(false);\n  useEffect(() => {\n    const inspector = inspect({\n      iframe: popup\n        ? false\n        : () =>\n            document.getElementById(\n              \"mas-xstate-inspector\"\n            ) as HTMLIFrameElement,\n    });\n    return () => {\n      inspector && inspector.disconnect();\n    };\n  }, [popup]);\n  return (\n    <div\n      style={{\n        height: \"50vh\",\n        resize: \"vertical\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        overflow: \"auto\",\n        backgroundColor: \"red\",\n      }}\n    >\n      <iframe id={\"mas-xstate-inspector\"} style={{ flex: \"1\" }} />\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={popup}\n          onChange={() => setPopup((v) => !v)}\n        />{\" \"}\n        open in popup\n      </label>\n    </div>\n  );\n};\n\nexport default XStateInspector;\n","import { createMachine, assign } from 'xstate';\nimport { stringifyMachine, stringifyState } from './serialize.js';\n\nfunction createInspectMachine(devTools, options) {\r\n    if (devTools === void 0) { devTools = globalThis.__xstate__; }\r\n    var serviceMap = new Map();\r\n    // Listen for services being registered and index them\r\n    // by their sessionId for quicker lookup\r\n    var sub = devTools.onRegister(function (service) {\r\n        serviceMap.set(service.sessionId, service);\r\n    });\r\n    return createMachine({\r\n        initial: 'pendingConnection',\r\n        context: {\r\n            client: undefined\r\n        },\r\n        states: {\r\n            pendingConnection: {},\r\n            connected: {\r\n                on: {\r\n                    'service.state': {\r\n                        actions: function (ctx, e) { return ctx.client.send(e); }\r\n                    },\r\n                    'service.event': {\r\n                        actions: function (ctx, e) { return ctx.client.send(e); }\r\n                    },\r\n                    'service.register': {\r\n                        actions: function (ctx, e) { return ctx.client.send(e); }\r\n                    },\r\n                    'service.stop': {\r\n                        actions: function (ctx, e) { return ctx.client.send(e); }\r\n                    },\r\n                    'xstate.event': {\r\n                        actions: function (_, e) {\r\n                            var event = e.event;\r\n                            var scxmlEventObject = JSON.parse(event);\r\n                            var service = serviceMap.get(scxmlEventObject.origin);\r\n                            service === null || service === void 0 ? void 0 : service.send(scxmlEventObject);\r\n                        }\r\n                    },\r\n                    unload: {\r\n                        actions: function (ctx) {\r\n                            ctx.client.send({ type: 'xstate.disconnect' });\r\n                        }\r\n                    },\r\n                    disconnect: 'disconnected'\r\n                }\r\n            },\r\n            disconnected: {\r\n                entry: function () {\r\n                    sub.unsubscribe();\r\n                },\r\n                type: 'final'\r\n            }\r\n        },\r\n        on: {\r\n            'xstate.inspecting': {\r\n                target: '.connected',\r\n                actions: [\r\n                    assign({\r\n                        client: function (_, e) { return e.client; }\r\n                    }),\r\n                    function (ctx) {\r\n                        devTools.services.forEach(function (service) {\r\n                            var _a;\r\n                            (_a = ctx.client) === null || _a === void 0 ? void 0 : _a.send({\r\n                                type: 'service.register',\r\n                                machine: stringifyMachine(service.machine, options === null || options === void 0 ? void 0 : options.serialize),\r\n                                state: stringifyState(service.state || service.initialState, options === null || options === void 0 ? void 0 : options.serialize),\r\n                                sessionId: service.sessionId\r\n                            });\r\n                        });\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    });\r\n}\n\nexport { createInspectMachine };\n"],"names":["module","exports","stringify","default","stable","deterministicStringify","stableStringify","LIMIT_REPLACE_NODE","CIRCULAR_REPLACE_NODE","arr","replacerStack","defaultOptions","depthLimit","Number","MAX_SAFE_INTEGER","edgesLimit","obj","replacer","spacer","options","res","decirc","undefined","length","JSON","replaceGetterValues","_","part","pop","Object","defineProperty","setReplace","replace","val","k","parent","propertyDescriptor","getOwnPropertyDescriptor","get","configurable","value","push","edgeIndex","stack","depth","i","Array","isArray","keys","key","compareFunction","a","b","tmp","deterministicDecirc","toJSON","sort","v","splice","call","this","assign","t","s","n","arguments","p","prototype","hasOwnProperty","apply","getLazy","e","selectivelyStringify","e_1","_a","selected","keys_1","o","Symbol","iterator","m","next","done","TypeError","__values","keys_1_1","e_1_1","error","return","serialized","parse","stringifyState","state","machine","configuration","history","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","stringifyMachine","definition","serviceMap","Map","defaultInspectorOptions","url","iframe","document","querySelector","devTools","services","serviceListeners","Set","register","service","add","set","sessionId","forEach","listener","onStop","delete","unregister","onRegister","unsubscribe","globalThis","__xstate__","serialize","patchedInterpreters","XStateInspector","useState","popup","setPopup","useEffect","inspector","withDefaults","URL","getFinalOptions","targetWindow","client","inspectMachine","sub","initial","context","states","pendingConnection","connected","on","actions","ctx","send","event","scxmlEventObject","origin","unload","type","disconnect","disconnected","entry","target","initialState","createInspectMachine","inspectService","start","listeners","subscribe","messageHandler","data","contentWindow","postMessage","inspectEvent","window","addEventListener","stringifyWithSerializer","id","_event","has","originalSend_1","bind","payload","setAttribute","String","open","onError","onComplete","observer","removeEventListener","console","warn","inspect","getElementById","style","height","resize","display","flexFlow","overflow","backgroundColor","flex","checked","onChange"],"sourceRoot":""}